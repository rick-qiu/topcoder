/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=10572
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class HamiltonPath {
public:
    int countPaths(vector<string> roads);
};

int HamiltonPath::countPaths(vector<string> roads) {
    int ret;
    return ret;
}


int test0() {
    vector<string> roads = {"NYN", "YNN", "NNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<string> roads = {"NYYY", "YNNN", "YNNN", "YNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<string> roads = {"NYY", "YNY", "YYN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<string> roads = {"NNNNNY", "NNNNYN", "NNNNYN", "NNNNNN", "NYYNNN", "YNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 24;
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<string> roads = {};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<string> roads = {"NY", "YN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<string> roads = {};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<string> roads = {};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<string> roads = {"NNNYNNYNNNNNNNNNNYNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNNNNNNNNYNNNNNNNNNNNNNNNNN", "NNNNNNNNYNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNYNNNNNNNNN", "YNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNYNNNNNNNNNNNNNNNNNNNNNN", "NNNYNNNNNNNNNNYNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNYNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNYNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNNNNYNNNNNYNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<string> roads = {};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<string> roads = {"NNNNNNNYNNNNNNNNNNNNN", "NNYNNNNNNNNNNNNNNNNNN", "NYNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNYNNNNNNNNNNNN", "YNNNNNNNNNNNNNYNNNNNN", "NNNNNNYNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNN", "NNNNNNNYNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNYN", "NNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNYNNN", "NNNNNNNNNNNNNNNNNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 635864652;
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<string> roads = {};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<string> roads = {};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<string> roads = {"NNNY", "NNNY", "NNNY", "YYYN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<string> roads = {"NNNNNYNNNNNNNNN", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN", "YNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNY", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNY", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN", "NNNNNNYNYNNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 916006393;
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<string> roads = {"NNNYNNNYNNNNN", "NNNNNNNNNNNNN", "NNNNNNNNNNNNN", "YNNNNNNNNNNYN", "NNNNNYNYNNNNN", "NNNNYNNNNNNNY", "NNNNNNNNNNNNN", "YNNNYNNNNNNNN", "NNNNNNNNNNNNN", "NNNNNNNNNNNNN", "NNNNNNNNNNNYY", "NNNYNNNNNNYNN", "NNNNNYNNNNYNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<string> roads = {};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<string> roads = {};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<string> roads = {"NNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNN", "NNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNN", "NNNNNNNNNNNYNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNYNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNYNNYNNNNNNNNNYNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNYNNNNNN", "NNNNNNNNNNNNNNYNNYNNNNNNNNNNNNNNYNNNNNNYNNNNNNNNN", "NNNNNNNNNNNNNNNNYYNYNNNNNNNNNNNNNNNYNNNNNNNNNNNNN", "NYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNN", "NNYNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNYNN", "NNNNNNNNYYNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNN", "NNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNYNNNNNNNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNYNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNN", "NNNYNNNYNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNYNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNYNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYYNNNNNN", "NNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNN", "NNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNYNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNYNNNNNNNNNNYNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNYNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNYNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNYNNNNNNNNNN", "NNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNYNNN", "NNNNNNNNYNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNYNNNNNNNNYYNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNYNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNYNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNYNNNNNNNNNN", "NNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNN", "NNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNY", "NNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNYN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<string> roads = {"NNNYNNNNNNNNNNNNNNNNYNNNNNYNNYNNNNNN", "NNNNNNNNNYNNNNNNNNNNNNNNNNNNYNNNNNNN", "NNNNNNNNNNNNNNNNNNNNYYNNNNNNNNNNNNNY", "YNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNYNNNNNNNNNNNNNNNNNNYNNNNN", "NNNNNNNNNNNNNNNNNNYYNNNNNNNNNNNNNNNN", "NNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNYN", "NNNNNNYNNNNNYNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNYYNNNNNNNNNNN", "NYNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNYNNNNNNNNNNNYNNNNNNN", "NNNNYNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNN", "NNNNNNNYNYNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNYNNNYYNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNYNN", "NNNYNNNNNNNNNNNNNYNNNNNNNYNNNNNNNNNN", "NNNNNNNNNNYNNNNNNNYNNNNNNNNNNNNYNNNN", "NNNNNNNNNNNNNNNYNNNNNNNNNNYNNNNNYNNN", "NNNNNYNNNNNNNNNNYNNNNNNNNNNNNNNNNNNN", "NNNNNYNNNNNNNNNNNNNNNYNNNNNNNNNNNNNN", "YNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNYNNNNNYNNNNNN", "NNNNNNNNYNNNNNNNNNNNNNYNNNNNNNNNNNNN", "NNNNNNNNYNNNNNYNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNYNNNYNNNNNNNNNNNNNNNNNNNY", "YNNNNNNNNNNNNYNNNYNNNNNNNNNNNNNNNNNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYYNY", "NYNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNN", "YNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNYN", "NNNNYNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNYNNYNNNNNNNNNNNNNNNYNNN", "NNNNNNNNNNNNNNNNNYNNNNNNNNNYNNNYNNNN", "NNNNNNNNNNNNNNYNNNNNNNNNNNNYNNNNNNNN", "NNNNNNYNNNNNNNNNNNNNNNNNNNNNNYNNNNNN", "NNYNNNNNNNNNNNNNNNNNNNNNNYYYNNNNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<string> roads = {"NNNNNNNNNYNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNN", "NNNYNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNYNNNNN", "NNNNNNNNNNYNNNNNNNYNNNNNNNNNNNNNNNNNNNNNN", "NYNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNYNNNNNNNNNNNNNNNYNNYNYNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNYNYNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNY", "NNNNYNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNN", "YNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNN", "NNYNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNN", "NNNYNNNNNNNNNNNYNNNNNNNNNNNNNNNNNYNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNYNYNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNYNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNYNY", "NNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNYNYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNYNN", "NNYNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNYNNNNNNNNYNNNNNNNNNNNNNN", "NNNNNYYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNYNNNN", "NNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNYNN", "YNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNYNNN", "NYNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNN", "NNNNYNNNYNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNN", "NNNNYNNNNNNNYNNNNNYNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNYNYNNNNNNNNNNNNNNN", "NNNNNNNNNYNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNYNNNNN", "NNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNYNNNNNNNN", "NNNNNNNNNNNNNYNNNNNNNNNNNNNNYNNNNNNNNNNNN", "NYNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNYNNNNNNNN", "NNNNNNNNNNNNNYNNNNNNNYNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNYNNNNNNNNNYNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNYNNYNNNNNYNNNNNNNNNNNNNNNNN", "NNNNNNYNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNYYNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<string> roads = {};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<string> roads = {};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 771752869;
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<string> roads = {"NNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNYNNYNNNNNNNNNNNNNNNNNNNNNN", "NNYNNNNNNYNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNYNNNN", "NNNNNNNNNYNNNNNNNNNNNNNNNNNNN", "NNYNNNNNNNNNYNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNYNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNYNYNNNNNYNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNYNNNNNNNNNNNNNYNNNNN", "NNNNNNYNNNNNNNNNNNNNNNNYNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNYNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNYNNNNNNYNNNNNNNNNNNYNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNYYNNNNNNNNNNNNNNNN", "NNNNYNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNYNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<string> roads = {};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 239547902;
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<string> roads = {};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 837887469;
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<string> roads = {"NNYNNNNNNNNNNNNNNNNNNNNYNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNYNNNNNNNNNNNNNNNNNNNNNYNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNYNNNNNNNNNNNNNNNNNNNNNNNNYN", "NNNNNNNNNNNNNNYNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNYNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNYNNNNN", "NNNNNNNNNNNNNNNNNNNNYYNNNNNNNN", "NNNNNNNNYNNNNNNNNNNNNNNNNNYNNN", "NNNNNNNNNNNNNNNYNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNYNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNYNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNYNNN", "NNNNNNNNNNNNNNNNNNNNNYNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNYNNNN", "NNNNNNNNNNYNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNYNNNNNNYNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNYNNNNNNNNNNNNNNNNNNNY", "NNNNNNNNNNNNNNNNNNNYNNNNNNNNNN", "NNNNNNNNNNNYNNNNYNNNNNNNNNNNNN", "NNNYNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNYNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNYNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 642390981;
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<string> roads = {"NNNNNNYNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNN", "NNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNN", "NNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNYNNNN", "NNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNYNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNYNNNNNNNNNYNNNNNNNNNNNNNNNNNN", "NNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNYNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNYNNNNNN", "NNNNNNNNYNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNYNNNNNNNYNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNYNN", "NNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNN", "NNYNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNYNNNNNNNYNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNYNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYY", "NNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNN", "NNNNNNNNNNNNNNNNNNYNNNNNYNNNNNNNNNNNNNNNNNNNN", "NNNNNNNYNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNYYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNYNNNNNNNNN", "YNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNYNNN", "NNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNYNN", "NNNNNNNNNNNNYNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNY", "NNNNNNNNNNNNNNNNNNNNNYYNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNYNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNN", "NNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNYNNNNNNNNNYNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNYNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNYNNNNNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 23040;
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<string> roads = {};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 999134230;
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<string> roads = {"NNNNNNNNNNNN", "NNNNNNNNNNNN", "NNNNNNNNNNNN", "NNNNNNNNNNYN", "NNNNNNNNNNNN", "NNNNNNNNNNNN", "NNNNNNNNNNNN", "NNNNNNNNNNNN", "NNNNNNNNNYYN", "NNNNNNNNYNNN", "NNNYNNNNYNNN", "NNNNNNNNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 725760;
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<string> roads = {"NNNNYN", "NNYYNN", "NYNNNY", "NYNNNN", "YNNNNN", "NNYNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<string> roads = {"NNNNNYNYNNNNN", "NNNNNNNNNNNNN", "NNNNNNNYNNYNN", "NNNNNNNNNNNNN", "NNNNNNNNNNNNN", "YNNNNNNNNNNNN", "NNNNNNNNNNNYN", "YNYNNNNNNNNNN", "NNNNNNNNNYNYN", "NNNNNNNNYNNNN", "NNYNNNNNNNNNY", "NNNNNNYNYNNNN", "NNNNNNNNNNYNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 480;
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    vector<string> roads = {"NNN", "NNN", "NNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    vector<string> roads = {};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 771178142;
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    vector<string> roads = {"NNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNY", "NNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNN", "YNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNYNNNNNNNNNNNNNNNNNNNNYNNN", "NNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNN", "NNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNYNNNYNNNNNNNNNN", "NNNNNNNNNNNNNNNYNYNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNYNNNNNNYNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNN", "NNNNNNNNNNNNNNYNNNNNNNNNNNNNNYNNN", "NNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNYYNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNYYNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNYN", "NNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNYNNNNNNNYNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYN", "NNNNNNNNNNNNNNNNNNNNNNNYNNNNNNYNN", "NYNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 117313642;
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    vector<string> roads = {"NN", "NN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    vector<string> roads = {"NNNNNNNNNNNNNNNNNNNNYNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNYNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNYNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNYNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNYNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNY", "NNNNNNNNNNNNNNYNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNYNNNN", "NNNNNNNYNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNYNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNYNNNNNNNNNNNNNN", "NNNNNNNNNNNNYNNNNNNNNNNN", "NNYNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNYNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNYNNNNNNNNNNNNN", "YNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNYNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNYNNNNNNNNNNNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 271729297;
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    vector<string> roads = {"NNYY", "NNYN", "YYNN", "YNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    vector<string> roads = {"NYNNNNNNNYNNNNN", "YNNNNNNNYNNNNNN", "NNNYNNYNNNNNNNN", "NNYNNNNNNNNNNNN", "NNNNNYNNNNNNNNN", "NNNNYNNNNNNYNNN", "NNYNNNNNNNNNYNN", "NNNNNNNNNNNNNNN", "NYNNNNNNNNNNNNN", "YNNNNNNNNNNNNNN", "NNNNNNNNNNNNNYN", "NNNNNYNNNNNNNNN", "NNNNNNYNNNNNNNY", "NNNNNNNNNNYNNNN", "NNNNNNNNNNNNYNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 1920;
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    vector<string> roads = {"NNNNNNN", "NNNNNNN", "NNNNNNN", "NNNNNNN", "NNNNNNN", "NNNNNNN", "NNNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 5040;
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    vector<string> roads = {};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 228620272;
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    vector<string> roads = {};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 917060856;
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    vector<string> roads = {"NNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNYNNNYNNNNNNN", "NNNNNNNNNNNNYNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNYNNNNNNNN", "NNNNNNNNNNNNNNNYNNYNN", "NNNNNNNNNNNNNNNNNNNYN", "NNNNNNNNNNYNNNNNNNNNN", "NNNNNNNNNNNNNNYYNNNNN", "NYNNNNNNNNNNNNNNNNNNN", "NNNNNNNYNNNNNNNNNNNNY", "NNNNNNNNNNNNNNNNNNNNN", "NNYNYNNNNNNNNNNNNNNNN", "NYNNNNNNNNNNNNNNNNNNN", "NNNNNNNNYNNNNNNNNNNNN", "NNNNNYNNYNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNYNNN", "NNNNNNNNNNNNNNNNYNNNN", "NNNNNYNNNNNNNNNNNNNNN", "NNNNNNYNNNNNNNNNNNNNN", "NNNNNNNNNNYNNNNNNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 23224320;
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    vector<string> roads = {};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 999134230;
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    vector<string> roads = {"NNNNNY", "NNNNYN", "NNNNYN", "NNNNNN", "NYYNNN", "YNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 24;
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    vector<string> roads = {"NYYNNNNYYYNNNNNNNNNYNNNYNYYYNYNYYNNNNYYNNYNNNNYNNN", "YNNYNNYYNNYNNNNNYNNYNNNYNNYNNNYNNYNNYNYYYNNNNNNNYY", "YNNNNNNNNNNNYYNNYYNNYYNNNNYYNYNNNNNNNNNYYNYYYNYNNY", "NYNNYYYNNNYNNYNNYNYNNNNNYNYYNNNNYNYYYNNNYYNNNYNNNN", "NNNYNNYYNYYYNNNNNNYYYYYYNNYNNYYNYNNNYYYYNYNNNYNNYY", "NNNYNNNNYNYYNNYNNNNNYNNYNNNNNNNNNYNNNNNNYNYNNYNYYY", "NYNYYNNNNNYNYYYNNNNNNNYYNNNNYNYYYYNYNNNNNNNYNNYYNN", "YYNNYNNNNNYNNYNNNNNNNNYNNYNYNNNNNNNYNNYNYNNNYYNNNN", "YNNNNYNNNNNNYNYYYNNNNYNNNNNNYNYYYYYNNNNYNNYYNNNNNN", "YNNNYNNNNNNNYNYNNYNYNNNNYNYNYNNYNYNNNYNYNYYNNYNYNY", "NYNYYYYYNNNNNNNYYNYYNNYNNNYNNYYNNNNNNYYNYYYNNYNNNN", "NNNNYYNNNNNNNNNNNNNNYNYYNNNYNNNYYNNNNYYYNNNNYNYNNY", "NNYNNNYNYYNNNNNYNYNYYYNNNYYNYNNYYYNNNNNNNNNNNNNNNY", "NNYYNNYYNNNNNNNNNNNYNYNNNYNNYNNNNYNYNYNNYNNNNNNNYN", "NNNNNYYNYYNNNNNYNYYNNNNNYYNYYYNYNYNYNYNNYNNNNNNNYN", "NNNNNNNNYNYNYNYNNNNNNYNYNYNNNYYNNYNNNNYYNNYNNYNNNY", "NYYYNNNNYNYNNNNNNNNNNNYYNYNNNYNNNNNNNNNNNNNNNYYNNN", "NNYNNNNNNYNNYNYNNNNYNNYYNNNNNYNNNNYNNNNNNNNNYNNYYY", "NNNYYNNNNNYNNNYNNNNNNNNYYYNNYNNYYYYYNNYYNNNNNYNNNN", "YYNNYNNNNYYNYYNNNYNNNYYYNNNNYYNYYNNNYNNNNYNNYYNNYN", "NNYNYYNNNNNYYNNNNNNNNNNNNNYNNNYYNNNYYNNNNNYNNNNYNN", "NNYNYNNNYNNNYYNYNNNYNNYNNNNNNYNNNNYNYNYNNNNNYYNNYN", "NNNNYNYYNNYYNNNNYYNYNYNYNNNNNNNNYNNYYYNYNYNYNNNNYN", "YYNNYYYNNNNYNNNYYYYYNNYNNYYNNNNNNNNYNNYYNYNYYNNYNY", "NNNYNNNNNYNNNNYNNNYNNNNNNYNNNNNNNYNYNNYNNYNNNYYNNN", "YNNNNNNYNNNNYYYYYNYNNNNYYNNYNNNNNYNNYYNNYNNNNNNNNY", "YYYYYNNNNYYNYNNNNNNNYNNYNNNNNNYYNNYNNNNNYYNNNNYNNN", "YNYYNNNYNNNYNNYNNNNNNNNNNYNNNNNYNNNNNNNNNYNYNNNNYN", "NNNNNNYNYYNNYYYNNNYYNNNNNNNNNNNNNNYNNYNNNNNYNNNYNN", "YNYNYNNNNNYNNNYYYYNYNYNNNNNNNNYYNNNYYNNNNNYYYNYYYN", "NYNNYNYNYNYNNNNYNNNNYNNNNNYNNYNNNYNNNYYNYYNNNNYNNN", "YNNNNNYNYYNYYNYNNNYYYNNNNNYYNYNNNYNYYNNNYYNNNYNNNN", "YNNYYNYNYNNYYNNNNNYYNNYNNNNNNNNNNYNNNYYNYNNNNNNNYN", "NYNNNYYNYYNNYYYYNNYNNNNNYYNNNNYYYNNNNNYNYNNNNNNYNY", "NNNYNNNNYNNNNNNNNYYNNYNNNNYNYNNNNNNNNYNNNNNNYYNNNN", "NNNYNNYYNNNNNYYNNNYNYNYYYNNNNYNYNNNNNNNNYYYNYNYYYY", "NYNYYNNNNNNNNNNNNNNYYYYNNYNNNYNYNNNNNYNYNYNYNNNNNN", "YNNNYNNNNYYYNYYNNNNNNNYNNYNNYNYNYNYNYNYNNNNNYNYYNY", "YYNNYNNYNNYYNNNYNNYNNYNYYNNNNNYNYYNNNYNYNYNNNYNNNY", "NYYNYNNNYYNYNNNYNNYNNNYYNNNNNNNNNNNNYNYNNNNNYNNYNY", "NYYYNYNYNNYNNYYNNNNNNNNNNYYNNNYYYYNYNNNNNNYNNNNNNY", "YNNYYNNNNYYNNNNNNNNYNNYYYNYYNNYYNNNYYNYNNNNNYNNNYY", "NNYNNYNNYYYNNNNYNNNNYNNNNNNNNYNNNNNYNNNNYNNYNYYNNN", "NNYNNNYNYNNNNNNNNNNNNNYYNNNYYYNNNNNNYNNNNNYNNYNYNY", "NNYNNNNYNNNYNNNNNYNYNYNYNNNNNYNNNNYYNYNYNYNNNNNYNY", "NNNYYYNYNYYNNNNYYNYYNYNNYNNNNNNYNNYNNNYNNNYYNNNNNN", "YNYNNNYNNNNYNNNNYNNNNNNNYNYNNYYNNNNYNYNNNNYNNNNNYY", "NNNNNYYNNYNNNNNNNYNNYNNYNNNNYYNNNYNYNYNYNNNYYNNNNY", "NYNNYYNNNNNNNYYNNYNYNYYNNNNYNYNNYNNYNNNNNYNNNNYNNN", "NYYNYYNNNYNYYNNYNYNNNNNYNYNNNNNNNYNYNYYYYYNYYNYYNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    vector<string> roads = {};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 318608048;
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    vector<string> roads = {"NYNN", "YNNN", "NNNY", "NNYN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    vector<string> roads = {"NYN", "YNN", "NNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    vector<string> roads = {"NYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "NNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN", "YNYNNNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNY", "NYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYNYN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    vector<string> roads = {"NYNYNN", "YNYNNN", "NYNYNN", "YNYNNN", "NNNNNN", "NNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    vector<string> roads = {};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 726372166;
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    vector<string> roads = {"NYYN", "YNYN", "YYNN", "NNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    vector<string> roads = {"NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 674358851;
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    vector<string> roads = {};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 846397273;
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    vector<string> roads = {"NNNNNY", "NNYNYN", "NYNNYN", "NNNNNN", "NYYNNN", "YNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    vector<string> roads = {"NYYNNNNN", "YNNNNNNN", "YNNNNNNN", "NNNNNNNN", "NNNNNNNN", "NNNNNNNN", "NNNNNNNN", "NNNNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 1440;
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    vector<string> roads = {"NYYNNN", "YNYNNN", "YYNNNN", "NNNNYN", "NNNYNY", "NNNNYN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    vector<string> roads = {"NYYNN", "YNYNN", "YYNNN", "NNNNN", "NNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    vector<string> roads = {"NNNNNYNNNN", "NNNNYNNNNN", "NNNNYNNNNN", "NNNNNNNNNN", "NYYNNNNNNN", "YNNNNNNNNN", "NNNNNNNNNN", "NNNNNNNNNN", "NNNNNNNNNN", "NNNNNNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 20160;
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    vector<string> roads = {"NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNN"};
    HamiltonPath* pObj = new HamiltonPath();
    clock_t start = clock();
    int result = pObj->countPaths(roads);
    clock_t end = clock();
    delete pObj;
    int expected = 146326063;
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=22840764&rd=13906&pm=10572
********************************************************************************
#include <iostream> 
#include <vector> 
#include <string> 
 
using namespace std; 
 
bool vis[100]; 
int d[100]; 
vector <string> road; 
int n; 
 
class HamiltonPath 
{ 
    void dfs(int now) 
    { 
        vis[now]=true; 
        for (int i=0;i<n;i++) 
            if ((road[now][i]=='Y')&&(!vis[i])) dfs(i); 
    } 
     
public: 
    int countPaths(vector <string> roads) 
    { 
        road=roads; 
        memset(vis,false,sizeof(vis)); 
        n=roads.size(); 
        for (int i=0;i<n;i++) 
        { 
            int s=0; 
            for (int j=0;j<n;j++) 
                if (roads[i][j]=='Y') s++; 
            if (s>2) return 0; 
            d[i]=s; 
        } 
        int tot1=0,tot2=0; 
        for (int i=0;i<n;i++) 
            if ((!vis[i])&&(d[i]<2))  
            { 
                dfs(i); 
                if (d[i]==0) tot1++; 
                    else tot2++; 
            } 
        for (int i=0;i<n;i++) 
            if (!vis[i]) return 0; 
        long long ans=1; 
        for (long long i=0;i<tot1+tot2;i++) ans=(ans*(i+1)) % 1000000007; 
        for (int i=0;i<tot2;i++) 
            ans=(ans*2) % 1000000007; 
        return ans; 
    } 
};

********************************************************************************
*******************************************************************************/