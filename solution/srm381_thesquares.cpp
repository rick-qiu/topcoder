/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=8418
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class TheSquares {
public:
    vector<string> findSequence(vector<string> x, vector<string> y, vector<string> lengths, vector<string> names, int k);
};

vector<string> TheSquares::findSequence(vector<string> x, vector<string> y, vector<string> lengths, vector<string> names, int k) {
    vector<string> ret;
    return ret;
}


int test0() {
    vector<string> x = {"1 1 1 4 7 8 1000"};
    vector<string> y = {"1 1 1 4 7 8 1000"};
    vector<string> lengths = {"1 2 3 4 5 1 1000"};
    vector<string> names = {"X Y Z ALPHA BETA GAMMA DELTA"};
    int k = 2;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"BETA", "GAMMA"};
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<string> x = {"1 1 1 4 7 8 1000"};
    vector<string> y = {"1 1 1 4 7 8 1000"};
    vector<string> lengths = {"1 2 3 4 5 1 1000"};
    vector<string> names = {"X Y Z ALPHA BETA GAMMA DELTA"};
    int k = 3;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"Z", "Y", "X"};
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<string> x = {"4 4 4 4"};
    vector<string> y = {"7 7 7 7"};
    vector<string> lengths = {"47 47 47 47"};
    vector<string> names = {"GLUK GLUKA GLUKOVI GLUKOM"};
    int k = 4;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"GLUK", "GLUKA", "GLUKOM", "GLUKOVI"};
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<string> x = {"1 15 27 39"};
    vector<string> y = {"3 13 22 36"};
    vector<string> lengths = {"8 3 5 974"};
    vector<string> names = {"ACB DEF GHI JKL"};
    int k = 2;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<string> x = {"123 453 754"};
    vector<string> y = {"119 487 874"};
    vector<string> lengths = {"1000 500 1"};
    vector<string> names = {"SQUARE SQUARE SQUARE"};
    int k = 3;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"SQUARE", "SQUARE", "SQUARE"};
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<string> x = {"3 5 10 1"};
    vector<string> y = {"5 8 10 1"};
    vector<string> lengths = {"974 990 1 1000"};
    vector<string> names = {"X Y X Y"};
    int k = 3;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"Y", "X", "X"};
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<string> x = {"1 1 1 1"};
    vector<string> y = {"1 1 1 1"};
    vector<string> lengths = {"1 1 1 1"};
    vector<string> names = {"A A A A"};
    int k = 1000;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<string> x = {"1 1 2 2"};
    vector<string> y = {"1 1 2 2"};
    vector<string> lengths = {"1 1 1 1"};
    vector<string> names = {"A C A B"};
    int k = 2;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "B"};
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<string> x = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> y = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {};
    int k = 1000;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"};
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<string> x = {"57 11 7 21 1 61 53 11"};
    vector<string> y = {"25 23 77 63 77 89 31 85"};
    vector<string> lengths = {"69 99 90 79 81 33 17 21"};
    vector<string> names = {"DROIOUKW NSFUIFQMIVNKEEWQWGGCUINSWAUUA Q OUDCEYDAO", "OCSDPNVTMWASYAMGQYV YIAXCYVCARAEIJCGAWWAJJZAUQKYEN", "KAUMGYQG OYKADWUAAXCNLEEGLUQVSCZAGUUJOPPCH SMEVZKY", "KQUACPKGGIIANYOOLWGYKYMWRA FUXAGVWXFKCEMIIXIAMYULO", "KGCKCGUGMUQOAQJKJAKOATX"};
    int k = 2;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"NSFUIFQMIVNKEEWQWGGCUINSWAUUA", "FUXAGVWXFKCEMIIXIAMYULOKGCKCGUGMUQOAQJKJAKOATX"};
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<string> x = {"13"};
    vector<string> y = {"1"};
    vector<string> lengths = {"45"};
    vector<string> names = {"WX"};
    int k = 1;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"WX"};
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<string> x = {"83 81 45 56 57 88 53"};
    vector<string> y = {"28 45 76 5 57 23 14"};
    vector<string> lengths = {"10 41 41 61 18 73 46"};
    vector<string> names = {"UGVJHUUUOMPKNNWYAUJFCGXGRGMUOWIJJELWMKUA KQHAQEAJA", "AXUMGHRMMPNSOCIYAUBAHQGUMJEOITGYC ABGKCSLQCCVLCBEC", "FPFMUCUCHIUEWSHMJEUGX LQ YDIEEWGINUNASOVYEIUGGTQOG", "AKC SKRU TKCSUGDFBIKFJAAIEGWTZEKYSI"};
    int k = 1;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"ABGKCSLQCCVLCBECFPFMUCUCHIUEWSHMJEUGX"};
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<string> x = {"77 65 13 11 9 21 3"};
    vector<string> y = {"33 82 61 41 51 11 92"};
    vector<string> lengths = {"26 91 7 13 69 91 29"};
    vector<string> names = {"GEQCEMZAESIGXMOWCIIEOSUPVCAAQ SYCUWHRGZOQNAAM XVPC", "BOKUNXWEGWMQSIK NHEAEAQAEGWIOAMIQWTSEEOUGUISBEEKUE", "MGBKGATG NXMGOFAKSPPNYKMMQOUWAACHGAIWIMNTEUGC SMEK", "OKAPPQANEQSTMGUFAUKAMZOSGSBTMMQE MZMAUNQVQEOSEQAWC", "GYQNYNEAKO"};
    int k = 3;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<string> x = {"83 17 49 21 99 15 31 63"};
    vector<string> y = {"3 59 71 27 81 76 61 2"};
    vector<string> lengths = {"68 71 37 84 31 27 62 81"};
    vector<string> names = {"WYGAAWAMKEBBGBMPQUOQKANAMHAIUFKAOPDYOASQC QKEASMVP", "CWFWKCK LAANQWAJSWGUSQIIQUPGAGMGISQNGNKEKKAAISQPOD", " LTCQQNMBYHAKRRJOGOUA BEKAAXS OGXLYWWMVTNIYNMUFAIA", "AMS SQ ATMYUQJTKQVQAYAGUIBIOGBCUKOMQS"};
    int k = 3;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<string> x = {"57 11 7 21 1 61 53 11 41 76 21 77 89 9 51 9 81 82 ", "36 7 81 39 68 33 21 41 93 61 85 5 95 3 79 55 16 3 ", "27 91 6 63 57 51 62 1 11 99 41"};
    vector<string> y = {"25 23 77 63 77 89 31 85 33 76 51 51 76 30 17 37 26", " 91 25 45 39 29 90 3 18 41 77 29 9 65 41 61 77 11 ", "5 68 17 81 41 95 38 19 97 56 65 39 37"};
    vector<string> lengths = {"69 99 90 79 81 33 17 21 81 71 34 26 33 33 1 50 55 ", "51 83 3 21 47 41 53 51 82 56 51 17 1 41 21 21 61 6", " 1 59 63 41 9 21 76 31 57 34 76 3"};
    vector<string> names = {"DROIOUKW NSFUIFQMIVNKEEWQWGGCUINSWAUUA Q OUDCEYDAO", "OCSDPNVTMWASYAMGQYV YIAXCYVCARAEIJCGAWWAJJZAUQKYEN", "KAUMGYQG OYKADWUAAXCNLEEGLUQVSCZAGUUJOPPCH SMEVZKY", "KQUACPKGGIIANYOOLWGYKYMWRA FUXAGVWXFKCEMIIXIAMYULO", "KGCKCGUGMUQOAQJKJAKOATX RKACASGIDSYOAKPSMKWAWWXUKO", "JHAUGVJHUUUOMPKNNWYAU XGRGMUOWIJJELWMKUAAYMN QEAJA", "AXUMGHRMMPNSOCIYAUBAHQGUMJE YCOTGMABGKCSLQCCVLCBEC", "FPFMUCUCHIUEWSHMJEUGXZQG IVCYDIEEWGINUNAS IUGGTQOG", "AKCXWGYSKRUYBFETKCSUGDFBIKFJAAI ZEKYSIWPGANUNPUMEN", "OGCKBWUGKSCEJMYUL OKAIEISECOEMBGMQSAEUPAGEQCE SIGX", "MOWCIIEOSUPVCAAQA YCUWHRGZOQNAAMYSQXXVPC NXWEGWMQS", "IKYGIKNHEAEAQAEG MIQWTSEEOUGUISBEEKUEMGBKGATGIMCTN", "XMGOFAKSPPNYKMMQ ACHGAI TEUGCQKUASMEKOKAPPQANEQSTM", "GUFAUKAMZOSGS QEMZWQMZMAUNQVQ QAWCGYQNYNEAKOLZAXYQ", "GAWBEWMNMIUANNAUAMKIDHW AJYMAAAJLKFAQGU XOG WGCWGK", "W XKXOMTITYIAEHECNEQQSCQKSWR BSSRLENEGUOOAFOGQGAYR", "TSHFGNISTUSGMENMOQBZNYCUEBI MI M MQIAVQGSMWCCKDRGP", "NVWZMBKGTIEN WBAXEOWAGNOWLREPIEEWUDEXYDXXTUSSBAUG ", "MWOGAMNSEUVKIUWFAGIQGAJAEWVBSGAQPKMYZQEBIXR LTKGGK", "DCTGM YGAAWAMKEBBGBMPQUOQKANAMHAIUFKAOPDYOASQ W SM", "V WKCKQAQALAAN SWGUSQIIQUPGAGMGISQNGNKEKKAAIS SARC", "LTCQQNMBYH JOGOUAAIAKBEKAAXSIHIEOGXLYWWMVTNIYNMUFA", "IAAMSUS APUKATMYUQJTK YAGUIBIOGBCUKOMQSGQGO NUFAWE", "GIAOBWAGE YYSOHCWYIVTIPYDAPGZGUAWY UBADQSIHGMOGMOI", "ASICQKMQZEOIKC"};
    int k = 2;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AJYMAAAJLKFAQGU", "SMEVZKYKQUACPKGGIIANYOOLWGYKYMWRA"};
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<string> x = {"57 29 81 43 23 1 5 19 1 61 28 59 51 7 21 29 75 85 ", "81 81 83 33 1 97 3 85 56 30 17 55 66 37 29 51 96 8", "3 83 29 56 41 31 28 26 61 68 46 63"};
    vector<string> y = {"25 81 38 1 14 1 57 97 56 61 10 9 43 33 69 88 89 5 ", "85 27 57 87 36 99 71 87 10 41 95 57 1 32 48 76 99 ", "93 56 3 13 95 9 29 35 77 1 70 95"};
    vector<string> lengths = {"69 73 60 45 85 8 76 89 61 45 13 81 41 45 76 23 88 ", "91 77 5 47 49 25 69 1 69 49 85 55 73 73 91 61 51 9", "8 77 85 21 81 41 9 31 79 81 41 71 9"};
    vector<string> names = {"DROIOUKWYAIMNSFUIFQMIVNKEE GCUINSWAUUAQWLVQOKATOUD", "CEYDAOOC VTMWASYAMGQYVOAWSYIAXCYVCARAEIJCGAWWAJJZ ", "Y UMGYQGWAELOYKADWU NLEEGLUQV GUUJOPPCHWECUSMEVZKY", "KQUACPK ANYOOLWGYKYMWRAIYIGFUXAGVWXFKCEMI MYULOKGC", "KCGUGMUQOAQJKJAKOATXCEGNR SGIDSYOAKPSMKWAWWXUKO GV", "JHUUUOMPKNNWYAUJFCGXGRG IJJELWMKUAAYMNKQH JAAXUMGH", "RMMPNSOCIYAUBAHQGUMJEOITG GMABGKCSLQCCVLCBECFPFMUC", "UCHIUEWSHMJE QGMLQGIVCYDIEEWGINUNASOVYEIUGGTQOGAK ", "YSKRUYBFETKCS BIKFJAAIEGWTZEKY GANUNPUMEN BWUGKSCE", "JMYULQQLU EISECOEMBGM UPAGEQCEMZAESIGXMOWCIIEOSUPV", "CAAQABOSS HRGZOQNAAMYSQXXVP UNX MQSIKYGIKNHEAEAQAE", "GWI QWTSE UISBEEKUEMGBKGATGIMCT O PPNYKMMQOUW GAIW", "IMNTEUGCQKUASMEKOKAPPQANEQSTMGUF M SBTMMQEMZWQ UNQ", "VQEOSEQAWCGYQNYNEAKOLZ GAWBEWMNMIUANNAUAMKIDHWKP Y", "MAAAJ QGUAAXYXO CWGCWGKWEEODXKXOMTITYIAEHECNEQQSCQ", "KS QYBSSRLEN OAFOGQGAYRTSHFG USGMENMOQBZNYCUEBIAEO", "GMIOU AAA VQGSMWCCKDRGPNVWZMBKG KAQGWBAXEOWAGNOWLR", "EPIEEWUDEXYDXXTUSS AAIWMWOGAMNSEUVKIUWFAGIQGAJAEWV", "BS KMYZQEBIXRPCPSLTKGGKDCTGMA GAAWAMKEBBGBMPQUOQKA", "NAMHAIUFKAO ASQCOSKWQKEASMVPCWFWKCKQAQALAAN SWGUSQ", "IIQUPGAGMGISQNGNKEKKAAISQPODSARCLT"};
    int k = 6;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<string> x = {"79 32 75 31 51 27 6 76 19 66 17 61 21 41 75 1 37 9", "6 29 94 91 35 1 95 81 61 18 65 87 32 27 82 33 39 6", "5 46 80 9 31 27"};
    vector<string> y = {"100 57 75 49 68 60 7 45 25 81 25 85 55 75 24 1 52 ", "13 57 72 95 89 79 20 1 41 13 24 17 1 45 52 19 35 7", "0 41 17 100 17 6"};
    vector<string> lengths = {"71 49 96 63 93 22 41 1 64 70 33 57 32 27 15 5 31 8", "5 65 65 89 20 14 95 6 33 53 66 31 76 85 100 14 21 ", "63 21 46 28 11 81"};
    vector<string> names = {"YHAKRRJOGOUAAIAK AXSIHIEOGXLYWWMVTNIYN IAAMSUSRU U", "K U QVQAYAGUIBIOGBCUKOMQSGQGOOINANU GIAOBWAGEAC SO", "HCW IPYDAPGZGUAWYWMGDU SIHGMOGMO C ZEOIKCMWWHEQG E", "YAZEESNMMGAUAHAAQBFKAYMIEYKQOUNWO V EECHWQUJGSLAAF", "IEQMWWG VOGVIOAQUZAG CFU JOFEOFIDXSDULBIQQA I M Y ", "SUBOQGHEN NULWMAAXQISAUSUOUAOMPFKBMMWAGHMTAOWAWHX ", "R Z MILQAISFQNIAYBAA CXKWGIQV KDBLMYASQTEGOGIGNYBP", "Y GNAUIGUVGEAAY GIYCBG UMOUPYWEALELGFYPWSI IWKOVIA", "YEYMMPYUJYHMAWACGOPAGIX FKSEBQIABRACPKMKYOIQZQKEAU", "MIMQG GYOSASNGUDMENM QMUGKLKIBFTKGTUAYYGCWVYCANBNA", "QK HCUNMGMKICU SWVTMXMYG MOSTJWDQETCIEPKUASMOLQHAJ", "WAMACSKX OPIYZKTSCAGEGVCEIGCYPUYUEQAMKUOGMSQ YVYCS", "QOKU"};
    int k = 9;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<string> x = {"66 21 31 75 22 11 76 93 53 3 18 12 3 11 85 86 96 2", "9 29 69 89 49 15 49 79 49 79 91 36 81 50 58 75 53 ", "27 1 84 46 39 1 2 71 28 3 39 61 10 71"};
    vector<string> y = {"9 63 31 12 53 97 41 38 88 76 76 89 49 32 61 20 1 6", "3 66 29 1 66 85 26 74 5 58 7 1 66 51 21 31 44 6 25", " 76 91 71 1 81 5 77 66 5 11 93 50"};
    vector<string> lengths = {"51 61 74 1 51 79 41 41 84 41 71 69 33 13 33 57 89 ", "29 61 83 17 41 9 57 1 81 17 11 51 1 31 47 86 21 74", " 76 41 94 21 81 1 50 95 39 67 51 10 72"};
    vector<string> names = {"XMMVUAUMMPJCAYBWQLKAO EYSUEK C WOYCMOEJYKA CAQHQUY", "AQXPMHOEERPMTAEIAGS CYM VPCVAWIQNSIQJSYKYUFBJIIHNH", "CEE UAKKWURWADSQBOAGK ACDIOUOUTAGIIQBU ALWOKAAOHEM", "EETAQ G GKMMQE AGACWXMIUDYOAKTEUAIAUGJEAIGAKUTDQ I", "MSULVJCGCOCAFQKPYOMQIAASATWRCQ GSYBJEIWCEOCESMVASA", "QUSWFKBGCMYOTIAOTC GIDINCEAUDBYTGKC S OAQIILYGKEL ", "YSM WYAACDOAIABCCOVWAYRQJFKYSASAOEGUUKOAA RNIPEAUI", "QGMPS AAWOOIWVAKSRI ICMUTNXOQEMWINMHCWZKACGICMCAA ", "UKNMMBIEDIPMZHAJAZABPIWOCAJ WKMWKDYKZ KAEBGENQCKM ", "Q CUPMISVUDKYNAOUEAOOHA FRSWWEERAJMDWP WWXGGYOIGQE", "GCAIMZNQOO Q OXCOQKCCMBAKFJQPAPIQTAKAWGY IIEYGWWAE", "TNWID JNKCKDAA KDSHAJJPACE P MMLUBUYAAAFMVKEECACVJ", "CKCWCX YGXFQCWXOEFCQFKNWVNIC QOANKEEAWAUCMFSMOFUCM", " UQEAAEWGQIQ MYEWFQEIQGYXKUFMSLQFJIMCOACAILO YFZAE", "AUNQKANZAQASBEOFNRYKSG A CAADOPYYNZPUVQRAA AQUSUIK", "MSMKMG WGAEYKBGE L RIKNAMAQKMQHCKKJ"};
    int k = 9;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<string> x = {"33 61 4 89 68 81 1 13 32 45 85 5 85 25 16 54 49 21", " 44 89 37 97 1 51 69 60 89 93 36 23 61 97 93 24 75", " 46 88 33 53 49"};
    vector<string> y = {"29 11 37 9 86 51 93 13 59 39 39 93 31 45 36 49 60 ", "45 25 67 91 61 34 65 16 99 14 86 7 37 25 1 55 90 2", "9 91 51 71 13 26"};
    vector<string> lengths = {"76 67 33 45 81 53 93 49 73 71 42 63 70 75 29 13 49", " 9 1 98 1 10 63 85 50 9 99 37 56 24 77 34 27 29 97", " 79 53 81 89 3"};
    vector<string> names = {"AKY SQFEKYZWQ USIIIZAXCWIOGKEOQZQXKCUAP VUQRQQCICK", "CMMACOYTYGW AUWBNCALYSYWKWYQESACVWUUCWFULWE YAILEC", "IOAYASIKGMEISZIPHGCZZ LMU E USBRRERMWAILIJWMC SGGA", "WIGSVOESIKUVLJQOGALAOACU G W UIKAKPCKENMQEKOHNFCTS", "EGMKL CAUUUAUWIMAEQUEXESJUEHF MIMIQAEGXANOY MLYJNS", "CLOHYKUU IXZKWUEHARBNMCOVCMGHW WKUAYWAJSXUYCEAAAWY", "HQTUOIORGASUEA CYCMOAGYGVEMKKAKESCRULGEIOIG IESQYH", " EDCWIYWWFFF AQWKOANQCKDIFHMGI CSKIIJGAJQENBQKGAUK", "IS RZT YXIAQWWDEAICIGKOAWMEZDMAQ SPANS QYHQWPFMUOL", "AFQIIAWDBSEAGAQZGPMJ ABAGHFTHI WPEAMQAPPMAWOIIAUNK", "CAWKAMMUGZTY GGLBCAFJE ARABYJMIGGGUAXMGSIHLMEAKOGE", "AQSKIAJRIU HGOPRDAWANA FMYWAIIAHICSANEAKYEYEQWCNGK", "ULZ QHBDOTSACIYHUHPZLQVKTWLPKJGGDXNBAWE UYGXGOYTMK", "SYBAXEASCAOSU C EYASG MYEMSVWY EQSNFAUCHAJ YKAZFQA", "SMUATUSSBMQZKEUWPIPIQDDKLMACUCJQ"};
    int k = 4;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"EQSNFAUCHAJ", "ARABYJMIGGGUAXMGSIHLMEAKOGEAQSKIAJRIU", "FMYWAIIAHICSANEAKYEYEQWCNGKULZ", "AQWKOANQCKDIFHMGI"};
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<string> x = {"57 45 91 35 81 7 90 79 65 60 11 53 45 100 81 79 33", " 69 89 55 31 41 51 79 76 76 63 51 89 53 13 45 56 1", "7 1 97 81 76 77 1 21 41 88 46 61 33 79 61 5 17 53 ", "76 76 13 33 53 29 40 37 29 86 1 5 77 47 81 31 89 2", "3 83 95 21 33 97 50 25 21 23 1 69 14 51 71 59 95 4", "1 5 77 44 55 66 68 32 13 37 28 61 35 61 46 96 83 8", "5 96 89 57 1 29 97 83 85 44 78 81 95 31 33 1 56 79", " 96 71 11 66 79 7 51 39 58 17 38 3 61 71 49 26 51 ", "27 91 93 18 21 86 29 71 21 74 14 21 32 8 91 3 33 6", "2"};
    vector<string> y = {"25 37 34 84 73 65 96 46 41 60 91 13 86 2 39 21 89 ", "90 70 98 17 29 19 37 33 65 1 61 1 95 61 41 1 32 45", " 83 87 71 1 81 51 53 1 97 89 45 16 24 37 89 58 56 ", "33 69 97 1 88 3 71 51 81 36 1 57 85 27 85 83 97 1 ", "9 81 87 89 36 83 63 73 65 21 63 9 52 81 55 77 97 7", "4 41 57 1 90 91 33 9 91 45 29 26 49 99 93 97 89 87", " 83 24 3 1 56 33 69 28 76 41 9 11 66 42 77 71 53 4", "7 46 33 93 95 41 13 11 16 68 15 81 21 37 1 17 81 8", "7 63 43 49 61 57 27 31 17 99 57 21 93 65 65 97"};
    vector<string> lengths = {"369 611 227 744 31 868 463 529 397 400 89 255 401 ", "943 23 717 401 866 425 885 971 119 997 917 357 493", " 756 681 561 877 725 799 463 851 261 783 657 685 7", "34 845 734 266 125 225 148 476 817 305 692 911 863", " 305 257 111 783 845 23 953 875 617 525 155 138 50", "6 691 705 593 257 281 321 445 921 949 577 926 701 ", "181 9 685 793 237 851 506 939 956 721 889 43 465 7", "73 73 141 505 603 81 996 797 179 894 25 898 177 96", "1 873 13 256 276 721 55 313 9 65 921 369 841 809 9", "07 256 957 421 788 905 273 951 155 551 96 516 751 ", "517 219 201 141 869 887 781 413 659 863 39 295 196", " 140 649 138 584 921 601 481 349 215 247 490 513 4", "31"};
    vector<string> names = {"YYXVVX XVW YVV VVV V VVVVXXV X W XVVVVW XVVVVV YVV", "VV VVWVVYXX XVVXY V VVXX VVVYXVXXY Y X WVVYXVV WXY", "V VXYWV VVW VVWXVVYXX XYXXVVVYX VW V V VVXXVV X YX", "Y WYVVVWWVV V V V Y WVVVWYWV WVWWVXXXY VYXXVV VYVV", "VV Y X V YYVXW VVXVWVYXX VXWXX V V XYWVY WVVXVVYV ", "W V V WVVYVVV XYXVVW VVW V XVX WVWX YYWVVYWXV Y VV", "XWV YV V VXVVXVY VVWV V XVVYX VVWXXVV XVXVVW V XWY", " VWXXX YYVYVVW VXW Y WVXVVX XVVXWYV XVVXVXX YXVVX ", "V VVXVWVVXY WYWVVXWVV VVXV V XVXVXYYVV X VVVVYYV V", " Y V X VXXYVVV YVW VVV X VXXYYVY VYVXVWV WVVXXX VW", "XYX VXW VXVVVWVYX VXVXXX XYWVWXXYX XYVVYXV V VVVYX", " W VVWVX YYVYW W V Y V VVXXV VXVVV W VVX W XYVVYVX", "Y V X XXWWXY VYVYVWY VWX V XXVYV V VVXVV YYVVVVW V", "VYXWYYVWV VXWXYXX X X YXWXWX X VXVY WXXXXX V VXYWV", "VW VXVXYVX YVXVVVVVV VVXXVVX V X W Y YXYVWXXYW X X", " V XXVVWY WYY XYVVV V XWVVXYVVV"};
    int k = 7;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"V", "V", "V", "V", "V", "VVWXXVV", "V"};
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<string> x = {"65 1 62 91 13 81 77 28 4 27 86 41 53 9 51 12 71 11", " 57 85 95 13 10 29 66 21 83 6 77 15 33 59 1 73 53 ", "45 84 37 49 19 93 99 17 21 31 75 33 91 29 81 9 41 ", "35 27 23 54 37 69 75 41 73 54 79 49 1 41 81 25 17 ", "59 69 51 85 43 49 13 55 36 71 96 29 7 21 57 85 21 ", "63 81 1 91 13 25 21 43 1 85 1 73 41 1 1 86 17 11 8", "3 39 57 33 81 33 41 50 58 57 17 23 73 16 91 17 61 ", "76 69 5 6 73 4 21 21 21 71 1 2 51 20 71 7 43 89 45", " 25 73 33 25 31 49 93 75 21 98 19 76 27 29 97 56 8", "1 66 45 75"};
    vector<string> y = {"15 26 26 97 54 78 20 93 55 17 6 81 25 17 73 99 84 ", "26 91 69 22 1 45 38 76 74 22 61 48 92 21 49 91 22 ", "88 11 81 71 38 69 19 64 85 63 31 12 97 22 13 99 1 ", "89 45 8 5 85 17 81 25 3 100 77 77 33 43 21 11 75 1", "7 68 31 94 50 71 69 76 11 75 67 1 63 45 41 95 55 9", "1 53 17 17 97 49 84 71 48 33 49 91 6 21 49 99 97 6", "1 21 93 95 1 34 66 74 1 51 21 61 76 75 97 12 1 62 ", "52 81 28 35 49 17 21 61 7 3 33 83 81 81 9 3 61 41 ", "98 5 31 1 49 61 61 29 10 38 35 51 62 45 61 55 41 6", "5 59 97 45 56"};
    vector<string> lengths = {"93 353 269 906 61 394 401 617 113 498 635 629 121 ", "509 456 135 337 201 489 861 651 961 76 601 875 928", " 732 323 500 344 215 941 845 986 933 241 17 100 34", " 298 739 266 856 361 374 301 931 853 801 736 511 1", "98 564 638 93 661 857 154 57 476 311 93 925 113 87", "1 943 232 56 833 887 519 751 484 341 687 745 465 8", "37 401 389 629 465 704 783 988 345 445 735 573 770", " 153 77 516 571 673 126 482 96 121 73 324 323 689 ", "757 317 738 67 563 901 109 325 831 647 698 801 631", " 639 425 468 108 384 51 201 841 711 796 449 113 28", "9 201 491 261 301 625 359 703 44 416 746 528 51 40", "0 489 823 961 691 841 441 961 569 688 995 67 307 4", "51 239 113 776 889 483"};
    vector<string> names = {"X VVV VYVVYWVVX XVVVWWW VVV WVXV VXXWWVV V V V VVW", "XVWXV VYXWV VX YXX VVVVVVYV V V V VXWXVV XY VYV YV", "VVWYVVXY VVVX VVVXVV VVVVV VVVVV WVVVV V X XXXVVV ", "VXYWV W W VVVV V VWVX YWWXVV VVV YVWVVWW VXWXVYWXY", " VVWVX XVYXVYVVV XVVWXVYVXX VVXVXV X V VVYXV W VXX", "XVWYXYV XYVVXX XXVXVYV XWVVVXYV XXV VVWYYX VVVVXVV", "V VXWV YYY V VXXVVW Y XVVVWVXXX YXVXYVVW XVX VVVVY", "XVVY YVXXVXVVW VVVWW XVV WV VWV V X VVVVVVVV X V V", "VVXXV VV XVXYVWYV XY WYVWVVV V V WXV WVXVVXVVX VVW", "VXVXWV VVYVYWV V V V WXWXVVXX VWV VXVVYVV VVVVX YX", "XVVVXY Y XXXVV XVVWVVY W YVWXYWX YXW V XYVVVXVVV V", "VVVXW X Y VYXXWXVVVX YVXWWYV W VY V XVVVVXX WYVVV ", "V XWVVVXV VYW VVYVXVXV WXXXXX YYVVYVYVY VYVVXWW W ", "VVVVVY VXXVYX V VX W XVYWXWV VVVYXV XYVWWXVXXV YVV", " XXXYVVXWV V V VVV X XXVVVV VXWVYYXX XVYXXVW VVVXY", "V XXVXYV XV XVVXWXV XY WVWXYVVXVX VVV X X VVVYVVW ", "XWYYWV V WVVXYVV VWX X YXV X WVYVXV YV WVVXVXV VWV", "VV WXXVVVWV VVVYV VVWVVWV"};
    int k = 9;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<string> x = {"58 93 65 63 15 8 57 22 9 99 39 16 51 51 29 100 37 ", "21 79 69 75 13 61 91 51 59 21 61 36 9 19 22 9 26 7", "5 87 1 27 94 58 84 50 58 14 99 6 11 86 67 71 81 9 ", "45 28 79 7 1 95 17 39 61 1 61 85 46 51 45 37 71 72", " 5 6 19 89 9 60 67 51 1 98 21 51 76 77 66 37 1 61 ", "36 82 95 73 49 25 94 21 97 93 100 1 6 65 86 11 3 6", "1 71 67 91 56 37 94 60 89 42 17 32 97 61 3 13 97 4", "6 81 42 67 53 89 51 81 49 25 77 17 69 83 1 43 5 85"};
    vector<string> y = {"45 35 23 6 19 41 1 36 13 91 29 37 43 83 41 89 61 9", "1 97 17 44 81 79 93 85 63 15 38 99 1 81 9 17 61 81", " 86 46 40 61 9 28 11 57 68 92 51 82 56 81 88 73 93", " 13 49 28 11 81 67 79 65 12 41 21 69 78 38 37 31 8", "6 29 95 54 94 71 95 17 69 11 51 65 76 79 53 49 49 ", "21 41 19 24 97 9 45 53 9 43 34 89 43 67 1 73 5 83 ", "65 95 46 13 31 5 63 30 45 4 73 66 65 82 1 84 36 9 ", "48 71 45 35 18 40 41 11 43 61 68 18 45 36 19 53 98", " 83 77"};
    vector<string> lengths = {"63 486 374 753 776 549 825 53 421 847 19 710 342 9", "25 731 503 558 341 17 38 305 233 581 164 61 55 851", " 325 481 626 653 751 236 781 440 864 345 737 891 1", " 547 748 103 93 701 803 561 477 879 721 601 589 27", " 921 450 385 648 721 391 761 707 96 511 776 793 58", "8 281 661 873 541 181 689 574 61 523 185 247 399 7", "65 301 63 417 31 577 53 546 87 649 41 543 284 144 ", "749 325 346 789 777 785 833 607 9 181 786 1 141 43", "1 124 793 526 99 189 670 603 545 753 254 869 786 3", "11 987 673 211 183 43 464 978 49 209 886 157 531 6", "51 761 9 815 110 889 269 670 481"};
    vector<string> names = {};
    int k = 7;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"V", "V", "V", "VVWV", "VVVXXVXV", "YYVVWV", "VV"};
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<string> x = {"76 1 87 69 56 92 61 17 61 76 77 23 1 1 46 94 93 31", " 51 43 16 91 84 74 62 29 51 85 41 45 81 5 13 57 5 ", "39 1 40 26 1 27 7 29 66 81 97 42 76 37 51 53 26 97", " 53 17 7 19 24 61 87 85 65 49 55 59 1 55 91 21 66 ", "35 2 1 38 71 36 1 67 77 1 89 1 41 71 51 51 45 45 1", "1 21 62 3 62 44 90 17 6 60 74 97 45 64 67 33 41 31", " 59 11 89 97 31 96 45 59 17 63 59 52 70 41 95 61 9", "3 61 81 90 89 73 61 23 95 11 9 85 33 61 95 71 16 7", " 33 97 46 11 69 41 61 51 45 9 76 65 29 89 19 39 85", " 71 23"};
    vector<string> y = {"23 20 89 42 11 47 29 53 38 72 37 91 21 51 41 8 55 ", "97 11 28 82 65 45 61 32 97 92 41 61 5 33 89 89 69 ", "94 71 83 56 77 1 81 59 15 96 55 63 83 33 36 31 93 ", "26 13 1 72 41 86 83 97 90 61 43 61 23 41 82 13 21 ", "23 87 10 87 46 59 36 11 19 70 51 21 4 59 34 45 1 1", "3 21 62 37 94 33 51 93 71 59 65 39 15 9 21 29 36 1", "3 13 94 55 25 29 86 4 70 16 91 21 80 89 61 91 33 1", "4 57 61 69 83 34 27 37 31 39 49 84 41 66 10 57 99 ", "61 31 37 41 24 41 83 69 66 91 85 88 97 97 69 5 33 ", "75 32 81 93 44 8"};
    vector<string> lengths = {"97 226 751 139 501 813 451 512 676 905 333 661 311", " 359 185 235 527 971 257 537 924 805 876 396 488 4", "63 669 657 588 923 271 639 771 140 996 660 564 882", " 977 201 804 249 641 271 467 766 801 423 289 14 61", "1 969 881 985 337 89 679 273 969 501 646 613 81 71", "0 27 609 544 477 418 631 833 149 981 89 681 562 37", "6 660 301 913 897 256 124 31 898 786 968 372 873 8", "17 783 531 639 556 476 643 303 821 464 959 49 708 ", "566 501 69 300 46 201 795 731 497 430 421 998 497 ", "107 309 669 550 393 181 106 303 522 979 76 345 324", " 177 633 211 200 329 881 421 345 867 57 361 833 57", "4 84 98 971 633 842 649 339 23 19 633 281 491 785 ", "161 682 961 305 761"};
    vector<string> names = {"V X WXWVWVWVV WYWWXYX VXVVXW VVVXVYVVV V VXVYVV X ", "V VYVWVVVV VXVVYW V VVVVW VWXYVVY VYV WVVVVVXXWV X", "XVV V V VXVWWYXYVV XWYYYV W V VVVX XXYXV VVYVYXX V", "VWXX V X Y XWVXV VVYWV WVWXXVX VVXVVWV VWVVVXYXY V", "YVVXXXWXY VWXYXXVVXY X X X VWXVVY VVXXVVVVX VWVWV ", "VX WVWWXXV VWVV VXWVVWVXV X V VVXVVVWVVV V VWVVYVY", " Y VYVXW YWYYVVXVXW VXX YXVWWVWVVW XWYX VYVVWVVXV ", "XVXYXXV V XVXVVWV XX VXVYYWV X XXVVVXVVY V VVVVVVW", "VV V VVYXVV X W YWXWV XXVWVVXXWW VXXVX XXVYVYVV WW", "VVVYV WVYYVWV VXVWXXVXX X WX VXVVW X YWWVVVVYVX XY", "XVY W V XXV VVVXV XXXVVV VXWXXXWXYW V VVV XVWWV VY", "YVVVVX X VVY YVVXVX WVY Y V XVWVVVYVV VXVYV VVV VV", "VXVVXXVV YV VVWVWY WXV VVVVVX VXVXVV VWXVV XVXYWVX", " XXVVVVXVX XWVVVXVXYW YVXVV VVXX V YW VVVVVXVVW XX", "V XVVVVY YYVVYXYYX VXVVX V W V XWYVVWXVV XVVXVYV V", " VX VVV VVVYXV V VXXXVV VVWVWY XWWVXXVVX VXWXXXYXW", " WWVVVY VVYVVYVX W VVXWWXX VXVXVYXYWW V V X VXWYWV", "V VVXWVYYX VX YW YYX VVWVX VXVVW X WVXVV VVV VVV V", " WXYYX"};
    int k = 7;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"V", "V", "V", "VXWVVWVXV", "V", "YYVVYXYYX", "VX"};
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<string> x = {"357 291 523 227 135 681 868 417 796 831 286 381 21", "3 191 253 985 565 576 239 803 69 399 401 866 425 8", "76 798 553 116 119 751 541 236 311 552 42 263 751 ", "885 571 499 309 781 445 556 517 701 97 986 987 486", " 271 663 301 473 981 843 988 648 225 61 148 433 47", "9 661 804 370 601 358 356 833 876 369 709 103 845 ", "23 640 406 536 326 617 965 836 881 17 903 9 227 58", "5 675 477 123 947 321 995 921 751 860 489 174 625 ", "221 41 623 321 671 388 969 237 565 660 410 571 959", " 995 629 721 889 209 74 841 481 863 781 591 603 33", "7 228 583 797 165 37 85 349 198 759 45 429 497 446", " 357 116 13 256 216 303 246 55 256 9 478 369 371 5", "95 801 26 939 957 431 211 371 106 393 346 35 293 8", "81 516 113 637 577 517 111 816 494 201 141 476 521", " 574 551 751 171 607 793 783 9 661 196 927 391 261", " 721 874 841 417 631 461 576 70 273 675 533 431 35", "1 27 775 75 801 801 611 407 175 499 725 564 641 57", "7 103 769 549 801 93 385 921 710 463 753 908 105 7", "59 175 377 481 221 81 405 844 299 739 444 478 466 ", "829 94 191 435 951 164 514 39 891 905 986 191 51 5", "4 761 889 139 128 45 688 206 311 114 373 833 981 8", "25 245 472 86 241 30 920 831 392 969 876 314 713 3", "00 357 546 521 435 947 523 986 121 421 817 957 764", " 805 174 921 407 281 628 746 176 527 181 261 111 4", "52 579 789 281 373 463 931 71 913 601 943 183 81 6", "73 260 771 113 561 901 649 251 993 101 901 871 541", " 517 491 837 602 424 206 357 153 673 809 867 171 8", "57 989 841 657 751 816 204 880 86 321 457 681 276 ", "163 865 177 696 736 751 780 202 614 364 693 371 60", "1 321 493 376 561 961 425 120 261 21 729 46 730 52", "1 13 139 257 300 886 305 527 421 451 641 161 561 4", "56 37 1 389 780 471 713 131 143 445 169 723 557 14", "1 465 951 961 575 55 301 324 1 120 651 761 993 101", " 897 501 362 337 951 329 713 541 970 320 51 428 11", "3 421 206 41 236 25 609 691 438 881 899 484 426 79", "1 646 369 651 960 586 276 271 509 276 265 928 249 ", "354 906 977 615 49 795 941 845 986 865 461 113 946", " 257 449 21 298 360 821 899 741 1 856 94 63"};
    vector<string> y = {"125 573 799 873 784 73 137 199 463 222 971 438 181", " 89 313 748 795 900 23 831 961 105 1 171 27 267 88", "5 31 806 373 619 506 579 640 399 297 901 161 353 5", "51 876 358 482 941 401 232 145 483 568 657 817 685", " 159 734 137 845 741 201 961 529 90 65 945 216 124", " 922 97 117 863 305 257 341 111 230 569 751 573 40", "3 123 254 871 701 685 155 885 617 145 437 705 593 ", "989 233 697 629 111 626 835 633 176 577 950 83 947", " 13 773 485 201 827 421 389 982 851 249 452 181 15", "5 347 11 737 708 43 465 266 968 903 505 353 9 591 ", "751 507 335 63 921 25 696 677 92 931 961 603 831 7", "95 881 185 715 721 845 745 313 441 128 205 881 41 ", "31 633 501 958 236 481 453 570 124 951 79 551 751 ", "775 837 664 881 480 330 219 463 41 171 439 887 21 ", "701 663 137 465 787 596 280 617 547 297 669 691 42", " 131 874 601 335 181 127 112 714 296 265 949 768 9", "60 561 126 335 891 165 441 425 439 561 138 364 443", " 456 161 305 443 94 505 821 61 391 540 4 471 768 7", "27 765 372 591 433 12 785 573 396 305 866 181 357 ", "472 295 589 870 207 479 665 161 779 323 392 146 48", "1 441 501 190 955 816 896 789 61 363 957 441 151 8", "89 85 503 843 1 901 693 745 953 825 617 511 390 16", "2 21 819 727 821 631 371 173 345 148 257 114 278 8", "46 431 481 280 345 153 270 609 441 844 455 235 953", " 105 1 521 441 47 670 901 549 217 989 485 197 158 ", "743 286 554 865 89 671 121 501 417 854 449 12 911 ", "701 193 149 102 460 855 171 186 153 1 360 459 602 ", "831 169 761 467 321 601 91 569 737 721 865 131 526", " 651 992 475 585 840 919 325 775 337 348 201 369 7", "79 122 190 991 167 489 685 409 297 949 182 853 249", " 767 860 433 216 121 493 570 672 713 673 683 737 4", "13 742 341 231 441 644 322 905 782 701 618 131 283", " 742 761 429 251 418 693 456 745 162 312 291 438 3", "03 871 126 826 216 791 241 554 289 153 401 886 393", " 681 86 895 781 179 121 617 395 801 425 135 337 20", "1 489 279 861 973 208 460 110 829 65 875 609 405 9", "7 561 961 648 492 413 689 501 81 414 353 45 674 43", "2 37 138 633 359 974 145 764 204 617 710 699 361"};
    vector<string> lengths = {"369 165 529 252 744 31 41 907 721 665 613 360 385 ", "685 255 271 793 2 414 979 889 239 608 871 270 793 ", "424 617 897 265 997 219 251 687 376 466 756 681 89", " 753 713 376 818 799 463 851 261 783 386 689 151 5", "16 109 26 209 841 353 125 463 761 813 777 476 817 ", "305 401 481 689 521 761 157 777 966 33 353 305 147", " 953 237 601 57 492 905 712 177 943 236 450 971 93", "5 183 226 281 681 601 476 365 687 349 513 736 701 ", "321 735 9 407 965 457 793 469 361 209 761 506 939 ", "956 716 191 217 616 201 581 701 90 403 143 901 81 ", "996 104 241 729 711 618 833 699 741 311 25 829 151", " 156 69 853 209 201 895 863 596 981 441 921 865 99", "5 403 909 711 266 455 279 96 905 647 961 303 633 2", "45 495 937 958 68 626 461 904 37 808 471 687 462 6", "81 551 413 891 691 995 39 697 937 161 325 565 529 ", "971 621 921 751 331 532 208 807 591 720 689 513 36", "3 193 522 505 701 471 351 334 851 626 276 945 225 ", "401 631 601 95 473 361 481 765 255 869 357 167 293", " 521 575 481 81 305 832 457 830 505 337 513 62 833", " 201 465 965 289 720 881 228 156 946 293 559 915 8", "81 552 1 833 783 581 784 265 621 193 200 887 614 7", "09 569 831 379 913 530 733 545 797 377 234 737 657", " 312 233 457 111 677 929 974 881 196 665 401 752 7", "17 721 336 441 901 61 522 213 681 717 209 467 421 ", "103 829 470 233 151 849 1 127 565 495 661 534 420 ", "89 318 410 127 729 411 653 937 457 140 341 361 653", " 538 235 860 841 964 425 401 937 676 435 236 981 6", "41 191 416 401 297 211 484 623 617 871 216 885 188", " 519 251 171 721 871 21 174 869 971 26 681 391 773", " 531 41 717 813 953 643 33 425 898 529 269 565 423", " 381 345 81 493 27 441 913 99 501 800 293 126 48 2", "57 379 401 49 586 25 40 545 602 649 97 617 196 981", " 818 577 125 756 412 801 932 88 244 926 785 341 37", "7 9 765 353 269 226 997 53 61 181 511 87 274 617 8", "77 706 201 629 242 792 509 551 981 808 901 801 161", " 686 181 162 217 101 321 445 238 241 215 297 281 4", "83 441 323 500 344 33 483 66 406 601 888 611 277 7", "86 271 34 802 973 579 486 266 911 381 167 101 966"};
    vector<string> names = {"DR KWY SF M EEW CUI U L ATO Y C VTMW M OAWS CYVC I", "JC A UQK A Q L DWU N L C U CH SME K P I O KYM YIG ", "G KCEM A OKGC G AQJ O E A I A K X HAUG U KN UJF R ", "W L A KQHA AA H NS A QGUM TGY M C C ECFP UCH SHM X", " L CY W NAS I QO X K FE UGD F E EK PGA UMEN B S YU", "L O I EMB A GEQ AE MO EOS A OS W OQNA Q CB XWEG IK", "Y HE A O W O SBE M A CTN FAK YKMM A AIW EUGC S K A", " T AUKA G M WQMZ QVQE A Q A AXYQ EWMN NNA IDH PAJ ", "A AQ X AWD WGK DXK ITYI C S W Y LENE A G SHFG US M", "OQB UEB G Q A A MWC GPNV KGTI Q XEO OW IEEW YDXX B", " AIW AMN KIUW Q E G M B CPSL K MAX A KEB PQU NAM F", " DY COS E PCWF QAQ NQW GUS U M NGN A P RCL NMB RRJ", " AAI K I G W IYNM A SRU UK U QVQ U GBC Q O NUF I A", "GE Y CWYI YD GU M AD GM IAS M IKC EQ JEYA N U Q Y ", "KQO M GTWI WQ L E GAY G QUZ ECCF R OFI UL A I M Y ", "S G W LWM I UOU FK A AOWA ZAY QZ MILQ QNIA BQY WGI", " VGKD ASQ G B O U GE IXXG GM MOU ALE P JH O E YU A", " O XGY S A P OIQ A QGK Y N E YK KLK KGTU C A Q C M", "GMK URWS X H S QE P MOL WAMA GI IY C V CYP Q OGM S", "I S F E Y BUUS M UW IE AOUI QYQU MIM ZVD OG KWY Q ", "AAU QAS AABM XY CRCK M QAG RM QG S V Y A NQRC D QZ", "O Y S N U J E G JAH QA VEUK O IYG R W A I YB ANC G", "WWC JHFM SXSM T I HG KA OOL Q Q K S D I A YGXY E Q", "CAS Q Q FAI S TI K DS M Q IUS OQC GUD E K ODA E ST", "U QS OADQ YGI CM W XQY R P WIM Y UUQ V CKJ NA CU U", "OY MO A CGM RGGM X IONM U Q WAG S OIU SOS MZE G GA", " NN I PB A U E ARM AZA DSA EG A A S D Z U X E S Y ", "A Y HON SCMA W I XGAY F CGZ A R E XQ Q A I QKKE S ", "FMEA O H U K T VAE SG KSOU HOD UG VWO IWWQ Y Q V M", " Y KAOO Y"};
    int k = 7;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "SME", "A", "C", "X", "GM", "CM"};
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<string> x = {"651 475 931 671 706 629 611 736 809 803 141 694 51", "6 933 308 834 438 967 885 746 553 941 921 466 311 ", "769 477 289 675 113 961 952 359 841 110 269 61 741", " 777 594 185 265 341 687 399 745 111 5 675 401 617", " 841 401 850 704 209 283 666 546 501 345 37 617 53", "1 770 849 353 225 593 71 551 33 601 189 248 373 77", "9 283 73 324 733 316 979 691 971 720 781 767 153 8", "34 881 433 1 923 946 550 158 941 761 542 945 421 2", "94 297 353 1 506 811 869 876 321 569 505 6 853 817", " 361 521 186 561 289 529 503 33 783 761 255 399 67", "7 374 703 179 44 891 279 998 528 403 331 400 991 8", "05 143 561 711 757 725 841 18 113 786 498 119 376 ", "227 229 939 632 545 885 713 66 295 185 257 307 186", " 845 793 45 165 313 806 557 861 697 825 801 417 78", "9 175 645 572 579 121 126 635 1000 751 191 325 432", " 38 634 210 426 813 720 593 631 61 175 116 215 51 ", "325 336 737 209 653 461 518 151 502 7 286 246 9 33", "1 803 673 889 569 793 201 521 177 661 192 226 1 36", "9 1 751 967 721 965 601 809 681 777 27 921 91 174 ", "761 45 952 809 401 391 541 641 321 926 251 641 601", " 419 177 671 672 905 137 82 406 780 921 126 716 70", "1 523 885 900 131 1 591 575 198 489 176 99 521 153", " 571 558 476 793 386 411 486 243 577 251 638 369 1", "05 543 823 795 301 169 841 191 586 961 561 291 665", " 278 401 200 860 607 526 505 786 181 925 795 135 4", "31 601 271 377 139 205 463 687 141 737 394 603 545", " 142 217 312 643 201 195 489 695 39 181 211 617 32", "5 733 978 829 989 166 17 341 111 834 651 999 561 4", "83 285 492 121 300 393 183 801 480 383 457 979 77 ", "481 866 760 318 1 300 307 144 36 361 40 9 621 981 ", "901 441 913 629 825 2 205 585 883 121 223 378 93 7", "53 691 543 271 9 49 201 241 633 251 297 459 685 43", "3 861 59 449 38 85 281 686 489 725 401 732 625 514", " 606 441 241 77 537 429 586 605 352 979 897 181 86", " 657 252 451 701 329 821 497 837 991 381 551 391 4", "46 486 507 201 229 297 161 113 826 111 791 533 133", " 900 797 157 488 774 89 191 711 406 761 323 354 48", "7 29 607 175 145 900 901 724 586 593 326 835 571 3", "27 251 745 875 583 539 701 993 813 32 91"};
    vector<string> y = {"729 112 595 681 729 891 296 696 501 745 241 129 64", "1 803 638 688 141 41 661 901 288 875 415 241 619 4", "66 93 469 205 989 332 101 531 321 954 273 217 706 ", "369 751 361 985 571 926 623 552 465 386 837 297 99", "6 629 107 327 329 401 557 221 817 316 161 81 573 4", "13 23 153 981 684 51 551 728 673 985 565 801 806 4", "48 404 311 479 821 413 958 907 916 617 105 536 257", " 563 366 374 41 141 984 751 921 785 698 517 165 38", "7 583 639 744 724 674 206 801 961 68 428 935 249 2", "96 796 336 449 663 113 579 527 201 491 261 602 951", " 791 20 545 687 171 326 440 851 746 377 66 51 470 ", "412 267 193 823 951 681 193 236 241 721 681 751 86", "2 45 761 955 593 972 193 681 678 697 25 345 273 41", " 825 63 935 47 323 541 753 1 808 801 591 681 104 6", "55 946 865 773 851 706 129 473 389 642 245 627 225", " 440 395 375 581 681 267 821 991 856 321 985 851 1", "44 153 899 157 901 391 965 789 96 564 501 864 345 ", "127 913 294 667 489 557 561 342 291 31 536 701 185", " 785 178 305 695 581 279 599 65 793 809 621 113 25", " 1 607 826 201 604 489 623 191 369 96 511 921 624 ", "444 359 481 996 86 329 181 405 901 854 869 921 89 ", "1 20 261 165 281 531 751 746 597 465 538 63 959 45", "7 31 285 841 342 823 325 651 909 203 41 731 136 96", "9 714 229 426 9 601 627 661 386 727 228 366 141 89", "1 581 791 67 256 1 430 181 385 17 434 141 89 218 7", "79 813 765 593 526 529 921 469 930 545 251 673 966", " 865 801 731 786 457 241 141 373 353 1 481 281 942", " 236 953 591 89 36 739 886 101 869 903 531 425 411", " 217 801 713 421 519 153 973 243 341 811 547 126 6", "1 417 76 701 789 42 821 835 932 174 901 861 453 61", "0 49 886 1 299 978 946 989 527 691 125 1 753 476 4", "1 187 901 119 473 13 617 101 481 13 243 365 783 75", "2 593 859 801 261 617 395 239 791 955 41 275 849 7", "29 863 253 745 69 904 921 511 215 940 657 877 31 9", "61 701 969 369 97 766 547 498 305 1 829 286 340 40", "1 953 871 485 441 45 128 425 981 111 679 281 101 2", "91 838 276 45 821 717 825 533 711 764 413 523 110 ", "21 595 141 25 501 293 381 26 297 571 785 617 709 3", "53 253 157 693 706 523 913 659 972"};
    vector<string> lengths = {"831 301 425 691 113 47 897 931 511 627 989 421 35 ", "871 946 756 737 957 624 937 284 325 35 403 11 681 ", "718 126 403 625 75 543 289 943 81 25 417 125 831 5", "18 733 550 49 977 493 85 178 620 702 282 801 863 6", "45 481 766 843 795 599 185 781 745 817 38 873 149 ", "677 624 77 421 753 43 655 649 214 591 96 406 779 3", "69 535 513 141 417 611 583 696 997 601 201 952 901", " 109 901 1 113 831 647 771 593 476 524 937 191 809", " 721 809 491 117 117 552 223 201 841 711 46 376 93", "5 970 685 723 691 910 801 521 953 81 81 669 9 128 ", "631 305 29 557 701 212 895 439 532 870 509 133 625", " 401 849 525 210 271 575 535 581 569 688 995 67 30", "7 697 929 859 359 833 776 621 345 721 393 501 395 ", "486 887 374 897 917 809 741 662 681 409 513 699 90", " 639 471 143 601 141 371 503 537 421 179 157 701 8", "79 244 779 233 761 121 293 431 659 381 826 346 345", " 481 929 626 381 709 751 966 273 421 31 753 840 68", "1 661 679 412 584 782 350 213 58 714 946 453 511 2", "0 686 121 879 436 413 207 589 153 173 287 115 379 ", "511 482 181 791 33 117 481 461 771 312 799 946 291", " 445 386 237 873 541 501 795 641 689 119 746 571 2", "81 17 791 251 601 701 511 920 601 301 722 384 951 ", "579 289 501 77 600 466 385 37 710 801 245 961 924 ", "726 777 292 743 284 273 899 73 225 373 494 91 121 ", "597 302 793 833 473 713 269 801 621 311 235 736 67", " 621 55 124 167 277 949 189 956 223 189 670 858 62", "5 753 254 132 684 851 81 647 813 369 22 81 413 545", " 535 992 340 131 841 309 553 89 801 481 306 513 66", "8 177 145 285 69 960 110 889 66 498 977 177 289 92", "7 921 719 93 397 865 802 45 1 168 981 531 245 541 ", "629 683 875 529 905 725 789 685 705 46 196 792 901", " 81 881 488 173 441 351 271 141 377 261 781 969 70", "2 532 133 281 597 401 138 765 91 673 521 126 465 9", "38 257 852 508 351 13 915 613 473 861 952 41 706 7", "73 983 790 978 717 346 899 915 921 868 85 68 476 1", "81 889 723 851 514 310 721 297 539 861 705 961 591", " 808 946 798 45 741 769 451 671 363 129 367 895 79", "1 571 389 11 861 174 931 665 817 751 374 993 161 6", "61 305 781 580 627 1 159 212 554 849 973 716"};
    vector<string> names = {"PSC WOY J WY H QXP E AEIA K F PC Q J U I EEO A R Q", " K ACDI T Q CDAL A EET SAGH KMM Q C U KTE UGJ AKU ", "ZCG LVJ C PYO ASA Q G EIWC S A F M AOT N NCE YTGK ", "K O I E O Y AAC A VWA FKYS EGU AIM IP QGM KK O K U", "YM TNX W CWZK CMC WG M IP JAZ WOC OU K UKYG GE M Q", " C S YNA OOH ZFR ERA P W Y E M O Q OXC C F P K MQL", " YGW NWID JNKC E D JP I JIWM UYAA KE V W VOY C F N", "WV SEO KEEA MFS C U A I Q F G FMS IMCO L CY A ANZ ", "BEO KSG A C PYY V C Q K MGW G B B VJ AM Q JYQ CDE ", "A VYI O NSNA W YCAV M O G TW L K QKVC AM Z WWWK GA", "F II G CMG XZQ QRS S C TM W Z WCV CS E ANVY VU AEA", " QTO ESS QNG Z WQX G I AW H Q K M MYQ IKI CMUQ IY ", "YZF WM ZI R M K QMWT ZEK SQ B K DQI QFE AG S M O R", "WNK GCY AA FIAA QAYI K HLC O M QGUS SK AW GW C AQK", "W Z ECH GE UQS WKQ G U M FPE K PINK W IAOA CAPG EI", "Q BPS S UQN SQNS G NAOV K UW KIXN A CACL CGI C M F", " U SQG G VR Y L WNA M MQKO UOO N S UAQ C AGO USU O", " L YQS T S S Y Y A Q V A M WG MDM KJZS UP ZA ZY U ", "F L A KICG S W HJM M SR C QFU YCU O ACAQ AY YABK B", "C F G KGA GA B J J KMA SUA M W N MHG QGU J LJH K B", " C GQ YC LA WVEG IQJA WSMW S LXE T MO AYM MAF MKKV", " QNU F MCN C A Q A C WYM BAK M JUS AE S FJH OSWE N", " M C A A W OGHQ W A IR AONX U L G CGCW A A C C IE ", "Q NIN NWM Q Z VA D E Z PHGC YHAA K FLWM A Q UYOV I", " Y AKM F A KW LES LOY O EEI O G QQQ G N S KK W QQY", "Y WJI KAKE AN EHYK WG I WFS E X A U T G FYER M D N", "QG CY C H O GDH OT K UE ZFWO PSIY A EC WQ C M APSM", " NOSI TI SJI IUMR EQ M SKQ NFE QOY SGS KUW OWU Z F", "E T EGD OWQB OCO Y AMXS GAKY S Y ICQU Z IOG ZQX PW", "Q Q ICK COY D U A W E WU UL YCY C A M IPHG Y U E U", " ER"};
    int k = 7;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"C", "AA", "L", "AN", "C", "OGHQ", "NQG"};
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<string> x = {"843 965 743 825 25 799 191 730 921 271 225 136 775", " 545 837 785 537 185 709 415 251 81 731 531 381 48", "9 966 226 285 751 461 689 93 338 777 178 766 77 55", " 689 617 785 31 113 113 481 539 89 127 84 401 531 ", "139 840 411 891 794 221 477 446 751 491 881 73 905", " 601 441 557 345 771 585 737 931 949 986 473 229 5", "89 551 164 734 936 881 345 116 511 158 523 975 332", " 358 379 783 905 541 877 39 688 521 729 49 633 374", " 665 177 541 958 909 211 427 856 201 401 441 451 8", "08 954 729 551 380 401 705 393 4 185 737 741 161 3", "83 341 316 748 254 161 621 687 121 924 861 953 894", " 36 193 793 551 546 987 415 965 909 751 520 747 98", "1 701 591 649 253 74 651 657 801 273 138 781 441 2", "33 56 327 453 509 101 261 763 375 641 325 793 754 ", "913 558 661 338 703 924 713 665 73 57 500 196 945 ", "41 463 129 945 184 791 753 187 833 727 45 582 942 ", "891 93 968 789 382 336 897 873 288 445 77 223 448 ", "881 877 523 427 261 254 961 754 189 927 385 657 51", "1 585 665 954 947 326 233 559 449 709 209 897 851 ", "466 875 389 453 303 706 21 49 169 582 713 65 998 2", "93 973 927 617 353 340 263 285 750 622 515 69 463 ", "512 590 253 596 801 956 321 283 881 810 121 620 74", "7 813 172 822 21 802 921 901 971 647 895 17 173 52", "0 695 614 473 721 233 929 589 535 670 249 805 946 ", "455 641 151 842 43 891 945 41 971 88 796 162 818 2", "39 801 715 183 571 577 971 325 414 519 378 861 202", " 791 830 645 167 592 961 129 109 531 25 86 91 831 ", "145 481 520 901 631 309 340 67 784 993 761 343 237", " 333 255 267 311 474 285 457 514 12 129 346 393 67", "7 343 537 913 286 900 713 881 561 769 389 21 481 4", "51 21 684 265 699 897 345 215 384 210 401 90 507 4", "17 601 105 463 233 307 642 197 737 457 319 881 847", " 185 134 996 437 631 49 73 213 420 83 109 9 639 5 ", "493 276 774 819 361 381 881 881 806 723 273 741 82", "6 527 226 867 273 961 931 96 409 392 846 621 681 8", "61 63 107 656 695 96 608 371 281 477 891 151 981 8", "1 311 121 43 165 125 928 833 747 753 681 181 678 3", "93 618 731 801 261 813 230 577 922 337 544 51 1 31", "7 877 961 126"};
    vector<string> y = {"355 706 951 489 693 611 230 505 341 345 441 881 77", "7 528 927 839 317 840 131 61 209 73 467 401 648 50", "5 581 232 749 165 255 509 626 916 27 561 185 593 6", "81 305 336 501 901 346 707 466 129 52 745 381 542 ", "74 765 631 721 14 329 454 925 139 944 833 416 237 ", "173 286 979 353 768 732 621 786 645 229 383 897 65", "5 951 591 501 21 513 756 691 542 946 751 838 61 90", "8 993 573 137 89 551 9 221 527 865 792 865 241 401", " 855 298 545 393 976 249 641 937 707 879 590 851 5", "35 116 652 1 251 244 508 805 617 319 720 447 777 9", "34 755 751 752 477 913 950 106 408 534 769 227 171", " 137 529 832 446 481 81 877 257 841 795 503 833 21", "3 686 745 289 484 211 541 107 969 948 407 689 270 ", "489 41 897 793 911 145 861 983 217 425 351 205 955", " 725 711 176 305 61 676 261 594 721 801 475 283 48", "4 391 203 91 573 457 453 657 195 401 834 155 773 7", "99 731 21 812 176 445 71 972 325 545 77 463 973 17", "7 801 735 233 991 793 757 114 173 508 366 821 983 ", "674 745 631 666 351 649 393 133 824 529 917 418 60", "1 781 179 338 377 700 52 732 286 367 961 693 858 7", "53 47 805 57 349 246 485 761 273 489 626 773 688 7", "56 629 419 601 821 945 977 708 649 65 331 881 988 ", "729 49 95 267 385 343 121 238 651 72 975 745 813 2", "95 937 169 833 889 184 501 995 203 813 544 337 167", " 826 801 971 201 898 367 767 158 541 441 793 33 56", "1 369 583 505 382 971 956 169 765 680 791 195 445 ", "281 857 727 851 646 844 974 953 580 491 23 767 101", " 544 251 56 71 370 474 823 103 181 1 749 301 606 6", "62 593 257 579 81 937 992 66 866 611 880 773 969 5", "91 694 952 887 841 769 921 420 1 69 1 655 565 702 ", "51 496 233 981 161 731 201 161 301 109 505 533 250", " 618 705 666 41 141 147 229 456 389 31 177 553 276", " 786 395 971 233 265 777 241 433 937 41 141 85 997", " 422 258 101 334 597 612 374 831 901 781 341 76 71", "9 571 11 749 325 873 957 701 972 921 221 948 956 3", "89 196 201 155 234 851 146 206 921 253 603 395 717", " 407 869 540 401 246 765 244 576 989 73 941 391 81", " 981 355 961 257 826 378 389 507 870 382 969 201 2", "43 117 209 672 329"};
    vector<string> lengths = {"249 329 471 884 500 845 193 797 481 119 909 686 80", "7 765 921 107 569 21 701 69 721 153 101 451 991 72", "1 297 557 76 224 6 322 17 422 385 301 927 250 596 ", "719 578 481 449 51 373 890 727 33 482 247 684 679 ", "45 133 651 241 97 341 69 364 504 246 255 501 641 9", "85 787 183 473 389 213 542 715 217 201 808 425 614", " 479 79 885 301 766 435 545 611 21 671 973 16 713 ", "493 879 805 865 49 342 809 413 657 431 506 74 570 ", "425 578 593 634 376 385 48 901 476 950 795 957 341", " 251 36 365 375 945 310 749 209 62 397 641 631 451", " 356 951 411 725 540 807 550 811 552 445 906 274 6", "69 497 561 575 601 929 613 48 876 709 277 329 543 ", "901 993 933 406 283 741 84 211 441 108 165 29 961 ", "281 411 106 653 479 430 493 716 455 159 913 190 20", "9 273 686 265 697 465 901 721 321 353 891 881 865 ", "121 297 65 741 291 737 711 457 437 217 665 991 129", " 409 405 177 50 679 711 141 173 409 582 594 326 66", "8 342 291 677 441 436 296 896 402 824 101 575 18 3", "21 311 457 91 1 881 923 527 218 895 951 461 872 76", " 213 497 195 805 46 881 397 879 747 21 129 18 801 ", "726 13 311 481 297 146 839 141 291 509 946 305 85 ", "99 821 1 376 236 917 561 531 988 113 101 1 148 436", " 978 614 111 905 796 839 66 717 870 400 474 32 391", " 68 186 561 95 853 690 995 791 298 361 857 721 251", " 926 393 396 769 295 545 81 172 725 501 25 145 237", " 345 593 303 456 45 939 491 532 316 441 715 492 29", " 481 524 499 251 201 503 874 101 152 501 861 218 2", "67 872 101 217 21 993 610 230 355 241 921 221 548 ", "979 921 473 361 499 434 421 632 967 101 357 543 18", "5 550 9 158 675 126 1 303 510 306 567 1 969 896 78", "5 903 301 846 502 961 54 989 407 289 95 782 701 27", "5 736 304 915 383 617 464 85 897 647 618 250 405 6", "6 905 722 941 323 389 205 291 185 557 277 561 876 ", "123 123 961 714 652 789 889 589 881 241 493 201 86", "3 345 267 339 699 296 298 831 765 835 471 691 375 ", "569 814 81 321 113 201 285 457 17 435 589 28 491 3", "90 969 201 853 241 946 304 149 713 554 669 821 431", " 933 649 656 441 329 26 129 353 446 631 589 757 65", "7 823"};
    vector<string> names = {"YKZY ZCLI Q W IW A A O A SHGQ X A SNQ W GY T I K B", "O U AUQ A M U C PWQ AGSK K KMK PYI J SQO E Q AMG A", "SDN A QZGY MNJU A QMAK YAC SAM OMII GJ XZA Q A VD ", "OB CSNF I B KO GAQM O VQIA G OU A H AM NQB X K W G", " RT FAF M UNQ W PL A GZP A QY O M WCK CAQT IKU I Y", "YS E K CLE ITOO Q Z GP PWES A U A W CJWO M III NRZ", "Q CPN ICWT RSS UJWA RYUG O MUN MT MZD H S A GFVE Q", " N DN Y YOG E B AY AB QD M CX AXKX GYO CHR P YKJ O", "OK A SKS G IP OUU F E X IUU ACO U L C H SNL ZIK YS", "Q CAOB S CKE ZOQS Z MK PO Q QAU EGU LWV W O G UUA ", "L A IE T I FKK G K Y AFA KIC CUB K K WEU IQ SNQ U ", "L GME K M IPEX A Z Y ISCB MOM MSEG CACI W O T ADY ", "C W CXU Q WN E A R MNOW AXW G UFVV C AWN MIIK M O ", "UKC E WGN BVM EJOU YER NN EPQ C A D K E PVK IK U V", "WGE GNQY U QQ A W P M H CWTO M WCA GCF X QWC QHA Q", "WQ W O W Z O Y KCY EU A HUWB KI PWO M SSB SOKV ASW", "M AA AI A KW O K Q CH S UUH Q WIJH UJ A S IGV A Y ", "AEIJ SMY IUDS A AOY O X A JN O A Z NAPG T A U EAP ", "E U A I CPY A LSM HSSZ X U RJKJ D WE UUK G V NQ YV", "E L WMJA A EI CNK WKA O Y PMWQ HM F A A FUR U AYX ", "QKAU K HOH MSI T O Y O YINZ W ZOO M QSB GA I I QS ", "S GFA NU O E A QYGY H G YHA M A DGI E I IEM FWYL C", " G KCA KURE B O N TM U J A HOO TEJ TG AFC IQ CO EL", "I AW S R EBI GQYR OEOU WF XI Z DG WE CU EGX KC MIE", " C EUDG V Z ASIK P E T AQ S CDPK GW E U S C U UV Y", "EA MYC Y G G AKN Q O IGA PQS X A I CKA ZS EGCQ S M", " G TAQX WTL G L YTW U M BB OLGZ AI E D AS A T Q N ", "QKAA RJUS Q EWEA Q T NXO K TYQ UCD WNU Y ASN C I C", " A WLY L WDK F BIA MG O G LZA P J VA A AMC AAQ W V", "JU JN QOA KAU W KKI"};
    int k = 7;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AOY", "ADY", "L", "A", "ASWM", "NU", "WNU"};
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<string> x = {"199 275 21 844 981 181 26 86 829 611 803 509 351 6", "87 167 725 1 971 718 441 425 312 276 136 273 593 5", "21 921 101 627 237 561 982 150 922 381 611 531 604", " 1 945 655 561 809 366 795 351 865 821 221 821 968", " 393 217 832 788 947 761 291 717 139 839 161 571 3", "99 922 401 5 625 350 659 379 113 183 601 155 843 6", "97 676 895 951 893 1 577 140 507 288 637 205 793 4", "60 501 810 483 177 501 224 221 129 705 839 939 236", " 710 401 169 904 901 31 330 461 670 609 612 565 48", "5 981 658 770 857 111 353 134 385 481 767 391 893 ", "39 805 640 191 127 505 974 129 625 199 265 131 926", " 625 625 403 97 651 673 712 801 638 949 441 721 66", "3 173 941 416 221 851 20 437 45 891 910 889 956 44", "1 332 319 513 53 936 434 282 379 726 969 965 706 8", "5 961 945 503 572 577 288 701 334 977 431 237 327 ", "753 128 635 491 497 693 598 711 329 13 661 639 271", " 493 223 726 753 33 571 121 575 569 115 221 575 15", "3 269 42 471 397 942 576 985 822 941 406 699 953 2", "24 336 791 67 31 981 69 969 673 716 299 779 165 51", "2 561 177 834 341 658 526 801 61 787 499 953 645 4", "71 703 501 649 789 373 815 691 302 523 985 221 359", " 277 823 581 601 672 201 521 551 815 657 801 668 8", "39 381 238 889 961 844 73 261 501 195 980 613 33 6", "21 724 841 601 225 989 951 571 329 831 505 406 585", " 88 961 993 399 101 601 947 696 391 519 833 366 25", " 993 117 716 778 527 417 538 781 67 959 267 225 36", "1 727 401 460 441 168 698 123 341 709 481 641 575 ", "501 1 994 302 451 781 262 331 501 593 521 781 343 ", "833 355 79 121 456 753 149 513 991 361 4 907 814 1", "55 359 693 496 906 591 81 242 891 783 881 325 778 ", "619 137 309 893 726 199 477 422 912 68 686 169 491", " 921 401 783 368 755 412 405 401 715 565 908 714 5", "55 368 793 1 822 183 801 939 748 213 193 545 541 6", "61 121 121 12 591 177 996 489 685 276 157 813 937 ", "981 101 59 101 253 28 570 381 570 763 676 893 413 ", "377 126 9 451 138 105 129 935 641 106 50 369 508 6", "36 676 960 421 9 751 585 666 277 65 249 506 105"};
    vector<string> y = {"985 471 8 768 259 709 654 201 419 939 637 195 967 ", "855 323 949 733 129 9 295 196 1 429 975 416 547 29", "7 521 993 151 289 945 583 433 216 235 81 865 989 6", "51 416 225 828 577 418 576 326 575 668 741 739 518", " 633 596 721 142 246 421 603 879 109 984 771 913 4", "1 113 825 914 751 197 971 971 367 539 925 241 741 ", "317 207 381 325 199 65 425 507 273 17 344 526 713 ", "511 670 383 36 486 341 161 483 758 51 281 685 413 ", "761 31 441 691 313 21 537 491 573 657 573 41 457 6", "41 308 451 838 725 488 355 385 423 314 969 801 285", " 140 52 205 209 439 393 921 164 155 764 321 447 22", "6 185 217 880 241 73 777 174 142 981 249 657 376 2", "05 331 677 821 46 969 611 856 350 816 107 689 905 ", "669 776 499 701 805 906 229 586 821 376 78 551 31 ", "523 694 201 561 440 708 237 71 353 831 891 397 415", " 781 23 809 583 722 390 971 401 689 808 946 493 41", "8 131 931 756 49 521 213 109 216 265 49 707 116 79", "3 953 601 667 966 793 387 665 470 339 686 419 211 ", "551 277 166 711 258 209 75 569 173 187 779 619 525", " 397 329 157 316 481 961 346 425 487 562 441 31 80", "4 825 215 91 848 387 98 525 593 341 635 481 317 49", "4 551 447 654 513 908 497 217 601 641 401 718 659 ", "904 168 6 830 354 251 201 65 287 710 531 681 183 4", "1 387 876 569 351 629 709 896 56 601 281 249 109 8", "45 173 568 791 553 24 676 167 609 891 991 817 689 ", "864 663 201 314 449 141 121 408 281 248 351 945 63", "7 3 318 101 489 65 841 51 756 96 441 1 1 145 552 5", "99 876 101 255 629 326 286 226 696 185 596 591 255", " 717 751 975 169 25 505 106 351 441 591 243 121 45", "1 959 71 511 797 665 908 480 651 701 436 287 891 3", "09 90 802 185 265 769 585 895 811 799 769 704 173 ", "524 994 713 247 541 453 251 610 331 781 413 431 31", "7 834 37 301 290 473 235 337 161 797 882 589 201 3", "93 569 273 577 353 576 828 16 617 425 210 626 244 ", "489 681 611 989 913 902 27 371 705 529 625 705 130", " 766 539 691 512 389 933 861 21 941 173 793 930 46", "7 805 690 151 956 657 653 801 620 263 767 72"};
    vector<string> lengths = {"516 78 101 525 46 461 316 711 669 777 660 77 117 4", "61 709 685 681 216 831 151 897 933 648 127 1 961 2", "01 91 884 7 589 574 154 969 149 1 751 881 456 941 ", "105 227 391 278 82 621 689 705 717 948 553 4 976 3", "55 745 357 151 951 675 474 501 473 906 257 871 620", " 441 45 115 121 840 129 876 554 950 126 119 728 63", "3 976 43 434 108 616 815 235 178 369 489 151 566 5", "11 421 691 137 659 921 488 374 701 1 793 217 683 8", "65 599 531 903 116 831 281 855 245 539 977 734 605", " 169 709 63 473 745 876 256 703 459 841 393 103 98", "5 249 249 647 803 176 901 679 153 621 423 119 237 ", "407 246 73 297 571 759 455 238 979 781 541 575 737", " 930 999 341 669 963 67 457 117 133 796 297 911 35", "1 281 217 851 823 819 245 146 645 941 789 917 960 ", "156 643 151 366 600 937 538 249 596 353 139 121 54", "7 491 903 945 689 497 261 657 937 68 671 770 371 8", "65 572 271 725 919 498 121 181 297 535 381 401 914", " 265 782 21 35 53 921 703 65 551 82 117 886 435 19", "8 955 521 218 627 65 66 440 957 293 857 660 256 41", "3 649 869 149 261 23 744 793 321 177 208 961 905 7", "51 981 81 851 554 473 30 359 744 542 793 237 817 9", "45 906 335 43 331 186 941 9 871 861 757 562 492 18", "3 525 7 445 411 143 291 766 711 81 454 861 73 203 ", "651 940 261 907 676 889 445 177 293 34 42 691 533 ", "596 208 182 289 165 840 247 953 323 923 670 349 64", "9 65 451 521 775 371 996 265 561 91 803 611 593 75", "4 701 754 697 181 341 559 758 633 936 851 31 814 8", "81 745 32 743 164 43 176 209 767 823 817 673 759 8", "47 379 959 902 59 526 305 713 759 241 847 459 465 ", "857 906 431 901 410 571 293 991 773 911 746 451 98", "7 839 615 239 37 261 633 84 245 157 155 957 711 89", "5 652 553 401 614 569 681 657 329 193 481 204 942 ", "509 159 523 925 781 158 223 313 41 447 756 192 159", " 921 21 191 896 491 350 945 437 375 309 725 307 23", "3 865 591 1 281 6 681 415 836 21 601 429 187 373 4", "70 277 501 780 476 1 981 701 977 521 741 255 701 3", "98 13 226 401 463 301 801 667 317 921"};
    vector<string> names = {"KNJW OUMP YYV SV GQE V YQS M KE KAQT O DYK U UEW E", "AG G Q M SON YMU YE I RQLW X A ANUF U WAA Q WAQ W ", "N O NZ C A K ROMA CII ITA OGQ AAYA OYA NPN S E W U", " X Q WUCW M O A B YHA DQM NIJ UG K S J TG EZYS G E", " EUU AIA B WOQ H U E CKG Y U K Z CNB V CEN YK L F ", "A Y H H DM AL NE OOK U AEL WM KNI M K EIK Q ANO BA", " Y Q C R A K UYLY T WMES JAJ UBP YVS II M IT GU OM", "G SALU U Q A TIW A UGE X AIG R Y ZOZ GSV K P B AWL", "M O O M X WB EOW DWH UAL N S AAR O A SCT Q AGC OUU", " R K XGAE O VWC KQSW G NQZ C HM OUSA I I T E O R G", " F ASAA AWWY U C IAV I M Q Z YI QOIN K Q Q AS N AT", "S L J YNN E KEO QDU A A AKFR N G II G E P CQGT X E", " A OI DYGM EIF EAO M GAM E E L X R O UYA CNP MCYI ", "Y WPO ENU GQ BQC EECU I O BYZF IAK T Q H H QSI C S", " X KALA A R QFOC ELQ Y K WB YA TQSC M A OC N F VOA", "H TJSU I H CU MUUI ZZMK Q C AIJ I AUMK FE K G NEA ", "GUK W ZJX AIC MKZ K O IGU CA IIC WFA U Q NQQ A UOL", " C FRA YY ID T O MS QOEA S YNS UKIA K YEFG N Y AEO", " Y MW EVG U E HSK GNND EXWN YAY XG BC T A AYEW V M", "IY A E L OSW V H U Y F YYGM W I ES LOF AYN KEE A Q", " S K IEU A A N QMAL UA XAUM U AT D O C J QCAO KL W", "NJ HSO ZTWE S U Y IYA E BLC G AH WVDG Q X E UQO N ", "K IFNT QY HYW X S I MC CFS NG U NMY CNK BA I RG ZF", "S UKXM KXA GQ M DMI UWO OR YAO KOEP A O W YYYI IOS", " GKE EC SA B YDQN EWY AGAM AWS VAY Q UM MGC W M WH", " XI JMAQ EK S AGU UZ SOD Y E IABI L AAZJ A EYL S E", " AQ S YCI YAS SDOI UQYW M S IAS NEVN N GA Q Q S A ", "EEUG M MOH PS PXA G S V E EFAA KSW CLK WVK S Q NEW", " A HSL A U A UCNZ A E"};
    int k = 7;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "GNND", "AAZJ", "GUK", "UBP", "B", "S"};
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<string> x = {"761 363 417 562 17 321 831 817 675 419 86 115 126 ", "276 185 796 621 257 144 630 241 211 803 301 802 49", "3 659 950 449 161 10 113 389 927 303 761 791 52 87", "3 481 229 603 906 797 281 471 72 213 480 201 841 8", "81 958 389 3 823 813 393 812 861 414 193 774 407 5", "17 66 433 205 321 625 150 221 391 432 889 904 97 1", "7 761 668 635 307 901 270 646 545 389 946 863 767 ", "681 826 276 809 955 909 937 659 791 839 590 181 32", "9 871 403 314 509 3 224 501 194 577 561 521 1 553 ", "481 961 10 151 91 396 601 1 257 997 457 625 901 48", "5 210 636 569 961 589 203 501 541 343 640 631 776 ", "326 577 494 741 1 609 142 133 223 836 461 409 801 ", "759 905 316 731 674 869 543 457 923 861 751 193 41", "8 349 1 701 407 101 889 311 189 787 651 253 57 104", " 625 841 634 121 905 665 161 451 741 705 961 581 4", "86 176 261 591 90 839 351 781 928 493 357 581 401 ", "749 93 333 344 12 933 550 617 837 885 274 649 366 ", "547 673 201 792 701 601 411 507 984 51 738 179 110", " 993 679 366 759 930 799 501 695 991 568 43 65 989", " 501 817 816 311 656 119 364 393 945 905 921 129 2", "41 953 411 116 161 1 369 649 360 964 381 785 864 7", "27 275 241 386 277 583 751 667 755 325 321 591 833", " 391 49 577 73 385 946 829 896 201 725 61 153 361 ", "449 755 991 136 475 421 141 766 476 65 285 691 484", " 502 959 649 921 881 359 685 575 496 979 161 241 4", "21 297 345 939 931 195 761 121 99 71 113 454 968 7", "41 257 113 636 241 120 617 221 26 997 91 305 685 4", "77 925 841 71 117 341 769 943 177 826 807 117 917 ", "367 329 946 857 639 81 721 634 916 433 166 301 216", " 321 689 41 916 288 817 942 378 599 661 726 188 21", " 135 309 285 279 91 217 799 513 699 697 1 705 617 ", "349 281 885 211 681 997 169 117 651 697 998 217 17", "9 260 369 217 426 55 683 641 878 25 411 357 893 69", "3 629 441 405 865 995 569 856 205 952 18 522 208 8", "21 801 429 697 23 817 804 803 361 573 944 353 941 ", "306 429 896 457 941 128 425 167 117 941 860 859 35", "3 405 179 537 721 551 569 359 836 376 206 961 334 ", "95 381 101 801"};
    vector<string> y = {"969 279 21 499 485 536 633 16 220 365 926 26 686 9", "67 381 259 227 910 909 579 386 786 816 423 47 61 2", "21 926 265 515 215 281 577 525 230 307 251 601 188", " 881 799 1000 895 10 881 539 485 531 297 363 837 2", "75 431 409 627 817 588 849 963 897 326 75 551 161 ", "501 768 13 556 885 131 951 866 188 418 346 876 911", " 241 429 671 63 51 301 293 31 630 617 483 25 1 851", " 249 771 801 321 729 215 450 368 690 95 589 957 22", "1 1 996 731 631 381 841 541 996 259 57 833 136 371", " 754 555 847 51 92 364 311 611 892 219 753 241 746", " 455 381 725 281 687 461 953 208 485 708 751 872 9", "73 17 126 943 57 269 257 673 825 301 297 541 305 5", "29 661 123 976 475 735 596 47 117 153 33 484 97 29", "9 125 1 91 226 146 757 894 120 599 641 272 326 361", " 685 339 173 612 280 41 457 206 541 88 481 383 327", " 750 736 663 1000 1000 621 886 681 213 430 63 955 ", "501 209 765 628 584 561 25 390 441 150 881 783 145", " 19 395 251 1 297 568 753 801 49 717 645 350 201 1", "70 900 336 929 580 992 285 649 83 453 35 895 81 74", "9 147 711 626 320 281 972 187 20 308 319 345 83 11", "7 813 585 947 405 492 169 561 561 751 281 713 376 ", "581 517 515 51 233 749 163 814 239 133 457 904 766", " 401 641 897 402 954 451 268 436 49 751 221 768 1 ", "86 685 45 793 16 913 616 926 533 642 721 473 113 9", "71 17 852 235 529 151 25 451 171 923 59 305 662 55", "9 481 791 142 21 249 723 943 235 523 629 417 425 1", "19 783 809 41 801 361 785 945 785 761 449 439 886 ", "775 389 337 135 176 829 13 636 131 179 283 957 377", " 241 239 511 433 911 992 541 737 53 301 545 761 40", "1 528 291 554 643 101 445 49 471 799 539 806 141 3", "01 746 620 390 900 344 583 581 816 889 361 141 561", " 553 65 257 353 737 491 117 97 293 477 746 433 212", " 413 281 757 897 661 251 506 521 425 216 890 508 1", "56 542 618 607 105 613 441 830 869 817 921 280 457", " 987 975 501 729 79 793 812 711 307 551 661 751 50", "3 375 811 526 221 241 205 165 891 147 577 225 296 ", "397 915 105 457 365 593 95 307 991 716 375 982 401", " 377 593"};
    vector<string> lengths = {"964 81 611 959 481 707 831 425 266 237 933 149 295", " 301 881 127 399 508 697 462 686 525 589 633 255 6", "59 31 681 915 336 933 993 597 938 986 507 595 697 ", "312 321 506 415 865 201 4 137 231 476 458 289 973 ", "47 587 617 582 801 451 313 306 881 170 593 826 362", " 297 851 937 171 841 229 297 517 521 113 696 981 9", "69 801 409 425 813 353 187 44 661 315 833 453 341 ", "847 245 621 688 596 696 49 243 519 337 176 160 529", " 601 272 261 837 234 857 498 497 633 957 140 561 8", "12 146 501 797 133 609 299 665 305 730 153 24 929 ", "89 705 25 603 126 449 765 843 551 579 916 969 627 ", "721 681 169 941 301 41 601 172 623 206 976 513 641", " 576 242 623 831 601 429 406 27 605 331 345 559 40", "1 147 546 117 377 899 941 171 943 289 225 653 276 ", "841 261 332 421 975 654 273 297 549 126 603 579 72", "9 885 701 745 494 169 657 434 51 104 705 981 29 65", " 209 705 573 767 557 219 277 771 661 369 846 381 2", "41 469 689 665 225 700 557 73 769 973 32 762 459 2", "95 837 233 857 592 838 157 630 577 905 994 481 89 ", "310 638 201 489 381 48 346 422 606 435 631 819 571", " 581 478 801 645 975 751 296 941 5 406 171 335 252", " 61 767 401 19 173 192 13 34 528 233 679 791 765 8", "16 161 271 645 816 761 421 708 433 293 489 627 643", " 146 284 297 369 209 121 301 169 601 151 909 301 9", "83 126 889 351 409 113 630 895 569 781 41 575 924 ", "957 522 917 777 1 141 809 165 646 151 721 359 9 19", "1 645 411 137 630 629 983 348 433 823 303 471 42 1", "90 763 898 119 961 253 239 685 128 887 731 411 567", " 496 257 690 273 939 906 108 519 176 921 120 848 5", "69 573 173 701 629 249 309 33 176 849 901 376 41 9", "94 561 289 781 417 373 251 872 41 281 973 839 125 ", "239 384 751 967 115 467 785 411 810 105 335 293 78", "9 375 226 725 714 449 241 722 833 153 535 125 587 ", "182 203 316 450 481 111 601 120 785 240 783 645 56", "3 781 209 209 861 136 408 791 214 100 95 681 4 1 8", "64 201 649 293 329 449 501 1000 597 326 736 203 91", "3 26 408 625 471 483 330 506 496 376 273 621 201 2", "75 613 671 443 176 651 577"};
    vector<string> names = {"I U ADE CE QK WO ASH S AW PKJL W FSA NLUM AEQ J C ", "HV A KCA GKN O CU G QAO CYE K Q GV Y Y BSU CA LQY ", "U ASE QL EMJH A QSA Y U YCK M DWOO OIK OUU U SQX M", " TY C A QSM WR DQW KG A ESD AZF OOK K Z GYRW O C M", "EA M M IKN AM SQI Y U WAO M H YQZF KAEG N F VGP J ", "A D S Z AGK NKU EAU F SN UAWI K S UPY EAEW XLC Q B", "QW K CU GGK ZU KQ C H U M FOKA O MM Y FER AA A Y Y", " NHUC QN X VGC QK W QZI C I L O CB G C U N M Y N G", " AAN YAA Z O O TODA W G N ZAWJ SNO QCK OA O A WK C", " CX KJJ AGX YA RKB Q OEOV W AT CW PYI J IGYM HYY K", "QU D CXS E S KHPY SM K LVS IU PLK ANJ M U QIL W G ", "G QB CABA KC Y B M W E Y A QM W Y Q W C N YZN JWC ", "AAM AB KUQ P KWW WBQS P ACA OPQ IEXA SXG IV QA QVK", " LABA IA W J W AYA QE O P U UUN PNRE M JSON G ZI K", " Y IP ETE M TNA ZAO EBB EK Q SACI DUAW H QE IC HF ", "SOQA Q AIL CK A GCGA AA S Y OAL K R P M YUMV B G M", " W I IIK UBB A A XCZJ M ASM J ICN A QEY YQTA YO N ", "G LAD DJC A XSA SNA XGQK Q CAGT VO S V L K ENA U Q", "KVZ AAH H YDK G LD F G B Y T I OJRM EBA E M O G TS", "E YYO SCWA NOI NJC Y GTA A MSQ U X N JRO Y W U S I", " M X GAF O W P YOA O C C AGQY ABH L C QLS HHFN YOG", "P MLZ HMYC WDAY DWYS R O V J N A E WMK Q O BLHA ST", "W P MYA MMQ RUOA A TA UYA M A CZ A A KEW J A H CE ", "HAWC KYEY Q A XNQK P I OCAE WQ O M S GK A UJA M WC", "P N YOAE X UMBP MOK IS A AQ U OU ONNE QCKA N U RPA", "I O C KMP OSFE OCA J MUQT V OK I SJUM I V S UE AA ", "Y U SJE BXSH GAAQ MIU LUJ J ML UKE CGA VAI IW C S ", "M MUA C G UESN N JA QET KFYR X W P CL CNY ILG N S ", "QNQ MJ OCWY F I I QD G M S A O"};
    int k = 7;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "AQ", "A", "U", "AEQ", "TODA", "Q"};
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<string> x = {"140 130 130 130 142 128 131 128 139 134 141 132 14", "0 142 140 136 140 135 142 130 132 134 136 129 128 ", "139 141 128 139 134 142 140 131 134 143 137 134 14", "2 132 138 138 140 132 132 131 132 140 128 137 138 ", "141 134 142 140 128 132 130 131 143 128 132 131 12", "8 142 132 131 129 136 141 139 136 131 128 140 134 ", "140 134 143 141 135 141 136 132 131 128 128 134 13", "6 130 128 130 132 130 138 136 130 136 134 139 136 ", "141 128 132 136 142 136 134 139 128 140 140 139 12", "9 130 134 130 140 128 136 128 129 136 128 142 132 ", "134 130 128 131 134 132 140 132 140 140 133 142 14", "0 140 128 133 132 139 132 143 135 134 141 142 135 ", "136 133 136 130 138 136 129 138 132 134 138 130 13", "7 128 129 130 132 136 139 128 140 136 140 142 135 ", "141 136 132 139 136 141 142 142 138 134 128 134 13", "6 132 139 142 142 140 136 137 136 136 134 140 135 ", "133 128 138 132 142 134 130 134 138 136 128 138 14", "2 134 130 140 131 136 128 134 136 140 128 132 128 ", "136 141 142 136 139 128 142 142 128 128 140 136 14", "0 131 130 130 131 133 129 140 133 142 138 134 131 ", "129 134 130 136 129 134 130 133 128 128 138 143 14", "0 135 133 134 137 132 136 140 136 132 135 141 136 ", "141 135 142 143 128 139 137 136 131 140 129 128 13", "8 130 138 129 136 140 136 132 139 132 141 136 134 ", "128 139 137 135 142 132 132 142 131 138 140 128 13", "2 142 138 134 128 136 142 142 136 136 131 130 136 ", "128 132 128 138 128 132 140 134 140 140 130 140 12", "9 143 141 140 128 128 128 138 138 128 140 128 136 ", "134 135 139 135 133 136 128 128 139 130 136 128 13", "5 143 134 139 129 133 131 132 138 128 136 140 135 ", "128 136 128 143 132 132 136 133 137 128 140 130 12", "8 139 133 128 142 132 130 128 128 136 135 132 128 ", "132 139 134 128 138 142 132 136 138 132 140 128 14", "2 136 134 142 132 131 128 135 138 136 128 140 128 ", "140 129 128 142 136 136 132 129 135 130 131 128 14", "0 133 128 139 136 128 138 133 128 138 139 137 134 ", "133 128 130 143 137 131 142 140 131 128 143 128 13", "7 137 128 142 136 130 132 132 137 136 140 128 137 ", "136 128 140 129 143 140 138 132 128 135 133 134"};
    vector<string> y = {"132 132 134 136 135 128 136 134 134 141 138 141 14", "0 136 128 139 130 131 134 142 128 128 128 138 138 ", "130 132 142 133 132 138 129 138 135 134 136 140 13", "6 128 142 139 133 137 132 128 143 128 130 135 128 ", "128 140 142 141 136 132 140 128 136 128 137 128 13", "6 135 131 129 136 132 142 136 128 132 134 141 128 ", "134 132 130 130 141 134 132 132 138 132 136 128 14", "0 128 128 140 128 128 140 134 137 138 128 135 136 ", "133 130 130 140 132 140 136 138 140 132 141 138 12", "8 139 132 130 138 130 136 139 138 128 129 143 134 ", "136 136 136 142 142 138 142 134 136 136 143 140 13", "1 130 136 130 134 130 136 136 138 136 140 136 136 ", "136 135 140 128 136 142 128 132 141 139 136 132 13", "7 131 142 134 142 134 142 132 135 128 143 137 130 ", "142 128 130 134 142 132 140 142 128 136 138 139 14", "3 128 138 136 140 138 129 130 129 136 134 140 134 ", "135 137 135 136 140 135 143 136 141 142 130 132 12", "8 136 142 128 129 131 138 143 128 136 138 141 128 ", "132 132 142 139 139 142 143 142 132 139 134 136 13", "9 128 140 139 128 129 140 132 135 134 132 133 134 ", "142 128 128 138 138 143 137 128 128 132 133 138 14", "3 135 140 140 138 140 136 142 128 132 134 130 136 ", "140 140 136 128 128 128 134 133 137 132 138 134 13", "2 134 130 132 128 139 128 129 141 141 134 128 135 ", "128 128 141 128 128 131 142 130 128 128 136 136 13", "6 134 133 140 140 128 132 140 132 141 142 133 129 ", "128 128 142 128 140 128 133 136 131 134 140 128 13", "2 141 131 142 130 129 136 136 135 130 137 134 136 ", "128 130 136 136 138 128 128 136 136 130 141 138 14", "3 138 128 143 142 140 134 136 131 128 128 130 137 ", "141 134 142 136 140 128 136 140 141 132 128 142 13", "9 128 143 128 132 137 135 128 128 138 136 132 133 ", "132 142 128 131 137 128 133 140 137 130 130 133 13", "6 132 138 129 132 143 136 137 143 138 133 142 134 ", "141 137 143 134 128 129 128 136 128 133 136 128 13", "3 142 140 138 136 128 130 128 128 142 136 128 128 ", "142 132 132 143 139 133 140 128 130 128 140 128 13", "6 128 143 139 140 136 140 136 141 128 140 137 143 ", "132 129 128 142 141 128 139 131 136 133 138 128"};
    vector<string> lengths = {"128 132 136 139 135 142 128 130 128 128 140 143 12", "8 132 142 134 128 129 141 138 128 142 135 142 141 ", "136 143 128 128 128 132 130 138 142 143 137 139 13", "6 128 136 136 135 137 142 134 130 140 134 137 136 ", "142 131 132 137 136 128 136 140 142 136 132 128 13", "1 136 128 128 128 136 128 136 140 128 141 128 128 ", "128 138 128 132 136 128 131 136 143 136 134 131 13", "7 138 134 134 129 136 128 136 139 140 142 132 128 ", "135 140 128 142 136 142 132 136 128 140 128 136 13", "6 137 138 131 139 142 128 135 128 132 132 137 130 ", "142 140 136 131 135 136 128 134 129 128 138 132 13", "4 128 132 142 139 140 132 128 136 134 142 131 132 ", "128 128 128 138 130 132 134 129 134 134 143 136 13", "4 136 134 128 140 142 128 141 139 129 140 143 140 ", "143 134 142 141 136 134 140 138 138 130 142 128 12", "8 136 132 132 128 130 140 128 134 138 131 143 134 ", "142 135 128 128 138 136 129 128 140 142 142 141 13", "0 137 139 128 128 128 134 128 142 128 128 136 140 ", "134 132 140 142 140 136 142 128 128 136 135 136 13", "3 128 136 128 141 136 136 128 132 128 143 128 139 ", "131 137 140 134 138 128 135 136 128 134 132 135 12", "8 132 128 135 134 141 132 136 134 130 128 129 140 ", "136 132 128 129 136 136 135 128 128 142 140 128 13", "3 136 131 136 128 143 132 128 135 128 132 132 137 ", "132 136 132 128 138 132 142 132 133 128 134 136 12", "8 142 140 134 140 133 139 136 133 137 134 128 130 ", "140 128 128 139 132 128 140 137 138 139 136 139 13", "6 128 128 131 130 139 140 136 134 135 136 128 130 ", "131 134 128 142 143 140 131 142 130 130 128 134 13", "2 141 132 138 137 128 134 132 130 128 132 140 128 ", "130 128 128 137 136 140 140 134 140 128 128 132 13", "8 128 128 138 132 135 140 133 143 128 130 128 136 ", "137 136 135 128 137 128 136 128 139 140 137 128 14", "0 139 139 128 131 135 139 133 128 140 136 136 132 ", "136 132 129 132 132 132 140 142 134 137 136 132 12", "9 136 140 129 143 132 142 140 143 132 128 128 141 ", "132 137 136 140 128 140 133 128 134 128 128 138 12", "8 138 131 143 136 138 137 133 136 143 130 132 129 ", "142 129 129 140 138 133 129 142 132 142 140 133"};
    vector<string> names = {"BA CEG FF E FAG EAC C A AGB D D DAAD G CBCC AFGC A", "AB D AFA A F E EAE C G F E AC GAD B B G G EBC GAD ", "E CGBA B EEFB B EAE A A A C A A A EEAC A FB DFF A ", "D A A AGFD EB E EG D ECAC CDA B A E AAGG ADG GBB E", " A GD G EAC B GC F A AE FAC F D DE GAG ADGB A G CE", "A G G BEE A ABG EG AB CED G DA B FFDB B DE AGDE FB", "E DA F A G D GAE D B CAB FGA FAED F ACD AACD B F E", " A GDAA E A AFEE CFCA C C A EGFA AGGA FCG FEA ABF ", "C AF A CEB BFC ECF EABC E E C F GCBE E E DBDG BA C", "ADF DBE B G G A AFC BADG DAGF C FBG CA EDCC CACA C", " EBA AGC AGBA A C D E E CADA C DDE A EEA CDB EAC C", " AB AAF C AACE ADE AEE FCA A B GCF D A CFG AGB ADE", " FCG F B E A DFFG C CFB DB D GFC D AAA A A AAD G A", "EB C AGEA CE FB E EA AE CAG C ACC GF GBGF D E A E ", "CDD E DDAC EA A C FED C EAA GCAB A AFE AB A A D A ", "A G A ADE A EFE DB E GGGA GGA BC AEFA EEDF EAA DCB", " ABCC AAC D D A D BE ABAC GC EGG ABG G BC A E GD F", " F ECC C D B DDA E FAE D E C GD AAB DGFD F E B G E", "GDF BCDE F G G FC F DCA DAAD DE BE G C ECC B EFE D", "F A B C G FFBE C CB FF DGDG FFFE FGG AAB CA DAA D ", "BCA DFF DBCA GA AEBG A GFA DE AA G A G A EADG D EF", "B C C A F A E B AEB FB FGCC A FFF E A B A GA AEA F", "EGA BAFB AGGD F F DB DD DEF E A F A F A A DAAG G D", "GBG C E AEE G ED G BG G G DAG FCE DDB F G AAA A GE", "D FA BEEB DGG CA A DBG G A DAG F ABE B EDE FF AB B", "GE DB E AGC BAAA C EBEE B G GCA A GEG ADE BAB G AD", " AG A AG B A E FEA FGD GBA EF G A E E C E A G D G ", "B A FGA AACG G E GABE A DFE A A C FE A B A EFDE G ", "AACD E A A G E EAB BD CADA CFG BC GED AAEA D A G F", " A GEDA A"};
    int k = 16;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "AAA", "AAB", "DAG", "FE", "D", "F", "BEE", "G", "E", "FGD", "G", "B", "CA", "DFF", "E"};
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<string> x = {"128 136 130 132 140 138 136 141 142 137 143 136 14", "2 128 140 128 132 132 136 142 129 140 131 140 129 ", "142 138 131 128 132 136 128 136 136 139 132 129 12", "8 140 142 140 136 128 136 140 130 133 141 128 141 ", "142 140 131 136 136 138 140 136 140 141 140 142 12", "8 130 142 128 133 130 128 137 128 136 128 143 128 ", "138 128 136 136 138 132 140 136 136 140 142 128 13", "0 130 136 130 143 130 139 136 140 134 140 132 128 ", "128 138 134 134 136 139 139 138 136 128 140 131 14", "2 136 142 140 138 136 137 136 136 132 128 128 140 ", "133 130 128 138 129 139 140 129 141 137 132 128 13", "2 132 134 131 140 128 134 132 136 142 139 130 136 ", "136 136 130 137 134 128 129 130 136 138 128 140 13", "7 130 128 138 130 129 139 132 130 130 135 135 133 ", "139 128 128 136 128 128 143 140 137 136 140 134 13", "1 137 128 128 138 133 142 133 129 130 132 137 135 ", "138 138 131 130 134 140 131 134 132 136 132 132 13", "4 128 130 135 133 143 140 132 143 128 142 132 139 ", "138 136 128 136 132 138 130 133 128 140 137 130 13", "7 136 134 139 137 140 129 128 139 128 136 128 128 ", "128 134 136 132 136 132 128 128 131 133 138 130 13", "6 136 139 134 136 136 129 128 130 136 129 128 140 ", "134 134 143 131 138 132 132 142 128 128 128 140 12", "8 137 128 129 132 143 131 141 136 128 137 140 133 ", "138 140 132 136 134 136 132 128 140 138 128 136 13", "5 128 134 140 136 128 130 137 128 128 133 128 131 ", "133 128 136 142 139 131 143 132 134 142 134 133 14", "0 140 134 140 137 142 136 134 130 128 128 132 133 ", "131 130 136 128 142 136 128 140 137 138 137 132 12", "8 137 138 134 138 128 132 128 128 136 132 134 128 ", "142 128 128 130 131 142 142 128 136 128 138 140 12", "8 128 143 128 142 140 130 142 142 139 139 128 132 ", "128 128 128 140 137 139 136 143 139 128 140 132 14", "1 134 140 131 140 129 134 130 131 128 131 136 132 ", "136 136 142 140 136 133 136 137 128 136 129 128 12", "8 143 135 134 131 128 136 134 134 133 140 128 128 ", "128 142 138 138 142 130 138 131 135 130 140 142 13", "6 132 130 128 134 136 130 128 130 132 140 134 132 ", "140 138 136 138 133 136 132 132"};
    vector<string> y = {"128 130 131 128 132 136 136 128 136 137 136 136 12", "8 130 132 140 129 130 128 136 128 143 136 135 141 ", "129 133 138 128 138 130 128 140 128 134 130 142 13", "6 140 141 138 130 128 128 128 128 130 138 130 132 ", "128 138 141 134 132 136 141 143 135 138 131 143 14", "3 140 141 128 131 135 138 143 128 128 128 128 140 ", "139 128 143 140 136 132 132 132 128 136 142 136 13", "2 134 132 128 136 137 132 128 138 142 128 143 132 ", "136 132 136 128 140 137 132 134 140 138 140 137 12", "9 129 139 130 138 130 134 138 134 128 128 132 142 ", "142 128 132 140 128 128 132 128 136 136 128 128 13", "2 131 129 139 130 134 132 128 133 129 140 132 134 ", "128 128 128 128 142 143 128 142 138 140 134 136 12", "8 136 128 132 137 130 136 128 129 140 141 132 133 ", "128 143 132 130 130 128 133 140 138 137 128 140 13", "4 136 130 130 136 142 138 134 129 131 129 140 128 ", "137 140 141 140 132 128 128 128 143 140 139 140 13", "0 138 128 136 128 136 136 140 128 132 128 132 133 ", "138 136 131 130 130 128 130 132 128 128 142 134 13", "9 136 136 131 132 137 130 140 128 133 138 128 130 ", "130 132 128 136 136 129 140 128 138 132 142 134 13", "3 131 128 132 132 142 130 131 140 138 134 140 140 ", "133 129 143 134 128 136 141 131 142 129 128 128 13", "0 130 141 140 140 133 143 132 128 128 136 138 130 ", "129 134 128 142 128 128 133 136 136 140 128 139 13", "1 132 137 132 138 132 138 141 128 128 128 142 128 ", "136 128 130 134 143 130 130 128 140 128 142 130 13", "0 137 136 128 128 141 142 132 136 136 140 137 128 ", "128 130 136 128 128 139 136 133 141 140 128 138 14", "0 137 137 137 132 136 132 131 132 128 128 132 129 ", "136 132 129 139 128 134 135 129 142 142 139 142 13", "1 132 143 136 130 142 138 128 132 129 135 142 134 ", "143 138 132 138 132 140 129 137 130 138 140 129 13", "0 138 140 137 132 128 128 135 140 128 128 143 142 ", "136 136 131 128 136 131 133 136 131 131 143 132 13", "8 140 138 128 136 132 138 141 128 135 136 133 133 ", "128 136 139 134 143 136 142 137 139 138 132 134 12", "8 134 143 140 134 141 139 133 141 142 132 143 134 ", "132 128 131 128 136 133 140 132"};
    vector<string> lengths = {"137 128 140 128 133 134 140 136 128 132 132 134 12", "8 142 140 132 136 137 128 140 136 133 131 132 142 ", "129 136 136 128 142 128 139 139 128 132 134 128 13", "6 128 141 134 128 138 137 132 131 128 132 136 142 ", "128 129 136 140 140 136 141 130 136 142 139 140 13", "7 134 132 128 141 134 132 138 140 136 136 130 140 ", "135 132 128 138 136 128 136 136 139 135 133 132 13", "8 136 136 137 128 135 129 133 128 138 128 142 136 ", "131 134 135 138 140 128 133 136 132 130 138 128 13", "8 130 141 140 138 134 136 128 130 134 137 134 141 ", "142 129 139 134 142 134 140 128 136 132 140 139 13", "6 136 138 133 129 138 137 137 130 132 136 132 128 ", "134 136 142 134 128 131 134 142 128 132 137 136 13", "2 130 135 140 137 137 141 130 132 134 138 132 140 ", "136 131 132 128 130 142 137 138 140 131 131 137 14", "0 133 142 128 133 134 138 138 132 134 142 128 139 ", "138 128 132 130 133 128 132 129 132 138 140 128 13", "9 140 132 130 128 129 135 132 142 143 132 130 128 ", "142 134 136 128 140 132 143 133 128 142 132 140 13", "0 135 131 142 128 130 131 136 130 130 136 134 128 ", "131 143 128 128 136 128 138 133 136 134 128 142 13", "3 134 132 135 131 129 137 134 128 128 134 128 134 ", "128 128 141 128 128 138 128 136 140 128 140 128 13", "5 139 142 132 133 134 128 140 140 136 128 128 128 ", "138 136 134 143 141 133 141 130 130 140 141 132 13", "4 134 138 134 136 132 128 134 138 128 141 136 132 ", "131 139 128 128 133 139 140 130 136 132 132 140 13", "6 128 129 129 136 140 132 132 136 136 141 139 140 ", "132 136 134 133 128 136 140 131 134 141 128 133 12", "8 138 140 142 130 137 140 135 131 131 128 139 136 ", "134 139 134 136 136 133 141 128 129 142 132 130 13", "6 128 133 136 138 131 134 136 132 132 130 136 128 ", "128 128 130 128 141 132 136 137 132 128 138 136 13", "0 136 136 130 132 130 130 128 128 137 134 143 136 ", "142 132 140 129 138 143 141 138 132 132 131 128 13", "8 141 134 140 138 134 141 128 136 142 139 132 143 ", "130 142 133 140 128 128 128 128 140 140 130 130 13", "8 133 133 128 136 128 132 132 128 138 132 129 140 ", "139 130 130 129 136 132 136 141"};
    vector<string> names = {"A A FFE AGDF CF AC B F E FFA BAG FBAF FDF B A AGC ", "G AEAB F DCEB GE A DAB G EBF CC D B B BF AFB GEB A", " FAC A E AAF CAAB G B GG ED GAE E AFF C B B DB BFC", "F ACA GA G AFD F G D B EE EFE A FFGA C A DG AG BA ", "F A F FAA G A G EC G A CG EED EBEB AFD BA AE EB E ", "DC AEG GDAA FAE AAGB EE AFE EFEE AE ACEB F ADCG F ", "ECF GE AGE A C GE AEG A C BFE CCG EAAB ADGA GAAC A", "AGF GEAG B F A CCC B C D DA G GAA FDD A A G AG E D", "ED C FFC D D A G E AGE B CDCA DAA AGAE AD G DA E G", "C G AAF B F D DAB ADC AB EAC C E C D F BA FG FFD C", "BE GAC G BDB CEA E A GEA AAA D EFD A G AA E A CEE ", "D AAB CFGB G F GGCA GCBG FDE E B DEC AG AFG AAD A ", "AAAC D AGDG DAC D AEBC A C CBE CEB B A D B E BC A ", "DGE C AB AFB FCC AED A EBFG A G ECA G D AAAA ADD A", "AFF BD AFD EBFB E A A A A D BDGE A BCC E BGC B AC ", "A G E C FAC A EC CBBE E ADD C A BAF BFC CEA GAGB D", "A C DCCC FF D EC ADAE AGCC F F B FGG AAAG BABA CFD", " ADCE E BG DCA BDE F B B B BAF B DAGF E FC D BBF A", " BCA FDC BE E CFA AAD EFDE GFDA CFAD F A C C G A F", "CD A FFCA G FGA D AAD G A A A FGDG D F A G B CBG C", "A B DGC A C C G D DGF A E F E G EEA DFB F B EAA GC", " EFG CC F GBD GBB G D AAAC B ACB DBA BFB G A A AAG", " FCFD D DA DFD B D FB F DAAC F DCF E G A G ADCB EB", "A AECE BBB AC G AEEA E CB EAD E AGD B CD AFA GC E ", "D F F CB AE FGAE A CEA ADGG ACGC A ABG C A F CDA B", " G F A A C A A E FB G E E AB D ABA A BCB A D ABA F", " EDF D A FAFC FBG EGB F AGF B G A C B D A A D A B ", "GDAE A D GCA D BEA DAGE D EGB B D C D A CAF AEE A ", "B G AD AEE D C C A C A B A A FEG"};
    int k = 16;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "G", "A", "BE", "FFD", "E", "A", "D", "A", "A", "AG", "B", "D", "E"};
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<string> x = {"140 130 136 128 138 140 142 138 128 140 128 141 13", "0 130 131 142 141 129 128 130 132 141 128 128 142 ", "130 135 143 138 134 130 128 136 133 132 140 135 13", "6 132 130 136 142 142 128 128 136 142 130 128 136 ", "130 133 141 136 142 129 128 132 128 128 133 136 14", "0 129 138 132 128 138 135 140 128 128 136 131 142 ", "131 140 130 141 140 139 140 134 128 128 129 129 13", "1 140 134 132 140 136 128 142 130 142 139 129 128 ", "140 136 140 132 142 134 132 130 134 128 134 132 14", "2 138 139 132 142 128 134 136 136 128 128 129 136 ", "133 136 132 136 140 128 130 140 131 137 129 138 13", "8 132 134 132 136 129 136 132 143 140 130 128 131 ", "128 140 131 138 141 128 132 133 142 136 128 131 12", "8 142 138 133 138 132 128 140 142 128 131 139 136 ", "140 132 128 136 133 139 133 128 132 143 131 142 13", "6 128 128 129 136 142 134 128 135 135 133 134 139 ", "136 132 134 130 132 138 140 132 132 131 132 130 12", "8 132 140 140 128 133 143 136 138 141 136 139 135 ", "132 132 129 128 137 137 128 130 140 132 128 143 14", "2 140 138 132 136 136 136 128 140 133 136 132 139 ", "134 132 134 136 134 132 128 134 140 135 140 136 14", "2 136 143 142 128 130 140 140 130 128 136 128 134 ", "140 128 141 128 134 138 131 130 142 128 128 133 12", "9 130 140 128 140 134 130 132 141 132 135 136 137 ", "128 135 129 136 140 135 136 130 132 128 132 137 13", "6 135 132 143 128 134 128 140 128 133 132 141 128 ", "136 130 128 132 141 135 128 128 133 130 136 132 12", "8 141 134 134 130 138 130 128 140 136 138 128 139 ", "139 140 128 134 138 128 138 132 128 129 128 137 12", "8 142 136 129 138 130 140 130 128 142 134 130 128 ", "137 132 139 139 132 143 134 131 142 139 140 128 14", "0 132 128 130 128 138 138 130 128 128 136 129 135 ", "136 128 138 134 131 128 128 143 128 130 128 137 13", "4 128 129 140 128 140 129 134 128 134 130 136 136 ", "132 135 132 142 138 141 140 132 142 140 138 140 14", "1 138 128 132 131 130 130 128 143 141 130 135 136 ", "140 136 140 136 138 140 133 135 128 132 132 140 14", "0 130 139 136 136 131 142 128 142 128 140 143 135 ", "139 128 128 141"};
    vector<string> y = {"130 136 136 134 132 142 133 142 134 131 139 132 13", "4 128 128 136 142 133 130 128 142 136 130 128 128 ", "129 128 141 130 130 143 137 132 130 128 140 128 12", "8 132 134 128 134 140 128 136 143 128 136 132 130 ", "140 132 140 136 140 136 128 128 133 136 132 130 12", "8 136 137 138 138 136 133 131 142 138 137 128 133 ", "128 140 142 140 130 141 132 137 141 139 133 132 13", "6 140 136 139 133 130 141 135 135 128 139 140 142 ", "140 135 128 141 132 140 130 131 128 138 142 139 12", "8 128 128 136 138 139 136 142 139 142 142 132 133 ", "133 141 129 140 128 138 134 135 140 136 137 135 13", "0 136 134 137 128 128 128 132 128 141 140 142 136 ", "135 128 138 130 132 132 130 138 141 140 128 128 12", "8 132 132 128 142 132 128 140 133 136 128 137 134 ", "143 137 136 142 139 137 139 136 133 136 132 132 13", "3 138 136 128 132 133 130 141 128 134 140 133 129 ", "132 140 133 136 143 135 141 140 128 128 129 138 14", "0 128 132 128 136 140 136 136 134 141 128 135 135 ", "142 136 140 137 141 141 140 128 132 128 142 128 12", "8 132 128 128 131 134 130 128 133 142 136 136 136 ", "129 132 143 138 138 141 141 132 130 132 143 128 12", "8 128 130 136 142 134 142 140 142 142 134 130 136 ", "136 139 141 136 128 138 128 142 128 142 132 133 13", "3 134 128 128 140 142 142 140 134 143 128 128 133 ", "136 135 138 130 143 139 130 136 141 142 136 132 13", "6 128 136 134 132 128 136 135 141 142 140 136 128 ", "128 140 138 131 128 142 128 137 141 128 139 138 13", "6 128 132 134 136 140 142 134 138 138 136 134 137 ", "128 128 128 141 129 133 128 138 132 140 132 141 14", "1 128 128 138 128 136 138 129 137 132 136 128 140 ", "132 140 138 141 129 136 135 129 139 135 132 132 13", "5 132 132 128 128 140 141 139 128 132 131 135 140 ", "136 128 129 128 128 134 134 136 138 136 138 136 13", "2 128 136 128 135 138 136 136 135 136 136 132 140 ", "141 132 129 134 129 132 140 128 132 136 130 132 13", "2 132 133 136 128 130 128 128 141 136 138 128 136 ", "132 130 141 128 140 138 136 142 142 140 135 128 13", "6 132 130 128 134 134 130 128 128 130 138 128 140 ", "136 142 128 136"};
    vector<string> lengths = {"135 130 139 141 136 137 130 135 136 140 129 136 13", "2 141 132 128 135 143 131 143 136 138 128 134 138 ", "128 133 135 143 138 139 131 132 134 132 133 136 13", "6 128 130 130 138 129 139 132 132 140 139 143 132 ", "138 130 137 138 134 128 134 138 128 132 136 138 13", "7 132 141 132 130 138 128 136 132 128 130 132 128 ", "141 135 133 136 129 136 134 128 132 140 131 132 13", "6 140 136 137 130 128 139 139 140 141 140 128 142 ", "128 136 138 128 131 128 136 130 133 130 129 132 12", "8 130 142 136 140 129 131 142 130 134 128 135 134 ", "142 137 138 140 132 136 130 129 139 141 136 131 14", "3 142 138 136 136 140 134 128 134 140 128 128 128 ", "128 134 139 133 135 134 131 128 140 135 132 130 13", "6 128 134 132 134 128 140 128 128 129 137 131 128 ", "136 130 132 136 128 128 128 136 134 141 128 136 12", "8 134 133 137 136 138 134 130 128 128 128 142 138 ", "131 142 136 135 128 136 141 132 140 128 128 128 13", "2 135 138 143 134 132 134 134 139 136 129 137 142 ", "128 129 128 140 142 142 136 133 142 128 130 130 13", "1 138 138 141 137 128 128 138 128 139 140 128 133 ", "128 134 133 128 132 135 128 136 132 128 139 128 14", "0 140 140 140 136 143 128 137 140 140 140 132 139 ", "142 136 136 136 141 135 136 138 129 136 143 130 13", "2 137 143 132 128 130 136 134 136 130 128 128 128 ", "128 128 132 134 142 128 142 135 140 128 141 136 13", "2 128 132 128 134 136 134 132 136 135 133 138 131 ", "133 135 142 136 134 143 141 134 142 141 128 140 12", "8 136 140 128 128 138 136 134 142 138 133 137 138 ", "132 132 133 130 142 131 143 132 134 140 135 142 13", "0 134 136 128 128 128 132 132 136 128 139 142 134 ", "132 142 140 136 137 132 143 133 142 142 132 134 13", "2 135 130 128 135 134 132 143 142 139 132 132 140 ", "128 128 128 128 137 128 128 139 136 128 141 137 13", "0 136 142 130 133 136 137 139 128 133 128 136 142 ", "138 136 132 128 129 130 128 128 140 132 142 139 14", "2 128 138 128 128 138 140 128 136 128 141 140 140 ", "132 132 128 130 134 132 142 133 132 134 136 128 13", "2 128 141 138 142 134 136 133 135 130 143 142 132 ", "134 138 143 130"};
    vector<string> names = {"E ABA D DA FA FB A AAA D CG AA D ACE C AGE CA B A ", "CAEB A E AAC AAG A F G CAB D D G A A E F F GAE A E", "D A DE EAG BD A G C C AD E G A CGBA GFGC CBA ABA A", " G AF E E A FACA G A GA E CCEA C AF EEAC BEC C C C", "DG B C C F B F ADA F G CA BAC F BDF ABG DBF F FCE ", "AE BFF A G FAC EB D CEF A D AFC A AFA FACF F E CFD", " A EAAB BBGA D GCA D ACC FFB B D BCA D A A DDG G D", "AAB A C G A GBC GGB BGE A F AEAF EEDA AFCF C GGA A", "B G F EG A CEB F E A E E C D B C EF G B AC A D B A", "AF B F E A ACAC E AA A GBB F AFAB ADGC CBE A D FAF", " AGA B GGGB E BD C AF E FFBA BC A A AGAD CAF A FFB", " ACA AAA G A FAC AC EFF BDE A D G DEC D AECA B A D", " A G DA BAA BAB A AD CFA CG D G ADF A AFGA AAEF E ", "GAE CBD G A D GE B DD FFC D A C D BAG GGB CAE AB D", "AGG E EAA DACF D G C A AA D AAD E A AFA GCEG F GGA", "C AAD AGCA BGBC C BCD B A EGA CAEA DCA A DD CFCD C", " C D D GGD ACA EAA D CGAG G ADCD FBB EC GCG A BGB ", "F AFB A AAA G BAF BG G C B D A BGA BEG G C B A CD ", "DCA AA A A AEAF C EEG A AEA A A B ADFC D EAA CDAC ", "CDA G A GAB C CA F C ABBA EA DDE FDB FDF A ABG ECF", "E A F FFC BECA G FGAB GG F C A GA A EGA A GFA FBFE", " FDA F A D BADF C FFF C A C GAGD DAAF D A D A G F ", "EFGC A FAD G E AG DAE GC DAE FCB A B CE GDEA CCAD ", "B AADF A AEA A D G A GAA GA B GADF AA A EBF D BBAG", " D A G CE G CFD GBD C C A C C B G BAFD B C F GE B ", "A AE E DDE A E EAD AAAF A F EFA A AGBF FG CG AAB A", " C D G ECEC EB G A F BBE FAG EDAD A B B BFAE D A B", " A B GAG GEA E C D D E CGC CCE CBFB F G A FD E G"};
    int k = 17;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "FG", "C", "D", "A", "AD", "AGAD", "A", "AGA", "C", "A", "BBGA", "C", "AA", "BCA", "A", "CBD"};
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<string> x = {"128 130 128 129 136 128 142 128 138 130 133 138 14", "1 131 136 131 140 128 135 141 128 130 138 140 137 ", "140 138 133 136 136 137 128 140 142 142 136 142 13", "1 128 128 132 130 137 132 136 134 135 132 135 136 ", "128 136 133 132 138 134 140 128 139 140 141 136 14", "1 134 132 137 136 132 128 128 133 140 134 135 128 ", "143 128 128 136 139 130 138 132 141 141 136 140 12", "9 142 142 128 137 131 128 130 140 128 138 134 134 ", "141 140 136 142 138 137 132 130 143 132 137 128 12", "8 136 128 136 136 128 137 134 138 139 128 136 128 ", "132 136 128 132 140 129 131 128 136 140 130 140 13", "2 134 135 142 143 133 128 141 132 128 128 133 132 ", "142 139 132 128 128 142 128 131 130 137 140 142 13", "6 138 132 142 128 137 140 136 140 142 140 128 134 ", "132 138 138 140 128 135 128 136 129 128 136 136 12", "8 130 140 128 128 140 141 143 132 134 137 134 142 ", "132 143 140 140 132 136 140 132 140 143 131 140 13", "3 136 132 132 129 136 133 130 128 128 143 132 128 ", "130 130 135 130 129 130 141 128 134 141 134 137 13", "4 132 134 142 143 130 128 140 140 128 143 142 143 ", "142 139 128 128 128 136 128 136 136 138 131 136 12", "8 128 128 143 131 132 128 135 142 130 128 137 132 ", "142 142 138 138 132 128 142 136 134 136 128 128 13", "6 129 132 135 128 140 140 136 128 128 130 142 135 ", "138 132 132 133 131 128 132 130 139 133 134 128 12", "8 128 134 140 134 135 138 136 136 140 128 128 138 ", "130 130 136 136 130 134 128 141 143 140 128 128 13", "9 128 135 136 132 137 132 138 128 132 132 132 128 ", "134 132 132 136 142 128 129 134 140 132 134 128 13", "7 128 142 128 128 129 131 136 133 140 135 136 128 ", "136 131 135 128 133 129 134 140 141 131 132 142 14", "0 132 142 138 128 134 128 130 128 128 128 128 132 ", "128 132 130 128 132 136 140 138 136 133 136 138 13", "1 136 128 129 142 138 128 133 136 130 140 132 132 ", "140 128 132 136 138 136 135 132 143 137 137 143 13", "2 136 132 128 134 136 139 138 128 140 143 128 140 ", "129 132 143 136 140 135 136 134 140 140 131 130 12", "8 132 130 136 128 142 136 134 139 135 141 128 141 ", "134 140 140 128"};
    vector<string> y = {"136 134 132 130 140 143 128 135 139 132 133 129 13", "3 142 132 130 138 133 132 138 129 129 135 134 134 ", "140 140 133 128 138 142 128 128 132 141 138 130 13", "6 139 128 134 143 134 137 128 138 140 138 128 138 ", "140 138 142 136 138 136 131 128 138 136 141 130 13", "4 128 140 135 140 139 132 138 134 129 131 129 137 ", "139 142 136 132 134 134 130 132 132 142 141 128 13", "0 136 136 130 136 130 136 136 128 142 137 143 137 ", "134 132 132 140 128 139 138 134 132 136 132 139 13", "0 136 136 143 130 137 130 134 130 131 131 134 138 ", "131 130 136 136 129 142 140 140 128 134 140 128 13", "5 140 139 142 143 140 128 141 142 128 140 128 136 ", "128 132 128 132 136 136 140 138 135 130 134 131 13", "4 132 128 136 131 128 138 140 128 138 137 129 132 ", "141 143 142 136 143 141 128 132 138 132 139 135 12", "8 128 141 140 135 128 134 142 141 143 142 135 143 ", "132 133 136 140 133 134 130 132 136 140 139 135 12", "8 128 141 136 141 128 134 128 130 130 130 136 128 ", "143 128 136 128 140 132 141 128 129 131 135 128 13", "9 135 132 128 138 132 138 134 128 140 138 142 137 ", "143 128 139 130 131 139 142 136 138 132 132 136 13", "0 140 139 128 136 136 134 128 128 143 132 132 138 ", "130 128 132 130 133 134 140 128 135 141 128 128 13", "6 129 137 130 131 139 128 142 132 135 128 141 132 ", "140 136 135 128 135 141 140 137 136 136 128 138 13", "6 131 138 136 142 128 130 138 130 130 128 133 142 ", "128 142 133 140 136 138 142 138 138 140 128 128 14", "2 134 128 128 128 136 128 128 136 128 136 134 133 ", "142 132 128 142 143 132 132 139 130 138 138 140 12", "8 136 134 142 128 142 135 140 128 140 132 128 136 ", "136 143 130 137 138 132 132 128 134 134 130 141 14", "0 132 137 139 141 131 143 142 140 135 136 128 132 ", "136 128 128 136 128 128 130 132 128 132 132 129 12", "8 139 140 128 132 136 132 138 129 136 128 135 129 ", "131 131 133 129 134 128 140 128 133 140 136 128 14", "3 128 130 142 140 128 134 136 131 142 138 134 140 ", "142 142 134 130 141 132 128 140 140 138 138 136 13", "6 135 140 138 136 136 132 128 134 130 134 139 134 ", "141 136 128 128"};
    vector<string> lengths = {"139 128 138 142 128 130 134 128 137 132 132 132 13", "4 140 136 142 142 139 128 141 133 140 132 136 142 ", "138 142 128 138 135 132 136 132 129 137 138 138 12", "8 135 136 129 142 128 128 139 128 134 139 137 136 ", "132 142 130 128 133 136 130 136 137 136 137 128 13", "7 137 128 130 136 138 128 132 128 132 128 128 143 ", "132 128 128 128 128 140 128 138 139 140 130 128 14", "0 132 142 132 132 143 131 143 128 138 142 136 143 ", "143 136 128 143 132 140 137 136 129 128 136 140 13", "1 128 139 137 140 140 132 128 138 136 128 129 128 ", "143 128 128 128 136 130 133 136 132 138 134 138 13", "1 136 138 136 128 128 140 132 128 136 131 142 133 ", "135 136 128 135 137 142 142 128 140 133 138 140 13", "0 136 134 136 130 129 132 128 138 132 130 134 128 ", "128 132 131 128 132 139 132 142 141 128 128 140 14", "1 138 138 128 140 140 128 141 136 128 137 138 135 ", "128 132 140 128 136 128 132 134 140 130 140 138 13", "2 128 141 140 136 140 128 136 128 139 140 128 128 ", "140 143 129 130 134 132 128 128 143 133 132 133 13", "6 136 137 128 136 133 141 136 136 140 143 137 141 ", "141 130 142 130 138 140 133 136 132 142 142 143 14", "0 140 141 138 142 131 132 142 128 130 140 143 132 ", "129 143 128 134 142 140 135 128 134 140 135 136 14", "0 139 128 132 136 138 130 137 139 128 136 128 136 ", "140 128 136 142 132 132 134 141 136 142 128 128 13", "3 134 128 132 136 134 131 140 129 140 128 136 140 ", "136 140 141 142 136 142 128 134 140 130 128 133 13", "2 134 139 128 134 142 134 129 141 130 129 134 128 ", "140 142 140 143 142 138 138 134 135 128 137 128 13", "0 137 131 134 143 128 135 135 128 132 132 140 140 ", "136 132 136 143 128 140 135 128 137 128 128 140 12", "8 140 130 135 136 128 140 134 132 134 143 142 142 ", "138 130 128 138 129 136 142 140 140 134 137 140 12", "9 128 128 137 128 136 142 140 138 133 130 139 129 ", "136 142 128 143 136 143 142 132 130 132 128 128 14", "0 135 135 134 133 139 134 128 139 136 143 128 136 ", "132 128 128 140 135 140 141 143 130 128 137 135 12", "8 134 130 137 137 143 135 136 132 128 130 140 142 ", "138 143 130 128"};
    vector<string> names = {"B E BAC DG CG EB AGE D AA AAAF A GAE GGCA CAB E G ", "CA E GDC BEC B BE D EDF ABA E B BD B C ABA FA DFC ", "A EEA EE FFAA G DAF G C BAC A GBBB ABF AFA E FDG A", " GA A E CGC GE ADA DC E EEA FBA GBD G F BBAA G C G", "DD E G ADG DG ACE D F FAB A C DBBF CAAA A D FDD E ", "C G F C BED GAE ACC A EC EDFE F A AAD AEEF DAC D A", "FA G AA ADC CC EB F E C D CADD A AC D GDF FA E C A", " GABC DA C GAA EA A FCF F C B A GF F G E A C E D F", " EFA EAA F E D FAAA A A A DGCA FDB GAF AF B D BB C", " CG AGD AAB AD AGF A AGDB A AB DE BGB B CAEF BEA D", "CF G CFF E D BGAG FA A GEB DD CDG GGD B G ACC E D ", "C GD EABA CG G C B E G A F EF A E D C E F GFC ACA ", "EAA ED GCC A FBD FBAD B GEB AAG GFCA ABB FA BG EFD", " EFAA EE C A E CAF AC F C A BEG ACDF A BACA E CD C", " G GA AFA A GAE CGB FFG BG A GDFA FEAE D AB AB EA ", "DBBF F DAE BE F EDBC AF G B ADA E E F G GEAE B B C", " D A AAD GDD A G GCEC D BAE D AAB D EEA BGAF GA D ", "B GDE AEB E AAF CCA AABD E CDFG ED F D C C AEA E E", "AFA GCD C AGD A EC C A B A E A ACBG BDG B A G A CA", "G AAG GCDD BEE AEA E DAB D AAD E A E DAA E F C C C", " G B GEA F F E DAA E A D EFDE AGC A G GDF CAGB ACA", "F FEG FDBB DGCA EBGC E F F G A D D CBG A E EGAA AA", "F A DCA CDA EFCG B AB AAG B F CG C F EAG D F E AF ", "FEGF AFDC G D FCAG G A CEAB BE A E A AB F BBG B AB", "G D AAFB A GEBC CGF AA A ED A AC BGDD BDAA D E AAC", "F A A DEB EEED AFG B GECE E AB A DFAF A D A AD BD ", "D D GFA BAEC ACDD AAB ACA F DD DAB AGA ECD BE F A ", "A AAB D A FAGD C AD AAE AFAA A C B EA AFF BDA C A ", "AAE DF AEDB A E A FD G G G A E"};
    int k = 16;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "DGCA", "EEA", "FA", "G", "GDE", "B", "BGAG", "B", "EC", "GDF", "CAEF", "ADG", "D"};
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    vector<string> x = {"516 517 518 514 518 514 514 516 512 517 519 518 51", "2 512 517 516 512 515 513 517 518 516 513 512 516 ", "512 513 518 512 516 512 514 512 512 519 518 512 51", "7 516 516 516 512 513 512 512 516 518 518 512 518 ", "516 514 512 512 512 512 513 519 512 514 513 513 51", "6 512 516 512 514 513 512 512 512 512 518 518 512 ", "512 516 519 516 514 514 512 515 516 515 514 514 51", "4 519 516 518 512 513 512 512 512 514 513 517 517 ", "516 512 517 512 516 517 512 512 512 513 514 516 51", "5 512 512 512 517 516 512 512 512 513 512 512 512 ", "518 512 518 512 518 518 516 517 518 514 515 514 51", "8 517 519 514 514 519 518 516 518 512 518 516 516 ", "512 513 512 513 513 518 519 514 516 514 519 512 51", "6 512 513 518 512 512 514 513 516 512 516 516 512 ", "517 516 516 512 512 512 512 516 518 516 515 514 51", "2 517 514 519 518 518 516 519 517 513 513 513 516 ", "519 512 518 516 518 515 518 514 516 519 512 512 51", "6 516 517 518 517 518 517 517 512 514 514 512 512 ", "512 512 512 512 512 516 519 513 512 512 512 518 51", "8 512 516 512 512 512 512 514 512 514 517 512 516 ", "519 512 512 518 516 512 512 517 514 512 512 514 51", "2 518 519 512 512 513 517 515 512 517 515 516 514 ", "516 515 514 512 518 518 517 512 519 514 512 512 51", "4 517 515 512 513 514 517 514 512 514 517 512 512 ", "518 518 514 516 512 512 518 513 512 512 514 512 51", "7 512 519 515 518 517 512 513 516 516 514 518 518 ", "512 518 512 514 516 518 518 516 512 513 514 512 51", "7 512 519 514 512 514 512 518 518 516 514 512 516 ", "516 513 516 516 517 512 516 518 513 514 518 512 51", "4 516 515 512 515 512 518 512 519 518 512 514 516 ", "512 513 519 517 512 515 514 519 515 512 519 512 51", "6 516 516 512 512 516 512 513 516 512 514 512 518 ", "513 516 512 514 518 518 512 512 512 512 512 514 51", "2 514 516 512 516 514 512 517 516 512 517 512 516 ", "512 515 512 513 517 512 512 516 512 516 513 516 51", "9 514 512 516 517 512 515 514 516 512 516 512 516 ", "518 516 518 518 517 517 514 512 516 512"};
    vector<string> y = {"512 514 512 512 517 516 512 518 515 519 514 514 51", "4 519 517 514 515 517 519 516 512 516 516 519 514 ", "518 512 514 513 516 516 516 516 515 516 514 512 51", "3 512 512 513 512 518 512 512 514 517 518 519 512 ", "513 516 512 515 516 514 518 512 512 516 516 512 51", "5 512 512 516 516 518 512 516 515 514 518 519 512 ", "512 516 512 517 519 515 518 518 516 516 517 514 51", "5 512 512 519 512 514 517 517 512 516 519 518 512 ", "512 513 516 516 514 518 518 519 515 513 517 512 51", "2 515 515 518 512 519 515 519 512 518 512 514 518 ", "512 514 516 513 518 518 515 512 518 514 517 519 51", "4 513 512 513 514 517 515 514 512 518 518 512 512 ", "515 512 512 512 518 517 516 512 514 512 515 512 51", "2 517 512 512 512 512 512 512 518 518 518 514 516 ", "512 512 519 512 518 512 519 518 513 512 516 514 51", "3 512 512 516 513 516 514 512 519 514 518 516 512 ", "514 516 518 519 512 512 514 519 512 514 516 516 51", "8 516 516 519 515 516 519 512 518 512 517 514 512 ", "516 512 517 514 518 519 516 512 512 513 512 518 51", "6 518 518 512 512 512 516 512 512 512 518 513 512 ", "515 512 518 518 512 519 518 512 519 515 518 512 51", "5 517 512 516 516 516 517 516 512 512 512 515 516 ", "516 512 514 518 513 516 512 513 518 518 512 518 51", "6 512 517 518 516 514 516 514 512 514 519 512 513 ", "516 513 512 512 514 516 513 518 515 517 516 514 51", "6 518 514 519 512 517 516 512 512 513 516 512 513 ", "514 516 516 512 517 512 512 516 513 512 514 512 51", "7 512 512 514 513 512 512 516 516 512 512 512 512 ", "517 515 512 518 512 515 514 517 516 516 518 514 51", "2 514 512 512 512 516 518 512 516 514 516 514 514 ", "517 516 512 515 516 516 513 516 514 515 517 516 51", "6 516 513 512 517 512 514 513 513 516 518 514 516 ", "512 512 515 512 514 516 518 512 516 512 516 512 51", "6 514 516 518 519 512 514 512 516 512 514 518 518 ", "514 512 514 512 512 518 516 512 516 519 512 518 51", "8 515 512 516 518 512 516 512 512 512 517 514 513 ", "512 512 516 517 515 512 512 518 516 512"};
    vector<string> lengths = {"516 516 517 514 512 512 512 513 516 514 519 512 51", "4 516 518 515 516 513 515 512 516 519 512 515 516 ", "514 514 514 512 517 517 514 512 514 518 512 518 51", "2 512 512 516 518 517 516 517 512 512 516 516 513 ", "515 517 513 512 518 516 512 517 514 514 518 512 51", "6 512 512 517 512 516 516 519 516 516 512 514 518 ", "512 517 518 519 517 514 512 518 512 516 512 514 51", "8 519 516 512 512 519 516 516 516 512 512 518 518 ", "514 512 515 515 512 518 512 512 512 514 516 516 51", "9 518 512 512 518 517 519 518 513 516 514 514 517 ", "512 512 512 512 512 516 512 519 518 512 516 516 51", "6 515 518 518 515 517 516 516 512 512 512 516 513 ", "518 518 518 516 512 519 514 514 514 512 512 514 51", "8 512 519 516 512 512 512 516 514 517 518 517 512 ", "516 512 516 517 512 512 512 514 513 518 518 518 51", "2 516 514 518 512 516 514 516 516 518 515 514 512 ", "512 512 516 518 514 516 513 513 512 512 512 513 51", "6 516 518 517 512 516 518 512 519 512 516 518 515 ", "519 517 517 516 513 513 513 516 518 515 517 512 51", "8 515 516 518 516 512 516 518 514 514 518 513 516 ", "518 512 516 512 516 514 519 518 513 514 516 513 51", "6 512 516 516 514 512 512 518 513 514 512 512 518 ", "514 512 516 518 519 512 516 513 519 518 514 512 51", "6 516 519 513 512 516 517 512 516 512 515 517 512 ", "515 518 515 512 514 512 512 516 517 514 512 516 51", "7 512 512 512 512 516 512 516 518 514 519 514 516 ", "518 515 518 516 516 516 515 518 516 517 513 512 51", "2 517 515 515 514 512 518 516 512 517 512 516 512 ", "518 519 515 514 512 516 512 512 512 512 513 512 51", "5 512 512 516 516 519 517 512 513 513 512 512 512 ", "518 512 518 516 516 512 513 516 512 519 516 514 51", "6 516 516 514 514 512 512 516 516 516 512 517 515 ", "519 516 512 512 519 516 512 518 518 516 512 516 51", "6 512 517 515 516 512 516 512 513 516 514 512 512 ", "517 512 513 512 515 515 518 516 514 516 512 516 51", "9 512 513 516 518 517 513 516 513 514 514 512 515 ", "516 515 515 516 512 514 514 513 517 512"};
    vector<string> names = {"BCAA ACCA A C CDA C CACB A CCA AACD A C C A AA C C", "AC A CAA A B C A AABA D A ADAD A CCB CACD AAA A A ", "A CDA AAB AAA DAC DBB C DCA CCC A A ACCC A A D C A", "CD D DCC ABAA A C A A C A CAA C DAA BAAC AAA AAA C", "B CCA AA C A AAA DDD A CADA CCA AC A AB DAB AAA AA", " C AAAC AC A A A A CBC CCB BBD ABA D A C C A A A C", "BA A D B C CCB CCA DAAD DDAC C D DB A DACC ACAA AC", " B C BAA A D DAB CAA AAAC CDA A C A A C D A BAC CC", "CC D CA A ADB DAA AAA A A DAA B C A A CAA C D B DD", " AA C DAA ABC C DCA C BADA C ACAB C A A BC B A ACD", "C AA B AAAA CAD AA A CCC DBA CDC A A DA A D CCD CA", " C ABBA DA CAA ABC CAC CDA B AAD A A AA B A C A AC", "A CAC ACCA CC CDD AA BA B C A ACAB DCA AC D A BAA ", "ADA CC A A A BCDA AAA AA BAAA CCCA A DBA A C AAAC ", "AA CC AA C ACAA D ACD AA CAA CCA A A A BDA A BCBA ", "A AACA ACBC CCA BDC C AAD CADA A DAAD C AA ACBD A ", "CAAB AAA C A D A AAA A BB A D ABA C AAAC CAC D A A", "AA A AAA CAA A D ACA D A C A A A C B A C AA ABA CD", "DA CD BA DC A D D A AAAA A A BDC C AB A ABA AAA A ", "AAAA AA AADA BC B A CAC CA B B B CAA AAA C C B CDA", " ACA D BDD A D C CA AC DA ADCA ACDC AAAC A DDC D C", "C CAA ACD AACB ADC B CAD A C C C C ACA BAA A DCA A", "C A DBD CCAA B A A C A A ACBA A C AD ACDB A B A AA", "CA A C A A AA C BAD BAC A D DC B A B BDAA ADAC A B", "DCA A C AAAD A C CAA B C AC BAC DCA A AAA A A CAA ", "C B C CA C ACAA ADC CAAA AD CDCA AA A CDA A D C A ", "D A DCAD C D BAA AA A B C ABB AB A AA DDAC DACC A ", "AC CA A A CBAC DCAC BA ABA AAAD AA"};
    int k = 16;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "AA", "AAA", "ABA", "AC"};
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    vector<string> x = {"512 514 516 513 515 512 519 515 512 516 516 517 51", "8 516 515 516 513 518 514 515 512 515 512 516 512 ", "512 518 516 512 517 512 513 512 512 513 512 512 51", "9 519 518 515 512 512 518 518 517 516 512 512 512 ", "518 514 514 518 514 514 515 519 514 516 518 512 51", "6 514 512 518 512 514 512 514 516 516 518 516 516 ", "514 512 514 517 512 516 516 512 518 512 512 512 51", "7 512 516 512 512 514 512 512 514 519 513 514 512 ", "516 516 516 512 518 518 518 519 512 517 513 516 51", "8 516 512 516 513 512 513 517 516 518 512 512 512 ", "518 512 512 512 514 512 518 515 512 514 514 519 51", "4 514 513 516 516 517 518 514 512 512 512 512 512 ", "516 512 514 512 512 514 516 513 512 516 516 518 51", "5 517 519 512 512 515 518 517 514 518 515 517 514 ", "518 512 516 516 518 519 512 512 512 512 517 512 51", "2 516 517 516 514 514 519 512 512 512 514 519 513 ", "512 518 515 512 512 512 515 512 512 516 512 518 51", "6 515 515 517 512 516 518 512 515 516 512 517 515 ", "512 512 518 513 514 518 516 516 518 519 514 516 51", "6 518 512 516 513 514 512 512 512 513 516 512 512 ", "519 518 516 516 516 516 514 518 512 516 512 513 51", "2 517 516 513 518 515 512 512 512 512 515 515 512 ", "512 518 512 512 519 518 512 514 512 518 516 517 51", "7 514 516 519 516 517 519 512 512 519 516 516 518 ", "519 512 516 514 514 516 517 512 513 516 518 512 51", "2 518 512 512 513 514 517 512 518 512 516 512 512 ", "514 513 514 516 516 518 513 516 512 512 517 512 51", "2 517 516 516 518 512 512 515 518 516 517 517 514 ", "516 518 519 517 516 515 512 515 512 514 512 513 51", "2 515 514 516 515 517 516 513 512 516 514 518 518 ", "512 516 519 518 517 512 512 512 512 516 518 517 51", "2 516 513 518 512 518 513 514 514 512 512 514 519 ", "515 513 513 518 512 514 518 514 512 514 516 517 51", "8 513 516 513 518 517 516 518 519 512 512 516 514 ", "512 517 514 518 512 512 519 516 518 516 515 514 51", "9 512 512 518 516 516 518 514 518 513 516 512 513 ", "515 512 513 512 516 518 512 512 517 515 512 512 51", "2 512 516 516 512 514 516 515 512 514"};
    vector<string> y = {"512 514 514 516 516 513 513 514 514 516 513 514 51", "4 516 513 516 512 512 519 516 512 512 519 518 512 ", "512 515 512 512 515 517 512 515 515 519 516 514 51", "6 514 512 512 516 514 517 512 519 512 517 517 512 ", "512 515 518 519 512 518 513 515 514 516 518 512 51", "8 519 516 518 517 515 517 517 518 516 519 518 516 ", "512 515 512 512 517 516 516 516 517 519 518 515 51", "2 518 513 512 518 518 517 516 516 516 516 512 512 ", "512 513 516 512 512 514 514 518 512 516 519 516 51", "6 518 516 513 515 514 512 512 512 512 512 519 516 ", "516 513 514 513 512 515 512 516 517 513 516 518 51", "2 517 512 517 516 514 519 512 519 516 516 517 514 ", "512 519 515 516 513 516 516 518 512 518 518 518 51", "6 516 512 515 514 517 513 518 517 516 515 512 516 ", "512 512 518 512 516 518 512 519 512 512 512 518 51", "3 512 512 519 512 512 512 514 518 517 514 518 515 ", "515 512 514 515 515 516 512 518 519 518 512 517 51", "4 518 519 516 512 517 513 519 517 512 514 514 512 ", "512 519 517 512 512 516 512 512 514 518 512 516 51", "7 512 512 515 514 516 514 512 515 518 512 517 512 ", "512 512 512 518 512 516 518 512 512 518 516 514 51", "6 518 519 512 516 515 516 513 512 512 514 514 515 ", "518 514 514 516 512 516 512 514 512 513 514 516 51", "8 514 516 515 519 516 518 515 516 512 516 518 516 ", "512 512 518 512 518 512 516 513 516 515 517 516 51", "8 513 512 518 513 518 512 512 516 519 512 516 513 ", "512 516 514 513 512 515 515 515 517 518 512 516 51", "3 512 518 516 512 516 517 516 512 512 512 513 516 ", "519 515 516 514 512 516 512 512 515 512 512 514 51", "2 515 512 512 518 514 512 518 512 517 514 519 518 ", "512 516 518 512 512 512 512 519 516 514 514 516 51", "9 512 518 513 512 514 512 513 518 518 517 516 512 ", "512 512 512 512 518 512 517 514 515 512 516 519 51", "8 514 516 512 512 518 514 517 515 517 512 515 514 ", "518 518 516 519 514 519 518 513 513 518 518 516 51", "2 516 516 517 517 512 512 514 512 512 519 513 513 ", "514 519 516 512 518 517 519 518 512 512 512 515 51", "2 516 512 518 516 517 514 519 512 516"};
    vector<string> lengths = {"518 512 512 517 516 512 513 516 512 514 512 514 51", "2 512 514 516 514 514 512 512 513 518 519 512 518 ", "516 516 513 514 519 517 514 516 516 515 512 514 51", "7 518 516 514 518 517 512 512 518 515 516 519 514 ", "518 517 516 512 512 512 512 516 516 514 514 514 51", "7 517 512 512 512 516 516 512 514 516 513 516 515 ", "514 514 513 512 516 512 517 514 512 519 518 512 51", "6 517 512 516 512 512 519 518 515 512 518 517 518 ", "512 515 512 518 512 514 512 512 518 512 516 515 51", "9 517 513 512 517 512 516 518 513 515 518 513 512 ", "512 514 516 513 518 512 513 518 515 518 516 516 51", "4 512 512 516 516 515 519 517 518 516 512 512 514 ", "518 512 516 516 517 514 512 512 519 512 517 518 51", "8 516 516 517 514 512 514 516 518 516 519 512 516 ", "518 516 512 512 517 512 516 512 518 513 513 513 51", "2 513 512 513 519 512 519 516 515 517 514 516 516 ", "514 515 516 518 512 517 516 512 517 516 512 518 51", "4 515 518 514 516 515 518 517 514 519 516 513 513 ", "516 512 512 518 512 512 516 519 515 516 516 512 51", "8 516 512 516 517 514 516 515 514 512 515 516 516 ", "512 512 514 513 516 518 517 516 515 518 518 512 51", "7 512 512 517 512 512 512 516 512 512 512 514 512 ", "512 512 512 512 516 514 512 518 512 516 512 512 51", "8 512 512 516 512 513 518 518 516 516 512 517 513 ", "517 515 517 514 516 512 515 519 519 513 519 516 51", "8 513 512 518 512 514 512 512 514 518 513 518 518 ", "516 519 515 516 512 514 516 517 512 516 518 514 51", "6 512 513 512 517 516 518 512 512 513 518 516 514 ", "516 513 512 516 514 516 512 519 515 516 512 514 51", "5 512 516 512 515 515 513 517 518 512 515 518 513 ", "516 517 519 513 519 518 515 513 512 518 516 513 51", "4 518 513 512 512 512 514 517 512 515 512 518 512 ", "512 515 516 516 512 512 516 512 512 518 519 516 51", "4 514 515 515 512 514 515 516 512 515 514 514 512 ", "518 513 516 519 516 516 513 514 519 516 512 516 51", "2 513 517 514 512 512 516 515 514 512 512 512 514 ", "513 516 519 518 516 516 518 512 517 512 517 514 51", "7 512 518 517 513 518 512 512 519 512"};
    vector<string> names = {"A A BAAA CDAC A ACC C C B ADC D C A A B D A A A DA", " C A C BA B DBD B CCA A A BBA C DBA C A CDBC CAA D", "DD A ABA A A D D D A A A A B A ADAA C A ACC C DAA ", "BADC A ABB D C A A C AAC AAA A A A DC BCD C A A C ", "A C A A B DDC ADA B B AAA AAD CAA A A A DAD A B C ", "A ACA C A D C C C C A A ACA A AA AAAC A AAC BCC D ", "CAC A A AAA AABD C ADAA CDDA C CAAA AAA AAC AAAC A", "D DDA A A BD CD CADD A B AC AAAA A BCAC C AA A D A", "C BAD D A A A BD DCB A ADA A DD A CBD C AC C C AAA", " AAAD CAA C ACC A C ABC ADAA A D AB BACA C A A C A", "DAA A AAA DDDA ADB AAAD DAC ABAC DAAC C AAB AB CDD", " B A A ABBA A D DD A CCA C B CA AD AD A AB ADAB AC", "A ADD D AAD AAA A AAA A AB CAC B A B AAA AAA A B A", " D ADD BAA CCA CCCB A CAA BCAA D CC DA A AAA AAA B", "AD A C C CAA D C AA B A BAA A A A ADC AAA AAB C A ", "ACA AC CDC C B AAA A A ABAB C B A ACAD CAA ACCC CC", "AC A A B ADA A C ADC A CD A A D CDAA ADA C ADBB A ", "AAB CACA A A AAC C CAB BBC ABAA AAD DB ABC A A B A", " A BBA CA C DAAA ADAA C CA C A D A D ACBA A AAC AA", "D B AAA ABA AAA A C C B C C ACA CC C DCCB AC DAA C", " CAD AACD AAAA AC CA A CA A A A CD A CAD A CADB AB", " A A AAD C C AAAB ACA AADC C CAA C D C DD C A D DA", "DA B C A ACB A C C A ADA C DAA BAAB D A DBCB B CA ", "AAC C D DC ABA D AADA A CC CDA CCC C C DCAC BA B A", " C BCD A AAB CAAA A DCB AAC B A A C CCBD A DAA A A", "CD CA A A AA A CDC BA A A C CACA B C ADA A C DCA A", " C CAA DAAB A A AAC AABA B A B BA A B C DAA BAD DC", " CBA AA AA ABA CA A D CDA ACAD"};
    int k = 18;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "AAAD", "A", "A", "A", "A", "AAA", "ADAA", "ADD", "B", "C", "D", "DBCB"};
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    vector<string> x = {"516 516 519 518 515 518 515 516 512 516 516 512 51", "4 512 514 514 514 512 512 512 513 519 512 512 514 ", "518 515 512 512 519 512 514 512 513 518 512 513 51", "6 512 516 513 518 512 518 514 512 512 516 519 516 ", "518 514 517 516 516 518 516 514 516 517 514 512 51", "6 515 514 514 512 519 517 514 519 512 516 512 516 ", "512 514 516 517 519 512 516 516 516 516 514 515 51", "2 512 515 518 512 518 512 516 519 519 515 512 512 ", "517 515 515 519 516 515 516 516 513 517 516 514 51", "4 516 518 518 518 516 512 514 517 512 512 519 515 ", "519 512 512 512 512 516 514 516 512 517 517 513 51", "6 514 514 515 512 512 518 512 512 517 514 518 512 ", "516 516 516 519 512 512 519 515 514 512 514 516 51", "4 518 512 514 518 513 512 516 512 517 514 514 512 ", "518 512 514 514 512 515 518 518 516 512 512 515 51", "4 519 516 516 512 515 516 513 514 512 516 519 516 ", "512 512 518 514 515 517 512 512 519 516 518 513 51", "6 517 512 515 516 516 516 513 513 512 518 512 517 ", "512 512 518 518 516 518 516 519 518 518 512 517 51", "2 512 518 512 514 517 512 512 514 512 514 512 519 ", "512 517 516 512 512 518 516 516 519 516 514 515 51", "6 516 514 517 512 515 512 515 518 512 516 519 513 ", "513 514 517 512 516 513 516 512 512 518 515 512 51", "9 516 517 512 518 516 518 512 519 514 514 512 516 ", "517 518 512 516 516 518 518 516 518 517 512 512 51", "4 512 518 512 514 516 518 512 516 513 518 516 517 ", "519 512 517 516 517 514 512 519 519 518 514 518 51", "6 516 512 512 515 514 514 516 519 512 512 513 516 ", "513 517 512 516 514 514 512 516 518 518 516 512 51", "6 516 518 514 517 514 512 516 518 516 518 516 512 ", "519 512 512 518 518 512 512 515 518 516 517 512 51", "2 515 512 516 516 514 515 516 512 516 515 512 512 ", "512 516 518 514 512 518 512 517 512 519 512 512 51", "8 516 512 514 519 518 518 512 517 512 512 516 515 ", "513 518 512 513 516 514 518 514 512 512 518 512 51", "5 512 519 513 514 516 516 512 512 518 516 512 513 ", "517 514 516 517 514 516 512 512 516"};
    vector<string> y = {"512 513 512 519 513 515 519 516 516 519 516 516 51", "2 512 516 517 515 512 516 515 519 516 512 512 513 ", "512 512 518 518 512 514 512 514 512 516 512 512 51", "2 519 514 512 512 519 512 512 516 516 517 516 513 ", "518 513 516 516 512 516 512 514 516 516 516 517 51", "2 512 514 512 512 517 512 514 512 512 516 514 517 ", "512 516 514 512 518 518 516 519 512 512 516 514 51", "2 518 518 514 512 512 514 514 512 516 512 518 512 ", "512 512 516 514 519 519 514 516 517 512 514 514 51", "6 514 518 518 514 516 516 512 512 518 515 512 516 ", "518 519 514 512 512 512 518 512 512 518 512 519 51", "4 512 512 516 514 519 512 515 512 513 519 517 518 ", "515 516 514 517 512 515 512 517 517 516 514 518 51", "6 519 514 512 512 512 512 513 518 516 514 514 518 ", "514 516 512 516 516 518 516 516 518 512 512 514 51", "2 512 519 517 512 518 517 518 515 517 516 512 514 ", "517 514 512 516 516 512 518 512 514 512 516 512 51", "4 516 512 516 512 512 512 515 514 517 516 519 514 ", "512 518 513 512 512 516 515 515 516 512 518 512 51", "2 515 514 515 512 518 513 512 512 519 512 512 512 ", "517 517 516 512 512 519 516 514 516 516 517 512 51", "4 519 517 519 514 512 512 516 519 514 516 516 513 ", "516 513 516 519 517 518 518 514 517 512 512 519 51", "5 516 518 512 518 514 516 518 516 518 512 518 513 ", "517 514 512 512 519 513 516 513 514 514 515 512 51", "2 516 516 519 512 512 514 515 512 512 512 514 517 ", "512 514 512 517 514 517 514 514 518 516 517 518 51", "3 512 514 512 516 514 514 514 516 516 512 516 515 ", "512 512 513 512 518 513 512 518 515 512 518 514 51", "9 514 513 516 512 516 514 512 516 517 518 518 517 ", "512 515 512 512 512 512 512 517 514 519 519 517 51", "7 513 514 512 512 518 517 514 512 518 512 514 515 ", "512 518 516 516 519 519 512 512 512 516 516 516 51", "9 518 512 519 515 518 512 514 518 512 512 519 518 ", "512 513 512 516 512 519 512 519 518 512 516 514 51", "7 516 512 512 512 514 515 519 512 512 512 512 519 ", "518 515 516 518 516 517 517 513 519"};
    vector<string> lengths = {"513 513 516 519 517 518 518 516 518 516 519 514 51", "2 519 518 516 519 518 515 516 516 516 512 512 512 ", "512 513 512 512 515 512 512 517 513 514 512 518 51", "4 517 512 513 515 512 517 512 512 518 514 512 516 ", "512 513 514 512 512 516 516 518 515 518 512 514 51", "2 512 514 516 512 512 512 517 516 516 516 516 512 ", "514 518 516 518 517 516 518 512 512 516 512 517 51", "4 518 518 512 517 519 514 519 518 516 518 514 519 ", "514 518 517 514 516 516 517 516 515 518 516 512 51", "5 516 516 516 516 516 512 519 518 518 512 516 519 ", "518 512 512 512 514 515 518 516 517 513 512 516 51", "2 518 512 519 516 512 514 518 517 513 516 512 512 ", "516 515 512 515 519 514 512 516 518 518 514 513 51", "6 512 513 512 518 515 512 516 514 512 519 512 515 ", "513 517 517 518 519 512 519 514 513 515 519 518 51", "4 513 512 512 518 517 518 516 514 512 514 512 519 ", "517 516 512 512 512 514 512 518 514 518 515 518 51", "2 518 516 514 512 517 516 512 516 518 512 512 515 ", "519 518 514 512 512 518 512 512 512 518 514 519 51", "6 518 512 516 518 518 516 518 517 512 512 514 518 ", "518 517 514 516 516 518 512 513 518 516 516 514 51", "4 512 516 516 515 512 518 518 512 512 514 518 514 ", "516 513 516 516 516 516 519 515 514 518 517 519 51", "2 513 512 515 512 514 512 514 514 518 512 512 512 ", "516 512 512 515 518 513 514 512 515 518 516 518 51", "3 512 516 512 518 516 512 513 512 517 516 514 516 ", "512 518 512 518 513 516 517 514 517 514 512 513 51", "4 512 513 519 516 516 512 515 519 516 512 516 516 ", "516 518 519 512 512 512 519 512 512 518 516 512 51", "4 513 512 517 518 519 517 512 516 512 512 513 518 ", "514 514 513 516 512 518 516 516 513 515 518 516 51", "8 516 514 518 514 517 518 512 517 516 512 514 514 ", "515 516 514 515 512 516 512 516 513 513 514 516 51", "5 519 517 512 516 519 518 512 514 514 517 516 512 ", "512 514 512 518 514 515 512 512 514 514 514 512 51", "3 516 513 512 516 516 518 517 512 519 514 518 517 ", "512 512 519 518 515 514 519 512 518"};
    vector<string> names = {"BAAC AD AAD AC BAA BAC C D CA CAAC AABD B CDAA A A", "DA C D A C ACC AA A AAAA CB C AAA B ABAA A C A AC ", "A AAA CCB A A A C C A C DCCA D C B AB C A BA B DBD", " A A DAA AACA A A AAD A DAAA AC BC AAC A C B B AAA", "A AA A A B AAA AAB CCDC B D C AACA C A B B A AAA B", "CA C D A D C ADD DCA AAAA A A C AA D C D ACCB D AA", "D AD ACC B CAA A CC AAAB A BAC C AAA ACC C A A AAB", " ACA AA A BABA B A CDAB A ACA A ACA C B C BB A A A", " BCAA ACC ABA AAA ACAC AAA DDD C A A A B A CCCC A ", "A C B ADA BAA BAB CA A C B BC CDAA C A AAA AAA B A", "AA B A A ACC A C C D ABB B AAB AA D B A C B B DC A", "D DA AAC A CAB AC ABA C A CAC C CDC DA C A C D A C", " AADC B ACAC BAB ABB ADA AC A AD CC ACA CADA A C C", " BAC C AAA D ACA D A BAD AAB A B D AABC A C A B AB", " CCA DAD AAD D C AAD A A AAD C ACA AAA B A DACA A ", "BAC ACAC A BCB C DC CCCA A C B A C D C D AAAA CCCA", " A A AAD A C A B AC CAAB A A A AC D ADA D D ADD C ", "AAA ADA C A CADD B C AA A A B ACCD B A C AC BACA A", "AD ACA A CAC A A B D B A CAC CBB CCAA C ABC CBA AC", " BAA AAAA A A DABD ACA D A B D AAA A A D AADA A B ", "ADAA ABC A A AD AA DAAA C A AA B D DCAD BDCC A D A", "A ACAC BDAA A C AAD A AACC BA C C BAA AAC A DBD AC", "A AAD A A CAA AC ACA ABA A C BAA C CAB C DBC AA AD", " D A AA AACC A CDC AAAA A AABA D A AAA C AA ADA A ", "A DAA ABBD CBAD AAA DA BA D A AAAA D AAA A A B CAA", " B B A A D ACCA A A AA DAB AAD AAA A A C C AAA A C", " D AACD AC BCAC A CD B A A D AAAA AB ADB BCA"};
    int k = 18;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "AACC", "AC", "ACA", "B", "B", "BC", "C"};
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    vector<string> x = {"516 514 514 514 518 512 515 512 515 518 517 516 51", "6 518 516 512 516 519 518 514 516 518 512 513 512 ", "515 517 512 515 518 518 516 515 518 519 513 518 51", "8 516 514 514 516 516 516 515 516 516 512 513 514 ", "517 518 518 516 512 516 514 515 519 512 516 515 51", "2 518 516 515 513 512 517 515 512 515 512 516 518 ", "516 518 519 517 519 517 512 516 515 512 512 518 51", "2 514 512 514 516 514 514 512 514 512 518 515 512 ", "517 512 516 512 518 512 518 515 512 516 516 515 51", "3 514 518 514 516 512 512 512 513 512 512 518 516 ", "518 514 512 515 518 516 516 516 516 516 517 518 51", "6 516 512 517 516 515 516 519 519 518 517 518 519 ", "512 517 512 514 514 512 513 514 516 518 514 514 51", "3 512 513 514 516 512 515 512 516 512 516 518 519 ", "517 512 516 515 512 517 518 518 514 518 512 518 51", "2 516 515 518 518 516 512 513 512 512 518 516 519 ", "517 512 514 516 518 518 514 518 514 512 512 514 51", "8 518 514 516 515 512 512 518 512 516 512 516 512 ", "512 517 518 512 515 512 518 518 512 512 516 512 51", "6 515 514 514 515 517 513 516 517 518 514 518 515 ", "513 518 514 512 513 518 514 517 512 512 514 519 51", "6 519 517 518 513 516 512 516 512 516 519 517 512 ", "517 519 518 519 512 515 513 512 515 516 513 512 51", "4 514 514 513 512 516 512 516 515 516 517 512 518 ", "512 515 513 519 518 516 516 518 515 514 516 512 51", "6 518 514 518 512 512 518 518 512 512 515 514 512 ", "512 516 512 514 512 516 516 518 516 516 514 516 51", "3 519 517 516 512 512 512 514 514 512 516 512 512 ", "518 519 515 519 517 512 512 512 515 514 512 512 51", "9 519 518 515 513 517 515 516 514 512 512 516 519 ", "512 512 512 519 516 516 512 517 513 512 516 514 51", "2 515 517 512 518 516 514 512 512 512 519 516 512 ", "516 515 518 512 514 518 516 512 514 516 516 512 51", "8 512 518 518 516 515 512 519 514 512 512 516 512 ", "516 513 512 518 512 512 516 513 519 514 515 512 51", "6 517 512 515 512 512 514 517 512 514 515 513 518 ", "517 512 514 519 513 515 518 516 515 512 519 512 51", "3 513 512 518 512 514 516 516 513 512 516 512 513 ", "512 512 516 513 519 516 514 516"};
    vector<string> y = {"516 516 518 512 519 512 512 518 518 517 514 517 51", "6 512 512 515 514 515 518 518 512 512 512 514 514 ", "514 516 518 517 516 514 513 514 519 518 512 516 51", "2 512 518 515 517 513 516 512 519 512 514 519 512 ", "512 516 518 517 512 516 516 512 512 512 513 512 51", "2 519 515 513 512 516 518 512 512 516 518 517 512 ", "518 516 514 514 517 518 516 516 514 516 512 512 51", "6 512 512 516 512 512 516 518 513 514 512 519 512 ", "517 514 514 516 516 516 512 514 516 516 517 514 51", "2 515 516 514 514 514 512 515 514 512 513 519 518 ", "512 512 512 518 518 514 518 518 512 512 519 516 51", "5 514 512 514 518 514 512 512 514 512 516 512 512 ", "512 519 516 512 512 518 512 516 517 515 512 516 51", "3 515 518 518 518 518 518 516 519 512 519 513 514 ", "518 512 514 518 518 516 516 518 512 512 514 515 51", "9 512 514 512 516 514 513 514 513 512 518 516 518 ", "519 513 519 512 516 519 519 512 517 518 514 516 51", "2 512 518 512 513 515 514 519 512 512 514 517 512 ", "516 516 518 515 515 518 519 518 516 515 518 512 51", "5 512 516 515 512 513 516 516 519 518 516 517 518 ", "518 512 512 514 514 519 513 512 512 516 517 514 51", "9 519 516 516 514 516 512 518 512 516 518 514 512 ", "516 516 512 512 512 512 518 517 513 516 514 518 51", "6 518 514 516 512 515 512 513 517 517 518 512 519 ", "512 512 517 512 512 515 518 514 512 512 512 512 51", "2 518 517 516 516 512 516 516 516 517 518 517 513 ", "512 512 518 512 516 512 517 512 515 518 516 512 51", "6 517 515 518 514 513 512 512 519 514 513 518 512 ", "512 514 512 512 514 512 512 512 512 514 517 514 51", "9 514 512 519 518 516 518 512 515 512 512 514 513 ", "517 518 518 512 516 512 512 516 517 516 512 518 51", "5 512 519 512 516 513 519 512 512 514 512 516 517 ", "516 518 512 515 513 512 517 516 513 514 514 517 51", "2 516 514 513 516 519 512 513 519 514 517 518 518 ", "517 513 519 518 512 513 512 512 512 517 512 512 51", "7 518 516 514 512 512 514 512 512 518 512 512 512 ", "518 516 516 519 515 517 516 512 514 512 516 512 51", "2 512 519 515 516 512 516 512 517 512 516 513 519 ", "516 513 512 518 517 512 515 515"};
    vector<string> lengths = {"512 516 512 515 519 518 512 514 512 512 516 519 51", "2 516 518 518 512 513 517 514 512 518 519 518 517 ", "512 519 512 512 512 516 514 514 518 519 513 515 51", "2 512 512 512 519 513 518 518 514 516 518 513 512 ", "518 515 516 513 512 512 512 516 518 512 516 512 51", "5 512 512 512 512 512 512 512 516 512 517 512 512 ", "512 514 512 516 512 512 515 512 519 512 518 515 51", "3 514 518 518 513 512 512 512 515 516 518 516 512 ", "519 516 512 518 512 518 516 512 512 516 512 512 51", "2 513 514 515 515 518 512 519 512 516 516 513 514 ", "518 516 512 515 519 512 512 518 513 512 514 516 51", "8 512 516 518 515 516 516 512 512 518 518 515 516 ", "512 512 512 514 514 516 518 513 518 518 519 512 51", "8 512 518 512 516 518 512 517 515 513 516 519 516 ", "519 518 518 517 512 518 516 514 514 514 518 512 51", "2 512 516 516 512 514 516 512 518 514 515 519 518 ", "518 519 512 512 514 512 513 512 516 518 518 517 51", "4 513 515 512 512 512 518 512 518 512 512 512 516 ", "518 516 516 518 516 512 518 512 512 512 519 512 51", "7 512 512 512 517 512 512 512 516 512 519 512 515 ", "515 513 516 518 514 512 519 512 512 518 516 519 51", "2 516 512 519 518 517 516 512 518 514 512 513 516 ", "512 516 512 513 512 512 519 512 512 518 516 512 51", "7 512 515 512 512 519 516 512 519 512 516 516 513 ", "516 512 516 512 514 516 518 516 517 512 518 512 51", "2 518 516 518 516 517 515 512 517 513 518 512 514 ", "516 512 512 515 516 512 516 513 514 515 512 515 51", "2 512 512 515 514 515 516 512 518 519 512 512 514 ", "515 518 512 518 519 516 515 518 514 514 512 518 51", "6 517 516 514 513 512 518 516 514 512 516 516 512 ", "514 512 512 513 512 516 516 518 516 512 512 516 51", "4 512 512 514 516 519 516 517 519 512 514 512 512 ", "513 512 519 512 513 512 512 512 515 516 513 512 51", "6 515 515 512 515 519 515 517 512 516 512 512 516 ", "512 516 513 516 516 516 516 518 518 513 512 516 51", "3 512 516 513 519 516 518 516 519 516 512 512 517 ", "516 513 512 516 512 516 517 512 518 512 512 514 51", "2 514 515 519 512 514 513 517 512 519 514 516 513 ", "518 513 513 516 514 517 513 518"};
    vector<string> names = {"DD AAC CB A AAA ACA A B CBA A A DBCA C AAAA AABA A", "BA C AAA A A D DAA B B A C CD CAC A B A A AAA AAA ", "A AAAA A AACC A AAD A A A A A A D BAAA A AB CDD D ", "A D A ACBC AA D BA C CCAA BCC A A C AADD AAD CBA D", " D AA A DCA C AA D C BA CAD D C AA BAA AAAB B A AC", "B A C AAD C CAA CA CA AAA A CC A AABA C AD BACA AA", "C DA C C A C ABC C C ABD BAA AACA A CAC AAAA A A A", " D CAAA C A AAAD ABAA A C A ADAA ACAB BBA ABB DCB ", "C AA B AAD CCA DBA CDAA A C C A DABA A A ADBC AA A", "AAD AAD C A A A CAA ABDB AADA A DCC CC CCAA ABDB B", " CAC CAD CACA C C A C D ABAB C CCD C AAD BCA BAA D", " BC CAC C BAAB ACA BCC AAA C C BAD A B DAD DCD DBB", " ACA A C A C CABC A ABA AA A ADA C ADC A C BCB A A", "AC A AACA AD AC A AB AA AAA A AAC AC BCAA D A A C ", "CAC A CDCA CA B C AAA A AAB CCAD B CDA AD C C C C ", "C A C DCA A ACA DA A AAAA DCA AB AABA ABAA BAA AAA", " BAAB AAA C D C A CC ADBA AC ACA CBA B DD A C CC A", " A BAC A C B CCC A CAC A B A CC ABA AADA A A C C C", "CAC ABAA D D A AA D CCD AAAA CA AC C D AAB A CCA A", "A C D A A DCAC C CA AA CAAC AAAA AAC DDB AC ACC A ", "AAC AAC AADA DA ADAC A AAA DA AA A D C C BADA D AD", "A C A B C B A A DCD AC BAAA A AAC B A C A CB CDA A", "AAA BDBA ADAA B C DA AA CCB C A A A D A A CADC C A", "AAA A C BAC A BA C BA A A AAA ACA AAD C A ADA A CD", "C AC AADA AAC AC C BCA B B CAA A ACC B AAD DA AA A", "AA CA A ACA DAAC D CADA A A AAA A AAC AAA ADA A CC", " BB A BD A C A ADC ABC DAA CA A A C D D A D C C A ", "C A DCB AAAA A C DAAA B AAB A B A DA A A C CCCA C ", "BACA C B A C B DAA CA CAAA DAB CA BCA ACCA C C D"};
    int k = 32;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "AA", "ABAA", "ABC", "AC", "A", "AAC", "D", "AAA", "ACA", "B", "DA", "C", "A", "A", "A", "A", "AAA", "AAAD", "AABA", "ABA", "B", "C", "C", "C", "C"};
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    vector<string> x = {"512 514 513 518 518 516 516 515 516 516 519 517 51", "2 518 518 517 512 514 513 518 516 518 518 512 515 ", "516 515 513 512 517 514 514 518 514 512 514 518 51", "4 516 512 516 519 514 518 516 514 516 516 514 512 ", "517 518 513 519 512 518 512 516 512 516 516 512 51", "8 513 516 515 516 513 518 514 515 512 516 512 512 ", "512 512 515 516 513 512 516 518 516 512 512 512 51", "6 514 517 517 512 517 518 516 515 512 512 514 516 ", "512 516 517 516 518 512 514 518 512 517 514 512 51", "3 512 512 512 519 512 514 512 512 512 514 516 516 ", "512 512 516 518 512 514 514 512 514 519 514 515 51", "2 516 518 516 516 512 512 514 518 518 512 515 515 ", "514 512 512 516 515 518 512 518 516 514 512 513 51", "2 512 516 512 512 516 517 514 512 514 513 515 516 ", "513 517 513 516 512 516 516 518 515 516 512 518 51", "6 512 518 515 514 512 512 512 514 513 518 512 513 ", "514 512 514 512 516 513 514 512 514 514 513 515 51", "6 514 514 519 519 517 515 512 512 512 512 512 519 ", "516 513 512 516 518 515 513 512 512 514 517 518 51", "7 513 514 516 513 519 514 514 515 514 518 516 515 ", "518 516 512 516 516 518 512 514 519 517 519 516 51", "6 519 512 518 516 515 514 512 512 512 516 514 514 ", "517 512 516 513 514 513 512 518 515 513 516 513 51", "2 515 512 512 512 512 512 518 512 516 512 516 512 ", "512 515 517 514 514 512 512 515 518 512 512 513 51", "2 514 512 513 512 516 518 518 519 515 514 516 516 ", "518 512 512 512 516 512 513 512 513 516 519 515 51", "7 512 512 513 516 517 514 516 516 512 518 512 516 ", "512 516 514 512 512 519 512 518 516 512 512 514 51", "3 512 512 517 512 515 517 512 512 518 515 515 519 ", "516 518 518 518 517 516 516 518 516 513 518 512 51", "8 514 512 512 516 517 515 514 512 512 518 512 512 ", "516 513 514 513 516 512 513 514 518 514 512 516 51", "2 512 512 516 518 512 518 512 512 514 515 518 518 ", "512 512 512 514 516 512 512 519 512 518 516 514 51", "8 518 515 515 512 516 512"};
    vector<string> y = {"516 514 512 516 518 518 512 516 514 517 515 516 51", "6 516 512 516 518 515 516 514 517 516 514 516 512 ", "516 516 516 513 512 514 512 512 516 512 516 516 51", "6 513 514 512 514 515 512 513 515 512 516 512 512 ", "512 512 513 512 512 512 514 516 516 513 514 512 51", "2 512 519 512 519 517 513 517 514 512 514 514 512 ", "516 512 518 514 518 512 516 517 514 514 512 512 51", "2 512 514 514 514 516 512 514 517 518 516 512 517 ", "519 519 514 515 519 519 516 517 512 515 519 514 51", "9 512 512 512 512 516 515 512 519 516 512 516 516 ", "516 512 512 518 512 516 518 516 512 512 513 516 51", "2 514 518 512 519 516 512 516 512 512 516 513 516 ", "518 516 514 516 513 513 513 515 514 514 514 518 51", "4 518 512 512 516 518 518 512 516 516 512 512 516 ", "512 512 512 512 512 516 515 513 515 514 518 516 51", "2 517 513 516 516 518 512 512 512 512 518 519 512 ", "518 514 516 518 512 512 512 512 516 513 514 512 51", "2 513 516 517 516 517 512 519 516 514 514 512 517 ", "516 514 513 512 516 518 512 514 514 512 518 514 51", "8 513 515 513 516 512 513 516 517 516 516 512 512 ", "512 519 516 515 516 514 514 512 512 512 512 512 51", "6 512 516 512 516 517 514 512 515 514 514 512 514 ", "516 512 512 518 518 515 512 512 515 516 513 514 51", "6 512 517 514 512 514 514 516 512 512 512 513 516 ", "512 514 516 518 518 517 515 512 516 516 518 514 51", "5 516 514 518 516 516 517 513 519 518 512 512 517 ", "515 518 513 512 512 514 514 517 516 516 517 519 51", "6 512 512 512 514 514 513 518 512 518 512 512 517 ", "512 512 516 512 515 515 516 513 516 514 516 514 51", "7 512 512 512 518 512 512 512 514 518 519 514 514 ", "512 516 512 518 514 514 513 512 512 512 517 518 51", "6 512 512 516 513 512 512 514 512 512 512 515 512 ", "517 517 516 512 514 516 513 513 513 516 512 516 51", "5 516 512 512 516 513 512 516 513 515 512 518 519 ", "513 518 518 515 518 515 516 519 512 514 518 514 51", "2 516 513 519 518 518 519"};
    vector<string> lengths = {"512 514 516 512 512 518 519 513 517 516 516 512 51", "4 518 514 512 518 518 518 514 516 514 516 517 514 ", "512 512 518 517 512 512 516 512 516 515 514 512 51", "8 515 513 512 516 515 512 512 516 512 517 518 516 ", "512 512 516 516 518 512 518 516 516 512 513 512 51", "6 512 517 515 516 518 513 512 512 512 518 512 515 ", "515 512 516 518 512 512 512 517 518 512 514 513 51", "6 515 512 516 512 518 512 513 512 516 516 512 517 ", "514 512 518 515 516 513 518 516 512 517 518 516 51", "4 516 512 512 514 516 519 516 512 514 512 512 512 ", "512 515 519 517 516 514 512 512 513 512 519 513 51", "7 512 514 512 518 512 515 518 519 514 516 512 517 ", "512 516 514 514 512 514 514 517 516 514 518 512 51", "2 514 518 513 518 517 518 513 515 518 518 518 516 ", "512 512 516 516 515 512 512 514 517 513 514 513 51", "3 514 516 512 516 512 518 512 518 518 512 515 518 ", "518 512 516 513 512 516 514 519 516 513 513 517 51", "4 516 518 514 516 516 512 515 516 512 514 518 513 ", "514 516 515 515 513 516 517 518 512 517 518 514 51", "4 516 518 518 512 515 514 512 516 514 517 512 516 ", "513 516 514 516 512 515 516 516 514 512 513 519 51", "6 518 519 516 514 512 518 518 512 512 516 516 519 ", "517 512 518 516 516 514 519 515 518 512 514 515 51", "2 514 514 512 518 512 515 519 512 512 512 512 514 ", "517 512 518 512 518 517 518 516 519 515 513 513 51", "8 512 512 518 512 518 512 512 517 512 512 514 512 ", "512 516 512 516 512 519 515 518 516 517 518 512 51", "6 516 512 512 512 512 514 512 518 519 517 517 517 ", "514 514 516 517 516 518 518 514 518 512 516 512 51", "8 514 512 517 512 516 515 515 512 512 517 515 516 ", "514 512 516 516 516 512 512 513 513 512 516 516 51", "6 512 512 517 515 516 516 512 518 517 512 512 516 ", "515 518 517 512 517 512 514 516 518 514 513 516 51", "9 515 515 512 515 512 518 515 518 512 512 517 517 ", "512 513 518 516 514 512 512 517 512 514 515 518 51", "2 516 516 514 512 512 512"};
    vector<string> names = {"D A BDC AAA AAA AAC CAC D BA D AAD ACCD CAC A CADA", " CCAC A A AAAA B CAA BAB BAA A CAC CAA D C A A C A", "C AD ACC C A A CDBA A C C A AD B AAC CAC ACCA BA A", "A C A C CAA BCA DBAB CDA A A ACA B DDAA C ADCA CB ", "A AAA C AAD AC C A A AD AAA DAA A DAA A A ACA CBAA", " A C AC CC DDB A ADA D A A CA BAAA ACA BA D CDC C ", "A A A AA ADC A CAAA C B AB CA CD B C A ADA C D D D", "A A D AA ADA BAAC CCA BA CD DC A AA CBA CCAA ACD B", "DBA DC AAB DADA AD DBAA C CACD D AAA CC AAA A A AC", " AAA A B ABD AAB CABA CDAC AACC DDBD CCAA A A D AD", "A D A A DC B BAC BAB B B C AA A CCB C AAA B A B D ", "D ADA A DAAC BCA CABD AB A DC A AA B DCC A C A BBC", " CAC AA CAD A D A A A CC AB AAB ABA ACD C CAB BBD ", "C C ADA BDC A ACB B C CC D C ABD A CCC BBAA C C AA", "DA AACA AAB A C AAA AC BCD AAD A ACAB C AAAA ACD A", " DDAA A D DDD ABA A A C B A AA C ABB A AB ABC BAA ", "CBA C BCAB C C CAB A C CBAA DBC ACAA AA AAA DBAB A", " A A A A A AADC C AAC A BAA C DA A C D C DAC A AD ", "CAAB A CCA B B ACB AAC ACB CBDA AA A AADA AB A CC ", "ACAC BBCA B C A BDB CBAA DCAA AAC AACD A AC ACA AA", "C B C A A DAA A CDBA A CA A ACC D CAA CAB AA A AAB", " ACA ADCA ACBA DCAA A A C A A A AAA A CDDA B BDC A", " CDA B A A C CCAC A A A A A BBC AD A CCA A B C C C", " AAC C C A A A AAA CAD B B AAC CA BDA AA D ACA CAA", " C C BACD A ABA DDA ABA B A C AAB AABD A BA AAA A ", "A BC A CBBA C AAA A A C C ADDA ABA AADC ABA AC C D", "AAB D CC AAC A AAA C AD ACC BC A A A C CC AA DCAC"};
    int k = 32;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "AAA", "BBC", "C", "CBBA", "D", "DAA", "DC", "A", "CCAC", "DDB", "A", "A", "B", "A", "A", "A", "A", "AA", "AD", "C", "C", "C", "C", "CA", "CA", "CBAA", "D", "DAA"};
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    vector<string> x = {"512 514 516 513 515 512 519 515 512 516 516 517 51", "8 516 515 516 513 518 514 515 512 515 512 516 512 ", "512 518 516 512 517 512 513 512 512 513 512 512 51", "9 519 518 515 512 512 518 518 517 516 512 512 512 ", "518 514 514 518 514 514 515 519 514 516 518 512 51", "6 514 512 518 512 514 512 514 516 516 518 516 516 ", "514 512 514 517 512 516 516 512 518 512 512 512 51", "7 512 516 512 512 514 512 512 514 519 513 514 512 ", "516 516 516 512 518 518 518 519 512 517 513 516 51", "8 516 512 516 513 512 513 517 516 518 512 512 512 ", "518 512 512 512 514 512 518 515 512 514 514 519 51", "4 514 513 516 516 517 518 514 512 512 512 512 512 ", "516 512 514 512 512 514 516 513 512 516 516 518 51", "5 517 519 512 512 515 518 517 514 518 515 517 514 ", "518 512 516 516 518 519 512 512 512 512 517 512 51", "2 516 517 516 514 514 519 512 512 512 514 519 513 ", "512 518 515 512 512 512 515 512 512 516 512 518 51", "6 515 515 517 512 516 518 512 515 516 512 517 515 ", "512 512 518 513 514 518 516 516 518 519 514 516 51", "6 518 512 516 513 514 512 512 512 513 516 512 512 ", "519 518 516 516 516 516 514 518 512 516 512 513 51", "2 517 516 513 518 515 512 512 512 512 515 515 512 ", "512 518 512 512 519 518 512 514 512 518 516 517 51", "7 514 516 519 516 517 519 512 512 519 516 516 518 ", "519 512 516 514 514 516 517 512 513 516 518 512 51", "2 518 512 512 513 514 517 512 518 512 516 512 512 ", "514 513 514 516 516 518 513 516 512 512 517 512 51", "2 517 516 516 518 512 512 515 518 516 517 517 514 ", "516 518 519 517 516 515 512 515 512 514 512 513 51", "2 515 514 516 515 517 516 513 512 516 514 518 518 ", "512 516 519 518 517 512 512 512 512 516 518 517 51", "2 516 513 518 512 518 513 514 514 512 512 514 519 ", "515 513 513 518 512 514 518 514 512 514 516 517 51", "8 513 516 513 518 517 516 518 519 512 512 516 514 ", "512 517 514 518 512 512 519 516 518 516 515 514 51", "9 512 512 518 516 516 518 514 518 513 516 512 513 ", "515 512 513 512 516 518 512 512 517 515 512 512 51", "2 512 516 516 512 514 516 515 512 514"};
    vector<string> y = {"512 514 514 516 516 513 513 514 514 516 513 514 51", "4 516 513 516 512 512 519 516 512 512 519 518 512 ", "512 515 512 512 515 517 512 515 515 519 516 514 51", "6 514 512 512 516 514 517 512 519 512 517 517 512 ", "512 515 518 519 512 518 513 515 514 516 518 512 51", "8 519 516 518 517 515 517 517 518 516 519 518 516 ", "512 515 512 512 517 516 516 516 517 519 518 515 51", "2 518 513 512 518 518 517 516 516 516 516 512 512 ", "512 513 516 512 512 514 514 518 512 516 519 516 51", "6 518 516 513 515 514 512 512 512 512 512 519 516 ", "516 513 514 513 512 515 512 516 517 513 516 518 51", "2 517 512 517 516 514 519 512 519 516 516 517 514 ", "512 519 515 516 513 516 516 518 512 518 518 518 51", "6 516 512 515 514 517 513 518 517 516 515 512 516 ", "512 512 518 512 516 518 512 519 512 512 512 518 51", "3 512 512 519 512 512 512 514 518 517 514 518 515 ", "515 512 514 515 515 516 512 518 519 518 512 517 51", "4 518 519 516 512 517 513 519 517 512 514 514 512 ", "512 519 517 512 512 516 512 512 514 518 512 516 51", "7 512 512 515 514 516 514 512 515 518 512 517 512 ", "512 512 512 518 512 516 518 512 512 518 516 514 51", "6 518 519 512 516 515 516 513 512 512 514 514 515 ", "518 514 514 516 512 516 512 514 512 513 514 516 51", "8 514 516 515 519 516 518 515 516 512 516 518 516 ", "512 512 518 512 518 512 516 513 516 515 517 516 51", "8 513 512 518 513 518 512 512 516 519 512 516 513 ", "512 516 514 513 512 515 515 515 517 518 512 516 51", "3 512 518 516 512 516 517 516 512 512 512 513 516 ", "519 515 516 514 512 516 512 512 515 512 512 514 51", "2 515 512 512 518 514 512 518 512 517 514 519 518 ", "512 516 518 512 512 512 512 519 516 514 514 516 51", "9 512 518 513 512 514 512 513 518 518 517 516 512 ", "512 512 512 512 518 512 517 514 515 512 516 519 51", "8 514 516 512 512 518 514 517 515 517 512 515 514 ", "518 518 516 519 514 519 518 513 513 518 518 516 51", "2 516 516 517 517 512 512 514 512 512 519 513 513 ", "514 519 516 512 518 517 519 518 512 512 512 515 51", "2 516 512 518 516 517 514 519 512 516"};
    vector<string> lengths = {"518 512 512 517 516 512 513 516 512 514 512 514 51", "2 512 514 516 514 514 512 512 513 518 519 512 518 ", "516 516 513 514 519 517 514 516 516 515 512 514 51", "7 518 516 514 518 517 512 512 518 515 516 519 514 ", "518 517 516 512 512 512 512 516 516 514 514 514 51", "7 517 512 512 512 516 516 512 514 516 513 516 515 ", "514 514 513 512 516 512 517 514 512 519 518 512 51", "6 517 512 516 512 512 519 518 515 512 518 517 518 ", "512 515 512 518 512 514 512 512 518 512 516 515 51", "9 517 513 512 517 512 516 518 513 515 518 513 512 ", "512 514 516 513 518 512 513 518 515 518 516 516 51", "4 512 512 516 516 515 519 517 518 516 512 512 514 ", "518 512 516 516 517 514 512 512 519 512 517 518 51", "8 516 516 517 514 512 514 516 518 516 519 512 516 ", "518 516 512 512 517 512 516 512 518 513 513 513 51", "2 513 512 513 519 512 519 516 515 517 514 516 516 ", "514 515 516 518 512 517 516 512 517 516 512 518 51", "4 515 518 514 516 515 518 517 514 519 516 513 513 ", "516 512 512 518 512 512 516 519 515 516 516 512 51", "8 516 512 516 517 514 516 515 514 512 515 516 516 ", "512 512 514 513 516 518 517 516 515 518 518 512 51", "7 512 512 517 512 512 512 516 512 512 512 514 512 ", "512 512 512 512 516 514 512 518 512 516 512 512 51", "8 512 512 516 512 513 518 518 516 516 512 517 513 ", "517 515 517 514 516 512 515 519 519 513 519 516 51", "8 513 512 518 512 514 512 512 514 518 513 518 518 ", "516 519 515 516 512 514 516 517 512 516 518 514 51", "6 512 513 512 517 516 518 512 512 513 518 516 514 ", "516 513 512 516 514 516 512 519 515 516 512 514 51", "5 512 516 512 515 515 513 517 518 512 515 518 513 ", "516 517 519 513 519 518 515 513 512 518 516 513 51", "4 518 513 512 512 512 514 517 512 515 512 518 512 ", "512 515 516 516 512 512 516 512 512 518 519 516 51", "4 514 515 515 512 514 515 516 512 515 514 514 512 ", "518 513 516 519 516 516 513 514 519 516 512 516 51", "2 513 517 514 512 512 516 515 514 512 512 512 514 ", "513 516 519 518 516 516 518 512 517 512 517 514 51", "7 512 518 517 513 518 512 512 519 512"};
    vector<string> names = {"A A BAAA CDAC A ACC C C B ADC D C A A B D A A A DA", " C A C BA B DBD B CCA A A BBA C DBA C A CDBC CAA D", "DD A ABA A A D D D A A A A B A ADAA C A ACC C DAA ", "BADC A ABB D C A A C AAC AAA A A A DC BCD C A A C ", "A C A A B DDC ADA B B AAA AAD CAA A A A DAD A B C ", "A ACA C A D C C C C A A ACA A AA AAAC A AAC BCC D ", "CAC A A AAA AABD C ADAA CDDA C CAAA AAA AAC AAAC A", "D DDA A A BD CD CADD A B AC AAAA A BCAC C AA A D A", "C BAD D A A A BD DCB A ADA A DD A CBD C AC C C AAA", " AAAD CAA C ACC A C ABC ADAA A D AB BACA C A A C A", "DAA A AAA DDDA ADB AAAD DAC ABAC DAAC C AAB AB CDD", " B A A ABBA A D DD A CCA C B CA AD AD A AB ADAB AC", "A ADD D AAD AAA A AAA A AB CAC B A B AAA AAA A B A", " D ADD BAA CCA CCCB A CAA BCAA D CC DA A AAA AAA B", "AD A C C CAA D C AA B A BAA A A A ADC AAA AAB C A ", "ACA AC CDC C B AAA A A ABAB C B A ACAD CAA ACCC CC", "AC A A B ADA A C ADC A CD A A D CDAA ADA C ADBB A ", "AAB CACA A A AAC C CAB BBC ABAA AAD DB ABC A A B A", " A BBA CA C DAAA ADAA C CA C A D A D ACBA A AAC AA", "D B AAA ABA AAA A C C B C C ACA CC C DCCB AC DAA C", " CAD AACD AAAA AC CA A CA A A A CD A CAD A CADB AB", " A A AAD C C AAAB ACA AADC C CAA C D C DD C A D DA", "DA B C A ACB A C C A ADA C DAA BAAB D A DBCB B CA ", "AAC C D DC ABA D AADA A CC CDA CCC C C DCAC BA B A", " C BCD A AAB CAAA A DCB AAC B A A C CCBD A DAA A A", "CD CA A A AA A CDC BA A A C CACA B C ADA A C DCA A", " C CAA DAAB A A AAC AABA B A B BA A B C DAA BAD DC", " CBA AA AA ABA CA A D CDA ACAD"};
    int k = 34;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "AA", "ACB", "ADB", "A", "A", "A", "AAA", "B", "B", "D", "DBD", "A", "ABAA", "C", "C", "C", "A", "B", "C", "C", "AAAD", "C", "A", "A", "A", "A", "AAA", "ADAA", "ADD", "B", "C", "D", "DBCB"};
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    vector<string> x = {"516 516 519 518 515 518 515 516 512 516 516 512 51", "4 512 514 514 514 512 512 512 513 519 512 512 514 ", "518 515 512 512 519 512 514 512 513 518 512 513 51", "6 512 516 513 518 512 518 514 512 512 516 519 516 ", "518 514 517 516 516 518 516 514 516 517 514 512 51", "6 515 514 514 512 519 517 514 519 512 516 512 516 ", "512 514 516 517 519 512 516 516 516 516 514 515 51", "2 512 515 518 512 518 512 516 519 519 515 512 512 ", "517 515 515 519 516 515 516 516 513 517 516 514 51", "4 516 518 518 518 516 512 514 517 512 512 519 515 ", "519 512 512 512 512 516 514 516 512 517 517 513 51", "6 514 514 515 512 512 518 512 512 517 514 518 512 ", "516 516 516 519 512 512 519 515 514 512 514 516 51", "4 518 512 514 518 513 512 516 512 517 514 514 512 ", "518 512 514 514 512 515 518 518 516 512 512 515 51", "4 519 516 516 512 515 516 513 514 512 516 519 516 ", "512 512 518 514 515 517 512 512 519 516 518 513 51", "6 517 512 515 516 516 516 513 513 512 518 512 517 ", "512 512 518 518 516 518 516 519 518 518 512 517 51", "2 512 518 512 514 517 512 512 514 512 514 512 519 ", "512 517 516 512 512 518 516 516 519 516 514 515 51", "6 516 514 517 512 515 512 515 518 512 516 519 513 ", "513 514 517 512 516 513 516 512 512 518 515 512 51", "9 516 517 512 518 516 518 512 519 514 514 512 516 ", "517 518 512 516 516 518 518 516 518 517 512 512 51", "4 512 518 512 514 516 518 512 516 513 518 516 517 ", "519 512 517 516 517 514 512 519 519 518 514 518 51", "6 516 512 512 515 514 514 516 519 512 512 513 516 ", "513 517 512 516 514 514 512 516 518 518 516 512 51", "6 516 518 514 517 514 512 516 518 516 518 516 512 ", "519 512 512 518 518 512 512 515 518 516 517 512 51", "2 515 512 516 516 514 515 516 512 516 515 512 512 ", "512 516 518 514 512 518 512 517 512 519 512 512 51", "8 516 512 514 519 518 518 512 517 512 512 516 515 ", "513 518 512 513 516 514 518 514 512 512 518 512 51", "5 512 519 513 514 516 516 512 512 518 516 512 513 ", "517 514 516 517 514 516 512 512 516"};
    vector<string> y = {"512 513 512 519 513 515 519 516 516 519 516 516 51", "2 512 516 517 515 512 516 515 519 516 512 512 513 ", "512 512 518 518 512 514 512 514 512 516 512 512 51", "2 519 514 512 512 519 512 512 516 516 517 516 513 ", "518 513 516 516 512 516 512 514 516 516 516 517 51", "2 512 514 512 512 517 512 514 512 512 516 514 517 ", "512 516 514 512 518 518 516 519 512 512 516 514 51", "2 518 518 514 512 512 514 514 512 516 512 518 512 ", "512 512 516 514 519 519 514 516 517 512 514 514 51", "6 514 518 518 514 516 516 512 512 518 515 512 516 ", "518 519 514 512 512 512 518 512 512 518 512 519 51", "4 512 512 516 514 519 512 515 512 513 519 517 518 ", "515 516 514 517 512 515 512 517 517 516 514 518 51", "6 519 514 512 512 512 512 513 518 516 514 514 518 ", "514 516 512 516 516 518 516 516 518 512 512 514 51", "2 512 519 517 512 518 517 518 515 517 516 512 514 ", "517 514 512 516 516 512 518 512 514 512 516 512 51", "4 516 512 516 512 512 512 515 514 517 516 519 514 ", "512 518 513 512 512 516 515 515 516 512 518 512 51", "2 515 514 515 512 518 513 512 512 519 512 512 512 ", "517 517 516 512 512 519 516 514 516 516 517 512 51", "4 519 517 519 514 512 512 516 519 514 516 516 513 ", "516 513 516 519 517 518 518 514 517 512 512 519 51", "5 516 518 512 518 514 516 518 516 518 512 518 513 ", "517 514 512 512 519 513 516 513 514 514 515 512 51", "2 516 516 519 512 512 514 515 512 512 512 514 517 ", "512 514 512 517 514 517 514 514 518 516 517 518 51", "3 512 514 512 516 514 514 514 516 516 512 516 515 ", "512 512 513 512 518 513 512 518 515 512 518 514 51", "9 514 513 516 512 516 514 512 516 517 518 518 517 ", "512 515 512 512 512 512 512 517 514 519 519 517 51", "7 513 514 512 512 518 517 514 512 518 512 514 515 ", "512 518 516 516 519 519 512 512 512 516 516 516 51", "9 518 512 519 515 518 512 514 518 512 512 519 518 ", "512 513 512 516 512 519 512 519 518 512 516 514 51", "7 516 512 512 512 514 515 519 512 512 512 512 519 ", "518 515 516 518 516 517 517 513 519"};
    vector<string> lengths = {"513 513 516 519 517 518 518 516 518 516 519 514 51", "2 519 518 516 519 518 515 516 516 516 512 512 512 ", "512 513 512 512 515 512 512 517 513 514 512 518 51", "4 517 512 513 515 512 517 512 512 518 514 512 516 ", "512 513 514 512 512 516 516 518 515 518 512 514 51", "2 512 514 516 512 512 512 517 516 516 516 516 512 ", "514 518 516 518 517 516 518 512 512 516 512 517 51", "4 518 518 512 517 519 514 519 518 516 518 514 519 ", "514 518 517 514 516 516 517 516 515 518 516 512 51", "5 516 516 516 516 516 512 519 518 518 512 516 519 ", "518 512 512 512 514 515 518 516 517 513 512 516 51", "2 518 512 519 516 512 514 518 517 513 516 512 512 ", "516 515 512 515 519 514 512 516 518 518 514 513 51", "6 512 513 512 518 515 512 516 514 512 519 512 515 ", "513 517 517 518 519 512 519 514 513 515 519 518 51", "4 513 512 512 518 517 518 516 514 512 514 512 519 ", "517 516 512 512 512 514 512 518 514 518 515 518 51", "2 518 516 514 512 517 516 512 516 518 512 512 515 ", "519 518 514 512 512 518 512 512 512 518 514 519 51", "6 518 512 516 518 518 516 518 517 512 512 514 518 ", "518 517 514 516 516 518 512 513 518 516 516 514 51", "4 512 516 516 515 512 518 518 512 512 514 518 514 ", "516 513 516 516 516 516 519 515 514 518 517 519 51", "2 513 512 515 512 514 512 514 514 518 512 512 512 ", "516 512 512 515 518 513 514 512 515 518 516 518 51", "3 512 516 512 518 516 512 513 512 517 516 514 516 ", "512 518 512 518 513 516 517 514 517 514 512 513 51", "4 512 513 519 516 516 512 515 519 516 512 516 516 ", "516 518 519 512 512 512 519 512 512 518 516 512 51", "4 513 512 517 518 519 517 512 516 512 512 513 518 ", "514 514 513 516 512 518 516 516 513 515 518 516 51", "8 516 514 518 514 517 518 512 517 516 512 514 514 ", "515 516 514 515 512 516 512 516 513 513 514 516 51", "5 519 517 512 516 519 518 512 514 514 517 516 512 ", "512 514 512 518 514 515 512 512 514 514 514 512 51", "3 516 513 512 516 516 518 517 512 519 514 518 517 ", "512 512 519 518 515 514 519 512 518"};
    vector<string> names = {"BAAC AD AAD AC BAA BAC C D CA CAAC AABD B CDAA A A", "DA C D A C ACC AA A AAAA CB C AAA B ABAA A C A AC ", "A AAA CCB A A A C C A C DCCA D C B AB C A BA B DBD", " A A DAA AACA A A AAD A DAAA AC BC AAC A C B B AAA", "A AA A A B AAA AAB CCDC B D C AACA C A B B A AAA B", "CA C D A D C ADD DCA AAAA A A C AA D C D ACCB D AA", "D AD ACC B CAA A CC AAAB A BAC C AAA ACC C A A AAB", " ACA AA A BABA B A CDAB A ACA A ACA C B C BB A A A", " BCAA ACC ABA AAA ACAC AAA DDD C A A A B A CCCC A ", "A C B ADA BAA BAB CA A C B BC CDAA C A AAA AAA B A", "AA B A A ACC A C C D ABB B AAB AA D B A C B B DC A", "D DA AAC A CAB AC ABA C A CAC C CDC DA C A C D A C", " AADC B ACAC BAB ABB ADA AC A AD CC ACA CADA A C C", " BAC C AAA D ACA D A BAD AAB A B D AABC A C A B AB", " CCA DAD AAD D C AAD A A AAD C ACA AAA B A DACA A ", "BAC ACAC A BCB C DC CCCA A C B A C D C D AAAA CCCA", " A A AAD A C A B AC CAAB A A A AC D ADA D D ADD C ", "AAA ADA C A CADD B C AA A A B ACCD B A C AC BACA A", "AD ACA A CAC A A B D B A CAC CBB CCAA C ABC CBA AC", " BAA AAAA A A DABD ACA D A B D AAA A A D AADA A B ", "ADAA ABC A A AD AA DAAA C A AA B D DCAD BDCC A D A", "A ACAC BDAA A C AAD A AACC BA C C BAA AAC A DBD AC", "A AAD A A CAA AC ACA ABA A C BAA C CAB C DBC AA AD", " D A AA AACC A CDC AAAA A AABA D A AAA C AA ADA A ", "A DAA ABBD CBAD AAA DA BA D A AAAA D AAA A A B CAA", " B B A A D ACCA A A AA DAB AAD AAA A A C C AAA A C", " D AACD AC BCAC A CD B A A D AAAA AB ADB BCA"};
    int k = 34;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "AAA", "AABC", "ABB", "ACA", "AAAA", "ADA", "D", "AA", "AAA", "AAD", "ACA", "C", "CCDC", "ACA", "ADA", "A", "A", "AA", "AAA", "AAAA", "ABC", "B", "B", "C", "CB", "D"};
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    vector<string> x = {"516 514 514 514 518 512 515 512 515 518 517 516 51", "6 518 516 512 516 519 518 514 516 518 512 513 512 ", "515 517 512 515 518 518 516 515 518 519 513 518 51", "8 516 514 514 516 516 516 515 516 516 512 513 514 ", "517 518 518 516 512 516 514 515 519 512 516 515 51", "2 518 516 515 513 512 517 515 512 515 512 516 518 ", "516 518 519 517 519 517 512 516 515 512 512 518 51", "2 514 512 514 516 514 514 512 514 512 518 515 512 ", "517 512 516 512 518 512 518 515 512 516 516 515 51", "3 514 518 514 516 512 512 512 513 512 512 518 516 ", "518 514 512 515 518 516 516 516 516 516 517 518 51", "6 516 512 517 516 515 516 519 519 518 517 518 519 ", "512 517 512 514 514 512 513 514 516 518 514 514 51", "3 512 513 514 516 512 515 512 516 512 516 518 519 ", "517 512 516 515 512 517 518 518 514 518 512 518 51", "2 516 515 518 518 516 512 513 512 512 518 516 519 ", "517 512 514 516 518 518 514 518 514 512 512 514 51", "8 518 514 516 515 512 512 518 512 516 512 516 512 ", "512 517 518 512 515 512 518 518 512 512 516 512 51", "6 515 514 514 515 517 513 516 517 518 514 518 515 ", "513 518 514 512 513 518 514 517 512 512 514 519 51", "6 519 517 518 513 516 512 516 512 516 519 517 512 ", "517 519 518 519 512 515 513 512 515 516 513 512 51", "4 514 514 513 512 516 512 516 515 516 517 512 518 ", "512 515 513 519 518 516 516 518 515 514 516 512 51", "6 518 514 518 512 512 518 518 512 512 515 514 512 ", "512 516 512 514 512 516 516 518 516 516 514 516 51", "3 519 517 516 512 512 512 514 514 512 516 512 512 ", "518 519 515 519 517 512 512 512 515 514 512 512 51", "9 519 518 515 513 517 515 516 514 512 512 516 519 ", "512 512 512 519 516 516 512 517 513 512 516 514 51", "2 515 517 512 518 516 514 512 512 512 519 516 512 ", "516 515 518 512 514 518 516 512 514 516 516 512 51", "8 512 518 518 516 515 512 519 514 512 512 516 512 ", "516 513 512 518 512 512 516 513 519 514 515 512 51", "6 517 512 515 512 512 514 517 512 514 515 513 518 ", "517 512 514 519 513 515 518 516 515 512 519 512 51", "3 513 512 518 512 514 516 516 513 512 516 512 513 ", "512 512 516 513 519 516 514 516"};
    vector<string> y = {"516 516 518 512 519 512 512 518 518 517 514 517 51", "6 512 512 515 514 515 518 518 512 512 512 514 514 ", "514 516 518 517 516 514 513 514 519 518 512 516 51", "2 512 518 515 517 513 516 512 519 512 514 519 512 ", "512 516 518 517 512 516 516 512 512 512 513 512 51", "2 519 515 513 512 516 518 512 512 516 518 517 512 ", "518 516 514 514 517 518 516 516 514 516 512 512 51", "6 512 512 516 512 512 516 518 513 514 512 519 512 ", "517 514 514 516 516 516 512 514 516 516 517 514 51", "2 515 516 514 514 514 512 515 514 512 513 519 518 ", "512 512 512 518 518 514 518 518 512 512 519 516 51", "5 514 512 514 518 514 512 512 514 512 516 512 512 ", "512 519 516 512 512 518 512 516 517 515 512 516 51", "3 515 518 518 518 518 518 516 519 512 519 513 514 ", "518 512 514 518 518 516 516 518 512 512 514 515 51", "9 512 514 512 516 514 513 514 513 512 518 516 518 ", "519 513 519 512 516 519 519 512 517 518 514 516 51", "2 512 518 512 513 515 514 519 512 512 514 517 512 ", "516 516 518 515 515 518 519 518 516 515 518 512 51", "5 512 516 515 512 513 516 516 519 518 516 517 518 ", "518 512 512 514 514 519 513 512 512 516 517 514 51", "9 519 516 516 514 516 512 518 512 516 518 514 512 ", "516 516 512 512 512 512 518 517 513 516 514 518 51", "6 518 514 516 512 515 512 513 517 517 518 512 519 ", "512 512 517 512 512 515 518 514 512 512 512 512 51", "2 518 517 516 516 512 516 516 516 517 518 517 513 ", "512 512 518 512 516 512 517 512 515 518 516 512 51", "6 517 515 518 514 513 512 512 519 514 513 518 512 ", "512 514 512 512 514 512 512 512 512 514 517 514 51", "9 514 512 519 518 516 518 512 515 512 512 514 513 ", "517 518 518 512 516 512 512 516 517 516 512 518 51", "5 512 519 512 516 513 519 512 512 514 512 516 517 ", "516 518 512 515 513 512 517 516 513 514 514 517 51", "2 516 514 513 516 519 512 513 519 514 517 518 518 ", "517 513 519 518 512 513 512 512 512 517 512 512 51", "7 518 516 514 512 512 514 512 512 518 512 512 512 ", "518 516 516 519 515 517 516 512 514 512 516 512 51", "2 512 519 515 516 512 516 512 517 512 516 513 519 ", "516 513 512 518 517 512 515 515"};
    vector<string> lengths = {"512 516 512 515 519 518 512 514 512 512 516 519 51", "2 516 518 518 512 513 517 514 512 518 519 518 517 ", "512 519 512 512 512 516 514 514 518 519 513 515 51", "2 512 512 512 519 513 518 518 514 516 518 513 512 ", "518 515 516 513 512 512 512 516 518 512 516 512 51", "5 512 512 512 512 512 512 512 516 512 517 512 512 ", "512 514 512 516 512 512 515 512 519 512 518 515 51", "3 514 518 518 513 512 512 512 515 516 518 516 512 ", "519 516 512 518 512 518 516 512 512 516 512 512 51", "2 513 514 515 515 518 512 519 512 516 516 513 514 ", "518 516 512 515 519 512 512 518 513 512 514 516 51", "8 512 516 518 515 516 516 512 512 518 518 515 516 ", "512 512 512 514 514 516 518 513 518 518 519 512 51", "8 512 518 512 516 518 512 517 515 513 516 519 516 ", "519 518 518 517 512 518 516 514 514 514 518 512 51", "2 512 516 516 512 514 516 512 518 514 515 519 518 ", "518 519 512 512 514 512 513 512 516 518 518 517 51", "4 513 515 512 512 512 518 512 518 512 512 512 516 ", "518 516 516 518 516 512 518 512 512 512 519 512 51", "7 512 512 512 517 512 512 512 516 512 519 512 515 ", "515 513 516 518 514 512 519 512 512 518 516 519 51", "2 516 512 519 518 517 516 512 518 514 512 513 516 ", "512 516 512 513 512 512 519 512 512 518 516 512 51", "7 512 515 512 512 519 516 512 519 512 516 516 513 ", "516 512 516 512 514 516 518 516 517 512 518 512 51", "2 518 516 518 516 517 515 512 517 513 518 512 514 ", "516 512 512 515 516 512 516 513 514 515 512 515 51", "2 512 512 515 514 515 516 512 518 519 512 512 514 ", "515 518 512 518 519 516 515 518 514 514 512 518 51", "6 517 516 514 513 512 518 516 514 512 516 516 512 ", "514 512 512 513 512 516 516 518 516 512 512 516 51", "4 512 512 514 516 519 516 517 519 512 514 512 512 ", "513 512 519 512 513 512 512 512 515 516 513 512 51", "6 515 515 512 515 519 515 517 512 516 512 512 516 ", "512 516 513 516 516 516 516 518 518 513 512 516 51", "3 512 516 513 519 516 518 516 519 516 512 512 517 ", "516 513 512 516 512 516 517 512 518 512 512 514 51", "2 514 515 519 512 514 513 517 512 519 514 516 513 ", "518 513 513 516 514 517 513 518"};
    vector<string> names = {"DD AAC CB A AAA ACA A B CBA A A DBCA C AAAA AABA A", "BA C AAA A A D DAA B B A C CD CAC A B A A AAA AAA ", "A AAAA A AACC A AAD A A A A A A D BAAA A AB CDD D ", "A D A ACBC AA D BA C CCAA BCC A A C AADD AAD CBA D", " D AA A DCA C AA D C BA CAD D C AA BAA AAAB B A AC", "B A C AAD C CAA CA CA AAA A CC A AABA C AD BACA AA", "C DA C C A C ABC C C ABD BAA AACA A CAC AAAA A A A", " D CAAA C A AAAD ABAA A C A ADAA ACAB BBA ABB DCB ", "C AA B AAD CCA DBA CDAA A C C A DABA A A ADBC AA A", "AAD AAD C A A A CAA ABDB AADA A DCC CC CCAA ABDB B", " CAC CAD CACA C C A C D ABAB C CCD C AAD BCA BAA D", " BC CAC C BAAB ACA BCC AAA C C BAD A B DAD DCD DBB", " ACA A C A C CABC A ABA AA A ADA C ADC A C BCB A A", "AC A AACA AD AC A AB AA AAA A AAC AC BCAA D A A C ", "CAC A CDCA CA B C AAA A AAB CCAD B CDA AD C C C C ", "C A C DCA A ACA DA A AAAA DCA AB AABA ABAA BAA AAA", " BAAB AAA C D C A CC ADBA AC ACA CBA B DD A C CC A", " A BAC A C B CCC A CAC A B A CC ABA AADA A A C C C", "CAC ABAA D D A AA D CCD AAAA CA AC C D AAB A CCA A", "A C D A A DCAC C CA AA CAAC AAAA AAC DDB AC ACC A ", "AAC AAC AADA DA ADAC A AAA DA AA A D C C BADA D AD", "A C A B C B A A DCD AC BAAA A AAC B A C A CB CDA A", "AAA BDBA ADAA B C DA AA CCB C A A A D A A CADC C A", "AAA A C BAC A BA C BA A A AAA ACA AAD C A ADA A CD", "C AC AADA AAC AC C BCA B B CAA A ACC B AAD DA AA A", "AA CA A ACA DAAC D CADA A A AAA A AAC AAA ADA A CC", " BB A BD A C A ADC ABC DAA CA A A C D D A D C C A ", "C A DCB AAAA A C DAAA B AAB A B A DA A A C CCCA C ", "BACA C B A C B DAA CA CAAA DAB CA BCA ACCA C C D"};
    int k = 50;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"ADA", "B", "C", "A", "AA", "AAD", "AC", "ACA", "B", "C", "A", "A", "A", "A", "A", "A", "AA", "ABAA", "ABC", "AC", "BB", "CAAA", "CC", "D", "D", "D", "DBA", "DD", "DDB", "A", "AAC", "D", "AAA", "ACA", "B", "DA", "C", "A", "A", "A", "A", "AAA", "AAAD", "AABA", "ABA", "B", "C", "C", "C", "C"};
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    vector<string> x = {"512 514 513 518 518 516 516 515 516 516 519 517 51", "2 518 518 517 512 514 513 518 516 518 518 512 515 ", "516 515 513 512 517 514 514 518 514 512 514 518 51", "4 516 512 516 519 514 518 516 514 516 516 514 512 ", "517 518 513 519 512 518 512 516 512 516 516 512 51", "8 513 516 515 516 513 518 514 515 512 516 512 512 ", "512 512 515 516 513 512 516 518 516 512 512 512 51", "6 514 517 517 512 517 518 516 515 512 512 514 516 ", "512 516 517 516 518 512 514 518 512 517 514 512 51", "3 512 512 512 519 512 514 512 512 512 514 516 516 ", "512 512 516 518 512 514 514 512 514 519 514 515 51", "2 516 518 516 516 512 512 514 518 518 512 515 515 ", "514 512 512 516 515 518 512 518 516 514 512 513 51", "2 512 516 512 512 516 517 514 512 514 513 515 516 ", "513 517 513 516 512 516 516 518 515 516 512 518 51", "6 512 518 515 514 512 512 512 514 513 518 512 513 ", "514 512 514 512 516 513 514 512 514 514 513 515 51", "6 514 514 519 519 517 515 512 512 512 512 512 519 ", "516 513 512 516 518 515 513 512 512 514 517 518 51", "7 513 514 516 513 519 514 514 515 514 518 516 515 ", "518 516 512 516 516 518 512 514 519 517 519 516 51", "6 519 512 518 516 515 514 512 512 512 516 514 514 ", "517 512 516 513 514 513 512 518 515 513 516 513 51", "2 515 512 512 512 512 512 518 512 516 512 516 512 ", "512 515 517 514 514 512 512 515 518 512 512 513 51", "2 514 512 513 512 516 518 518 519 515 514 516 516 ", "518 512 512 512 516 512 513 512 513 516 519 515 51", "7 512 512 513 516 517 514 516 516 512 518 512 516 ", "512 516 514 512 512 519 512 518 516 512 512 514 51", "3 512 512 517 512 515 517 512 512 518 515 515 519 ", "516 518 518 518 517 516 516 518 516 513 518 512 51", "8 514 512 512 516 517 515 514 512 512 518 512 512 ", "516 513 514 513 516 512 513 514 518 514 512 516 51", "2 512 512 516 518 512 518 512 512 514 515 518 518 ", "512 512 512 514 516 512 512 519 512 518 516 514 51", "8 518 515 515 512 516 512"};
    vector<string> y = {"516 514 512 516 518 518 512 516 514 517 515 516 51", "6 516 512 516 518 515 516 514 517 516 514 516 512 ", "516 516 516 513 512 514 512 512 516 512 516 516 51", "6 513 514 512 514 515 512 513 515 512 516 512 512 ", "512 512 513 512 512 512 514 516 516 513 514 512 51", "2 512 519 512 519 517 513 517 514 512 514 514 512 ", "516 512 518 514 518 512 516 517 514 514 512 512 51", "2 512 514 514 514 516 512 514 517 518 516 512 517 ", "519 519 514 515 519 519 516 517 512 515 519 514 51", "9 512 512 512 512 516 515 512 519 516 512 516 516 ", "516 512 512 518 512 516 518 516 512 512 513 516 51", "2 514 518 512 519 516 512 516 512 512 516 513 516 ", "518 516 514 516 513 513 513 515 514 514 514 518 51", "4 518 512 512 516 518 518 512 516 516 512 512 516 ", "512 512 512 512 512 516 515 513 515 514 518 516 51", "2 517 513 516 516 518 512 512 512 512 518 519 512 ", "518 514 516 518 512 512 512 512 516 513 514 512 51", "2 513 516 517 516 517 512 519 516 514 514 512 517 ", "516 514 513 512 516 518 512 514 514 512 518 514 51", "8 513 515 513 516 512 513 516 517 516 516 512 512 ", "512 519 516 515 516 514 514 512 512 512 512 512 51", "6 512 516 512 516 517 514 512 515 514 514 512 514 ", "516 512 512 518 518 515 512 512 515 516 513 514 51", "6 512 517 514 512 514 514 516 512 512 512 513 516 ", "512 514 516 518 518 517 515 512 516 516 518 514 51", "5 516 514 518 516 516 517 513 519 518 512 512 517 ", "515 518 513 512 512 514 514 517 516 516 517 519 51", "6 512 512 512 514 514 513 518 512 518 512 512 517 ", "512 512 516 512 515 515 516 513 516 514 516 514 51", "7 512 512 512 518 512 512 512 514 518 519 514 514 ", "512 516 512 518 514 514 513 512 512 512 517 518 51", "6 512 512 516 513 512 512 514 512 512 512 515 512 ", "517 517 516 512 514 516 513 513 513 516 512 516 51", "5 516 512 512 516 513 512 516 513 515 512 518 519 ", "513 518 518 515 518 515 516 519 512 514 518 514 51", "2 516 513 519 518 518 519"};
    vector<string> lengths = {"512 514 516 512 512 518 519 513 517 516 516 512 51", "4 518 514 512 518 518 518 514 516 514 516 517 514 ", "512 512 518 517 512 512 516 512 516 515 514 512 51", "8 515 513 512 516 515 512 512 516 512 517 518 516 ", "512 512 516 516 518 512 518 516 516 512 513 512 51", "6 512 517 515 516 518 513 512 512 512 518 512 515 ", "515 512 516 518 512 512 512 517 518 512 514 513 51", "6 515 512 516 512 518 512 513 512 516 516 512 517 ", "514 512 518 515 516 513 518 516 512 517 518 516 51", "4 516 512 512 514 516 519 516 512 514 512 512 512 ", "512 515 519 517 516 514 512 512 513 512 519 513 51", "7 512 514 512 518 512 515 518 519 514 516 512 517 ", "512 516 514 514 512 514 514 517 516 514 518 512 51", "2 514 518 513 518 517 518 513 515 518 518 518 516 ", "512 512 516 516 515 512 512 514 517 513 514 513 51", "3 514 516 512 516 512 518 512 518 518 512 515 518 ", "518 512 516 513 512 516 514 519 516 513 513 517 51", "4 516 518 514 516 516 512 515 516 512 514 518 513 ", "514 516 515 515 513 516 517 518 512 517 518 514 51", "4 516 518 518 512 515 514 512 516 514 517 512 516 ", "513 516 514 516 512 515 516 516 514 512 513 519 51", "6 518 519 516 514 512 518 518 512 512 516 516 519 ", "517 512 518 516 516 514 519 515 518 512 514 515 51", "2 514 514 512 518 512 515 519 512 512 512 512 514 ", "517 512 518 512 518 517 518 516 519 515 513 513 51", "8 512 512 518 512 518 512 512 517 512 512 514 512 ", "512 516 512 516 512 519 515 518 516 517 518 512 51", "6 516 512 512 512 512 514 512 518 519 517 517 517 ", "514 514 516 517 516 518 518 514 518 512 516 512 51", "8 514 512 517 512 516 515 515 512 512 517 515 516 ", "514 512 516 516 516 512 512 513 513 512 516 516 51", "6 512 512 517 515 516 516 512 518 517 512 512 516 ", "515 518 517 512 517 512 514 516 518 514 513 516 51", "9 515 515 512 515 512 518 515 518 512 512 517 517 ", "512 513 518 516 514 512 512 517 512 514 515 518 51", "2 516 516 514 512 512 512"};
    vector<string> names = {"D A BDC AAA AAA AAC CAC D BA D AAD ACCD CAC A CADA", " CCAC A A AAAA B CAA BAB BAA A CAC CAA D C A A C A", "C AD ACC C A A CDBA A C C A AD B AAC CAC ACCA BA A", "A C A C CAA BCA DBAB CDA A A ACA B DDAA C ADCA CB ", "A AAA C AAD AC C A A AD AAA DAA A DAA A A ACA CBAA", " A C AC CC DDB A ADA D A A CA BAAA ACA BA D CDC C ", "A A A AA ADC A CAAA C B AB CA CD B C A ADA C D D D", "A A D AA ADA BAAC CCA BA CD DC A AA CBA CCAA ACD B", "DBA DC AAB DADA AD DBAA C CACD D AAA CC AAA A A AC", " AAA A B ABD AAB CABA CDAC AACC DDBD CCAA A A D AD", "A D A A DC B BAC BAB B B C AA A CCB C AAA B A B D ", "D ADA A DAAC BCA CABD AB A DC A AA B DCC A C A BBC", " CAC AA CAD A D A A A CC AB AAB ABA ACD C CAB BBD ", "C C ADA BDC A ACB B C CC D C ABD A CCC BBAA C C AA", "DA AACA AAB A C AAA AC BCD AAD A ACAB C AAAA ACD A", " DDAA A D DDD ABA A A C B A AA C ABB A AB ABC BAA ", "CBA C BCAB C C CAB A C CBAA DBC ACAA AA AAA DBAB A", " A A A A A AADC C AAC A BAA C DA A C D C DAC A AD ", "CAAB A CCA B B ACB AAC ACB CBDA AA A AADA AB A CC ", "ACAC BBCA B C A BDB CBAA DCAA AAC AACD A AC ACA AA", "C B C A A DAA A CDBA A CA A ACC D CAA CAB AA A AAB", " ACA ADCA ACBA DCAA A A C A A A AAA A CDDA B BDC A", " CDA B A A C CCAC A A A A A BBC AD A CCA A B C C C", " AAC C C A A A AAA CAD B B AAC CA BDA AA D ACA CAA", " C C BACD A ABA DDA ABA B A C AAB AABD A BA AAA A ", "A BC A CBBA C AAA A A C C ADDA ABA AADC ABA AC C D", "AAB D CC AAC A AAA C AD ACC BC A A A C CC AA DCAC"};
    int k = 48;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "AAB", "A", "C", "C", "C", "D", "DBAB", "A", "B", "C", "C", "DBAA", "A", "ABA", "ADA", "C", "CAB", "CBA", "D", "AAA", "BBC", "C", "CBBA", "D", "DAA", "DC", "A", "CCAC", "DDB", "A", "A", "B", "A", "A", "A", "A", "AA", "AD", "C", "C", "C", "C", "CA", "CA", "CBAA", "D", "DAA"};
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    vector<string> x = {"512 514 516 513 515 512 519 515 512 516 516 517 51", "8 516 515 516 513 518 514 515 512 515 512 516 512 ", "512 518 516 512 517 512 513 512 512 513 512 512 51", "9 519 518 515 512 512 518 518 517 516 512 512 512 ", "518 514 514 518 514 514 515 519 514 516 518 512 51", "6 514 512 518 512 514 512 514 516 516 518 516 516 ", "514 512 514 517 512 516 516 512 518 512 512 512 51", "7 512 516 512 512 514 512 512 514 519 513 514 512 ", "516 516 516 512 518 518 518 519 512 517 513 516 51", "8 516 512 516 513 512 513 517 516 518 512 512 512 ", "518 512 512 512 514 512 518 515 512 514 514 519 51", "4 514 513 516 516 517 518 514 512 512 512 512 512 ", "516 512 514 512 512 514 516 513 512 516 516 518 51", "5 517 519 512 512 515 518 517 514 518 515 517 514 ", "518 512 516 516 518 519 512 512 512 512 517 512 51", "2 516 517 516 514 514 519 512 512 512 514 519 513 ", "512 518 515 512 512 512 515 512 512 516 512 518 51", "6 515 515 517 512 516 518 512 515 516 512 517 515 ", "512 512 518 513 514 518 516 516 518 519 514 516 51", "6 518 512 516 513 514 512 512 512 513 516 512 512 ", "519 518 516 516 516 516 514 518 512 516 512 513 51", "2 517 516 513 518 515 512 512 512 512 515 515 512 ", "512 518 512 512 519 518 512 514 512 518 516 517 51", "7 514 516 519 516 517 519 512 512 519 516 516 518 ", "519 512 516 514 514 516 517 512 513 516 518 512 51", "2 518 512 512 513 514 517 512 518 512 516 512 512 ", "514 513 514 516 516 518 513 516 512 512 517 512 51", "2 517 516 516 518 512 512 515 518 516 517 517 514 ", "516 518 519 517 516 515 512 515 512 514 512 513 51", "2 515 514 516 515 517 516 513 512 516 514 518 518 ", "512 516 519 518 517 512 512 512 512 516 518 517 51", "2 516 513 518 512 518 513 514 514 512 512 514 519 ", "515 513 513 518 512 514 518 514 512 514 516 517 51", "8 513 516 513 518 517 516 518 519 512 512 516 514 ", "512 517 514 518 512 512 519 516 518 516 515 514 51", "9 512 512 518 516 516 518 514 518 513 516 512 513 ", "515 512 513 512 516 518 512 512 517 515 512 512 51", "2 512 516 516 512 514 516 515 512 514"};
    vector<string> y = {"512 514 514 516 516 513 513 514 514 516 513 514 51", "4 516 513 516 512 512 519 516 512 512 519 518 512 ", "512 515 512 512 515 517 512 515 515 519 516 514 51", "6 514 512 512 516 514 517 512 519 512 517 517 512 ", "512 515 518 519 512 518 513 515 514 516 518 512 51", "8 519 516 518 517 515 517 517 518 516 519 518 516 ", "512 515 512 512 517 516 516 516 517 519 518 515 51", "2 518 513 512 518 518 517 516 516 516 516 512 512 ", "512 513 516 512 512 514 514 518 512 516 519 516 51", "6 518 516 513 515 514 512 512 512 512 512 519 516 ", "516 513 514 513 512 515 512 516 517 513 516 518 51", "2 517 512 517 516 514 519 512 519 516 516 517 514 ", "512 519 515 516 513 516 516 518 512 518 518 518 51", "6 516 512 515 514 517 513 518 517 516 515 512 516 ", "512 512 518 512 516 518 512 519 512 512 512 518 51", "3 512 512 519 512 512 512 514 518 517 514 518 515 ", "515 512 514 515 515 516 512 518 519 518 512 517 51", "4 518 519 516 512 517 513 519 517 512 514 514 512 ", "512 519 517 512 512 516 512 512 514 518 512 516 51", "7 512 512 515 514 516 514 512 515 518 512 517 512 ", "512 512 512 518 512 516 518 512 512 518 516 514 51", "6 518 519 512 516 515 516 513 512 512 514 514 515 ", "518 514 514 516 512 516 512 514 512 513 514 516 51", "8 514 516 515 519 516 518 515 516 512 516 518 516 ", "512 512 518 512 518 512 516 513 516 515 517 516 51", "8 513 512 518 513 518 512 512 516 519 512 516 513 ", "512 516 514 513 512 515 515 515 517 518 512 516 51", "3 512 518 516 512 516 517 516 512 512 512 513 516 ", "519 515 516 514 512 516 512 512 515 512 512 514 51", "2 515 512 512 518 514 512 518 512 517 514 519 518 ", "512 516 518 512 512 512 512 519 516 514 514 516 51", "9 512 518 513 512 514 512 513 518 518 517 516 512 ", "512 512 512 512 518 512 517 514 515 512 516 519 51", "8 514 516 512 512 518 514 517 515 517 512 515 514 ", "518 518 516 519 514 519 518 513 513 518 518 516 51", "2 516 516 517 517 512 512 514 512 512 519 513 513 ", "514 519 516 512 518 517 519 518 512 512 512 515 51", "2 516 512 518 516 517 514 519 512 516"};
    vector<string> lengths = {"518 512 512 517 516 512 513 516 512 514 512 514 51", "2 512 514 516 514 514 512 512 513 518 519 512 518 ", "516 516 513 514 519 517 514 516 516 515 512 514 51", "7 518 516 514 518 517 512 512 518 515 516 519 514 ", "518 517 516 512 512 512 512 516 516 514 514 514 51", "7 517 512 512 512 516 516 512 514 516 513 516 515 ", "514 514 513 512 516 512 517 514 512 519 518 512 51", "6 517 512 516 512 512 519 518 515 512 518 517 518 ", "512 515 512 518 512 514 512 512 518 512 516 515 51", "9 517 513 512 517 512 516 518 513 515 518 513 512 ", "512 514 516 513 518 512 513 518 515 518 516 516 51", "4 512 512 516 516 515 519 517 518 516 512 512 514 ", "518 512 516 516 517 514 512 512 519 512 517 518 51", "8 516 516 517 514 512 514 516 518 516 519 512 516 ", "518 516 512 512 517 512 516 512 518 513 513 513 51", "2 513 512 513 519 512 519 516 515 517 514 516 516 ", "514 515 516 518 512 517 516 512 517 516 512 518 51", "4 515 518 514 516 515 518 517 514 519 516 513 513 ", "516 512 512 518 512 512 516 519 515 516 516 512 51", "8 516 512 516 517 514 516 515 514 512 515 516 516 ", "512 512 514 513 516 518 517 516 515 518 518 512 51", "7 512 512 517 512 512 512 516 512 512 512 514 512 ", "512 512 512 512 516 514 512 518 512 516 512 512 51", "8 512 512 516 512 513 518 518 516 516 512 517 513 ", "517 515 517 514 516 512 515 519 519 513 519 516 51", "8 513 512 518 512 514 512 512 514 518 513 518 518 ", "516 519 515 516 512 514 516 517 512 516 518 514 51", "6 512 513 512 517 516 518 512 512 513 518 516 514 ", "516 513 512 516 514 516 512 519 515 516 512 514 51", "5 512 516 512 515 515 513 517 518 512 515 518 513 ", "516 517 519 513 519 518 515 513 512 518 516 513 51", "4 518 513 512 512 512 514 517 512 515 512 518 512 ", "512 515 516 516 512 512 516 512 512 518 519 516 51", "4 514 515 515 512 514 515 516 512 515 514 514 512 ", "518 513 516 519 516 516 513 514 519 516 512 516 51", "2 513 517 514 512 512 516 515 514 512 512 512 514 ", "513 516 519 518 516 516 518 512 517 512 517 514 51", "7 512 518 517 513 518 512 512 519 512"};
    vector<string> names = {"A A BAAA CDAC A ACC C C B ADC D C A A B D A A A DA", " C A C BA B DBD B CCA A A BBA C DBA C A CDBC CAA D", "DD A ABA A A D D D A A A A B A ADAA C A ACC C DAA ", "BADC A ABB D C A A C AAC AAA A A A DC BCD C A A C ", "A C A A B DDC ADA B B AAA AAD CAA A A A DAD A B C ", "A ACA C A D C C C C A A ACA A AA AAAC A AAC BCC D ", "CAC A A AAA AABD C ADAA CDDA C CAAA AAA AAC AAAC A", "D DDA A A BD CD CADD A B AC AAAA A BCAC C AA A D A", "C BAD D A A A BD DCB A ADA A DD A CBD C AC C C AAA", " AAAD CAA C ACC A C ABC ADAA A D AB BACA C A A C A", "DAA A AAA DDDA ADB AAAD DAC ABAC DAAC C AAB AB CDD", " B A A ABBA A D DD A CCA C B CA AD AD A AB ADAB AC", "A ADD D AAD AAA A AAA A AB CAC B A B AAA AAA A B A", " D ADD BAA CCA CCCB A CAA BCAA D CC DA A AAA AAA B", "AD A C C CAA D C AA B A BAA A A A ADC AAA AAB C A ", "ACA AC CDC C B AAA A A ABAB C B A ACAD CAA ACCC CC", "AC A A B ADA A C ADC A CD A A D CDAA ADA C ADBB A ", "AAB CACA A A AAC C CAB BBC ABAA AAD DB ABC A A B A", " A BBA CA C DAAA ADAA C CA C A D A D ACBA A AAC AA", "D B AAA ABA AAA A C C B C C ACA CC C DCCB AC DAA C", " CAD AACD AAAA AC CA A CA A A A CD A CAD A CADB AB", " A A AAD C C AAAB ACA AADC C CAA C D C DD C A D DA", "DA B C A ACB A C C A ADA C DAA BAAB D A DBCB B CA ", "AAC C D DC ABA D AADA A CC CDA CCC C C DCAC BA B A", " C BCD A AAB CAAA A DCB AAC B A A C CCBD A DAA A A", "CD CA A A AA A CDC BA A A C CACA B C ADA A C DCA A", " C CAA DAAB A A AAC AABA B A B BA A B C DAA BAD DC", " CBA AA AA ABA CA A D CDA ACAD"};
    int k = 52;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    vector<string> x = {"516 516 519 518 515 518 515 516 512 516 516 512 51", "4 512 514 514 514 512 512 512 513 519 512 512 514 ", "518 515 512 512 519 512 514 512 513 518 512 513 51", "6 512 516 513 518 512 518 514 512 512 516 519 516 ", "518 514 517 516 516 518 516 514 516 517 514 512 51", "6 515 514 514 512 519 517 514 519 512 516 512 516 ", "512 514 516 517 519 512 516 516 516 516 514 515 51", "2 512 515 518 512 518 512 516 519 519 515 512 512 ", "517 515 515 519 516 515 516 516 513 517 516 514 51", "4 516 518 518 518 516 512 514 517 512 512 519 515 ", "519 512 512 512 512 516 514 516 512 517 517 513 51", "6 514 514 515 512 512 518 512 512 517 514 518 512 ", "516 516 516 519 512 512 519 515 514 512 514 516 51", "4 518 512 514 518 513 512 516 512 517 514 514 512 ", "518 512 514 514 512 515 518 518 516 512 512 515 51", "4 519 516 516 512 515 516 513 514 512 516 519 516 ", "512 512 518 514 515 517 512 512 519 516 518 513 51", "6 517 512 515 516 516 516 513 513 512 518 512 517 ", "512 512 518 518 516 518 516 519 518 518 512 517 51", "2 512 518 512 514 517 512 512 514 512 514 512 519 ", "512 517 516 512 512 518 516 516 519 516 514 515 51", "6 516 514 517 512 515 512 515 518 512 516 519 513 ", "513 514 517 512 516 513 516 512 512 518 515 512 51", "9 516 517 512 518 516 518 512 519 514 514 512 516 ", "517 518 512 516 516 518 518 516 518 517 512 512 51", "4 512 518 512 514 516 518 512 516 513 518 516 517 ", "519 512 517 516 517 514 512 519 519 518 514 518 51", "6 516 512 512 515 514 514 516 519 512 512 513 516 ", "513 517 512 516 514 514 512 516 518 518 516 512 51", "6 516 518 514 517 514 512 516 518 516 518 516 512 ", "519 512 512 518 518 512 512 515 518 516 517 512 51", "2 515 512 516 516 514 515 516 512 516 515 512 512 ", "512 516 518 514 512 518 512 517 512 519 512 512 51", "8 516 512 514 519 518 518 512 517 512 512 516 515 ", "513 518 512 513 516 514 518 514 512 512 518 512 51", "5 512 519 513 514 516 516 512 512 518 516 512 513 ", "517 514 516 517 514 516 512 512 516"};
    vector<string> y = {"512 513 512 519 513 515 519 516 516 519 516 516 51", "2 512 516 517 515 512 516 515 519 516 512 512 513 ", "512 512 518 518 512 514 512 514 512 516 512 512 51", "2 519 514 512 512 519 512 512 516 516 517 516 513 ", "518 513 516 516 512 516 512 514 516 516 516 517 51", "2 512 514 512 512 517 512 514 512 512 516 514 517 ", "512 516 514 512 518 518 516 519 512 512 516 514 51", "2 518 518 514 512 512 514 514 512 516 512 518 512 ", "512 512 516 514 519 519 514 516 517 512 514 514 51", "6 514 518 518 514 516 516 512 512 518 515 512 516 ", "518 519 514 512 512 512 518 512 512 518 512 519 51", "4 512 512 516 514 519 512 515 512 513 519 517 518 ", "515 516 514 517 512 515 512 517 517 516 514 518 51", "6 519 514 512 512 512 512 513 518 516 514 514 518 ", "514 516 512 516 516 518 516 516 518 512 512 514 51", "2 512 519 517 512 518 517 518 515 517 516 512 514 ", "517 514 512 516 516 512 518 512 514 512 516 512 51", "4 516 512 516 512 512 512 515 514 517 516 519 514 ", "512 518 513 512 512 516 515 515 516 512 518 512 51", "2 515 514 515 512 518 513 512 512 519 512 512 512 ", "517 517 516 512 512 519 516 514 516 516 517 512 51", "4 519 517 519 514 512 512 516 519 514 516 516 513 ", "516 513 516 519 517 518 518 514 517 512 512 519 51", "5 516 518 512 518 514 516 518 516 518 512 518 513 ", "517 514 512 512 519 513 516 513 514 514 515 512 51", "2 516 516 519 512 512 514 515 512 512 512 514 517 ", "512 514 512 517 514 517 514 514 518 516 517 518 51", "3 512 514 512 516 514 514 514 516 516 512 516 515 ", "512 512 513 512 518 513 512 518 515 512 518 514 51", "9 514 513 516 512 516 514 512 516 517 518 518 517 ", "512 515 512 512 512 512 512 517 514 519 519 517 51", "7 513 514 512 512 518 517 514 512 518 512 514 515 ", "512 518 516 516 519 519 512 512 512 516 516 516 51", "9 518 512 519 515 518 512 514 518 512 512 519 518 ", "512 513 512 516 512 519 512 519 518 512 516 514 51", "7 516 512 512 512 514 515 519 512 512 512 512 519 ", "518 515 516 518 516 517 517 513 519"};
    vector<string> lengths = {"513 513 516 519 517 518 518 516 518 516 519 514 51", "2 519 518 516 519 518 515 516 516 516 512 512 512 ", "512 513 512 512 515 512 512 517 513 514 512 518 51", "4 517 512 513 515 512 517 512 512 518 514 512 516 ", "512 513 514 512 512 516 516 518 515 518 512 514 51", "2 512 514 516 512 512 512 517 516 516 516 516 512 ", "514 518 516 518 517 516 518 512 512 516 512 517 51", "4 518 518 512 517 519 514 519 518 516 518 514 519 ", "514 518 517 514 516 516 517 516 515 518 516 512 51", "5 516 516 516 516 516 512 519 518 518 512 516 519 ", "518 512 512 512 514 515 518 516 517 513 512 516 51", "2 518 512 519 516 512 514 518 517 513 516 512 512 ", "516 515 512 515 519 514 512 516 518 518 514 513 51", "6 512 513 512 518 515 512 516 514 512 519 512 515 ", "513 517 517 518 519 512 519 514 513 515 519 518 51", "4 513 512 512 518 517 518 516 514 512 514 512 519 ", "517 516 512 512 512 514 512 518 514 518 515 518 51", "2 518 516 514 512 517 516 512 516 518 512 512 515 ", "519 518 514 512 512 518 512 512 512 518 514 519 51", "6 518 512 516 518 518 516 518 517 512 512 514 518 ", "518 517 514 516 516 518 512 513 518 516 516 514 51", "4 512 516 516 515 512 518 518 512 512 514 518 514 ", "516 513 516 516 516 516 519 515 514 518 517 519 51", "2 513 512 515 512 514 512 514 514 518 512 512 512 ", "516 512 512 515 518 513 514 512 515 518 516 518 51", "3 512 516 512 518 516 512 513 512 517 516 514 516 ", "512 518 512 518 513 516 517 514 517 514 512 513 51", "4 512 513 519 516 516 512 515 519 516 512 516 516 ", "516 518 519 512 512 512 519 512 512 518 516 512 51", "4 513 512 517 518 519 517 512 516 512 512 513 518 ", "514 514 513 516 512 518 516 516 513 515 518 516 51", "8 516 514 518 514 517 518 512 517 516 512 514 514 ", "515 516 514 515 512 516 512 516 513 513 514 516 51", "5 519 517 512 516 519 518 512 514 514 517 516 512 ", "512 514 512 518 514 515 512 512 514 514 514 512 51", "3 516 513 512 516 516 518 517 512 519 514 518 517 ", "512 512 519 518 515 514 519 512 518"};
    vector<string> names = {"BAAC AD AAD AC BAA BAC C D CA CAAC AABD B CDAA A A", "DA C D A C ACC AA A AAAA CB C AAA B ABAA A C A AC ", "A AAA CCB A A A C C A C DCCA D C B AB C A BA B DBD", " A A DAA AACA A A AAD A DAAA AC BC AAC A C B B AAA", "A AA A A B AAA AAB CCDC B D C AACA C A B B A AAA B", "CA C D A D C ADD DCA AAAA A A C AA D C D ACCB D AA", "D AD ACC B CAA A CC AAAB A BAC C AAA ACC C A A AAB", " ACA AA A BABA B A CDAB A ACA A ACA C B C BB A A A", " BCAA ACC ABA AAA ACAC AAA DDD C A A A B A CCCC A ", "A C B ADA BAA BAB CA A C B BC CDAA C A AAA AAA B A", "AA B A A ACC A C C D ABB B AAB AA D B A C B B DC A", "D DA AAC A CAB AC ABA C A CAC C CDC DA C A C D A C", " AADC B ACAC BAB ABB ADA AC A AD CC ACA CADA A C C", " BAC C AAA D ACA D A BAD AAB A B D AABC A C A B AB", " CCA DAD AAD D C AAD A A AAD C ACA AAA B A DACA A ", "BAC ACAC A BCB C DC CCCA A C B A C D C D AAAA CCCA", " A A AAD A C A B AC CAAB A A A AC D ADA D D ADD C ", "AAA ADA C A CADD B C AA A A B ACCD B A C AC BACA A", "AD ACA A CAC A A B D B A CAC CBB CCAA C ABC CBA AC", " BAA AAAA A A DABD ACA D A B D AAA A A D AADA A B ", "ADAA ABC A A AD AA DAAA C A AA B D DCAD BDCC A D A", "A ACAC BDAA A C AAD A AACC BA C C BAA AAC A DBD AC", "A AAD A A CAA AC ACA ABA A C BAA C CAB C DBC AA AD", " D A AA AACC A CDC AAAA A AABA D A AAA C AA ADA A ", "A DAA ABBD CBAD AAA DA BA D A AAAA D AAA A A B CAA", " B B A A D ACCA A A AA DAB AAD AAA A A C C AAA A C", " D AACD AC BCAC A CD B A A D AAAA AB ADB BCA"};
    int k = 51;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    vector<string> x = {"36 66 85 81 67 34 3 64 9 43 28 25 13 16 25 58 47 6", "7 18 26 51 90 95 30 79 43 26 1 78 27 97 67 54 37 8", "3 10 5 79 43 33 31 81 3 93 69 6 74 33 6 21 81 4 7 ", "82 27 88 83 55 35 58 34 82 80 95 10 19 46 16 67 1 ", "64 23 74 64 88 27 10 46 98 1 4 64 97 73 1 34 43 61", " 31 95 37 3 76 52 70 67 73 64 13 1 54 92 72 96 64 ", "30 1 37 97 1 37 48 1 37 94 94 40 61 34 19 67 21 29", " 7 21 19 44 24 39 97 91 1 9 12 36 18 91 47 88 11 6", "9 76 45 67 28 55 35 78 67 34 82 94 40 73 50 37 25 ", "75 53 31 52 5 1 65 38 54 9 1 29 10 66 1 3 64 19 88", " 4 4 59 54 3 79 59 81 38 14 47 76 37 14 38 64 25 7", "3 64 19 55 57 1 45 74 43 31 54 74 87 96 1 39 34 1 ", "85 79 45 45 69 49 17 4 64 16 10 91 31 70 91 66 33 ", "6 62 37 87 64 98 97 20 36 1 88 45 16 1 73 59 5 91 ", "37 89 73 53 70 97 62 61 21 52 73 95 28 30 54 10 71", " 95 85 79 89 20 94 73 10 7 90 30 96 52 68 88 34 73", " 97 94 54 73 96 25 19 1 28 51 84 44 52 77 71 85 94", " 33 98 45 37 40 1 41 64 5 26 73 87 90 26 97 36 62 ", "5 49 75 80 97 13 99 67 29 22 55 96 52 76 26 10 46 ", "45 14 24 56 82 82 75 87 28 26 88 99 13 37 90 82 21", " 56 31 34 49 11 2 82 4 71 75 64 1 18 14 31 82 67 6", "0 62 1 45 12 50 27 84 22 24 82 61 82 67 20 23 31 8", "7 55 12 42 23 67 70 12 33 55 78 63 8 10 80 36 8 76", " 35 90 76 7 60 55 31 82 19 27 10 85 37 7 31 94 13 ", "39 31 23 11 94 40 10 88 19 74 94 82 68 82 10 57 49", " 20 82 69 46 77 26 1 19 64 76 28 81 88 93 35 58 64", " 15 78 22 42 17 55 52 55 72 24 69 78 55 28 94 1 67", " 19 43 6 55 82 11 1 67 74 97 29 56 85 83 26 34 50 ", "88 64 63 10 45 70 64 23 7 13 19 4 21 53 25 40 91 7", "9 1 40 23 19 5 43 81 12 22 48 86 66 58 1 41 34 10 ", "44 70 69 40 12 36 54 79 79 79 61 55 62 40 82 87 84", " 4 44 64 21 34 38 99 88 49 58 91 75 4 85 19 23 73 ", "55 46 56 67 23 44 29 64 19 28 39 37 59 55 30 64 1 ", "43 58 24 10 39 16 74 93 67 82 77 82 4 24 7 26 12 6", "4 10 71 71 80 28 14 28 82 82 44 67 45 70 95 91 79 ", "78 89 34 49 16 10 39 19 67 56 1 19 99 55 1 31 79 1", "0 23 1 67 83 43 21 57 48 43 82 19 14 88 37 99 23 4", "6 61 44 66 86 73 85 13 19 67 46 91 32 80 64 10 37 ", "65 75 29 35 40 45 20 21 44 28 12 85 19 10 70 62 78", " 69 31 50 34 13 64 72 24 9 52 53 1 11 66 7 94 4 21", " 27 10 97 27 12 81 1 10 71 25 37 55 37 29 23 19 1 ", "66 10 55 10 30 55 46 86 1 74 49 1 19 88 67 62 67 5", "3 10 79 1 85 1 12 90 25 25 6 69 42 31 48 3 16 27 6", "1 11 92 81 92 94 41 8 52 74 46 29 13 13 51 56 34 3", "1 1 97 90 5 98 1 31 92 78 87 79 29 62 28 81 79 29 ", "39 73 71 44 71 45 89 82 10 53 52 14 69 44 95 20 27", " 78 78 12 55 78 45 45 55 1 64 1 85 40 82 58 1 76 5", "6 47 31 22 52 17 12 94 41 54 16 19 98 22 10"};
    vector<string> y = {"73 19 32 58 21 2 53 70 36 85 16 82 36 34 27 75 63 ", "37 24 10 16 55 50 35 67 25 20 80 34 99 20 6 23 89 ", "91 46 84 61 90 21 46 56 17 78 43 99 1 67 28 84 16 ", "72 49 64 19 67 67 40 37 43 56 90 44 37 77 83 44 53", " 18 4 25 26 37 51 97 74 25 70 5 61 55 49 55 13 82 ", "8 1 82 55 42 82 52 88 75 53 10 52 43 91 51 65 87 3", "8 1 19 1 48 34 35 1 64 67 76 85 91 34 34 30 43 78 ", "28 1 79 94 50 83 49 98 51 65 1 90 62 19 11 6 79 58", " 23 8 79 58 76 54 91 21 28 34 91 94 67 28 7 49 19 ", "1 28 31 68 15 10 65 1 11 28 93 73 29 85 51 74 25 5", " 91 63 1 19 46 4 90 64 76 66 49 41 34 97 94 77 9 1", " 43 60 70 49 16 67 49 97 4 6 89 91 55 22 79 67 46 ", "45 86 76 37 64 91 49 88 35 99 21 72 34 99 82 37 46", " 83 77 31 83 98 91 34 7 64 94 82 10 4 37 25 23 96 ", "25 67 96 74 95 79 12 72 66 77 16 68 90 34 43 19 58", " 47 40 29 97 54 52 52 54 6 90 91 68 58 15 77 55 52", " 49 29 7 90 91 71 7 37 57 71 97 67 20 40 90 40 1 1", " 21 99 82 19 1 64 19 37 73 19 88 28 49 60 60 86 19", " 79 48 25 57 78 40 40 55 78 88 54 2 1 24 58 57 28 ", "79 4 26 31 1 14 61 1 89 97 88 8 1 85 17 26 76 52 1", "8 37 9 45 48 97 17 57 84 45 61 8 73 34 88 85 70 91", " 75 2 46 46 20 20 46 40 85 55 1 8 55 80 46 92 67 1", "4 71 56 73 25 40 25 71 37 58 97 95 97 40 27 76 50 ", "9 44 56 63 34 67 40 82 63 61 73 15 36 22 18 22 23 ", "58 73 2 92 67 50 1 28 39 65 46 93 55 46 80 7 17 38", " 14 58 23 29 73 25 25 58 98 68 55 37 73 29 94 36 6", "0 37 61 35 41 4 31 34 34 34 87 90 31 91 66 6 50 4 ", "60 79 56 19 44 52 19 8 5 67 79 91 92 25 18 82 31 3", "2 9 13 74 67 10 78 10 10 1 76 7 1 12 37 48 37 61 1", "9 84 37 1 90 54 27 47 16 46 23 44 81 57 88 5 10 53", " 22 63 17 73 77 92 29 97 61 37 33 67 41 64 12 81 5", "1 39 75 54 35 28 69 7 6 28 55 9 1 98 10 28 28 46 2", "8 53 22 73 94 77 78 64 23 49 79 31 1 13 65 24 64 3", "7 50 28 37 59 13 40 12 59 34 73 67 1 68 35 53 35 6", "6 64 19 35 69 4 12 34 30 60 88 55 1 10 34 82 49 7 ", "34 67 78 88 23 68 44 34 25 76 1 66 79 85 55 49 56 ", "28 71 94 90 90 83 1 80 55 82 7 62 30 6 73 17 75 13", " 39 97 1 40 8 72 66 39 61 37 37 45 56 83 91 12 11 ", "79 1 8 28 58 83 7 12 40 1 66 25 23 55 22 38 88 83 ", "93 3 89 64 74 95 49 55 36 27 43 97 19 34 1 75 91 3", "6 67 92 23 46 66 81 78 38 70 88 42 13 90 12 63 34 ", "23 37 52 94 1 82 67 82 12 23 96 99 67 99 88 56 32 ", "2 49 82 55 73 52 25 96 46 55 64 5 73 12 5 55 64 92", " 19 87 39 31 34 85 62 86 66 91 1 65 10 31 40 49 38", " 14 58 64 23 19 16 52 91 75 28 91 1 97 89 33 73 12", " 86 53 54 61 46 6 49 37 34 22 78 16 43 28 39 7 8 7", "3 33 91 55 88 70 23 16 94 99 5 18 53 4 32 45 99 19", " 3 67 12 24 1 22 1 62 34 9 23 19 93"};
    vector<string> lengths = {"78 28 91 40 17 27 46 64 1 73 11 79 3 45 15 34 30 1", "8 70 17 93 91 28 88 90 45 7 12 11 30 56 27 57 31 9", "6 97 61 28 96 4 10 88 53 21 48 28 16 27 79 35 85 8", "1 2 4 68 87 51 16 22 46 12 5 34 94 91 61 63 58 73 ", "6 67 34 87 91 28 52 23 62 49 56 47 12 67 33 78 1 4", "6 1 99 28 46 35 70 37 42 64 45 7 64 49 29 71 75 37", " 1 29 1 61 46 32 6 43 55 50 73 46 78 61 19 95 42 3", "5 4 64 93 4 13 73 37 47 1 58 71 87 25 4 67 37 55 1", "0 10 31 10 67 72 83 54 97 24 76 86 21 47 45 48 40 ", "16 61 84 61 58 35 4 14 70 45 11 40 43 97 67 23 46 ", "24 23 96 11 13 69 92 44 17 45 54 46 22 37 38 84 34", " 10 85 74 85 82 55 4 1 67 28 12 1 67 49 67 75 77 7", "5 39 4 78 23 76 1 46 59 19 75 4 75 29 88 90 37 47 ", "51 90 55 91 8 73 25 91 50 70 88 22 6 73 48 91 65 8", "5 91 97 10 10 43 16 73 20 36 16 39 31 34 98 91 76 ", "85 33 86 37 76 51 9 22 98 46 13 2 22 55 64 34 39 7", "7 73 12 40 97 18 82 36 59 34 28 10 82 60 54 85 69 ", "97 89 19 16 37 5 69 22 13 12 91 43 85 83 28 54 23 ", "1 88 10 67 45 64 87 46 47 39 31 24 46 34 55 2 38 1", " 41 5 99 41 18 75 94 33 52 4 19 78 82 78 28 16 19 ", "39 13 55 73 1 82 68 13 68 70 67 34 89 93 70 55 10 ", "33 35 2 27 2 85 18 34 89 26 67 74 70 16 56 69 33 7", "5 26 23 51 73 78 8 85 23 61 46 28 38 91 88 13 17 7", "8 15 22 95 89 4 77 78 96 61 60 25 71 97 98 24 56 1", "6 24 91 82 29 94 85 46 29 1 48 13 95 45 58 7 19 61", " 61 91 8 94 30 1 16 59 92 46 54 12 91 43 55 14 70 ", "44 25 97 62 70 61 91 6 1 94 19 73 88 4 76 32 7 75 ", "37 79 63 7 93 79 54 1 82 73 14 40 75 19 28 56 41 2", "5 93 8 67 6 83 17 67 55 39 24 68 56 57 61 73 27 76", " 67 88 82 49 55 40 85 59 12 67 99 50 82 63 81 46 1", " 21 67 45 41 86 84 90 23 60 56 1 4 93 94 53 76 96 ", "9 41 34 76 59 19 1 34 19 89 17 12 82 67 33 1 15 64", " 29 54 58 8 98 42 1 88 79 54 61 57 19 73 38 35 46 ", "90 94 21 5 82 92 75 73 46 19 46 58 97 53 66 91 68 ", "54 22 4 75 28 36 76 73 68 89 71 12 9 66 3 90 4 97 ", "99 34 97 16 55 73 29 13 89 28 53 19 61 19 71 91 37", " 48 64 73 98 64 39 39 76 94 52 22 10 73 34 28 46 9", "3 5 28 79 97 19 4 57 88 89 10 50 1 10 70 34 16 35 ", "63 43 35 47 10 89 55 25 14 9 8 72 63 74 65 56 19 2", "2 40 31 6 8 79 92 10 78 11 21 68 13 50 32 4 67 49 ", "64 91 62 18 79 79 73 28 82 38 68 50 8 66 49 49 53 ", "28 86 75 77 19 1 82 6 49 13 52 37 62 87 10 70 67 2", "8 85 92 94 30 82 99 40 58 37 91 64 28 54 88 42 71 ", "59 65 34 85 4 64 73 28 40 82 64 7 58 53 60 64 49 1", "7 11 34 70 64 10 19 45 49 94 85 94 54 1 96 88 26 9", "1 73 14 78 25 37 49 75 22 49 67 98 97 43 1 67 88 3", "7 99 12 94 86 19 93 73 33 67 4 22 23 64 67 73 1 1 ", "47 79 3 25 76 85 20 34 77 8 18 67 68 1 84 28"};
    vector<string> names = {"DR K M I V W C W Q O U D S TM A V Y Y AE A JZ Y U ", "G OY U N L C U CH S KY C I O Y R G G KC X U C G A ", "AK CE A I A K X HA HU P Y CG M J M Y H J M M C B U", " I O B L LC PF C W EU G I IE N O U O X K FE U IK I", " ZE W UN N B S Y L I C GM U Q AE MO E VC B C GZ A ", "X B XW Q G EA E A T U B E G M MG S K U H I U U K P", "Q S F M S Q Q U E A Q A AX W N N M WK J A AQ X A G", " W XK IT H Q K C S EG F A H S M Q C A I M M QG C P", " MB E G EO OW IE EX TU U W A U W Q E G M B CP G T ", "IW W B P K H KA O O K V WK Q N SW I GA S KE I D L ", "N AK G I K I G W IY AI U Q A Q V G O K G I F I A N", " O I YD GU M AD GM I Q EO W G EY S A A A Y N I WI ", "WQ L E G VO A G C W EO SD Q A CK K GS G W L X U A ", "KB G O XQ KG K L F Y QY W UH BL Q G B O U GE IX C ", "A U A F I IW A M YH C G B E B KM Q A Q H A D M M K", "I G Y YC AQ C MG U S X H S QE P M AJ C I IY C V C ", "U K S I S F E Y BU G F Z J O SZ C I O G Y W YQ A A", " C A V V CK M Q X EA BG MC AY A NQ I A Q O A EI M ", "E SO E HQ N EU O OI U S Q WW N UC EH C JH ON T BO ", "GW K Q O C K S G W A U BY S E A Y U A U I K M SX N", " A U Q H D E K O K O G S OA X D M W X BE U A E N Q", " V C GD M U Y MO A C ZF W DR N A I Q A S U S II B ", "W M NM G BB N I V R A N A EG A A S D Z U X E S Y A", " Y H Q A W I XG V A DO C ES C IC M XM JQ Q Q E AO ", "H U K T V RX S U H N YI D W P LS M M A L C S E T Y", " J WY H Q OE T G G QA V N SY BJ HC AK W D A TT O A", "G UG L A E X H K C G MI A A J A QS M JC A YO A R E", " B C S A F M A JS IN D K K O I E O Y A A C Y KY O ", "K M IP Q I A W R M T E MH A M F N E Z Z W GZ M K G", " GE M Q C S Y E AB RS R WP W Y E M O Q O K AK AP K", " M I W WI F K V SH AC IP M UY MV A K NS X X Q V S ", "A A M F Q E G UW W Q U QF O L CY A A A F S S A OP ", "PU A A I K C E E L RI A H YQ C VA I Q C N O D AC Y", " X MB S A K V D M O K G G M O G X E Q I S MA M UU ", "V CS E AN W Z A Q G V N W Y S UA QN E N Y E A K K ", "R U Y Y S E Q UA MC C T Z S A GE RU NS Y G S M O R", "W WE Y C IA NQ C F CW S A G X AI Q Y Y Q"};
    int k = 12;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    vector<string> x = {"46 86 82 12 46 76 37 4 46 82 41 47 34 9 82 23 60 8", "0 46 26 88 68 59 56 28 79 67 42 25 86 97 56 1 91 3", "3 15 64 32 91 20 3 53 15 20 67 64 46 51 85 7 5 36 ", "34 61 40 70 16 4 21 1 78 13 48 27 63 23 11 91 19 7", "7 67 82 84 1 52 55 68 32 82 57 46 65 84 7 12 67 10", " 1 35 69 3 19 60 15 67 10 67 79 16 1 82 89 41 35 9", "9 67 56 28 86 63 13 68 19 80 41 11 31 39 96 72 64 ", "82 22 23 70 34 55 16 72 73 91 20 77 64 19 11 12 94", " 21 40 64 52 1 27 82 35 10 91 64 4 56 89 21 46 56 ", "33 22 21 3 53 5 91 37 89 26 64 25 64 28 38 44 46 6", "4 5 21 19 91 76 40 25 64 28 50 43 60 34 13 66 72 4", "0 49 52 34 23 24 10 70 64 88 67 62 56 74 79 67 12 ", "91 43 42 9 52 36 13 52 43 55 46 86 71 33 69 91 92 ", "23 88 67 34 45 42 29 12 10 34 73 46 94 82 51 64 33", " 62 28 91 77 82 68 37 5 94 15 52 67 86 49 44 78 76", " 45 1 65 27 54 23 13 55 1 47 73 12 26 8 2 31 28 51", " 67 90 36 42 39 61 68 19 1 79 72 27 28 1 55 64 93 ", "84 55 42 67 16 2 1 76 49 76 96 78 21 97 82 39 67 2", "8 64 28 77 45 64 91 50 39 28 1 34 7 47 54 19 73 19", " 10 49 3 53 61 56 74 65 58 1 52 41 44 46 64 17 42 ", "56 27 72 1 46 38 49 45 1 98 67 10 31 67 41 43 49 9", "5 29 34 1 17 92 77 84 86 78 44 34 78 12 18 28 89 7", "3 19 31 12 23 91 28 3 63 24 86 66 68 19 73 34 31 1", " 10 86 7 17 23 39 55 88 23 10 67 43 20 2 81 1 15 9", "1 49 95 12 1 22 45 4 19 85 61 90 10 77 86 64 81 32", " 64 64 49 16 40 46 67 1 81 58 46 98 14 23 43 52 54", " 13 88 64 85 87 67 53 35 25 64 79 28 79 19 78 46 7", "6 91 76 52 67 68 5 54 91 82 94 35 77 1 7 95 10 46 ", "70 34 67 51 1 85 93 91 31 68 69 76 51 46 67 71 37 ", "45 1 4 71 64 68 1 36 98 51 30 1 23 34 91 10 25 59 ", "25 70 52 91 52 67 34 3 65 67 74 37 67 70 24 92 73 ", "13 3 64 4 67 31 67 64 19 82 70 91 6 89 1 4 10 19 7", "3 37 1 27 26 67 90 34 42 62 1 16 43 82 47 1 54 35 ", "1 41 78 60 32 25 60 60 51 82 14 98 61 83 47 19 87 ", "31 26 58 70 78 44 32 20 40 4 7 25 25 82 1 4 55 41 ", "7 97 34 49 38 92 7 82 64 52 73 82 45 30 23 21 85 4", "0 12 43 82 82 76 10 4 97 59 69 54 94 40 45 79 36 7", "1 38 96 1 82 58 37 89 41 34 49 91 64 38 7 63 13 10", " 44 25 45 43 67 38 19 28 55 22 9 94 70 87 87 64 76", " 55 84 45 55 79 9 37 11 71 88 1 49 62 89 87 11 55 ", "26 60 93 29 1 10 45 66 21 46 16 19 6 15 12 91 55 2", "8 67 17 15 28 15 25 52 28 9 48 34 28 78 61 91 1 12", " 75 46 91 90 1 2 67 4 64 73 76 97 16 84 77 10 98 6", "9 55 78 71 19 91 10 11 92 56 91 1 98 73 28 91 96 4", "5 10 91 1 31 16 73 58 41 99 43 73 4 18 5 1 53 97 3", "7 34 48 1 28 37 1 47 63 91 28 32 15 50 89 58 70 79", " 36 37 60 16"};
    vector<string> y = {"58 34 20 21 87 34 53 41 73 73 29 45 34 82 19 22 24", " 88 14 91 34 11 86 13 19 36 34 73 81 88 44 64 79 6", "5 10 55 75 89 76 39 25 15 43 64 56 97 21 12 4 99 3", "8 58 21 63 41 97 84 63 73 40 99 36 73 85 63 46 15 ", "89 67 27 59 52 16 31 10 82 24 8 26 5 52 52 1 67 65", " 43 40 5 91 78 90 28 35 90 64 12 43 24 37 21 4 71 ", "1 7 10 91 10 1 88 15 55 24 21 79 35 89 1 13 70 73 ", "24 70 23 35 43 46 40 1 78 94 34 22 25 24 31 83 25 ", "3 46 34 43 7 48 39 54 72 51 22 55 31 90 24 43 47 4", "8 7 99 29 58 84 24 33 43 93 76 48 92 1 40 13 13 13", " 59 75 76 36 70 22 13 77 99 13 46 52 1 34 7 67 79 ", "69 19 6 48 23 45 64 88 34 55 34 78 39 46 28 19 46 ", "88 86 68 45 4 14 95 44 23 19 76 76 55 19 8 55 79 8", "1 66 92 91 55 28 68 37 94 92 29 35 6 1 91 78 81 64", " 97 97 67 67 67 28 82 91 66 85 38 70 73 83 22 91 6", "7 64 58 4 46 12 73 67 36 79 6 85 84 55 85 77 18 73", " 44 44 13 52 34 37 55 81 15 67 25 38 33 53 99 97 7", "9 79 49 13 4 14 98 61 33 61 4 60 4 88 51 97 60 52 ", "55 34 19 26 74 89 14 85 34 88 29 61 58 61 43 1 90 ", "83 14 92 7 37 93 46 1 23 58 23 33 73 43 34 37 11 2", "2 70 34 37 35 1 40 10 10 20 15 12 56 65 61 89 34 8", "9 12 73 26 15 28 55 85 90 40 82 82 3 42 78 64 92 2", "2 53 39 37 37 26 46 29 1 86 54 71 85 61 58 69 77 8", "2 76 41 26 97 28 1 35 1 4 6 52 78 89 91 21 78 81 5", "6 41 49 16 23 88 97 60 91 84 46 1 5 18 19 4 23 39 ", "74 59 67 45 53 92 49 81 60 52 1 99 44 87 37 98 82 ", "60 67 31 64 70 98 90 91 46 45 33 44 46 53 6 93 34 ", "91 8 30 33 97 64 3 55 46 60 56 56 31 88 80 96 64 1", "0 91 23 56 35 59 55 67 67 41 34 22 64 49 28 34 3 4", "6 22 70 63 7 28 90 39 67 58 34 82 1 89 45 47 45 37", " 86 26 20 93 37 58 80 91 64 52 31 1 62 67 66 80 58", " 48 91 4 41 10 46 32 6 6 64 49 93 89 33 76 98 88 3", "3 1 16 4 39 22 73 71 97 46 67 64 59 91 28 49 4 61 ", "73 16 16 19 89 38 53 37 30 55 18 19 13 63 91 38 19", " 44 38 97 61 1 29 82 88 67 78 41 52 31 67 48 51 85", " 27 31 31 67 12 2 58 91 97 39 61 37 4 32 61 73 76 ", "98 1 43 92 11 40 38 22 85 20 23 62 88 1 14 47 37 6", "4 19 86 52 19 93 88 62 28 37 31 92 12 20 7 31 19 1", "2 73 15 52 94 56 79 85 50 58 91 33 79 35 46 10 67 ", "28 51 29 12 86 84 93 1 16 79 53 19 3 64 54 5 20 61", " 37 76 37 9 40 45 28 62 59 19 80 82 10 48 64 40 76", " 7 7 33 49 21 28 71 34 28 31 28 3 55 59 34 8 28 23", " 62 37 49 65 34 24 13 4 98 64 86 94 78 79 18 83 68", " 28 82 54 12 74 39 25 82 93 61 85 54 95 34 28 13 5", "4 45 95 53 45 91 1 33 12 40 45 90 13 77 83 23 25 9", "1 54 27 6 25 79 86 91 37 43 91 1 73 68 1 58 86 76 ", "76 38 88 88 3 82 34 41 58"};
    vector<string> lengths = {"13 38 83 65 73 73 1 76 51 69 73 50 81 28 73 56 82 ", "13 57 19 16 1 86 23 1 36 35 20 70 47 74 1 26 70 34", " 79 91 25 37 37 99 30 16 12 39 53 20 6 55 52 34 1 ", "16 49 4 61 78 12 88 62 35 85 31 89 94 27 55 23 70 ", "51 7 93 46 50 80 10 49 15 25 85 37 46 54 57 11 31 ", "45 82 25 21 61 91 77 1 37 18 79 37 67 81 1 13 10 5", "7 67 1 10 91 13 57 37 19 79 10 49 59 91 67 13 79 2", " 10 72 4 4 61 10 82 13 23 25 13 3 1 49 25 7 91 1 5", "4 50 10 1 36 41 28 94 55 11 61 93 16 31 37 3 56 64", " 32 56 68 10 60 34 49 71 1 4 33 9 28 1 78 20 83 21", " 79 80 89 33 85 73 74 78 91 29 33 1 22 79 1 86 67 ", "84 6 7 55 94 89 64 4 49 34 76 19 73 11 66 26 21 46", " 91 76 48 55 28 61 94 15 85 64 16 35 64 56 91 34 7", "6 74 88 82 97 57 30 10 23 73 37 70 12 36 82 1 80 8", "5 73 55 32 56 16 1 61 79 63 72 64 91 71 57 13 34 6", "1 31 90 3 20 15 45 55 88 80 92 15 96 89 19 43 1 94", " 22 5 66 89 61 51 91 72 9 23 67 46 55 18 97 74 68 ", "17 38 16 1 99 13 93 97 82 53 90 23 69 94 34 45 13 ", "25 77 34 50 13 56 68 59 6 67 28 64 71 82 67 49 76 ", "3 52 86 85 28 85 97 79 95 27 56 91 61 76 36 29 37 ", "1 29 93 37 73 78 82 41 76 8 82 97 37 37 82 17 87 4", " 43 89 61 12 1 95 58 31 91 4 14 46 23 64 27 6 37 7", "3 67 64 57 15 92 23 24 37 88 50 41 77 88 68 59 43 ", "56 58 10 13 44 19 1 80 13 95 80 19 88 46 7 91 67 8", "2 61 18 9 40 7 88 76 60 10 55 67 94 1 86 1 10 79 5", "8 46 91 46 67 73 67 89 78 86 22 75 45 77 19 57 20 ", "40 34 60 89 23 88 85 67 7 34 55 91 10 4 92 6 2 16 ", "55 70 93 40 53 32 31 67 26 29 28 68 12 76 66 9 59 ", "6 53 90 88 29 82 31 81 1 1 10 91 18 28 63 25 31 28", " 94 4 11 57 91 8 19 19 87 39 14 66 23 19 97 98 22 ", "12 72 11 49 64 67 44 23 32 97 91 85 6 17 58 67 28 ", "90 1 67 1 34 43 4 73 93 15 45 28 69 19 90 40 90 82", " 70 8 52 79 5 31 96 87 64 87 55 95 40 14 67 43 19 ", "97 90 54 26 63 58 15 17 88 93 40 97 15 51 10 89 33", " 97 31 32 67 4 31 21 24 78 29 88 58 56 23 1 28 69 ", "60 46 64 25 12 79 46 46 18 92 72 67 18 67 73 34 39", " 16 59 93 11 70 66 58 63 7 99 17 32 5 91 81 11 52 ", "6 41 19 64 10 28 47 45 35 89 37 7 65 2 10 50 50 87", " 55 30 28 37 64 17 67 54 95 70 34 70 34 99 70 50 2", "4 35 19 37 20 91 18 58 86 28 23 16 73 79 34 75 39 ", "56 7 67 61 34 73 97 88 34 40 36 52 1 1 58 79 17 97", " 1 49 82 34 91 43 55 14 79 28 84 49 10 73 19 73 35", " 91 40 37 71 55 77 89 97 46 22 66 25 27 98 40 22 5", "2 39 37 34 91 51 83 34 39 94 56 82 6 40 48 1 52 78", " 95 67 10 23 60 68 23 64 29 32 2 59 89 48 22 82 55", " 55 40 82 57 10 73 58 1 73 86 59 19 54 52 83 19 94", " 7 23 5 95 24 46"};
    vector<string> names = {"Z E H S S W I U A K C O IN A PI C P A C SY E Q T K", " Q AO A DU P QA U C G P KS G Q G P N RO H PC AU K ", "Q Y F WK G Q C A W Q P QK S T S S Y Y A Q V A M WG", " M BX I P ZA ZY U F L A KI KE I SH IA Z U B U C M ", "N O Y YA Y QC A SQ G C GR I K A S U EI G OM A I BO", " HG U RD Y D C LA WV Q AY S K U W MY A Y G N K QQ ", "L I NS D O Z GS I Q AK M J K WE A BW W CN M C A A ", "W OG G CW F O XX E HK H C I U IC C IE Q N QE S T G", " U RT B M GC YH X J M A Q UY O X A Q MA C G ES L Q", " U Q G Y Q G M A N Z S Y W O E AN EH A S OM X K QE", " O I X KW R M D N X E AA Z N OO UY U E FW F A M C ", "WQ C M AP Q I TI S H R EQ M S O A O U Q W O J D B ", "TO ZO Q O S Y X F C Q Z C I CW E X P V Q C O W A C", "A W E WU UL Y L A K S GC E O F S R L C SG G S LJ L", " U G W UI CK E FC M M U I U J RD M G Y ML C K YG W", " R O H O Y X A H I S YQ M G K C E Q E CC CW F R K ", "C HM AE I QE G S R RY Q A K E Q S C Y FM F W A GP ", "QA H N P A W U W U M G F G B G X H K Q J Y O W A Y", " A A Y W U YE OT Y ZL WL G AW S GO S EA S A A G MY", " WY E AU QZ A S US Z P D A QR IJ A GC I P Q Q O K ", "A I C E L S R H I AU U AQ KE H HQ O A Y D IU H AQ ", "YT A NS L I FG Y UQ N Z K A A M O A XY M A Q K E Y", " MK A SO V A VG IZ F AQ NW S N P Q PE K KZ Y A M E", "A PD AG KU Q RE OS U US T E O U P U Y Q R II F B A", " A DA T D Q TP A T A LO UI E K E AO S W E Z M N R ", "M IU Y W H L C S C E K WV Q PQ AK K O U RJ C A O O", " EK KC UQ KQ O B GN G V AS G U MG I W Q IT CA A QI", " K K AY NO E E I OK Y S KI R I O R W AN C YY QQ O ", "AC CY XM WK RL X U AU A AE F W R E C W O MD AW F L", " YG DI W Q E N M A NA Q OP K UO SW MG Y S C M W E ", "D EB L SY KY A T G I M M V O P U L D Y DA QP A G P", " U Y E S M R G Y Y E L G O G I Q O WU N HB K S O S", " G AC FI ME I N AJ R CZ S E C IN YT F M W GC W NA ", "E IL G V C Y A G K N A M M JQ T O K MK I L CA E XH", " M U X K A G K NG MW N A V A I O A M PA EK UC VN Y", " K A Q BA Q K LA A S M OE B Z M DC B Y K UX K Q I ", "A F Y CY"};
    int k = 11;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"E", "C", "O", "AW", "I", "N", "QA", "IZ", "C", "GC", "C"};
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    vector<string> x = {"90 1 23 30 67 70 55 82 50 71 31 46 46 37 34 49 28 ", "16 45 19 49 66 73 71 94 41 42 91 11 9 51 51 42 1 6", "6 80 37 11 40 20 34 28 35 53 88 36 7 22 3 22 82 96", " 41 53 10 73 73 66 70 89 85 22 10 55 21 11 28 12 8", "8 85 34 19 79 84 67 76 24 29 96 3 73 46 54 59 39 3", "4 34 18 87 26 44 46 1 28 46 98 31 15 37 27 10 61 2", "0 55 49 74 2 48 1 38 34 34 36 16 14 22 55 56 39 99", " 23 19 28 18 55 82 38 71 22 49 1 1 76 3 52 40 1 87", " 61 35 49 1 1 91 39 76 62 95 74 38 19 31 73 55 76 ", "57 88 77 10 78 91 23 78 53 11 64 67 6 17 31 28 1 9", "2 34 33 69 60 69 3 10 19 76 78 77 7 70 19 53 97 15", " 91 17 1 43 37 82 45 55 18 11 27 49 43 57 57 74 49", " 1 28 75 2 42 10 1 11 61 78 59 44 16 92 1 86 31 13", " 43 68 10 38 58 77 84 33 27 63 1 4 55 91 46 32 75 ", "91 82 89 56 21 44 23 91 61 89 66 55 52 24 73 82 95", " 7 67 12 55 56 84 1 60 1 19 85 22 1 46 10 15 51 37", " 51 94 46 9 12 1 25 70 46 12 9 42 11 48 15 66 45 4", " 46 55 76 94 7 28 99 70 10 20 7 66 27 94 75 20 4 3", "7 94 1 22 94 97 91 37 46 24 92 28 5 99 55 46 70 87", " 45 94 19 19 46 21 89 88 1 66 59 22 98 60 94 37 78", " 71 22 30 73 68 12 9 31 55 61 9 41 75 66 82 2 39 7", "7 67 38 58 42 91 64 1 10 11 28 60 98 88 12 28 6 97", " 58 1 46 42 90 31 31 70 65 25 98 89 10 16 75 44 5 ", "26 56 48 70 11 64 13 75 64 34 73 49 8 59 63 96 49 ", "91 60 1 79 1 23 90 87 44 15 12 65 20 83 88 24 85 6", "9 19 16 61 46 56 97 22 19 45 67 1 46 43 37 89 1 51", " 40 35 46 54 30 7 28 72 43 52 34 74 34 67 76 89 10", " 1 74 1 8 40 95 22 82 66 17 16 11 73 86 5 75 44 37", " 72 52 60 52 46 88 99 10 94 79 58 10 49 77 94 80 4", "0 21 40 70 56 7 37 74 34 35 1 91 17 4 73 1 55 13 4", "0 34 46 1 63 23 82 4 65 46 1 1 76 1 59 59 67 30 60", " 85 45 55 91 55 47 34 77 31 76 16 11 4 59 23 82 94", " 91 23 12 30 19 55 5 40 12 61 79 94 82 37 5 19 19 ", "61 78 67 93 46 67 39 12 10 37 26 47 73 8 38 34 31 ", "69 82 73 38 13 67 10 4 7 18 46 21 50 58 82 7 32 70", " 40 78 24 75 55 67 72 81 81 80 37 47 14 87 25 19 8", "2 64 46 1 94 19 13 53 59 68 8 21 4 77 8 73 45 98 8", "6 28 19 71 43 13 25 79 66 78 54 38 84 48 6 80 67 2", "0 34 96 94 40 38 34 29 71 82 67 64 38 7 22 56 27 6", "2 89 91 30 87 80 6 55 45 40 49 72 82 43 54 53 60 8", "9 94 40 68 40 3 40 55 87 32 28 34 67 89 84 69 78 2", "2 37 53 65 82 86 97 1 19 99 34 69 82 67 36 86 14 9", "3 51 35 69 48 7 40 33 60 51 46 98 2 19 37 88 85 31", " 73 10 1 64 76 31 55 66 52 44 55 52 55 23 32 43 32", " 64 89 80 95 45 36 10 37 82 86 89 94 1 23 9 35 54 ", "73 34 62 13 1 40 66 42 51 82 13 17 23 10 37 14 19 ", "19 49 67 7 2 33 31 31 94 52 94 68 76 6 19 80 36 89", " 33 26 45 6 31 82 97 17 22 8 34 75 99 73 31 95 25"};
    vector<string> y = {"46 99 84 49 28 63 67 76 38 91 43 28 88 45 89 37 14", " 69 10 78 24 56 44 37 43 40 46 19 88 8 40 5 36 34 ", "28 22 33 64 30 5 19 7 88 58 75 52 30 88 91 66 23 6", "8 50 34 34 50 29 12 73 66 13 62 67 55 55 98 94 76 ", "46 70 67 55 95 64 1 84 45 16 37 84 37 19 69 64 78 ", "76 64 23 5 19 79 10 76 91 67 45 21 67 4 94 19 88 8", "2 89 55 90 1 1 72 60 93 19 17 9 23 34 78 62 1 3 12", " 94 79 12 1 64 21 69 28 26 82 16 34 61 7 45 37 91 ", "76 16 39 97 47 4 73 78 78 63 1 91 97 52 46 83 61 6", "7 17 4 34 62 83 70 7 78 82 45 43 12 85 90 75 7 28 ", "83 47 69 89 78 33 40 58 58 78 19 45 64 27 82 1 19 ", "85 54 64 73 94 34 16 1 16 6 4 64 37 67 66 86 89 22", " 58 22 1 37 67 34 28 10 73 46 26 14 83 48 27 73 27", " 20 49 96 4 68 99 66 10 61 23 19 19 18 79 37 19 27", " 76 49 16 10 24 69 35 62 58 58 74 22 80 69 89 27 2", "1 50 27 43 31 21 87 21 61 8 55 5 78 81 68 40 97 64", " 36 25 43 67 20 65 19 7 72 84 64 64 6 91 32 46 70 ", "49 61 46 55 1 73 34 54 56 86 52 73 48 15 67 89 22 ", "48 79 56 67 50 30 20 33 58 62 56 59 45 79 73 28 90", " 89 86 89 4 19 64 64 10 8 89 22 97 97 61 10 56 55 ", "55 47 89 82 50 97 4 51 14 7 56 57 32 13 37 58 49 2", "3 82 49 83 93 63 45 45 98 44 52 10 53 63 63 66 82 ", "49 93 12 13 73 96 1 64 10 24 25 30 34 71 98 20 55 ", "10 23 44 63 64 11 57 34 20 4 4 31 43 7 60 56 68 24", " 79 1 45 22 64 21 80 85 73 67 13 22 1 42 75 73 22 ", "82 94 66 40 45 90 25 64 10 85 45 98 45 17 98 47 88", " 91 20 67 10 89 76 1 52 78 21 2 97 28 28 43 88 91 ", "91 26 53 61 59 53 91 25 27 73 1 87 3 89 27 43 67 6", "4 64 84 39 91 83 52 94 70 87 78 75 97 22 90 32 67 ", "51 12 68 40 82 86 18 80 1 17 70 36 18 29 19 86 45 ", "21 97 82 56 45 1 13 52 54 82 19 41 84 46 13 79 46 ", "10 62 64 48 81 64 76 17 37 1 76 37 56 83 82 18 97 ", "89 19 56 63 6 52 37 12 87 74 46 63 91 82 80 33 57 ", "22 82 67 94 73 78 82 67 34 35 65 67 1 98 94 30 91 ", "31 61 96 37 66 61 75 77 21 28 63 73 44 92 67 95 64", " 70 87 55 79 51 62 73 25 90 46 97 84 67 1 29 37 37", " 41 57 27 73 26 23 69 84 75 70 58 4 68 79 27 67 70", " 33 56 61 55 91 24 4 73 19 7 39 82 90 67 97 61 19 ", "25 57 40 16 43 82 59 29 40 48 71 1 64 85 76 46 64 ", "66 64 93 57 26 38 88 65 37 52 10 22 10 11 93 11 91", " 85 91 34 92 62 13 10 13 33 96 2 91 34 9 78 81 55 ", "13 21 82 82 22 1 82 56 34 91 78 10 94 49 11 80 12 ", "60 11 13 13 17 25 55 46 47 55 8 97 91 22 13 58 32 ", "73 55 7 97 98 82 1 67 52 51 55 56 11 92 34 20 99 8", "3 91 33 67 64 91 1 55 49 13 58 6 32 73 45 69 99 22", " 28 76 17 24 29 37 28 44 83 46 67 13 20 68 52 39 3", "6 96 66 97 8 49 94 41 57 21 32 19 40 46 96 88 16 2", "5 51 49 91 52 1 8 73 2 25 43 25 29 79 23 61 52 23 ", "78 40 10 85 18 56 91 67 81"};
    vector<string> lengths = {"46 55 4 96 73 14 88 32 49 21 97 19 44 78 11 28 29 ", "95 88 59 49 1 12 65 34 45 80 82 34 7 1 51 27 1 46 ", "92 86 2 1 97 46 56 58 1 97 99 74 93 27 28 92 26 64", " 24 3 89 40 23 40 59 28 64 84 59 7 93 55 35 25 4 7", " 40 1 91 22 87 4 39 49 91 5 58 59 96 65 21 49 1 14", " 88 83 38 91 48 52 30 65 84 1 75 6 5 66 98 47 37 4", "7 19 74 46 73 84 50 91 55 39 78 65 75 79 9 37 35 1", " 35 53 94 19 68 92 68 91 96 10 10 19 64 73 93 40 3", "4 37 48 61 99 74 38 92 12 28 93 42 91 82 34 49 40 ", "37 94 27 59 48 55 30 90 28 93 69 1 1 9 32 77 19 1 ", "40 32 1 4 70 73 34 28 38 24 82 78 19 34 19 94 31 9", "1 59 74 14 62 25 68 86 70 65 56 1 43 81 91 25 61 5", "0 4 45 82 96 35 34 65 44 22 37 61 64 28 34 43 14 9", "9 86 34 1 63 60 1 49 42 19 88 91 53 41 98 35 1 92 ", "12 43 15 44 68 93 91 9 10 87 63 16 90 6 12 99 1 37", " 54 43 37 13 56 73 34 28 68 19 91 98 1 17 67 1 75 ", "1 75 56 22 40 56 55 78 52 68 86 78 40 70 72 28 79 ", "76 58 97 61 85 82 10 74 46 25 25 88 78 1 12 57 32 ", "78 61 61 31 45 30 61 2 94 98 23 92 61 64 28 31 46 ", "65 40 59 21 74 62 97 46 78 53 98 73 50 70 56 68 34", " 20 73 86 45 37 94 45 57 76 14 37 13 8 49 82 8 19 ", "22 1 62 46 67 10 19 59 23 52 28 28 64 85 50 91 46 ", "20 43 33 26 82 70 94 62 40 22 76 68 18 67 12 70 52", " 78 21 99 25 13 43 85 49 16 28 86 48 31 62 46 58 1", "9 63 61 1 55 88 97 24 61 27 48 37 19 73 67 52 25 1", "4 37 55 77 48 46 15 94 37 16 33 1 46 1 96 19 68 46", " 23 37 43 37 56 90 37 29 6 97 99 65 83 91 96 73 67", " 40 79 14 98 4 78 19 61 97 59 36 26 27 63 18 28 55", " 94 7 67 20 10 31 1 56 77 73 76 2 2 33 99 73 40 67", " 76 80 35 87 67 42 13 17 84 67 38 11 85 22 72 96 7", "0 28 49 75 65 67 25 74 25 90 67 49 97 41 9 1 23 59", " 98 62 76 88 65 50 78 22 37 61 7 40 10 94 66 20 26", " 25 96 49 55 78 43 43 67 51 19 56 62 84 68 14 76 3", "6 37 55 78 28 40 27 25 52 34 4 17 19 45 82 64 91 2", " 28 44 30 78 64 13 55 22 34 13 52 4 17 71 12 16 50", " 38 78 73 64 47 19 1 4 18 84 58 82 82 88 13 1 95 6", "3 78 73 67 10 25 1 37 1 21 67 61 22 28 10 45 88 1 ", "94 55 85 98 53 23 91 42 12 49 47 30 30 46 19 46 64", " 73 94 19 64 67 39 29 89 91 69 52 29 74 24 13 10 2", "7 34 7 10 37 2 31 75 28 13 1 78 1 27 41 91 35 40 8", "8 1 95 47 61 61 19 82 80 13 1 10 70 34 95 45 88 22", " 67 44 61 22 82 28 16 40 6 36 35 5 27 22 1 41 43 9", "5 58 61 33 31 41 1 6 67 10 44 26 88 50 48 22 32 14", " 12 70 34 32 13 72 85 78 88 61 87 89 78 53 40 34 5", " 37 92 25 1 1 94 19 34 9 81 90 36 10 31 50 81 89 5", "2 37 79 41 73 6 4 48 47 81 13 83 35 83 23 61 34 64", " 75 92 96 96 5 18 86 61 7 56 21 46 59 59 31 1 49 1", "3 86 16 61 14 13 33 59 78 31 74 20 67 10 29 76 88 ", "34 38 67"};
    vector<string> names = {"O C UY U A Z W S O WV T C QQ K OG AG C GU DF I E K", "O AE K J H ES AA K H I C G Y DC I T U QN AC U SD X", "C C D M WK K US M Q A D E Q E A IO M K SA W A D SO", " GU IR AG T JY I Q F B V YM K O O Y C E OS A M W M", " IC YQ W N O O Q XK Q V W YG O G FM A CS YW I T K ", "Y N NU LN S K O S A Q K W Y F KA A E O W E AA A CD", " PA G Z R A IS I R AA Y C PY K M E R X EE J D D E ", "R MA W A K A GB T J GY AF X C X A Y MA KM Q M K M ", "O W Q B W C A C S AV Q C OC S L XA V C G K R NR MR", " Y Y A F IP K MA A AJ Y M S Q O Q Q KQ GS NC G T H", " UE J EI E D YJ I Y U C M G A CQ QB K K Q UV W S M", " IJ K C D A S U I U YQ E C Q SG KG W JU U GY W VG ", "V U S E H GG KD W HA AM O G E O A W J NI Y A J W G", "K A G S NL EA K KA Y Q Z M UU M T G E A JA M Y N M", " A O K R Q I I S T Z OA O GU Y A A S M EQ U N B P ", "Y WR N A TL S M KE KA P G W W E I C A K WS KW U YE", " I RQ A EW H MA Q A Q W E P H G FO A W I A C C K G", " F A Y ON BO A S Q Y YQ WU TA MO A B Y MA E J UG K", " S J TG EZ W H W C I I K I Y G A G Y U K Z C Z A A", "K W WU UY C B EM D G GL V K U A WL Y N O G I O M G", " J F S E RA K I L C X Z AJ U O Y I M IT GU O SF C ", "Y N E IW A U C Q Y MR LQ EI V K P B AW KU G S A N ", "QM K H U AG K S AC OM CS A Q W U A A BX GQ Y O Q Q", " K OL T Z U D A Y Q AU A A A D P W VA C Y J QC Z X", " UN S N K Q Q AS N A U G O GO YM O D I W R BN E O ", "Y O Q AG G Q IE A OI DY X SG O M G S M U ZG K GO U", " W ZB Y E U AU S Q B ED W N N YZ W L G D K Y I C S", " X KA V F C C E O KC D O R S O K T R G AJ EI SU I ", "H CU MU AX C X W I AI AU W Z Y M A G U KA M C M E ", "S C J A I HQ FW AK Q DM A EI Y AI Y ID T O MS QO M", " QW Q I C P E ER F O Y MW E X C K S N H N Y AN GH ", "N M Y W V M P EE S A T K SQ A XU D Q M Y S L O ZP ", "E A Q S K I EM MA N QM A Q U OU AT D O C J QC BN Y", "Q B O ZT AW I U K OO I M A H WV IS C U A Q C Q NT ", "QY H Q C V MB KW E M X MY C S W J B FS UK Y T Q M ", "D C C R Y UX AO T LX K I I X O C SA B YD Q A G V O", " AY Q UM M AK W JW B C Q EK S A F E D Y E IA R QX ", "CF LK AK G H G O C U Q OI UQ A"};
    int k = 13;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    vector<string> x = {"99 33 91 19 15 46 45 91 74 55 52 85 65 71 71 77 43", " 46 83 89 52 14 46 34 9 58 97 33 1 82 55 91 45 1 1", "9 19 31 43 55 28 98 16 13 41 2 87 20 73 30 37 61 6", " 64 87 43 15 40 16 91 36 52 11 97 81 4 67 45 51 58", " 67 19 83 12 19 10 78 42 96 94 34 82 61 79 36 34 9", "0 81 27 42 1 90 71 91 91 75 55 10 77 37 55 55 77 8", "6 74 73 70 76 46 10 39 1 1 18 37 42 22 84 33 49 16", " 30 84 1 99 10 1 41 57 25 43 70 39 37 85 40 42 91 ", "57 1 46 65 82 1 73 10 25 82 10 52 66 85 79 78 71 1", "0 1 64 80 67 89 55 62 31 18 20 37 96 24 88 1 29 79", " 52 55 46 15 76 48 39 33 97 84 86 61 85 13 46 9 88", " 70 49 92 26 49 55 89 30 16 97 34 29 70 64 81 73 8", " 12 75 52 2 88 83 98 75 27 29 12 61 19 1 1 52 7 21", " 34 70 51 14 1 84 17 38 53 92 7 13 19 37 31 85 52 ", "70 46 76 52 91 14 17 82 13 37 46 25 25 47 43 26 17", " 98 19 30 1 97 49 10 61 96 47 79 70 38 22 95 91 84", " 48 91 95 43 49 56 1 84 88 55 48 88 74 33 43 18 70", " 30 34 77 27 72 18 57 93 44 46 86 55 64 52 52 78 1", "2 91 28 31 40 46 10 1 76 91 37 85 95 8 39 45 55 64", " 40 34 94 19 99 34 56 7 64 67 16 79 81 12 7 95 11 ", "67 84 76 21 49 8 28 10 46 97 93 61 76 86 70 63 65 ", "15 82 15 55 76 67 25 1 53 89 28 28 82 55 79 37 19 ", "57 34 64 46 88 73 69 91 92 78 63 25 88 46 75 82 91", " 82 85 97 39 22 19 1 52 28 93 44 18 43 50 40 46 91", " 56 64 34 73 88 55 34 37 22 91 66 12 91 5 89 87 91", " 28 10 31 76 46 69 31 73 1 13 46 96 46 35 40 12 55", " 90 88 79 22 85 12 55 7 83 28 47 57 86 77 41 7 1 6", "5 99 10 14 7 58 1 67 34 19 22 32 76 83 94 60 82 56", " 8 64 60 69 55 89 97 4 16 23 70 11 37 52 76 22 56 ", "73 31 40 82 23 39 1 76 49 97 34 25 97 76 34 83 67 ", "35 58 99 75 61 62 95 18 16 53 55 13 57 78 55 89 75", " 28 58 9 31 59 21 45 40 40 28 82 90 37 77 37 73 22", " 93 88 9 28 1 37 53 63 1 47 67 66 58 66 37 31 68 7", "3 10 28 54 89 99 20 47 23 78 1 13 12 36 46 52 94 3", "4 92 34 92 37 26 46 21 27 20 28 78 1 19 60 1 61 2 ", "99 34 46 28 98 19 6 52 34 73 78 41 40 34 70 52 41 ", "39 85 19 67 97 35 95 88 74 76 18 25 67 55 87 56 88", " 16 82 8 49 1 39 7 10 37 55 73 14 8 73 98 88 13 1 ", "95 56 23 45 28 91 90 70 68 96 51 57 54 4 41 34 73 ", "97 69 10 77 46 40 3 55 48 27 28 22 93 78 64 85 73 ", "69 94 85 64 82 9 79 70 14 64 26 16 78 37 80 6 99 3", "6 12 46 5 40 19 14 76 76 65 22 54 45 67 28 9 47 76", " 16 97 2 32 29 49 10 22 27 64 20 91 37 91 74 15 94", " 43 58 52 37 38 73 89 96 73 88 29 83 37 95 73 88 9", "1 31 93 37 12 99 52 5 67 64 59 79 34 30 43 19 32 9", "1 19 72 40 64 14 77 47 40 25 80 38 15 61 6 47 82 1", "2 67 58 10 94 34 31 89 12 18 31 76 58 49 64 43 28 ", "7 2 67 49 46"};
    vector<string> y = {"64 72 34 28 10 64 50 42 39 5 61 67 87 27 17 79 91 ", "13 36 44 18 19 78 10 52 58 22 78 97 70 10 73 31 32", " 34 53 86 94 76 25 4 34 34 41 22 1 90 34 16 21 1 7", "6 28 23 77 76 82 25 80 85 89 12 1 16 71 25 89 55 2", "2 1 72 91 94 23 47 88 14 61 64 56 48 27 1 19 49 55", " 95 93 67 59 56 32 10 7 45 55 44 53 63 73 54 13 90", " 61 22 60 10 34 84 56 21 19 84 84 24 6 45 64 89 1 ", "96 90 50 6 74 97 58 73 65 4 88 25 52 36 1 55 97 92", " 75 56 92 41 45 99 94 75 74 59 33 91 65 63 62 51 1", "4 19 20 64 82 31 45 6 22 27 50 31 56 28 34 40 6 9 ", "7 16 97 79 83 78 4 58 67 79 36 25 55 64 36 1 10 88", " 91 67 88 10 1 49 33 85 7 13 62 16 65 59 34 61 48 ", "52 62 76 91 1 4 64 19 96 76 45 1 50 89 33 64 70 31", " 52 91 76 79 35 5 91 39 94 64 55 15 73 61 1 59 61 ", "86 97 1 67 25 89 43 19 1 55 89 82 94 91 28 3 10 74", " 23 48 22 4 58 96 21 64 55 44 4 12 55 79 46 84 14 ", "50 82 74 18 67 13 96 74 28 5 4 80 57 91 48 67 67 7", "3 19 94 1 57 37 51 20 96 34 38 82 45 94 88 49 19 7", "6 65 22 73 72 80 24 89 39 55 70 60 49 28 14 57 4 9", "4 1 86 64 61 48 81 67 89 92 75 51 67 64 83 73 91 9", "4 70 35 48 82 91 22 59 19 2 53 7 86 30 15 73 52 85", " 52 91 50 34 25 34 12 62 70 34 58 36 52 1 58 28 19", " 47 12 97 37 16 69 92 63 16 37 56 16 88 64 95 45 6", "7 88 33 85 56 1 90 25 57 78 78 70 82 59 60 1 38 90", " 47 10 23 56 28 89 86 25 70 94 75 14 38 78 30 19 3", "9 7 1 74 74 67 60 56 70 95 15 21 73 1 63 94 13 73 ", "21 91 29 97 62 33 90 28 55 18 38 54 1 61 77 12 19 ", "81 58 2 42 65 29 70 60 90 85 31 25 37 79 37 28 28 ", "47 34 53 35 7 98 75 1 49 15 24 55 77 43 46 24 32 3", "5 64 11 27 73 18 6 35 76 56 14 1 25 61 24 43 82 16", " 32 73 22 65 13 32 89 35 73 86 16 37 56 88 10 26 7", "9 89 70 88 8 7 50 82 60 25 34 68 41 91 50 95 15 19", " 2 61 26 83 12 35 10 41 38 80 57 19 11 48 20 40 17", " 2 47 84 9 63 88 52 78 34 45 1 34 35 95 56 32 55 2", "3 54 18 58 1 1 94 91 55 41 15 1 84 37 50 37 72 46 ", "5 55 55 46 31 34 7 10 75 28 78 7 42 7 85 55 66 92 ", "12 1 4 95 98 21 81 23 2 39 16 78 46 10 97 1 41 21 ", "61 92 79 46 60 18 28 36 55 15 67 58 13 36 25 12 1 ", "67 80 58 56 91 7 67 1 52 77 90 58 78 63 17 15 3 84", " 49 56 85 65 25 43 41 91 67 86 46 91 61 91 1 46 70", " 73 43 2 23 12 69 48 10 46 91 67 80 19 46 22 98 87", " 23 97 67 49 46 97 58 55 60 73 75 63 16 5 68 16 94", " 55 93 69 31 12 64 34 14 8 9 22 55 52 15 67 35 34 ", "21 39 9 64 92 13 31 37 55 46 54 4 1 56 72 33 91 98", " 57 76 3 65 56 67 63 79 68 45 16 90 16 49 96 85 28", " 91 93 8 46 64 13 41 1 23 85 33 73 13 82 46 1 43 6", "7 12 36 1 13 34 28 6 61 73 69 10 46 89 28 4"};
    vector<string> lengths = {"27 98 13 14 48 13 64 1 71 45 73 89 96 46 1 83 45 5", "8 86 78 67 53 92 42 91 1 79 46 8 1 56 23 4 61 47 7", "8 64 1 76 37 16 58 53 19 59 28 6 79 38 14 64 10 1 ", "22 36 96 73 1 46 51 71 79 46 73 4 55 77 98 52 45 7", "0 16 94 45 54 84 30 92 31 87 45 37 46 17 37 32 46 ", "81 61 1 41 1 37 40 99 92 19 65 18 88 41 49 41 52 8", " 64 12 28 59 37 37 99 81 22 61 17 48 18 90 25 28 5", "1 1 12 53 13 21 43 53 19 3 43 72 33 91 85 61 16 10", " 55 69 67 67 51 82 22 97 54 79 78 24 49 70 97 10 4", "5 1 91 77 99 87 48 19 46 4 40 10 19 68 22 1 22 73 ", "97 55 32 67 62 6 8 13 2 3 55 67 8 7 37 85 58 24 16", " 55 61 67 67 62 52 31 68 67 40 73 70 73 34 5 23 78", " 10 10 99 91 54 76 58 31 67 97 1 24 32 5 20 23 45 ", "72 56 23 1 95 72 19 80 32 30 65 8 78 48 37 55 21 2", "0 44 78 45 16 26 48 1 55 58 15 66 6 31 3 82 1 82 7", "6 47 43 19 10 55 19 97 64 41 51 78 61 25 24 10 28 ", "88 4 77 94 61 78 60 28 46 34 92 22 1 10 19 12 23 8", "0 24 70 67 82 7 58 13 45 32 84 70 60 31 4 44 93 87", " 70 20 99 45 64 78 31 28 58 4 24 1 34 82 34 61 21 ", "98 7 48 28 1 91 28 74 32 71 4 19 3 91 28 84 64 11 ", "25 52 62 28 94 11 34 46 40 73 46 88 25 37 78 67 99", " 37 49 64 33 58 22 67 49 45 94 17 10 19 14 17 35 5", "3 82 28 76 94 41 17 96 23 24 46 52 99 34 98 37 67 ", "67 59 44 1 75 13 37 68 35 78 89 10 10 98 80 22 74 ", "93 46 81 46 31 2 24 88 60 97 64 64 28 9 45 78 1 73", " 96 68 68 64 16 81 67 36 49 46 10 6 35 25 70 82 29", " 34 1 1 91 12 46 67 19 52 12 79 40 28 35 50 92 7 1", "0 58 80 2 34 88 59 1 78 4 58 56 61 1 78 7 34 1 18 ", "88 45 64 29 24 49 69 65 57 52 55 1 42 83 31 21 36 ", "43 88 68 81 1 22 37 67 78 68 49 8 79 83 47 7 34 73", " 53 41 79 52 99 55 58 51 43 82 2 82 97 46 50 76 64", " 41 5 96 46 46 93 45 58 40 43 49 1 76 81 29 94 37 ", "74 72 91 37 6 35 97 81 59 83 82 47 15 87 11 82 8 8", "8 85 59 54 29 59 30 10 73 13 77 1 37 33 29 47 57 6", "3 7 60 28 40 12 61 60 53 46 4 67 35 24 99 84 76 2 ", "67 64 7 88 15 40 57 78 20 74 34 25 97 10 58 33 34 ", "19 1 89 46 14 78 58 7 16 70 92 10 37 68 3 73 49 16", " 22 97 91 11 70 70 1 76 77 49 37 1 5 12 40 6 17 66", " 94 25 43 88 89 4 10 98 83 33 82 41 94 4 91 89 67 ", "45 45 43 28 54 88 85 32 80 10 73 19 61 1 45 4 12 8", "8 43 42 82 54 56 80 14 1 67 32 83 68 64 51 1 32 43", " 17 29 70 42 89 58 64 97 94 28 79 41 90 72 96 37 7", "4 88 2 52 77 54 28 71 91 86 58 49 19 86 1 91 34 46", " 10 28 28 97 14 81 78 67 65 53 21 69 47 1 12 55 84", " 16 41 37 60 32 35 94 70 31 12 19 91 67 25 1 85 51", " 7 49 23 1 97 9 91 88 1 73 72 45 14 10 19 24 33 82", " 19 64 82 67 33 99 7 19 34 5 12 89"};
    vector<string> names = {"S E A QQ W C OC NP NO LS E A YD W P G C G A VW M O", "S W MD A V PJ EN S N GJ S K YC P Q D M Y M G A FM ", "P S R QS N N P X N T W S E C K C G K A I O W O YU ", "CQ K UO ZA II KF I G M N E CI G O R N O N V UC P Y", " K SM EE O UC WC A FW A O WK EK C SU IU K K O S C ", "A LW R QW G I A K I Z XU GA MI S F K M HB Q R SW Y", " G G W S U A O UI C K Y K I CC S E U W A L S C AU ", "ZN I JB X M E KV GM Z KY Q A H NA N U BA GW Z N M ", "G MQ OJ K M I QE ZG BV A F IK K HA G YU XN E S G W", " I W I D A G Y N N L BY KP Q Y O S UQ K I A C C UR", " S Q H K V QN CE E H Z I K XJ S K IM C K R U U AS ", "C CK SN U J Q G J EA SA Q A EE G W D R W T A IQ GI", " OC A AM Q G E Y QY I V C C AU A A NK G D Q DA TC ", "SQ O S K X Y A N Y L YA Z OC W S L A N K KK W D R ", "Q Z J K I F G DE M N UA P AF J S I N J K N D A O S", " U M U U Q F YQ Y K S GZ D L A EP U K L I C V X G ", "F VN A U G A S M W W KG WA Y FQ K A UC N O C K V S", " I M L G E Q MU K A N B C V I X D S G H K N A E X ", "Y U WK Q L H M M DE HM G R A V O S A A SC OY F S N", " G F O WB G M B Q L MA K E J M F S IQ AG U LN M A ", "KP XU N AR VI E QU V KZ G E A Q V QA IE QI NW K N ", "O C QV G S O M AK I E S AE C SG W U Y E C G S W U ", "F I N J I W S S A Y NC Z GZ WZ B W A L KO S G F JI", " O MN E YO Q E D M QU G G C R IC A W I LA I V MA J", " X K P K RS E E YN Y U GD DM W X M AI Q A KE L UA ", "V U J G QJ M UA I S C J YI EB AS W E Q V A A D U N", " GE Y CI I M WD W O G B WA E AM X NU Y M A Q N E M", "C AQ G U D A Y O O LM G A W L M M W Y A Y IU SA S ", "U JA M Q YJ M S S TB GA GQ AD S O S OU Q Y O L WI ", "X PZ E G E O V KP O EE UA E A H W Q F Y I U K M E ", "P PX G D I A NC Y Z XA X IK Q U Q M WQ AS GS WC EE", " V Y GS O X AE W M FC S GV ID G A G GG K A PC Q LE", " F O C A W GY E Y M MN J H AO N A JC O K K T C M H", " HU G R O U U K F M O Y N C O A KA G Q P Y A YC Q ", "W G Y P R SA D G Y S A W B W B AO ST B UD I U IA M", "I DM I PU Q NS NC K GS Q IH K AM T FR AY L E I CS ", "QE D S E A A Q W E B Y UA AO X"};
    int k = 15;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    vector<string> x = {"78 85 24 3 89 53 18 94 96 31 73 44 31 75 87 1 23 7", "9 67 1 7 84 59 89 55 14 9 50 76 34 6 53 82 19 68 7", "8 13 59 46 37 32 47 37 1 56 57 33 61 4 59 33 18 64", " 82 43 7 67 37 55 46 76 61 16 49 15 1 2 22 70 8 1 ", "73 83 12 55 52 95 61 9 49 17 64 49 2 82 19 95 23 8", "6 39 52 67 58 99 49 30 10 54 15 83 34 52 12 15 42 ", "93 63 89 37 46 38 63 7 34 16 48 91 67 2 41 55 43 4", "5 31 73 75 37 89 80 67 22 24 46 82 55 25 24 10 10 ", "92 87 1 12 31 46 66 3 39 17 58 55 19 97 58 23 35 2", "4 54 95 1 61 97 52 5 34 86 64 46 34 62 95 10 8 43 ", "40 28 77 78 1 14 86 77 43 28 78 45 40 64 9 57 14 7", "9 9 55 67 58 79 92 37 67 89 13 79 55 70 7 29 13 28", " 28 63 76 4 94 19 99 1 90 53 1 25 47 46 16 45 17 4", "5 88 24 4 40 40 64 58 64 67 78 20 31 67 31 97 91 2", "1 35 43 3 95 45 28 90 1 96 1 60 89 98 96 40 70 12 ", "53 39 73 28 67 16 1 11 67 25 54 55 34 11 33 45 78 ", "7 28 34 52 51 37 76 94 67 79 64 25 99 18 46 85 79 ", "54 20 47 97 68 91 4 19 23 85 55 32 67 34 19 64 37 ", "92 91 12 73 91 8 10 95 16 89 16 1 43 20 86 64 52 6", "7 17 70 92 67 28 45 48 51 19 1 11 28 77 54 58 16 6", "6 69 97 56 1 19 37 28 22 16 16 89 1 56 80 93 88 25", " 83 18 70 1 82 36 1 84 63 12 46 19 6 33 67 37 89 8", "2 94 10 82 97 73 19 93 81 58 8 42 4 21 1 4 49 94 7", "6 55 52 29 63 34 11 1 34 43 88 55 3 37 45 62 16 46", " 34 61 16 19 99 62 22 25 26 67 8 1 62 51 82 5 67 5", "8 79 1 61 31 1 64 88 44 7 66 55 30 98 40 53 67 83 ", "76 74 5 58 73 85 30 82 90 91 9 91 91 34 10 66 23 7", " 95 17 28 34 9 45 43 84 51 50 49 91 34 73 14 45 78", " 28 70 55 25 10 88 46 22 78 28 12 3 89 69 97 37 50", " 79 95 10 10 53 25 31 89 52 8 54 95 34 60 82 11 46", " 97 64 42 13 7 37 82 66 57 44 47 34 50 29 36 4 97 ", "1 52 1 67 91 7 64 94 73 50 31 33 28 76 4 67 77 63 ", "52 61 52 58 97 42 5 97 85 9 55 47 19 19 64 64 26 6", "6 1 46 20 9 94 1 47 93 91 5 73 47 6 23 19 15 10 96", " 11 23 34 62 37 13 1 56 76 89 12 94 19 30 21 43 13", " 91 97 35 80 79 1 67 35 33 43 36 2 7 64 1 97 10 47", " 27 52 25 86 88 21 76 29 46 85 2 54 43 83 67 10 50", " 62 85 67 82 37 2 34 74 28 28 10 20 25 48 52 92 82", " 74 36 42 67 44 56 26 40 17 91 1 38 67 19 63 16 67", " 9 1 80 44 45 36 28 38 36 85 10 74 55 78 93 76 82 ", "70 66 22 1 21 39 15 67 58 37 85 45 88 31 73 19 34 ", "12 18 13 40 97 26 9 12 16 76 68 52 55 35 39 59 83 ", "37 86 25 36 89 59 1 59 88 38 66 37 99 14 48 65 22 ", "97 4 97 52 35 73 6 60 12 14 1 3 73 25 4 2 58 25 6 ", "55 82 40 49 56 12 82 30 28 23 39 70 13 69 31 50 55", " 12 96 4 55 88 67 94 70 51 58 82 63 96 34 45 17 73", " 28 25 73 55 50 51 60 77 5 63 94 10 99 15 97"};
    vector<string> y = {"68 27 52 38 61 88 58 68 72 55 4 46 13 1 23 67 1 56", " 86 54 24 41 10 88 21 1 1 37 67 28 33 73 19 28 69 ", "10 23 7 66 1 83 97 44 55 70 18 51 1 55 91 86 65 55", " 44 88 63 8 43 48 73 91 34 58 73 79 85 67 34 10 94", " 37 37 76 28 63 34 20 33 4 10 58 14 89 67 14 23 4 ", "28 57 9 25 28 49 87 76 61 99 12 9 85 18 69 12 38 9", "8 7 91 80 20 14 37 64 19 54 39 47 1 60 85 34 97 22", " 37 1 52 41 23 19 35 22 50 57 28 79 10 44 53 1 91 ", "46 61 48 18 62 16 5 73 36 16 73 10 78 50 37 65 47 ", "91 31 14 1 12 73 61 31 1 94 9 75 68 37 16 15 73 11", " 1 17 99 85 22 12 19 60 51 1 83 34 57 14 42 26 18 ", "2 75 42 30 56 71 28 49 75 7 52 67 89 77 97 4 11 90", " 37 52 72 64 4 91 51 73 98 23 4 31 97 64 42 19 30 ", "77 91 22 88 72 23 88 34 23 44 54 72 37 30 67 17 59", " 76 59 37 73 20 19 67 11 75 30 80 1 57 85 37 64 84", " 7 26 73 54 63 85 83 92 51 10 58 91 15 40 56 3 85 ", "55 25 12 41 76 76 58 57 89 67 78 73 67 26 38 99 8 ", "31 78 59 8 1 76 64 28 2 19 55 25 85 65 7 37 11 50 ", "1 96 67 39 44 49 88 28 47 28 76 28 34 11 2 52 11 2", "3 55 91 35 46 43 52 20 63 74 83 14 64 11 88 91 64 ", "81 30 49 1 16 1 91 13 34 37 34 65 95 28 49 13 67 4", " 80 58 1 58 97 1 4 44 74 28 45 4 82 45 53 82 14 93", " 40 61 82 37 64 1 8 1 57 46 96 1 48 37 35 5 3 78 7", " 94 85 82 7 91 37 21 47 73 19 97 24 71 41 10 7 64 ", "7 85 1 23 6 18 84 94 60 90 49 81 73 90 30 19 75 31", " 97 30 64 27 10 88 49 2 28 61 40 31 46 22 81 83 67", " 56 61 79 19 21 43 28 69 88 61 98 95 55 59 79 19 2", "8 11 10 54 91 62 92 46 31 45 70 72 67 37 19 61 10 ", "18 70 79 11 19 37 16 92 93 11 64 4 28 79 75 67 26 ", "46 34 46 92 96 82 20 28 46 39 95 85 23 84 91 13 38", " 70 52 46 32 32 13 6 75 7 79 22 15 19 82 85 98 1 1", "7 82 58 40 63 73 34 83 21 78 88 88 86 14 19 26 19 ", "55 97 52 6 66 27 34 56 1 73 81 80 54 63 95 22 49 3", "6 57 75 21 37 63 1 73 56 24 34 68 64 24 41 37 78 3", "1 90 7 21 37 30 43 10 39 15 17 73 67 76 88 1 77 88", " 81 67 43 52 85 40 31 90 53 73 49 19 85 43 89 13 7", "3 82 76 46 31 40 73 82 20 54 2 37 17 19 59 79 59 4", "1 26 25 2 85 57 82 82 73 43 65 22 61 58 83 37 50 2", "6 57 19 4 46 46 67 96 7 19 35 32 45 82 85 85 27 12", " 4 43 28 53 64 1 35 36 35 24 10 85 28 55 37 70 35 ", "1 93 16 67 35 1 1 97 31 76 80 82 68 49 37 16 50 12", " 57 70 46 81 28 19 52 40 43 35 94 63 66 55 73 89 8", "8 69 48 63 7 34 60 61 1 89 71 1 79 3 36 55 88 8 87", " 70 12 13 13 91 44 91 97 7 23 17 55 98 1 13 58 12 ", "89 78 93 22 73 1 73 70 16 42 67 64 25 71 75 64 25 ", "34 36 13 49 6 1 46 67 72 56 84 51 10 55 88 1 80 89", " 61 6 31 19 91 51 85 82 64 40 55 44 78 25 7 34 82 ", "99"};
    vector<string> lengths = {"67 43 46 28 73 28 22 95 28 43 46 64 25 52 49 55 7 ", "27 96 37 37 37 34 25 50 77 16 78 12 67 66 97 1 72 ", "47 16 16 75 28 61 26 82 46 64 31 58 31 39 67 46 79", " 46 16 30 23 46 91 94 1 37 11 95 41 28 67 43 28 31", " 64 14 28 79 67 13 65 58 26 92 34 94 91 1 37 3 47 ", "1 54 39 37 61 64 46 91 55 65 91 46 80 39 4 78 73 6", "8 45 37 58 82 79 70 91 43 1 67 37 63 47 24 72 60 1", "0 28 72 55 53 13 6 54 49 89 6 1 91 82 34 59 51 87 ", "94 35 34 55 77 61 46 32 46 58 1 61 19 64 2 8 10 67", " 84 82 64 1 45 19 61 23 21 45 82 34 99 49 19 58 71", " 3 71 73 99 78 34 97 40 82 1 97 95 7 4 10 87 12 6 ", "59 67 16 64 13 70 73 46 55 70 32 25 24 88 44 1 94 ", "39 76 1 23 61 18 41 32 64 71 90 45 50 78 65 41 38 ", "4 12 66 97 92 85 49 61 53 67 66 86 52 46 73 42 55 ", "1 34 67 92 77 47 80 9 4 38 36 96 10 13 97 67 69 55", " 91 10 33 19 34 63 46 19 76 45 29 31 27 3 20 28 61", " 30 17 46 28 6 82 76 63 10 66 55 73 38 19 81 68 10", " 73 61 53 46 1 94 65 41 10 22 1 38 94 21 63 43 45 ", "13 98 75 85 73 46 48 8 64 37 25 23 33 56 78 80 83 ", "3 78 11 46 1 1 27 34 70 67 94 62 16 12 46 82 96 85", " 89 88 86 87 57 22 28 88 85 22 62 51 7 91 95 14 5 ", "6 23 19 56 58 43 43 49 28 31 45 64 60 1 87 67 97 4", "6 57 34 58 78 19 29 28 64 87 6 71 63 14 55 67 79 6", "3 10 89 73 25 25 10 94 1 55 58 47 94 89 58 99 67 9", "1 19 37 97 67 88 43 1 32 55 10 91 79 39 76 34 28 2", "7 34 73 18 28 88 94 2 75 19 36 85 37 1 7 52 21 82 ", "37 81 99 91 12 31 38 4 26 56 80 70 80 72 45 53 73 ", "95 31 52 91 1 23 46 70 2 55 14 80 37 64 34 26 47 2", "2 52 72 64 20 26 82 71 12 19 1 91 58 28 43 28 7 69", " 17 70 25 10 47 91 58 25 52 11 78 60 44 46 52 97 1", "6 97 67 57 96 84 94 43 76 52 89 39 37 22 8 9 46 83", " 36 64 10 67 63 48 67 88 40 32 57 64 67 68 85 61 6", " 67 9 12 11 78 1 67 40 73 60 74 23 13 1 32 18 1 19", " 82 24 53 55 56 89 41 22 94 13 16 55 39 98 97 19 1", "9 23 2 60 70 40 45 84 22 19 80 33 23 28 44 47 60 8", "8 23 70 10 84 31 67 37 1 79 59 89 12 28 89 67 7 95", " 1 56 1 40 5 25 82 75 12 67 4 14 91 25 29 79 4 96 ", "45 61 19 11 29 35 45 5 61 41 37 31 67 1 82 67 9 34", " 31 89 93 73 34 35 85 84 17 10 95 22 84 58 40 46 3", "2 7 85 76 58 89 81 61 78 46 75 23 6 98 73 6 96 85 ", "55 16 57 91 45 58 67 77 4 27 23 91 82 67 67 43 44 ", "23 34 77 98 90 96 82 10 29 18 7 89 1 97 46 56 56 6", "1 76 64 84 80 82 37 40 86 39 28 49 37 59 96 92 19 ", "34 1 60 25 34 67 61 34 55 84 85 37 29 5 97 51 10 5", "5 75 45 25 14 74 4 56 1 61 60 1 73 52 85 50 1 60 4", "7 46 98 22 55 13 29 16 68 64 28 13 91 97 26 89 7 1", "3 66 7 89 67 7 97 37 92 79 55 19 76 36 73 80 28 91", " 46 85 1"};
    vector<string> names = {"I AU A S AV M A G AF W V E C EG O BA A AA E KG Y K", " C A O JQ M Q A JS A A QX E U Y G A S O EI I J X C", " M S W IA IS H O U N N SN A GA D W CI KK W O QP Q ", "S TS Q Q K S O A SF E A GU WQ V C C K GI Z SO A I ", "R K RU T A G S Q A U WZ K U K L E D I T X K A B YJ", " V G S A NY N O S J A IA S W N J YQ G A I C II W Y", " Y Y NU ED WW M K WR WK E A S X U SU G G I IN S YS", " C I W U D SS O AL G SM G K Y G W W G A IL I Q M U", " F A Q Z R G O U YO CA C K K A E Z A A HB I A N J ", "P MC N A SS HX A ZW FA Y U Q Q K S PW V Y SP WY I ", "T CT AH C R R N A Y I K QW C OK O YY S L AA VN N U", "S E A G ME T Z HN KI YQ Q CK NM PJ CP GZ AN TX CG ", "T O P P Q P A R U C Q I H A ZN I Q AM WZ A WE IY Y", " O E VA KB O X I A V X O M A V E TY U N S O E O F ", "H W Y N V S A Z U A TK A M J W A CG XM N Q M O U N", " Q Z S VQ C I E Y N Q W YY E HK O EE C W Q U M CA ", "OU I WP W Y GO T X S OO W S W V G O V E A WN RF Q ", "VU I XM XS C W P L AD S V O C U A LV L G XK N Z D ", "X SA HO K YZ X J QO AY A ES AM O A OG I UA C I BX ", "VS G Z A KM C Y Y DA A YN J AN V G J C G H M X I R", " MJ MO V K A XA P A AI J HF EY P QN I Y R G C A Z ", "C G L I AQ M U GN N U CQ V A YK T C F MA Z AT W Y ", "G Q V T TK A I Y U S EA U O K W HB G JO M P S I A ", "K E U HG T G N W G Q KQ I QB EM S K A C J XY M G M", " OS S A Y Y I IR A W N X K W O AN G K YZ S A K JK ", "M CN MI E S U A F AL CC O Q A C EG G GA A Y WW OK ", "J U V E L J O O A U LI GW G WI HE K R M J PW Q I S", "W H A S P SI KZ S VA Y YA GY I L S MS V P O G CH K", "A A K Z O Z V G M IC W SQ YA I T QC N P S T EU Y N", " U A S C A A B S I ZR R S C X A G K K B Q U G O N ", "D A M E MC H N O U CA L YU AM CM M C A A N E E K A", " W UO H MI IR I OB M W ZT O C Y Q W G G A AE J W E", " V P A A AT X K X S D YC S BY E O IF V AJ Y D SX K", " A G SY A Z YY A CR C YS T B K I A Y D IC I KK G G", " Z CE C A U BE U N U K R M A T W I A E K Z F AN TS", " U Y S C Q C U U E Q K W Q V N N Y UY E R O N K T ", "U U O W AR AB A SO W A G N A O"};
    int k = 16;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    vector<string> x = {"13 3 13 2 12 8 1 7 1 13 3 14 11 14 13 7 13 1 14 1 ", "1 15 7 15 1 15 9 2 1 12 14 1 13 13 10 9 1 1 15 16 ", "10 1 1 8 5 11 13 13 5 5 4 5 13 1 1 9 13 3 4 5 10 9", " 1 7 9 5 6 9 5 9 14 4 9 1 4 9 16 15 5 9 10 13 7 14", " 1 13 7 16 14 13 12 15 5 2 16 1 1 7 3 5 1 11 7 2 3", " 11 9 5 5 15 5 1 9 6 1 3 11 13 5 13 9 11 13 11 15 ", "7 1 3 12 11 13 11 11 1 5 9 1 8 7 2 16 7 1 4 3 1 4 ", "7 9 4 13 14 7 2 13 6 15 13 1 3 9 6 5 1 9 1 9 12 9 ", "13 9 6 2 1 8 9 1 11 3 5 3 5 8 9 12 9 3 10 9 13 7 1", " 5 13 16 12 1 13 9 13 15 9 13 11 7 15 12 15 15 5 1", "3 15 11 7 6 15 7 7 13 9 9 7 1 3 13 10 11 12 11 7 1", "3 8 6 1 2 5 13 11 8 16 1 7 9 15 15 14 15 7 1 5 4 4", " 9 1 7 9 13 5 5 5 13 5 13 12 9 5 7 11 15 1 1 1 13 ", "9 1 1 1 9 16 10 8 1 1 9 11 15 7 4 2 15 5 3 11 11 1", "6 1 8 6 1 1 1 6 16 9 14 5 6 7 10 5 9 13 14 6 3 8 1", "0 1 10 9 1 6 13 1 15 7 6 10 15 2 1 13 5 13 1 10 1 ", "12 12 13 13 5 14 9 8 7 1 12 10 8 15 15 1 15 15 4 1", "1 13 9 1 3 7 11 7 1 9 15 1 13 6 10 15 13 1 2 15 12", " 1 15 3 1 1 15 6 12 10 11 13 3 1 6 10 1 16 1 1 4 1", " 11 8 3 10 1 3 4 1 7 15 11 1 5 5 1 1 1 9 7 3 16 7 ", "2 13 15 1 10 5 4 10 3 9 13 1 16 1 13 9 9 13 1 9 7 ", "6 1 1 15 12 1 16 1 9 5 8 3 1 1 4 1 7 5 1 4 7 15 7 ", "1 15 10 2 3 1 12 5 13 9 4 10 12 7 15 5 11 12 9 6 9", " 5 13 9 9 5 13 1 1 2 5 1 2 1 9 1 6 9 3 5 2 6 1 12 ", "9 1 11 6 1 11 12 10 7 6 1 11 12 16 10 4 5 9 3 7 1 ", "1 6 13 9 15 7 9 11 13 5 10 9 13 1 9 7 4 1 13 14 15", " 14 11 1 3 16 13 5 13 1 1 6 13 11 7 10 5 14 11 9 5", " 9 5 9 1 15 9 3 13 9 1 9 9 3 3 4 7 1 7 8 1 13 9 9 ", "5 11 1 1 1 16 9 1 10 1 11 1 5 12 13 15 7 9 7 3 16 ", "3 4 1 1 9 2 8 1 11 1 1 11 4 15 9 1 9 3 15 10 13 8 ", "13 1 4 9 3 1 1 13 5 2 8 3 5 5 5 4 5 4 11 11 3 16 1", "4 15 9 9 9 1 9 1 3 2 6 6 6 9 4 9 13 7 11 15 8 4 4 ", "10 13 13 8 1 9 9 5 1 14 16 7 2 10 1 16 9 8 9 1 1 5", " 7 16 13 6 4 7 11 12 3 8 3 10 1 5 5 1 6 3 1 5 11 1", " 5 10 7 15 1 1 10 10 15 4 11 3 5 11 13 3 7 1 2 13 ", "9 9 3 5 1 16 1 9 14 6 9 14 6 7 8 9 15 9 16 11 7 5 ", "4 6 6 1 14 2 7 13 1 14 13 3 13 5 1 1 13 9 3 13 7 9", " 8 7 12 2 2 8 1 1 12 1 7 10 5 1 6 11 13 14 14 1 3 ", "8 1 7 9 13 7 14 6 11 7 8 5 14 2 15 10 9"};
    vector<string> y = {"5 5 11 3 5 11 1 13 13 14 3 1 13 16 13 15 13 15 1 1", "4 5 1 14 11 1 7 1 11 11 3 5 15 7 7 15 13 4 13 7 7 ", "9 9 1 1 1 15 4 13 10 5 1 16 1 3 9 11 14 7 13 1 5 9", " 8 3 1 4 14 13 4 4 3 9 13 1 5 1 9 10 4 4 5 1 12 1 ", "1 7 5 3 3 12 14 9 5 1 9 5 9 1 14 1 15 1 9 15 1 13 ", "7 5 9 7 9 1 1 8 3 9 13 15 9 15 5 9 1 13 13 12 6 14", " 10 1 1 15 12 1 1 9 2 9 5 5 10 3 12 1 9 9 15 15 9 ", "9 15 1 5 3 9 16 13 4 4 3 5 3 1 9 3 3 5 4 7 15 4 3 ", "13 4 6 1 9 1 1 1 11 2 14 9 7 16 5 10 5 10 13 11 15", " 8 15 15 5 8 1 16 10 14 15 15 13 3 7 1 6 7 2 11 11", " 7 13 3 12 15 9 5 15 6 9 13 15 3 16 6 15 7 13 7 8 ", "10 15 5 14 2 9 2 7 11 12 5 9 15 1 9 3 5 5 2 4 11 1", "6 1 9 5 1 13 6 7 14 15 9 12 1 9 5 4 5 12 7 9 5 4 5", " 4 3 4 13 16 15 3 15 11 6 7 15 9 13 1 7 11 1 9 15 ", "9 8 1 10 5 11 9 5 7 13 13 11 13 9 15 9 9 15 7 9 6 ", "16 9 11 11 1 9 10 8 1 1 11 11 7 15 13 10 5 7 11 16", " 1 9 12 14 7 11 1 8 1 1 14 1 1 16 5 15 3 1 1 9 14 ", "1 7 15 6 13 13 1 5 11 7 15 14 7 15 1 3 1 8 6 1 11 ", "13 7 9 13 9 8 8 7 13 9 12 5 1 13 3 2 5 12 5 7 8 9 ", "1 1 9 1 16 10 16 9 1 3 14 1 7 1 10 16 13 1 5 12 10", " 13 12 2 3 1 9 13 8 1 9 1 16 8 1 16 9 6 10 1 9 6 5", " 11 1 1 11 15 11 11 8 1 1 9 13 11 1 6 1 1 9 1 4 1 ", "15 5 13 9 11 3 3 16 13 1 11 11 2 5 5 1 12 16 11 9 ", "1 9 9 3 14 13 16 5 10 5 5 13 15 7 10 9 1 2 3 15 13", " 11 9 1 3 1 1 15 9 1 1 15 5 14 13 16 12 6 9 2 1 9 ", "5 9 12 9 9 15 11 5 12 5 9 14 1 13 10 9 1 3 2 2 3 6", " 11 1 11 5 1 8 6 15 6 3 1 11 3 1 1 3 8 8 9 7 3 6 5", " 11 1 5 1 1 10 7 1 9 5 1 1 3 2 14 15 13 1 13 13 8 ", "8 7 9 1 1 15 1 13 1 15 9 5 1 3 6 7 16 9 8 3 15 1 4", " 5 11 15 9 1 13 13 15 12 5 9 13 7 13 13 9 5 9 13 3", " 11 4 1 5 7 9 3 5 9 3 8 9 9 15 1 5 13 6 3 12 1 7 7", " 15 1 2 6 6 1 13 8 7 1 1 9 14 13 3 14 3 9 1 8 1 3 ", "2 1 16 12 1 7 10 3 13 5 9 3 7 13 13 3 13 13 11 1 1", " 7 15 5 9 3 15 3 6 16 10 8 12 8 11 3 13 15 5 15 1 ", "1 9 13 5 14 10 7 5 15 3 8 3 9 4 3 8 15 9 1 1 10 5 ", "1 8 11 9 2 1 7 12 9 1 7 9 1 11 13 14 9 9 1 15 10 1", " 5 1 8 7 1 11 15 15 7 15 13 1 9 13 14 9 3 5 5 9 15", " 3 7 1 4 5 10 2 9 1 1 13 1 5 1 1 13 1 13 16 1 7 1 ", "1 9 6 12 9 3 1 7 5 10 10 11 9 11 14 12 14"};
    vector<string> lengths = {"25 83 40 68 82 11 18 39 82 60 29 74 66 58 51 42 13", " 40 31 72 1 69 45 26 21 36 75 47 12 45 68 43 59 68", " 77 81 38 52 75 30 37 46 10 10 65 51 16 46 76 2 58", " 14 6 56 20 52 54 78 60 14 56 35 76 80 43 50 64 67", " 12 26 9 17 53 53 2 11 10 81 11 19 50 30 68 52 5 2", "2 24 44 40 31 2 30 38 73 39 70 69 54 46 1 67 44 81", " 50 53 42 29 62 73 49 69 4 22 83 67 19 8 16 74 57 ", "11 77 5 63 80 2 47 27 1 37 83 41 35 10 61 49 23 31", " 67 43 1 11 70 1 19 9 31 15 62 45 42 58 42 19 75 3", " 47 78 63 32 17 79 42 28 69 69 74 13 80 40 68 65 3", "7 65 83 26 51 70 65 21 33 78 1 3 25 6 29 73 65 73 ", "14 8 10 79 17 37 52 12 4 42 81 14 14 77 26 61 24 5", "6 3 46 56 51 66 31 19 18 13 30 45 27 52 22 18 29 5", "3 1 50 19 4 5 9 22 74 75 16 76 73 53 14 36 47 11 1", "1 82 26 26 32 36 4 43 8 72 51 71 14 57 33 3 72 68 ", "73 4 27 59 54 78 44 28 1 82 44 48 27 1 61 43 16 10", " 43 8 4 15 77 50 13 26 8 63 35 25 82 70 30 66 27 2", " 41 75 32 56 27 46 74 41 21 34 81 22 49 46 23 53 2", "2 57 8 31 67 47 25 75 9 3 67 5 62 26 16 50 30 60 3", "1 45 76 18 32 39 82 35 23 10 11 27 1 70 43 76 17 4", "3 32 40 28 60 58 11 37 59 18 44 6 71 68 65 28 55 3", "4 2 39 33 61 3 37 49 37 62 45 11 83 23 8 23 14 81 ", "29 69 20 78 32 34 3 5 24 12 17 28 30 14 60 17 44 4", "9 36 13 71 52 13 74 6 22 41 42 75 83 73 12 45 73 2", "8 7 75 7 77 49 66 33 10 53 40 73 49 59 76 37 66 62", " 58 53 42 71 17 45 15 19 63 4 31 29 62 66 16 45 66", " 81 52 5 31 65 26 47 34 25 22 57 6 60 7 45 32 17 7", "0 23 22 33 30 38 44 13 43 33 63 30 44 12 1 64 55 7", "9 59 64 39 58 62 43 4 39 78 40 1 61 13 8 67 79 76 ", "43 55 50 80 56 19 72 25 69 11 17 48 21 77 77 74 33", " 44 65 44 34 65 10 70 78 55 64 74 8 53 78 52 57 35", " 18 60 68 3 82 73 12 39 50 57 63 37 41 63 29 35 33", " 38 1 9 40 18 5 77 52 63 74 15 71 34 32 41 31 53 2", "4 52 10 48 13 32 7 75 81 67 17 56 3 52 79 22 23 53", " 71 60 57 6 43 25 57 59 63 14 18 23 38 82 51 69 50", " 12 80 31 32 21 75 76 62 7 39 83 44 10 17 38 41 48", " 3 43 23 65 23 14 53 58 61 35 33 71 9 46 62 69 65 ", "33 64 40 83 67 74 12 5 67 7 13 25 38 20 39 34 25 5", "4 55 1 70 67 53 54 53 39 73 41 16 48 16 81 45 56 2", "4 9 4 52 44 9 61 82 47 30 5 1 48 6 58 56 1 38 49 2", "6 11 12 3 79 36 52 26 53 43 41 4 49 53 4 60 75 60 ", "1 1 34 58 4 35 9 37 66 31 44 61 7 40 55 6 61 69 80", " 67 31 79 63 51 19 44 17 81 50 43 14 46 45 62 16 4", "3 20 75 19 23 67 13 46 51 63 81 57 28 80 9 15 61 3", "4 6 81 43 57 54 68 79 38 45 26 69 46 6 2 31 48 34 ", "67 18 73 22 64 59 63 35 24 66 3 20 59 29 30 15 7 5", "5 60 81 41 26 45 57 1 52 81 27 74 75 25 5 53 55 25", " 37 42 16 56 57 1 59 31 83 62 35"};
    vector<string> names = {"DR K M I V W C W Q O U D S TM A V Y Y AE A JZ Y U ", "G OY U N L C U CH S KY C I O Y R G G KC X U C G A ", "AK CE A I A K X HA HU P Y CG M J M Y H J M M C B U", " I O B L LC PF C W EU G I IE N O U O X K FE U IK I", " ZE W UN N B S Y L I C GM U Q AE MO E VC B C GZ A ", "X B XW Q G EA E A T U B E G M MG S K U H I U U K P", "Q S F M S Q Q U E A Q A AX W N N M WK J A AQ X A G", " W XK IT H Q K C S EG F A H S M Q C A I M M QG C P", " MB E G EO OW IE EX TU U W A U W Q E G M B CP G T ", "IW W B P K H KA O O K V WK Q N SW I GA S KE I D L ", "N AK G I K I G W IY AI U Q A Q V G O K G I F I A N", " O I YD GU M AD GM I Q EO W G EY S A A A Y N I WI ", "WQ L E G VO A G C W EO SD Q A CK K GS G W L X U A ", "KB G O XQ KG K L F Y QY W UH BL Q G B O U GE IX C ", "A U A F I IW A M YH C G B E B KM Q A Q H A D M M K", "I G Y YC AQ C MG U S X H S QE P M AJ C I IY C V C ", "U K S I S F E Y BU G F Z J O SZ C I O G Y W YQ A A", " C A V V CK M Q X EA BG MC AY A NQ I A Q O A EI M ", "E SO E HQ N EU O OI U S Q WW N UC EH C JH ON T BO ", "GW K Q O C K S G W A U BY S E A Y U A U I K M SX N", " A U Q H D E K O K O G S OA X D M W X BE U A E N Q", " V C GD M U Y MO A C ZF W DR N A I Q A S U S II B ", "W M NM G BB N I V R A N A EG A A S D Z U X E S Y A", " Y H Q A W I XG V A DO C ES C IC M XM JQ Q Q E AO ", "H U K T V RX S U H N YI D W P LS M M A L C S E T Y", " J WY H Q OE T G G QA V N SY BJ HC AK W D A TT O A", "G UG L A E X H K C G MI A A J A QS M JC A YO A R E", " B C S A F M A JS IN D K K O I E O Y A A C Y KY O ", "K M IP Q I A W R M T E MH A M F N E Z Z W GZ M K G", " GE M Q C S Y E AB RS R WP W Y E M O Q O K AK AP K", " M I W WI F K V SH AC IP M UY MV A K NS X X Q V S ", "A A M F Q E G UW W Q U QF O L CY A A A F S S A OP ", "PU A A I K C E E L RI A H YQ C VA I Q C N O D AC Y", " X MB S A K V D M O K G G M O G X E Q I S MA M UU ", "V CS E AN W Z A Q G V N W Y S UA QN E N Y E A K K ", "R U Y Y S E Q UA MC C T Z S A GE RU NS Y G S M O R", "W WE Y C IA NQ C F CW S A G X AI Q Y Y Q"};
    int k = 9;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "C"};
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    vector<string> x = {"1 11 1 10 11 13 8 7 6 13 5 5 4 8 1 1 1 1 15 11 5 1", "3 1 5 1 3 12 11 5 1 3 11 6 6 1 9 9 13 13 1 1 4 15 ", "2 13 12 3 3 2 9 1 14 8 11 6 16 7 9 13 7 15 2 1 15 ", "3 9 1 3 8 15 9 1 1 5 7 11 15 1 5 13 1 14 8 10 5 1 ", "11 15 2 5 2 1 1 12 1 1 13 12 9 8 1 15 5 11 1 3 1 4", " 9 9 8 7 7 15 13 10 3 9 13 10 6 5 6 15 3 9 1 9 13 ", "9 1 10 16 13 13 2 5 13 15 4 13 13 15 12 9 12 16 9 ", "11 9 1 7 1 7 7 12 6 11 11 1 13 5 5 8 16 1 5 16 1 6", " 1 7 15 13 8 9 9 10 14 8 1 1 1 16 6 11 5 5 11 15 4", " 1 1 9 4 9 9 1 15 9 4 8 9 3 8 13 9 5 2 7 6 9 13 7 ", "11 9 9 1 15 2 4 3 13 9 11 16 4 16 9 9 14 15 1 1 9 ", "13 11 3 5 12 11 10 5 1 1 16 7 1 1 13 1 3 7 1 13 4 ", "15 15 10 1 8 13 6 9 1 1 9 5 1 1 12 4 1 9 15 13 1 1", " 1 11 5 1 11 15 1 7 13 9 9 12 5 12 15 5 10 15 15 9", " 13 1 13 6 2 8 10 8 5 1 2 5 1 13 2 16 2 8 13 9 15 ", "13 4 1 2 11 14 1 15 9 13 10 1 5 5 10 11 1 1 9 7 10", " 13 1 9 14 9 11 7 1 4 13 15 9 1 3 12 15 5 10 6 1 2", " 5 10 9 6 11 3 1 12 4 3 1 2 13 1 15 1 1 12 4 5 11 ", "15 1 9 4 7 2 5 14 13 7 14 1 11 9 11 15 1 13 9 4 7 ", "6 7 1 3 1 2 6 11 9 1 3 2 13 16 1 9 15 12 3 9 14 3 ", "7 6 1 13 7 2 9 15 4 1 5 12 12 7 16 1 1 13 14 1 11 ", "7 5 16 9 1 13 5 9 16 6 9 9 1 8 9 15 13 12 9 5 3 9 ", "1 16 9 8 11 1 13 16 1 5 13 7 7 1 9 14 1 1 6 1 9 5 ", "1 14 11 9 12 16 8 1 9 10 14 9 9 13 2 11 11 1 11 14", " 13 1 2 10 3 13 15 12 1 1 9 12 14 12 13 15 1 1 5 1", "3 3 9 1 13 13 10 7 3 11 7 14 11 1 2 9 14 13 5 5 3 ", "2 5 11 5 9 1 13 13 12 13 10 9 10 5 13 4 5 4 15 8 8", " 11 9 9 1 11 11 5 1 3 15 12 1 4 1 5 1 5 4 13 11 7 ", "2 1 2 11 1 2 2 6 9 2 13 1 5 11 3 13 5 1 9 7 10 3 3", " 9 14 9 10 6 15 16 1 9 5 1 11 14 7 9 14 2 1 11 9 1", " 3 3 13 14 11 15 9 1 7 3 1 9 6 5 13 15 13 2 1 3 1 ", "15 15 1 1 9 15 3 1 9 3 7 4 13 3 5 7 1 14 11 1 5 4 ", "9 13 2 11 5 1 9 6 4 13 2 5 9 5 1 10 13 3 14 13 3 9", " 10 1 16 13 15 5 4 12 13 9 5 13 14 9 16 5 2 9 6 9 ", "13 3 8 1 7 1 5 13 9 3 7 15 16 7 5 13 1 3 1 1 1 13 ", "16 1 9 9 1 1 4 9 6 9 5 9 3 15 11 13 12 4 4 12 2 13", " 5 1 14 11 9 9 1 1 5 3 2 13 1 1 5 14 15 11 14 1 5 ", "6 15 9 1 13 1 1 9 1 4 15 5 1 13 8 2 4 8 10 1 6 5 5", " 5 15 12 8 5 8 1 7 1 4 15 9 1 1"};
    vector<string> y = {"9 2 5 15 3 14 11 1 9 5 5 16 7 6 13 6 6 1 9 12 9 11", " 3 3 13 4 13 3 13 14 13 13 9 9 1 11 14 5 1 3 5 7 2", " 1 9 13 5 13 5 9 5 5 3 1 9 13 15 12 4 3 14 1 5 1 7", " 6 5 13 13 1 7 13 8 3 13 9 15 15 15 11 1 13 5 16 5", " 3 2 14 7 10 12 11 13 13 7 2 5 15 15 2 1 9 9 9 9 5", " 10 1 5 15 4 16 1 1 1 9 4 3 10 7 5 5 3 8 1 8 16 16", " 1 1 5 16 11 1 7 14 3 1 1 9 7 7 15 13 1 5 1 13 9 3", " 1 14 10 16 13 4 1 5 5 15 1 9 11 1 15 9 1 4 7 9 1 ", "12 10 11 1 2 1 13 3 16 10 9 5 1 14 11 2 9 15 1 3 4", " 4 5 9 7 8 6 1 1 15 5 1 1 15 11 9 13 7 13 5 5 10 1", " 10 12 9 16 6 9 4 10 9 13 11 9 11 7 13 12 7 14 13 ", "1 13 13 14 1 5 1 7 15 1 14 1 1 9 9 5 1 1 13 6 7 9 ", "9 5 15 3 5 11 15 2 1 13 9 14 5 1 1 1 3 5 3 1 11 1 ", "13 14 1 3 1 7 1 15 4 5 13 8 3 5 1 13 12 1 13 12 1 ", "8 13 9 1 11 1 15 1 15 8 16 7 1 12 16 1 1 7 13 7 2 ", "13 1 15 2 15 1 9 5 8 9 5 5 1 11 13 11 1 6 7 12 4 1", "2 14 7 1 5 1 11 7 12 5 1 9 3 9 1 1 1 5 7 5 7 9 13 ", "13 7 1 15 5 3 4 9 1 11 4 3 3 5 3 15 15 11 3 6 7 5 ", "6 13 9 1 12 8 9 1 9 6 1 1 13 7 12 3 9 8 10 2 1 2 1", "4 15 15 15 7 6 13 1 4 1 4 13 1 9 7 1 13 9 1 5 2 1 ", "7 3 1 1 8 15 14 11 15 14 4 14 9 4 16 5 12 10 13 15", " 9 9 8 13 7 7 6 1 1 15 3 5 14 6 1 13 11 12 11 1 1 ", "9 9 1 9 1 9 7 13 1 2 9 14 5 15 4 16 16 7 15 7 13 1", "3 1 9 9 13 1 1 5 13 14 6 6 6 9 13 6 5 1 5 8 9 11 3", " 3 10 1 7 9 15 12 15 2 3 11 1 1 1 9 1 1 5 5 3 9 5 ", "5 12 1 8 3 9 5 15 15 5 13 7 1 2 9 3 9 15 7 3 11 11", " 8 8 5 9 1 5 1 11 16 7 7 4 10 14 11 1 12 2 1 11 15", " 16 5 3 6 13 13 16 9 11 5 4 1 9 15 5 3 9 9 13 13 5", " 3 6 1 11 3 4 15 13 5 9 1 11 13 9 1 11 16 2 14 3 8", " 1 13 13 16 1 5 1 1 1 15 6 3 7 5 1 1 1 1 15 3 8 11", " 11 3 16 10 5 3 1 13 1 2 2 1 10 3 7 13 1 9 16 1 9 ", "5 3 13 11 1 10 9 7 1 13 10 5 5 9 1 3 1 9 10 11 9 8", " 9 5 4 3 8 5 9 6 4 13 15 13 3 1 13 7 3 9 9 13 5 4 ", "9 9 7 12 6 5 5 15 1 12 9 6 2 5 11 9 11 5 8 4 1 15 ", "4 1 1 1 15 12 7 2 1 15 5 15 1 5 6 6 1 11 5 13 6 6 ", "14 2 13 8 13 9 3 13 13 1 15 10 6 11 5 7 13 9 6 13 ", "7 5 16 13 3 1 4 1 13 4 3 5 5 3 11 14 13 1 10 6 7 7", " 3 4 7 1 1 13 9 1 1 5 4 9 13 5 13 15 9 1 1 6 9 1 1", "1 7 9 5 6 11 9"};
    vector<string> lengths = {"33 79 36 29 32 58 6 60 75 58 45 56 50 78 1 26 12 1", " 43 55 66 25 74 71 42 15 47 39 37 70 13 75 76 50 7", "6 9 25 80 1 70 9 5 48 30 42 28 46 60 74 1 31 25 19", " 5 3 71 73 39 34 12 55 12 51 80 22 55 70 36 66 30 ", "45 43 47 61 5 1 75 15 27 1 6 15 60 83 83 61 48 28 ", "78 57 80 45 68 53 19 52 64 6 33 61 77 45 82 55 68 ", "73 6 63 23 82 42 62 2 33 59 50 10 39 57 82 67 52 1", "7 25 19 10 76 62 60 8 1 21 80 35 55 70 2 20 72 82 ", "20 16 43 41 66 17 56 11 53 71 28 24 83 18 54 80 15", " 32 8 25 9 36 12 41 75 62 65 48 83 41 2 29 76 81 5", "6 70 2 73 8 24 28 82 66 56 80 24 74 70 81 63 67 2 ", "74 37 44 54 10 36 77 56 11 19 34 43 66 11 35 21 82", " 1 5 35 25 39 12 40 52 23 33 13 38 30 30 7 10 9 76", " 61 3 42 34 8 17 41 15 58 30 6 55 82 62 1 20 10 51", " 36 78 30 8 35 57 58 77 69 1 69 18 30 72 6 31 66 5", "2 5 31 12 27 19 67 5 15 17 80 67 3 79 64 10 64 2 6", "3 27 71 32 39 24 29 61 51 38 57 15 64 10 29 82 7 1", "5 10 60 83 73 47 37 70 34 30 31 19 59 58 79 25 7 1", "3 53 13 82 62 36 73 81 19 74 14 35 67 3 70 67 58 5", "6 51 7 52 40 9 21 66 59 81 1 45 27 77 20 9 83 5 29", " 47 30 30 11 32 46 39 42 83 77 71 25 26 22 60 13 4", "6 38 66 5 9 29 7 35 44 37 18 82 43 45 62 43 38 75 ", "12 30 81 71 54 71 7 63 52 51 50 24 28 44 29 41 6 4", "1 27 46 44 24 75 20 74 63 68 72 13 31 43 68 28 59 ", "81 63 59 71 32 5 58 34 73 71 31 2 13 72 21 27 23 6", "4 64 66 53 35 1 24 76 63 34 78 77 14 30 81 58 54 6", " 58 79 30 25 27 2 49 25 36 26 10 59 12 21 35 69 66", " 12 43 11 66 1 42 60 57 54 48 32 35 82 77 77 65 9 ", "46 26 52 41 36 40 73 81 56 20 35 52 58 69 62 36 47", " 7 37 73 29 57 25 77 76 12 71 7 67 3 68 32 43 83 1", "8 65 11 40 14 30 11 40 74 54 52 8 30 77 37 49 30 6", "3 74 37 77 11 76 81 80 53 80 48 22 44 78 36 69 68 ", "81 79 74 1 72 30 57 51 62 45 38 44 2 75 34 40 1 11", " 65 37 6 16 39 14 36 44 33 76 27 25 54 49 73 64 40", " 71 40 37 34 75 38 12 62 66 73 16 22 57 20 68 54 4", "2 25 73 14 20 59 4 52 55 2 42 20 41 71 12 64 25 28", " 11 3 1 31 66 12 61 2 33 2 75 29 72 78 38 61 47 2 ", "4 64 68 53 76 57 5 3 42 83 59 54 50 24 49 28 64 11", " 77 65 1 76 34 34 80 38 71 4 15 22 78 63 52 58 5 7", "0 62 60 12 41 20 40 48 37 28 80 68 83 73 77 29 26 ", "69 29 64 7 42 22 32 67 11 75 71 74 7 32 6 72 81 61", " 38 36 75 78 8 2 11 15 61 59 80 30 83 53 33 63 7 4", "1 33 57 6 60 21 51 18 44 47 20 54 8 16 7 1 25 5 1 ", "45 82 29 53 57 56 18 19 76 7 66 49 61 70 3 53 59 4", "7 68 20 64 26 76 67 78 42 17 17 24 77 76 53 50 78 ", "64 51 80 56 45 29 46 3 65 52 58 12 24 11 43 11 42 ", "69 68 43 58 33 1 62 42 56 81 27 77 46 32 46 53 56 ", "56 54 51 31 21 55 20"};
    vector<string> names = {"E WY GB A V PZ M A Q A J QQ O Y WA G I D W IH O UC", " M A VA N ID K M Q G I R U G S G CA Y Y N Q GN M S", " Q R Q WI MA K MN U K UR G K W W A A O A SH O J S ", "U O Y T I K BO U A W Y S KA K YU K K K L U AQ O E ", "Q A A NX K Z R UW A M O A A X Y J X W EG BV R RD K", "X I MM S Q K V W O U A H AM N C A YS A D QC B M QK", " A LA P Z AA QY O M W W T I VA K PK KK Q Z OO Q Z ", "GP PW A I G E P O M I GX A P XI AH S J IL S J U NM", " AM A V I R ES M TG TJ Z G E B AY AB QD M CX AX W ", "C H A A YT D X K G XI Y N BC V E Z C UU L C H S A ", "W S R IO Y E ZO M W L S M A M YV OA A I P A L A IE", " T I F U J W M S I C G K M U IQ S M EO AG U MK L I", "T K Y IU B M EV G A A I I C M I M X E F M Q S M W ", "A SQ P NA OC ER I G U M C E N B X U Y A O QS D O P", "A N N KA K U VW Q Y U QQ A W P M H CW I QQ M F X Q", " QA Q Q W O W Z O Y K CB C N B KI P O IM IA V AS P", " AQ LA A X B KI Q E QI UK MB HA J A S I L YM N MO ", "Y IU R V B W YJ A SH S A A P KT A U E F BQ C O U A", "B WY I S UX U RJ U A X K G V NQ Y C U AX V I C C Q", " A Q MW N Y T QW Q IU T HQ A S G Q I T O Y O YI G ", "A N Q S TG W O RQ K AG W YM A Y N Y H G Y K U N W ", "N S E Z DJ UJ EQ ON EQ QS X J A H VU I O T B C CE ", "Q CO E WJ M SM AE I R OE C S V NK O E CU E CB YC A", " X D A SZ AS M AE Y NA O F Y W E U S C U UV Y O I ", "Y A O K S K I KL I GA P L A ZS EG G Q QW P CU LX K", " WW WO I J BC L T AA AA B M IE M G NQ QW S Q EW G ", "C S K O YQ U F U A S G G O C WW R A A HM A MG O G ", "L OY QJ VA A A QY US F Y NS O E N SE K YA E N R Q ", "EA C M I A X NN O U QK ME E S S I CF N U E Y A G U", " A OA DC YM A Y O X K Z A K C E A E CI AM A K K T ", "VA C N A QL W WD E A M OI G U V K SW A E M AU M CH", " K A VE G F O W YO AC IW CZ O D Q U UY I N SC B JB", " Z O E E Q I SB M U ZU GG OT H QU IO A Q M O W F W", " G AS N M ZM A K Q D I M R A O K YA R I OG G O KN ", "E A A F U S A C G S SG UA N N EQ NI WO S Y Z K P A", " C A M O C M O Y O UB NO X D GI A M P Y E A K G A ", "AQ K E O H AK JY ML QB Y M C E E SK F N CA Z S KN ", "P A Q GK X E YM"};
    int k = 10;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "N", "L"};
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    vector<string> x = {"10 5 1 8 3 12 9 1 1 10 14 1 9 3 5 5 7 1 10 2 1 1 3", " 10 3 3 9 9 2 2 1 10 5 1 1 14 9 9 12 1 11 3 9 1 15", " 13 13 1 10 5 5 14 1 15 5 15 15 12 11 11 16 3 11 1", "3 9 11 13 13 6 9 9 10 9 2 5 15 15 9 2 11 16 1 13 1", " 5 1 5 8 1 9 15 5 7 10 9 13 11 15 5 15 11 9 13 1 9", " 3 9 14 9 14 4 5 9 7 9 11 1 1 6 1 9 9 1 16 13 8 9 ", "9 5 9 15 1 11 1 1 4 9 3 9 11 4 5 4 4 1 3 2 8 1 12 ", "11 12 16 10 9 9 15 11 10 5 3 16 5 9 10 13 4 9 1 9 ", "9 1 3 2 1 11 12 1 9 8 13 11 12 13 1 5 15 1 9 13 3 ", "13 5 7 3 12 9 9 16 1 14 15 9 4 12 7 9 15 12 5 1 1 ", "15 12 3 1 8 10 13 13 5 13 6 7 15 1 1 11 11 7 4 3 5", " 3 7 7 5 11 14 2 1 16 14 1 9 9 1 9 3 1 16 1 13 1 1", " 13 14 16 5 7 10 7 15 5 16 13 13 4 4 1 13 5 5 1 7 ", "12 9 2 1 1 14 16 7 14 9 6 14 8 3 1 16 5 1 13 13 1 ", "1 5 15 5 14 1 11 7 11 5 7 5 6 1 11 11 3 16 10 9 9 ", "11 16 11 10 10 15 12 1 7 11 11 12 15 9 2 5 15 3 16", " 13 13 14 16 4 5 1 8 15 3 3 3 16 5 2 16 11 1 1 11 ", "13 8 9 2 7 14 1 9 15 2 10 8 14 8 12 1 3 14 12 1 9 ", "1 3 13 9 6 5 1 1 5 7 14 1 1 1 9 9 1 11 3 5 5 5 9 9", " 11 3 1 7 6 11 3 16 1 9 15 9 15 1 11 11 13 1 1 15 ", "7 12 9 5 10 5 5 13 1 13 16 5 16 12 1 9 13 9 9 9 11", " 9 1 12 1 5 7 1 10 1 15 1 9 13 1 8 13 1 6 5 7 1 1 ", "5 8 13 1 9 13 1 13 7 7 1 1 13 13 13 1 10 12 14 1 8", " 7 13 13 1 1 1 5 1 5 12 1 15 2 9 15 2 11 13 6 9 11", " 4 9 1 4 16 15 11 1 3 5 1 5 12 8 9 13 11 10 13 9 9", " 1 13 5 10 6 9 1 9 8 5 5 7 13 9 12 11 13 9 9 16 1 ", "13 2 5 11 13 9 7 13 14 13 14 1 1 1 9 2 7 13 11 1 1", "5 2 6 9 5 6 1 1 9 9 1 13 1 1 15 1 1 16 2 8 12 1 7 ", "1 3 1 9 9 13 6 11 14 6 11 13 15 4 11 1 1 4 7 12 8 ", "1 9 1 12 5 7 9 1 6 14 11 1 11 5 7 1 5 1 2 10 13 12", " 9 8 15 1 5 5 1 16 9 14 15 1 5 7 1 1 14 9 1 15 16 ", "15 9 13 10 7 6 15 7 16 9 1 1 6 3 1 16 16 10 1 11 1", "3 1 3 13 12 1 3 2 1 7 15 11 7 15 2 15 3 5 5 15 14 ", "7 1 1 11 1 13 11 16 12 8 12 4 12 12 1 16 9 6 1 2 7", " 11 15 16 13 5 9 1 13 1 1 9 2 1 3 4 1 14 1 5 9 2 5", " 1 9 12 3 1 6 10 3 11 2 11 15 9 5 1 3 13 13 9 13 9", " 15 3 15 13 5 11 3 15 1 11 10 1 15 1 1 13 11 7 16 ", "1 13 1 9 10 13 8 7 3 12 1 1 5 9 15 7 13 7 7 9 12 1", " 5 1 1 10 2 8 12 10 1 1 8"};
    vector<string> y = {"1 6 11 4 7 14 5 9 13 3 13 1 13 11 14 4 13 13 13 13", " 5 1 9 5 4 4 1 9 11 1 3 13 9 12 15 8 9 13 5 1 3 15", " 13 16 1 16 11 3 1 1 3 6 5 1 9 1 6 13 9 14 1 2 8 7", " 13 9 11 15 1 1 11 15 1 3 3 5 14 9 5 8 4 1 5 1 15 ", "5 1 13 12 7 1 7 5 1 2 5 15 3 5 6 14 9 4 1 8 5 7 14", " 3 7 7 1 13 1 9 13 11 11 7 9 7 8 13 9 10 1 1 5 2 1", "2 12 13 1 4 1 13 5 2 5 15 1 2 13 3 9 9 9 5 15 1 7 ", "15 9 11 11 5 13 1 12 11 7 5 5 3 15 13 11 9 9 16 3 ", "10 1 11 5 11 4 4 7 15 1 9 1 5 2 2 4 13 1 7 13 1 8 ", "8 9 11 1 11 8 13 5 1 12 1 13 13 6 1 5 1 5 9 9 10 5", " 14 13 3 7 10 9 10 15 11 9 4 3 12 5 9 13 14 9 5 16", " 5 14 16 5 1 15 5 8 1 5 6 5 11 9 10 13 11 14 13 8 ", "1 7 15 14 16 15 8 16 5 6 9 13 10 11 11 3 5 9 10 1 ", "13 5 6 7 15 14 1 1 9 1 7 11 16 1 3 3 9 1 3 5 1 8 1", " 13 8 14 1 2 14 7 10 12 8 1 9 2 9 5 10 1 1 8 1 1 1", "6 14 14 16 1 9 1 3 10 13 6 15 9 13 9 13 1 1 9 9 7 ", "9 9 7 1 1 16 11 13 9 9 8 15 5 3 12 13 1 15 1 1 1 1", " 1 16 6 12 1 3 13 13 11 3 8 8 1 1 9 9 1 13 1 10 11", " 6 2 1 10 9 1 6 9 16 5 8 1 13 7 8 11 11 3 5 13 9 4", " 9 15 1 1 15 9 13 9 13 7 7 13 3 1 6 5 7 11 1 1 9 1", " 5 5 13 11 9 7 14 7 5 12 8 15 14 10 8 2 6 7 13 11 ", "11 13 1 9 7 15 1 1 9 2 8 6 13 1 9 13 1 9 3 11 9 6 ", "16 1 1 13 10 5 9 10 1 5 15 3 8 9 7 1 3 1 5 8 9 1 5", " 9 1 1 1 15 5 16 13 11 9 3 5 5 2 1 12 13 1 13 5 9 ", "5 9 13 3 8 7 12 5 4 6 5 15 11 16 16 15 1 15 5 11 5", " 6 8 3 5 9 6 1 7 9 5 9 3 11 7 13 15 15 9 13 15 7 1", " 10 16 13 10 5 5 10 13 11 3 9 9 9 9 7 12 12 8 14 1", " 6 1 13 1 1 11 1 9 12 12 8 1 13 9 11 9 10 1 6 5 9 ", "14 9 11 1 3 1 14 10 1 13 8 3 16 16 9 8 14 9 2 10 1", "1 15 1 5 15 1 1 7 1 5 6 9 12 16 5 14 9 1 4 13 9 1 ", "9 9 14 8 10 12 13 13 4 6 10 13 11 13 5 9 7 14 12 1", "0 6 8 14 1 13 15 13 13 1 8 3 9 9 13 15 1 9 11 1 9 ", "9 13 9 11 1 1 13 15 8 4 16 8 9 10 13 9 2 7 1 9 1 1", "0 8 5 11 2 15 6 5 3 1 3 1 7 13 1 1 10 8 11 5 15 3 ", "3 9 11 1 2 3 1 3 5 13 6 1 4 9 13 2 1 9 16 13 5 2 7", " 12 13 15 5 13 1 16 11 13 7 3 9 8 7 1 12 13 11 10 ", "8 9 5 1 4 13 15 5 14 1 5 5 9 5 6 5 1 1 9 7 1 14 1 ", "14 1 12 1 1 9 1 9 13 12 1 2 1 1 1 1 1 5 13 1 13 2 ", "16 13 1"};
    vector<string> lengths = {"75 41 4 9 28 19 68 74 38 30 68 54 15 16 47 77 69 1", " 23 29 40 78 45 47 57 16 78 4 69 79 25 80 47 47 46", " 34 17 43 76 16 65 78 36 65 45 55 80 46 51 73 52 7", "9 83 32 27 69 16 31 23 41 44 2 28 83 29 76 27 38 2", "3 35 9 79 41 18 41 46 70 83 17 60 65 66 34 30 23 4", "6 81 33 4 28 47 49 77 37 76 54 19 69 48 48 59 4 39", " 40 16 24 3 55 48 75 21 41 47 63 63 43 54 37 42 59", " 44 47 35 26 35 68 1 15 1 48 6 66 47 25 72 13 68 7", "4 78 36 28 72 18 10 32 36 39 13 78 22 55 37 78 68 ", "40 54 82 81 36 1 31 17 10 70 41 76 25 45 24 8 61 3", "6 7 27 39 37 64 1 43 27 37 24 79 61 76 8 50 59 37 ", "10 48 59 9 83 17 4 56 18 19 74 3 25 10 13 53 12 32", " 75 24 22 79 18 27 50 72 70 37 64 78 6 68 80 47 1 ", "32 79 10 3 25 34 54 16 50 10 19 5 66 14 35 49 39 7", "7 80 43 33 8 10 2 75 50 36 82 1 76 35 57 82 35 66 ", "45 63 15 73 45 47 18 83 1 6 61 72 29 61 71 64 76 5", "7 40 1 46 62 16 22 8 44 42 64 42 62 16 35 58 21 4 ", "52 30 65 13 52 69 39 46 56 56 2 40 39 15 44 82 37 ", "42 60 47 56 32 4 48 29 12 9 4 60 60 50 39 79 30 83", " 56 53 32 37 36 57 63 1 26 1 75 68 81 50 52 57 21 ", "44 22 68 74 74 35 73 60 61 60 54 44 74 48 28 18 24", " 81 65 62 64 75 48 39 46 75 65 41 57 25 23 20 28 4", "7 37 81 81 14 26 37 56 55 2 14 72 33 42 15 79 38 9", " 14 15 74 68 76 40 66 34 15 50 20 24 48 53 75 9 30", " 76 38 65 45 52 7 26 37 76 16 48 72 31 63 41 17 70", " 42 74 68 6 67 79 68 26 78 65 15 38 53 45 22 27 77", " 83 44 53 60 31 64 25 80 65 69 80 43 35 62 50 69 7", "2 79 57 38 25 31 77 34 19 58 32 69 6 59 63 39 20 4", "0 60 55 2 68 42 29 10 34 4 76 44 71 70 21 78 27 77", " 4 79 77 3 29 34 37 13 79 12 79 40 83 5 33 11 13 1", " 23 26 3 70 16 43 8 21 2 78 15 8 19 14 50 57 54 41", " 82 14 10 26 38 30 6 73 43 22 24 78 22 77 50 23 8 ", "82 80 39 13 55 36 42 80 17 65 13 5 11 19 6 62 70 4", "3 60 44 78 75 11 4 77 23 27 53 76 19 81 19 38 57 1", "8 83 60 79 44 15 62 38 29 34 31 16 27 83 28 70 18 ", "10 54 43 3 78 76 66 24 72 54 46 32 4 41 63 14 35 2", "2 56 1 26 40 13 52 40 10 74 76 28 53 82 78 73 63 8", "3 13 15 6 58 25 82 60 80 78 19 81 82 15 61 16 35 1", "4 14 33 33 78 42 61 54 46 7 4 37 74 72 6 29 19 14 ", "11 4 47 17 26 16 69 7 67 27 16 72 43 67 12 12 4 79", " 29 52 9 17 46 70 26 37 46 3 16 64 46 25 50 76 25 ", "41 6 23 30 54 4 71 28 13 6 4 3 55 49 23 59 4 13 17", " 21 7 54 12 57 70 9 22 5 38 41 12 1 38 31 81 51 32", " 28 60 3 25 79 34 38 39 24 60 62 45 31 81 40 4 63 ", "80 4 3 64 14 5 57 75 69 21 59 35 8 21 43 34 58 77 ", "64 80 45 49 2 28 60 52 46 40 5 38 51 82 34 69 33 1", "0 7 5 15 56 19 38 4 34 3 63 9 12 35 80 19"};
    vector<string> names = {"S I Y NU DO A I Q N S E P C GR K XA G S V E EF M V", " L S AY BU S J O L A U A UC A QC S O W EV E QK WO ", "A AM BA V DV B A NL G M HO O AV QO N K UO CU G Q O", " A W L V Y Y B Q Q Y U A Y C J C EQ Q H OO WE MV W", " I U OG N JG Y G C L S F H G G A E P WG K K Z GY J", " E WG K N E N AM S ME Y A V HU O FC A I A M MA K U", "R I SA U AS Y A A B S I K S U O W X WY K N GT W K ", "ZU KQ C H U M FO C U R Q R AA A Y Y NH U C O C QK ", "W Q G NG G W V AY A YU N M Y N G A A X AE JI A AE ", "J A MM W KS W I A O A WK C CX K Q XO E KB Q OE OA ", "J K Q I J IG V Y Q S K S N F PY SM K L Z I KA N AM", " U Q N K WM L J AO C Y B M W E Y A QM W Y Q W C N ", "Y YQ Q M AB K Q M T B OQ K U QA E A T V QA Q A AU ", "A W J W A ML Z P G O AK RE M JS RA RZ E SY IP E Z ", "E N AO E D I U C H L QU F C HF SO YA K N A A C W Q", " S KM CG Q G H GA V B G M W I I M FO S G Z AM A I ", "SM U E Y YQ AL IS CG L I N Y SA S GN A K A Z G R I", " D UM K Y K WE UM UQ H U GJ WS C A K T GV K B G Y ", "C WG T H C C K E JC Y G W PU M Y Q A OB N S A C D ", "O PM F O W P Y R V W R Y A UY Y O A FN YO AE A Y H", " A WY YR O V J N A E W Z S NP M T I I IQ U UO Y R ", "EI UW FG N A N Q L ZA E Z G AW Z U C A NQ O I Z Y ", "Q O M S GK A U M W OY U A A D WK K IS A AQ U OU ON", " R A N U RP C KS MK S EM C CJ MU YS H RA R A F AM ", "HE AQ QC K KK K SH GA G K UJ J ML U BI Y I IW C S ", "M M I W VR RA A K E J OK IX H E J YC L MN S Q H K ", "W I U K T W QC KS A O K A A C N C W Y Q UA N M U W", " N S E M I U RB Y Y QP G QQ K W V O S C WN K M A A", " E Q K O T W E N Y W N VG J H A U E KE K C O C S W", " G U B J R K O G N A E MO C K C J U N A SA WQ A O ", "W D U P D Q Q C Y M D J C W LB OO G N UZ NN O C A ", "LH I ZI U Q W I CA Y U GN Q SW Y UZ G QC O A S D I", "Q EO O I C C S U A UY N VE K QB AZ G M TU K QL CJ ", "K A YA W Q Y E E Z TW I C M CP UM G H Z S K I H G ", "D T AO P S LA M A WT MK J M Q A K I S I IW U U I A", "G Q RN U G SR V ZM C OA WY W GA A IK P C W K J H S", " E CB O NU W M AK M A SE W A X I S"};
    int k = 9;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "AE", "C", "Q", "A"};
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    vector<string> x = {"9 1 11 7 1 2 1 1 7 9 8 13 13 13 13 1 13 4 1 13 1 9", " 3 11 1 14 13 5 15 9 4 6 11 1 1 11 1 13 2 12 1 3 7", " 15 13 1 9 14 11 1 7 10 1 2 11 1 5 8 9 1 10 5 9 1 ", "12 12 7 2 11 11 1 10 7 6 13 12 10 8 5 13 8 6 7 8 6", " 15 11 5 1 6 9 9 11 11 7 9 2 8 4 4 2 1 5 5 12 15 3", " 4 9 2 1 13 1 5 13 6 1 1 15 13 1 1 10 13 8 15 12 9", " 10 15 13 7 15 9 10 8 4 1 4 7 9 12 1 13 14 5 5 11 ", "13 9 7 1 12 8 9 15 1 7 3 16 9 1 13 14 11 6 8 15 1 ", "9 10 1 5 3 16 11 16 14 12 15 5 9 1 2 7 10 11 1 13 ", "13 1 3 2 9 2 13 14 4 11 1 3 1 11 1 11 1 8 5 16 5 1", " 10 4 9 1 3 7 12 1 4 5 9 9 9 9 7 15 1 13 5 7 9 4 1", "5 1 11 6 6 5 9 4 14 9 9 13 1 11 14 5 7 15 3 9 15 2", " 15 9 13 11 1 15 1 12 5 11 1 10 13 1 6 1 8 13 1 13", " 5 8 1 4 15 7 11 7 13 3 3 15 9 5 15 16 3 15 11 2 6", " 16 14 1 11 1 3 9 7 14 5 8 1 2 5 5 1 1 14 9 9 10 9", " 8 5 11 16 5 7 14 1 5 1 10 9 7 4 11 1 9 5 9 1 3 11", " 13 10 11 3 5 9 1 7 9 3 9 14 7 1 13 11 11 3 11 15 ", "1 5 6 2 6 15 7 15 9 1 3 12 4 5 15 13 6 16 3 1 1 2 ", "4 14 8 13 13 15 12 2 1 10 4 6 1 1 9 13 15 1 8 13 1", " 9 1 11 13 14 5 1 1 4 15 9 9 5 15 10 5 9 1 1 15 1 ", "11 4 11 9 15 9 1 13 11 13 7 11 1 12 13 5 3 11 1 9 ", "13 9 11 7 8 5 1 5 8 1 4 1 7 13 11 1 10 14 12 15 12", " 9 9 7 7 13 1 13 8 1 5 9 1 14 5 9 7 1 3 13 3 1 1 1", "1 15 1 9 14 1 9 8 9 13 9 5 9 3 8 15 6 1 9 9 3 9 14", " 9 4 3 4 1 9 1 16 3 6 8 1 8 14 2 9 13 14 5 10 5 11", " 9 11 4 3 9 9 15 6 15 15 1 5 3 1 10 15 3 15 1 1 1 ", "9 7 5 1 13 16 5 5 3 9 9 11 3 3 1 1 15 5 12 1 13 5 ", "1 6 11 11 1 9 11 11 9 10 3 4 3 1 3 5 2 7 11 13 13 ", "12 11 15 13 5 10 7 7 7 13 5 9 9 15 15 1 12 6 13 6 ", "13 11 8 3 13 13 7 7 1 5 16 1 9 5 7 6 14 5 1 6 11 8", " 6 7 1 8 16 5 3 8 3 3 10 1 7 4 1 1 13 14 3 7 7 5 5", " 8 5 6 1 3 15 11 9 13 4 1 13 1 15 7 13 2 10 13 13 ", "3 9 7 13 15 9 15 13 4 12 5 13 3 5 7 6 3 1 1 6 7 5 ", "3 13 1 1 7 5 1 12 9 4 7 5 1 3 13 9 1 8 4 1 9 6 14 ", "2 10 9 9 13 13 9 11 6 7 1 2 15 12 3 13 9 1 13 13 3", " 1 1 5 7 8 1 2 1 7 11 1 10 9 13 7 5 9 4 1 11 16 12", " 11 15 13 8 16 1 3 2 13 13 8 13 3 2 9 8 5 11 1 15 ", "5 11 5 13 13 11 7 9 11 1 11 1 5 11 6 9 6 9 14 6 9 ", "14 6 1 9"};
    vector<string> y = {"5 4 2 6 3 8 5 7 1 11 10 2 9 11 7 9 5 4 2 7 14 10 1", "0 2 1 10 1 13 12 1 12 1 4 8 16 13 1 11 7 8 13 2 6 ", "7 5 7 14 2 11 1 3 4 6 10 9 15 10 1 12 9 4 13 13 8 ", "1 1 5 1 6 3 11 5 13 7 13 6 1 7 3 5 14 3 13 7 6 11 ", "7 1 14 15 5 15 13 11 16 15 7 9 3 10 1 14 1 3 3 16 ", "9 9 7 9 13 5 1 15 3 1 1 1 10 2 11 1 6 10 5 4 9 1 3", " 5 9 9 1 16 16 11 11 1 1 5 2 15 13 9 11 7 9 9 7 15", " 8 13 9 12 16 4 6 5 7 5 15 9 10 9 1 3 14 1 10 11 5", " 1 1 1 15 15 1 5 4 1 1 8 13 9 13 3 9 15 9 1 15 5 4", " 9 13 2 3 1 10 7 10 8 14 7 15 1 9 9 11 15 5 3 10 1", "4 1 5 13 13 15 13 13 5 11 1 9 14 9 3 15 16 8 11 1 ", "7 11 13 1 6 1 1 1 1 1 5 10 12 5 4 11 1 13 1 9 9 1 ", "5 5 1 1 1 16 9 7 1 7 1 14 14 6 1 8 15 3 9 16 14 15", " 11 3 11 9 4 7 6 15 1 16 14 13 1 16 11 13 12 15 9 ", "4 7 13 1 2 5 6 9 9 5 14 1 11 15 12 1 13 13 11 16 4", " 12 1 6 13 14 1 14 9 1 12 9 11 6 5 9 6 3 6 8 1 12 ", "5 9 13 13 15 1 10 9 14 15 14 10 6 16 5 11 3 1 9 1 ", "3 11 10 1 2 15 2 5 1 4 14 9 4 15 1 8 15 14 11 9 8 ", "1 11 14 1 9 6 5 1 13 3 14 15 4 10 1 15 9 8 5 12 4 ", "3 7 13 7 5 13 13 3 13 13 6 3 1 13 10 1 11 12 1 1 1", "0 5 1 16 1 13 1 1 3 6 4 1 9 11 5 3 6 3 13 13 13 12", " 11 15 1 1 3 10 5 11 5 3 13 9 16 9 10 12 7 9 3 10 ", "8 16 4 1 9 9 7 5 3 4 1 9 1 11 12 7 11 1 13 13 13 7", " 9 1 13 10 15 3 12 9 11 3 1 7 8 5 13 13 1 9 14 13 ", "4 1 6 5 7 15 11 5 5 7 10 1 16 1 13 9 7 9 5 9 9 4 5", " 1 7 1 3 9 6 15 5 13 3 16 5 9 15 16 3 12 2 15 3 12", " 1 15 13 9 2 2 5 3 16 5 1 1 13 5 14 7 1 1 6 13 3 1", " 15 9 3 2 9 3 9 13 5 16 10 1 1 5 14 5 2 1 15 12 10", " 9 16 11 1 5 5 5 5 5 9 1 5 9 9 1 1 9 11 6 5 16 7 1", "5 11 10 3 15 7 1 6 5 15 5 13 1 5 10 11 9 9 9 15 13", " 9 6 13 3 4 15 1 1 13 8 13 2 13 15 8 1 6 5 9 1 15 ", "15 6 11 1 11 4 3 3 14 9 15 9 3 8 7 14 16 9 9 3 1 1", " 15 5 15 12 10 1 9 5 9 9 7 16 1 9 13 1 5 1 8 11 6 ", "1 7 15 1 6 10 11 9 9 7 5 10 5 9 5 15 3 2 16 11 9 1", "2 9 11 14 16 9 1 3 14 11 11 7 7 2 13 9 3 10 7 9 9 ", "16 1 16 10 9 11 9 1 3 5 5 1 1 6 7 1 13 15 4 8 16 1", " 2 11 1 9 7 13 7 1 11 14 7 3 12 12 5 7 9 5 15 1 2 ", "15 1 5 13 9 12 6 11 1 1 13 13 13 13 1 1 15 15 1 7 ", "9 4 1 1 9 9 3 10 9 12 1"};
    vector<string> lengths = {"8 2 18 1 77 7 40 1 26 42 56 78 20 64 70 80 64 78 5", "5 20 48 51 53 39 53 15 39 20 18 50 70 25 49 54 32 ", "33 2 41 42 18 11 42 35 70 46 71 63 8 19 78 52 50 9", " 55 32 26 5 28 40 64 51 53 21 57 15 61 21 7 72 61 ", "72 79 64 58 42 41 68 78 49 63 53 8 63 52 26 39 53 ", "72 12 76 55 29 11 56 5 61 19 75 36 70 55 21 68 52 ", "3 11 18 55 55 42 50 54 12 66 50 18 78 54 30 23 22 ", "11 61 1 77 2 83 12 31 24 48 62 51 40 10 66 70 1 40", " 79 24 20 33 49 57 41 28 76 48 65 72 62 65 4 78 59", " 63 59 82 79 47 30 48 63 13 15 43 11 30 37 28 42 5", "0 35 55 14 27 21 10 20 60 41 44 65 49 17 68 40 11 ", "6 65 39 27 67 29 31 31 71 20 64 20 1 30 44 1 45 58", " 70 21 59 66 11 47 55 74 82 24 27 68 19 46 46 34 6", "8 69 70 47 15 8 26 10 18 44 34 40 10 71 69 61 39 4", "6 32 1 39 22 39 60 23 11 19 18 11 73 9 44 46 69 35", " 69 6 3 62 44 28 31 1 66 36 35 52 69 16 17 54 8 28", " 51 25 67 60 43 65 46 27 18 34 7 69 42 26 60 32 81", " 3 3 76 1 28 24 67 47 27 79 47 23 47 18 23 3 78 5 ", "40 51 18 55 39 13 1 49 43 67 53 80 39 34 51 9 12 2", "9 53 69 58 6 2 60 81 17 11 50 18 24 22 48 45 10 70", " 52 74 65 54 14 75 29 38 16 59 45 27 42 16 26 27 1", "8 45 65 25 82 28 11 53 23 1 83 41 56 17 18 44 33 1", "7 72 36 81 41 34 40 44 36 77 44 38 44 3 68 27 10 1", "4 8 75 30 46 36 35 71 15 61 77 29 82 1 35 45 56 65", " 29 9 35 10 66 67 37 25 35 3 2 5 53 50 83 21 83 72", " 27 30 25 14 54 51 32 9 38 47 61 25 43 77 38 76 15", " 5 49 57 65 51 45 16 58 59 58 14 1 32 80 59 48 27 ", "82 50 25 39 17 23 55 22 12 64 34 7 68 81 1 75 40 3", "5 1 62 11 29 8 4 36 75 40 79 22 21 74 24 48 58 33 ", "16 52 75 45 1 39 32 29 27 4 76 2 24 24 2 46 1 24 2", "8 38 32 67 43 63 11 65 1 10 68 78 4 49 82 19 11 14", " 18 19 30 80 5 30 32 53 27 69 51 61 76 38 4 4 67 3", "5 70 31 74 25 75 32 25 61 42 63 59 43 52 66 27 2 5", "3 73 36 58 51 64 27 3 53 14 30 71 56 12 5 46 67 13", " 62 78 68 71 61 68 76 46 49 40 13 67 20 57 69 28 6", "5 74 18 45 31 41 20 70 6 34 35 39 4 55 51 46 60 35", " 20 63 1 10 14 63 76 25 81 21 66 51 26 42 23 63 74", " 71 69 31 44 74 7 3 28 39 80 28 55 69 25 38 1 76 3", "7 47 51 2 21 45 14 27 82 64 15 43 7 75 25 51 16 16", " 5 1 24 47 73 23 38 47 73 40 49 19 50 35 37 48 35 ", "25 81 29 70 35 19 67 27 8 49 2 36 41 41 38 7 18 65", " 75 15 62 37 38 36 4 59 53 36 34 58 28 32 43 78 48", " 64 39 62 26 73 6 29 59 16 75 42 46 44 47 68 56 76", " 36 73 60 82 2 70 62 67 72 61 38 43 55 74 5 33 31 ", "59 38 83 37 30 27 76 62 69 44 78 3 47 12 24 34 30 ", "60 64 57 15 60 73 65 54 11 65 52 16 77 31 28 37 62", " 70 32 16 20 7 44 36 34 73 38 21 74 60 48 45 83 69", " 40 16"};
    vector<string> names = {"I AU A S AV M A G AF W V E C EG O BA A AA E KG Y K", " C A O JQ M Q A JS A A QX E U Y G A S O EI I J X C", " M S W IA IS H O U N N SN A GA D W CI KK W O QP Q ", "S TS Q Q K S O A SF E A GU WQ V C C K GI Z SO A I ", "R K RU T A G S Q A U WZ K U K L E D I T X K A B YJ", " V G S A NY N O S J A IA S W N J YQ G A I C II W Y", " Y Y NU ED WW M K WR WK E A S X U SU G G I IN S YS", " C I W U D SS O AL G SM G K Y G W W G A IL I Q M U", " F A Q Z R G O U YO CA C K K A E Z A A HB I A N J ", "P MC N A SS HX A ZW FA Y U Q Q K S PW V Y SP WY I ", "T CT AH C R R N A Y I K QW C OK O YY S L AA VN N U", "S E A G ME T Z HN KI YQ Q CK NM PJ CP GZ AN TX CG ", "T O P P Q P A R U C Q I H A ZN I Q AM WZ A WE IY Y", " O E VA KB O X I A V X O M A V E TY U N S O E O F ", "H W Y N V S A Z U A TK A M J W A CG XM N Q M O U N", " Q Z S VQ C I E Y N Q W YY E HK O EE C W Q U M CA ", "OU I WP W Y GO T X S OO W S W V G O V E A WN RF Q ", "VU I XM XS C W P L AD S V O C U A LV L G XK N Z D ", "X SA HO K YZ X J QO AY A ES AM O A OG I UA C I BX ", "VS G Z A KM C Y Y DA A YN J AN V G J C G H M X I R", " MJ MO V K A XA P A AI J HF EY P QN I Y R G C A Z ", "C G L I AQ M U GN N U CQ V A YK T C F MA Z AT W Y ", "G Q V T TK A I Y U S EA U O K W HB G JO M P S I A ", "K E U HG T G N W G Q KQ I QB EM S K A C J XY M G M", " OS S A Y Y I IR A W N X K W O AN G K YZ S A K JK ", "M CN MI E S U A F AL CC O Q A C EG G GA A Y WW OK ", "J U V E L J O O A U LI GW G WI HE K R M J PW Q I S", "W H A S P SI KZ S VA Y YA GY I L S MS V P O G CH K", "A A K Z O Z V G M IC W SQ YA I T QC N P S T EU Y N", " U A S C A A B S I ZR R S C X A G K K B Q U G O N ", "D A M E MC H N O U CA L YU AM CM M C A A N E E K A", " W UO H MI IR I OB M W ZT O C Y Q W G G A AE J W E", " V P A A AT X K X S D YC S BY E O IF V AJ Y D SX K", " A G SY A Z YY A CR C YS T B K I A Y D IC I KK G G", " Z CE C A U BE U N U K R M A T W I A E K Z F AN TS", " U Y S C Q C U U E Q K W Q V N N Y UY E R O N K T ", "U U O W AR AB A SO W A G N A O"};
    int k = 13;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "I", "O", "X", "AN"};
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    vector<string> x = {"13 3 13 2 12 8 1 7 1 13 3 14 11 14 13 7 13 1 14 1 ", "1 15 7 15 1 15 9 2 1 12 14 1 13 13 10 9 1 1 15 16 ", "10 1 1 8 5 11 13 13 5 5 4 5 13 1 1 9 13 3 4 5 10 9", " 1 7 9 5 6 9 5 9 14 4 9 1 4 9 16 15 5 9 10 13 7 14", " 1 13 7 16 14 13 12 15 5 2 16 1 1 7 3 5 1 11 7 2 3", " 11 9 5 5 15 5 1 9 6 1 3 11 13 5 13 9 11 13 11 15 ", "7 1 3 12 11 13 11 11 1 5 9 1 8 7 2 16 7 1 4 3 1 4 ", "7 9 4 13 14 7 2 13 6 15 13 1 3 9 6 5 1 9 1 9 12 9 ", "13 9 6 2 1 8 9 1 11 3 5 3 5 8 9 12 9 3 10 9 13 7 1", " 5 13 16 12 1 13 9 13 15 9 13 11 7 15 12 15 15 5 1", "3 15 11 7 6 15 7 7 13 9 9 7 1 3 13 10 11 12 11 7 1", "3 8 6 1 2 5 13 11 8 16 1 7 9 15 15 14 15 7 1 5 4 4", " 9 1 7 9 13 5 5 5 13 5 13 12 9 5 7 11 15 1 1 1 13 ", "9 1 1 1 9 16 10 8 1 1 9 11 15 7 4 2 15 5 3 11 11 1", "6 1 8 6 1 1 1 6 16 9 14 5 6 7 10 5 9 13 14 6 3 8 1", "0 1 10 9 1 6 13 1 15 7 6 10 15 2 1 13 5 13 1 10 1 ", "12 12 13 13 5 14 9 8 7 1 12 10 8 15 15 1 15 15 4 1", "1 13 9 1 3 7 11 7 1 9 15 1 13 6 10 15 13 1 2 15 12", " 1 15 3 1 1 15 6 12 10 11 13 3 1 6 10 1 16 1 1 4 1", " 11 8 3 10 1 3 4 1 7 15 11 1 5 5 1 1 1 9 7 3 16 7 ", "2 13 15 1 10 5 4 10 3 9 13 1 16 1 13 9 9 13 1 9 7 ", "6 1 1 15 12 1 16 1 9 5 8 3 1 1 4 1 7 5 1 4 7 15 7 ", "1 15 10 2 3 1 12 5 13 9 4 10 12 7 15 5 11 12 9 6 9", " 5 13 9 9 5 13 1 1 2 5 1 2 1 9 1 6 9 3 5 2 6 1 12 ", "9 1 11 6 1 11 12 10 7 6 1 11 12 16 10 4 5 9 3 7 1 ", "1 6 13 9 15 7 9 11 13 5 10 9 13 1 9 7 4 1 13 14 15", " 14 11 1 3 16 13 5 13 1 1 6 13 11 7 10 5 14 11 9 5", " 9 5 9 1 15 9 3 13 9 1 9 9 3 3 4 7 1 7 8 1 13 9 9 ", "5 11 1 1 1 16 9 1 10 1 11 1 5 12 13 15 7 9 7 3 16 ", "3 4 1 1 9 2 8 1 11 1 1 11 4 15 9 1 9 3 15 10 13 8 ", "13 1 4 9 3 1 1 13 5 2 8 3 5 5 5 4 5 4 11 11 3 16 1", "4 15 9 9 9 1 9 1 3 2 6 6 6 9 4 9 13 7 11 15 8 4 4 ", "10 13 13 8 1 9 9 5 1 14 16 7 2 10 1 16 9 8 9 1 1 5", " 7 16 13 6 4 7 11 12 3 8 3 10 1 5 5 1 6 3 1 5 11 1", " 5 10 7 15 1 1 10 10 15 4 11 3 5 11 13 3 7 1 2 13 ", "9 9 3 5 1 16 1 9 14 6 9 14 6 7 8 9 15 9 16 11 7 5 ", "4 6 6 1 14 2 7 13 1 14 13 3 13 5 1 1 13 9 3 13 7 9", " 8 7 12 2 2 8 1 1 12 1 7 10 5 1 6 11 13 14 14 1 3 ", "8 1 7 9 13 7 14 6 11 7 8 5 14 2 15 10 9"};
    vector<string> y = {"5 5 11 3 5 11 1 13 13 14 3 1 13 16 13 15 13 15 1 1", "4 5 1 14 11 1 7 1 11 11 3 5 15 7 7 15 13 4 13 7 7 ", "9 9 1 1 1 15 4 13 10 5 1 16 1 3 9 11 14 7 13 1 5 9", " 8 3 1 4 14 13 4 4 3 9 13 1 5 1 9 10 4 4 5 1 12 1 ", "1 7 5 3 3 12 14 9 5 1 9 5 9 1 14 1 15 1 9 15 1 13 ", "7 5 9 7 9 1 1 8 3 9 13 15 9 15 5 9 1 13 13 12 6 14", " 10 1 1 15 12 1 1 9 2 9 5 5 10 3 12 1 9 9 15 15 9 ", "9 15 1 5 3 9 16 13 4 4 3 5 3 1 9 3 3 5 4 7 15 4 3 ", "13 4 6 1 9 1 1 1 11 2 14 9 7 16 5 10 5 10 13 11 15", " 8 15 15 5 8 1 16 10 14 15 15 13 3 7 1 6 7 2 11 11", " 7 13 3 12 15 9 5 15 6 9 13 15 3 16 6 15 7 13 7 8 ", "10 15 5 14 2 9 2 7 11 12 5 9 15 1 9 3 5 5 2 4 11 1", "6 1 9 5 1 13 6 7 14 15 9 12 1 9 5 4 5 12 7 9 5 4 5", " 4 3 4 13 16 15 3 15 11 6 7 15 9 13 1 7 11 1 9 15 ", "9 8 1 10 5 11 9 5 7 13 13 11 13 9 15 9 9 15 7 9 6 ", "16 9 11 11 1 9 10 8 1 1 11 11 7 15 13 10 5 7 11 16", " 1 9 12 14 7 11 1 8 1 1 14 1 1 16 5 15 3 1 1 9 14 ", "1 7 15 6 13 13 1 5 11 7 15 14 7 15 1 3 1 8 6 1 11 ", "13 7 9 13 9 8 8 7 13 9 12 5 1 13 3 2 5 12 5 7 8 9 ", "1 1 9 1 16 10 16 9 1 3 14 1 7 1 10 16 13 1 5 12 10", " 13 12 2 3 1 9 13 8 1 9 1 16 8 1 16 9 6 10 1 9 6 5", " 11 1 1 11 15 11 11 8 1 1 9 13 11 1 6 1 1 9 1 4 1 ", "15 5 13 9 11 3 3 16 13 1 11 11 2 5 5 1 12 16 11 9 ", "1 9 9 3 14 13 16 5 10 5 5 13 15 7 10 9 1 2 3 15 13", " 11 9 1 3 1 1 15 9 1 1 15 5 14 13 16 12 6 9 2 1 9 ", "5 9 12 9 9 15 11 5 12 5 9 14 1 13 10 9 1 3 2 2 3 6", " 11 1 11 5 1 8 6 15 6 3 1 11 3 1 1 3 8 8 9 7 3 6 5", " 11 1 5 1 1 10 7 1 9 5 1 1 3 2 14 15 13 1 13 13 8 ", "8 7 9 1 1 15 1 13 1 15 9 5 1 3 6 7 16 9 8 3 15 1 4", " 5 11 15 9 1 13 13 15 12 5 9 13 7 13 13 9 5 9 13 3", " 11 4 1 5 7 9 3 5 9 3 8 9 9 15 1 5 13 6 3 12 1 7 7", " 15 1 2 6 6 1 13 8 7 1 1 9 14 13 3 14 3 9 1 8 1 3 ", "2 1 16 12 1 7 10 3 13 5 9 3 7 13 13 3 13 13 11 1 1", " 7 15 5 9 3 15 3 6 16 10 8 12 8 11 3 13 15 5 15 1 ", "1 9 13 5 14 10 7 5 15 3 8 3 9 4 3 8 15 9 1 1 10 5 ", "1 8 11 9 2 1 7 12 9 1 7 9 1 11 13 14 9 9 1 15 10 1", " 5 1 8 7 1 11 15 15 7 15 13 1 9 13 14 9 3 5 5 9 15", " 3 7 1 4 5 10 2 9 1 1 13 1 5 1 1 13 1 13 16 1 7 1 ", "1 9 6 12 9 3 1 7 5 10 10 11 9 11 14 12 14"};
    vector<string> lengths = {"25 83 40 68 82 11 18 39 82 60 29 74 66 58 51 42 13", " 40 31 72 1 69 45 26 21 36 75 47 12 45 68 43 59 68", " 77 81 38 52 75 30 37 46 10 10 65 51 16 46 76 2 58", " 14 6 56 20 52 54 78 60 14 56 35 76 80 43 50 64 67", " 12 26 9 17 53 53 2 11 10 81 11 19 50 30 68 52 5 2", "2 24 44 40 31 2 30 38 73 39 70 69 54 46 1 67 44 81", " 50 53 42 29 62 73 49 69 4 22 83 67 19 8 16 74 57 ", "11 77 5 63 80 2 47 27 1 37 83 41 35 10 61 49 23 31", " 67 43 1 11 70 1 19 9 31 15 62 45 42 58 42 19 75 3", " 47 78 63 32 17 79 42 28 69 69 74 13 80 40 68 65 3", "7 65 83 26 51 70 65 21 33 78 1 3 25 6 29 73 65 73 ", "14 8 10 79 17 37 52 12 4 42 81 14 14 77 26 61 24 5", "6 3 46 56 51 66 31 19 18 13 30 45 27 52 22 18 29 5", "3 1 50 19 4 5 9 22 74 75 16 76 73 53 14 36 47 11 1", "1 82 26 26 32 36 4 43 8 72 51 71 14 57 33 3 72 68 ", "73 4 27 59 54 78 44 28 1 82 44 48 27 1 61 43 16 10", " 43 8 4 15 77 50 13 26 8 63 35 25 82 70 30 66 27 2", " 41 75 32 56 27 46 74 41 21 34 81 22 49 46 23 53 2", "2 57 8 31 67 47 25 75 9 3 67 5 62 26 16 50 30 60 3", "1 45 76 18 32 39 82 35 23 10 11 27 1 70 43 76 17 4", "3 32 40 28 60 58 11 37 59 18 44 6 71 68 65 28 55 3", "4 2 39 33 61 3 37 49 37 62 45 11 83 23 8 23 14 81 ", "29 69 20 78 32 34 3 5 24 12 17 28 30 14 60 17 44 4", "9 36 13 71 52 13 74 6 22 41 42 75 83 73 12 45 73 2", "8 7 75 7 77 49 66 33 10 53 40 73 49 59 76 37 66 62", " 58 53 42 71 17 45 15 19 63 4 31 29 62 66 16 45 66", " 81 52 5 31 65 26 47 34 25 22 57 6 60 7 45 32 17 7", "0 23 22 33 30 38 44 13 43 33 63 30 44 12 1 64 55 7", "9 59 64 39 58 62 43 4 39 78 40 1 61 13 8 67 79 76 ", "43 55 50 80 56 19 72 25 69 11 17 48 21 77 77 74 33", " 44 65 44 34 65 10 70 78 55 64 74 8 53 78 52 57 35", " 18 60 68 3 82 73 12 39 50 57 63 37 41 63 29 35 33", " 38 1 9 40 18 5 77 52 63 74 15 71 34 32 41 31 53 2", "4 52 10 48 13 32 7 75 81 67 17 56 3 52 79 22 23 53", " 71 60 57 6 43 25 57 59 63 14 18 23 38 82 51 69 50", " 12 80 31 32 21 75 76 62 7 39 83 44 10 17 38 41 48", " 3 43 23 65 23 14 53 58 61 35 33 71 9 46 62 69 65 ", "33 64 40 83 67 74 12 5 67 7 13 25 38 20 39 34 25 5", "4 55 1 70 67 53 54 53 39 73 41 16 48 16 81 45 56 2", "4 9 4 52 44 9 61 82 47 30 5 1 48 6 58 56 1 38 49 2", "6 11 12 3 79 36 52 26 53 43 41 4 49 53 4 60 75 60 ", "1 1 34 58 4 35 9 37 66 31 44 61 7 40 55 6 61 69 80", " 67 31 79 63 51 19 44 17 81 50 43 14 46 45 62 16 4", "3 20 75 19 23 67 13 46 51 63 81 57 28 80 9 15 61 3", "4 6 81 43 57 54 68 79 38 45 26 69 46 6 2 31 48 34 ", "67 18 73 22 64 59 63 35 24 66 3 20 59 29 30 15 7 5", "5 60 81 41 26 45 57 1 52 81 27 74 75 25 5 53 55 25", " 37 42 16 56 57 1 59 31 83 62 35"};
    vector<string> names = {"DR K M I V W C W Q O U D S TM A V Y Y AE A JZ Y U ", "G OY U N L C U CH S KY C I O Y R G G KC X U C G A ", "AK CE A I A K X HA HU P Y CG M J M Y H J M M C B U", " I O B L LC PF C W EU G I IE N O U O X K FE U IK I", " ZE W UN N B S Y L I C GM U Q AE MO E VC B C GZ A ", "X B XW Q G EA E A T U B E G M MG S K U H I U U K P", "Q S F M S Q Q U E A Q A AX W N N M WK J A AQ X A G", " W XK IT H Q K C S EG F A H S M Q C A I M M QG C P", " MB E G EO OW IE EX TU U W A U W Q E G M B CP G T ", "IW W B P K H KA O O K V WK Q N SW I GA S KE I D L ", "N AK G I K I G W IY AI U Q A Q V G O K G I F I A N", " O I YD GU M AD GM I Q EO W G EY S A A A Y N I WI ", "WQ L E G VO A G C W EO SD Q A CK K GS G W L X U A ", "KB G O XQ KG K L F Y QY W UH BL Q G B O U GE IX C ", "A U A F I IW A M YH C G B E B KM Q A Q H A D M M K", "I G Y YC AQ C MG U S X H S QE P M AJ C I IY C V C ", "U K S I S F E Y BU G F Z J O SZ C I O G Y W YQ A A", " C A V V CK M Q X EA BG MC AY A NQ I A Q O A EI M ", "E SO E HQ N EU O OI U S Q WW N UC EH C JH ON T BO ", "GW K Q O C K S G W A U BY S E A Y U A U I K M SX N", " A U Q H D E K O K O G S OA X D M W X BE U A E N Q", " V C GD M U Y MO A C ZF W DR N A I Q A S U S II B ", "W M NM G BB N I V R A N A EG A A S D Z U X E S Y A", " Y H Q A W I XG V A DO C ES C IC M XM JQ Q Q E AO ", "H U K T V RX S U H N YI D W P LS M M A L C S E T Y", " J WY H Q OE T G G QA V N SY BJ HC AK W D A TT O A", "G UG L A E X H K C G MI A A J A QS M JC A YO A R E", " B C S A F M A JS IN D K K O I E O Y A A C Y KY O ", "K M IP Q I A W R M T E MH A M F N E Z Z W GZ M K G", " GE M Q C S Y E AB RS R WP W Y E M O Q O K AK AP K", " M I W WI F K V SH AC IP M UY MV A K NS X X Q V S ", "A A M F Q E G UW W Q U QF O L CY A A A F S S A OP ", "PU A A I K C E E L RI A H YQ C VA I Q C N O D AC Y", " X MB S A K V D M O K G G M O G X E Q I S MA M UU ", "V CS E AN W Z A Q G V N W Y S UA QN E N Y E A K K ", "R U Y Y S E Q UA MC C T Z S A GE RU NS Y G S M O R", "W WE Y C IA NQ C F CW S A G X AI Q Y Y Q"};
    int k = 40;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    vector<string> x = {"2 13 1 5 7 1 1 9 1 15 15 2 12 10 1 2 5 7 13 9 5 13", " 9 13 15 12 7 11 1 9 6 8 2 7 12 11 1 8 8 7 1 2 13 ", "1 10 10 1 3 13 5 7 1 5 5 1 11 1 7 1 14 1 1 13 5 4 ", "9 1 1 4 1 1 5 5 8 1 7 5 9 4 13 3 16 15 13 1 3 9 15", " 16 15 16 3 15 15 9 9 1 1 5 13 1 9 1 1 4 1 9 16 1 ", "6 6 15 5 10 13 1 9 1 3 15 13 11 12 6 3 16 5 9 5 11", " 3 15 1 9 2 13 1 5 10 9 11 9 15 1 7 7 1 13 1 9 5 1", "1 9 7 3 6 8 15 5 14 8 1 1 12 9 15 12 3 12 1 3 13 1", "5 1 4 1 9 11 7 13 11 11 1 12 12 13 1 16 1 9 4 11 1", "1 9 1 9 4 14 3 15 9 2 11 11 4 11 2 9 1 12 15 7 10 ", "4 5 9 15 8 13 16 2 15 1 7 8 3 3 5 10 13 8 1 11 4 3", " 1 1 9 3 13 9 8 1 11 7 5 5 4 1 16 1 3 1 10 5 7 9 5", " 1 7 7 7 1 7 1 1 9 6 11 5 10 13 4 13 13 3 5 3 9 9 ", "11 15 1 9 9 2 7 3 1 1 9 4 3 8 9 13 9 9 1 3 15 14 4", " 7 1 5 7 9 1 5 1 12 3 1 9 9 9 9 7 3 13 9 9 13 9 2 ", "16 1 1 8 8 5 1 1 11 5 12 6 5 11 1 1 11 15 7 9 9 5 ", "1 8 11 15 9 8 12 10 5 9 11 9 3 5 11 11 9 5 1 10 13", " 9 1 12 12 7 3 16 13 5 12 9 4 15 1 13 9 2 5 3 1 1 ", "16 4 16 14 15 3 5 11 15 1 3 9 9 9 11 2 5 6 13 16 1", " 4 10 1 3 11 9 12 10 13 7 2 9 8 1 1 1 10 8 14 6 7 ", "2 3 9 5 15 1 3 6 11 7 11 1 5 9 7 9 3 15 4 15 14 13", " 13 9 10 3 9 5 5 2 2 11 3 13 8 3 9 9 15 5 9 15 13 ", "9 11 1 7 1 14 1 14 9 7 1 6 9 11 15 3 1 8 3 5 5 9 1", " 1 15 1 1 6 5 1 13 3 6 13 1 3 1 5 16 15 1 1 1 5 3 ", "8 15 4 1 5 11 1 1 13 5 1 1 5 1 8 12 1 8 5 6 1 12 9", " 13 7 3 7 7 1 3 1 3 13 9 1 9 8 10 3 16 10 6 1 9 3 ", "15 9 15 1 1 9 1 1 12 6 7 1 15 13 9 11 1 3 14 14 1 ", "1 3 3 15 16 9 9 10 11 1 2 1 12 3 11 12 1 1 4 1 10 ", "13 1 5 14 8 13 11 13 1 13 13 8 7 5 1 13 5 1 6 13 1", " 5 12 5 15 6 1 1 10 1 1 1 4 10 15 1 1 9 11 14 7 11", " 9 1 11 6 13 11 7 3 15 4 5 1 13 4 3 13 3 12 9 13 1", "3 5 9 13 9 14 9 12 1 1 3 16 6 16 1 13 4 10 9 9 12 ", "6 9 1 5 5 6 7 11 1 1 5 4 1 16 15 1 7 1 15 10 1 8 1", "0 11 5 9 13 9 7 7 14 15 7 6 3 5 14 11 13 1 5 1 15 ", "7 9 3 9 11 9 9 7 1 1 15 12 1 6 5 9 7 11 9 16 10 9 ", "9 13 1 3 1 15 13 4 3 2 14 3 7 10 15 16 11 9 8 12 9", " 7 7 3 1 3 15 7 13 4 4 13 15 5 11 13 4 15 15 5 9 3", " 13 9 6 7 1 13 9 2 8 12 1 5 5 1 10 7 12 15 1 8 9 1", "3 14 3 13 15 13 2 4 1 13 1 5 9"};
    vector<string> y = {"1 1 5 12 7 14 9 11 1 7 6 11 9 9 1 3 16 1 13 2 1 5 ", "15 3 1 3 15 15 16 7 13 1 1 9 1 1 2 10 3 13 5 3 1 1", "0 14 14 13 1 5 1 7 9 1 13 1 16 14 9 7 1 12 1 6 1 1", "4 13 9 13 5 2 9 10 5 1 7 5 13 13 5 16 11 13 1 2 7 ", "12 13 9 3 1 13 1 13 13 7 8 9 4 13 14 3 15 14 11 1 ", "1 6 5 15 13 1 5 1 3 1 1 11 14 9 9 7 14 13 8 9 10 1", " 8 8 11 7 5 16 13 1 15 15 9 5 9 15 10 8 5 3 1 9 8 ", "14 2 8 10 11 9 1 5 9 11 4 1 15 1 10 1 9 14 1 5 1 1", "3 5 12 7 3 11 11 16 1 13 9 11 9 7 10 1 1 1 3 11 15", " 16 1 16 7 11 13 5 15 15 1 1 11 1 16 14 5 5 5 13 1", "3 5 12 10 5 11 2 5 16 9 14 6 12 3 13 1 5 9 8 12 10", " 7 1 13 1 3 1 5 4 7 1 9 1 1 2 1 5 6 9 7 9 11 9 11 ", "9 1 15 9 1 9 13 2 9 8 5 12 15 2 9 13 1 1 6 2 9 5 1", "2 13 9 5 9 1 5 4 1 3 2 13 11 13 1 1 1 11 1 9 5 3 9", " 1 12 11 13 6 8 11 9 5 1 1 1 3 3 9 11 4 13 12 11 9", " 7 11 13 9 1 15 13 1 11 4 1 3 16 16 8 13 13 7 1 3 ", "3 10 5 14 5 13 15 15 9 13 13 1 11 4 9 13 1 6 1 8 5", " 7 1 15 9 3 14 3 14 5 9 1 10 5 3 5 1 15 7 15 1 4 1", "1 15 9 13 13 11 11 1 4 1 14 9 1 3 11 7 13 16 11 1 ", "1 15 13 1 5 1 14 5 5 5 1 7 13 9 13 5 15 14 10 1 2 ", "4 13 9 3 2 5 7 1 8 11 15 4 6 7 1 9 8 6 1 15 16 6 1", " 11 9 15 1 9 4 2 13 7 7 9 2 1 1 1 9 12 3 1 9 1 9 4", " 8 7 10 13 16 1 7 13 2 3 1 15 1 1 7 7 9 3 14 10 11", " 15 1 16 11 9 1 1 6 12 7 1 13 15 5 13 15 9 14 13 1", "1 9 2 1 2 5 13 1 15 6 5 9 13 16 2 1 13 1 6 9 1 9 1", "5 5 2 15 7 1 16 12 5 7 9 1 16 8 9 9 9 7 11 9 5 9 1", " 13 14 12 7 10 16 5 15 11 4 9 1 1 3 13 8 3 1 1 14 ", "5 2 1 11 15 16 8 1 6 11 7 3 13 1 6 11 14 7 11 1 9 ", "5 1 3 9 5 11 11 5 9 6 1 9 7 13 2 8 9 16 13 11 11 9", " 6 16 7 12 7 3 8 3 3 4 6 15 16 9 1 11 14 5 13 15 1", "4 15 13 10 11 1 4 9 5 15 5 3 1 6 1 1 9 11 3 1 3 6 ", "14 11 1 15 1 3 1 4 8 5 15 9 12 13 15 1 9 1 1 5 5 8", " 12 12 15 1 5 9 1 4 5 1 7 1 9 13 12 2 13 5 1 1 5 7", " 7 9 11 11 13 6 5 3 13 1 9 9 3 1 9 9 1 8 9 4 2 15 ", "12 13 7 5 6 5 10 4 3 9 13 11 7 9 5 3 4 6 3 9 13 4 ", "3 6 1 9 13 8 7 7 1 6 9 11 5 8 14 13 7 15 1 8 9 6 1", "5 9 9 15 5 1 7 11 9 5 1 1 1 13 9 15 1 7 1 9 9 11 2", " 3 14 1 1 11 1 14 2 13 13 11 11 12 5 1 2 13 2 5 13", " 1 3 1 1 1 13 4 9 1 11 9 13 14 5 11 11 1 4 3 1"};
    vector<string> lengths = {"47 1 56 82 73 64 46 19 13 52 48 59 69 11 19 56 75 ", "50 13 72 45 21 42 50 56 50 53 23 69 30 67 54 46 74", " 56 40 24 41 48 47 19 74 4 6 1 80 81 76 67 81 24 1", "2 27 56 22 79 25 58 71 23 76 7 4 38 12 77 46 49 51", " 65 26 31 45 49 42 25 76 67 61 39 57 41 83 71 17 2", "7 5 64 10 28 70 3 70 13 54 68 1 23 52 33 6 76 42 4", "3 52 55 80 71 43 14 76 3 56 49 40 47 13 50 26 48 4", "6 47 27 41 79 62 80 73 47 40 81 3 76 78 43 7 40 23", " 74 11 20 31 53 4 9 68 36 64 38 5 78 5 25 47 83 56", " 10 58 45 4 50 49 9 60 62 21 2 50 12 75 40 56 19 1", "5 29 22 80 2 13 57 40 77 64 14 77 39 67 78 22 72 3", " 40 58 2 42 48 13 83 63 12 41 31 17 79 74 1 14 44 ", "55 60 16 51 1 68 70 4 31 61 61 26 79 1 40 5 19 32 ", "61 52 12 6 22 16 69 73 19 38 70 39 75 2 4 55 61 79", " 63 55 12 78 77 61 67 18 20 3 14 69 22 56 66 73 56", " 1 50 48 30 48 25 57 16 33 69 50 52 47 51 68 12 34", " 32 58 73 52 68 42 44 46 60 16 1 83 37 80 55 53 47", " 78 4 31 71 57 3 19 48 10 57 16 62 44 76 17 7 32 3", "8 32 75 30 77 58 34 27 55 46 10 73 49 16 6 26 71 2", "0 18 25 45 82 73 37 12 21 31 18 76 30 32 57 18 61 ", "40 61 50 23 18 37 46 67 79 32 15 83 70 83 38 60 61", " 71 34 1 19 50 31 69 62 45 39 40 67 73 68 22 73 3 ", "27 69 77 16 32 13 6 50 37 34 63 6 58 53 42 63 12 3", "4 27 44 57 31 20 38 77 7 80 10 6 81 27 29 38 26 60", " 76 72 17 71 70 76 26 63 76 48 21 49 35 18 67 56 5", "2 77 53 18 14 1 30 66 35 60 79 74 40 11 6 73 41 3 ", "55 45 40 38 2 50 46 8 29 44 6 4 32 48 25 33 70 76 ", "3 15 22 20 40 25 27 14 8 1 3 33 69 69 83 39 41 65 ", "21 76 37 15 20 19 13 79 40 1 48 72 17 23 42 16 7 3", "1 30 60 45 56 76 52 77 15 51 28 50 32 67 57 15 30 ", "61 60 53 51 43 71 15 16 78 9 51 16 14 56 46 15 7 3", "8 20 80 45 78 69 30 27 74 54 62 56 45 9 61 41 58 3", "5 17 40 4 36 2 24 74 64 80 22 43 23 72 70 1 1 63 1", "4 55 31 79 62 72 15 28 57 63 13 69 17 12 65 24 54 ", "4 69 67 78 38 12 24 15 19 50 77 75 22 1 3 70 45 1 ", "53 55 14 73 79 63 2 13 27 1 53 24 30 55 43 80 80 2", " 80 60 31 21 30 83 44 18 77 34 18 74 42 31 25 56 1", "2 58 40 51 6 50 5 83 16 83 40 27 68 41 36 60 76 24", " 9 25 8 35 4 32 82 27 51 9 77 18 12 57 35 1 34 50 ", "3 4 46 15 80 45 39 37 54 62 10 79 69 65 5 71 50 65", " 78 14 75 3 41 61 29 3 75 10 43 50 36 80 24 14 48 ", "58 19 8 77 59 81 79 41 36 65 36 5 65 55 50 76 49 1", "8 14 19 17 77 46 75 14 77 51 2 23 14 67 67 77 7 56", " 65 52 67 49 43 76 19 18 38 34 24 74 42 17 37 69 7", "0 53 28 21 55 28 59 26 45 45 37 71 70 71 44 59 43 ", "77 40 1 24 75 78 26 77 43 48 46 68 59 56 40 67 20 ", "41 52 14 40 43 64 2 30 45 1 57 28 19 60 57 28 22 1", " 38 67 74 59 35 77 11 61 42 8 37 21 9 25 24 56 55"};
    vector<string> names = {"O C UY U A Z W S O WV T C QQ K OG AG C GU DF I E K", "O AE K J H ES AA K H I C G Y DC I T U QN AC U SD X", "C C D M WK K US M Q A D E Q E A IO M K SA W A D SO", " GU IR AG T JY I Q F B V YM K O O Y C E OS A M W M", " IC YQ W N O O Q XK Q V W YG O G FM A CS YW I T K ", "Y N NU LN S K O S A Q K W Y F KA A E O W E AA A CD", " PA G Z R A IS I R AA Y C PY K M E R X EE J D D E ", "R MA W A K A GB T J GY AF X C X A Y MA KM Q M K M ", "O W Q B W C A C S AV Q C OC S L XA V C G K R NR MR", " Y Y A F IP K MA A AJ Y M S Q O Q Q KQ GS NC G T H", " UE J EI E D YJ I Y U C M G A CQ QB K K Q UV W S M", " IJ K C D A S U I U YQ E C Q SG KG W JU U GY W VG ", "V U S E H GG KD W HA AM O G E O A W J NI Y A J W G", "K A G S NL EA K KA Y Q Z M UU M T G E A JA M Y N M", " A O K R Q I I S T Z OA O GU Y A A S M EQ U N B P ", "Y WR N A TL S M KE KA P G W W E I C A K WS KW U YE", " I RQ A EW H MA Q A Q W E P H G FO A W I A C C K G", " F A Y ON BO A S Q Y YQ WU TA MO A B Y MA E J UG K", " S J TG EZ W H W C I I K I Y G A G Y U K Z C Z A A", "K W WU UY C B EM D G GL V K U A WL Y N O G I O M G", " J F S E RA K I L C X Z AJ U O Y I M IT GU O SF C ", "Y N E IW A U C Q Y MR LQ EI V K P B AW KU G S A N ", "QM K H U AG K S AC OM CS A Q W U A A BX GQ Y O Q Q", " K OL T Z U D A Y Q AU A A A D P W VA C Y J QC Z X", " UN S N K Q Q AS N A U G O GO YM O D I W R BN E O ", "Y O Q AG G Q IE A OI DY X SG O M G S M U ZG K GO U", " W ZB Y E U AU S Q B ED W N N YZ W L G D K Y I C S", " X KA V F C C E O KC D O R S O K T R G AJ EI SU I ", "H CU MU AX C X W I AI AU W Z Y M A G U KA M C M E ", "S C J A I HQ FW AK Q DM A EI Y AI Y ID T O MS QO M", " QW Q I C P E ER F O Y MW E X C K S N H N Y AN GH ", "N M Y W V M P EE S A T K SQ A XU D Q M Y S L O ZP ", "E A Q S K I EM MA N QM A Q U OU AT D O C J QC BN Y", "Q B O ZT AW I U K OO I M A H WV IS C U A Q C Q NT ", "QY H Q C V MB KW E M X MY C S W J B FS UK Y T Q M ", "D C C R Y UX AO T LX K I I X O C SA B YD Q A G V O", " AY Q UM M AK W JW B C Q EK S A F E D Y E IA R QX ", "CF LK AK G H G O C U Q OI UQ A"};
    int k = 38;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    vector<string> x = {"10 5 1 8 3 12 9 1 1 10 14 1 9 3 5 5 7 1 10 2 1 1 3", " 10 3 3 9 9 2 2 1 10 5 1 1 14 9 9 12 1 11 3 9 1 15", " 13 13 1 10 5 5 14 1 15 5 15 15 12 11 11 16 3 11 1", "3 9 11 13 13 6 9 9 10 9 2 5 15 15 9 2 11 16 1 13 1", " 5 1 5 8 1 9 15 5 7 10 9 13 11 15 5 15 11 9 13 1 9", " 3 9 14 9 14 4 5 9 7 9 11 1 1 6 1 9 9 1 16 13 8 9 ", "9 5 9 15 1 11 1 1 4 9 3 9 11 4 5 4 4 1 3 2 8 1 12 ", "11 12 16 10 9 9 15 11 10 5 3 16 5 9 10 13 4 9 1 9 ", "9 1 3 2 1 11 12 1 9 8 13 11 12 13 1 5 15 1 9 13 3 ", "13 5 7 3 12 9 9 16 1 14 15 9 4 12 7 9 15 12 5 1 1 ", "15 12 3 1 8 10 13 13 5 13 6 7 15 1 1 11 11 7 4 3 5", " 3 7 7 5 11 14 2 1 16 14 1 9 9 1 9 3 1 16 1 13 1 1", " 13 14 16 5 7 10 7 15 5 16 13 13 4 4 1 13 5 5 1 7 ", "12 9 2 1 1 14 16 7 14 9 6 14 8 3 1 16 5 1 13 13 1 ", "1 5 15 5 14 1 11 7 11 5 7 5 6 1 11 11 3 16 10 9 9 ", "11 16 11 10 10 15 12 1 7 11 11 12 15 9 2 5 15 3 16", " 13 13 14 16 4 5 1 8 15 3 3 3 16 5 2 16 11 1 1 11 ", "13 8 9 2 7 14 1 9 15 2 10 8 14 8 12 1 3 14 12 1 9 ", "1 3 13 9 6 5 1 1 5 7 14 1 1 1 9 9 1 11 3 5 5 5 9 9", " 11 3 1 7 6 11 3 16 1 9 15 9 15 1 11 11 13 1 1 15 ", "7 12 9 5 10 5 5 13 1 13 16 5 16 12 1 9 13 9 9 9 11", " 9 1 12 1 5 7 1 10 1 15 1 9 13 1 8 13 1 6 5 7 1 1 ", "5 8 13 1 9 13 1 13 7 7 1 1 13 13 13 1 10 12 14 1 8", " 7 13 13 1 1 1 5 1 5 12 1 15 2 9 15 2 11 13 6 9 11", " 4 9 1 4 16 15 11 1 3 5 1 5 12 8 9 13 11 10 13 9 9", " 1 13 5 10 6 9 1 9 8 5 5 7 13 9 12 11 13 9 9 16 1 ", "13 2 5 11 13 9 7 13 14 13 14 1 1 1 9 2 7 13 11 1 1", "5 2 6 9 5 6 1 1 9 9 1 13 1 1 15 1 1 16 2 8 12 1 7 ", "1 3 1 9 9 13 6 11 14 6 11 13 15 4 11 1 1 4 7 12 8 ", "1 9 1 12 5 7 9 1 6 14 11 1 11 5 7 1 5 1 2 10 13 12", " 9 8 15 1 5 5 1 16 9 14 15 1 5 7 1 1 14 9 1 15 16 ", "15 9 13 10 7 6 15 7 16 9 1 1 6 3 1 16 16 10 1 11 1", "3 1 3 13 12 1 3 2 1 7 15 11 7 15 2 15 3 5 5 15 14 ", "7 1 1 11 1 13 11 16 12 8 12 4 12 12 1 16 9 6 1 2 7", " 11 15 16 13 5 9 1 13 1 1 9 2 1 3 4 1 14 1 5 9 2 5", " 1 9 12 3 1 6 10 3 11 2 11 15 9 5 1 3 13 13 9 13 9", " 15 3 15 13 5 11 3 15 1 11 10 1 15 1 1 13 11 7 16 ", "1 13 1 9 10 13 8 7 3 12 1 1 5 9 15 7 13 7 7 9 12 1", " 5 1 1 10 2 8 12 10 1 1 8"};
    vector<string> y = {"1 6 11 4 7 14 5 9 13 3 13 1 13 11 14 4 13 13 13 13", " 5 1 9 5 4 4 1 9 11 1 3 13 9 12 15 8 9 13 5 1 3 15", " 13 16 1 16 11 3 1 1 3 6 5 1 9 1 6 13 9 14 1 2 8 7", " 13 9 11 15 1 1 11 15 1 3 3 5 14 9 5 8 4 1 5 1 15 ", "5 1 13 12 7 1 7 5 1 2 5 15 3 5 6 14 9 4 1 8 5 7 14", " 3 7 7 1 13 1 9 13 11 11 7 9 7 8 13 9 10 1 1 5 2 1", "2 12 13 1 4 1 13 5 2 5 15 1 2 13 3 9 9 9 5 15 1 7 ", "15 9 11 11 5 13 1 12 11 7 5 5 3 15 13 11 9 9 16 3 ", "10 1 11 5 11 4 4 7 15 1 9 1 5 2 2 4 13 1 7 13 1 8 ", "8 9 11 1 11 8 13 5 1 12 1 13 13 6 1 5 1 5 9 9 10 5", " 14 13 3 7 10 9 10 15 11 9 4 3 12 5 9 13 14 9 5 16", " 5 14 16 5 1 15 5 8 1 5 6 5 11 9 10 13 11 14 13 8 ", "1 7 15 14 16 15 8 16 5 6 9 13 10 11 11 3 5 9 10 1 ", "13 5 6 7 15 14 1 1 9 1 7 11 16 1 3 3 9 1 3 5 1 8 1", " 13 8 14 1 2 14 7 10 12 8 1 9 2 9 5 10 1 1 8 1 1 1", "6 14 14 16 1 9 1 3 10 13 6 15 9 13 9 13 1 1 9 9 7 ", "9 9 7 1 1 16 11 13 9 9 8 15 5 3 12 13 1 15 1 1 1 1", " 1 16 6 12 1 3 13 13 11 3 8 8 1 1 9 9 1 13 1 10 11", " 6 2 1 10 9 1 6 9 16 5 8 1 13 7 8 11 11 3 5 13 9 4", " 9 15 1 1 15 9 13 9 13 7 7 13 3 1 6 5 7 11 1 1 9 1", " 5 5 13 11 9 7 14 7 5 12 8 15 14 10 8 2 6 7 13 11 ", "11 13 1 9 7 15 1 1 9 2 8 6 13 1 9 13 1 9 3 11 9 6 ", "16 1 1 13 10 5 9 10 1 5 15 3 8 9 7 1 3 1 5 8 9 1 5", " 9 1 1 1 15 5 16 13 11 9 3 5 5 2 1 12 13 1 13 5 9 ", "5 9 13 3 8 7 12 5 4 6 5 15 11 16 16 15 1 15 5 11 5", " 6 8 3 5 9 6 1 7 9 5 9 3 11 7 13 15 15 9 13 15 7 1", " 10 16 13 10 5 5 10 13 11 3 9 9 9 9 7 12 12 8 14 1", " 6 1 13 1 1 11 1 9 12 12 8 1 13 9 11 9 10 1 6 5 9 ", "14 9 11 1 3 1 14 10 1 13 8 3 16 16 9 8 14 9 2 10 1", "1 15 1 5 15 1 1 7 1 5 6 9 12 16 5 14 9 1 4 13 9 1 ", "9 9 14 8 10 12 13 13 4 6 10 13 11 13 5 9 7 14 12 1", "0 6 8 14 1 13 15 13 13 1 8 3 9 9 13 15 1 9 11 1 9 ", "9 13 9 11 1 1 13 15 8 4 16 8 9 10 13 9 2 7 1 9 1 1", "0 8 5 11 2 15 6 5 3 1 3 1 7 13 1 1 10 8 11 5 15 3 ", "3 9 11 1 2 3 1 3 5 13 6 1 4 9 13 2 1 9 16 13 5 2 7", " 12 13 15 5 13 1 16 11 13 7 3 9 8 7 1 12 13 11 10 ", "8 9 5 1 4 13 15 5 14 1 5 5 9 5 6 5 1 1 9 7 1 14 1 ", "14 1 12 1 1 9 1 9 13 12 1 2 1 1 1 1 1 5 13 1 13 2 ", "16 13 1"};
    vector<string> lengths = {"75 41 4 9 28 19 68 74 38 30 68 54 15 16 47 77 69 1", " 23 29 40 78 45 47 57 16 78 4 69 79 25 80 47 47 46", " 34 17 43 76 16 65 78 36 65 45 55 80 46 51 73 52 7", "9 83 32 27 69 16 31 23 41 44 2 28 83 29 76 27 38 2", "3 35 9 79 41 18 41 46 70 83 17 60 65 66 34 30 23 4", "6 81 33 4 28 47 49 77 37 76 54 19 69 48 48 59 4 39", " 40 16 24 3 55 48 75 21 41 47 63 63 43 54 37 42 59", " 44 47 35 26 35 68 1 15 1 48 6 66 47 25 72 13 68 7", "4 78 36 28 72 18 10 32 36 39 13 78 22 55 37 78 68 ", "40 54 82 81 36 1 31 17 10 70 41 76 25 45 24 8 61 3", "6 7 27 39 37 64 1 43 27 37 24 79 61 76 8 50 59 37 ", "10 48 59 9 83 17 4 56 18 19 74 3 25 10 13 53 12 32", " 75 24 22 79 18 27 50 72 70 37 64 78 6 68 80 47 1 ", "32 79 10 3 25 34 54 16 50 10 19 5 66 14 35 49 39 7", "7 80 43 33 8 10 2 75 50 36 82 1 76 35 57 82 35 66 ", "45 63 15 73 45 47 18 83 1 6 61 72 29 61 71 64 76 5", "7 40 1 46 62 16 22 8 44 42 64 42 62 16 35 58 21 4 ", "52 30 65 13 52 69 39 46 56 56 2 40 39 15 44 82 37 ", "42 60 47 56 32 4 48 29 12 9 4 60 60 50 39 79 30 83", " 56 53 32 37 36 57 63 1 26 1 75 68 81 50 52 57 21 ", "44 22 68 74 74 35 73 60 61 60 54 44 74 48 28 18 24", " 81 65 62 64 75 48 39 46 75 65 41 57 25 23 20 28 4", "7 37 81 81 14 26 37 56 55 2 14 72 33 42 15 79 38 9", " 14 15 74 68 76 40 66 34 15 50 20 24 48 53 75 9 30", " 76 38 65 45 52 7 26 37 76 16 48 72 31 63 41 17 70", " 42 74 68 6 67 79 68 26 78 65 15 38 53 45 22 27 77", " 83 44 53 60 31 64 25 80 65 69 80 43 35 62 50 69 7", "2 79 57 38 25 31 77 34 19 58 32 69 6 59 63 39 20 4", "0 60 55 2 68 42 29 10 34 4 76 44 71 70 21 78 27 77", " 4 79 77 3 29 34 37 13 79 12 79 40 83 5 33 11 13 1", " 23 26 3 70 16 43 8 21 2 78 15 8 19 14 50 57 54 41", " 82 14 10 26 38 30 6 73 43 22 24 78 22 77 50 23 8 ", "82 80 39 13 55 36 42 80 17 65 13 5 11 19 6 62 70 4", "3 60 44 78 75 11 4 77 23 27 53 76 19 81 19 38 57 1", "8 83 60 79 44 15 62 38 29 34 31 16 27 83 28 70 18 ", "10 54 43 3 78 76 66 24 72 54 46 32 4 41 63 14 35 2", "2 56 1 26 40 13 52 40 10 74 76 28 53 82 78 73 63 8", "3 13 15 6 58 25 82 60 80 78 19 81 82 15 61 16 35 1", "4 14 33 33 78 42 61 54 46 7 4 37 74 72 6 29 19 14 ", "11 4 47 17 26 16 69 7 67 27 16 72 43 67 12 12 4 79", " 29 52 9 17 46 70 26 37 46 3 16 64 46 25 50 76 25 ", "41 6 23 30 54 4 71 28 13 6 4 3 55 49 23 59 4 13 17", " 21 7 54 12 57 70 9 22 5 38 41 12 1 38 31 81 51 32", " 28 60 3 25 79 34 38 39 24 60 62 45 31 81 40 4 63 ", "80 4 3 64 14 5 57 75 69 21 59 35 8 21 43 34 58 77 ", "64 80 45 49 2 28 60 52 46 40 5 38 51 82 34 69 33 1", "0 7 5 15 56 19 38 4 34 3 63 9 12 35 80 19"};
    vector<string> names = {"S I Y NU DO A I Q N S E P C GR K XA G S V E EF M V", " L S AY BU S J O L A U A UC A QC S O W EV E QK WO ", "A AM BA V DV B A NL G M HO O AV QO N K UO CU G Q O", " A W L V Y Y B Q Q Y U A Y C J C EQ Q H OO WE MV W", " I U OG N JG Y G C L S F H G G A E P WG K K Z GY J", " E WG K N E N AM S ME Y A V HU O FC A I A M MA K U", "R I SA U AS Y A A B S I K S U O W X WY K N GT W K ", "ZU KQ C H U M FO C U R Q R AA A Y Y NH U C O C QK ", "W Q G NG G W V AY A YU N M Y N G A A X AE JI A AE ", "J A MM W KS W I A O A WK C CX K Q XO E KB Q OE OA ", "J K Q I J IG V Y Q S K S N F PY SM K L Z I KA N AM", " U Q N K WM L J AO C Y B M W E Y A QM W Y Q W C N ", "Y YQ Q M AB K Q M T B OQ K U QA E A T V QA Q A AU ", "A W J W A ML Z P G O AK RE M JS RA RZ E SY IP E Z ", "E N AO E D I U C H L QU F C HF SO YA K N A A C W Q", " S KM CG Q G H GA V B G M W I I M FO S G Z AM A I ", "SM U E Y YQ AL IS CG L I N Y SA S GN A K A Z G R I", " D UM K Y K WE UM UQ H U GJ WS C A K T GV K B G Y ", "C WG T H C C K E JC Y G W PU M Y Q A OB N S A C D ", "O PM F O W P Y R V W R Y A UY Y O A FN YO AE A Y H", " A WY YR O V J N A E W Z S NP M T I I IQ U UO Y R ", "EI UW FG N A N Q L ZA E Z G AW Z U C A NQ O I Z Y ", "Q O M S GK A U M W OY U A A D WK K IS A AQ U OU ON", " R A N U RP C KS MK S EM C CJ MU YS H RA R A F AM ", "HE AQ QC K KK K SH GA G K UJ J ML U BI Y I IW C S ", "M M I W VR RA A K E J OK IX H E J YC L MN S Q H K ", "W I U K T W QC KS A O K A A C N C W Y Q UA N M U W", " N S E M I U RB Y Y QP G QQ K W V O S C WN K M A A", " E Q K O T W E N Y W N VG J H A U E KE K C O C S W", " G U B J R K O G N A E MO C K C J U N A SA WQ A O ", "W D U P D Q Q C Y M D J C W LB OO G N UZ NN O C A ", "LH I ZI U Q W I CA Y U GN Q SW Y UZ G QC O A S D I", "Q EO O I C C S U A UY N VE K QB AZ G M TU K QL CJ ", "K A YA W Q Y E E Z TW I C M CP UM G H Z S K I H G ", "D T AO P S LA M A WT MK J M Q A K I S I IW U U I A", "G Q RN U G SR V ZM C OA WY W GA A IK P C W K J H S", " E CB O NU W M AK M A SE W A X I S"};
    int k = 46;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    vector<string> x = {"9 1 11 7 1 2 1 1 7 9 8 13 13 13 13 1 13 4 1 13 1 9", " 3 11 1 14 13 5 15 9 4 6 11 1 1 11 1 13 2 12 1 3 7", " 15 13 1 9 14 11 1 7 10 1 2 11 1 5 8 9 1 10 5 9 1 ", "12 12 7 2 11 11 1 10 7 6 13 12 10 8 5 13 8 6 7 8 6", " 15 11 5 1 6 9 9 11 11 7 9 2 8 4 4 2 1 5 5 12 15 3", " 4 9 2 1 13 1 5 13 6 1 1 15 13 1 1 10 13 8 15 12 9", " 10 15 13 7 15 9 10 8 4 1 4 7 9 12 1 13 14 5 5 11 ", "13 9 7 1 12 8 9 15 1 7 3 16 9 1 13 14 11 6 8 15 1 ", "9 10 1 5 3 16 11 16 14 12 15 5 9 1 2 7 10 11 1 13 ", "13 1 3 2 9 2 13 14 4 11 1 3 1 11 1 11 1 8 5 16 5 1", " 10 4 9 1 3 7 12 1 4 5 9 9 9 9 7 15 1 13 5 7 9 4 1", "5 1 11 6 6 5 9 4 14 9 9 13 1 11 14 5 7 15 3 9 15 2", " 15 9 13 11 1 15 1 12 5 11 1 10 13 1 6 1 8 13 1 13", " 5 8 1 4 15 7 11 7 13 3 3 15 9 5 15 16 3 15 11 2 6", " 16 14 1 11 1 3 9 7 14 5 8 1 2 5 5 1 1 14 9 9 10 9", " 8 5 11 16 5 7 14 1 5 1 10 9 7 4 11 1 9 5 9 1 3 11", " 13 10 11 3 5 9 1 7 9 3 9 14 7 1 13 11 11 3 11 15 ", "1 5 6 2 6 15 7 15 9 1 3 12 4 5 15 13 6 16 3 1 1 2 ", "4 14 8 13 13 15 12 2 1 10 4 6 1 1 9 13 15 1 8 13 1", " 9 1 11 13 14 5 1 1 4 15 9 9 5 15 10 5 9 1 1 15 1 ", "11 4 11 9 15 9 1 13 11 13 7 11 1 12 13 5 3 11 1 9 ", "13 9 11 7 8 5 1 5 8 1 4 1 7 13 11 1 10 14 12 15 12", " 9 9 7 7 13 1 13 8 1 5 9 1 14 5 9 7 1 3 13 3 1 1 1", "1 15 1 9 14 1 9 8 9 13 9 5 9 3 8 15 6 1 9 9 3 9 14", " 9 4 3 4 1 9 1 16 3 6 8 1 8 14 2 9 13 14 5 10 5 11", " 9 11 4 3 9 9 15 6 15 15 1 5 3 1 10 15 3 15 1 1 1 ", "9 7 5 1 13 16 5 5 3 9 9 11 3 3 1 1 15 5 12 1 13 5 ", "1 6 11 11 1 9 11 11 9 10 3 4 3 1 3 5 2 7 11 13 13 ", "12 11 15 13 5 10 7 7 7 13 5 9 9 15 15 1 12 6 13 6 ", "13 11 8 3 13 13 7 7 1 5 16 1 9 5 7 6 14 5 1 6 11 8", " 6 7 1 8 16 5 3 8 3 3 10 1 7 4 1 1 13 14 3 7 7 5 5", " 8 5 6 1 3 15 11 9 13 4 1 13 1 15 7 13 2 10 13 13 ", "3 9 7 13 15 9 15 13 4 12 5 13 3 5 7 6 3 1 1 6 7 5 ", "3 13 1 1 7 5 1 12 9 4 7 5 1 3 13 9 1 8 4 1 9 6 14 ", "2 10 9 9 13 13 9 11 6 7 1 2 15 12 3 13 9 1 13 13 3", " 1 1 5 7 8 1 2 1 7 11 1 10 9 13 7 5 9 4 1 11 16 12", " 11 15 13 8 16 1 3 2 13 13 8 13 3 2 9 8 5 11 1 15 ", "5 11 5 13 13 11 7 9 11 1 11 1 5 11 6 9 6 9 14 6 9 ", "14 6 1 9"};
    vector<string> y = {"5 4 2 6 3 8 5 7 1 11 10 2 9 11 7 9 5 4 2 7 14 10 1", "0 2 1 10 1 13 12 1 12 1 4 8 16 13 1 11 7 8 13 2 6 ", "7 5 7 14 2 11 1 3 4 6 10 9 15 10 1 12 9 4 13 13 8 ", "1 1 5 1 6 3 11 5 13 7 13 6 1 7 3 5 14 3 13 7 6 11 ", "7 1 14 15 5 15 13 11 16 15 7 9 3 10 1 14 1 3 3 16 ", "9 9 7 9 13 5 1 15 3 1 1 1 10 2 11 1 6 10 5 4 9 1 3", " 5 9 9 1 16 16 11 11 1 1 5 2 15 13 9 11 7 9 9 7 15", " 8 13 9 12 16 4 6 5 7 5 15 9 10 9 1 3 14 1 10 11 5", " 1 1 1 15 15 1 5 4 1 1 8 13 9 13 3 9 15 9 1 15 5 4", " 9 13 2 3 1 10 7 10 8 14 7 15 1 9 9 11 15 5 3 10 1", "4 1 5 13 13 15 13 13 5 11 1 9 14 9 3 15 16 8 11 1 ", "7 11 13 1 6 1 1 1 1 1 5 10 12 5 4 11 1 13 1 9 9 1 ", "5 5 1 1 1 16 9 7 1 7 1 14 14 6 1 8 15 3 9 16 14 15", " 11 3 11 9 4 7 6 15 1 16 14 13 1 16 11 13 12 15 9 ", "4 7 13 1 2 5 6 9 9 5 14 1 11 15 12 1 13 13 11 16 4", " 12 1 6 13 14 1 14 9 1 12 9 11 6 5 9 6 3 6 8 1 12 ", "5 9 13 13 15 1 10 9 14 15 14 10 6 16 5 11 3 1 9 1 ", "3 11 10 1 2 15 2 5 1 4 14 9 4 15 1 8 15 14 11 9 8 ", "1 11 14 1 9 6 5 1 13 3 14 15 4 10 1 15 9 8 5 12 4 ", "3 7 13 7 5 13 13 3 13 13 6 3 1 13 10 1 11 12 1 1 1", "0 5 1 16 1 13 1 1 3 6 4 1 9 11 5 3 6 3 13 13 13 12", " 11 15 1 1 3 10 5 11 5 3 13 9 16 9 10 12 7 9 3 10 ", "8 16 4 1 9 9 7 5 3 4 1 9 1 11 12 7 11 1 13 13 13 7", " 9 1 13 10 15 3 12 9 11 3 1 7 8 5 13 13 1 9 14 13 ", "4 1 6 5 7 15 11 5 5 7 10 1 16 1 13 9 7 9 5 9 9 4 5", " 1 7 1 3 9 6 15 5 13 3 16 5 9 15 16 3 12 2 15 3 12", " 1 15 13 9 2 2 5 3 16 5 1 1 13 5 14 7 1 1 6 13 3 1", " 15 9 3 2 9 3 9 13 5 16 10 1 1 5 14 5 2 1 15 12 10", " 9 16 11 1 5 5 5 5 5 9 1 5 9 9 1 1 9 11 6 5 16 7 1", "5 11 10 3 15 7 1 6 5 15 5 13 1 5 10 11 9 9 9 15 13", " 9 6 13 3 4 15 1 1 13 8 13 2 13 15 8 1 6 5 9 1 15 ", "15 6 11 1 11 4 3 3 14 9 15 9 3 8 7 14 16 9 9 3 1 1", " 15 5 15 12 10 1 9 5 9 9 7 16 1 9 13 1 5 1 8 11 6 ", "1 7 15 1 6 10 11 9 9 7 5 10 5 9 5 15 3 2 16 11 9 1", "2 9 11 14 16 9 1 3 14 11 11 7 7 2 13 9 3 10 7 9 9 ", "16 1 16 10 9 11 9 1 3 5 5 1 1 6 7 1 13 15 4 8 16 1", " 2 11 1 9 7 13 7 1 11 14 7 3 12 12 5 7 9 5 15 1 2 ", "15 1 5 13 9 12 6 11 1 1 13 13 13 13 1 1 15 15 1 7 ", "9 4 1 1 9 9 3 10 9 12 1"};
    vector<string> lengths = {"8 2 18 1 77 7 40 1 26 42 56 78 20 64 70 80 64 78 5", "5 20 48 51 53 39 53 15 39 20 18 50 70 25 49 54 32 ", "33 2 41 42 18 11 42 35 70 46 71 63 8 19 78 52 50 9", " 55 32 26 5 28 40 64 51 53 21 57 15 61 21 7 72 61 ", "72 79 64 58 42 41 68 78 49 63 53 8 63 52 26 39 53 ", "72 12 76 55 29 11 56 5 61 19 75 36 70 55 21 68 52 ", "3 11 18 55 55 42 50 54 12 66 50 18 78 54 30 23 22 ", "11 61 1 77 2 83 12 31 24 48 62 51 40 10 66 70 1 40", " 79 24 20 33 49 57 41 28 76 48 65 72 62 65 4 78 59", " 63 59 82 79 47 30 48 63 13 15 43 11 30 37 28 42 5", "0 35 55 14 27 21 10 20 60 41 44 65 49 17 68 40 11 ", "6 65 39 27 67 29 31 31 71 20 64 20 1 30 44 1 45 58", " 70 21 59 66 11 47 55 74 82 24 27 68 19 46 46 34 6", "8 69 70 47 15 8 26 10 18 44 34 40 10 71 69 61 39 4", "6 32 1 39 22 39 60 23 11 19 18 11 73 9 44 46 69 35", " 69 6 3 62 44 28 31 1 66 36 35 52 69 16 17 54 8 28", " 51 25 67 60 43 65 46 27 18 34 7 69 42 26 60 32 81", " 3 3 76 1 28 24 67 47 27 79 47 23 47 18 23 3 78 5 ", "40 51 18 55 39 13 1 49 43 67 53 80 39 34 51 9 12 2", "9 53 69 58 6 2 60 81 17 11 50 18 24 22 48 45 10 70", " 52 74 65 54 14 75 29 38 16 59 45 27 42 16 26 27 1", "8 45 65 25 82 28 11 53 23 1 83 41 56 17 18 44 33 1", "7 72 36 81 41 34 40 44 36 77 44 38 44 3 68 27 10 1", "4 8 75 30 46 36 35 71 15 61 77 29 82 1 35 45 56 65", " 29 9 35 10 66 67 37 25 35 3 2 5 53 50 83 21 83 72", " 27 30 25 14 54 51 32 9 38 47 61 25 43 77 38 76 15", " 5 49 57 65 51 45 16 58 59 58 14 1 32 80 59 48 27 ", "82 50 25 39 17 23 55 22 12 64 34 7 68 81 1 75 40 3", "5 1 62 11 29 8 4 36 75 40 79 22 21 74 24 48 58 33 ", "16 52 75 45 1 39 32 29 27 4 76 2 24 24 2 46 1 24 2", "8 38 32 67 43 63 11 65 1 10 68 78 4 49 82 19 11 14", " 18 19 30 80 5 30 32 53 27 69 51 61 76 38 4 4 67 3", "5 70 31 74 25 75 32 25 61 42 63 59 43 52 66 27 2 5", "3 73 36 58 51 64 27 3 53 14 30 71 56 12 5 46 67 13", " 62 78 68 71 61 68 76 46 49 40 13 67 20 57 69 28 6", "5 74 18 45 31 41 20 70 6 34 35 39 4 55 51 46 60 35", " 20 63 1 10 14 63 76 25 81 21 66 51 26 42 23 63 74", " 71 69 31 44 74 7 3 28 39 80 28 55 69 25 38 1 76 3", "7 47 51 2 21 45 14 27 82 64 15 43 7 75 25 51 16 16", " 5 1 24 47 73 23 38 47 73 40 49 19 50 35 37 48 35 ", "25 81 29 70 35 19 67 27 8 49 2 36 41 41 38 7 18 65", " 75 15 62 37 38 36 4 59 53 36 34 58 28 32 43 78 48", " 64 39 62 26 73 6 29 59 16 75 42 46 44 47 68 56 76", " 36 73 60 82 2 70 62 67 72 61 38 43 55 74 5 33 31 ", "59 38 83 37 30 27 76 62 69 44 78 3 47 12 24 34 30 ", "60 64 57 15 60 73 65 54 11 65 52 16 77 31 28 37 62", " 70 32 16 20 7 44 36 34 73 38 21 74 60 48 45 83 69", " 40 16"};
    vector<string> names = {"I AU A S AV M A G AF W V E C EG O BA A AA E KG Y K", " C A O JQ M Q A JS A A QX E U Y G A S O EI I J X C", " M S W IA IS H O U N N SN A GA D W CI KK W O QP Q ", "S TS Q Q K S O A SF E A GU WQ V C C K GI Z SO A I ", "R K RU T A G S Q A U WZ K U K L E D I T X K A B YJ", " V G S A NY N O S J A IA S W N J YQ G A I C II W Y", " Y Y NU ED WW M K WR WK E A S X U SU G G I IN S YS", " C I W U D SS O AL G SM G K Y G W W G A IL I Q M U", " F A Q Z R G O U YO CA C K K A E Z A A HB I A N J ", "P MC N A SS HX A ZW FA Y U Q Q K S PW V Y SP WY I ", "T CT AH C R R N A Y I K QW C OK O YY S L AA VN N U", "S E A G ME T Z HN KI YQ Q CK NM PJ CP GZ AN TX CG ", "T O P P Q P A R U C Q I H A ZN I Q AM WZ A WE IY Y", " O E VA KB O X I A V X O M A V E TY U N S O E O F ", "H W Y N V S A Z U A TK A M J W A CG XM N Q M O U N", " Q Z S VQ C I E Y N Q W YY E HK O EE C W Q U M CA ", "OU I WP W Y GO T X S OO W S W V G O V E A WN RF Q ", "VU I XM XS C W P L AD S V O C U A LV L G XK N Z D ", "X SA HO K YZ X J QO AY A ES AM O A OG I UA C I BX ", "VS G Z A KM C Y Y DA A YN J AN V G J C G H M X I R", " MJ MO V K A XA P A AI J HF EY P QN I Y R G C A Z ", "C G L I AQ M U GN N U CQ V A YK T C F MA Z AT W Y ", "G Q V T TK A I Y U S EA U O K W HB G JO M P S I A ", "K E U HG T G N W G Q KQ I QB EM S K A C J XY M G M", " OS S A Y Y I IR A W N X K W O AN G K YZ S A K JK ", "M CN MI E S U A F AL CC O Q A C EG G GA A Y WW OK ", "J U V E L J O O A U LI GW G WI HE K R M J PW Q I S", "W H A S P SI KZ S VA Y YA GY I L S MS V P O G CH K", "A A K Z O Z V G M IC W SQ YA I T QC N P S T EU Y N", " U A S C A A B S I ZR R S C X A G K K B Q U G O N ", "D A M E MC H N O U CA L YU AM CM M C A A N E E K A", " W UO H MI IR I OB M W ZT O C Y Q W G G A AE J W E", " V P A A AT X K X S D YC S BY E O IF V AJ Y D SX K", " A G SY A Z YY A CR C YS T B K I A Y D IC I KK G G", " Z CE C A U BE U N U K R M A T W I A E K Z F AN TS", " U Y S C Q C U U E Q K W Q V N N Y UY E R O N K T ", "U U O W AR AB A SO W A G N A O"};
    int k = 33;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"D", "IS", "NY", "Q", "G", "U", "C", "G", "N", "O", "CG", "A", "Q", "ED", "H", "M", "U", "N", "M", "T", "T", "A", "S", "V", "G", "A", "O", "A", "K", "C", "R", "X", "AN"};
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    vector<string> x = {"1 3 1 2 4 4 1 3 1 1 3 2 3 2 1 3 1 1 2 1 1 3 3 3 1 ", "3 1 2 1 4 2 1 1 1 2 1 1 1 3 4 2 1 1 4 1 3 1 1 1 1 ", "4 1 1 1 1 1 1 3 4 1 2 1 1 3 1 1 2 1 1 1 2 4 1 1 4 ", "1 4 3 1 1 2 1 3 2 1 1 3 4 2 1 4 3 1 2 4 1 1 3 3 1 ", "1 3 3 2 3 3 1 1 1 3 1 1 1 2 1 3 3 1 1 1 1 3 1 3 3 ", "3 1 3 4 3 1 3 3 1 1 1 1 4 3 2 4 3 1 4 3 1 4 3 1 4 ", "1 2 3 2 1 2 3 1 1 3 1 2 1 1 1 1 1 4 1 1 1 2 2 1 4 ", "1 1 3 3 1 3 1 4 1 4 1 3 2 1 1 3 1 1 1 4 4 1 1 1 1 ", "3 1 1 3 3 3 4 3 3 1 1 3 3 3 2 3 3 3 1 1 1 3 1 3 1 ", "2 3 4 3 3 1 4 2 1 2 1 1 3 4 4 1 3 1 3 3 2 3 3 1 1 ", "4 4 1 1 3 1 1 1 1 1 1 1 1 4 1 1 3 3 3 1 1 1 1 1 1 ", "1 1 1 4 2 4 1 1 1 3 3 3 4 2 3 1 3 3 3 4 1 4 2 1 1 ", "1 2 4 1 2 1 2 3 2 1 1 1 2 2 3 4 2 1 2 1 1 2 1 1 3 ", "3 2 2 3 2 1 1 1 1 1 2 1 4 4 1 1 1 2 1 4 3 1 4 2 4 ", "3 3 1 3 3 4 3 1 1 1 3 3 3 3 1 1 3 1 1 2 2 3 1 1 2 ", "3 4 1 3 3 1 1 3 2 4 2 3 1 3 1 2 2 1 4 1 1 4 1 3 4 ", "3 2 1 3 4 1 3 3 3 1 1 1 1 1 1 1 3 3 4 3 2 1 3 1 2 ", "1 4 2 3 1 1 1 4 1 1 1 1 1 1 1 3 2 1 1 3 4 1 4 1 1 ", "1 4 3 1 1 4 1 3 1 1 4 3 3 3 1 3 2 2 3 1 4 1 1 1 4 ", "2 4 3 3 1 3 4 1 2 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 ", "2 1 3 1 2 2 1 4 1 1 3 2 1 3 4 2 3 2 1 3 4 4 2 4 1 ", "1 3 3 1 1 2 1 1 3 3 1 3 1 1 2 1 1 1 1 3 4 1 1 2 3 ", "2 3 1 3 4 1 1 1 1 1 2 1 3 3 2 1 2 3 1 1 1 1 1 1 3 ", "1 3 1 1 1 1 1 3 3 4 3 1 3 4 1 1 1 1 1 3 1 1 1 4 1 ", "1 2 1 3 1 1 4 1 3 3 1 3 3 4 3 4 1 1 1 2 4 1 3 1 1 ", "3 4 3 1 1 1 3 3 2 1 4 1 1 4 1 3 1 1 1 1 2 4 3 1 1 ", "1 4 1 4 3 3 3 4 2 3 1 1 1 1 1 1 3 2 2 2 2 1 4 1 1 ", "3 3 3 4 4 4 2 1 1 4 1 1 1 1 1 2 4 3 2 2 1 4 1 4 1 ", "1 1 1 3 4 1 2 4 3 3 4 3 4 3 2 1 1 1 1 2 3 1 1 3 1 ", "1 2 3 3 1 1 2 2 3 4 3 3 1 3 1 3 3 1 2 1 1 1 3 1 1 ", "4 1 1 2 2 1 2 2 3 4 1 3 1 4 3 3 1 4 2 2 1 2 2 3 1 ", "1 2 1 3 1 1 1 1 1 1 3 1 3 1 4 3 4 2 2 4 1 1 4 1 3 ", "2 1 1 2 3 1 2 2 1 3 4 1 3 1 1 3 2 2 3 3 4 1 2 2 3 ", "2 1"};
    vector<string> y = {"1 1 3 3 1 3 1 1 1 2 3 1 1 4 1 3 1 3 1 2 1 1 2 3 1 ", "3 1 3 3 3 1 3 3 3 3 1 4 1 3 3 1 1 1 1 1 3 4 1 2 1 ", "1 4 1 3 1 3 2 3 1 1 1 1 4 3 1 4 2 1 4 4 3 1 1 1 1 ", "1 1 2 4 4 1 1 4 1 1 3 1 3 3 4 2 1 1 1 1 1 1 1 2 1 ", "3 1 1 3 1 1 3 1 1 3 1 1 1 4 3 1 1 3 1 3 1 1 1 1 1 ", "4 2 2 2 1 1 3 4 1 1 1 2 1 1 1 2 3 4 1 1 1 3 3 1 1 ", "3 1 1 3 1 4 1 4 4 3 1 3 1 1 3 3 1 4 3 3 4 3 1 4 2 ", "1 1 1 1 1 3 2 2 1 3 4 1 2 1 2 1 3 3 4 3 3 1 4 1 4 ", "2 2 3 3 1 3 3 1 2 3 2 3 3 3 1 3 4 3 1 1 3 2 1 1 3 ", "3 4 2 3 3 1 3 4 2 3 1 2 2 1 2 3 3 4 1 1 3 1 1 3 1 ", "1 2 4 3 4 1 1 1 1 1 2 3 2 3 1 4 1 1 1 4 1 4 3 1 1 ", "4 1 4 3 4 1 4 3 3 3 3 2 3 3 1 1 1 3 3 1 1 3 1 4 1 ", "2 1 3 1 1 3 1 1 3 1 1 3 1 1 3 3 1 2 4 1 3 3 1 1 2 ", "4 1 1 3 3 3 3 1 2 1 3 3 4 1 1 4 2 3 3 1 4 1 1 2 1 ", "1 4 1 3 3 1 1 1 2 1 3 3 2 1 1 1 1 3 3 3 2 3 3 1 3 ", "1 4 2 1 3 1 3 1 1 1 4 4 3 1 1 4 1 1 1 3 2 1 4 1 3 ", "4 1 1 1 1 1 4 2 4 1 1 3 2 1 3 1 2 4 1 1 1 4 2 1 4 ", "2 3 1 1 1 4 1 1 1 4 4 1 4 1 2 2 1 1 2 1 3 1 1 3 3 ", "3 3 4 1 1 1 1 3 1 2 1 1 1 1 4 1 3 1 1 1 3 3 3 4 1 ", "1 3 3 2 1 1 1 4 4 3 1 1 1 1 3 2 1 4 1 2 1 1 1 3 3 ", "2 1 1 2 3 3 1 3 1 1 3 1 1 3 1 1 1 3 1 2 1 4 4 2 1 ", "2 1 1 1 1 4 1 1 3 3 1 4 1 1 2 1 1 2 1 1 3 2 2 3 2 ", "3 1 3 1 1 4 2 3 2 3 1 3 3 1 1 3 4 4 1 3 3 2 1 3 1 ", "1 1 1 2 3 1 1 1 1 1 3 2 2 3 1 1 1 1 4 4 3 1 1 1 3 ", "1 1 1 3 1 1 1 3 2 3 4 1 4 3 3 1 4 1 3 3 1 1 1 1 3 ", "4 1 1 1 3 1 1 1 1 1 1 3 3 4 1 1 3 1 3 1 1 3 4 1 1 ", "3 1 1 1 2 3 4 1 3 3 3 1 2 2 2 1 1 4 3 1 1 1 2 1 3 ", "2 3 1 1 4 1 3 2 1 4 4 1 3 2 3 1 1 1 3 3 1 1 3 1 1 ", "3 1 1 3 3 1 1 3 3 3 2 4 2 4 4 4 3 3 1 3 1 3 1 1 1 ", "1 1 2 2 3 1 3 3 4 3 1 4 3 4 3 1 1 1 2 1 1 4 3 1 2 ", "1 3 4 1 1 3 1 1 3 1 2 1 1 1 3 2 1 1 1 4 3 1 3 3 3 ", "3 3 1 1 1 1 2 1 3 1 1 1 3 3 3 1 4 1 2 2 1 1 1 1 1 ", "1 1 1 1 1 1 4 1 3 1 1 1 2 4 1 3 1 3 1 2 2 3 1 3 2 ", "4 2"};
    vector<string> lengths = {"25 83 40 68 82 11 18 39 82 60 29 74 66 58 51 42 13", " 40 31 72 1 69 45 26 21 36 75 47 12 45 68 43 59 68", " 77 81 38 52 75 30 37 46 10 10 65 51 16 46 76 2 58", " 14 6 56 20 52 54 78 60 14 56 35 76 80 43 50 64 67", " 12 26 9 17 53 53 2 11 10 81 11 19 50 30 68 52 5 2", "2 24 44 40 31 2 30 38 73 39 70 69 54 46 1 67 44 81", " 50 53 42 29 62 73 49 69 4 22 83 67 19 8 16 74 57 ", "11 77 5 63 80 2 47 27 1 37 83 41 35 10 61 49 23 31", " 67 43 1 11 70 1 19 9 31 15 62 45 42 58 42 19 75 3", " 47 78 63 32 17 79 42 28 69 69 74 13 80 40 68 65 3", "7 65 83 26 51 70 65 21 33 78 1 3 25 6 29 73 65 73 ", "14 8 10 79 17 37 52 12 4 42 81 14 14 77 26 61 24 5", "6 3 46 56 51 66 31 19 18 13 30 45 27 52 22 18 29 5", "3 1 50 19 4 5 9 22 74 75 16 76 73 53 14 36 47 11 1", "1 82 26 26 32 36 4 43 8 72 51 71 14 57 33 3 72 68 ", "73 4 27 59 54 78 44 28 1 82 44 48 27 1 61 43 16 10", " 43 8 4 15 77 50 13 26 8 63 35 25 82 70 30 66 27 2", " 41 75 32 56 27 46 74 41 21 34 81 22 49 46 23 53 2", "2 57 8 31 67 47 25 75 9 3 67 5 62 26 16 50 30 60 3", "1 45 76 18 32 39 82 35 23 10 11 27 1 70 43 76 17 4", "3 32 40 28 60 58 11 37 59 18 44 6 71 68 65 28 55 3", "4 2 39 33 61 3 37 49 37 62 45 11 83 23 8 23 14 81 ", "29 69 20 78 32 34 3 5 24 12 17 28 30 14 60 17 44 4", "9 36 13 71 52 13 74 6 22 41 42 75 83 73 12 45 73 2", "8 7 75 7 77 49 66 33 10 53 40 73 49 59 76 37 66 62", " 58 53 42 71 17 45 15 19 63 4 31 29 62 66 16 45 66", " 81 52 5 31 65 26 47 34 25 22 57 6 60 7 45 32 17 7", "0 23 22 33 30 38 44 13 43 33 63 30 44 12 1 64 55 7", "9 59 64 39 58 62 43 4 39 78 40 1 61 13 8 67 79 76 ", "43 55 50 80 56 19 72 25 69 11 17 48 21 77 77 74 33", " 44 65 44 34 65 10 70 78 55 64 74 8 53 78 52 57 35", " 18 60 68 3 82 73 12 39 50 57 63 37 41 63 29 35 33", " 38 1 9 40 18 5 77 52 63 74 15 71 34 32 41 31 53 2", "4 52 10 48 13 32 7 75 81 67 17 56 3 52 79 22 23 53", " 71 60 57 6 43 25 57 59 63 14 18 23 38 82 51 69 50", " 12 80 31 32 21 75 76 62 7 39 83 44 10 17 38 41 48", " 3 43 23 65 23 14 53 58 61 35 33 71 9 46 62 69 65 ", "33 64 40 83 67 74 12 5 67 7 13 25 38 20 39 34 25 5", "4 55 1 70 67 53 54 53 39 73 41 16 48 16 81 45 56 2", "4 9 4 52 44 9 61 82 47 30 5 1 48 6 58 56 1 38 49 2", "6 11 12 3 79 36 52 26 53 43 41 4 49 53 4 60 75 60 ", "1 1 34 58 4 35 9 37 66 31 44 61 7 40 55 6 61 69 80", " 67 31 79 63 51 19 44 17 81 50 43 14 46 45 62 16 4", "3 20 75 19 23 67 13 46 51 63 81 57 28 80 9 15 61 3", "4 6 81 43 57 54 68 79 38 45 26 69 46 6 2 31 48 34 ", "67 18 73 22 64 59 63 35 24 66 3 20 59 29 30 15 7 5", "5 60 81 41 26 45 57 1 52 81 27 74 75 25 5 53 55 25", " 37 42 16 56 57 1 59 31 83 62 35"};
    vector<string> names = {"AC B A A A A C A C A A B B BC A A A A AB A AA B B ", "A AA C A A A A AC A AB A A C C C A C CB C A A A A ", "CC BB A B C A B AB CB C C BA B A A A A B A A A A A", " A C B A BB AA A A BA B B CA A B C C A B AB A AA C", " CC C AC A A C A C B A CA A A AB BC A BA A A BC C ", "B C AC C A AC A C A B A C A A CA A A B C B A B A A", "A A C A A A A A A A A A CA A A C C AA A B BB A C A", " B BB BC A B B A A CB B B A A A A A A A A B BA A B", " AA B B AB AB BB BB AA A A B A A C C B A A BA A B ", "AB B A A A A AA B A A C AA A A BA C AB C AC C B A ", "A AA B B A A A C AB CA B C B A A A A C A B A A A A", " A B CC AC C AC BB A C AA A C AC A A A A A A B AC ", "AA A A A AA C B A C AA BC A B AA A AA C A A C A B ", "AA C C AA CA A B A C CA A AC AA A A A C A AC AC B ", "A A A A B AC B B CA A B C A A AA A A B A B A B B B", "A B C AA BA A BA B A B A A AB C B AA C A AA B B A ", "A C A A A A B B AB B A A A C AA A A B A C B AA A A", " A A C A CA C B A CC AA BB AC A AA A A B A A AA C ", "A BA A AA A CA B AA A A B AA B BA CB C CA AC A AB ", "AA A A A C B A A A B B CC A B A B C B A A A A CC B", " C A C B C C C A A C C A BC A A A A A BA A C B C C", " A C CA B A A BA C C AA A AA A A A B C B C A AC C ", "A A CC A CA B C A B A A A AA B A B A B A B A A A A", " B B B B A A CA A C BA B CB A AB A AA AA A C A CB ", "C C B B C AA A A B C BA A A A BB B B A A A C C B B", " B BC C A BB A A C AB C A AA BB AA AA A A A AA B A", "A AC A A A B A A B A AA B A C A BA C AA C CA C B A", " A C C A A A B BB AB C A A A B A C A A A C B BB A ", "A B AB C A B C B A B A AA C A C A A A A C AA C A C", " AC C A A C C A AA AA A CA A A A A A B A C AA BC A", " A A C AC A B C AA AA BA A BC AC A A AA A A B A A ", "A A C A A A B AC B A C BA A C BA B C C A C A C BC ", "BA C A A A B B A A AA C A CC A AA A A B B A A AC C", " A AA A B A A A B A A B A C A A A B A C B BA A AA ", "B AA A AA A A A A B A B B A A AA CA B A A B A C A ", "A C C A C C A AB AA C A C B A AB AB BB B A A A B C", "B AC C C AB AA A A AC A B A B CB A C A C"};
    int k = 40;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"};
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    vector<string> x = {"1 3 1 2 3 1 4 3 2 1 1 1 4 4 1 1 1 1 3 3 1 1 1 1 1 ", "3 4 3 1 1 3 3 2 2 1 1 1 1 1 1 1 4 3 2 1 4 3 3 2 1 ", "1 2 4 3 2 4 3 1 1 3 3 2 1 3 3 1 1 3 4 3 1 1 1 1 3 ", "3 3 1 1 1 1 2 4 2 1 1 3 3 2 1 2 1 1 4 1 1 1 4 1 4 ", "1 3 1 3 1 3 1 4 1 1 4 3 3 3 1 2 3 1 1 2 2 1 2 3 3 ", "1 1 1 1 1 1 2 4 1 1 2 1 1 3 4 1 1 3 4 1 4 4 1 3 1 ", "1 3 1 3 3 4 2 3 3 1 1 1 1 4 4 1 1 4 1 2 1 3 3 1 4 ", "1 1 2 2 4 1 1 1 4 2 3 1 1 3 3 4 1 1 1 4 1 1 1 3 1 ", "4 4 1 3 4 1 1 1 2 3 2 1 1 3 3 1 1 1 3 2 4 3 1 1 3 ", "4 4 4 1 1 2 3 1 1 1 1 3 3 1 4 3 2 1 1 1 4 3 1 1 1 ", "1 3 3 1 1 4 3 3 2 1 4 1 2 1 1 1 1 1 1 1 4 4 1 1 3 ", "1 1 1 1 3 1 1 3 3 1 3 1 1 1 4 1 4 3 1 2 3 3 1 1 1 ", "1 2 2 4 2 4 1 1 2 1 1 1 2 4 2 4 1 1 3 1 4 1 2 3 2 ", "1 3 1 1 2 1 1 1 2 3 1 1 1 3 2 1 1 1 2 1 3 3 1 4 1 ", "3 1 1 3 4 3 1 2 2 1 2 1 2 1 2 3 3 1 4 4 3 1 2 1 1 ", "3 1 1 4 4 1 3 3 1 1 4 3 2 1 2 1 3 2 1 3 1 3 3 1 1 ", "1 4 3 2 3 1 3 1 2 2 3 1 1 3 2 1 4 1 1 3 4 3 1 2 3 ", "3 2 1 1 3 2 1 3 4 1 1 4 4 3 4 1 1 1 2 1 3 3 1 4 1 ", "1 1 1 1 4 2 1 1 1 4 1 3 1 4 1 1 3 1 1 4 1 4 3 1 1 ", "4 1 1 1 3 3 1 1 2 1 1 2 1 1 1 1 2 3 1 4 4 4 1 1 2 ", "2 1 1 1 2 3 3 1 3 2 1 1 2 2 3 1 3 4 1 1 1 4 2 4 1 ", "3 1 1 1 1 3 1 1 1 1 2 3 3 3 3 2 3 1 2 1 2 1 1 1 3 ", "2 1 3 1 1 1 1 1 4 1 2 1 2 1 1 4 1 4 3 4 4 3 1 1 1 ", "3 3 1 1 3 3 4 1 4 1 1 1 1 4 1 3 3 2 1 2 3 1 2 2 2 ", "1 2 1 1 1 3 3 1 1 1 1 3 2 3 3 1 2 1 2 2 3 4 1 1 1 ", "1 3 2 3 1 2 2 1 3 1 1 3 3 1 2 3 3 1 1 3 3 1 1 2 1 ", "1 3 1 2 1 3 1 3 3 1 1 1 3 3 1 1 3 3 4 1 3 1 3 1 2 ", "3 1 1 4 1 1 2 3 1 1 1 2 4 1 2 1 1 1 1 2 1 3 2 1 3 ", "1 2 1 4 1 3 1 4 4 1 1 1 1 2 1 4 1 2 1 2 1 1 3 4 1 ", "3 1 1 1 1 3 3 3 4 3 1 1 1 3 1 1 1 1 4 1 1 1 1 1 4 ", "1 2 1 1 1 3 3 3 1 4 4 4 4 2 1 1 1 2 3 1 1 1 1 1 3 ", "2 1 1 1 1 2 3 3 2 1 1 2 3 1 1 1 1 1 1 1 4 3 1 1 1 ", "4 2 4 4 2 1 2 1 1 1 3 4 4 1 4 1 3 1 4 3 1 1 1"};
    vector<string> y = {"1 2 1 3 3 2 3 1 1 1 1 4 3 2 1 2 2 1 1 4 1 3 3 3 1 ", "4 1 3 1 2 1 1 1 1 1 3 2 1 1 3 1 3 2 1 1 1 1 1 1 1 ", "1 1 3 1 1 1 3 4 4 3 2 1 1 1 3 2 1 1 1 1 3 1 4 3 1 ", "1 3 3 3 3 1 1 1 4 1 3 2 2 3 2 4 3 1 1 3 2 1 3 3 2 ", "1 1 1 1 1 1 2 1 1 3 4 4 1 1 1 1 4 3 2 3 1 1 3 4 1 ", "4 4 4 1 1 1 4 3 1 3 2 3 1 1 1 3 3 3 1 1 1 1 1 1 3 ", "1 2 2 4 1 4 1 1 1 3 1 1 3 1 3 1 1 4 3 1 1 4 2 3 1 ", "2 1 1 3 4 2 1 1 1 2 3 2 1 3 1 3 4 4 1 1 3 4 2 1 1 ", "3 1 1 1 3 3 1 1 3 1 1 1 2 1 2 4 1 4 2 1 4 2 1 1 3 ", "1 3 3 1 4 3 2 1 1 1 1 2 1 1 1 3 3 1 2 1 1 1 1 1 1 ", "1 1 2 3 1 1 1 3 3 1 3 3 2 1 1 1 2 1 1 1 1 3 1 3 1 ", "3 1 1 2 1 3 1 3 1 3 4 1 1 4 3 1 1 1 4 1 1 4 1 4 1 ", "1 1 3 1 3 1 3 4 4 3 1 4 4 1 1 3 1 3 2 1 1 3 2 3 1 ", "1 1 4 1 1 1 1 3 1 3 1 2 3 4 4 4 2 3 1 1 1 3 3 4 1 ", "1 1 3 1 1 1 1 1 3 1 3 1 1 1 3 1 3 1 3 4 1 1 3 4 3 ", "3 1 3 3 3 3 3 2 3 1 2 1 1 1 4 4 1 1 1 2 1 1 1 3 4 ", "3 1 4 2 2 1 2 2 3 3 3 3 2 1 1 4 1 4 1 1 1 3 1 1 1 ", "1 1 2 1 3 3 1 1 4 3 2 3 3 2 4 2 1 4 4 1 4 2 1 3 1 ", "1 4 1 3 3 2 1 1 3 3 1 2 2 1 1 3 4 3 1 1 1 1 1 1 1 ", "1 3 1 1 2 1 2 1 3 4 4 4 3 3 3 1 1 1 1 1 1 1 1 1 1 ", "2 2 2 2 1 1 2 1 1 1 4 1 3 3 3 2 1 3 1 3 4 3 2 3 3 ", "1 1 1 1 1 1 1 1 3 1 1 1 4 1 4 3 1 1 3 3 1 1 3 1 2 ", "1 3 1 3 3 3 3 3 4 4 1 1 1 1 1 3 4 3 3 4 2 2 3 1 4 ", "2 1 3 3 4 1 3 2 1 1 4 1 3 1 4 1 1 3 1 3 1 1 1 1 1 ", "3 2 1 3 3 4 3 1 1 1 1 3 1 1 1 3 4 2 2 3 4 1 1 1 4 ", "1 1 1 1 1 3 2 3 3 1 1 1 1 1 3 3 4 3 3 3 4 2 1 3 1 ", "1 1 2 2 1 2 3 3 1 1 1 4 1 1 1 3 1 3 1 2 1 3 1 1 2 ", "1 1 1 1 3 1 1 2 3 1 4 1 1 4 3 4 1 1 2 4 1 3 1 3 1 ", "1 3 3 1 1 1 1 4 1 1 3 4 2 1 1 3 1 4 1 2 2 1 3 1 3 ", "1 4 4 1 3 4 1 1 1 3 4 3 2 1 3 1 3 1 1 2 2 1 3 1 1 ", "2 2 2 2 1 4 1 1 3 1 1 1 3 2 2 3 1 3 1 1 2 1 3 1 4 ", "1 3 1 4 1 1 4 3 1 1 3 3 2 1 1 2 2 3 3 3 4 3 1 1 1 ", "1 1 1 1 4 1 1 1 1 3 1 1 1 2 1 1 3 3 1 1 2 3 1"};
    vector<string> lengths = {"33 79 36 29 32 58 6 60 75 58 45 56 50 78 1 26 12 1", " 43 55 66 25 74 71 42 15 47 39 37 70 13 75 76 50 7", "6 9 25 80 1 70 9 5 48 30 42 28 46 60 74 1 31 25 19", " 5 3 71 73 39 34 12 55 12 51 80 22 55 70 36 66 30 ", "45 43 47 61 5 1 75 15 27 1 6 15 60 83 83 61 48 28 ", "78 57 80 45 68 53 19 52 64 6 33 61 77 45 82 55 68 ", "73 6 63 23 82 42 62 2 33 59 50 10 39 57 82 67 52 1", "7 25 19 10 76 62 60 8 1 21 80 35 55 70 2 20 72 82 ", "20 16 43 41 66 17 56 11 53 71 28 24 83 18 54 80 15", " 32 8 25 9 36 12 41 75 62 65 48 83 41 2 29 76 81 5", "6 70 2 73 8 24 28 82 66 56 80 24 74 70 81 63 67 2 ", "74 37 44 54 10 36 77 56 11 19 34 43 66 11 35 21 82", " 1 5 35 25 39 12 40 52 23 33 13 38 30 30 7 10 9 76", " 61 3 42 34 8 17 41 15 58 30 6 55 82 62 1 20 10 51", " 36 78 30 8 35 57 58 77 69 1 69 18 30 72 6 31 66 5", "2 5 31 12 27 19 67 5 15 17 80 67 3 79 64 10 64 2 6", "3 27 71 32 39 24 29 61 51 38 57 15 64 10 29 82 7 1", "5 10 60 83 73 47 37 70 34 30 31 19 59 58 79 25 7 1", "3 53 13 82 62 36 73 81 19 74 14 35 67 3 70 67 58 5", "6 51 7 52 40 9 21 66 59 81 1 45 27 77 20 9 83 5 29", " 47 30 30 11 32 46 39 42 83 77 71 25 26 22 60 13 4", "6 38 66 5 9 29 7 35 44 37 18 82 43 45 62 43 38 75 ", "12 30 81 71 54 71 7 63 52 51 50 24 28 44 29 41 6 4", "1 27 46 44 24 75 20 74 63 68 72 13 31 43 68 28 59 ", "81 63 59 71 32 5 58 34 73 71 31 2 13 72 21 27 23 6", "4 64 66 53 35 1 24 76 63 34 78 77 14 30 81 58 54 6", " 58 79 30 25 27 2 49 25 36 26 10 59 12 21 35 69 66", " 12 43 11 66 1 42 60 57 54 48 32 35 82 77 77 65 9 ", "46 26 52 41 36 40 73 81 56 20 35 52 58 69 62 36 47", " 7 37 73 29 57 25 77 76 12 71 7 67 3 68 32 43 83 1", "8 65 11 40 14 30 11 40 74 54 52 8 30 77 37 49 30 6", "3 74 37 77 11 76 81 80 53 80 48 22 44 78 36 69 68 ", "81 79 74 1 72 30 57 51 62 45 38 44 2 75 34 40 1 11", " 65 37 6 16 39 14 36 44 33 76 27 25 54 49 73 64 40", " 71 40 37 34 75 38 12 62 66 73 16 22 57 20 68 54 4", "2 25 73 14 20 59 4 52 55 2 42 20 41 71 12 64 25 28", " 11 3 1 31 66 12 61 2 33 2 75 29 72 78 38 61 47 2 ", "4 64 68 53 76 57 5 3 42 83 59 54 50 24 49 28 64 11", " 77 65 1 76 34 34 80 38 71 4 15 22 78 63 52 58 5 7", "0 62 60 12 41 20 40 48 37 28 80 68 83 73 77 29 26 ", "69 29 64 7 42 22 32 67 11 75 71 74 7 32 6 72 81 61", " 38 36 75 78 8 2 11 15 61 59 80 30 83 53 33 63 7 4", "1 33 57 6 60 21 51 18 44 47 20 54 8 16 7 1 25 5 1 ", "45 82 29 53 57 56 18 19 76 7 66 49 61 70 3 53 59 4", "7 68 20 64 26 76 67 78 42 17 17 24 77 76 53 50 78 ", "64 51 80 56 45 29 46 3 65 52 58 12 24 11 43 11 42 ", "69 68 43 58 33 1 62 42 56 81 27 77 46 32 46 53 56 ", "56 54 51 31 21 55 20"};
    vector<string> names = {"B BB AA A A AC A A C C A AA B A BB B A A C AA A AB", " C A CA B BC C A A A A A A B A A AC A A B A BC A B", " C A B AB AB A AA A A AA A A A A C A A A CB A C A ", "A A B A A C AA C C A A C BB A AA C C A A A BC A A ", "A A A CA C C B AA B A B A A A A B B C AC AB A BA C", "A A BC A A C B A A B A A CA C B C BA A A AA A C BA", " A CB B B AA CA A C C A C B AB A AA AA C C AA A A ", "AA AA C C A C A A A A AA A A BA BA A A AA A A A CA", " AA C A B A AB A CC AB B A C B BB AC AC A CB AB A ", "A A B A BA A B B C AB A B AC C A B A AA C A C C B ", "B A B AA A A BB A A A A B A B BB AB A C A B A B AC", " A A B A A A A C A A C A C A AC B A AC AC A AA C A", "B A B AB B A BC A C C A A A C A A B C A A C A A A ", "A AA A BA AA BA A B A B A B A A A C A B C BC A A C", "A A A BA C A BA A A A AB B B A A B AC A BB A C A B", " CB A A B C C B A A B CA A C A AA B A AA AB C AA A", " AA AA A C A AA A A AB AC BB AB B C A B C BB A AC ", "B AA A A C A AA A CC A A A A AC A B C C CA A C A C", "A CB A A AC A AB A A C A B A AC A B B CB A A B B A", " A A AA B C A AB A BA A AC B A A A A A A A B AA A ", "A B B C AC B A CC A AA C CA C B A A A A A A C A A ", "A B B B AB BA BA AC BA CC C B A A CA A A B A A BA ", "A BB C AB A BA CA C B CC A B A CA C A AA B BA AC A", " A C A AC AC A BA C AA A A A A A C A A B AA B A B ", "A A A A A C B AC B AA C A C AB AA A C CA C AA AA A", " AA AA A A CA A A AA AA A B BA A A BA AB A C BA A ", "C B C C AB B B A C A A A B B CB C A A AA A AC A A ", "A BA AC AB A C AA AA B C AA A A A AC C CA A A A A ", "BC A A C B A BC C B AA CA A C A A AA A C B A A A A", " A AB AA BA A A A A B A C B A B A C CA AC B A C A ", "AB A A B CC C AC C C A BA B A C A CA B B A CA B CB", " C A AA A A A A AC CA CA AC B B C B CA A A AA A CA", " A A A C A B AB A C AA AB AC B CB CA A A A A A C C", " A AA B B BA C C A B B A C C A B BA B A AA C A AC ", "A A A A C A A A C A CA AA B A AA BA BA A C C C A A", " A A A C B A B A A CA BA A C AB C A A A A B B A B ", "BB C B A A BB BA BC CC A A A A B AA A B BA A A CC ", "B A A AC A C CC"};
    int k = 41;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"};
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    vector<string> x = {"2 1 1 4 3 4 1 1 1 2 2 1 1 3 1 1 3 1 2 2 1 1 3 2 3 ", "3 1 1 2 2 1 2 1 1 1 2 1 1 4 1 3 3 1 1 3 1 1 1 2 1 ", "1 2 1 3 1 3 3 4 3 3 4 3 3 1 1 3 1 1 2 1 1 2 1 2 1 ", "3 3 1 2 3 4 1 1 1 1 1 1 4 1 1 3 1 3 2 1 1 3 3 1 3 ", "3 1 1 1 1 3 1 2 1 2 4 1 1 3 1 3 1 1 2 1 1 1 1 4 1 ", "4 1 1 1 1 3 1 3 1 1 4 1 3 1 3 4 1 4 4 1 3 2 4 1 4 ", "3 4 4 2 1 1 3 3 2 1 3 4 1 1 2 1 4 1 1 1 1 1 3 2 1 ", "3 4 1 1 4 1 3 4 1 1 1 3 1 1 1 3 1 1 3 3 4 1 1 4 1 ", "2 3 1 4 4 3 1 3 4 1 1 1 3 4 3 1 4 2 1 1 1 1 2 3 3 ", "1 1 3 3 3 4 3 1 3 3 3 1 3 2 2 1 4 2 1 1 1 1 1 3 1 ", "4 1 1 1 1 1 2 4 1 3 2 3 3 1 4 1 1 4 4 1 1 1 1 1 3 ", "4 1 2 1 1 2 4 3 2 1 2 2 4 3 1 4 1 1 1 1 1 1 1 3 1 ", "2 1 3 3 3 1 3 1 2 1 3 3 3 4 2 1 1 3 4 3 2 2 3 4 1 ", "3 3 3 4 3 1 2 1 3 3 4 1 1 2 4 4 1 1 4 3 3 3 3 4 1 ", "2 4 3 1 1 3 1 4 1 2 3 2 1 1 3 2 2 4 2 4 4 1 3 2 4 ", "1 1 1 3 1 1 2 1 1 1 1 3 2 1 1 1 1 1 1 3 3 1 1 1 1 ", "1 3 3 1 3 2 3 3 4 1 1 3 1 3 1 3 3 1 1 1 3 3 4 1 1 ", "2 1 1 1 1 1 4 1 4 4 1 1 1 1 1 1 3 1 1 4 1 1 3 1 2 ", "1 3 1 1 1 1 4 1 1 2 1 3 1 1 1 4 1 1 1 1 1 1 3 3 1 ", "1 1 1 1 1 2 4 2 1 4 3 1 1 1 1 1 1 1 1 4 1 3 2 1 3 ", "2 3 1 2 1 3 4 1 1 4 4 3 3 1 3 1 1 1 4 4 1 1 3 2 1 ", "1 1 1 1 1 2 2 1 1 1 4 1 1 3 1 1 4 3 1 1 1 4 1 1 2 ", "1 3 1 1 3 1 2 1 2 1 1 1 1 2 3 1 3 1 3 2 2 1 1 2 1 ", "1 1 1 1 1 1 1 3 1 1 4 2 4 4 1 3 1 3 1 1 1 1 2 3 2 ", "2 3 1 3 4 3 1 1 4 3 4 4 1 1 1 4 1 3 1 1 2 2 3 1 3 ", "1 3 1 1 1 2 2 1 4 1 4 3 1 1 1 1 4 1 2 3 1 1 3 1 1 ", "2 1 1 3 4 3 1 1 2 3 2 3 3 4 1 1 1 2 3 1 4 4 2 1 3 ", "1 1 3 1 4 1 3 2 1 3 3 3 3 3 2 3 3 1 1 3 2 3 1 1 3 ", "1 1 3 4 4 4 4 4 4 4 1 4 1 2 1 2 3 3 3 4 1 1 1 1 1 ", "1 1 1 2 1 3 4 1 2 1 1 1 2 1 1 1 4 3 1 2 2 3 3 2 3 ", "3 1 1 1 3 1 1 1 1 1 3 3 3 1 1 3 3 3 1 3 2 1 3 1 1 ", "1 3 3 4 1 1 1 1 2 1 4 3 3 4 1 1 1 1 3 3 1 3 3 1 4 ", "1 1 1 1 2 2 4 4 2 1 1 4"};
    vector<string> y = {"1 2 3 4 3 2 1 1 1 3 1 1 1 3 2 4 1 1 1 1 1 1 1 1 4 ", "4 1 1 3 1 3 1 1 4 3 4 1 1 1 1 3 3 1 4 1 4 3 3 1 1 ", "3 2 1 1 1 1 2 1 1 2 1 2 4 3 1 1 3 3 1 1 3 3 1 3 3 ", "1 2 1 1 4 4 1 1 1 3 1 1 1 4 3 1 3 1 1 2 1 3 3 1 2 ", "2 1 4 1 4 1 3 2 3 3 3 1 1 1 1 1 3 3 3 1 3 4 1 1 2 ", "1 1 1 2 4 4 1 1 4 1 1 1 2 1 3 1 2 1 3 1 1 1 1 3 1 ", "3 3 1 3 3 1 1 1 4 3 3 1 1 3 3 1 3 1 1 4 3 2 1 3 1 ", "3 4 4 3 3 1 1 1 1 2 2 4 1 1 3 1 1 4 4 1 3 1 3 4 1 ", "1 1 4 1 1 1 2 1 1 1 1 1 1 2 1 2 1 3 3 2 1 2 3 3 1 ", "4 3 4 1 1 1 2 1 1 4 1 2 4 1 1 3 1 4 1 1 2 1 3 1 2 ", "1 3 2 1 4 1 3 3 2 4 3 4 4 1 2 1 1 2 3 3 3 1 1 2 1 ", "1 1 2 3 3 2 1 1 1 1 3 3 4 1 3 3 1 1 3 1 1 4 1 1 4 ", "2 1 2 2 3 2 4 4 1 1 2 1 1 2 1 1 4 1 1 4 2 2 4 1 1 ", "1 3 2 1 2 3 1 1 1 1 1 1 1 1 3 1 1 3 1 1 4 3 1 1 1 ", "4 3 1 3 4 1 1 3 1 1 1 1 1 4 2 4 1 3 1 1 3 3 4 4 1 ", "1 1 1 1 1 1 2 3 2 2 1 2 1 1 2 1 4 1 4 1 1 3 4 3 3 ", "3 1 1 1 4 1 3 1 1 3 1 1 1 1 3 3 1 3 1 2 1 3 3 1 1 ", "1 1 1 1 1 3 1 3 2 3 1 4 4 3 2 2 4 2 2 3 1 3 3 1 1 ", "1 3 3 1 1 1 2 4 2 1 1 1 1 1 1 3 3 1 2 4 1 1 1 2 1 ", "1 2 1 1 3 3 4 1 3 1 3 1 1 4 1 1 1 1 1 1 1 3 1 4 1 ", "3 1 3 1 1 2 1 4 1 1 1 1 1 1 1 1 3 4 3 4 1 4 2 1 3 ", "3 4 4 3 1 3 1 3 1 2 4 3 1 1 2 1 3 1 1 1 3 3 3 1 3 ", "3 1 1 3 3 1 2 4 1 2 1 1 2 1 3 3 1 1 1 1 3 4 4 4 2 ", "1 2 1 1 1 1 3 1 1 4 4 4 1 1 1 3 1 2 1 2 1 1 2 1 3 ", "1 3 1 2 2 1 1 4 3 4 4 1 4 2 1 2 2 3 3 1 1 3 1 1 3 ", "1 1 2 1 4 4 1 2 1 1 4 1 1 1 1 1 2 4 2 4 1 1 4 2 2 ", "1 3 1 1 1 3 2 4 2 2 4 2 1 1 3 1 1 1 4 3 1 1 1 3 1 ", "1 3 1 1 1 1 1 3 1 1 1 3 4 4 4 4 1 2 1 1 2 3 1 1 1 ", "2 4 1 3 2 3 2 1 3 1 3 1 3 1 1 1 2 4 3 1 3 3 3 1 3 ", "1 2 3 1 3 1 1 2 1 4 1 1 2 1 1 4 1 1 2 3 4 1 3 1 1 ", "1 4 3 1 3 3 1 4 3 1 4 1 3 2 4 1 1 1 4 1 3 1 2 1 1 ", "1 1 1 2 1 1 1 1 3 1 2 1 2 1 4 1 1 1 1 1 1 4 1 2 1 ", "1 1 1 1 1 1 1 1 2 4 1 1"};
    vector<string> lengths = {"75 41 4 9 28 19 68 74 38 30 68 54 15 16 47 77 69 1", " 23 29 40 78 45 47 57 16 78 4 69 79 25 80 47 47 46", " 34 17 43 76 16 65 78 36 65 45 55 80 46 51 73 52 7", "9 83 32 27 69 16 31 23 41 44 2 28 83 29 76 27 38 2", "3 35 9 79 41 18 41 46 70 83 17 60 65 66 34 30 23 4", "6 81 33 4 28 47 49 77 37 76 54 19 69 48 48 59 4 39", " 40 16 24 3 55 48 75 21 41 47 63 63 43 54 37 42 59", " 44 47 35 26 35 68 1 15 1 48 6 66 47 25 72 13 68 7", "4 78 36 28 72 18 10 32 36 39 13 78 22 55 37 78 68 ", "40 54 82 81 36 1 31 17 10 70 41 76 25 45 24 8 61 3", "6 7 27 39 37 64 1 43 27 37 24 79 61 76 8 50 59 37 ", "10 48 59 9 83 17 4 56 18 19 74 3 25 10 13 53 12 32", " 75 24 22 79 18 27 50 72 70 37 64 78 6 68 80 47 1 ", "32 79 10 3 25 34 54 16 50 10 19 5 66 14 35 49 39 7", "7 80 43 33 8 10 2 75 50 36 82 1 76 35 57 82 35 66 ", "45 63 15 73 45 47 18 83 1 6 61 72 29 61 71 64 76 5", "7 40 1 46 62 16 22 8 44 42 64 42 62 16 35 58 21 4 ", "52 30 65 13 52 69 39 46 56 56 2 40 39 15 44 82 37 ", "42 60 47 56 32 4 48 29 12 9 4 60 60 50 39 79 30 83", " 56 53 32 37 36 57 63 1 26 1 75 68 81 50 52 57 21 ", "44 22 68 74 74 35 73 60 61 60 54 44 74 48 28 18 24", " 81 65 62 64 75 48 39 46 75 65 41 57 25 23 20 28 4", "7 37 81 81 14 26 37 56 55 2 14 72 33 42 15 79 38 9", " 14 15 74 68 76 40 66 34 15 50 20 24 48 53 75 9 30", " 76 38 65 45 52 7 26 37 76 16 48 72 31 63 41 17 70", " 42 74 68 6 67 79 68 26 78 65 15 38 53 45 22 27 77", " 83 44 53 60 31 64 25 80 65 69 80 43 35 62 50 69 7", "2 79 57 38 25 31 77 34 19 58 32 69 6 59 63 39 20 4", "0 60 55 2 68 42 29 10 34 4 76 44 71 70 21 78 27 77", " 4 79 77 3 29 34 37 13 79 12 79 40 83 5 33 11 13 1", " 23 26 3 70 16 43 8 21 2 78 15 8 19 14 50 57 54 41", " 82 14 10 26 38 30 6 73 43 22 24 78 22 77 50 23 8 ", "82 80 39 13 55 36 42 80 17 65 13 5 11 19 6 62 70 4", "3 60 44 78 75 11 4 77 23 27 53 76 19 81 19 38 57 1", "8 83 60 79 44 15 62 38 29 34 31 16 27 83 28 70 18 ", "10 54 43 3 78 76 66 24 72 54 46 32 4 41 63 14 35 2", "2 56 1 26 40 13 52 40 10 74 76 28 53 82 78 73 63 8", "3 13 15 6 58 25 82 60 80 78 19 81 82 15 61 16 35 1", "4 14 33 33 78 42 61 54 46 7 4 37 74 72 6 29 19 14 ", "11 4 47 17 26 16 69 7 67 27 16 72 43 67 12 12 4 79", " 29 52 9 17 46 70 26 37 46 3 16 64 46 25 50 76 25 ", "41 6 23 30 54 4 71 28 13 6 4 3 55 49 23 59 4 13 17", " 21 7 54 12 57 70 9 22 5 38 41 12 1 38 31 81 51 32", " 28 60 3 25 79 34 38 39 24 60 62 45 31 81 40 4 63 ", "80 4 3 64 14 5 57 75 69 21 59 35 8 21 43 34 58 77 ", "64 80 45 49 2 28 60 52 46 40 5 38 51 82 34 69 33 1", "0 7 5 15 56 19 38 4 34 3 63 9 12 35 80 19"};
    vector<string> names = {"B B A BA AB C A A A A A A A AA A AA B C A A AA B C", " A A AC BA B A A A C B A AA A BB A A A CB A AA CA ", "A AA CA C BA B A BA A C AA A BA CA B A CB CA A A A", " A A A B B A B A B B A A A A B B CA A A AA BC BA A", " B A CC C AC B A B A C B B C A A B B BB A C A AB A", " B AB A A C A AC A AA A B B AA A AA B A C A AA C A", "C C AA C AA A A C A A B C A A B B A BA C C CB C C ", "AB BA C A A A BA B C B A B BC C C A AA C A A A CA ", "C C B AA B B A AA B CC B B B A C B B C CA CB C CC ", "A A AB A CA C A B A C AB A AA C B AB A AA A AB AA ", "A A A A A AC A A C B A C A A AA CA A B A A AC B BC", " A A A A AC A A AB C A B A B B C A BA B A A A B A ", "B AA B A AA A C A A A CA C A AA A B C A AA B A AB ", "A B A A B AA B A A B CA CB A BA CB AC A AA AA C A ", "A C AC B A B A A A A AA A C AC BA CA A A A B A C A", " A AA AA A A C CA C C B A C A A A BC B A A AC A B ", "AC A B B CB AB CC AA A B A C AA A AA A C A C A C A", " A AC A A C BA BA AC A B CA CB C C A C AA A A A A ", "B BA A B C A B C CC A A C BA A A A A CA C A A C C ", "A AB B B A A A A A B A A B BB A A A CB BA BB A C C", " B CC AA C B B B C B B A B AC B A A A AA C AC B A ", "AA AA AA A A A B C AA A C A AC C B B B BC B C B C ", "B C A C BB C A A B AA A C A A BC A BB A AC A BC AB", " C B A A AB A BA AC B BC C AA BB AA A BA A A A AB ", "AA BA BA B AA A CA BA C B AA B CA B AA C A AA A B ", "A B A C BA AB B C C A AA AA C A A CA C BA A C A A ", "A A B A A A AA AA A B A C A A A B A A A AA A B A A", " A A A A B A AB A A AA A AA C B C A A A AC A C A A", " A A A A B A B B A A B CA A B A B B BA B B B C A A", " A A A A A A A C A A B AA A B B B A A C AC AA A C ", "A B A C C B A B B A A A A A AA BB B A BC AC A A A ", "AC A CA B C A A CA C A CC A CA A AA A BB A A A B B", "B CC C A B A A A C BC A AA B CA CA A A AA B AB BA ", "A A BA A A C C B A BB B A A BA AC A A A C A B C A ", "A C CB A B BC C C AA CB B A A A A A A C AC B A A A", "A B CC B A AB C CC A BB AA A AC C AA B A A A A A C", " B CA B AB C B BB A C AB B A B C A"};
    int k = 46;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"};
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    vector<string> x = {"3 3 3 2 1 1 3 1 1 1 3 1 1 1 1 1 1 3 3 1 3 3 4 3 4 ", "3 4 3 1 1 1 2 2 1 1 1 1 1 3 2 1 1 1 1 4 1 1 3 1 1 ", "3 3 3 1 3 2 3 3 1 1 3 2 4 1 2 3 2 3 1 3 2 3 1 1 3 ", "3 3 1 1 1 1 1 1 4 3 1 1 3 3 1 1 1 1 2 4 2 1 1 3 4 ", "1 1 3 4 1 1 1 3 2 4 3 2 2 3 1 1 2 1 3 1 3 4 1 1 1 ", "3 1 1 1 1 1 3 2 4 1 3 1 1 1 1 1 3 3 1 3 3 2 1 3 1 ", "1 3 1 4 3 1 3 2 1 3 1 4 4 1 1 2 1 1 3 4 1 1 1 1 2 ", "3 3 1 3 1 1 1 3 1 1 4 2 1 1 1 1 1 3 3 3 3 1 1 3 1 ", "3 3 1 3 1 3 2 3 3 1 4 2 4 4 1 1 3 2 2 3 1 3 3 1 3 ", "1 4 1 4 3 1 2 1 1 1 3 1 2 3 2 3 4 2 1 1 3 3 2 1 4 ", "3 1 2 4 1 1 1 1 3 1 1 1 3 1 1 1 2 1 3 1 4 3 3 3 1 ", "3 3 4 1 1 1 3 3 3 1 1 3 1 1 4 3 2 3 3 3 3 3 1 1 1 ", "4 2 3 1 3 4 3 1 1 3 1 1 1 1 1 1 1 3 3 1 2 3 3 1 1 ", "1 1 1 1 4 2 1 4 1 3 1 2 2 3 1 3 1 1 3 1 1 4 1 2 3 ", "4 1 3 1 1 1 4 1 3 1 1 1 2 4 3 3 2 1 3 1 1 2 4 4 2 ", "4 1 3 4 1 1 1 4 3 1 2 1 4 1 1 1 2 4 1 1 1 1 2 1 1 ", "2 2 4 1 3 1 2 4 3 3 4 1 1 2 1 2 2 1 3 3 1 1 1 1 1 ", "1 3 1 1 1 3 2 3 3 1 3 2 3 4 3 1 1 3 1 4 1 1 1 2 2 ", "3 1 1 1 1 1 2 1 3 1 3 1 1 1 4 1 1 2 4 3 3 4 1 1 1 ", "3 4 3 1 3 1 1 1 3 3 3 1 3 3 1 1 2 1 2 3 4 3 2 1 1 ", "3 3 2 1 2 1 2 1 3 4 1 1 3 3 3 3 3 2 1 3 4 4 4 1 1 ", "1 1 3 3 2 3 1 3 3 2 3 1 3 3 4 1 1 1 3 1 1 4 1 4 1 ", "4 3 1 2 1 1 3 1 1 2 1 4 3 1 4 1 1 1 3 3 1 1 2 4 2 ", "1 1 1 1 1 1 3 4 3 1 3 3 1 1 2 3 1 1 4 3 1 1 1 1 3 ", "3 2 3 3 3 3 4 2 1 4 4 2 4 2 3 1 2 1 1 1 3 3 3 1 1 ", "4 4 3 1 3 1 1 1 1 1 1 1 2 2 1 3 1 1 1 3 1 2 1 1 3 ", "1 3 3 4 1 1 3 1 1 1 1 3 1 1 3 4 3 2 1 1 2 1 1 3 3 ", "1 1 3 1 1 1 1 3 4 3 1 1 1 1 1 3 3 3 2 1 1 1 1 3 1 ", "1 1 1 1 4 1 1 3 3 1 3 3 3 1 1 4 2 1 2 1 1 1 1 1 3 ", "1 1 1 1 1 1 2 1 3 2 1 1 2 4 4 3 3 4 1 1 3 3 2 4 3 ", "1 1 3 1 3 1 3 2 1 1 1 3 3 2 1 3 3 1 1 1 4 1 1 1 1 ", "1 3 2 3 1 1 1 1 1 1 1 4 1 1 3 2 1 3 1 2 1 2 1 2 1"};
    vector<string> y = {"3 1 4 1 3 1 1 1 1 1 2 3 3 2 1 3 4 4 3 3 1 1 1 1 3 ", "4 2 3 1 3 1 4 1 1 1 1 4 1 1 1 3 2 3 3 1 3 3 3 1 1 ", "3 2 1 1 3 2 4 3 1 3 1 1 2 3 1 3 1 3 1 3 1 4 2 2 1 ", "2 1 1 3 1 1 2 1 3 3 2 1 1 1 4 4 1 1 2 1 2 2 1 1 2 ", "3 1 1 3 1 1 3 3 3 1 1 1 3 2 1 1 2 4 3 2 1 1 3 3 1 ", "4 2 2 1 1 3 4 2 3 2 3 1 1 1 1 3 1 2 3 1 1 1 1 4 4 ", "1 3 1 1 3 1 3 1 1 2 4 1 1 1 1 4 4 4 1 2 1 1 1 4 1 ", "1 1 2 1 1 1 4 3 3 1 2 1 1 4 4 1 3 3 1 1 2 1 1 1 1 ", "1 1 2 4 1 3 1 2 1 3 1 3 3 3 3 3 1 1 1 3 4 4 1 1 1 ", "1 4 3 3 4 1 1 1 2 3 1 2 1 2 3 1 1 4 1 1 1 2 4 3 4 ", "1 3 1 1 1 1 4 1 2 1 3 1 3 1 3 4 2 1 1 4 1 1 1 4 2 ", "3 3 3 3 1 2 1 3 3 1 1 3 1 4 2 1 1 3 1 1 1 3 3 1 1 ", "3 4 2 1 1 4 1 2 3 1 4 1 3 1 3 1 3 1 2 3 3 4 1 1 3 ", "2 3 1 3 1 1 4 1 1 2 1 2 1 1 1 3 3 1 4 4 1 3 3 3 1 ", "3 1 2 3 3 1 2 1 1 4 1 1 3 2 1 1 2 4 3 1 1 2 3 1 3 ", "3 3 1 2 3 2 2 2 4 3 4 1 1 3 4 4 4 1 1 2 3 3 1 1 1 ", "1 3 2 4 2 1 1 3 3 4 2 2 1 3 4 1 4 3 3 4 4 1 2 4 3 ", "3 1 1 1 4 3 4 1 4 1 4 1 3 4 4 3 3 3 3 1 4 1 1 4 1 ", "3 3 2 2 2 3 1 1 3 1 1 1 1 1 1 1 3 3 2 1 1 3 2 1 2 ", "2 1 1 3 3 1 3 1 2 1 1 2 1 1 1 1 1 1 3 2 3 1 1 3 3 ", "3 3 1 3 3 4 4 1 1 1 1 2 3 1 1 1 3 4 1 1 3 1 1 3 2 ", "1 3 1 3 3 4 1 1 4 2 4 1 3 1 2 1 1 4 4 3 2 1 3 1 1 ", "2 1 1 4 2 2 1 4 1 1 3 2 1 1 2 2 1 3 2 1 3 1 1 3 1 ", "2 1 1 1 1 1 1 3 2 1 1 2 1 3 3 1 3 1 3 1 1 1 2 1 3 ", "1 1 1 3 3 2 3 2 4 1 1 1 1 2 2 3 2 1 1 1 2 4 2 1 1 ", "1 3 1 1 1 1 1 1 1 1 3 3 3 1 2 1 1 3 4 3 1 1 1 1 1 ", "3 2 1 1 3 1 1 1 2 1 1 1 1 1 4 3 3 3 3 1 1 3 2 1 3 ", "1 2 1 1 4 4 3 3 4 1 1 2 3 3 3 1 1 1 1 2 2 1 3 1 1 ", "1 3 1 1 1 1 4 1 1 1 1 1 4 1 2 3 3 3 1 3 1 2 1 1 2 ", "3 1 1 4 1 1 1 3 1 1 3 4 3 1 1 1 2 3 2 2 2 3 3 1 3 ", "1 1 1 1 3 3 3 2 1 1 1 1 3 1 4 1 1 1 4 2 1 1 3 3 3 ", "2 1 1 1 1 1 2 4 1 1 4 1 3 1 1 1 2 4 1 3 1 4 2 1 3"};
    vector<string> lengths = {"28 27 1 12 5 80 76 14 17 30 52 79 76 83 35 58 75 6", "0 32 3 5 61 77 78 25 5 68 60 51 41 39 23 38 36 40 ", "6 6 39 19 62 46 64 70 7 60 56 43 80 23 67 56 12 65", " 33 61 79 61 30 67 63 9 4 1 40 15 31 7 72 50 57 9 ", "77 75 10 73 44 44 30 48 34 69 45 36 72 71 58 46 21", " 45 30 57 62 76 31 16 8 76 75 36 4 63 79 74 40 69 ", "36 71 13 1 26 32 44 40 72 53 47 38 53 26 39 13 80 ", "72 69 82 25 69 63 3 25 53 65 50 25 81 80 16 50 4 1", "5 12 60 35 63 7 58 21 6 24 40 54 3 5 75 61 3 38 33", " 14 72 49 4 19 21 42 8 24 34 6 69 49 68 49 49 13 5", " 29 1 44 57 16 57 65 52 58 44 75 16 13 25 45 11 52", " 66 48 16 46 66 34 6 45 54 44 46 17 9 16 78 15 73 ", "27 35 42 48 26 59 42 46 40 9 43 15 25 30 27 1 83 2", "5 2 83 20 61 26 52 66 81 27 16 26 75 58 50 63 82 7", "7 78 72 61 65 27 45 61 8 71 47 6 67 28 30 3 6 49 6", "4 26 63 11 36 1 5 16 4 54 15 7 44 51 62 30 78 59 6", "6 81 51 16 37 1 26 49 58 53 15 51 34 58 5 30 22 28", " 38 26 51 6 75 73 5 11 41 69 75 24 5 29 51 82 7 68", " 1 82 28 26 74 3 19 18 70 58 28 28 38 31 11 19 8 3", "4 45 77 14 81 6 1 39 56 64 69 11 8 62 5 53 27 48 3", "0 19 76 31 53 36 53 39 50 70 37 80 44 11 57 33 45 ", "43 69 63 71 48 21 33 3 4 7 52 50 27 8 66 4 53 35 2", "7 68 21 30 58 23 1 64 5 27 49 65 20 74 68 36 23 64", " 18 23 18 52 1 48 63 39 4 3 71 11 83 28 76 6 71 61", " 76 73 53 13 43 55 20 26 44 78 63 76 44 31 68 23 1", " 34 8 6 15 5 57 27 40 67 20 53 66 60 31 63 77 62 6", "8 65 62 4 4 56 1 25 81 83 68 29 29 23 51 10 29 59 ", "1 60 52 10 41 67 70 70 64 52 57 33 12 64 80 4 42 6", "4 49 55 6 24 82 31 1 31 77 66 57 52 69 40 49 13 66", " 81 19 64 15 71 2 29 74 36 19 45 46 60 15 74 37 18", " 38 17 68 75 48 37 79 32 45 53 50 44 3 13 48 14 2 ", "11 6 60 39 52 47 8 9 8 41 58 10 31 64 18 2 70 56 1", "9 68 6 82 3 4 48 71 4 27 76 27 11 62 23 8 15 31 57", " 31 60 66 59 27 79 73 82 16 44 13 72 31 67 46 11 4", "7 62 5 51 1 3 66 2 69 44 49 80 48 39 31 28 79 29 7", "5 10 1 15 35 28 56 83 48 36 66 73 34 15 73 1 22 18", " 36 73 32 24 42 31 54 81 82 62 65 63 8 8 40 54 72 ", "15 37 10 1 68 71 51 39 23 26 7 1 39 52 30 30 61 11", " 60 69 17 10 69 8 31 72 3 78 71 1 57 54 24 83 80 2", "1 20 64 54 64 44 57 81 8 82 70 43 17 18 63 52 15 2", "6 45 82 56 73 14 1 69 67 69 5 39 13 27 18 48 14 34", " 11 81 48 79 39 52 9 63 76 15 39 4 74 53 60 37 17 ", "72 26 47 22 42 15 59 52 65 22 4 14 40 48 41 83 21 ", "77 22 74 17 6 82 53 28 31 52 52 20 30 22 9 48 48 4", "2 31 39 23 30 10 47 26 55 8 58 25 49 36 52 48 20 2", " 51 80 49 35 64 58 55 73 10 45 43 47"};
    vector<string> names = {"C A A A C B A B B B A C AC B AA A A B A CA C C A C", " C BA A CB A AA A A A A AB C A A B B CA B CB BB A ", "B C B AA C A A B A A B AB A B A A A A A A A A C BA", " A AA A A CA CA A B A A BA AA C AB AA A A B B A A ", "A A A BA A CA C BB A B AA A C C B A AA B AA B A BB", " AC C BB A B C CA AB A AA C C A A CA B A A B B CB ", "A C AA C B A BA A A AB B B A AC A AB C AC A A A B ", "C BA C AA B C AA A BA A C C B AA A AA C A BB C A A", " B BA A C CB AA A A A A C AA A A A A AA A A AB A A", " A B B B A B A B A A A A B B B BA BA C A AA A A AB", " A A C BA A A A A C A AC A B CA AA B A AA B A A A ", "AC B B CA A B AA C A A BA A C C A A A B B A A A A ", "BC AA B B B A C A A B A A A AA A A A A B A C A C B", "A B A AA AA C C A C C AA C B C A B B A BA B A BA C", " C B A BA AB A BA C C A A A A BC C B C AA A A CB A", " A B C A B A A C A B AA A C A A A B C CC AA A A A ", "A BC AA A CA B B A AC B A A A A A B B CA A B A CA ", "AA A A A A A A C A A A C B A C C A A A A B A A A B", " C B A B B AA CC A BA AB B BA A CA A AA A A A A BA", " AC C AB AB C A AA A C A B BA BA A CA C A A C A A ", "A A A A A A B C B CC A CC AC A AC A A A A AA A AA ", "AA B CC B A AA A AA A C A B A C C A CC C C C C A A", " BA C BB A A AA AC A AB AA B A C A CC B AA A A C A", "A AA BA CC B AA AB C CA B A C A A A A A A AC C B A", " C AC A B C AB A A A BB AB C A A CA B C A C A B A ", "A AA A A A B B A A B A CC B BA AA A A A AA A A B C", " AA CA AA CB A C AA B A AC C A CA C A B AC CA A BB", " A C BA AC A A C AA B C AC C A A C B AA C BB AA C ", "CA AA AA AB AB A C AA B BA A C A B A C B CC BB A A", " CA BB A B A A A B AB A AB B CB CC AB B A C A B C ", "A CC A AA BA A A A B A A A A A A A A A BB AB C A B", " A A A A B B B B A A B B C C A C B AC C AA C A C A", " A BB AA AA A A CA B BA A C A AB BC C B A AB A AA ", "A AA A A C C A B A A A A C AA A A A AB C A AA A CB", " A B A A A B A AA AA B B B B A A C B BB AB AA AB A", " B A C BC A A CB B C A AA A B B CC A A B AC A C C ", "B A A AB"};
    int k = 120;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "BA", "A", "A", "AB", "C", "A", "AB", "A", "A", "C", "A", "B", "B", "B", "C", "C", "C", "B", "BA", "BB", "C", "A", "AA", "B", "A", "B", "AC", "C", "A", "A", "A", "AA", "B", "A", "A", "A", "A", "A", "C", "A", "BB", "A", "A", "A", "AA", "AC", "C", "A", "A", "A", "C", "A", "A", "A", "B", "B", "B", "BA", "BC"};
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    vector<string> x = {"1 3 1 2 3 1 4 3 2 1 1 1 4 4 1 1 1 1 3 3 1 1 1 1 1 ", "3 4 3 1 1 3 3 2 2 1 1 1 1 1 1 1 4 3 2 1 4 3 3 2 1 ", "1 2 4 3 2 4 3 1 1 3 3 2 1 3 3 1 1 3 4 3 1 1 1 1 3 ", "3 3 1 1 1 1 2 4 2 1 1 3 3 2 1 2 1 1 4 1 1 1 4 1 4 ", "1 3 1 3 1 3 1 4 1 1 4 3 3 3 1 2 3 1 1 2 2 1 2 3 3 ", "1 1 1 1 1 1 2 4 1 1 2 1 1 3 4 1 1 3 4 1 4 4 1 3 1 ", "1 3 1 3 3 4 2 3 3 1 1 1 1 4 4 1 1 4 1 2 1 3 3 1 4 ", "1 1 2 2 4 1 1 1 4 2 3 1 1 3 3 4 1 1 1 4 1 1 1 3 1 ", "4 4 1 3 4 1 1 1 2 3 2 1 1 3 3 1 1 1 3 2 4 3 1 1 3 ", "4 4 4 1 1 2 3 1 1 1 1 3 3 1 4 3 2 1 1 1 4 3 1 1 1 ", "1 3 3 1 1 4 3 3 2 1 4 1 2 1 1 1 1 1 1 1 4 4 1 1 3 ", "1 1 1 1 3 1 1 3 3 1 3 1 1 1 4 1 4 3 1 2 3 3 1 1 1 ", "1 2 2 4 2 4 1 1 2 1 1 1 2 4 2 4 1 1 3 1 4 1 2 3 2 ", "1 3 1 1 2 1 1 1 2 3 1 1 1 3 2 1 1 1 2 1 3 3 1 4 1 ", "3 1 1 3 4 3 1 2 2 1 2 1 2 1 2 3 3 1 4 4 3 1 2 1 1 ", "3 1 1 4 4 1 3 3 1 1 4 3 2 1 2 1 3 2 1 3 1 3 3 1 1 ", "1 4 3 2 3 1 3 1 2 2 3 1 1 3 2 1 4 1 1 3 4 3 1 2 3 ", "3 2 1 1 3 2 1 3 4 1 1 4 4 3 4 1 1 1 2 1 3 3 1 4 1 ", "1 1 1 1 4 2 1 1 1 4 1 3 1 4 1 1 3 1 1 4 1 4 3 1 1 ", "4 1 1 1 3 3 1 1 2 1 1 2 1 1 1 1 2 3 1 4 4 4 1 1 2 ", "2 1 1 1 2 3 3 1 3 2 1 1 2 2 3 1 3 4 1 1 1 4 2 4 1 ", "3 1 1 1 1 3 1 1 1 1 2 3 3 3 3 2 3 1 2 1 2 1 1 1 3 ", "2 1 3 1 1 1 1 1 4 1 2 1 2 1 1 4 1 4 3 4 4 3 1 1 1 ", "3 3 1 1 3 3 4 1 4 1 1 1 1 4 1 3 3 2 1 2 3 1 2 2 2 ", "1 2 1 1 1 3 3 1 1 1 1 3 2 3 3 1 2 1 2 2 3 4 1 1 1 ", "1 3 2 3 1 2 2 1 3 1 1 3 3 1 2 3 3 1 1 3 3 1 1 2 1 ", "1 3 1 2 1 3 1 3 3 1 1 1 3 3 1 1 3 3 4 1 3 1 3 1 2 ", "3 1 1 4 1 1 2 3 1 1 1 2 4 1 2 1 1 1 1 2 1 3 2 1 3 ", "1 2 1 4 1 3 1 4 4 1 1 1 1 2 1 4 1 2 1 2 1 1 3 4 1 ", "3 1 1 1 1 3 3 3 4 3 1 1 1 3 1 1 1 1 4 1 1 1 1 1 4 ", "1 2 1 1 1 3 3 3 1 4 4 4 4 2 1 1 1 2 3 1 1 1 1 1 3 ", "2 1 1 1 1 2 3 3 2 1 1 2 3 1 1 1 1 1 1 1 4 3 1 1 1 ", "4 2 4 4 2 1 2 1 1 1 3 4 4 1 4 1 3 1 4 3 1 1 1"};
    vector<string> y = {"1 2 1 3 3 2 3 1 1 1 1 4 3 2 1 2 2 1 1 4 1 3 3 3 1 ", "4 1 3 1 2 1 1 1 1 1 3 2 1 1 3 1 3 2 1 1 1 1 1 1 1 ", "1 1 3 1 1 1 3 4 4 3 2 1 1 1 3 2 1 1 1 1 3 1 4 3 1 ", "1 3 3 3 3 1 1 1 4 1 3 2 2 3 2 4 3 1 1 3 2 1 3 3 2 ", "1 1 1 1 1 1 2 1 1 3 4 4 1 1 1 1 4 3 2 3 1 1 3 4 1 ", "4 4 4 1 1 1 4 3 1 3 2 3 1 1 1 3 3 3 1 1 1 1 1 1 3 ", "1 2 2 4 1 4 1 1 1 3 1 1 3 1 3 1 1 4 3 1 1 4 2 3 1 ", "2 1 1 3 4 2 1 1 1 2 3 2 1 3 1 3 4 4 1 1 3 4 2 1 1 ", "3 1 1 1 3 3 1 1 3 1 1 1 2 1 2 4 1 4 2 1 4 2 1 1 3 ", "1 3 3 1 4 3 2 1 1 1 1 2 1 1 1 3 3 1 2 1 1 1 1 1 1 ", "1 1 2 3 1 1 1 3 3 1 3 3 2 1 1 1 2 1 1 1 1 3 1 3 1 ", "3 1 1 2 1 3 1 3 1 3 4 1 1 4 3 1 1 1 4 1 1 4 1 4 1 ", "1 1 3 1 3 1 3 4 4 3 1 4 4 1 1 3 1 3 2 1 1 3 2 3 1 ", "1 1 4 1 1 1 1 3 1 3 1 2 3 4 4 4 2 3 1 1 1 3 3 4 1 ", "1 1 3 1 1 1 1 1 3 1 3 1 1 1 3 1 3 1 3 4 1 1 3 4 3 ", "3 1 3 3 3 3 3 2 3 1 2 1 1 1 4 4 1 1 1 2 1 1 1 3 4 ", "3 1 4 2 2 1 2 2 3 3 3 3 2 1 1 4 1 4 1 1 1 3 1 1 1 ", "1 1 2 1 3 3 1 1 4 3 2 3 3 2 4 2 1 4 4 1 4 2 1 3 1 ", "1 4 1 3 3 2 1 1 3 3 1 2 2 1 1 3 4 3 1 1 1 1 1 1 1 ", "1 3 1 1 2 1 2 1 3 4 4 4 3 3 3 1 1 1 1 1 1 1 1 1 1 ", "2 2 2 2 1 1 2 1 1 1 4 1 3 3 3 2 1 3 1 3 4 3 2 3 3 ", "1 1 1 1 1 1 1 1 3 1 1 1 4 1 4 3 1 1 3 3 1 1 3 1 2 ", "1 3 1 3 3 3 3 3 4 4 1 1 1 1 1 3 4 3 3 4 2 2 3 1 4 ", "2 1 3 3 4 1 3 2 1 1 4 1 3 1 4 1 1 3 1 3 1 1 1 1 1 ", "3 2 1 3 3 4 3 1 1 1 1 3 1 1 1 3 4 2 2 3 4 1 1 1 4 ", "1 1 1 1 1 3 2 3 3 1 1 1 1 1 3 3 4 3 3 3 4 2 1 3 1 ", "1 1 2 2 1 2 3 3 1 1 1 4 1 1 1 3 1 3 1 2 1 3 1 1 2 ", "1 1 1 1 3 1 1 2 3 1 4 1 1 4 3 4 1 1 2 4 1 3 1 3 1 ", "1 3 3 1 1 1 1 4 1 1 3 4 2 1 1 3 1 4 1 2 2 1 3 1 3 ", "1 4 4 1 3 4 1 1 1 3 4 3 2 1 3 1 3 1 1 2 2 1 3 1 1 ", "2 2 2 2 1 4 1 1 3 1 1 1 3 2 2 3 1 3 1 1 2 1 3 1 4 ", "1 3 1 4 1 1 4 3 1 1 3 3 2 1 1 2 2 3 3 3 4 3 1 1 1 ", "1 1 1 1 4 1 1 1 1 3 1 1 1 2 1 1 3 3 1 1 2 3 1"};
    vector<string> lengths = {"33 79 36 29 32 58 6 60 75 58 45 56 50 78 1 26 12 1", " 43 55 66 25 74 71 42 15 47 39 37 70 13 75 76 50 7", "6 9 25 80 1 70 9 5 48 30 42 28 46 60 74 1 31 25 19", " 5 3 71 73 39 34 12 55 12 51 80 22 55 70 36 66 30 ", "45 43 47 61 5 1 75 15 27 1 6 15 60 83 83 61 48 28 ", "78 57 80 45 68 53 19 52 64 6 33 61 77 45 82 55 68 ", "73 6 63 23 82 42 62 2 33 59 50 10 39 57 82 67 52 1", "7 25 19 10 76 62 60 8 1 21 80 35 55 70 2 20 72 82 ", "20 16 43 41 66 17 56 11 53 71 28 24 83 18 54 80 15", " 32 8 25 9 36 12 41 75 62 65 48 83 41 2 29 76 81 5", "6 70 2 73 8 24 28 82 66 56 80 24 74 70 81 63 67 2 ", "74 37 44 54 10 36 77 56 11 19 34 43 66 11 35 21 82", " 1 5 35 25 39 12 40 52 23 33 13 38 30 30 7 10 9 76", " 61 3 42 34 8 17 41 15 58 30 6 55 82 62 1 20 10 51", " 36 78 30 8 35 57 58 77 69 1 69 18 30 72 6 31 66 5", "2 5 31 12 27 19 67 5 15 17 80 67 3 79 64 10 64 2 6", "3 27 71 32 39 24 29 61 51 38 57 15 64 10 29 82 7 1", "5 10 60 83 73 47 37 70 34 30 31 19 59 58 79 25 7 1", "3 53 13 82 62 36 73 81 19 74 14 35 67 3 70 67 58 5", "6 51 7 52 40 9 21 66 59 81 1 45 27 77 20 9 83 5 29", " 47 30 30 11 32 46 39 42 83 77 71 25 26 22 60 13 4", "6 38 66 5 9 29 7 35 44 37 18 82 43 45 62 43 38 75 ", "12 30 81 71 54 71 7 63 52 51 50 24 28 44 29 41 6 4", "1 27 46 44 24 75 20 74 63 68 72 13 31 43 68 28 59 ", "81 63 59 71 32 5 58 34 73 71 31 2 13 72 21 27 23 6", "4 64 66 53 35 1 24 76 63 34 78 77 14 30 81 58 54 6", " 58 79 30 25 27 2 49 25 36 26 10 59 12 21 35 69 66", " 12 43 11 66 1 42 60 57 54 48 32 35 82 77 77 65 9 ", "46 26 52 41 36 40 73 81 56 20 35 52 58 69 62 36 47", " 7 37 73 29 57 25 77 76 12 71 7 67 3 68 32 43 83 1", "8 65 11 40 14 30 11 40 74 54 52 8 30 77 37 49 30 6", "3 74 37 77 11 76 81 80 53 80 48 22 44 78 36 69 68 ", "81 79 74 1 72 30 57 51 62 45 38 44 2 75 34 40 1 11", " 65 37 6 16 39 14 36 44 33 76 27 25 54 49 73 64 40", " 71 40 37 34 75 38 12 62 66 73 16 22 57 20 68 54 4", "2 25 73 14 20 59 4 52 55 2 42 20 41 71 12 64 25 28", " 11 3 1 31 66 12 61 2 33 2 75 29 72 78 38 61 47 2 ", "4 64 68 53 76 57 5 3 42 83 59 54 50 24 49 28 64 11", " 77 65 1 76 34 34 80 38 71 4 15 22 78 63 52 58 5 7", "0 62 60 12 41 20 40 48 37 28 80 68 83 73 77 29 26 ", "69 29 64 7 42 22 32 67 11 75 71 74 7 32 6 72 81 61", " 38 36 75 78 8 2 11 15 61 59 80 30 83 53 33 63 7 4", "1 33 57 6 60 21 51 18 44 47 20 54 8 16 7 1 25 5 1 ", "45 82 29 53 57 56 18 19 76 7 66 49 61 70 3 53 59 4", "7 68 20 64 26 76 67 78 42 17 17 24 77 76 53 50 78 ", "64 51 80 56 45 29 46 3 65 52 58 12 24 11 43 11 42 ", "69 68 43 58 33 1 62 42 56 81 27 77 46 32 46 53 56 ", "56 54 51 31 21 55 20"};
    vector<string> names = {"B BB AA A A AC A A C C A AA B A BB B A A C AA A AB", " C A CA B BC C A A A A A A B A A AC A A B A BC A B", " C A B AB AB A AA A A AA A A A A C A A A CB A C A ", "A A B A A C AA C C A A C BB A AA C C A A A BC A A ", "A A A CA C C B AA B A B A A A A B B C AC AB A BA C", "A A BC A A C B A A B A A CA C B C BA A A AA A C BA", " A CB B B AA CA A C C A C B AB A AA AA C C AA A A ", "AA AA C C A C A A A A AA A A BA BA A A AA A A A CA", " AA C A B A AB A CC AB B A C B BB AC AC A CB AB A ", "A A B A BA A B B C AB A B AC C A B A AA C A C C B ", "B A B AA A A BB A A A A B A B BB AB A C A B A B AC", " A A B A A A A C A A C A C A AC B A AC AC A AA C A", "B A B AB B A BC A C C A A A C A A B C A A C A A A ", "A AA A BA AA BA A B A B A B A A A C A B C BC A A C", "A A A BA C A BA A A A AB B B A A B AC A BB A C A B", " CB A A B C C B A A B CA A C A AA B A AA AB C AA A", " AA AA A C A AA A A AB AC BB AB B C A B C BB A AC ", "B AA A A C A AA A CC A A A A AC A B C C CA A C A C", "A CB A A AC A AB A A C A B A AC A B B CB A A B B A", " A A AA B C A AB A BA A AC B A A A A A A A B AA A ", "A B B C AC B A CC A AA C CA C B A A A A A A C A A ", "A B B B AB BA BA AC BA CC C B A A CA A A B A A BA ", "A BB C AB A BA CA C B CC A B A CA C A AA B BA AC A", " A C A AC AC A BA C AA A A A A A C A A B AA B A B ", "A A A A A C B AC B AA C A C AB AA A C CA C AA AA A", " AA AA A A CA A A AA AA A B BA A A BA AB A C BA A ", "C B C C AB B B A C A A A B B CB C A A AA A AC A A ", "A BA AC AB A C AA AA B C AA A A A AC C CA A A A A ", "BC A A C B A BC C B AA CA A C A A AA A C B A A A A", " A AB AA BA A A A A B A C B A B A C CA AC B A C A ", "AB A A B CC C AC C C A BA B A C A CA B B A CA B CB", " C A AA A A A A AC CA CA AC B B C B CA A A AA A CA", " A A A C A B AB A C AA AB AC B CB CA A A A A A C C", " A AA B B BA C C A B B A C C A B BA B A AA C A AC ", "A A A A C A A A C A CA AA B A AA BA BA A C C C A A", " A A A C B A B A A CA BA A C AB C A A A A B B A B ", "BB C B A A BB BA BC CC A A A A B AA A B BA A A CC ", "B A A AC A C CC"};
    int k = 73;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"};
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    vector<string> x = {"2 1 1 1 3 1 1 1 1 3 3 2 4 2 1 2 1 3 1 1 1 1 1 1 3 ", "4 3 3 1 1 2 4 2 3 4 3 1 4 4 3 1 2 1 1 2 2 1 3 1 1 ", "3 1 1 1 1 3 1 3 1 2 1 1 1 1 4 1 1 1 4 1 1 1 1 4 1 ", "3 1 1 4 1 3 4 3 1 1 3 1 3 4 3 4 3 3 3 1 1 1 1 1 1 ", "1 1 1 1 4 1 1 4 1 2 2 3 1 2 1 1 1 1 3 3 1 3 4 2 3 ", "4 1 1 1 3 3 3 1 1 2 1 1 1 2 1 3 1 3 1 3 3 1 1 1 1 ", "1 3 1 3 3 2 4 3 1 2 4 1 1 4 1 3 4 3 4 1 3 1 3 1 4 ", "1 1 3 3 1 3 3 1 4 4 1 1 4 1 1 4 3 3 1 1 1 4 2 3 3 ", "1 2 3 3 4 3 2 1 1 4 3 3 2 4 1 1 3 4 1 4 2 3 1 3 4 ", "3 3 1 2 1 4 1 3 4 3 1 1 1 3 1 1 4 1 3 3 1 1 4 1 4 ", "1 3 1 2 1 3 1 1 1 3 3 3 1 3 1 1 1 2 3 1 2 1 4 1 1 ", "3 1 3 1 1 3 3 1 1 1 2 3 3 1 1 1 4 3 4 1 1 1 1 1 3 ", "3 2 4 3 1 1 3 1 1 1 1 4 3 1 1 1 1 1 3 3 1 1 1 1 1 ", "2 4 1 1 4 4 1 1 1 3 1 4 2 1 3 1 1 3 3 3 1 1 1 1 4 ", "3 3 1 4 4 2 1 1 3 1 3 1 3 3 1 1 1 2 1 1 1 4 4 3 3 ", "4 1 1 4 1 4 3 1 1 1 2 1 3 1 1 4 4 4 2 3 3 1 3 3 1 ", "3 1 1 1 3 2 1 2 1 4 1 4 2 1 3 3 1 4 2 1 3 2 1 4 1 ", "1 1 2 4 2 2 3 2 3 1 1 3 1 3 2 3 3 3 1 1 1 3 1 3 3 ", "4 3 2 1 1 1 2 3 1 1 1 2 2 3 3 1 4 3 1 1 3 1 1 3 1 ", "1 3 1 3 1 2 1 2 1 3 1 2 1 3 3 3 1 4 3 1 1 1 1 1 3 ", "1 1 2 1 1 1 3 2 1 1 3 1 1 4 3 1 1 1 1 3 4 3 4 1 1 ", "3 1 1 1 1 1 1 1 1 4 4 1 4 1 2 1 4 1 1 3 3 3 3 1 3 ", "1 3 1 1 1 1 4 2 3 4 2 2 1 1 3 3 1 3 1 1 1 1 1 4 2 ", "3 1 3 1 1 3 1 3 2 2 1 1 3 3 3 4 1 1 2 3 1 2 1 4 3 ", "3 4 1 1 4 1 2 1 1 1 2 4 1 3 1 1 1 1 4 3 1 1 1 1 1 ", "2 1 1 1 4 1 3 2 1 1 2 1 1 1 4 2 3 1 1 1 3 2 3 3 1 ", "1 3 2 1 3 3 3 3 4 1 1 1 4 3 1 3 4 1 1 1 1 1 1 1 2 ", "1 4 1 1 3 4 2 4 1 1 4 2 1 1 4 2 1 1 1 1 2 3 3 1 1 ", "1 4 1 4 3 1 3 1 3 2 1 4 2 3 1 1 1 1 3 3 2 3 3 2 3 ", "1 2 3 1 1 1 1 3 3 1 3 1 3 1 1 3 1 1 3 4 1 2 1 1 3 ", "3 1 4 2 1 1 1 1 3 1 3 1 4 3 2 2 3 3 2 3 4 3 1 4 4 ", "1 3 3 3 1 3 3 3 1 4 4 1 3 1 3 1 4 3 3 1 1 3 1 1 2 ", "3 1 1 1 2 4 4 1 1 1 1 2 3 4 3 1 4 1 1 2 3 1 3 1 2 ", "4 1 1 1 1 1"};
    vector<string> y = {"1 1 1 4 3 2 1 3 1 3 2 3 1 1 1 3 4 1 1 2 1 1 3 3 1 ", "3 3 3 4 3 1 1 1 1 1 1 2 2 3 1 1 3 1 2 2 2 1 1 1 1 ", "3 1 1 1 1 4 2 1 3 1 4 1 2 1 2 1 1 1 1 2 1 2 1 1 3 ", "1 1 1 1 4 3 1 1 2 3 4 1 1 3 1 1 1 1 1 3 4 1 4 1 2 ", "3 3 2 3 1 1 2 1 3 1 1 1 1 3 1 1 3 2 1 1 3 2 1 4 1 ", "2 1 4 4 3 3 1 4 1 1 3 3 1 1 1 3 2 4 1 3 1 1 4 2 2 ", "4 2 3 1 1 1 1 3 4 1 3 1 2 1 1 2 1 1 1 1 1 4 3 3 3 ", "3 4 1 1 1 3 1 3 2 1 1 1 3 3 3 4 1 4 3 3 1 1 3 3 1 ", "1 3 1 4 2 1 1 1 1 1 1 4 2 1 3 2 1 4 1 2 2 4 3 1 1 ", "1 1 4 4 2 3 1 1 1 3 1 1 4 3 1 1 1 1 2 1 1 2 1 3 1 ", "3 1 3 1 1 3 1 1 1 1 2 1 4 1 4 3 2 1 1 1 1 2 2 1 1 ", "4 1 1 1 1 1 1 4 1 3 2 1 3 1 1 1 1 3 1 1 1 3 1 1 4 ", "3 1 2 4 3 1 1 1 1 1 3 3 1 3 4 1 4 3 1 3 3 1 1 1 3 ", "1 1 3 4 1 3 4 4 4 1 1 3 1 3 3 2 1 2 1 1 3 3 1 1 1 ", "1 3 4 1 1 1 2 1 4 1 3 1 3 1 3 2 3 2 1 1 1 2 1 3 1 ", "1 3 3 3 1 4 3 3 1 1 1 3 3 1 4 1 2 1 1 3 3 3 1 4 3 ", "1 1 3 1 1 1 1 2 1 1 1 1 3 1 1 1 1 3 2 2 1 2 4 1 1 ", "3 2 1 3 1 4 3 3 4 2 3 1 1 4 2 1 3 4 2 1 3 1 3 1 1 ", "4 2 1 3 3 1 2 1 1 1 1 4 3 1 1 1 1 4 4 3 2 1 4 1 3 ", "1 2 3 1 3 1 1 3 3 1 3 2 2 3 3 1 4 3 1 1 1 2 4 3 1 ", "1 3 1 1 3 1 2 1 3 1 2 1 2 1 1 1 3 2 1 1 1 4 2 1 1 ", "1 2 1 1 1 3 1 2 3 3 1 4 4 1 3 1 1 4 4 1 1 1 3 3 1 ", "1 1 1 1 2 4 3 2 4 1 3 3 4 1 1 1 3 1 4 3 1 1 2 1 2 ", "1 3 3 4 4 1 2 3 3 3 1 1 2 3 2 3 3 1 1 1 1 3 1 1 3 ", "3 1 1 2 1 1 3 1 2 4 1 4 1 3 3 1 2 4 3 4 3 3 4 3 3 ", "4 2 3 4 1 1 3 2 1 1 3 2 3 1 2 3 1 4 1 1 3 1 3 1 2 ", "1 1 1 3 3 1 3 2 2 3 1 3 1 3 1 4 4 1 3 1 4 1 3 1 1 ", "1 1 1 1 4 4 4 3 1 1 1 1 4 1 1 3 1 1 1 4 2 1 1 1 1 ", "1 3 3 1 3 3 1 2 1 3 1 1 1 1 3 1 1 1 1 4 1 4 2 3 4 ", "1 3 1 2 1 2 4 3 1 1 3 3 1 1 3 4 2 3 1 1 4 3 2 1 1 ", "1 4 3 3 1 2 1 3 1 4 2 1 3 3 1 4 1 2 3 1 1 3 1 1 3 ", "3 1 1 1 1 1 1 1 3 1 3 1 1 1 3 2 3 2 1 1 3 1 2 2 1 ", "1 3 3 4 1 1 2 1 2 1 1 1 3 1 1 1 1 4 1 1 3 1 1 2 1 ", "3 3 1 4 3 1"};
    vector<string> lengths = {"47 1 56 82 73 64 46 19 13 52 48 59 69 11 19 56 75 ", "50 13 72 45 21 42 50 56 50 53 23 69 30 67 54 46 74", " 56 40 24 41 48 47 19 74 4 6 1 80 81 76 67 81 24 1", "2 27 56 22 79 25 58 71 23 76 7 4 38 12 77 46 49 51", " 65 26 31 45 49 42 25 76 67 61 39 57 41 83 71 17 2", "7 5 64 10 28 70 3 70 13 54 68 1 23 52 33 6 76 42 4", "3 52 55 80 71 43 14 76 3 56 49 40 47 13 50 26 48 4", "6 47 27 41 79 62 80 73 47 40 81 3 76 78 43 7 40 23", " 74 11 20 31 53 4 9 68 36 64 38 5 78 5 25 47 83 56", " 10 58 45 4 50 49 9 60 62 21 2 50 12 75 40 56 19 1", "5 29 22 80 2 13 57 40 77 64 14 77 39 67 78 22 72 3", " 40 58 2 42 48 13 83 63 12 41 31 17 79 74 1 14 44 ", "55 60 16 51 1 68 70 4 31 61 61 26 79 1 40 5 19 32 ", "61 52 12 6 22 16 69 73 19 38 70 39 75 2 4 55 61 79", " 63 55 12 78 77 61 67 18 20 3 14 69 22 56 66 73 56", " 1 50 48 30 48 25 57 16 33 69 50 52 47 51 68 12 34", " 32 58 73 52 68 42 44 46 60 16 1 83 37 80 55 53 47", " 78 4 31 71 57 3 19 48 10 57 16 62 44 76 17 7 32 3", "8 32 75 30 77 58 34 27 55 46 10 73 49 16 6 26 71 2", "0 18 25 45 82 73 37 12 21 31 18 76 30 32 57 18 61 ", "40 61 50 23 18 37 46 67 79 32 15 83 70 83 38 60 61", " 71 34 1 19 50 31 69 62 45 39 40 67 73 68 22 73 3 ", "27 69 77 16 32 13 6 50 37 34 63 6 58 53 42 63 12 3", "4 27 44 57 31 20 38 77 7 80 10 6 81 27 29 38 26 60", " 76 72 17 71 70 76 26 63 76 48 21 49 35 18 67 56 5", "2 77 53 18 14 1 30 66 35 60 79 74 40 11 6 73 41 3 ", "55 45 40 38 2 50 46 8 29 44 6 4 32 48 25 33 70 76 ", "3 15 22 20 40 25 27 14 8 1 3 33 69 69 83 39 41 65 ", "21 76 37 15 20 19 13 79 40 1 48 72 17 23 42 16 7 3", "1 30 60 45 56 76 52 77 15 51 28 50 32 67 57 15 30 ", "61 60 53 51 43 71 15 16 78 9 51 16 14 56 46 15 7 3", "8 20 80 45 78 69 30 27 74 54 62 56 45 9 61 41 58 3", "5 17 40 4 36 2 24 74 64 80 22 43 23 72 70 1 1 63 1", "4 55 31 79 62 72 15 28 57 63 13 69 17 12 65 24 54 ", "4 69 67 78 38 12 24 15 19 50 77 75 22 1 3 70 45 1 ", "53 55 14 73 79 63 2 13 27 1 53 24 30 55 43 80 80 2", " 80 60 31 21 30 83 44 18 77 34 18 74 42 31 25 56 1", "2 58 40 51 6 50 5 83 16 83 40 27 68 41 36 60 76 24", " 9 25 8 35 4 32 82 27 51 9 77 18 12 57 35 1 34 50 ", "3 4 46 15 80 45 39 37 54 62 10 79 69 65 5 71 50 65", " 78 14 75 3 41 61 29 3 75 10 43 50 36 80 24 14 48 ", "58 19 8 77 59 81 79 41 36 65 36 5 65 55 50 76 49 1", "8 14 19 17 77 46 75 14 77 51 2 23 14 67 67 77 7 56", " 65 52 67 49 43 76 19 18 38 34 24 74 42 17 37 69 7", "0 53 28 21 55 28 59 26 45 45 37 71 70 71 44 59 43 ", "77 40 1 24 75 78 26 77 43 48 46 68 59 56 40 67 20 ", "41 52 14 40 43 64 2 30 45 1 57 28 19 60 57 28 22 1", " 38 67 74 59 35 77 11 61 42 8 37 21 9 25 24 56 55"};
    vector<string> names = {"A A CC A A A B B A AA B A CA A AA CA A AA AA A C B", "B BA A A B BC AA C C A A B B AC A B A CA BA A AA B", "A A B A AA A BB B A A A B C A A AC B A CA C A A AA", " BA CB CC A CB A C A A A CA B C A A A A AA B A A A", " AA CB C C A A C CA A B A CB B B AA A AA AA A A A ", "A A BB BA A A C C A A C C A C CC A A A C A AC A AB", " AB A C C C CA A A AA B A BB C B A A B BA A B A A ", "A AC B C A A AA A A BA CA A C A C B BA AB A B B A ", "A A A A C B B A A CB A B AB C A AA A C C B C AA CA", " A B A C AB A CA B CA A B B A A C A AC AA BA A A A", " AC A AB C A AA A B A B C A C AA AA C A C AA A A C", " AA C C A A A A B A CA A B A CC AC C AC A CA A BC ", "A A B B B AB BB B CA AB A B A B C C A AA A A A A A", "A C C B AC AB C AB C C C A AA B A A A A AB B B A A", " A C A A C C C B B A AA A AC C C A A A BB A B B C ", "A AA C C AA B A AA AA A C C C C A A A B CA CA C BB", " A BA A AA A CB B B A A C A A B AB C A B B A A A A", " A A A BA AB B A C B CA AB AA BA B A B BC B A BB B", " A C CB AA C A A A C A A B A A A A C A C A B B A A", "B C AC AA B A CA A B BA A A A A BA B A C A A A C B", " A B B C AA A C A A C A AB C A A C C BA AA C AA B ", "B A C AC A C C C B AC CA CA B A C A CA AA A B C C ", "CC A A B AA C A BB AC BC C A A A C A BA AA A A B A", " C AB A A A A A A A BA C A A A A C CC A A B AC A C", " AC A B A A A CA A A A A A AA AA A B B A C CA A C ", "B A A AA C C BA A AA AA A CA A A C A A A AC B BA B", " A AA B C A CA C C B AA A A A CB A C C B B B B B C", " A AA A B B C A B AA A C A B C A A B C CA CB BA A ", "B AA CA AA A A A B CA AA A B A C A A A AA C A C A ", "C C B C C BC AC AA A CA C CA A CA A AA C A AA AA A", " BA A A A A A AC A A A BC A B A A A B C A A BA CA ", "A A C B C B C CA C A A A AA C AA A A A B A C C AA ", "B A B B B A AA BB A CA B A B AA AC A A A B AA AB A", "A A A AA BB A C A BA A C A A CA CA C A C B C B BC ", "BA A C A A BC BB C C C AA A C C A A AC BC A A B A ", "B A A A C AC AA B AA C B B A B A BA A BA C C B B A", " CA B BC C AA A AA C A A AA A A A A C A B AA A AA ", "BA AB AA A C A C A B B AA AC A"};
    int k = 86;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "C", "B", "C", "C", "A", "A", "A", "BA", "BA", "C", "B", "BA", "A", "BA", "C", "A", "A", "A", "B", "B", "B", "BB"};
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    vector<string> x = {"2 2 2 1 1 1 1 1 1 1 3 4 2 2 4 1 1 1 1 3 3 4 2 4 1 ", "4 1 1 1 1 1 1 4 2 1 1 1 1 3 1 4 1 3 3 3 1 1 2 1 2 ", "3 1 1 2 1 1 4 2 1 1 1 1 3 1 4 1 3 1 1 1 1 3 2 1 1 ", "3 4 2 3 3 1 1 1 1 1 3 2 1 1 3 1 2 1 3 1 3 1 3 1 1 ", "4 1 1 1 3 1 3 1 4 4 1 4 3 4 4 3 4 3 3 1 3 4 3 3 3 ", "1 4 1 3 1 4 3 1 1 1 2 1 1 4 1 4 1 1 1 3 3 4 1 1 2 ", "1 1 3 2 2 1 1 3 4 1 1 4 1 3 1 1 2 3 4 4 2 1 1 3 2 ", "1 4 2 1 3 1 1 1 3 1 3 1 1 3 3 1 1 3 1 3 4 1 1 2 1 ", "1 1 3 1 3 4 3 1 1 1 3 4 2 2 1 3 4 1 1 1 1 1 1 1 4 ", "4 2 3 2 1 1 3 1 1 3 1 1 1 3 1 1 4 4 2 2 1 1 3 1 2 ", "1 1 3 2 2 3 1 3 2 1 3 3 1 1 4 3 1 2 1 4 1 2 4 3 1 ", "4 3 1 1 1 3 2 2 4 3 3 1 4 1 1 3 1 1 3 3 4 1 4 1 1 ", "1 3 1 1 1 2 1 2 1 1 1 1 3 1 1 4 2 4 1 3 1 3 1 4 1 ", "1 3 1 1 1 2 3 1 1 1 4 3 3 1 3 1 3 1 3 3 4 3 3 1 1 ", "1 1 4 1 2 1 3 3 1 1 1 1 1 1 1 1 1 3 2 3 3 1 3 1 1 ", "1 2 3 1 4 3 1 1 4 1 3 1 1 1 1 2 4 1 1 1 1 2 1 2 3 ", "1 2 4 3 1 4 1 4 1 3 3 1 1 1 1 4 3 3 4 2 2 3 1 1 1 ", "2 1 3 1 4 4 3 1 1 2 1 2 3 3 1 1 1 2 3 2 4 3 3 3 1 ", "1 1 2 4 2 1 1 4 1 4 3 4 1 2 4 1 3 3 4 1 1 3 1 4 4 ", "4 1 1 1 3 2 3 1 1 1 1 4 1 3 1 3 1 1 1 1 3 1 1 1 2 ", "4 1 1 2 1 4 3 1 1 3 3 3 1 4 2 3 1 3 1 1 2 1 1 1 3 ", "1 1 1 3 4 1 3 1 4 1 1 1 2 3 2 1 4 3 3 3 4 3 1 4 1 ", "1 1 3 3 1 1 3 1 1 3 2 1 3 3 1 2 4 3 1 1 1 1 1 4 4 ", "2 3 3 3 1 1 1 1 1 1 3 1 3 2 1 4 3 2 1 3 1 3 1 2 1 ", "1 3 3 3 4 1 4 3 1 1 1 1 3 1 3 3 1 1 1 2 1 1 4 3 1 ", "2 1 2 4 1 3 1 1 1 2 1 2 2 1 3 4 1 4 2 1 2 3 2 3 1 ", "3 2 1 3 3 1 3 3 1 3 3 1 1 1 2 1 4 1 2 2 1 3 1 1 1 ", "1 1 3 3 3 1 1 3 3 4 4 4 3 3 1 1 3 3 4 3 2 4 1 3 2 ", "1 2 3 1 4 2 3 1 1 1 1 3 1 2 3 4 1 3 2 1 3 1 1 2 1 ", "3 3 4 1 1 2 1 1 2 1 1 4 1 3 3 3 1 4 1 1 1 4 1 2 1 ", "1 3 1 1 1 1 3 1 1 1 3 1 1 1 1 1 1 1 3 3 2 1 1 2 3 ", "1 1 1 1 1 1 4 3 1 1 2 2 4 1 1 2 1 1 4 1 1 4 2 1 1 ", "3 1 1 4 1 1 1 2 1 1"};
    vector<string> y = {"1 2 4 1 1 1 2 1 1 4 3 1 1 1 3 2 1 4 1 1 1 1 1 2 1 ", "3 1 3 3 1 1 1 1 1 2 3 3 3 1 3 4 3 3 3 4 1 1 1 3 4 ", "1 3 3 3 1 2 1 3 1 1 4 1 4 1 3 1 2 3 1 2 3 3 3 1 2 ", "1 3 1 1 1 4 1 1 1 3 1 2 4 3 1 3 1 3 1 2 3 1 1 3 3 ", "1 1 1 1 1 3 1 2 1 4 3 1 2 3 1 1 1 3 1 3 2 2 1 2 1 ", "1 1 1 1 4 3 1 1 3 1 2 1 3 2 3 1 1 1 3 1 3 1 1 1 1 ", "1 1 1 1 1 1 1 3 1 1 3 3 1 2 1 1 4 1 1 4 1 2 2 1 1 ", "1 4 4 1 1 1 1 1 4 4 2 1 1 4 3 1 4 1 1 4 4 2 4 3 3 ", "3 3 3 1 3 1 4 2 1 2 1 3 1 1 1 3 3 2 2 1 1 1 1 1 1 ", "4 4 1 1 1 1 3 1 3 3 3 1 1 3 1 3 4 1 1 3 3 1 3 1 1 ", "4 2 1 3 4 2 1 1 2 1 4 1 1 3 3 1 1 1 2 4 1 1 3 1 1 ", "1 4 1 1 2 3 3 1 3 4 3 2 1 1 1 3 3 1 1 3 1 4 3 1 2 ", "3 3 4 3 3 4 1 1 2 3 2 1 3 1 2 3 4 3 2 1 4 1 1 1 1 ", "1 3 3 3 1 1 1 1 3 3 4 4 1 2 2 3 1 1 1 1 3 1 1 3 1 ", "1 2 3 3 3 1 1 4 4 2 3 1 4 3 2 3 4 4 4 1 4 3 2 3 1 ", "3 3 1 3 4 3 1 3 1 1 1 1 3 3 1 4 1 1 1 1 4 4 1 3 1 ", "1 1 1 2 3 3 1 3 4 1 1 1 1 1 2 3 1 1 1 1 3 1 1 1 3 ", "1 3 1 2 3 1 1 3 4 1 4 1 1 2 1 1 2 1 3 2 1 1 1 1 1 ", "1 1 1 3 1 4 1 1 3 3 3 1 4 1 4 3 2 1 1 3 1 3 1 2 2 ", "1 1 4 1 3 3 1 1 3 2 3 1 1 3 1 1 2 1 1 1 3 3 1 3 3 ", "3 1 2 3 3 2 1 1 1 1 1 2 1 2 1 3 3 2 2 2 1 3 1 1 3 ", "1 1 1 1 1 1 4 1 4 2 1 3 2 1 4 3 1 2 3 1 2 3 1 1 1 ", "1 1 3 3 3 1 2 1 1 4 1 4 3 4 1 2 3 1 2 1 1 4 3 1 1 ", "4 1 1 4 1 4 1 1 1 1 2 2 2 1 1 4 1 1 1 1 1 4 1 3 3 ", "1 4 4 1 3 2 1 4 3 1 1 1 3 2 2 1 2 2 1 1 1 1 3 2 2 ", "1 3 2 1 4 1 1 1 3 1 1 1 1 1 2 1 3 1 3 1 1 2 4 1 4 ", "3 1 3 1 3 4 1 1 4 1 1 1 4 3 3 3 1 2 1 2 2 1 1 2 2 ", "3 4 4 3 3 1 2 1 2 3 4 2 3 1 1 1 3 3 3 1 1 1 1 2 1 ", "1 1 2 1 1 1 1 4 1 1 3 3 1 1 3 1 2 1 1 2 1 2 4 4 3 ", "1 1 2 1 1 4 4 1 1 2 1 4 1 1 1 2 2 1 3 1 1 2 1 4 3 ", "1 1 4 2 2 1 3 2 1 3 3 2 3 1 3 2 4 1 3 3 1 1 1 2 4 ", "1 3 1 1 3 3 2 1 1 4 1 1 1 2 3 4 1 1 3 3 2 2 3 4 2 ", "1 1 2 3 4 1 3 1 4 3"};
    vector<string> lengths = {"46 37 48 45 44 29 66 15 36 67 63 83 13 70 60 12 51", " 56 32 40 67 36 15 71 64 58 61 27 1 64 62 51 57 77", " 31 55 12 42 2 43 9 81 80 3 47 57 73 50 23 41 11 7", "6 78 79 13 62 21 33 5 47 49 5 2 77 60 49 71 74 29 ", "30 22 59 28 48 78 39 1 77 14 82 42 73 72 34 66 71 ", "26 34 28 13 4 49 14 1 10 49 48 60 22 72 42 81 59 1", "9 54 43 25 40 38 45 55 37 64 44 77 41 76 78 58 18 ", "44 24 16 50 80 69 19 22 35 32 62 30 10 70 6 49 56 ", "29 52 11 58 49 36 20 57 39 61 12 34 80 42 38 57 62", " 67 1 72 49 26 43 66 5 66 7 7 78 73 42 25 34 52 57", " 60 58 1 63 37 19 1 83 47 42 81 31 34 22 71 40 67 ", "18 44 33 31 11 77 50 21 39 54 34 51 75 38 41 16 21", " 66 5 9 59 82 40 29 25 82 37 25 33 45 78 33 21 53 ", "65 9 57 3 40 27 7 1 59 30 2 75 21 28 56 24 19 56 1", "9 73 18 45 4 69 80 2 76 45 7 40 43 16 47 51 76 65 ", "32 57 48 43 54 12 61 20 29 72 53 17 40 53 60 35 69", " 61 10 48 38 19 32 75 21 18 5 63 49 35 60 76 83 67", " 59 23 24 56 33 48 64 52 24 9 1 4 58 78 75 26 43 5", "1 12 51 77 53 21 73 45 32 64 36 51 22 56 58 19 15 ", "37 2 4 4 83 53 70 21 21 31 61 37 73 24 78 81 82 70", " 26 16 9 30 13 66 70 76 74 64 70 7 22 21 72 7 56 5", "3 20 37 40 49 51 26 62 45 36 54 3 20 41 19 1 50 52", " 51 69 22 41 17 80 31 30 35 57 75 16 14 26 8 23 21", " 73 34 41 80 17 55 34 48 28 63 25 61 20 60 35 64 3", " 60 11 32 30 37 9 10 79 22 8 35 30 51 39 60 30 79 ", "22 6 31 83 37 5 40 5 39 62 41 77 24 52 5 83 14 66 ", "30 62 44 57 20 37 81 62 76 39 45 52 76 1 80 17 15 ", "23 7 17 18 71 18 77 81 74 19 30 2 29 75 26 70 51 2", "4 23 25 82 79 30 82 9 28 74 64 82 17 40 70 32 53 5", "0 12 50 80 23 62 40 56 67 64 64 48 32 57 33 76 42 ", "53 30 25 47 13 24 20 13 83 12 67 82 57 76 69 59 33", " 27 67 73 12 34 9 62 13 17 40 27 51 68 1 10 18 24 ", "67 39 30 5 24 47 26 70 4 15 18 30 42 29 32 9 1 25 ", "28 52 28 60 23 70 58 57 48 43 40 28 33 26 12 47 50", " 64 4 22 40 55 15 44 75 81 74 13 58 20 69 31 6 47 ", "50 7 53 5 67 25 15 64 1 21 35 11 1 50 24 50 54 74 ", "33 50 80 44 32 36 17 2 11 14 74 30 8 42 5 16 42 20", " 70 67 77 74 74 12 15 34 23 22 30 31 53 3 10 25 56", " 36 7 1 40 64 48 1 11 8 10 27 58 5 27 2 76 70 56 3", "9 24 14 64 10 11 80 1 10 54 81 31 17 7 67 41 67 82", " 73 39 38 11 78 59 44 43 69 18 31 31 46 3 63 16 54", " 73 65 83 54 26 75 22 1 37 40 56 73 6 10 34 9 3 14", " 4 27 5 39 78 74 28 74 64 59 47 4 36 20 37 32 25 4", "5 17 66 10 30 49 5 6 63 46 42 54 82 70 26 30 39 60", " 14 62 64 21 34 24 1 38 67 66 32 9 8 43 18 13 28 4", "6 78 47 1 38 79 47 14 21 29 21 47 80 31 65 30 28 5", "7 52 67 78 28 72 37 63 73 70 54 12 24 78"};
    vector<string> names = {"A A A AA B B BA CA BA AC B A BB A A B C A B CA A A", "A A AA A C BC BA A C AC A A AA A A B B B B B B AC ", "A B A BA C C A A C A C C B C A C B A A A A A A CA ", "AA B AB AA BA AA C A A A A AA C A A A A A B BA C A", " A AB AA B CA BB A AA A A BC CC B BC BB A A C B B ", "A AB A CC C B A A B B CA BB AB A A B A BC A B BA A", " C A B B B A C AA A A A C B AB A A A C C B A A AC ", "AA B AA C A C BC CA C CB A B C AC A C AA AA B A C ", "C AB CA A A A AA AA AA B C AB A BB A AA AA B B A C", " A C B C A A A B A A AC BA A C A A AA A A A C A AA", " C C A A A AB AB A A C A A BA A C BB A A A A A BA ", "B CA CA A A B A A AB AA C B AA C B B C B A A CB AA", " CA A AA B C B A AA A A B A BB A C AB A C A AB AA ", "AC A A A A A A C B C AA C CB A A B A B A AC A A A ", "A A A C A B C AA C A AC A AB C A A B A A A C C A A", " A A B C C C CA B B A AB A A A CA B C C A A B A A ", "A CA A A A A A C A A AB AA A CC B B BA A C C C C A", " A A C B B C BC A B C C B A A A B A C A C B B C C ", "A A AC A C B A A AC AA A A C A C C B A BB BA C C B", " A A A BA A A A A A CA A A B A A C BA AA A AB A A ", "AA BC C AA AB A CB A BC C B A B B AC BC AC BA C A ", "A B BA A A B A AA C C A AA A AC A B C C C B C B A ", "A B C C A C C A B A BB C AA AB A C A C CA A A A CA", " A AA B AB A A B B CA A A B A AB B B A AA C A BA A", " C A A B BB A A AA A C AA AC A A C AC C A AA A AC ", "A A B A BA A CA C B A C CC BC AA C C B A B A A A A", " AC C CB A B AC A B B A AA A AB A AC B A B A A C A", "C AC C B A A A A A BA C A B A A C C C A A AA CA B ", "A AA C B AA A C B CC BA AB BA A C B AC A A A A AA ", "A CB C A C A C AB B BC AA C A C A A C B C B A A C ", "C BA A B B B BB A B BA C AA C C C A BB CA AB AA AC", " A B AA A A AA A A CA A BA AB B A A AA A A CA B BC", " A B B A A CC C B B CA C C BA A A BA A A A B A A A", " BC A A A B A A A A B B A B C B BA A B A A B CA A ", "C B A A B AB A A A A C B A A A AA CB A CC C A AA A", "B AA A CA A AB AA A AB A AA B BB B AB AA B A A CA ", "BA B A A A C A B A A C AA AA A"};
    int k = 70;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"};
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    vector<string> x = {"1 1 3 3 1 2 1 1 3 1 4 1 1 1 1 1 1 4 1 1 1 1 3 3 1 ", "2 1 1 3 1 4 2 3 1 1 3 1 1 2 4 1 3 3 3 1 1 1 2 3 1 ", "3 2 1 2 3 1 1 4 1 1 2 1 1 1 4 4 3 2 3 3 1 2 3 2 1 ", "4 2 4 1 1 4 2 3 4 2 3 3 1 1 2 1 1 3 3 3 1 2 4 4 4 ", "2 1 1 1 4 3 3 4 1 2 1 1 1 1 1 2 1 1 3 1 1 1 2 1 4 ", "3 4 1 2 3 1 3 3 1 2 4 4 1 4 3 1 4 1 1 2 1 1 3 1 1 ", "3 1 4 4 1 3 1 3 3 4 1 1 1 2 3 2 4 3 1 1 2 1 1 3 4 ", "3 4 2 4 3 1 1 1 2 3 2 3 1 1 1 1 3 2 1 2 1 2 4 3 1 ", "3 1 3 1 3 1 4 1 4 1 1 2 4 1 1 3 3 4 1 4 1 1 1 1 1 ", "3 3 1 1 1 3 1 4 3 1 3 2 2 1 1 4 2 1 1 1 1 3 2 1 3 ", "3 3 1 3 2 3 1 1 3 1 3 1 4 1 3 1 2 1 1 2 1 4 1 1 1 ", "1 4 1 4 3 3 3 3 1 3 3 3 1 1 3 4 3 3 3 2 2 4 2 1 3 ", "1 3 1 3 2 1 4 1 2 1 1 1 1 2 1 1 2 1 4 1 3 4 1 3 2 ", "1 1 1 2 1 3 4 3 1 1 1 1 1 3 3 1 2 3 3 1 1 1 3 1 3 ", "1 2 3 1 1 3 3 3 3 3 1 1 2 2 2 3 3 3 1 1 3 4 4 1 3 ", "1 2 4 3 1 1 2 4 2 4 1 1 3 4 2 1 2 4 2 1 1 1 1 3 1 ", "4 1 1 1 1 3 1 2 1 1 1 4 3 1 1 1 3 2 1 1 1 1 3 1 3 ", "4 3 1 3 1 1 1 3 1 3 3 1 4 1 1 3 3 1 1 1 1 3 3 4 1 ", "1 1 4 1 4 1 3 1 3 1 2 2 4 3 4 1 1 3 3 1 1 1 4 1 1 ", "1 1 2 1 1 3 1 3 1 3 1 1 3 3 1 1 2 1 1 4 1 1 1 1 1 ", "3 4 3 2 1 1 1 3 1 2 1 4 3 4 1 1 1 4 3 2 4 1 4 2 2 ", "1 1 2 1 2 1 3 1 3 4 3 1 1 3 2 3 3 1 1 3 1 2 3 3 3 ", "1 1 1 1 3 1 1 1 4 1 1 3 1 1 3 3 3 1 1 3 1 4 1 1 1 ", "1 2 3 3 1 1 3 3 1 2 3 4 3 1 3 1 2 3 3 1 1 4 3 3 1 ", "1 2 3 3 3 1 1 1 1 3 3 1 4 2 1 2 1 3 4 3 1 1 3 3 1 ", "1 4 1 1 1 3 2 2 1 1 2 3 4 2 3 1 4 4 1 3 4 3 3 2 1 ", "3 4 1 1 1 2 3 3 3 1 1 4 1 2 1 3 3 3 1 1 4 1 1 1 3 ", "3 1 2 2 1 1 3 1 3 1 3 1 3 1 4 4 1 1 3 1 3 2 3 1 1 ", "2 3 1 3 1 1 1 3 1 1 4 1 4 3 1 1 3 1 1 1 4 4 1 1 2 ", "2 2 2 1 1 1 1 1 3 2 3 1 2 3 4 3 1 1 1 1 1 3 1 1 1 ", "3 4 1 2 1 3 3 1 2 1 1 3 1 1 4 1 3 4 4 3 3 1 4 4 1 ", "3 2 1 1 4 1 3 2 1 4 1 3 1 3 1 3 1 1 1 3 3 1 3 1 3 ", "1 1 3 2 1 2 1 2 2 1 2 2 1 1"};
    vector<string> y = {"1 4 2 2 3 4 1 3 1 3 2 2 1 3 3 1 1 4 2 3 2 2 2 2 1 ", "2 1 1 4 1 4 1 4 4 4 1 1 3 3 4 1 2 2 3 1 3 2 2 3 1 ", "3 4 2 2 1 3 2 1 4 1 4 1 1 4 1 1 1 1 2 3 3 1 1 3 1 ", "2 1 3 3 1 2 3 1 3 2 3 3 1 2 3 1 3 1 3 4 3 3 1 3 2 ", "1 2 1 3 3 4 1 1 3 1 1 1 1 3 3 1 1 1 2 2 3 1 2 2 1 ", "4 1 1 3 1 1 1 1 4 4 3 3 1 1 1 2 3 1 1 3 3 1 1 3 3 ", "4 1 1 4 4 4 2 1 3 1 3 1 2 1 1 3 2 1 2 3 1 1 1 1 3 ", "3 1 1 4 1 1 4 1 1 1 3 1 3 1 1 3 1 4 1 1 2 3 1 2 3 ", "2 4 2 3 3 1 1 1 3 3 1 3 2 2 1 1 1 1 3 1 1 1 3 1 1 ", "2 1 3 3 4 4 3 1 3 3 1 1 2 1 1 1 1 1 1 2 4 1 4 3 1 ", "1 1 1 1 1 1 1 1 1 1 4 1 3 1 3 1 2 2 2 1 4 3 3 1 4 ", "2 3 3 3 3 1 4 3 2 3 1 4 2 1 1 4 3 1 4 3 1 4 3 1 1 ", "2 1 2 1 1 1 2 1 3 3 4 1 1 1 3 4 4 4 1 2 1 2 1 2 1 ", "1 4 1 3 2 1 1 2 3 2 4 1 4 1 1 1 1 3 1 2 1 2 3 2 2 ", "2 4 1 3 3 1 1 1 3 3 2 1 2 3 2 1 1 4 2 1 4 3 1 4 3 ", "2 3 1 4 1 3 2 1 1 2 1 1 1 3 2 3 4 2 1 3 1 4 1 4 4 ", "3 3 1 3 1 1 1 3 1 1 2 3 1 1 2 1 3 4 1 1 2 1 1 4 1 ", "1 1 1 3 2 4 1 1 3 1 3 2 3 1 1 1 4 3 3 1 1 3 2 1 3 ", "1 3 1 1 4 1 2 4 3 1 3 2 4 4 4 1 1 1 3 1 3 4 1 1 1 ", "3 4 3 3 1 1 1 1 3 1 1 1 2 3 3 4 1 3 3 1 3 4 1 1 1 ", "1 1 2 1 4 1 2 1 3 3 3 1 1 3 2 1 4 1 1 1 3 1 1 1 1 ", "4 1 1 3 1 3 1 2 3 1 1 3 4 1 1 3 4 3 4 2 3 3 4 1 3 ", "1 1 2 2 1 3 4 1 1 1 1 1 2 3 1 1 2 1 3 1 3 1 3 2 1 ", "3 1 1 1 4 2 1 1 1 2 1 2 1 3 4 2 1 4 3 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 3 2 1 4 3 3 3 2 3 3 3 1 2 1 3 1 1 ", "1 1 2 3 1 1 1 3 1 1 2 1 3 4 3 1 1 1 4 1 2 1 3 4 1 ", "2 1 1 1 3 3 2 3 1 3 4 3 3 2 1 3 1 3 4 3 2 4 1 1 3 ", "1 1 3 1 3 4 2 1 1 1 1 1 3 4 1 1 1 1 1 1 4 3 2 1 3 ", "3 1 2 2 3 1 1 3 1 2 1 1 1 3 3 2 4 3 1 4 1 3 2 4 1 ", "1 3 2 3 3 3 3 2 1 1 3 2 3 1 1 4 1 4 2 1 3 1 1 3 1 ", "1 1 1 2 3 1 1 3 4 4 4 1 2 3 1 1 3 1 3 1 3 2 3 3 4 ", "4 1 3 1 1 3 1 2 3 1 1 1 1 4 2 3 1 1 1 1 1 1 1 1 3 ", "3 1 3 1 4 1 1 1 1 3 2 1 4 1"};
    vector<string> lengths = {"8 2 18 1 77 7 40 1 26 42 56 78 20 64 70 80 64 78 5", "5 20 48 51 53 39 53 15 39 20 18 50 70 25 49 54 32 ", "33 2 41 42 18 11 42 35 70 46 71 63 8 19 78 52 50 9", " 55 32 26 5 28 40 64 51 53 21 57 15 61 21 7 72 61 ", "72 79 64 58 42 41 68 78 49 63 53 8 63 52 26 39 53 ", "72 12 76 55 29 11 56 5 61 19 75 36 70 55 21 68 52 ", "3 11 18 55 55 42 50 54 12 66 50 18 78 54 30 23 22 ", "11 61 1 77 2 83 12 31 24 48 62 51 40 10 66 70 1 40", " 79 24 20 33 49 57 41 28 76 48 65 72 62 65 4 78 59", " 63 59 82 79 47 30 48 63 13 15 43 11 30 37 28 42 5", "0 35 55 14 27 21 10 20 60 41 44 65 49 17 68 40 11 ", "6 65 39 27 67 29 31 31 71 20 64 20 1 30 44 1 45 58", " 70 21 59 66 11 47 55 74 82 24 27 68 19 46 46 34 6", "8 69 70 47 15 8 26 10 18 44 34 40 10 71 69 61 39 4", "6 32 1 39 22 39 60 23 11 19 18 11 73 9 44 46 69 35", " 69 6 3 62 44 28 31 1 66 36 35 52 69 16 17 54 8 28", " 51 25 67 60 43 65 46 27 18 34 7 69 42 26 60 32 81", " 3 3 76 1 28 24 67 47 27 79 47 23 47 18 23 3 78 5 ", "40 51 18 55 39 13 1 49 43 67 53 80 39 34 51 9 12 2", "9 53 69 58 6 2 60 81 17 11 50 18 24 22 48 45 10 70", " 52 74 65 54 14 75 29 38 16 59 45 27 42 16 26 27 1", "8 45 65 25 82 28 11 53 23 1 83 41 56 17 18 44 33 1", "7 72 36 81 41 34 40 44 36 77 44 38 44 3 68 27 10 1", "4 8 75 30 46 36 35 71 15 61 77 29 82 1 35 45 56 65", " 29 9 35 10 66 67 37 25 35 3 2 5 53 50 83 21 83 72", " 27 30 25 14 54 51 32 9 38 47 61 25 43 77 38 76 15", " 5 49 57 65 51 45 16 58 59 58 14 1 32 80 59 48 27 ", "82 50 25 39 17 23 55 22 12 64 34 7 68 81 1 75 40 3", "5 1 62 11 29 8 4 36 75 40 79 22 21 74 24 48 58 33 ", "16 52 75 45 1 39 32 29 27 4 76 2 24 24 2 46 1 24 2", "8 38 32 67 43 63 11 65 1 10 68 78 4 49 82 19 11 14", " 18 19 30 80 5 30 32 53 27 69 51 61 76 38 4 4 67 3", "5 70 31 74 25 75 32 25 61 42 63 59 43 52 66 27 2 5", "3 73 36 58 51 64 27 3 53 14 30 71 56 12 5 46 67 13", " 62 78 68 71 61 68 76 46 49 40 13 67 20 57 69 28 6", "5 74 18 45 31 41 20 70 6 34 35 39 4 55 51 46 60 35", " 20 63 1 10 14 63 76 25 81 21 66 51 26 42 23 63 74", " 71 69 31 44 74 7 3 28 39 80 28 55 69 25 38 1 76 3", "7 47 51 2 21 45 14 27 82 64 15 43 7 75 25 51 16 16", " 5 1 24 47 73 23 38 47 73 40 49 19 50 35 37 48 35 ", "25 81 29 70 35 19 67 27 8 49 2 36 41 41 38 7 18 65", " 75 15 62 37 38 36 4 59 53 36 34 58 28 32 43 78 48", " 64 39 62 26 73 6 29 59 16 75 42 46 44 47 68 56 76", " 36 73 60 82 2 70 62 67 72 61 38 43 55 74 5 33 31 ", "59 38 83 37 30 27 76 62 69 44 78 3 47 12 24 34 30 ", "60 64 57 15 60 73 65 54 11 65 52 16 77 31 28 37 62", " 70 32 16 20 7 44 36 34 73 38 21 74 60 48 45 83 69", " 40 16"};
    vector<string> names = {"A CC A C AB C C B CC A B A A AA A AB C AA C CA B B", " B B A AC C B B AA A A AB B B A A A A B AC A A B A", " A A A AA BC B A A A A AB B AB B A BA AA C A AA B ", "A BC A B C A A A AB C A BA BB B A A C CB A AB A A ", "B A BA C C B A C A A AA A C B C A C A A A B A A BC", " B A A A AA A A A A A AC C B A A BA B A A A AB A A", " C B AC BA AC A A AA AA A C A A A CB A A A CA B BA", " B A B A A AA A CB C AC A A C A A C C A BB C A A C", " C A A C A A A A AA AC A A A A B C A C AB C B A A ", "A AA B A AA AA C AA BC A B C A A C BA A A AB AC A ", "C BB AA B A A B B B A A CB A CB C AA A A CA AB B B", "A C A C AB A A CA CC AA A BA CB AA BA BA BB AA AA ", "A A B A A A A A A B C C A C BA A B AC CA A AA AA B", " A A AA AC A B A A A A A C B B A BA B B B A C A C ", "A A A C B A A B A A AB A C A B C AA CC A C A B A A", " A C B AB C C A A B B C AC A BA A BB A C A A B AA ", "AA B AC A B BA A B C AB B B A A A A B A A AC AB A ", "BC A AA AB C B C C AA C A C A A A AA C C BA A B A ", "A AB AA A AA A A CA AA A BA BC B A CC B AB B C AA ", "AA A A B BA A B B AB A BC C AB A A C B A B A B B B", " AA AA A A A AB C A BA A AA AC A BA B A A A A C A ", "C A A B AC A C AA A A BB A C CA A C A CA A AA A A ", "C A C A AB C B C A C AB A B A A AA B AA A A A A B ", "B A A AA C C C A C A BA A CB AC A A A B C AC C A A", " AC A C A B B CA A B B B A C A AB B B BB C A A AC ", "A AA CA B A A A A CA AC B B C A AC C AB C B CC AA ", "A C B A A A A A A A AB BC A CC BB A A A B AC A B A", "A A A B A BC BA B AA B AA AC A B C BA B A B C CC A", "A A A A A C A A B BC A AA BB A A CB C A A A BB A C", " A A A A C B A A A AA B C A A A A C A A C A A C C ", "A A A A CC C A A A BC A AA CA AA A A A A C A C A C", " A AA B BA AC A BA C C AA B A C A B B A A AA B A C", " B A C B AA B A A A B AA A BA A B AC B AC A A AC A", " A A CA B B BA A AB B AB C C C A A A A CC A BA C B", " A AC A A A AB C A C A C A B B A A C B A A A BB AB", " C C A A A C A C B C C C B B A C C BA B A B A C B ", "C A A A CA CC A AC C B C A A A"};
    int k = 81;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "C", "C", "CA", "A", "A", "A", "B", "A", "B", "A", "A", "BB", "A", "A"};
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    vector<string> x = {"1 3 1 2 4 4 1 3 1 1 3 2 3 2 1 3 1 1 2 1 1 3 3 3 1 ", "3 1 2 1 4 2 1 1 1 2 1 1 1 3 4 2 1 1 4 1 3 1 1 1 1 ", "4 1 1 1 1 1 1 3 4 1 2 1 1 3 1 1 2 1 1 1 2 4 1 1 4 ", "1 4 3 1 1 2 1 3 2 1 1 3 4 2 1 4 3 1 2 4 1 1 3 3 1 ", "1 3 3 2 3 3 1 1 1 3 1 1 1 2 1 3 3 1 1 1 1 3 1 3 3 ", "3 1 3 4 3 1 3 3 1 1 1 1 4 3 2 4 3 1 4 3 1 4 3 1 4 ", "1 2 3 2 1 2 3 1 1 3 1 2 1 1 1 1 1 4 1 1 1 2 2 1 4 ", "1 1 3 3 1 3 1 4 1 4 1 3 2 1 1 3 1 1 1 4 4 1 1 1 1 ", "3 1 1 3 3 3 4 3 3 1 1 3 3 3 2 3 3 3 1 1 1 3 1 3 1 ", "2 3 4 3 3 1 4 2 1 2 1 1 3 4 4 1 3 1 3 3 2 3 3 1 1 ", "4 4 1 1 3 1 1 1 1 1 1 1 1 4 1 1 3 3 3 1 1 1 1 1 1 ", "1 1 1 4 2 4 1 1 1 3 3 3 4 2 3 1 3 3 3 4 1 4 2 1 1 ", "1 2 4 1 2 1 2 3 2 1 1 1 2 2 3 4 2 1 2 1 1 2 1 1 3 ", "3 2 2 3 2 1 1 1 1 1 2 1 4 4 1 1 1 2 1 4 3 1 4 2 4 ", "3 3 1 3 3 4 3 1 1 1 3 3 3 3 1 1 3 1 1 2 2 3 1 1 2 ", "3 4 1 3 3 1 1 3 2 4 2 3 1 3 1 2 2 1 4 1 1 4 1 3 4 ", "3 2 1 3 4 1 3 3 3 1 1 1 1 1 1 1 3 3 4 3 2 1 3 1 2 ", "1 4 2 3 1 1 1 4 1 1 1 1 1 1 1 3 2 1 1 3 4 1 4 1 1 ", "1 4 3 1 1 4 1 3 1 1 4 3 3 3 1 3 2 2 3 1 4 1 1 1 4 ", "2 4 3 3 1 3 4 1 2 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 ", "2 1 3 1 2 2 1 4 1 1 3 2 1 3 4 2 3 2 1 3 4 4 2 4 1 ", "1 3 3 1 1 2 1 1 3 3 1 3 1 1 2 1 1 1 1 3 4 1 1 2 3 ", "2 3 1 3 4 1 1 1 1 1 2 1 3 3 2 1 2 3 1 1 1 1 1 1 3 ", "1 3 1 1 1 1 1 3 3 4 3 1 3 4 1 1 1 1 1 3 1 1 1 4 1 ", "1 2 1 3 1 1 4 1 3 3 1 3 3 4 3 4 1 1 1 2 4 1 3 1 1 ", "3 4 3 1 1 1 3 3 2 1 4 1 1 4 1 3 1 1 1 1 2 4 3 1 1 ", "1 4 1 4 3 3 3 4 2 3 1 1 1 1 1 1 3 2 2 2 2 1 4 1 1 ", "3 3 3 4 4 4 2 1 1 4 1 1 1 1 1 2 4 3 2 2 1 4 1 4 1 ", "1 1 1 3 4 1 2 4 3 3 4 3 4 3 2 1 1 1 1 2 3 1 1 3 1 ", "1 2 3 3 1 1 2 2 3 4 3 3 1 3 1 3 3 1 2 1 1 1 3 1 1 ", "4 1 1 2 2 1 2 2 3 4 1 3 1 4 3 3 1 4 2 2 1 2 2 3 1 ", "1 2 1 3 1 1 1 1 1 1 3 1 3 1 4 3 4 2 2 4 1 1 4 1 3 ", "2 1 1 2 3 1 2 2 1 3 4 1 3 1 1 3 2 2 3 3 4 1 2 2 3 ", "2 1"};
    vector<string> y = {"1 1 3 3 1 3 1 1 1 2 3 1 1 4 1 3 1 3 1 2 1 1 2 3 1 ", "3 1 3 3 3 1 3 3 3 3 1 4 1 3 3 1 1 1 1 1 3 4 1 2 1 ", "1 4 1 3 1 3 2 3 1 1 1 1 4 3 1 4 2 1 4 4 3 1 1 1 1 ", "1 1 2 4 4 1 1 4 1 1 3 1 3 3 4 2 1 1 1 1 1 1 1 2 1 ", "3 1 1 3 1 1 3 1 1 3 1 1 1 4 3 1 1 3 1 3 1 1 1 1 1 ", "4 2 2 2 1 1 3 4 1 1 1 2 1 1 1 2 3 4 1 1 1 3 3 1 1 ", "3 1 1 3 1 4 1 4 4 3 1 3 1 1 3 3 1 4 3 3 4 3 1 4 2 ", "1 1 1 1 1 3 2 2 1 3 4 1 2 1 2 1 3 3 4 3 3 1 4 1 4 ", "2 2 3 3 1 3 3 1 2 3 2 3 3 3 1 3 4 3 1 1 3 2 1 1 3 ", "3 4 2 3 3 1 3 4 2 3 1 2 2 1 2 3 3 4 1 1 3 1 1 3 1 ", "1 2 4 3 4 1 1 1 1 1 2 3 2 3 1 4 1 1 1 4 1 4 3 1 1 ", "4 1 4 3 4 1 4 3 3 3 3 2 3 3 1 1 1 3 3 1 1 3 1 4 1 ", "2 1 3 1 1 3 1 1 3 1 1 3 1 1 3 3 1 2 4 1 3 3 1 1 2 ", "4 1 1 3 3 3 3 1 2 1 3 3 4 1 1 4 2 3 3 1 4 1 1 2 1 ", "1 4 1 3 3 1 1 1 2 1 3 3 2 1 1 1 1 3 3 3 2 3 3 1 3 ", "1 4 2 1 3 1 3 1 1 1 4 4 3 1 1 4 1 1 1 3 2 1 4 1 3 ", "4 1 1 1 1 1 4 2 4 1 1 3 2 1 3 1 2 4 1 1 1 4 2 1 4 ", "2 3 1 1 1 4 1 1 1 4 4 1 4 1 2 2 1 1 2 1 3 1 1 3 3 ", "3 3 4 1 1 1 1 3 1 2 1 1 1 1 4 1 3 1 1 1 3 3 3 4 1 ", "1 3 3 2 1 1 1 4 4 3 1 1 1 1 3 2 1 4 1 2 1 1 1 3 3 ", "2 1 1 2 3 3 1 3 1 1 3 1 1 3 1 1 1 3 1 2 1 4 4 2 1 ", "2 1 1 1 1 4 1 1 3 3 1 4 1 1 2 1 1 2 1 1 3 2 2 3 2 ", "3 1 3 1 1 4 2 3 2 3 1 3 3 1 1 3 4 4 1 3 3 2 1 3 1 ", "1 1 1 2 3 1 1 1 1 1 3 2 2 3 1 1 1 1 4 4 3 1 1 1 3 ", "1 1 1 3 1 1 1 3 2 3 4 1 4 3 3 1 4 1 3 3 1 1 1 1 3 ", "4 1 1 1 3 1 1 1 1 1 1 3 3 4 1 1 3 1 3 1 1 3 4 1 1 ", "3 1 1 1 2 3 4 1 3 3 3 1 2 2 2 1 1 4 3 1 1 1 2 1 3 ", "2 3 1 1 4 1 3 2 1 4 4 1 3 2 3 1 1 1 3 3 1 1 3 1 1 ", "3 1 1 3 3 1 1 3 3 3 2 4 2 4 4 4 3 3 1 3 1 3 1 1 1 ", "1 1 2 2 3 1 3 3 4 3 1 4 3 4 3 1 1 1 2 1 1 4 3 1 2 ", "1 3 4 1 1 3 1 1 3 1 2 1 1 1 3 2 1 1 1 4 3 1 3 3 3 ", "3 3 1 1 1 1 2 1 3 1 1 1 3 3 3 1 4 1 2 2 1 1 1 1 1 ", "1 1 1 1 1 1 4 1 3 1 1 1 2 4 1 3 1 3 1 2 2 3 1 3 2 ", "4 2"};
    vector<string> lengths = {"25 83 40 68 82 11 18 39 82 60 29 74 66 58 51 42 13", " 40 31 72 1 69 45 26 21 36 75 47 12 45 68 43 59 68", " 77 81 38 52 75 30 37 46 10 10 65 51 16 46 76 2 58", " 14 6 56 20 52 54 78 60 14 56 35 76 80 43 50 64 67", " 12 26 9 17 53 53 2 11 10 81 11 19 50 30 68 52 5 2", "2 24 44 40 31 2 30 38 73 39 70 69 54 46 1 67 44 81", " 50 53 42 29 62 73 49 69 4 22 83 67 19 8 16 74 57 ", "11 77 5 63 80 2 47 27 1 37 83 41 35 10 61 49 23 31", " 67 43 1 11 70 1 19 9 31 15 62 45 42 58 42 19 75 3", " 47 78 63 32 17 79 42 28 69 69 74 13 80 40 68 65 3", "7 65 83 26 51 70 65 21 33 78 1 3 25 6 29 73 65 73 ", "14 8 10 79 17 37 52 12 4 42 81 14 14 77 26 61 24 5", "6 3 46 56 51 66 31 19 18 13 30 45 27 52 22 18 29 5", "3 1 50 19 4 5 9 22 74 75 16 76 73 53 14 36 47 11 1", "1 82 26 26 32 36 4 43 8 72 51 71 14 57 33 3 72 68 ", "73 4 27 59 54 78 44 28 1 82 44 48 27 1 61 43 16 10", " 43 8 4 15 77 50 13 26 8 63 35 25 82 70 30 66 27 2", " 41 75 32 56 27 46 74 41 21 34 81 22 49 46 23 53 2", "2 57 8 31 67 47 25 75 9 3 67 5 62 26 16 50 30 60 3", "1 45 76 18 32 39 82 35 23 10 11 27 1 70 43 76 17 4", "3 32 40 28 60 58 11 37 59 18 44 6 71 68 65 28 55 3", "4 2 39 33 61 3 37 49 37 62 45 11 83 23 8 23 14 81 ", "29 69 20 78 32 34 3 5 24 12 17 28 30 14 60 17 44 4", "9 36 13 71 52 13 74 6 22 41 42 75 83 73 12 45 73 2", "8 7 75 7 77 49 66 33 10 53 40 73 49 59 76 37 66 62", " 58 53 42 71 17 45 15 19 63 4 31 29 62 66 16 45 66", " 81 52 5 31 65 26 47 34 25 22 57 6 60 7 45 32 17 7", "0 23 22 33 30 38 44 13 43 33 63 30 44 12 1 64 55 7", "9 59 64 39 58 62 43 4 39 78 40 1 61 13 8 67 79 76 ", "43 55 50 80 56 19 72 25 69 11 17 48 21 77 77 74 33", " 44 65 44 34 65 10 70 78 55 64 74 8 53 78 52 57 35", " 18 60 68 3 82 73 12 39 50 57 63 37 41 63 29 35 33", " 38 1 9 40 18 5 77 52 63 74 15 71 34 32 41 31 53 2", "4 52 10 48 13 32 7 75 81 67 17 56 3 52 79 22 23 53", " 71 60 57 6 43 25 57 59 63 14 18 23 38 82 51 69 50", " 12 80 31 32 21 75 76 62 7 39 83 44 10 17 38 41 48", " 3 43 23 65 23 14 53 58 61 35 33 71 9 46 62 69 65 ", "33 64 40 83 67 74 12 5 67 7 13 25 38 20 39 34 25 5", "4 55 1 70 67 53 54 53 39 73 41 16 48 16 81 45 56 2", "4 9 4 52 44 9 61 82 47 30 5 1 48 6 58 56 1 38 49 2", "6 11 12 3 79 36 52 26 53 43 41 4 49 53 4 60 75 60 ", "1 1 34 58 4 35 9 37 66 31 44 61 7 40 55 6 61 69 80", " 67 31 79 63 51 19 44 17 81 50 43 14 46 45 62 16 4", "3 20 75 19 23 67 13 46 51 63 81 57 28 80 9 15 61 3", "4 6 81 43 57 54 68 79 38 45 26 69 46 6 2 31 48 34 ", "67 18 73 22 64 59 63 35 24 66 3 20 59 29 30 15 7 5", "5 60 81 41 26 45 57 1 52 81 27 74 75 25 5 53 55 25", " 37 42 16 56 57 1 59 31 83 62 35"};
    vector<string> names = {"AC B A A A A C A C A A B B BC A A A A AB A AA B B ", "A AA C A A A A AC A AB A A C C C A C CB C A A A A ", "CC BB A B C A B AB CB C C BA B A A A A B A A A A A", " A C B A BB AA A A BA B B CA A B C C A B AB A AA C", " CC C AC A A C A C B A CA A A AB BC A BA A A BC C ", "B C AC C A AC A C A B A C A A CA A A B C B A B A A", "A A C A A A A A A A A A CA A A C C AA A B BB A C A", " B BB BC A B B A A CB B B A A A A A A A A B BA A B", " AA B B AB AB BB BB AA A A B A A C C B A A BA A B ", "AB B A A A A AA B A A C AA A A BA C AB C AC C B A ", "A AA B B A A A C AB CA B C B A A A A C A B A A A A", " A B CC AC C AC BB A C AA A C AC A A A A A A B AC ", "AA A A A AA C B A C AA BC A B AA A AA C A A C A B ", "AA C C AA CA A B A C CA A AC AA A A A C A AC AC B ", "A A A A B AC B B CA A B C A A AA A A B A B A B B B", "A B C AA BA A BA B A B A A AB C B AA C A AA B B A ", "A C A A A A B B AB B A A A C AA A A B A C B AA A A", " A A C A CA C B A CC AA BB AC A AA A A B A A AA C ", "A BA A AA A CA B AA A A B AA B BA CB C CA AC A AB ", "AA A A A C B A A A B B CC A B A B C B A A A A CC B", " C A C B C C C A A C C A BC A A A A A BA A C B C C", " A C CA B A A BA C C AA A AA A A A B C B C A AC C ", "A A CC A CA B C A B A A A AA B A B A B A B A A A A", " B B B B A A CA A C BA B CB A AB A AA AA A C A CB ", "C C B B C AA A A B C BA A A A BB B B A A A C C B B", " B BC C A BB A A C AB C A AA BB AA AA A A A AA B A", "A AC A A A B A A B A AA B A C A BA C AA C CA C B A", " A C C A A A B BB AB C A A A B A C A A A C B BB A ", "A B AB C A B C B A B A AA C A C A A A A C AA C A C", " AC C A A C C A AA AA A CA A A A A A B A C AA BC A", " A A C AC A B C AA AA BA A BC AC A A AA A A B A A ", "A A C A A A B AC B A C BA A C BA B C C A C A C BC ", "BA C A A A B B A A AA C A CC A AA A A B B A A AC C", " A AA A B A A A B A A B A C A A A B A C B BA A AA ", "B AA A AA A A A A B A B B A A AA CA B A A B A C A ", "A C C A C C A AB AA C A C B A AB AB BB B A A A B C", "B AC C C AB AA A A AC A B A B CB A C A C"};
    int k = 248;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    vector<string> x = {"1 3 1 2 3 1 4 3 2 1 1 1 4 4 1 1 1 1 3 3 1 1 1 1 1 ", "3 4 3 1 1 3 3 2 2 1 1 1 1 1 1 1 4 3 2 1 4 3 3 2 1 ", "1 2 4 3 2 4 3 1 1 3 3 2 1 3 3 1 1 3 4 3 1 1 1 1 3 ", "3 3 1 1 1 1 2 4 2 1 1 3 3 2 1 2 1 1 4 1 1 1 4 1 4 ", "1 3 1 3 1 3 1 4 1 1 4 3 3 3 1 2 3 1 1 2 2 1 2 3 3 ", "1 1 1 1 1 1 2 4 1 1 2 1 1 3 4 1 1 3 4 1 4 4 1 3 1 ", "1 3 1 3 3 4 2 3 3 1 1 1 1 4 4 1 1 4 1 2 1 3 3 1 4 ", "1 1 2 2 4 1 1 1 4 2 3 1 1 3 3 4 1 1 1 4 1 1 1 3 1 ", "4 4 1 3 4 1 1 1 2 3 2 1 1 3 3 1 1 1 3 2 4 3 1 1 3 ", "4 4 4 1 1 2 3 1 1 1 1 3 3 1 4 3 2 1 1 1 4 3 1 1 1 ", "1 3 3 1 1 4 3 3 2 1 4 1 2 1 1 1 1 1 1 1 4 4 1 1 3 ", "1 1 1 1 3 1 1 3 3 1 3 1 1 1 4 1 4 3 1 2 3 3 1 1 1 ", "1 2 2 4 2 4 1 1 2 1 1 1 2 4 2 4 1 1 3 1 4 1 2 3 2 ", "1 3 1 1 2 1 1 1 2 3 1 1 1 3 2 1 1 1 2 1 3 3 1 4 1 ", "3 1 1 3 4 3 1 2 2 1 2 1 2 1 2 3 3 1 4 4 3 1 2 1 1 ", "3 1 1 4 4 1 3 3 1 1 4 3 2 1 2 1 3 2 1 3 1 3 3 1 1 ", "1 4 3 2 3 1 3 1 2 2 3 1 1 3 2 1 4 1 1 3 4 3 1 2 3 ", "3 2 1 1 3 2 1 3 4 1 1 4 4 3 4 1 1 1 2 1 3 3 1 4 1 ", "1 1 1 1 4 2 1 1 1 4 1 3 1 4 1 1 3 1 1 4 1 4 3 1 1 ", "4 1 1 1 3 3 1 1 2 1 1 2 1 1 1 1 2 3 1 4 4 4 1 1 2 ", "2 1 1 1 2 3 3 1 3 2 1 1 2 2 3 1 3 4 1 1 1 4 2 4 1 ", "3 1 1 1 1 3 1 1 1 1 2 3 3 3 3 2 3 1 2 1 2 1 1 1 3 ", "2 1 3 1 1 1 1 1 4 1 2 1 2 1 1 4 1 4 3 4 4 3 1 1 1 ", "3 3 1 1 3 3 4 1 4 1 1 1 1 4 1 3 3 2 1 2 3 1 2 2 2 ", "1 2 1 1 1 3 3 1 1 1 1 3 2 3 3 1 2 1 2 2 3 4 1 1 1 ", "1 3 2 3 1 2 2 1 3 1 1 3 3 1 2 3 3 1 1 3 3 1 1 2 1 ", "1 3 1 2 1 3 1 3 3 1 1 1 3 3 1 1 3 3 4 1 3 1 3 1 2 ", "3 1 1 4 1 1 2 3 1 1 1 2 4 1 2 1 1 1 1 2 1 3 2 1 3 ", "1 2 1 4 1 3 1 4 4 1 1 1 1 2 1 4 1 2 1 2 1 1 3 4 1 ", "3 1 1 1 1 3 3 3 4 3 1 1 1 3 1 1 1 1 4 1 1 1 1 1 4 ", "1 2 1 1 1 3 3 3 1 4 4 4 4 2 1 1 1 2 3 1 1 1 1 1 3 ", "2 1 1 1 1 2 3 3 2 1 1 2 3 1 1 1 1 1 1 1 4 3 1 1 1 ", "4 2 4 4 2 1 2 1 1 1 3 4 4 1 4 1 3 1 4 3 1 1 1"};
    vector<string> y = {"1 2 1 3 3 2 3 1 1 1 1 4 3 2 1 2 2 1 1 4 1 3 3 3 1 ", "4 1 3 1 2 1 1 1 1 1 3 2 1 1 3 1 3 2 1 1 1 1 1 1 1 ", "1 1 3 1 1 1 3 4 4 3 2 1 1 1 3 2 1 1 1 1 3 1 4 3 1 ", "1 3 3 3 3 1 1 1 4 1 3 2 2 3 2 4 3 1 1 3 2 1 3 3 2 ", "1 1 1 1 1 1 2 1 1 3 4 4 1 1 1 1 4 3 2 3 1 1 3 4 1 ", "4 4 4 1 1 1 4 3 1 3 2 3 1 1 1 3 3 3 1 1 1 1 1 1 3 ", "1 2 2 4 1 4 1 1 1 3 1 1 3 1 3 1 1 4 3 1 1 4 2 3 1 ", "2 1 1 3 4 2 1 1 1 2 3 2 1 3 1 3 4 4 1 1 3 4 2 1 1 ", "3 1 1 1 3 3 1 1 3 1 1 1 2 1 2 4 1 4 2 1 4 2 1 1 3 ", "1 3 3 1 4 3 2 1 1 1 1 2 1 1 1 3 3 1 2 1 1 1 1 1 1 ", "1 1 2 3 1 1 1 3 3 1 3 3 2 1 1 1 2 1 1 1 1 3 1 3 1 ", "3 1 1 2 1 3 1 3 1 3 4 1 1 4 3 1 1 1 4 1 1 4 1 4 1 ", "1 1 3 1 3 1 3 4 4 3 1 4 4 1 1 3 1 3 2 1 1 3 2 3 1 ", "1 1 4 1 1 1 1 3 1 3 1 2 3 4 4 4 2 3 1 1 1 3 3 4 1 ", "1 1 3 1 1 1 1 1 3 1 3 1 1 1 3 1 3 1 3 4 1 1 3 4 3 ", "3 1 3 3 3 3 3 2 3 1 2 1 1 1 4 4 1 1 1 2 1 1 1 3 4 ", "3 1 4 2 2 1 2 2 3 3 3 3 2 1 1 4 1 4 1 1 1 3 1 1 1 ", "1 1 2 1 3 3 1 1 4 3 2 3 3 2 4 2 1 4 4 1 4 2 1 3 1 ", "1 4 1 3 3 2 1 1 3 3 1 2 2 1 1 3 4 3 1 1 1 1 1 1 1 ", "1 3 1 1 2 1 2 1 3 4 4 4 3 3 3 1 1 1 1 1 1 1 1 1 1 ", "2 2 2 2 1 1 2 1 1 1 4 1 3 3 3 2 1 3 1 3 4 3 2 3 3 ", "1 1 1 1 1 1 1 1 3 1 1 1 4 1 4 3 1 1 3 3 1 1 3 1 2 ", "1 3 1 3 3 3 3 3 4 4 1 1 1 1 1 3 4 3 3 4 2 2 3 1 4 ", "2 1 3 3 4 1 3 2 1 1 4 1 3 1 4 1 1 3 1 3 1 1 1 1 1 ", "3 2 1 3 3 4 3 1 1 1 1 3 1 1 1 3 4 2 2 3 4 1 1 1 4 ", "1 1 1 1 1 3 2 3 3 1 1 1 1 1 3 3 4 3 3 3 4 2 1 3 1 ", "1 1 2 2 1 2 3 3 1 1 1 4 1 1 1 3 1 3 1 2 1 3 1 1 2 ", "1 1 1 1 3 1 1 2 3 1 4 1 1 4 3 4 1 1 2 4 1 3 1 3 1 ", "1 3 3 1 1 1 1 4 1 1 3 4 2 1 1 3 1 4 1 2 2 1 3 1 3 ", "1 4 4 1 3 4 1 1 1 3 4 3 2 1 3 1 3 1 1 2 2 1 3 1 1 ", "2 2 2 2 1 4 1 1 3 1 1 1 3 2 2 3 1 3 1 1 2 1 3 1 4 ", "1 3 1 4 1 1 4 3 1 1 3 3 2 1 1 2 2 3 3 3 4 3 1 1 1 ", "1 1 1 1 4 1 1 1 1 3 1 1 1 2 1 1 3 3 1 1 2 3 1"};
    vector<string> lengths = {"33 79 36 29 32 58 6 60 75 58 45 56 50 78 1 26 12 1", " 43 55 66 25 74 71 42 15 47 39 37 70 13 75 76 50 7", "6 9 25 80 1 70 9 5 48 30 42 28 46 60 74 1 31 25 19", " 5 3 71 73 39 34 12 55 12 51 80 22 55 70 36 66 30 ", "45 43 47 61 5 1 75 15 27 1 6 15 60 83 83 61 48 28 ", "78 57 80 45 68 53 19 52 64 6 33 61 77 45 82 55 68 ", "73 6 63 23 82 42 62 2 33 59 50 10 39 57 82 67 52 1", "7 25 19 10 76 62 60 8 1 21 80 35 55 70 2 20 72 82 ", "20 16 43 41 66 17 56 11 53 71 28 24 83 18 54 80 15", " 32 8 25 9 36 12 41 75 62 65 48 83 41 2 29 76 81 5", "6 70 2 73 8 24 28 82 66 56 80 24 74 70 81 63 67 2 ", "74 37 44 54 10 36 77 56 11 19 34 43 66 11 35 21 82", " 1 5 35 25 39 12 40 52 23 33 13 38 30 30 7 10 9 76", " 61 3 42 34 8 17 41 15 58 30 6 55 82 62 1 20 10 51", " 36 78 30 8 35 57 58 77 69 1 69 18 30 72 6 31 66 5", "2 5 31 12 27 19 67 5 15 17 80 67 3 79 64 10 64 2 6", "3 27 71 32 39 24 29 61 51 38 57 15 64 10 29 82 7 1", "5 10 60 83 73 47 37 70 34 30 31 19 59 58 79 25 7 1", "3 53 13 82 62 36 73 81 19 74 14 35 67 3 70 67 58 5", "6 51 7 52 40 9 21 66 59 81 1 45 27 77 20 9 83 5 29", " 47 30 30 11 32 46 39 42 83 77 71 25 26 22 60 13 4", "6 38 66 5 9 29 7 35 44 37 18 82 43 45 62 43 38 75 ", "12 30 81 71 54 71 7 63 52 51 50 24 28 44 29 41 6 4", "1 27 46 44 24 75 20 74 63 68 72 13 31 43 68 28 59 ", "81 63 59 71 32 5 58 34 73 71 31 2 13 72 21 27 23 6", "4 64 66 53 35 1 24 76 63 34 78 77 14 30 81 58 54 6", " 58 79 30 25 27 2 49 25 36 26 10 59 12 21 35 69 66", " 12 43 11 66 1 42 60 57 54 48 32 35 82 77 77 65 9 ", "46 26 52 41 36 40 73 81 56 20 35 52 58 69 62 36 47", " 7 37 73 29 57 25 77 76 12 71 7 67 3 68 32 43 83 1", "8 65 11 40 14 30 11 40 74 54 52 8 30 77 37 49 30 6", "3 74 37 77 11 76 81 80 53 80 48 22 44 78 36 69 68 ", "81 79 74 1 72 30 57 51 62 45 38 44 2 75 34 40 1 11", " 65 37 6 16 39 14 36 44 33 76 27 25 54 49 73 64 40", " 71 40 37 34 75 38 12 62 66 73 16 22 57 20 68 54 4", "2 25 73 14 20 59 4 52 55 2 42 20 41 71 12 64 25 28", " 11 3 1 31 66 12 61 2 33 2 75 29 72 78 38 61 47 2 ", "4 64 68 53 76 57 5 3 42 83 59 54 50 24 49 28 64 11", " 77 65 1 76 34 34 80 38 71 4 15 22 78 63 52 58 5 7", "0 62 60 12 41 20 40 48 37 28 80 68 83 73 77 29 26 ", "69 29 64 7 42 22 32 67 11 75 71 74 7 32 6 72 81 61", " 38 36 75 78 8 2 11 15 61 59 80 30 83 53 33 63 7 4", "1 33 57 6 60 21 51 18 44 47 20 54 8 16 7 1 25 5 1 ", "45 82 29 53 57 56 18 19 76 7 66 49 61 70 3 53 59 4", "7 68 20 64 26 76 67 78 42 17 17 24 77 76 53 50 78 ", "64 51 80 56 45 29 46 3 65 52 58 12 24 11 43 11 42 ", "69 68 43 58 33 1 62 42 56 81 27 77 46 32 46 53 56 ", "56 54 51 31 21 55 20"};
    vector<string> names = {"B BB AA A A AC A A C C A AA B A BB B A A C AA A AB", " C A CA B BC C A A A A A A B A A AC A A B A BC A B", " C A B AB AB A AA A A AA A A A A C A A A CB A C A ", "A A B A A C AA C C A A C BB A AA C C A A A BC A A ", "A A A CA C C B AA B A B A A A A B B C AC AB A BA C", "A A BC A A C B A A B A A CA C B C BA A A AA A C BA", " A CB B B AA CA A C C A C B AB A AA AA C C AA A A ", "AA AA C C A C A A A A AA A A BA BA A A AA A A A CA", " AA C A B A AB A CC AB B A C B BB AC AC A CB AB A ", "A A B A BA A B B C AB A B AC C A B A AA C A C C B ", "B A B AA A A BB A A A A B A B BB AB A C A B A B AC", " A A B A A A A C A A C A C A AC B A AC AC A AA C A", "B A B AB B A BC A C C A A A C A A B C A A C A A A ", "A AA A BA AA BA A B A B A B A A A C A B C BC A A C", "A A A BA C A BA A A A AB B B A A B AC A BB A C A B", " CB A A B C C B A A B CA A C A AA B A AA AB C AA A", " AA AA A C A AA A A AB AC BB AB B C A B C BB A AC ", "B AA A A C A AA A CC A A A A AC A B C C CA A C A C", "A CB A A AC A AB A A C A B A AC A B B CB A A B B A", " A A AA B C A AB A BA A AC B A A A A A A A B AA A ", "A B B C AC B A CC A AA C CA C B A A A A A A C A A ", "A B B B AB BA BA AC BA CC C B A A CA A A B A A BA ", "A BB C AB A BA CA C B CC A B A CA C A AA B BA AC A", " A C A AC AC A BA C AA A A A A A C A A B AA B A B ", "A A A A A C B AC B AA C A C AB AA A C CA C AA AA A", " AA AA A A CA A A AA AA A B BA A A BA AB A C BA A ", "C B C C AB B B A C A A A B B CB C A A AA A AC A A ", "A BA AC AB A C AA AA B C AA A A A AC C CA A A A A ", "BC A A C B A BC C B AA CA A C A A AA A C B A A A A", " A AB AA BA A A A A B A C B A B A C CA AC B A C A ", "AB A A B CC C AC C C A BA B A C A CA B B A CA B CB", " C A AA A A A A AC CA CA AC B B C B CA A A AA A CA", " A A A C A B AB A C AA AB AC B CB CA A A A A A C C", " A AA B B BA C C A B B A C C A B BA B A AA C A AC ", "A A A A C A A A C A CA AA B A AA BA BA A C C C A A", " A A A C B A B A A CA BA A C AB C A A A A B B A B ", "BB C B A A BB BA BC CC A A A A B AA A B BA A A CC ", "B A A AC A C CC"};
    int k = 137;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "C", "A", "A", "A", "A", "A", "C", "AB", "B", "CA", "AC", "A", "AB", "AC", "B", "B", "CC", "A", "A", "AC", "B", "BA", "B", "B", "A", "C", "C", "A", "A", "A", "B", "C", "C", "A", "A", "AA", "AB", "B", "CB", "A", "A", "B", "A", "A", "A", "AC", "A", "AA", "B", "A", "A", "B", "A", "A", "AB", "C", "A", "A", "A", "B", "A", "BA", "A", "A", "A", "AB", "AC", "BB", "C"};
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    vector<string> x = {"2 1 1 4 3 4 1 1 1 2 2 1 1 3 1 1 3 1 2 2 1 1 3 2 3 ", "3 1 1 2 2 1 2 1 1 1 2 1 1 4 1 3 3 1 1 3 1 1 1 2 1 ", "1 2 1 3 1 3 3 4 3 3 4 3 3 1 1 3 1 1 2 1 1 2 1 2 1 ", "3 3 1 2 3 4 1 1 1 1 1 1 4 1 1 3 1 3 2 1 1 3 3 1 3 ", "3 1 1 1 1 3 1 2 1 2 4 1 1 3 1 3 1 1 2 1 1 1 1 4 1 ", "4 1 1 1 1 3 1 3 1 1 4 1 3 1 3 4 1 4 4 1 3 2 4 1 4 ", "3 4 4 2 1 1 3 3 2 1 3 4 1 1 2 1 4 1 1 1 1 1 3 2 1 ", "3 4 1 1 4 1 3 4 1 1 1 3 1 1 1 3 1 1 3 3 4 1 1 4 1 ", "2 3 1 4 4 3 1 3 4 1 1 1 3 4 3 1 4 2 1 1 1 1 2 3 3 ", "1 1 3 3 3 4 3 1 3 3 3 1 3 2 2 1 4 2 1 1 1 1 1 3 1 ", "4 1 1 1 1 1 2 4 1 3 2 3 3 1 4 1 1 4 4 1 1 1 1 1 3 ", "4 1 2 1 1 2 4 3 2 1 2 2 4 3 1 4 1 1 1 1 1 1 1 3 1 ", "2 1 3 3 3 1 3 1 2 1 3 3 3 4 2 1 1 3 4 3 2 2 3 4 1 ", "3 3 3 4 3 1 2 1 3 3 4 1 1 2 4 4 1 1 4 3 3 3 3 4 1 ", "2 4 3 1 1 3 1 4 1 2 3 2 1 1 3 2 2 4 2 4 4 1 3 2 4 ", "1 1 1 3 1 1 2 1 1 1 1 3 2 1 1 1 1 1 1 3 3 1 1 1 1 ", "1 3 3 1 3 2 3 3 4 1 1 3 1 3 1 3 3 1 1 1 3 3 4 1 1 ", "2 1 1 1 1 1 4 1 4 4 1 1 1 1 1 1 3 1 1 4 1 1 3 1 2 ", "1 3 1 1 1 1 4 1 1 2 1 3 1 1 1 4 1 1 1 1 1 1 3 3 1 ", "1 1 1 1 1 2 4 2 1 4 3 1 1 1 1 1 1 1 1 4 1 3 2 1 3 ", "2 3 1 2 1 3 4 1 1 4 4 3 3 1 3 1 1 1 4 4 1 1 3 2 1 ", "1 1 1 1 1 2 2 1 1 1 4 1 1 3 1 1 4 3 1 1 1 4 1 1 2 ", "1 3 1 1 3 1 2 1 2 1 1 1 1 2 3 1 3 1 3 2 2 1 1 2 1 ", "1 1 1 1 1 1 1 3 1 1 4 2 4 4 1 3 1 3 1 1 1 1 2 3 2 ", "2 3 1 3 4 3 1 1 4 3 4 4 1 1 1 4 1 3 1 1 2 2 3 1 3 ", "1 3 1 1 1 2 2 1 4 1 4 3 1 1 1 1 4 1 2 3 1 1 3 1 1 ", "2 1 1 3 4 3 1 1 2 3 2 3 3 4 1 1 1 2 3 1 4 4 2 1 3 ", "1 1 3 1 4 1 3 2 1 3 3 3 3 3 2 3 3 1 1 3 2 3 1 1 3 ", "1 1 3 4 4 4 4 4 4 4 1 4 1 2 1 2 3 3 3 4 1 1 1 1 1 ", "1 1 1 2 1 3 4 1 2 1 1 1 2 1 1 1 4 3 1 2 2 3 3 2 3 ", "3 1 1 1 3 1 1 1 1 1 3 3 3 1 1 3 3 3 1 3 2 1 3 1 1 ", "1 3 3 4 1 1 1 1 2 1 4 3 3 4 1 1 1 1 3 3 1 3 3 1 4 ", "1 1 1 1 2 2 4 4 2 1 1 4"};
    vector<string> y = {"1 2 3 4 3 2 1 1 1 3 1 1 1 3 2 4 1 1 1 1 1 1 1 1 4 ", "4 1 1 3 1 3 1 1 4 3 4 1 1 1 1 3 3 1 4 1 4 3 3 1 1 ", "3 2 1 1 1 1 2 1 1 2 1 2 4 3 1 1 3 3 1 1 3 3 1 3 3 ", "1 2 1 1 4 4 1 1 1 3 1 1 1 4 3 1 3 1 1 2 1 3 3 1 2 ", "2 1 4 1 4 1 3 2 3 3 3 1 1 1 1 1 3 3 3 1 3 4 1 1 2 ", "1 1 1 2 4 4 1 1 4 1 1 1 2 1 3 1 2 1 3 1 1 1 1 3 1 ", "3 3 1 3 3 1 1 1 4 3 3 1 1 3 3 1 3 1 1 4 3 2 1 3 1 ", "3 4 4 3 3 1 1 1 1 2 2 4 1 1 3 1 1 4 4 1 3 1 3 4 1 ", "1 1 4 1 1 1 2 1 1 1 1 1 1 2 1 2 1 3 3 2 1 2 3 3 1 ", "4 3 4 1 1 1 2 1 1 4 1 2 4 1 1 3 1 4 1 1 2 1 3 1 2 ", "1 3 2 1 4 1 3 3 2 4 3 4 4 1 2 1 1 2 3 3 3 1 1 2 1 ", "1 1 2 3 3 2 1 1 1 1 3 3 4 1 3 3 1 1 3 1 1 4 1 1 4 ", "2 1 2 2 3 2 4 4 1 1 2 1 1 2 1 1 4 1 1 4 2 2 4 1 1 ", "1 3 2 1 2 3 1 1 1 1 1 1 1 1 3 1 1 3 1 1 4 3 1 1 1 ", "4 3 1 3 4 1 1 3 1 1 1 1 1 4 2 4 1 3 1 1 3 3 4 4 1 ", "1 1 1 1 1 1 2 3 2 2 1 2 1 1 2 1 4 1 4 1 1 3 4 3 3 ", "3 1 1 1 4 1 3 1 1 3 1 1 1 1 3 3 1 3 1 2 1 3 3 1 1 ", "1 1 1 1 1 3 1 3 2 3 1 4 4 3 2 2 4 2 2 3 1 3 3 1 1 ", "1 3 3 1 1 1 2 4 2 1 1 1 1 1 1 3 3 1 2 4 1 1 1 2 1 ", "1 2 1 1 3 3 4 1 3 1 3 1 1 4 1 1 1 1 1 1 1 3 1 4 1 ", "3 1 3 1 1 2 1 4 1 1 1 1 1 1 1 1 3 4 3 4 1 4 2 1 3 ", "3 4 4 3 1 3 1 3 1 2 4 3 1 1 2 1 3 1 1 1 3 3 3 1 3 ", "3 1 1 3 3 1 2 4 1 2 1 1 2 1 3 3 1 1 1 1 3 4 4 4 2 ", "1 2 1 1 1 1 3 1 1 4 4 4 1 1 1 3 1 2 1 2 1 1 2 1 3 ", "1 3 1 2 2 1 1 4 3 4 4 1 4 2 1 2 2 3 3 1 1 3 1 1 3 ", "1 1 2 1 4 4 1 2 1 1 4 1 1 1 1 1 2 4 2 4 1 1 4 2 2 ", "1 3 1 1 1 3 2 4 2 2 4 2 1 1 3 1 1 1 4 3 1 1 1 3 1 ", "1 3 1 1 1 1 1 3 1 1 1 3 4 4 4 4 1 2 1 1 2 3 1 1 1 ", "2 4 1 3 2 3 2 1 3 1 3 1 3 1 1 1 2 4 3 1 3 3 3 1 3 ", "1 2 3 1 3 1 1 2 1 4 1 1 2 1 1 4 1 1 2 3 4 1 3 1 1 ", "1 4 3 1 3 3 1 4 3 1 4 1 3 2 4 1 1 1 4 1 3 1 2 1 1 ", "1 1 1 2 1 1 1 1 3 1 2 1 2 1 4 1 1 1 1 1 1 4 1 2 1 ", "1 1 1 1 1 1 1 1 2 4 1 1"};
    vector<string> lengths = {"75 41 4 9 28 19 68 74 38 30 68 54 15 16 47 77 69 1", " 23 29 40 78 45 47 57 16 78 4 69 79 25 80 47 47 46", " 34 17 43 76 16 65 78 36 65 45 55 80 46 51 73 52 7", "9 83 32 27 69 16 31 23 41 44 2 28 83 29 76 27 38 2", "3 35 9 79 41 18 41 46 70 83 17 60 65 66 34 30 23 4", "6 81 33 4 28 47 49 77 37 76 54 19 69 48 48 59 4 39", " 40 16 24 3 55 48 75 21 41 47 63 63 43 54 37 42 59", " 44 47 35 26 35 68 1 15 1 48 6 66 47 25 72 13 68 7", "4 78 36 28 72 18 10 32 36 39 13 78 22 55 37 78 68 ", "40 54 82 81 36 1 31 17 10 70 41 76 25 45 24 8 61 3", "6 7 27 39 37 64 1 43 27 37 24 79 61 76 8 50 59 37 ", "10 48 59 9 83 17 4 56 18 19 74 3 25 10 13 53 12 32", " 75 24 22 79 18 27 50 72 70 37 64 78 6 68 80 47 1 ", "32 79 10 3 25 34 54 16 50 10 19 5 66 14 35 49 39 7", "7 80 43 33 8 10 2 75 50 36 82 1 76 35 57 82 35 66 ", "45 63 15 73 45 47 18 83 1 6 61 72 29 61 71 64 76 5", "7 40 1 46 62 16 22 8 44 42 64 42 62 16 35 58 21 4 ", "52 30 65 13 52 69 39 46 56 56 2 40 39 15 44 82 37 ", "42 60 47 56 32 4 48 29 12 9 4 60 60 50 39 79 30 83", " 56 53 32 37 36 57 63 1 26 1 75 68 81 50 52 57 21 ", "44 22 68 74 74 35 73 60 61 60 54 44 74 48 28 18 24", " 81 65 62 64 75 48 39 46 75 65 41 57 25 23 20 28 4", "7 37 81 81 14 26 37 56 55 2 14 72 33 42 15 79 38 9", " 14 15 74 68 76 40 66 34 15 50 20 24 48 53 75 9 30", " 76 38 65 45 52 7 26 37 76 16 48 72 31 63 41 17 70", " 42 74 68 6 67 79 68 26 78 65 15 38 53 45 22 27 77", " 83 44 53 60 31 64 25 80 65 69 80 43 35 62 50 69 7", "2 79 57 38 25 31 77 34 19 58 32 69 6 59 63 39 20 4", "0 60 55 2 68 42 29 10 34 4 76 44 71 70 21 78 27 77", " 4 79 77 3 29 34 37 13 79 12 79 40 83 5 33 11 13 1", " 23 26 3 70 16 43 8 21 2 78 15 8 19 14 50 57 54 41", " 82 14 10 26 38 30 6 73 43 22 24 78 22 77 50 23 8 ", "82 80 39 13 55 36 42 80 17 65 13 5 11 19 6 62 70 4", "3 60 44 78 75 11 4 77 23 27 53 76 19 81 19 38 57 1", "8 83 60 79 44 15 62 38 29 34 31 16 27 83 28 70 18 ", "10 54 43 3 78 76 66 24 72 54 46 32 4 41 63 14 35 2", "2 56 1 26 40 13 52 40 10 74 76 28 53 82 78 73 63 8", "3 13 15 6 58 25 82 60 80 78 19 81 82 15 61 16 35 1", "4 14 33 33 78 42 61 54 46 7 4 37 74 72 6 29 19 14 ", "11 4 47 17 26 16 69 7 67 27 16 72 43 67 12 12 4 79", " 29 52 9 17 46 70 26 37 46 3 16 64 46 25 50 76 25 ", "41 6 23 30 54 4 71 28 13 6 4 3 55 49 23 59 4 13 17", " 21 7 54 12 57 70 9 22 5 38 41 12 1 38 31 81 51 32", " 28 60 3 25 79 34 38 39 24 60 62 45 31 81 40 4 63 ", "80 4 3 64 14 5 57 75 69 21 59 35 8 21 43 34 58 77 ", "64 80 45 49 2 28 60 52 46 40 5 38 51 82 34 69 33 1", "0 7 5 15 56 19 38 4 34 3 63 9 12 35 80 19"};
    vector<string> names = {"B B A BA AB C A A A A A A A AA A AA B C A A AA B C", " A A AC BA B A A A C B A AA A BB A A A CB A AA CA ", "A AA CA C BA B A BA A C AA A BA CA B A CB CA A A A", " A A A B B A B A B B A A A A B B CA A A AA BC BA A", " B A CC C AC B A B A C B B C A A B B BB A C A AB A", " B AB A A C A AC A AA A B B AA A AA B A C A AA C A", "C C AA C AA A A C A A B C A A B B A BA C C CB C C ", "AB BA C A A A BA B C B A B BC C C A AA C A A A CA ", "C C B AA B B A AA B CC B B B A C B B C CA CB C CC ", "A A AB A CA C A B A C AB A AA C B AB A AA A AB AA ", "A A A A A AC A A C B A C A A AA CA A B A A AC B BC", " A A A A AC A A AB C A B A B B C A BA B A A A B A ", "B AA B A AA A C A A A CA C A AA A B C A AA B A AB ", "A B A A B AA B A A B CA CB A BA CB AC A AA AA C A ", "A C AC B A B A A A A AA A C AC BA CA A A A B A C A", " A AA AA A A C CA C C B A C A A A BC B A A AC A B ", "AC A B B CB AB CC AA A B A C AA A AA A C A C A C A", " A AC A A C BA BA AC A B CA CB C C A C AA A A A A ", "B BA A B C A B C CC A A C BA A A A A CA C A A C C ", "A AB B B A A A A A B A A B BB A A A CB BA BB A C C", " B CC AA C B B B C B B A B AC B A A A AA C AC B A ", "AA AA AA A A A B C AA A C A AC C B B B BC B C B C ", "B C A C BB C A A B AA A C A A BC A BB A AC A BC AB", " C B A A AB A BA AC B BC C AA BB AA A BA A A A AB ", "AA BA BA B AA A CA BA C B AA B CA B AA C A AA A B ", "A B A C BA AB B C C A AA AA C A A CA C BA A C A A ", "A A B A A A AA AA A B A C A A A B A A A AA A B A A", " A A A A B A AB A A AA A AA C B C A A A AC A C A A", " A A A A B A B B A A B CA A B A B B BA B B B C A A", " A A A A A A A C A A B AA A B B B A A C AC AA A C ", "A B A C C B A B B A A A A A AA BB B A BC AC A A A ", "AC A CA B C A A CA C A CC A CA A AA A BB A A A B B", "B CC C A B A A A C BC A AA B CA CA A A AA B AB BA ", "A A BA A A C C B A BB B A A BA AC A A A C A B C A ", "A C CB A B BC C C AA CB B A A A A A A C AC B A A A", "A B CC B A AB C CC A BB AA A AC C AA B A A A A A C", " B CA B AB C B BB A C AB B A B C A"};
    int k = 158;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "AA", "AA", "AA", "C", "A", "A", "B", "C", "AA", "B", "A", "A", "A", "AA", "B", "B", "BB", "C", "A", "A", "A", "AA", "B", "B", "C", "AA", "A", "AA", "B", "B", "A", "A", "A", "A", "B", "A", "A", "AB", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "A", "A", "B", "A", "BB", "AA", "AA", "A", "C", "A", "B", "A", "C", "A", "AA", "AA", "AB", "C", "A", "B", "B", "AC", "A", "AA", "C", "A", "A", "AA", "A", "A", "A", "AA", "B", "BB", "A", "B", "B", "A", "A", "A", "C", "B", "B", "B", "B", "BA", "AB", "A", "B", "B", "C", "BA", "C", "A", "B", "C", "A", "AA", "CA", "A", "A", "AA", "B", "C", "A", "A", "A", "AC", "A", "A", "AC"};
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test67() {
    vector<string> x = {"2 2 2 1 1 1 1 1 1 1 3 4 2 2 4 1 1 1 1 3 3 4 2 4 1 ", "4 1 1 1 1 1 1 4 2 1 1 1 1 3 1 4 1 3 3 3 1 1 2 1 2 ", "3 1 1 2 1 1 4 2 1 1 1 1 3 1 4 1 3 1 1 1 1 3 2 1 1 ", "3 4 2 3 3 1 1 1 1 1 3 2 1 1 3 1 2 1 3 1 3 1 3 1 1 ", "4 1 1 1 3 1 3 1 4 4 1 4 3 4 4 3 4 3 3 1 3 4 3 3 3 ", "1 4 1 3 1 4 3 1 1 1 2 1 1 4 1 4 1 1 1 3 3 4 1 1 2 ", "1 1 3 2 2 1 1 3 4 1 1 4 1 3 1 1 2 3 4 4 2 1 1 3 2 ", "1 4 2 1 3 1 1 1 3 1 3 1 1 3 3 1 1 3 1 3 4 1 1 2 1 ", "1 1 3 1 3 4 3 1 1 1 3 4 2 2 1 3 4 1 1 1 1 1 1 1 4 ", "4 2 3 2 1 1 3 1 1 3 1 1 1 3 1 1 4 4 2 2 1 1 3 1 2 ", "1 1 3 2 2 3 1 3 2 1 3 3 1 1 4 3 1 2 1 4 1 2 4 3 1 ", "4 3 1 1 1 3 2 2 4 3 3 1 4 1 1 3 1 1 3 3 4 1 4 1 1 ", "1 3 1 1 1 2 1 2 1 1 1 1 3 1 1 4 2 4 1 3 1 3 1 4 1 ", "1 3 1 1 1 2 3 1 1 1 4 3 3 1 3 1 3 1 3 3 4 3 3 1 1 ", "1 1 4 1 2 1 3 3 1 1 1 1 1 1 1 1 1 3 2 3 3 1 3 1 1 ", "1 2 3 1 4 3 1 1 4 1 3 1 1 1 1 2 4 1 1 1 1 2 1 2 3 ", "1 2 4 3 1 4 1 4 1 3 3 1 1 1 1 4 3 3 4 2 2 3 1 1 1 ", "2 1 3 1 4 4 3 1 1 2 1 2 3 3 1 1 1 2 3 2 4 3 3 3 1 ", "1 1 2 4 2 1 1 4 1 4 3 4 1 2 4 1 3 3 4 1 1 3 1 4 4 ", "4 1 1 1 3 2 3 1 1 1 1 4 1 3 1 3 1 1 1 1 3 1 1 1 2 ", "4 1 1 2 1 4 3 1 1 3 3 3 1 4 2 3 1 3 1 1 2 1 1 1 3 ", "1 1 1 3 4 1 3 1 4 1 1 1 2 3 2 1 4 3 3 3 4 3 1 4 1 ", "1 1 3 3 1 1 3 1 1 3 2 1 3 3 1 2 4 3 1 1 1 1 1 4 4 ", "2 3 3 3 1 1 1 1 1 1 3 1 3 2 1 4 3 2 1 3 1 3 1 2 1 ", "1 3 3 3 4 1 4 3 1 1 1 1 3 1 3 3 1 1 1 2 1 1 4 3 1 ", "2 1 2 4 1 3 1 1 1 2 1 2 2 1 3 4 1 4 2 1 2 3 2 3 1 ", "3 2 1 3 3 1 3 3 1 3 3 1 1 1 2 1 4 1 2 2 1 3 1 1 1 ", "1 1 3 3 3 1 1 3 3 4 4 4 3 3 1 1 3 3 4 3 2 4 1 3 2 ", "1 2 3 1 4 2 3 1 1 1 1 3 1 2 3 4 1 3 2 1 3 1 1 2 1 ", "3 3 4 1 1 2 1 1 2 1 1 4 1 3 3 3 1 4 1 1 1 4 1 2 1 ", "1 3 1 1 1 1 3 1 1 1 3 1 1 1 1 1 1 1 3 3 2 1 1 2 3 ", "1 1 1 1 1 1 4 3 1 1 2 2 4 1 1 2 1 1 4 1 1 4 2 1 1 ", "3 1 1 4 1 1 1 2 1 1"};
    vector<string> y = {"1 2 4 1 1 1 2 1 1 4 3 1 1 1 3 2 1 4 1 1 1 1 1 2 1 ", "3 1 3 3 1 1 1 1 1 2 3 3 3 1 3 4 3 3 3 4 1 1 1 3 4 ", "1 3 3 3 1 2 1 3 1 1 4 1 4 1 3 1 2 3 1 2 3 3 3 1 2 ", "1 3 1 1 1 4 1 1 1 3 1 2 4 3 1 3 1 3 1 2 3 1 1 3 3 ", "1 1 1 1 1 3 1 2 1 4 3 1 2 3 1 1 1 3 1 3 2 2 1 2 1 ", "1 1 1 1 4 3 1 1 3 1 2 1 3 2 3 1 1 1 3 1 3 1 1 1 1 ", "1 1 1 1 1 1 1 3 1 1 3 3 1 2 1 1 4 1 1 4 1 2 2 1 1 ", "1 4 4 1 1 1 1 1 4 4 2 1 1 4 3 1 4 1 1 4 4 2 4 3 3 ", "3 3 3 1 3 1 4 2 1 2 1 3 1 1 1 3 3 2 2 1 1 1 1 1 1 ", "4 4 1 1 1 1 3 1 3 3 3 1 1 3 1 3 4 1 1 3 3 1 3 1 1 ", "4 2 1 3 4 2 1 1 2 1 4 1 1 3 3 1 1 1 2 4 1 1 3 1 1 ", "1 4 1 1 2 3 3 1 3 4 3 2 1 1 1 3 3 1 1 3 1 4 3 1 2 ", "3 3 4 3 3 4 1 1 2 3 2 1 3 1 2 3 4 3 2 1 4 1 1 1 1 ", "1 3 3 3 1 1 1 1 3 3 4 4 1 2 2 3 1 1 1 1 3 1 1 3 1 ", "1 2 3 3 3 1 1 4 4 2 3 1 4 3 2 3 4 4 4 1 4 3 2 3 1 ", "3 3 1 3 4 3 1 3 1 1 1 1 3 3 1 4 1 1 1 1 4 4 1 3 1 ", "1 1 1 2 3 3 1 3 4 1 1 1 1 1 2 3 1 1 1 1 3 1 1 1 3 ", "1 3 1 2 3 1 1 3 4 1 4 1 1 2 1 1 2 1 3 2 1 1 1 1 1 ", "1 1 1 3 1 4 1 1 3 3 3 1 4 1 4 3 2 1 1 3 1 3 1 2 2 ", "1 1 4 1 3 3 1 1 3 2 3 1 1 3 1 1 2 1 1 1 3 3 1 3 3 ", "3 1 2 3 3 2 1 1 1 1 1 2 1 2 1 3 3 2 2 2 1 3 1 1 3 ", "1 1 1 1 1 1 4 1 4 2 1 3 2 1 4 3 1 2 3 1 2 3 1 1 1 ", "1 1 3 3 3 1 2 1 1 4 1 4 3 4 1 2 3 1 2 1 1 4 3 1 1 ", "4 1 1 4 1 4 1 1 1 1 2 2 2 1 1 4 1 1 1 1 1 4 1 3 3 ", "1 4 4 1 3 2 1 4 3 1 1 1 3 2 2 1 2 2 1 1 1 1 3 2 2 ", "1 3 2 1 4 1 1 1 3 1 1 1 1 1 2 1 3 1 3 1 1 2 4 1 4 ", "3 1 3 1 3 4 1 1 4 1 1 1 4 3 3 3 1 2 1 2 2 1 1 2 2 ", "3 4 4 3 3 1 2 1 2 3 4 2 3 1 1 1 3 3 3 1 1 1 1 2 1 ", "1 1 2 1 1 1 1 4 1 1 3 3 1 1 3 1 2 1 1 2 1 2 4 4 3 ", "1 1 2 1 1 4 4 1 1 2 1 4 1 1 1 2 2 1 3 1 1 2 1 4 3 ", "1 1 4 2 2 1 3 2 1 3 3 2 3 1 3 2 4 1 3 3 1 1 1 2 4 ", "1 3 1 1 3 3 2 1 1 4 1 1 1 2 3 4 1 1 3 3 2 2 3 4 2 ", "1 1 2 3 4 1 3 1 4 3"};
    vector<string> lengths = {"46 37 48 45 44 29 66 15 36 67 63 83 13 70 60 12 51", " 56 32 40 67 36 15 71 64 58 61 27 1 64 62 51 57 77", " 31 55 12 42 2 43 9 81 80 3 47 57 73 50 23 41 11 7", "6 78 79 13 62 21 33 5 47 49 5 2 77 60 49 71 74 29 ", "30 22 59 28 48 78 39 1 77 14 82 42 73 72 34 66 71 ", "26 34 28 13 4 49 14 1 10 49 48 60 22 72 42 81 59 1", "9 54 43 25 40 38 45 55 37 64 44 77 41 76 78 58 18 ", "44 24 16 50 80 69 19 22 35 32 62 30 10 70 6 49 56 ", "29 52 11 58 49 36 20 57 39 61 12 34 80 42 38 57 62", " 67 1 72 49 26 43 66 5 66 7 7 78 73 42 25 34 52 57", " 60 58 1 63 37 19 1 83 47 42 81 31 34 22 71 40 67 ", "18 44 33 31 11 77 50 21 39 54 34 51 75 38 41 16 21", " 66 5 9 59 82 40 29 25 82 37 25 33 45 78 33 21 53 ", "65 9 57 3 40 27 7 1 59 30 2 75 21 28 56 24 19 56 1", "9 73 18 45 4 69 80 2 76 45 7 40 43 16 47 51 76 65 ", "32 57 48 43 54 12 61 20 29 72 53 17 40 53 60 35 69", " 61 10 48 38 19 32 75 21 18 5 63 49 35 60 76 83 67", " 59 23 24 56 33 48 64 52 24 9 1 4 58 78 75 26 43 5", "1 12 51 77 53 21 73 45 32 64 36 51 22 56 58 19 15 ", "37 2 4 4 83 53 70 21 21 31 61 37 73 24 78 81 82 70", " 26 16 9 30 13 66 70 76 74 64 70 7 22 21 72 7 56 5", "3 20 37 40 49 51 26 62 45 36 54 3 20 41 19 1 50 52", " 51 69 22 41 17 80 31 30 35 57 75 16 14 26 8 23 21", " 73 34 41 80 17 55 34 48 28 63 25 61 20 60 35 64 3", " 60 11 32 30 37 9 10 79 22 8 35 30 51 39 60 30 79 ", "22 6 31 83 37 5 40 5 39 62 41 77 24 52 5 83 14 66 ", "30 62 44 57 20 37 81 62 76 39 45 52 76 1 80 17 15 ", "23 7 17 18 71 18 77 81 74 19 30 2 29 75 26 70 51 2", "4 23 25 82 79 30 82 9 28 74 64 82 17 40 70 32 53 5", "0 12 50 80 23 62 40 56 67 64 64 48 32 57 33 76 42 ", "53 30 25 47 13 24 20 13 83 12 67 82 57 76 69 59 33", " 27 67 73 12 34 9 62 13 17 40 27 51 68 1 10 18 24 ", "67 39 30 5 24 47 26 70 4 15 18 30 42 29 32 9 1 25 ", "28 52 28 60 23 70 58 57 48 43 40 28 33 26 12 47 50", " 64 4 22 40 55 15 44 75 81 74 13 58 20 69 31 6 47 ", "50 7 53 5 67 25 15 64 1 21 35 11 1 50 24 50 54 74 ", "33 50 80 44 32 36 17 2 11 14 74 30 8 42 5 16 42 20", " 70 67 77 74 74 12 15 34 23 22 30 31 53 3 10 25 56", " 36 7 1 40 64 48 1 11 8 10 27 58 5 27 2 76 70 56 3", "9 24 14 64 10 11 80 1 10 54 81 31 17 7 67 41 67 82", " 73 39 38 11 78 59 44 43 69 18 31 31 46 3 63 16 54", " 73 65 83 54 26 75 22 1 37 40 56 73 6 10 34 9 3 14", " 4 27 5 39 78 74 28 74 64 59 47 4 36 20 37 32 25 4", "5 17 66 10 30 49 5 6 63 46 42 54 82 70 26 30 39 60", " 14 62 64 21 34 24 1 38 67 66 32 9 8 43 18 13 28 4", "6 78 47 1 38 79 47 14 21 29 21 47 80 31 65 30 28 5", "7 52 67 78 28 72 37 63 73 70 54 12 24 78"};
    vector<string> names = {"A A A AA B B BA CA BA AC B A BB A A B C A B CA A A", "A A AA A C BC BA A C AC A A AA A A B B B B B B AC ", "A B A BA C C A A C A C C B C A C B A A A A A A CA ", "AA B AB AA BA AA C A A A A AA C A A A A A B BA C A", " A AB AA B CA BB A AA A A BC CC B BC BB A A C B B ", "A AB A CC C B A A B B CA BB AB A A B A BC A B BA A", " C A B B B A C AA A A A C B AB A A A C C B A A AC ", "AA B AA C A C BC CA C CB A B C AC A C AA AA B A C ", "C AB CA A A A AA AA AA B C AB A BB A AA AA B B A C", " A C B C A A A B A A AC BA A C A A AA A A A C A AA", " C C A A A AB AB A A C A A BA A C BB A A A A A BA ", "B CA CA A A B A A AB AA C B AA C B B C B A A CB AA", " CA A AA B C B A AA A A B A BB A C AB A C A AB AA ", "AC A A A A A A C B C AA C CB A A B A B A AC A A A ", "A A A C A B C AA C A AC A AB C A A B A A A C C A A", " A A B C C C CA B B A AB A A A CA B C C A A B A A ", "A CA A A A A A C A A AB AA A CC B B BA A C C C C A", " A A C B B C BC A B C C B A A A B A C A C B B C C ", "A A AC A C B A A AC AA A A C A C C B A BB BA C C B", " A A A BA A A A A A CA A A B A A C BA AA A AB A A ", "AA BC C AA AB A CB A BC C B A B B AC BC AC BA C A ", "A B BA A A B A AA C C A AA A AC A B C C C B C B A ", "A B C C A C C A B A BB C AA AB A C A C CA A A A CA", " A AA B AB A A B B CA A A B A AB B B A AA C A BA A", " C A A B BB A A AA A C AA AC A A C AC C A AA A AC ", "A A B A BA A CA C B A C CC BC AA C C B A B A A A A", " AC C CB A B AC A B B A AA A AB A AC B A B A A C A", "C AC C B A A A A A BA C A B A A C C C A A AA CA B ", "A AA C B AA A C B CC BA AB BA A C B AC A A A A AA ", "A CB C A C A C AB B BC AA C A C A A C B C B A A C ", "C BA A B B B BB A B BA C AA C C C A BB CA AB AA AC", " A B AA A A AA A A CA A BA AB B A A AA A A CA B BC", " A B B A A CC C B B CA C C BA A A BA A A A B A A A", " BC A A A B A A A A B B A B C B BA A B A A B CA A ", "C B A A B AB A A A A C B A A A AA CB A CC C A AA A", "B AA A CA A AB AA A AB A AA B BB B AB AA B A A CA ", "BA B A A A C A B A A C AA AA A"};
    int k = 198;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 67: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 67: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test68() {
    vector<string> x = {"76 76 76 75 74 74 76 74 74 74 76 74 74 74 74 74 74", " 76 76 74 76 76 77 76 77 76 77 76 74 74 74 75 75 7", "4 74 74 74 74 76 75 74 74 74 74 77 74 74 76 74 74 ", "76 76 76 74 76 75 76 76 74 74 76 75 77 74 75 76 75", " 76 74 76 75 76 74 74 76 76 76 74 74 74 74 74 74 7", "7 76 74 74 76 76 74 74 74 74 75 77 75 74 74 76 77 ", "74 74 76 77 74 74 74 76 75 77 76 75 75 76 74 74 75", " 74 76 74 76 77 74 74 74 76 74 74 74 74 74 76 75 7", "7 74 76 74 74 74 74 74 76 76 74 76 76 75 74 76 74 ", "74 76 74 77 76 74 76 75 74 76 74 77 77 74 74 75 74", " 74 76 77 74 74 74 74 75 76 76 74 76 74 74 74 76 7", "4 74 77 75 74 74 74 74 74 76 76 76 76 74 74 76 74 ", "76 76 74 76 74 76 75 76 76 74 77 75 77 77 74 74 76", " 75 75 76 74 76 76 74 76 74 77 74 77 76 74 75 74 7", "4 74 76 74 75 76 75 76 77 75 74 74 76 76 75 74 77 ", "76 74 75 77 74 74 74 74 76 74 74 74 76 74 74 74 75", " 74 76 74 77 76 76 76 74 76 76 77 74 74 74 76 76 7", "6 74 74 76 74 74 77 76 75 76 76 76 76 76 74 74 74 ", "77 75 76 74 76 77 76 74 74 76 74 74 74 74 74 74 74", " 76 76 74 75 76 76 74 74 74 74 74 74 77 75 74 77 7", "4 76 74 75 75 76 74 76 74 74 76 74 74 77 74 75 76 ", "77 74 76 74 74 74 77 74 76 74 74 74 75 77 76 76 75", " 74 76 74 74 75 77 77 75 77 74 76 77 74 74 74 77 7", "6 74 75 74 77 74 74 74 75 77 74 74 74 74 75 74 74 ", "75 75 77 74 76 74 75 77 76 76 77 74 74 75 74 75 75", " 74 76 76 74 74 74 74 74 74 76 74 74 74 76 75 76 7", "6 74 76 75 76 77 76 74 74 76 74 77 74 74 74 75 75 ", "76 74 74 74 74 74 75 74 76 74 76 74 74 74 77 74 74", " 75 77 76 76 77 74 74 74 76 77 76 74 76 74 74 74 7", "6 76 76 74 76 76 74 74 75 74 75 76 77 76 75 74 74 ", "76 76 75 74 75 74 75 74 76 77 74 74 76 76 76 76 76", " 75 74 76 77 77 77 74 74 74 74 76 76 75 76 74 76 7", "6 75 76 74 76 76 77 74 74 74 76 74 74 77 74 77 74 ", "77 76 74 75 74 74 76 74 74 75 74 77 76 74 77 74 74", " 74 76 76 74 74 75 77 75 74 74 74 74 74 74 76 77 7", "6 74 76 76 74 74 75 76 74 74 77 76 74 74 74 74 76 ", "76 75 76 76 76 76 77 75 74 77 77 75 77 75 76 74 75", " 74 74 74 76 76 76 74 74 77 77 76 74 76 74 74 74 7", "4 74 74 74 75 75 74 76 74 74 74 76 74 75 74 74 76 ", "74 76 76 77 74 74 76 74 74 74 74 76 74 74 76 77 76", " 75 74 74 75 74 74 76 76 74 74 76 74 74 74 74 76 7", "7 76 74 74 74 74 74 76 76 76 75 74 74 74 74 76 74 ", "74 74 74 74 77 74 74 76 76 74 76 76 76 74 74 77 75", " 74 75 74 74 74 74 74 76 74 74 74 74 74 74 75 74 7", "6 75 74 74 75 77 77 76 76 77 74 74 76 76 75 77 76 ", "74 74 76 74 76 74 76 75 74 74 74 76 76 75 74 76 76", " 74 74 74 77 74 74 74 74 74 76 75 76 74 74 74 74 7", "4 74 74 77 74 74 76 75 74 76 74 75 74 75 74 75 74"};
    vector<string> y = {"76 74 77 74 76 74 74 74 74 74 75 76 76 75 74 76 77", " 77 76 76 74 74 74 74 76 77 75 76 74 76 74 77 74 7", "4 74 74 77 74 74 74 76 75 76 76 74 76 76 76 74 74 ", "76 75 74 74 76 75 77 76 74 76 74 74 75 76 74 76 74", " 76 74 76 74 77 75 75 74 75 74 74 76 74 74 75 74 7", "6 76 75 74 74 74 77 77 74 74 75 74 75 75 74 74 75 ", "76 74 74 76 74 74 76 76 76 74 74 74 76 75 74 74 75", " 77 76 75 74 74 76 76 74 77 75 75 74 74 76 77 75 7", "6 75 76 74 74 74 74 76 74 75 76 74 74 74 74 77 77 ", "74 76 74 74 76 74 76 74 74 75 77 74 74 74 74 77 77", " 77 74 75 74 74 74 77 74 74 74 75 74 74 74 77 76 7", "6 74 75 74 74 77 77 74 76 76 74 74 75 74 74 74 74 ", "74 74 75 77 74 76 74 75 74 76 74 76 76 76 76 76 74", " 74 74 76 77 77 74 74 74 74 77 76 76 77 74 74 74 7", "5 76 74 75 74 75 76 74 74 77 74 74 74 75 77 76 77 ", "74 76 74 74 74 74 77 74 75 74 76 74 76 74 76 77 75", " 74 74 77 74 74 74 77 75 76 76 76 76 74 75 74 76 7", "6 74 74 76 74 77 75 74 74 76 74 74 74 76 76 74 74 ", "76 77 75 74 74 77 74 75 76 74 77 74 76 74 76 74 76", " 74 75 76 76 77 74 74 76 75 76 74 76 74 74 77 74 7", "4 75 74 75 74 74 74 76 76 74 77 77 74 76 76 76 74 ", "76 74 75 76 76 74 75 74 74 77 74 74 76 75 74 74 75", " 77 76 74 74 75 76 74 76 76 76 74 75 76 75 75 75 7", "7 76 77 74 74 76 77 77 77 74 74 75 76 76 74 74 74 ", "74 76 75 77 75 74 74 76 76 77 75 75 74 76 77 74 77", " 76 76 77 77 74 75 77 76 76 74 74 74 77 76 77 74 7", "7 74 77 74 76 77 77 76 76 76 76 74 77 74 74 77 74 ", "76 76 75 75 75 76 74 74 76 74 74 74 74 74 74 74 76", " 76 75 74 74 76 75 74 75 75 74 74 76 76 74 76 74 7", "5 74 74 75 74 74 74 74 74 74 76 75 76 74 74 76 76 ", "76 76 74 76 76 77 77 74 74 74 74 75 76 74 74 74 76", " 77 74 74 76 74 74 76 75 74 76 74 76 76 77 74 74 7", "7 75 77 74 76 74 75 74 74 77 77 76 75 74 76 74 74 ", "75 74 74 77 75 75 74 77 74 74 76 75 74 74 75 75 74", " 76 75 74 76 74 74 76 74 75 74 74 74 74 74 74 76 7", "5 74 74 75 74 76 76 74 76 74 76 74 74 74 75 74 76 ", "74 74 74 76 76 75 76 75 77 74 74 74 74 75 75 76 75", " 74 74 74 75 77 75 74 74 74 76 74 74 74 74 74 74 7", "4 74 76 76 76 74 75 74 74 76 77 76 74 74 74 74 74 ", "76 75 74 74 76 74 74 74 75 74 74 74 74 74 77 76 76", " 76 76 74 74 76 75 74 76 74 75 74 74 77 77 76 76 7", "7 74 74 75 76 76 76 74 74 74 74 75 75 74 76 74 74 ", "74 76 74 74 74 74 77 74 74 74 74 74 77 74 75 76 76", " 76 74 76 74 75 74 74 75 76 74 74 77 74 74 74 76 7", "4 74 76 77 76 74 74 74 75 76 75 75 75 76 76 74 76 ", "74 74 74 74 76 76 76 75 74 74 74 74 76 74 77 74 74", " 74 77 75 74 74 76 76 76 75 74 74 74 74 74 75 77 7", "4 74 77 74 76 74 74 74 75 77 74 76 74 77 75 74 76"};
    vector<string> lengths = {"47 49 47 47 49 49 47 47 47 49 50 47 50 49 48 47 47", " 50 47 48 47 49 47 50 47 50 47 50 50 48 47 49 50 4", "7 49 47 47 48 47 47 48 47 47 47 47 50 47 47 47 47 ", "47 50 47 48 47 47 47 47 49 47 47 47 50 48 47 47 48", " 47 47 47 48 50 48 47 50 49 50 47 49 47 49 49 50 4", "7 47 47 48 48 49 49 50 47 48 47 47 49 47 47 49 49 ", "47 48 48 49 49 49 47 47 47 47 49 47 48 47 47 49 49", " 48 50 49 49 49 50 49 49 50 47 49 49 47 50 47 50 4", "7 47 47 47 49 49 49 49 49 49 47 50 47 49 47 48 49 ", "47 48 47 48 48 47 47 47 47 47 50 49 47 47 47 47 47", " 49 50 47 49 47 47 47 49 47 50 50 47 47 48 48 47 4", "7 49 50 50 47 47 49 49 49 47 47 49 47 49 47 49 47 ", "47 47 47 49 50 47 49 47 47 47 49 49 47 47 47 48 50", " 47 47 50 47 47 49 47 50 47 49 47 50 47 47 47 47 4", "7 50 48 47 47 47 50 49 49 47 48 50 50 47 47 48 49 ", "49 48 47 47 47 47 49 48 50 49 49 47 47 50 50 47 47", " 50 47 47 47 49 47 49 47 47 47 47 50 49 47 47 48 4", "7 47 50 47 49 47 47 48 47 47 47 47 47 47 49 49 49 ", "50 47 47 47 47 48 47 47 49 49 47 47 47 47 48 49 48", " 47 49 50 47 47 47 47 47 47 48 47 49 50 47 48 50 4", "7 48 50 47 47 47 47 48 47 47 47 47 49 47 49 47 47 ", "48 47 48 49 47 49 47 47 50 47 47 47 47 47 47 47 47", " 47 50 47 47 47 47 48 49 47 50 47 47 47 47 49 48 4", "9 47 49 47 47 47 50 47 47 47 50 47 49 47 47 49 47 ", "47 50 50 47 48 47 49 49 47 47 50 48 49 48 47 50 50", " 47 49 47 47 47 49 49 47 47 49 47 50 47 47 47 47 4", "9 47 47 50 49 48 49 50 47 49 49 48 47 47 47 49 48 ", "48 48 48 49 47 49 47 50 49 49 47 47 47 48 50 50 47", " 47 50 49 47 47 48 48 49 47 47 47 47 47 47 49 48 4", "8 49 50 47 50 47 50 47 47 47 49 47 47 47 49 50 50 ", "47 48 47 47 49 47 49 50 49 48 49 49 47 49 48 47 49", " 50 47 48 47 48 47 49 47 49 48 47 48 49 48 50 47 4", "7 47 47 47 47 47 47 49 49 47 50 47 47 47 47 47 47 ", "47 47 49 47 47 50 48 49 47 50 47 49 47 49 47 49 47", " 47 47 49 47 49 47 47 48 47 47 48 49 48 47 50 50 4", "7 49 47 47 47 48 47 47 47 49 50 50 47 47 47 47 47 ", "48 48 49 47 47 49 48 48 49 47 49 48 47 49 50 47 49", " 47 49 47 50 49 47 49 49 47 47 47 49 47 49 48 49 4", "7 47 50 50 50 47 47 47 50 49 48 47 49 47 48 47 47 ", "47 49 47 49 50 49 48 48 48 49 49 47 47 47 50 47 48", " 47 49 49 47 49 48 47 47 47 47 47 47 47 49 47 47 4", "8 50 50 47 49 49 49 47 47 47 47 47 47 49 48 50 48 ", "48 47 47 48 47 48 50 49 49 47 47 47 47 47 47 50 49", " 47 47 48 47 48 48 47 48 49 47 47 50 50 50 47 49 4", "7 47 47 47 47 50 50 48 50 49 47 47 47 50 50 49 47 ", "49 47 47 47 48 50 49 49 47 47 50 49 47 47 50 49 47", " 47 48 47 49 47 49 50 47 47 50 47 49 47 47 47 48 4", "9 49 47 47 50 47 49 47 47 48 48 49 49 50 48 48 47"};
    vector<string> names = {"F G C A D A B G B C E C DD G CD A G F F AE F A G C", " A BC F DG G EA E D A A CA B A E B A AC C FB AC A ", "C G B EF B C E A C B D CD C F A F E A F B E D E CD", " C DC A A EA FG C A F A EE DB D AG BA F G F G G A ", "D G F AF A BG G AC C E BF A F A B A EF A AC A E DE", " FA F FA C B A FD BA D CE A G E F AC A F D C A AB ", "A A FD F F E AB B A CD F C A DA D DD E GE F C A G ", "A FA D DE E C CF A DA A F E B AD F BA A C DE E G B", " G BF G B EA DF C C E C C DE E G E C BC E A FF A D", " C A A G B E C E A A C C A C E AA EC F E AF A C CE", " C C G FA G C D F A A FG C B FE AC A A FG C E B G ", "AE A E CF B A AD A E C GE E A C D D C B A D C E D ", "BF GE C A G C C C G A C A G AA C E C C A A D G A A", "C A A GG DA B F A A E AB C A E A D B A AF C D AC E", " A E C BC DA A BA B B F A C G AE B A B GE A D FA F", " A G F F G F A C C B AC A E A C B G B GG ED G F G ", "F AC GG G DE F A C BA E A G C E A E E AA B F A CC ", "EB D A F A F F D C A E A D D G E A D F E G F A A C", " A A A F A BG EA F CE EG A EB F AD D GB D F G F FC", " GE A AF CC B F CF A G A A BG FG A FB F A C A D A ", "E D A A F A D A B EC D CC CF G GD A G G G EC F DC ", "ED G EA D G DA E GC G A C G A C D D DA A A A E C F", " AG A BG D C FA AB F AB AB B B E G AG G CC A A D E", "F FE GA CG A FG EG F GG A G F C G E D G A FF E B A", " C AA D C D AE A C B DD BB G A E GC F A C G A D E ", "E CC A E B G A G E B C CD E DD AA E E D EB A F B B", " GA GD BD DF F G GF A A CA G D AA D C A EC CB F DC", " E D FA CC C C B BB A C DC F F F A D GB D EG BB A ", "AC AG BA AF DB E E BG D FE F F A G D F B DA GA G C", " FF DF A D D A F A BD D EF A AF FA BF A C C G A F ", "A FF A EF AA B A E A G A C D A A A D D BG CA B D G", " G A A A E C A G A G C E F B C B A GC E GA A E F B", " C CD AA CC G F AA F GG A A A AF AA G A F GB D FB ", "F DA B D E A A G E D D E E GA E G C EE A B AC F BF", " A F D A B F D BA GG A A B A A G D G AA FA FA EC A", " B B C AF B A GA A A A GA F C C DG A D B AB A B A ", "D A G FF"};
    int k = 9;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A"};
    if(result == expected) {
        cout << "Test Case 68: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 68: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test69() {
    vector<string> x = {"74 76 74 75 76 74 77 76 75 74 74 74 77 77 74 74 74", " 74 76 76 74 74 74 74 74 76 77 76 74 74 76 76 75 7", "5 74 74 74 74 74 74 74 77 76 75 74 77 76 76 75 74 ", "74 75 77 76 75 77 76 74 74 76 76 75 74 76 76 74 74", " 76 77 76 74 74 74 74 76 76 76 74 74 74 74 75 77 7", "5 74 74 76 76 75 74 75 74 74 77 74 74 74 77 74 77 ", "74 76 74 76 74 76 74 77 74 74 77 76 76 76 74 75 76", " 74 74 75 75 74 75 76 76 74 74 74 74 74 74 75 77 7", "4 74 75 74 74 76 77 74 74 76 77 74 77 77 74 76 74 ", "74 76 74 76 76 77 75 76 76 74 74 74 74 77 77 74 74", " 77 74 75 74 76 76 74 77 74 74 75 75 77 74 74 74 7", "7 75 76 74 74 76 76 77 74 74 74 77 74 74 74 76 74 ", "77 77 74 76 77 74 74 74 75 76 75 74 74 76 76 74 74", " 74 76 75 77 76 74 74 76 77 77 77 74 74 75 76 74 7", "4 74 74 76 76 74 77 76 75 74 74 74 77 76 74 74 74 ", "74 76 76 74 74 77 76 76 75 74 77 74 75 74 74 74 74", " 74 74 74 77 77 74 74 76 74 74 74 74 76 74 74 76 7", "6 74 76 74 74 74 77 74 77 76 74 75 76 76 74 74 74 ", "74 75 75 77 75 77 74 74 75 74 74 74 75 77 75 77 74", " 74 76 74 77 74 75 76 75 74 76 74 74 75 74 74 74 7", "5 76 74 74 74 76 75 74 74 74 75 74 76 76 74 77 74 ", "76 74 74 76 77 76 74 75 75 74 75 74 75 74 75 76 76", " 74 77 77 76 74 75 74 74 76 74 74 77 77 74 76 76 7", "4 74 77 76 75 74 75 74 76 75 74 76 74 76 76 74 74 ", "74 77 76 75 76 74 76 74 75 75 76 74 74 76 75 74 77", " 74 74 76 77 76 74 75 76 76 75 74 74 76 75 74 76 7", "7 74 74 77 77 76 77 74 74 74 75 74 76 76 74 77 74 ", "74 74 74 74 77 75 74 74 74 77 74 76 74 77 74 74 76", " 74 74 77 74 77 76 74 74 77 74 74 74 76 76 74 74 7", "5 74 74 75 74 74 74 74 75 76 74 77 77 77 74 74 75 ", "75 74 74 74 75 76 76 74 76 75 74 74 75 75 76 74 76", " 77 74 74 74 77 75 77 74 76 74 74 74 74 76 74 74 7", "4 74 75 76 76 76 76 75 76 74 75 74 75 74 74 74 76 ", "75 74 76 74 74 74 74 74 77 74 75 74 75 74 74 77 74", " 77 76 77 77 76 74 74 74 76 76 74 74 76 76 77 74 7", "7 74 74 74 74 77 74 76 76 75 74 75 76 74 75 75 75 ", "74 75 74 74 74 76 76 74 74 74 74 76 75 76 76 74 75", " 74 75 75 76 77 74 74 74 74 76 75 76 74 75 75 74 7", "6 74 74 76 76 74 75 76 76 74 74 76 76 74 74 75 74 ", "74 76 74 75 74 76 74 76 76 74 74 74 76 76 74 74 76", " 76 77 74 76 74 76 74 75 76 74 74 77 74 74 75 76 7", "4 74 74 75 77 74 75 74 74 74 74 75 74 76 75 74 76 ", "74 75 74 77 74 76 74 77 77 74 74 74 74 75 74 77 74", " 75 74 75 74 74 76 77 74 76 74 74 74 74 76 76 76 7", "7 76 74 74 74 76 74 74 74 74 77 74 74 74 74 74 77 ", "74 75 74 74 74 76 76 76 74 77 77 77 77 75 74 74 74", " 75 76 74 74 74 74 74 76 75 74 74 74 74 75 76 76 7", "5 74 74 75 76 74 74 74 74 74 74 74 77 76 74 74 74 ", "77 75 77 77 75 74 75 74 74 74 76 77 77 74 77 74 76", " 74 77 76 74 74 74"};
    vector<string> y = {"74 75 74 76 76 75 76 74 74 74 74 77 76 75 74 75 75", " 74 74 77 74 76 76 76 74 77 74 76 74 75 74 74 74 7", "4 74 76 75 74 74 76 74 76 75 74 74 74 74 74 74 74 ", "74 74 76 74 74 74 76 77 77 76 75 74 74 74 76 75 74", " 74 74 74 76 74 77 76 74 74 76 76 76 76 74 74 74 7", "7 74 76 75 75 76 75 77 76 74 74 76 75 74 76 76 75 ", "74 74 74 74 74 74 75 74 74 76 77 77 74 74 74 74 77", " 76 75 76 74 74 76 77 74 77 77 77 74 74 74 77 76 7", "4 76 75 76 74 74 74 76 76 76 74 74 74 74 74 74 76 ", "74 75 75 77 74 77 74 74 74 76 74 74 76 74 76 74 74", " 77 76 74 74 77 75 76 74 75 74 74 76 77 75 74 74 7", "4 75 76 75 74 76 74 76 77 77 74 74 76 77 75 74 74 ", "76 74 74 74 76 76 74 74 76 74 74 74 75 74 75 77 74", " 77 75 74 77 75 74 74 76 74 76 76 74 77 76 75 74 7", "4 74 74 75 74 74 74 76 76 74 75 74 74 74 74 74 74 ", "74 74 75 76 74 74 74 76 76 74 76 76 75 74 74 74 75", " 74 74 74 74 76 74 76 74 76 74 74 75 74 76 74 76 7", "4 76 77 74 74 77 76 74 74 74 77 74 74 77 74 77 74 ", "74 74 76 74 76 74 76 77 77 76 74 77 77 74 74 76 74", " 76 75 74 74 76 75 76 74 74 74 77 74 74 74 74 76 7", "4 76 74 75 76 77 77 77 75 76 74 74 74 76 76 77 74 ", "74 74 76 74 74 74 74 74 76 74 76 74 74 74 76 74 76", " 74 76 77 74 74 76 77 76 76 74 76 76 76 76 76 75 7", "6 74 75 74 74 74 77 77 74 74 74 75 74 74 74 76 77 ", "76 74 77 75 75 74 75 75 76 76 76 76 75 74 74 77 74", " 77 74 74 74 76 74 74 74 74 74 75 74 76 76 74 74 7", "7 76 75 76 76 75 77 75 74 77 77 74 77 75 74 76 74 ", "74 77 74 76 76 75 74 74 76 76 74 75 75 74 74 76 77", " 76 74 74 74 74 74 74 74 74 76 74 74 75 74 75 74 7", "6 77 77 77 76 76 76 74 74 74 74 74 74 74 74 74 74 ", "75 75 75 75 74 74 75 74 74 74 77 74 76 76 76 75 74", " 76 74 76 77 76 75 76 76 74 74 74 74 74 74 74 74 7", "6 74 74 74 77 74 77 76 74 74 76 76 74 74 76 74 75 ", "74 76 74 76 76 76 76 76 77 77 74 74 74 74 74 76 77", " 76 76 77 75 75 76 74 77 75 74 76 76 77 74 76 75 7", "4 74 77 74 76 74 77 74 74 76 74 76 74 74 74 74 74 ", "76 75 74 76 76 77 76 74 74 74 74 76 74 74 74 76 77", " 75 75 76 77 74 74 74 77 74 74 74 74 74 76 75 76 7", "6 74 74 74 74 74 76 76 77 76 76 76 77 75 74 76 74 ", "74 74 75 75 74 75 76 76 74 74 74 77 74 74 74 76 74", " 76 74 75 74 76 74 74 75 74 74 74 74 76 74 74 75 7", "6 74 77 74 74 77 76 77 74 74 75 77 74 76 74 76 74 ", "74 76 76 74 74 74 74 77 74 74 76 77 75 74 74 76 74", " 77 74 75 75 74 76 74 76 74 77 77 74 76 77 74 74 7", "4 76 77 76 75 74 76 74 76 74 74 75 75 74 76 74 74 ", "75 75 75 75 74 77 74 74 76 74 74 74 76 75 75 76 74", " 76 74 74 75 74 76 74 77 74 76 74 77 74 74 77 76 7", "4 74 76 76 75 74 74 75 75 76 76 76 77 76 74 74 74 ", "74 74 74 74 77 74 74 74 74 76 74 74 74 75 74 74 76", " 76 74 74 75 76 74"};
    vector<string> lengths = {"50 50 47 47 47 49 49 47 50 47 47 49 47 50 47 47 50", " 49 49 48 49 49 47 49 49 47 50 49 47 48 50 49 47 4", "7 49 47 47 49 48 48 49 47 49 49 47 47 49 47 49 47 ", "47 47 47 50 47 48 47 47 48 47 47 47 47 49 47 50 49", " 50 47 48 49 47 47 47 47 47 47 49 49 47 47 47 47 4", "7 50 49 49 47 49 47 48 47 48 47 47 50 49 50 47 50 ", "47 47 49 48 47 48 48 49 47 47 47 47 50 47 48 49 47", " 48 47 47 47 48 50 50 48 49 47 47 47 49 47 47 48 4", "7 47 47 48 47 49 47 47 48 49 49 48 47 47 47 49 49 ", "49 49 49 47 47 50 47 47 49 47 47 47 49 50 47 47 47", " 50 49 47 50 47 50 47 47 47 49 50 47 49 50 47 47 4", "8 47 47 50 47 49 50 47 49 47 48 47 47 48 47 49 49 ", "48 49 50 47 47 49 47 48 48 49 48 47 47 47 49 47 47", " 47 47 49 49 47 49 47 49 47 49 47 49 47 49 50 47 4", "9 50 47 47 47 49 49 49 47 50 47 47 47 47 47 47 47 ", "47 50 49 47 48 49 47 47 47 48 48 47 47 49 50 47 47", " 49 48 47 49 49 47 49 50 49 47 47 50 50 47 47 49 4", "7 48 47 48 48 49 50 47 50 50 48 47 47 49 47 47 47 ", "49 49 49 48 47 48 48 49 48 47 47 47 47 47 47 48 48", " 49 48 47 50 49 47 49 47 47 49 49 48 47 47 49 47 5", "0 50 47 47 47 49 47 48 47 47 49 49 47 48 47 49 47 ", "48 47 47 50 47 47 47 49 47 49 47 47 47 48 50 47 47", " 47 47 48 47 47 49 47 50 47 47 47 50 48 47 47 47 4", "7 49 50 49 47 50 50 49 48 50 49 47 47 47 49 49 47 ", "47 47 48 49 47 47 49 48 47 47 47 50 47 49 50 50 47", " 47 48 47 47 49 47 47 50 50 49 47 48 49 50 47 47 4", "9 47 49 48 47 47 47 50 49 49 49 47 47 47 49 50 49 ", "50 49 48 48 47 47 49 50 47 47 48 49 47 47 49 49 49", " 47 47 49 48 47 47 47 49 47 47 47 48 48 47 47 49 5", "0 49 47 49 49 48 48 48 49 47 50 47 49 49 49 47 48 ", "48 47 50 48 47 49 47 47 47 49 47 47 47 50 47 47 47", " 49 47 47 48 48 48 48 47 48 47 48 47 50 47 47 47 4", "7 49 47 48 48 49 49 47 47 47 49 50 47 49 47 47 49 ", "47 47 47 47 47 47 47 48 50 50 47 47 50 47 49 47 49", " 48 47 50 47 47 47 47 49 48 47 49 47 49 48 47 49 4", "8 47 50 50 47 47 47 48 47 50 47 47 49 47 47 48 47 ", "47 48 47 47 49 48 48 49 47 49 47 47 49 49 47 47 49", " 47 47 47 49 49 50 47 48 49 49 49 48 48 50 50 50 4", "9 47 48 47 49 47 47 48 47 50 49 49 50 50 47 49 47 ", "48 50 47 47 48 49 49 49 48 50 47 47 47 50 50 47 49", " 48 48 49 47 48 47 47 50 48 47 49 49 49 48 47 48 4", "7 47 49 50 47 47 47 47 47 47 49 47 50 48 47 48 50 ", "47 48 47 50 49 49 49 47 47 49 49 48 49 47 47 50 49", " 49 50 47 47 47 49 47 49 48 50 47 47 47 49 48 47 4", "7 48 47 49 49 47 49 47 49 50 49 47 47 49 47 49 47 ", "49 49 48 49 47 47 47 49 49 50 50 48 49 47 49 49 47", " 47 47 48 47 47 49 47 47 48 47 49 47 50 47 49 48 5", "0 49 50 47 47 50 47 50 47 49 49 48 47 47 48 47 47 ", "49 47 47 49 49 49 50 48 47 47 47 50 50 50 47 47 50", " 50 48 47 47 49 48"};
    vector<string> names = {"A FA FA D F GB F A F A D DG A A EA A D A B GD E BC", " G E GG A AG G G F G G A A C F A AG A A C G CC B F", " F A A GC CE F GF C A AA A A C C A C A B GE G F B ", "F F G E A F BA D D C D B AB F BC F A A B B GD A A ", "D A D AA G B A AG D F C D A A B A E D EE DB D GB D", "C A FF A D F A C A F B G AE A B G AC B E ED A F DB", " C BC D A GF DE A F E A B D FG C DA AA B F AA B B ", "AB FA A E D D A F C E ED E C FD AA A F AD D A F EE", " AB D F C E AA D AA GA E F F B EA FC AA B GD EC B ", "A E B C EA D F A G FA B A GE G E D A AA A A D F A ", "E C E FA E A AF G A C G C D G CB EF A A G G C A FF", " B D B E A C F A E E B D E D AG D F AB CB A DF A A", "A B B CG B B AB A D A C A A A E A C C E D A E G A ", "B GF G AA GF GA G G F A F B C F C E F F A GA G B D", "F C A FG F A BC D C A BB D A G A G ED C BC D A A E", " EF E C B D A G F F A AA F F C BE F G AD AC B GA E", " AE AA A B C CA F A DG AF AC AA F A B F F AA B CE ", "F AE E F A A FD A BA B A F G BA A B D G ED B D B A", "C GC E D AC A EF A D C A C D DE D A A DF A C A C F", " B A FF A E G DA A BA B BE G F D F A A C A G DA B ", "B A A E FG F D FA F GA B FF C G A A A A A A G D A ", "A E D A AC FA GC DB FC CB F B F A CA B C E D E AG ", "E CD F DG C CD BD A A DA E E E BF G F FG F DA CG E", " F B A FB AB C AA B DD A A C D G D E F C GA D A B ", "F B B D F F A BA A DB G B A FF EB B C AE D AD FC B", " FA CF E G AA A G AD AG C A AG A C FF DA G A AA A ", "A A E F FE C F B C A B D B A CF A A G BA B GA D C ", "C CA EG GA E G CD GB E D AF D G E EC A FE A B F C ", "EG B D A C C GG E F DC EF G A B A CA D B E B A A A", " G GC AC BD G A A E F F G G G G E D AG BD A G C C ", "AD E G A CG A CD B A F ED F A B C AA A G A GA E CC", " G A GE C B G A DA EA BG BC F B F A DA F D ED E BD", " B B E A D E AE B D CA BF EF A FF EF A A E E F D F", " E AA D A EA E A D G F A A F B B FB D A AC G D AA ", "B A C G A G B E G A FF AE E A AF FB EG A F C G F D", " E A A G F A A A E DC EF G B AC A D B A A C B A A ", "CB E A A G ED AA CA CE B C B E A AD D G AC F A EA ", "F C A BC A A AG"};
    int k = 74;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "AA", "AB", "AC", "AC", "AE", "AG", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "BC", "BE", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "CA", "CB"};
    if(result == expected) {
        cout << "Test Case 69: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 69: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test70() {
    vector<string> x = {"75 74 74 77 76 77 74 74 74 75 75 74 74 76 74 74 76", " 74 75 75 74 74 76 75 76 76 74 74 75 75 74 75 74 7", "4 74 75 74 74 77 74 76 76 74 74 76 74 74 74 75 74 ", "74 75 74 76 74 76 76 77 76 76 77 76 76 74 74 76 74", " 74 75 74 74 75 74 75 74 76 76 74 75 76 77 74 74 7", "4 74 74 74 77 74 74 76 74 76 75 74 74 76 76 74 76 ", "76 74 74 74 74 76 74 75 74 75 77 74 74 76 74 76 74", " 74 75 74 74 74 74 77 74 77 74 74 74 74 76 74 76 7", "4 74 77 74 76 74 76 77 74 77 77 74 76 75 77 74 77 ", "76 77 77 75 74 74 76 76 75 74 76 77 74 74 75 74 77", " 74 74 74 74 74 76 75 74 76 77 74 74 77 74 76 77 7", "4 74 74 76 74 74 74 76 74 74 76 76 77 74 74 77 74 ", "75 76 74 77 77 76 74 76 77 74 74 74 76 77 76 74 77", " 75 74 74 74 74 75 76 76 74 74 76 76 76 77 76 74 7", "6 76 76 74 76 75 75 74 77 75 74 74 74 74 74 76 74 ", "77 74 74 74 74 74 75 77 74 76 75 76 76 74 77 74 74", " 77 77 74 74 74 74 74 76 77 74 75 74 74 75 77 76 7", "5 74 75 75 77 76 74 77 74 74 74 74 74 74 74 76 74 ", "75 74 76 76 76 74 76 74 75 74 76 76 76 77 75 74 74", " 76 77 76 75 75 76 77 74 76 76 76 77 76 74 75 74 7", "6 76 77 74 74 75 77 77 74 74 77 76 76 76 76 77 74 ", "75 77 76 74 74 76 74 77 74 75 76 75 74 74 76 75 75", " 77 75 77 77 74 76 75 77 74 74 74 76 74 74 75 74 7", "4 74 74 76 75 74 74 74 74 74 74 76 76 74 74 74 74 ", "74 76 76 74 76 75 76 76 77 74 74 76 74 76 74 76 76", " 74 74 74 76 76 77 74 74 75 74 74 74 74 74 77 74 7", "7 77 74 74 74 74 74 74 76 74 74 77 74 74 76 74 75 ", "74 76 74 74 74 74 77 74 74 75 74 76 74 74 74 77 74", " 74 74 74 74 74 76 76 74 74 74 74 74 74 75 77 75 7", "4 77 76 74 74 74 74 74 74 74 74 77 74 76 75 74 76 ", "75 76 74 75 74 76 77 74 74 77 77 76 76 74 76 74 74", " 74 77 77 74 74 76 75 74 74 74 74 74 74 75 75 74 7", "4 74 77 74 74 76 74 74 77 76 74 74 74 77 74 74 75 ", "74 76 74 74 76 74 75 74 75 74 74 74 74 75 76 74 76", " 74 76 75 75 74 74 75 74 74 74 74 74 74 74 74 76 7", "4 74 77 75 77 77 74 76 74 76 74 74 74 74 75 76 75 ", "75 76 74 76 77 76 74 74 77 76 77 77 74 74 74 77 74", " 76 74 74 75 75 76 74 76 74 76 74 74 74 75 75 74 7", "7 74 77 76 74 74 74 74 77 74 75 76 74 74 76 74 74 ", "75 74 74 76 77 76 74 74 75 76 75 76 76 77 74 74 74", " 75 76 74 77 77 75 74 76 74 74 76 74 77 74 76 75 7", "4 76 76 76 76 76 75 76 76 74 74 76 75 76 74 74 76 ", "74 74 76 77 77 77 77 77 77 77 74 77 74 75 74 75 76", " 76 76 77 74 74 74 74 74 74 74 74 75 74 76 77 74 7", "5 74 74 74 75 74 74 74 77 76 74 75 75 76 76 75 76 ", "76 74 74 74 76 74 74 74 74 74 76 76 76 74 74 76 76", " 76 74 76 75 74 76 74 74 74 76 76 77 74 74 74 74 7", "5 74 77 76 76 77 74 74 74 74 76 76 74 76 76 74 77 ", "74 74 74 74 75 75 77 77 75 74 74 77"};
    vector<string> y = {"74 75 76 77 76 75 74 74 74 76 74 74 74 76 75 77 74", " 74 74 74 74 74 74 74 77 77 74 74 76 74 76 74 74 7", "7 76 77 74 74 74 74 76 76 74 77 74 77 76 76 74 74 ", "76 75 74 74 74 74 75 74 74 75 74 75 77 76 74 74 76", " 76 74 74 76 76 74 76 76 74 75 74 74 77 77 74 74 7", "4 76 74 74 74 77 76 74 76 74 74 75 74 76 76 74 75 ", "75 74 77 74 77 74 76 75 76 76 76 74 74 74 74 74 76", " 76 76 74 76 77 74 74 75 74 74 74 75 77 77 74 74 7", "7 74 74 74 75 74 76 74 75 74 76 74 74 74 74 76 74 ", "76 76 74 76 76 74 74 74 77 76 76 74 74 76 76 74 76", " 74 74 77 76 75 74 76 74 76 77 77 76 76 74 74 74 7", "4 75 75 77 74 74 76 74 74 77 77 74 76 74 76 77 74 ", "74 74 77 74 74 74 75 74 74 74 74 74 74 75 74 75 74", " 76 76 75 74 75 76 76 74 77 76 77 74 74 74 75 74 7", "4 77 74 75 77 74 74 76 74 77 74 74 75 74 76 74 75 ", "74 76 75 74 77 74 76 76 75 77 76 77 77 74 75 74 74", " 75 76 76 76 74 74 75 74 74 74 75 76 76 75 74 74 7", "4 74 76 76 77 74 76 76 74 74 76 74 74 77 74 74 77 ", "75 74 75 75 76 75 77 77 74 74 75 74 74 75 74 74 77", " 74 74 77 75 75 77 74 74 74 76 75 74 75 76 74 74 7", "4 74 74 74 74 74 76 74 74 76 74 74 77 76 74 74 74 ", "77 76 74 76 77 74 74 76 74 74 74 74 74 77 75 77 74", " 76 74 74 76 76 77 77 74 74 74 74 74 74 74 75 76 7", "5 75 74 75 74 74 75 74 77 74 77 74 74 76 77 76 76 ", "76 74 74 74 77 74 76 74 74 76 74 74 74 74 76 76 74", " 76 74 75 74 76 76 74 74 74 74 74 74 74 76 74 76 7", "5 76 74 77 77 76 75 75 77 75 75 76 74 76 76 74 74 ", "74 76 76 74 74 74 75 77 75 74 74 74 74 74 74 76 76", " 74 75 77 74 74 74 75 74 74 75 74 74 76 76 77 74 7", "6 74 76 74 74 77 74 74 74 74 74 74 74 76 74 77 74 ", "76 74 76 74 74 75 74 77 74 74 74 74 74 74 74 74 76", " 77 76 77 74 77 75 74 76 76 77 77 76 74 76 74 76 7", "4 75 77 76 74 74 75 74 76 74 74 74 76 76 76 74 76 ", "76 74 74 76 76 74 75 77 74 75 74 74 75 74 76 76 74", " 74 74 74 76 77 77 77 75 74 75 74 74 74 74 76 74 7", "4 77 77 77 74 74 74 76 74 75 74 75 74 74 75 74 76 ", "74 76 74 75 75 74 74 77 76 77 77 74 77 75 74 75 75", " 76 76 74 74 76 74 74 76 74 74 75 74 77 77 74 75 7", "4 74 77 74 74 74 74 74 75 77 75 77 74 74 77 75 75 ", "74 76 74 74 74 76 75 77 75 75 77 75 74 74 76 74 74", " 74 77 76 74 74 74 76 74 74 76 74 74 74 74 74 76 7", "4 74 74 76 77 77 77 77 74 75 74 74 75 76 74 74 74 ", "75 77 74 76 75 76 75 74 76 74 76 74 76 74 74 74 75", " 77 76 74 76 76 76 74 76 74 75 76 74 76 74 74 75 7", "4 77 74 74 75 74 74 77 74 74 75 76 77 74 76 74 74 ", "74 77 76 74 76 76 74 77 76 74 77 74 76 75 77 74 74", " 74 77 74 76 74 75 74 74 74 74 74 75 74 74 74 74 7", "6 74 75 74 75 74 77 74 74 74 74 74 74 77 74 75 74 ", "74 74 74 74 74 74 74 74 75 77 74 74"};
    vector<string> lengths = {"47 48 48 47 47 47 47 47 47 47 50 49 48 49 50 49 50", " 47 47 47 47 50 47 49 49 49 47 49 47 47 50 49 47 4", "7 49 48 47 47 47 47 49 48 47 49 49 47 50 47 50 49 ", "50 49 50 47 47 47 48 47 49 49 48 47 47 47 48 47 47", " 47 48 49 50 47 47 47 50 48 48 47 50 47 47 50 47 4", "7 49 47 47 47 49 49 49 47 47 49 50 47 47 49 47 49 ", "49 48 49 47 50 50 47 48 47 48 49 47 48 47 49 47 47", " 47 47 47 50 48 49 47 47 47 50 47 50 49 47 50 47 4", "8 47 47 47 49 49 47 49 48 47 50 50 50 47 47 49 49 ", "50 47 49 47 47 47 50 47 47 48 47 48 47 48 47 47 50", " 47 50 48 47 47 48 50 50 50 47 47 48 47 47 49 47 4", "7 47 49 47 47 47 49 49 49 50 49 47 47 47 48 47 47 ", "47 47 50 47 48 47 48 50 47 47 50 48 49 47 49 49 49", " 48 49 49 49 49 49 50 47 49 48 47 49 47 47 47 49 4", "9 49 47 47 47 49 47 48 49 48 47 49 48 47 47 50 47 ", "49 48 49 47 47 47 47 48 47 47 48 49 50 47 47 47 47", " 47 47 47 47 49 47 50 47 50 47 47 47 47 50 47 50 4", "8 47 47 49 49 48 50 47 47 47 49 49 50 49 48 47 50 ", "47 47 49 50 50 47 47 47 49 49 50 49 48 47 47 47 47", " 47 47 47 49 48 48 49 47 49 50 49 47 50 47 47 47 4", "9 47 47 50 50 47 47 49 50 47 49 47 49 47 48 47 47 ", "50 47 47 49 47 48 47 49 47 49 47 47 47 47 48 47 49", " 47 47 47 47 50 47 47 47 48 50 49 50 47 50 47 48 5", "0 49 49 48 50 48 49 47 47 47 50 49 47 49 47 49 47 ", "47 49 50 47 47 49 47 47 49 47 47 47 48 48 50 47 47", " 47 47 47 47 47 47 47 49 49 49 49 47 47 47 47 49 4", "7 49 47 47 48 50 49 50 48 47 47 50 49 47 48 47 49 ", "48 50 49 47 48 50 50 49 47 47 49 49 50 47 47 50 47", " 47 49 48 49 47 49 47 49 50 47 50 47 47 47 47 50 5", "0 50 49 47 48 49 50 49 49 49 49 49 47 47 50 47 49 ", "47 50 47 49 48 47 48 47 47 48 47 47 47 49 48 47 47", " 47 47 49 48 47 47 48 47 49 49 47 47 47 47 49 50 4", "7 47 50 50 47 49 49 50 49 47 47 47 50 50 47 47 47 ", "47 50 47 47 49 50 48 49 47 47 50 49 47 50 49 49 49", " 48 50 47 50 47 49 49 49 50 48 49 47 49 47 49 47 4", "9 49 47 47 47 47 49 49 47 47 49 47 50 49 47 49 47 ", "47 50 48 49 47 47 49 50 47 47 47 49 47 47 49 49 47", " 48 49 48 49 50 47 47 48 47 47 47 47 47 47 47 47 4", "7 47 49 49 49 49 47 47 47 47 48 47 47 47 47 47 48 ", "49 49 47 47 50 49 50 48 50 49 50 47 49 49 47 50 48", " 47 47 49 48 47 49 48 47 49 50 49 50 48 49 48 47 4", "9 50 49 49 48 48 49 48 50 50 47 49 47 47 49 49 50 ", "47 47 48 48 49 47 49 49 47 47 49 47 48 47 47 47 49", " 48 47 48 47 47 47 47 48 49 47 49 48 50 49 48 47 4", "8 49 47 47 49 50 47 47 50 47 47 49 47 47 47 50 49 ", "47 48 47 50 50 47 47 47 47 49 49 49 49 50 47 47 49", " 47 47 47 47 49 48 50 47 49 50 47 47 47 49 50 49 4", "9 47 48 47 49 49 47 47 49 47 47 48 47 47 47 47 47 ", "47 47 49 47 50 50 48 47 47 50 49 48"};
    vector<string> names = {"D F D BG GG C B A B A E E G AB D GC G G A C DC A B", " E A AF AG G G D C C G F AD E AB A A A CA G CG EB ", "A AA FA C AD C E GG C F AA A FG AB A E AB BE D E D", " E A C D B C A F E C A E A A A C FD G C CA BA FC A", " B B GD F AB F D G A G C C A C E E A EA D G F BB B", " E FC B G A G DG A GE G A D GB F FE A D G C AA C A", "D A GE A DE B C F D C E F A A B F D AD B F EE F C ", "CC EB F E C D CA C A F D F FA E C A GA A B C A EA ", "A F C AE A A B CB F CE A C E D F E E A EA BE F AC ", "F A DC C AF A A F B D BB C CG A F FB C GF A AG FA ", "D G C B B CA F F C B F F F E AG FA A G F A GD G CB", " G A C G AA F B AA G G C B E G A F EF A E D C E F ", "G AG A A ED G A G C B AA A A GB F B G A BG E E AC ", "E C A E C CB E E E A GD DF A BA BC AC A DG GA A A ", "A C GB F E G F F A A GA D B EA DB GC A E E F D C D", " A EB AA A E F DE E B B C D A A E GD G A E AD B D ", "AC F D A BG DC AA EB G E C F AF C GB D A D E A F G", " D DF B G A BD AG DE A G AB AG C E F B FA D D A D ", "A BA C A A C E C EA E D A BG E G E B AD F C F E E ", "C AD A F F E D F E C D E A EB D E D GB AC DB B B B", " D BG FE F F G A D D C A D FB B A C A EE A FC G A ", "FE EA CB D F A C B AC E G A EG A B F A CA G E A A ", "E A E A AB F B C A BE A F E E AB F AA A ED A AC BG", " A A D E AA F AC FD A DG F BB GE DC A FA F E E FD ", "GA EG DA G DB D EC AC E B CA F DD D AA C D BE F A ", "A A D G FF BA B C A A CC DB G A D FB D CC A A A D ", "D C F G G E BB DG A E B E A B B A A F A AA A A A A", " E D F B A A AB E B AA A AC D A B D A F GA C E G A", " E G A B A D D A C A C FE F F F A E CA A A B A F A", " G F A B E E B D A C E AG E F A A A A G FC GE E A ", "C D E A E F F F D A D A D G GB AC G A AA DA A C B ", "EE C AG F D A E AE D D AE A EG B GF B DB B B E A D", "E CA E G E E C G E AB D FA D EA BF G F BB A AA GB ", "C D AC F E D A G B AB F D D FE EA D F B D E E E G ", "E D AF A F AF E B CA AA B B B G A A C F AA G D G A", "A D BA E A EE F GF F BA GE G AF B DD A A G C C E B", " C AC D BA A C BG F E DC B F B B A"};
    int k = 27;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"};
    if(result == expected) {
        cout << "Test Case 70: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 70: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test71() {
    vector<string> x = {"74 74 76 76 74 75 74 74 76 74 77 74 74 74 74 74 74", " 77 74 74 74 74 76 76 74 75 74 74 76 74 77 75 76 7", "4 74 76 74 74 75 77 74 76 76 76 74 74 74 75 76 74 ", "76 75 74 75 76 74 74 77 74 74 75 74 74 74 77 77 76", " 75 76 76 74 75 76 75 74 77 75 77 74 74 77 75 76 7", "7 75 76 76 74 74 75 74 74 76 76 76 74 75 77 77 77 ", "75 74 74 74 77 76 76 77 74 75 74 74 74 74 74 75 74", " 74 76 74 74 74 75 74 77 76 77 74 75 76 74 76 76 7", "4 75 77 77 74 77 76 74 77 74 74 75 74 74 76 74 74 ", "76 74 77 77 74 76 74 76 76 77 74 74 74 75 76 75 77", " 76 74 74 75 74 74 76 77 76 77 75 77 76 74 74 74 7", "5 76 75 76 74 74 74 74 76 75 74 75 74 75 77 76 74 ", "76 74 76 74 76 74 77 74 77 74 74 75 77 74 74 76 76", " 77 74 77 74 74 74 74 74 76 76 74 74 74 76 74 77 7", "6 74 76 75 75 74 74 77 75 74 74 74 74 76 75 74 76 ", "76 76 74 76 75 76 74 74 76 74 76 74 77 74 76 74 75", " 74 74 75 74 77 74 74 74 74 77 74 77 76 76 76 76 7", "4 76 76 76 74 74 76 77 76 76 76 75 75 77 75 74 76 ", "74 76 74 76 75 74 77 74 75 74 74 74 74 75 74 74 75", " 74 77 74 76 77 74 76 75 74 74 74 75 74 76 77 76 7", "4 74 74 74 74 76 76 74 75 76 76 74 74 74 76 74 76 ", "74 75 76 74 74 76 76 76 76 76 74 74 75 75 75 76 76", " 76 74 74 76 77 77 74 76 74 75 77 76 74 74 75 77 7", "5 77 74 74 76 77 75 74 75 77 75 74 74 74 74 76 74 ", "77 74 74 74 74 76 74 75 74 74 74 77 76 74 74 74 76", " 75 74 74 74 74 76 74 76 77 76 74 76 74 74 74 76 7", "4 76 76 74 77 74 74 76 76 74 74 74 74 76 76 77 74 ", "74 74 77 74 77 74 76 74 76 74 75 75 77 76 77 74 74", " 76 76 74 74 74 77 74 74 74 74 75 74 74 76 74 76 7", "4 76 74 74 76 76 74 74 75 74 74 77 74 74 74 74 74 ", "76 77 76 75 74 74 74 76 74 75 74 77 76 77 74 74 74", " 77 76 75 77 74 77 75 75 74 74 75 74 75 74 76 74 7", "6 77 76 74 74 76 75 76 76 74 74 76 74 75 76 76 76 ", "74 74 74 74 76 74 74 74 77 74 74 76 74 74 76 76 76", " 74 74 76 74 77 74 74 74 74 75 76 76 74 74 76 76 7", "4 75 76 77 76 74 76 74 75 76 76 74 74 77 76 76 74 ", "74 75 76 76 76 74 74 74 74 76 76 74 77 75 74 75 74", " 76 77 76 74 74 76 76 74 74 77 74 74 74 76 75 75 7", "4 74 75 76 77 75 76 74 77 77 74 76 77 76 76 75 74 ", "76 77 74 74 74 75 76 76 76 74 74 77 74 75 74 76 76", " 76 74 74 77 74 74 74 76 76 74 75 75 74 74 76 74 7", "6 74 76 74 76 74 77 77 74 74 76 74 76 75 76 74 74 ", "75 76 74 76 74 74 74 76 74 74 77 74 77 76 74 74 76", " 74 74 74 77 77 74 74 75 75 75 75 74 74 74 74 74 7", "6 75 76 74 75 76 77 76 74 74 74 74 74 76 74 74 74 ", "76 77 74 75 74 76 76 74 75 74 74 76 74 74 77 74 76", " 77 77 76 76 74 77 77 74 76 75 74 74 77 74 76 75 7", "4 77 74 76 74 76 74 76 74 74 74 76 76 74 76 74 76 ", "74 74 76 75 74 75 74 75 75 74 75 75 74 74"};
    vector<string> y = {"74 77 75 75 76 77 74 76 74 76 75 75 74 76 76 74 74", " 77 75 76 75 75 75 75 74 75 74 74 77 74 77 74 77 7", "7 77 74 74 76 76 77 74 75 75 76 74 76 75 75 76 74 ", "76 77 75 75 74 76 75 74 77 74 77 74 74 77 74 74 74", " 74 75 76 76 74 74 76 74 75 74 76 76 74 75 76 74 7", "6 75 76 76 74 75 76 74 76 74 76 77 76 76 74 76 75 ", "74 75 74 76 76 77 74 74 76 74 74 74 74 76 76 74 74", " 74 75 75 76 74 75 75 74 77 74 74 76 74 74 74 74 7", "7 77 76 76 74 74 74 75 76 74 74 76 76 74 74 76 76 ", "77 74 74 77 77 77 75 74 76 74 76 74 75 74 74 76 75", " 74 75 76 74 74 74 74 76 76 74 74 77 74 74 77 74 7", "4 74 76 74 76 74 74 76 74 77 74 74 75 76 74 75 76 ", "75 77 75 76 76 74 74 74 76 76 74 76 75 75 74 74 74", " 74 76 74 74 74 76 74 74 75 74 76 76 77 77 76 74 7", "6 76 74 74 75 74 74 74 74 74 74 75 77 74 77 76 74 ", "74 74 74 74 74 74 74 74 74 74 77 74 76 74 76 74 75", " 75 75 74 77 76 76 74 77 75 76 76 76 76 74 77 76 7", "5 76 74 77 75 74 74 77 76 74 77 76 74 77 76 74 74 ", "75 74 75 74 74 74 75 74 76 76 77 74 74 74 76 77 77", " 77 74 75 74 75 74 75 74 74 77 74 76 75 74 74 75 7", "6 75 77 74 77 74 74 74 74 76 74 75 74 75 76 75 75 ", "75 77 74 76 76 74 74 74 76 76 75 74 75 76 75 74 74", " 77 75 74 77 76 74 77 76 75 76 74 77 74 76 75 74 7", "4 75 74 74 74 76 75 76 77 75 74 76 74 77 74 77 77 ", "76 76 74 76 74 74 74 76 74 74 75 76 74 74 75 74 76", " 77 74 74 75 74 74 77 74 74 74 74 76 75 77 74 74 7", "6 74 76 75 76 74 74 74 77 76 76 74 74 76 75 74 76 ", "74 76 74 74 77 74 75 77 76 74 76 75 77 77 77 74 74", " 74 76 74 76 77 74 74 74 76 77 76 76 74 74 74 74 7", "6 74 74 74 75 76 76 77 74 76 76 74 76 77 74 74 74 ", "74 74 75 74 77 74 75 74 76 76 76 74 74 76 75 74 77", " 74 74 74 76 74 74 74 74 77 74 74 76 74 76 74 75 7", "6 74 74 76 77 74 74 76 77 76 77 75 76 76 77 74 76 ", "74 74 75 75 74 76 77 74 74 74 74 74 75 76 74 74 75", " 74 76 74 76 74 76 75 74 76 74 74 74 77 75 74 74 7", "4 75 74 75 74 76 77 75 74 77 76 74 74 74 74 74 74 ", "74 74 74 74 74 74 74 74 76 75 74 77 76 76 76 75 76", " 76 76 74 75 74 76 74 74 74 74 75 76 74 74 74 76 7", "4 74 75 74 76 77 76 74 74 74 77 74 75 74 76 77 74 ", "75 74 74 74 76 76 75 76 74 76 77 76 76 75 74 76 74", " 76 77 76 75 77 74 74 76 74 74 76 74 76 77 75 74 7", "4 74 74 74 76 77 74 74 74 74 74 74 77 76 75 74 76 ", "76 74 75 75 76 74 74 76 74 75 74 74 74 76 76 75 77", " 76 74 77 74 76 75 77 74 74 76 75 76 76 76 76 75 7", "4 74 76 75 76 74 74 77 74 77 75 74 76 74 74 76 74 ", "74 74 74 75 76 74 74 76 77 77 77 74 75 76 74 74 76", " 74 76 74 76 75 76 76 77 77 74 76 74 74 76 74 75 7", "6 74 74 74 74 77 75 76 74 74 74 74 74 74 74 74 76 ", "76 74 76 74 77 74 74 74 74 76 75 74 77 74"};
    vector<string> lengths = {"47 47 48 50 50 47 49 49 47 47 47 47 47 50 47 48 49", " 49 49 50 49 47 49 49 48 47 48 50 47 47 47 49 47 4", "9 48 48 49 49 48 47 47 47 47 47 50 48 47 50 49 47 ", "47 47 47 47 47 47 48 49 47 47 47 47 47 49 50 50 49", " 47 47 50 47 47 49 47 47 49 49 47 47 48 47 50 49 5", "0 47 49 47 49 48 48 47 47 48 49 49 48 49 48 49 47 ", "49 47 47 47 47 47 47 47 50 47 50 49 48 47 47 47 47", " 48 47 49 48 49 48 48 49 47 50 47 48 47 49 47 48 4", "9 47 48 47 47 47 47 50 47 49 47 49 49 48 49 49 50 ", "47 50 47 47 47 47 50 47 47 47 47 47 47 47 50 47 50", " 47 47 47 49 47 50 47 48 47 50 47 50 49 47 49 49 4", "9 47 49 50 47 47 50 47 50 50 50 47 49 47 49 47 49 ", "47 49 47 47 50 47 49 47 48 47 48 50 49 48 48 48 47", " 47 50 47 49 47 47 47 47 47 49 49 47 47 47 47 47 4", "9 47 49 48 47 50 47 47 47 47 49 49 48 47 49 47 50 ", "47 50 47 47 47 47 49 47 47 47 50 47 49 47 49 49 47", " 49 49 47 49 48 49 47 50 47 50 50 47 47 49 49 47 4", "9 47 49 50 49 47 47 47 48 49 49 49 49 47 47 47 47 ", "47 49 47 47 47 50 47 49 47 47 49 47 47 47 47 50 47", " 48 49 48 50 47 47 47 50 49 47 47 47 48 50 49 48 4", "7 49 47 49 50 47 48 49 49 47 47 47 50 49 50 47 47 ", "49 50 49 49 47 50 47 48 49 49 48 47 47 47 47 49 50", " 49 49 50 47 50 48 49 47 48 49 47 50 48 50 47 50 4", "7 47 47 47 49 50 47 47 47 49 50 48 47 48 49 47 50 ", "47 50 48 47 49 50 47 49 47 47 47 49 47 49 47 50 47", " 47 48 47 50 47 47 50 50 50 47 49 47 47 48 48 49 4", "9 50 49 47 49 47 47 47 49 49 47 47 49 47 47 47 47 ", "49 49 49 47 47 47 47 47 49 49 50 48 47 49 49 47 47", " 47 47 49 49 50 49 47 47 47 49 48 47 47 47 48 47 4", "7 49 47 49 47 50 49 47 47 47 50 49 47 49 47 47 47 ", "48 47 47 49 47 47 50 47 47 49 47 49 47 47 47 49 47", " 47 49 49 47 47 48 49 47 49 47 47 47 47 50 49 48 4", "9 48 47 47 47 47 49 50 49 49 48 47 49 47 50 47 47 ", "47 47 47 47 48 49 47 49 47 47 47 47 47 50 47 48 48", " 49 48 48 49 47 47 50 47 48 49 47 49 49 47 47 49 4", "8 47 47 49 49 47 47 47 47 50 48 47 49 47 48 47 47 ", "49 48 47 47 48 47 49 47 48 47 47 47 47 47 47 47 49", " 47 47 47 47 47 47 49 47 47 47 48 47 47 48 47 49 4", "9 47 47 50 47 49 49 47 50 47 49 47 50 49 47 47 49 ", "47 48 47 47 49 47 48 47 47 50 47 47 47 49 49 50 47", " 50 49 47 50 48 48 49 47 50 49 47 49 47 47 49 49 4", "7 47 49 50 47 47 47 49 47 47 47 47 47 48 47 49 47 ", "47 47 47 49 47 47 49 49 47 50 47 49 50 47 47 47 47", " 49 50 47 48 49 47 49 49 47 48 47 47 47 47 50 50 4", "7 49 47 49 48 47 47 49 47 47 49 47 47 47 47 49 48 ", "49 47 49 50 49 47 47 47 47 48 47 47 47 47 47 47 50", " 49 47 49 50 47 47 47 47 47 49 47 47 47 47 47 49 4", "9 48 49 47 47 50 49 49 50 47 47 49 48 49 50 49 47 ", "50 49 49 47 48 47 47 47 50 49 49 47 48 47"};
    vector<string> names = {"G FB B G BG D C G CA D E G A GB D AG G AB A EG A C", " E G B EA G E A BA C B BD F G E B G E D DD A G B A", " C G A BC AD B C D F F GE F AA D E BB EF B C AD A ", "E ED A A E B D D EA A B DF GD A A A C AC F FF G E ", "C A DA E D F G G E D BD A A E E F C A A A A C G GC", " E B E A AD E F G D G FG E A B E DB E A B F CE A B", " A C FG AC GG C D EA FF A E G D C FF G G A DG A DE", " D F C C F FC A CF C AD A G E B F D C C CD B D B D", " F E A B B C E A ED EG F B G A C A E B BA B G B A ", "A DF C D AA AF B AA CB F C A D F A EB G B DA FE G ", "F GA EF A A D C A B A A FC A FA B AA A G CF EE G D", "A G E G AD B E EF CG AE D BC FB DC GF AD AD BA AF ", "F E E A C A F F C B A E D A GC C E DG EB E EC CA C", " C C GA BA C A E A C E C C C D E AG E F B A A F A ", "G F D F A E D C A E DE C D F A D DB ED F G D E B A", " F E B FF A B A A A D A AA F DB G FE D E F E B GE ", "CG D AC E A GA A A C FA C E E G A C G D E AG GA B ", "BC G ED DB D C A A BF G A D F B B GC F G FD A A E ", "E GG GD G CF C G AG AE B GD EG B D AF F CA B A CF ", "CA G D A GA D B D AE D AE A AF C F D C F G B C F G", " CE ED A B F CD E A CA B AG DA B AC A G E G B G A ", "A B A F EA A A EA F G GG G B DB A A G GG E EA A F ", "A A A F FC G C F C F BA G A D C AE C EA E B F B B ", "G A D DG A D D F A B EB G EB CA B A A A A AA A F A", " EC E A D B F BA G D A E A E F DA A F AB A B A FD ", "F DG FF A A E A E GD CA G E E B EE G CE G A EF FF ", "E B E A D B A C D A DE BA F CA EG F B B A AA F E G", "A D A E E EA AB D GF A AF AB D A C GB B A G A GG A", "F A E G B A C A F CA F AD EE E A GA E G A A DG A D", " F B E A A G D B A AB E G F E D E F B E C G F G A ", "G D E E BG E A G D AC A AE AA GF C F A C A A B D B", " C BA C AF AF G ED B A AA E A G A F D A A AB E G A", " F C F B AE B A A B A GC G AE B B AE G GD C D BD D", " E E EA G F FA D DC B AD C G E E C D C EF A DF A C", " A BC G A B DC B D E G B C B A F A E B D D B AB CE", " B B F A D C B C D A D E D F B D A DD B A D F E E ", "F F D A AA GE F DA G F G B F A"};
    int k = 54;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "AB", "AB", "AC", "AD", "AD", "AD", "AF", "AF", "AG", "B", "B", "B", "B", "B", "B", "B", "B", "BA", "BA", "BF", "C", "C", "C"};
    if(result == expected) {
        cout << "Test Case 71: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 71: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test72() {
    vector<string> x = {"61 61 59 61 59 59 61 59 61 59 59 59 59 59 59 59 60", " 59 61 60 61 61 60 61 59 59 60 59 61 61 59 59 61 5", "9 60 59 60 59 59 61 59 61 61 61 61 61 60 61 61 61 ", "61 59 59 59 61 59 60 59 60 59 59 59 60 60 59 59 59", " 59 59 59 59 60 60 59 59 61 59 59 60 59 59 59 59 5", "9 59 59 59 59 59 60 59 61 59 59 59 59 59 59 59 59 ", "61 60 61 61 59 61 59 59 59 59 59 61 59 59 59 59 59", " 59 59 59 59 61 60 59 61 59 60 61 61 59 59 59 61 6", "1 61 61 59 60 59 60 61 59 61 59 59 59 60 61 59 59 ", "59 59 59 59 60 59 59 61 60 59 59 60 59 60 60 61 61", " 59 60 59 61 59 61 59 59 59 59 59 60 61 61 59 60 6", "1 60 60 60 59 59 60 60 59 59 59 59 59 59 61 59 61 ", "60 59 59 61 60 61 61 59 61 59 59 59 59 61 61 61 59", " 60 59 59 59 59 59 59 59 59 61 61 61 60 59 61 59 6", "0 59 60 61 59 59 61 59 59 59 60 60 59 59 60 59 60 ", "59 59 60 59 61 59 59 60 59 61 61 59 60 60 59 59 60", " 60 59 59 59 59 61 61 61 59 60 59 59 59 59 59 61 5", "9 61 59 59 59 59 61 61 60 59 60 60 59 59 61 60 61 ", "59 59 59 60 59 60 60 59 61 61 60 59 61 60 60 59 61", " 60 59 59 61 59 60 59 59 61 59 59 60 59 59 61 60 6", "1 60 59 59 61 61 59 60 59 61 59 59 61 59 61 60 59 ", "59 59 60 60 59 59 60 61 59 59 61 60 59 59 59 61 60", " 59 61 61 60 61 61 59 61 59 59 59 59 60 60 59 61 5", "9 61 61 60 59 59 61 61 59 61 61 60 59 60 61 60 59 ", "60 61 59 59 61 59 59 59 59 61 59 59 59 59 59 59 59", " 61 59 60 60 59 59 59 59 59 60 59 59 60 59 59 61 5", "9 60 59 61 59 60 60 59 59 59 59 59 61 59 61 60 59 ", "59 61 61 59 61 60 59 59 59 61 61 61 61 59 59 59 59", " 59 59 59 61 59 59 60 59 59 60 59 60 60 59 60 60 5", "9 60 59 59 61 59 61 59 59 60 59 59 59 59 61 60 59 ", "59 59 59 59 59 60 59 60 59 61 61 59 61 60 61 59 59", " 60 59 59 60 59 61 59 61 61 61 59 59 59 59 59 60 5", "9 59 61 61 59 60 59 61 59 60 61 59 59 59 59 61 59 ", "59 59 60 59 59 59 60 59 60 60 60 59 59 59 61 59 60", " 59 61 59 59 59 59 61 59 61 59 60 61 59 59 60 59 5", "9 61 59 60 61 59 59 60 60 60 59 60 59 59 59 60 59 ", "61 59 60 59 59 61 60 59 59 59 59 61 59 59 60 59 59", " 61 59 59 59 59 59 60 59 59 60 59 61 61 61 59 59 5", "9 60 59 59 61 60 59 59 60 61 60 59 59 59 59 59 59 ", "59 60 60 59 59 59 60 61 60 60 59 61 60 61 60 59 61", " 59 59 59 59 60 61 61 59 60 59 59 59 61 61 61 59 6", "0 59 60 61 59 59 59 61 61 59 59 61 61 61 59 59 60 ", "59 59 59 59 60 60 59 59 61 59 59 59 61 59 59 60 59", " 60 59 59 59 59 59 60 59 60 59 59 59 59 59 61 61 5", "9 59 61 61 61 59 61 61 59 61 59 60 60 61 60 59 60 ", "60 59 60 59 60 59 59 61 60 59 59 59 59 61 60 60 59", " 59 60 61 61 59 60 60 59 61 59 60 61 59 60 60 60 6", "1 60 59 59 60 59 60 61 60 60 60 61 61 61 61 59 61 ", "61 61 59 59 59 59 59 59 59 59 59 59 60 60 59 59 59", " 60 61 59 60 61 59 59 60 59 59 59 61"};
    vector<string> y = {"59 59 60 59 61 60 60 59 61 59 59 59 61 59 61 61 61", " 59 61 59 59 59 60 60 59 59 60 60 59 61 60 61 60 6", "0 59 59 61 59 61 61 59 60 60 61 59 61 59 59 59 61 ", "59 61 59 59 59 59 59 59 59 59 60 61 60 59 60 60 60", " 60 61 59 59 60 59 61 59 60 59 59 60 59 59 59 59 5", "9 59 60 59 59 59 61 59 59 59 61 60 59 59 59 59 61 ", "60 61 60 59 59 59 61 59 60 59 59 59 59 59 59 59 59", " 61 59 61 59 59 59 59 60 60 59 60 61 60 59 61 60 5", "9 60 61 59 59 60 60 59 59 59 61 59 61 59 59 59 59 ", "59 59 59 59 59 59 59 59 60 61 59 60 59 60 59 61 59", " 60 59 61 60 59 60 59 61 59 59 59 59 61 59 59 61 5", "9 60 59 59 59 60 61 59 59 61 59 59 59 59 59 59 59 ", "61 60 59 59 59 59 59 59 61 60 59 59 59 59 59 59 60", " 61 61 61 59 61 59 59 59 60 60 59 60 60 59 59 59 5", "9 59 59 59 59 59 59 60 61 59 59 61 60 60 59 61 61 ", "61 60 59 60 61 59 59 59 59 60 59 60 59 61 59 59 61", " 61 61 59 60 59 61 60 59 59 59 60 59 61 59 60 59 5", "9 61 60 59 59 60 59 61 59 59 59 61 61 59 59 59 59 ", "59 59 59 59 59 59 59 61 61 60 59 59 61 59 61 61 59", " 59 59 61 59 61 60 59 61 59 61 59 59 59 60 59 59 6", "0 59 59 60 59 59 60 59 59 60 60 59 59 61 59 61 61 ", "61 59 60 61 61 61 59 60 59 59 59 59 59 59 61 60 59", " 59 60 60 59 59 59 59 59 60 59 60 59 60 59 60 60 6", "0 59 59 59 59 60 59 59 59 60 59 59 61 59 60 61 60 ", "60 61 59 59 59 59 61 59 59 61 61 59 61 59 60 59 59", " 60 60 59 60 59 59 61 60 59 61 59 59 60 59 60 60 6", "0 59 60 60 59 59 59 59 60 60 59 59 59 60 59 61 61 ", "59 59 60 60 59 59 59 59 59 61 61 59 59 61 61 60 59", " 61 59 60 59 60 59 59 60 60 59 59 59 60 59 61 59 5", "9 60 61 59 60 59 59 61 59 59 59 59 59 59 61 59 61 ", "59 59 59 61 59 59 61 61 61 60 59 59 60 60 61 61 59", " 60 59 60 59 61 60 59 60 60 60 59 59 59 61 59 60 5", "9 61 61 61 61 61 61 60 59 61 59 61 59 59 61 59 60 ", "59 59 59 59 59 60 59 59 59 60 61 59 60 59 59 59 59", " 59 60 61 59 59 60 59 59 60 59 59 61 60 59 59 59 5", "9 60 60 60 60 61 59 59 60 61 59 61 59 61 61 59 59 ", "59 59 59 59 59 59 59 59 61 59 60 60 60 59 59 59 59", " 61 59 59 59 59 60 59 60 59 61 61 60 59 60 59 59 5", "9 60 61 61 59 60 61 59 61 59 59 59 60 61 61 61 59 ", "59 59 61 60 60 59 61 60 59 59 60 59 59 60 59 61 59", " 59 61 59 60 59 59 60 59 60 61 61 60 59 60 60 59 5", "9 61 61 59 59 59 59 59 61 59 61 59 60 60 59 61 61 ", "61 60 59 59 61 59 61 61 61 59 60 59 59 59 59 59 59", " 59 61 60 61 61 59 61 59 60 60 60 59 59 59 59 59 5", "9 61 59 59 59 60 59 61 60 59 59 60 59 61 61 59 59 ", "59 60 60 61 59 59 60 59 59 59 59 60 60 59 59 60 59", " 59 59 59 61 59 59 59 59 60 61 59 61 60 60 61 59 5", "9 61 59 59 59 59 61 59 59 59 61 59 60 59 61 59 59 ", "59 59 60 59 59 61 60 61 60 59 60 61 61 59 61 59 61", " 61 59 59 59 60 59 61 60 59 61 60 61"};
    vector<string> lengths = {"3 1 1 1 2 3 1 1 1 1 2 1 3 3 3 1 3 3 1 2 3 1 1 1 3 ", "3 1 3 2 3 2 3 3 1 3 1 1 1 3 1 1 1 2 3 3 1 1 3 1 2 ", "1 3 2 1 2 3 3 1 1 1 3 2 1 1 1 1 3 1 1 3 1 1 3 1 1 ", "1 2 2 1 2 2 3 1 3 3 1 1 1 3 1 1 2 1 1 3 1 3 1 1 1 ", "2 2 3 1 1 2 1 1 1 2 3 1 1 2 1 1 3 1 1 2 3 2 1 1 3 ", "1 1 1 1 2 1 1 2 3 1 1 1 1 1 1 1 1 1 1 3 2 3 1 3 1 ", "2 3 2 3 3 1 1 1 3 1 1 2 1 2 1 3 2 1 1 1 1 2 1 3 2 ", "3 2 1 3 2 2 2 3 3 1 1 1 2 3 1 1 1 2 1 1 1 1 1 1 1 ", "3 1 1 1 1 3 2 3 3 1 3 2 1 1 1 2 1 3 1 3 2 1 3 1 2 ", "3 3 1 1 2 1 1 1 2 1 1 1 3 1 3 1 2 1 1 1 1 1 1 1 1 ", "2 3 1 3 1 1 2 1 1 1 3 2 1 1 3 3 1 2 1 1 2 1 1 1 1 ", "3 2 1 3 1 1 3 1 3 2 1 1 1 1 3 3 1 3 1 2 1 1 1 2 3 ", "1 1 3 1 1 1 2 1 3 2 1 1 1 1 3 1 3 1 2 3 1 3 1 1 1 ", "2 2 1 2 2 3 2 3 3 1 3 1 1 1 3 1 3 1 1 1 3 1 1 1 1 ", "1 2 1 2 1 1 1 2 3 1 1 1 3 2 2 3 2 1 3 1 2 2 1 2 1 ", "1 2 3 3 3 2 2 3 1 3 2 1 2 1 1 1 2 1 1 1 2 3 3 1 2 ", "2 1 2 3 3 1 3 1 2 1 2 3 2 1 3 1 1 2 1 1 1 2 1 3 1 ", "2 3 1 1 1 1 1 1 2 1 3 1 1 2 2 1 3 3 1 1 1 2 1 2 1 ", "1 2 1 1 1 3 1 1 1 1 1 1 1 2 1 3 1 1 3 1 3 1 3 1 1 ", "1 2 1 3 1 1 2 2 1 3 2 1 3 2 2 1 1 3 3 2 2 3 1 1 3 ", "1 1 1 1 1 1 1 1 2 3 1 3 2 1 3 3 1 1 3 1 3 2 2 3 3 ", "2 3 2 1 1 3 1 2 1 3 3 2 1 1 2 1 1 1 1 2 2 3 1 1 3 ", "1 3 1 2 3 1 2 2 3 1 1 1 3 1 3 1 1 2 2 1 3 1 3 2 1 ", "2 3 1 1 1 1 1 1 2 3 1 2 3 1 1 3 1 3 1 1 2 2 2 3 3 ", "3 3 3 1 1 3 1 1 1 1 1 2 1 2 1 2 1 1 1 2 1 1 3 1 1 ", "2 1 3 3 1 1 1 1 1 1 1 1 1 3 2 1 1 1 1 1 3 1 2 1 2 ", "1 1 1 1 1 2 3 1 2 2 1 2 1 1 2 3 2 3 3 2 2 2 1 1 1 ", "1 3 2 1 2 1 3 2 3 2 1 2 2 1 1 1 1 1 2 3 1 1 1 1 1 ", "2 2 2 2 3 1 1 2 1 2 3 2 1 1 1 3 1 1 1 1 2 3 1 1 1 ", "1 1 2 1 3 1 3 1 1 1 1 1 1 3 1 3 2 2 2 1 1 1 1 1 1 ", "1 1 1 1 1 2 3 1 1 2 2 1 1 1 1 1 3 1 1 1 1 3 1 3 1 ", "2 1 1 2 3 1 1 1 3 1 1 1 2 1 1 1 1 1 1 3 3 1 2 1 3 ", "1 3 1 1 1 2 1 1 1 1 1 2 1 3 1 1 1 2 1 2 2 3 1 2 1 ", "3 1 1 2"};
    vector<string> names = {"DR K M I V W C W Q O U D S TM A V Y Y AE A JZ Y U ", "G OY U N L C U CH S KY C I O Y R G G KC X U C G A ", "AK CE A I A K X HA HU P Y CG M J M Y H J M M C B U", " I O B L LC PF C W EU G I IE N O U O X K FE U IK I", " ZE W UN N B S Y L I C GM U Q AE MO E VC B C GZ A ", "X B XW Q G EA E A T U B E G M MG S K U H I U U K P", "Q S F M S Q Q U E A Q A AX W N N M WK J A AQ X A G", " W XK IT H Q K C S EG F A H S M Q C A I M M QG C P", " MB E G EO OW IE EX TU U W A U W Q E G M B CP G T ", "IW W B P K H KA O O K V WK Q N SW I GA S KE I D L ", "N AK G I K I G W IY AI U Q A Q V G O K G I F I A N", " O I YD GU M AD GM I Q EO W G EY S A A A Y N I WI ", "WQ L E G VO A G C W EO SD Q A CK K GS G W L X U A ", "KB G O XQ KG K L F Y QY W UH BL Q G B O U GE IX C ", "A U A F I IW A M YH C G B E B KM Q A Q H A D M M K", "I G Y YC AQ C MG U S X H S QE P M AJ C I IY C V C ", "U K S I S F E Y BU G F Z J O SZ C I O G Y W YQ A A", " C A V V CK M Q X EA BG MC AY A NQ I A Q O A EI M ", "E SO E HQ N EU O OI U S Q WW N UC EH C JH ON T BO ", "GW K Q O C K S G W A U BY S E A Y U A U I K M SX N", " A U Q H D E K O K O G S OA X D M W X BE U A E N Q", " V C GD M U Y MO A C ZF W DR N A I Q A S U S II B ", "W M NM G BB N I V R A N A EG A A S D Z U X E S Y A", " Y H Q A W I XG V A DO C ES C IC M XM JQ Q Q E AO ", "H U K T V RX S U H N YI D W P LS M M A L C S E T Y", " J WY H Q OE T G G QA V N SY BJ HC AK W D A TT O A", "G UG L A E X H K C G MI A A J A QS M JC A YO A R E", " B C S A F M A JS IN D K K O I E O Y A A C Y KY O ", "K M IP Q I A W R M T E MH A M F N E Z Z W GZ M K G", " GE M Q C S Y E AB RS R WP W Y E M O Q O K AK AP K", " M I W WI F K V SH AC IP M UY MV A K NS X X Q V S ", "A A M F Q E G UW W Q U QF O L CY A A A F S S A OP ", "PU A A I K C E E L RI A H YQ C VA I Q C N O D AC Y", " X MB S A K V D M O K G G M O G X E Q I S MA M UU ", "V CS E AN W Z A Q G V N W Y S UA QN E N Y E A K K ", "R U Y Y S E Q UA MC C T Z S A GE RU NS Y G S M O R", "W WE Y C IA NQ C F CW S A G X AI Q Y Y Q Y Y"};
    int k = 100;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "AE", "AG", "AI", "AI", "AN", "AQ", "B", "BJ", "BL", "BO", "C", "C", "C", "CG", "D", "D", "E", "E", "E", "E", "E", "E", "E", "EO", "ES", "F", "F", "FE", "G", "G", "G", "G", "G", "GM", "H", "H", "H", "HA", "I", "I", "I", "I", "I", "II", "IX", "J", "JQ", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "KC", "KG", "KM", "L", "L", "M", "M", "M", "M", "M", "M", "M", "MO", "N", "N", "N", "N", "N", "NS", "NS"};
    if(result == expected) {
        cout << "Test Case 72: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 72: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test73() {
    vector<string> x = {"59 61 59 59 60 60 61 59 59 60 59 61 61 59 59 59 59", " 60 61 59 61 60 61 59 59 59 61 59 59 59 59 59 59 5", "9 59 59 61 60 59 61 59 60 59 59 59 59 59 61 59 61 ", "59 60 61 59 60 61 59 59 60 60 59 61 59 61 61 60 59", " 61 59 61 59 61 60 59 59 59 59 60 61 61 60 59 60 6", "1 59 61 60 60 61 60 60 59 61 60 61 61 59 59 59 60 ", "59 61 59 61 59 59 61 59 61 60 59 59 59 59 60 61 59", " 59 60 59 60 60 61 59 61 60 59 59 59 61 59 59 59 5", "9 60 60 61 59 59 59 61 60 59 60 59 60 61 59 60 60 ", "60 59 61 61 59 59 59 60 59 60 60 61 59 61 59 60 59", " 59 60 59 60 59 59 60 59 61 61 60 59 60 59 59 59 6", "1 60 60 61 60 60 59 59 60 59 59 59 61 59 59 59 59 ", "61 59 59 59 59 60 59 61 59 59 59 59 59 59 59 60 61", " 59 60 59 61 60 59 59 60 60 59 59 59 59 59 61 59 6", "0 59 59 61 61 60 59 59 60 59 60 59 61 61 59 61 60 ", "60 61 59 60 61 59 59 60 59 60 61 59 61 59 61 59 60", " 59 60 59 61 60 59 60 61 60 61 61 60 59 59 59 60 5", "9 60 60 59 59 60 59 60 59 61 60 61 59 59 60 59 59 ", "59 60 61 59 59 60 59 59 61 59 59 59 59 61 59 60 59", " 61 60 59 59 59 60 59 59 61 59 59 61 61 60 60 59 6", "0 59 61 60 59 59 61 59 59 59 61 60 59 59 61 59 59 ", "59 59 61 59 60 59 60 59 60 59 59 59 59 59 59 60 59", " 59 59 59 59 59 59 59 59 61 59 60 61 59 61 61 59 5", "9 59 60 61 61 59 59 61 61 59 59 59 59 61 59 59 60 ", "59 59 61 59 59 59 60 59 59 61 59 59 61 60 61 59 60", " 61 59 60 61 60 59 59 60 59 59 60 59 60 60 60 59 5", "9 60 60 59 59 59 61 60 61 61 60 61 59 61 59 59 61 ", "59 59 59 61 59 61 60 59 60 61 59 59 60 61 61 60 61", " 59 59 60 59 60 59 61 61 61 60 59 59 59 60 60 61 6", "1 61 60 59 59 60 59 59 59 60 61 60 60 59 59 59 59 ", "59 59 59 60 59 59 60 59 59 59 59 59 59 59 59 60 60", " 61 59 61 61 60 59 59 61 59 61 59 61 60 61 59 61 5", "9 61 59 59 61 60 59 59 61 60 59 59 59 61 59 60 60 ", "59 59 59 61 59 59 59 59 59 59 59 61 59 59 61 61 59", " 60 61 61 59 61 60 61 59 59 59 60 59 59 61 60 59 6", "0 59 61 59 59 59 61 59 59 59 60 61 59 59 59 59 59 ", "59 61 59 59 60 60 61 60 59 61 60 59 61 59 59 59 61", " 59 59 60 60 59 59 59 59 59 60 59 59 59 61 59 61 5", "9 59 61 59 60 59 60 60 60 60 59 59 59 59 60 61 59 ", "61 61 60 61 59 59 59 61 59 59 60 59 61 61 60 59 59", " 59 59 61 60 59 59 59 60 59 59 59 59 59 60 60 60 5", "9 59 61 61 59 59 59 59 61 60 60 59 59 59 60 60 59 ", "59 59 59 59 59 59 59 61 59 60 61 60 59 59 59 60 61", " 61 61 59 60 61 61 60 59 61 59 60 59 59 60 60 59 5", "9 59 60 59 59 60 59 59 59 61 59 59 59 59 59 60 59 ", "60 60 59 60 59 59 59 59 60 59 59 60 61 59 60 59 59", " 59 59 59 61 60 60 60 60 59 59 59 60 60 59 59 60 5", "9 59 59 59 60 59 61 60 60 61 60 59 60 59 60 60 59 ", "59 61 59 61 61 59 59 61 59 59 59 59 59 60 60 61"};
    vector<string> y = {"59 60 60 59 59 59 59 59 61 60 59 60 59 61 59 61 60", " 59 59 59 60 60 59 61 59 61 61 59 59 61 59 61 61 6", "0 59 60 60 59 60 61 59 59 59 61 59 59 59 59 60 59 ", "59 61 60 61 61 59 60 59 60 59 60 59 60 60 60 59 61", " 61 60 59 60 59 61 59 59 59 59 59 59 59 61 59 59 6", "1 60 61 60 59 59 59 61 60 60 59 59 60 59 59 61 59 ", "59 61 60 60 61 61 59 59 59 59 61 59 59 59 60 59 59", " 61 59 61 60 59 59 60 61 59 61 59 59 59 61 59 59 5", "9 59 60 61 59 60 60 59 60 61 60 59 61 60 61 59 60 ", "61 61 60 59 59 61 59 59 59 61 60 59 60 61 59 59 60", " 60 61 59 60 59 59 59 59 59 59 61 59 59 59 59 59 5", "9 61 60 59 60 59 59 59 61 59 61 59 60 61 59 59 59 ", "60 59 59 61 59 59 59 61 59 59 59 61 60 61 59 59 61", " 59 59 59 59 59 60 59 60 61 61 61 59 59 60 60 61 6", "0 60 59 61 61 60 59 59 61 59 59 59 60 60 60 59 59 ", "59 61 59 61 59 61 59 61 59 59 59 59 61 61 59 59 61", " 59 60 59 59 61 59 61 60 59 60 59 59 61 59 60 59 6", "1 59 59 59 60 61 60 59 59 61 60 59 60 59 59 59 59 ", "60 59 59 61 60 60 60 59 59 61 59 61 60 59 60 60 59", " 61 59 60 59 59 61 59 61 60 60 61 59 59 60 59 59 5", "9 59 61 59 59 61 60 59 59 59 59 59 59 59 59 61 59 ", "59 59 59 59 61 59 60 59 59 59 61 60 60 60 61 59 59", " 60 59 59 59 59 59 59 59 59 59 60 60 61 60 59 60 5", "9 60 61 59 59 61 59 61 61 59 59 60 61 59 59 59 59 ", "59 59 60 61 61 59 59 59 59 61 59 59 60 61 59 59 61", " 59 59 59 59 60 59 60 59 60 60 59 59 60 60 59 59 5", "9 60 61 59 60 59 59 59 61 59 60 59 59 61 60 59 59 ", "61 59 59 61 60 59 61 60 60 59 59 59 59 59 59 60 60", " 59 59 59 59 59 61 60 60 60 59 61 60 59 61 59 59 6", "0 59 61 59 61 59 59 59 59 60 59 59 59 61 61 59 59 ", "59 61 61 61 61 61 61 59 61 59 59 59 59 60 60 60 60", " 59 59 60 60 59 59 61 59 59 59 59 59 59 59 59 59 6", "1 59 59 61 59 59 59 60 59 61 59 61 59 60 60 61 59 ", "59 59 59 59 61 59 59 61 60 60 61 59 61 59 61 60 59", " 60 60 59 59 60 59 61 61 59 59 59 60 60 59 59 59 6", "1 61 59 61 59 59 59 59 59 61 60 59 60 61 61 59 60 ", "61 59 59 59 59 61 59 60 61 59 60 59 59 59 60 59 59", " 59 61 59 59 59 59 59 60 59 59 59 59 61 61 60 61 5", "9 61 59 60 59 60 60 60 59 59 59 60 59 59 59 60 61 ", "59 59 59 60 60 59 59 61 59 59 59 60 60 59 59 60 60", " 61 61 59 59 61 59 59 59 59 59 59 59 60 59 59 59 6", "0 61 60 59 61 59 61 60 61 59 60 61 60 59 59 59 59 ", "59 61 59 59 59 59 59 59 60 59 61 60 61 59 59 59 60", " 60 61 61 61 60 61 60 60 61 59 61 60 61 59 59 59 5", "9 59 60 61 59 61 59 59 59 60 60 59 59 59 59 60 61 ", "60 59 61 60 59 59 60 59 60 60 60 59 59 59 60 59 60", " 59 61 59 59 61 61 61 59 59 61 59 61 59 61 60 60 6", "0 59 59 59 61 59 59 59 59 60 59 61 61 60 59 59 61 ", "59 61 59 60 59 59 61 61 60 61 59 59 59 59 61 59"};
    vector<string> lengths = {"2 1 1 3 1 1 1 2 1 2 1 2 1 3 2 1 1 1 3 2 1 1 1 3 1 ", "1 2 2 3 2 1 3 2 1 3 1 1 1 1 3 1 1 2 3 2 1 1 2 2 2 ", "2 3 2 2 2 1 2 1 1 2 3 3 2 1 2 2 3 1 3 3 1 2 1 1 3 ", "1 2 1 1 1 1 1 3 3 1 1 2 3 3 1 2 1 1 2 1 3 1 1 1 2 ", "2 1 1 1 3 1 1 1 1 1 2 1 2 3 3 1 2 3 2 1 3 1 1 1 1 ", "1 1 3 2 3 1 1 3 1 1 3 2 2 1 1 1 2 3 1 1 2 1 1 3 2 ", "3 1 1 1 1 1 1 1 2 1 2 2 2 1 3 1 3 1 2 2 3 1 1 1 1 ", "1 3 1 1 1 3 2 3 3 2 1 1 1 1 1 1 1 2 2 1 2 1 2 1 1 ", "3 3 2 1 2 1 1 1 1 2 1 1 1 1 1 2 2 1 2 3 3 2 1 1 2 ", "2 3 2 3 2 1 1 1 2 3 3 2 1 1 3 1 2 3 2 1 1 1 1 3 1 ", "3 1 3 3 1 1 1 1 1 2 1 1 1 3 2 1 1 2 3 2 1 3 1 1 2 ", "1 3 1 2 1 2 1 1 2 1 3 1 1 1 1 1 1 3 1 1 2 1 2 3 1 ", "1 1 1 1 1 3 1 1 1 3 1 1 1 1 1 1 1 1 1 1 2 1 1 3 1 ", "2 2 1 1 1 1 3 1 1 1 1 3 1 1 1 2 2 3 1 1 2 1 1 1 1 ", "1 1 1 1 2 3 1 1 1 3 1 1 1 2 2 3 3 1 3 2 2 2 1 3 1 ", "2 3 1 2 1 2 2 2 1 1 1 2 3 1 3 3 3 1 1 2 3 1 3 1 2 ", "3 3 1 1 1 2 1 1 1 1 1 1 2 1 2 3 1 2 3 2 1 3 1 1 3 ", "3 1 1 1 2 2 2 1 1 2 3 3 1 2 3 1 1 2 1 2 2 2 3 1 1 ", "2 2 3 1 1 3 1 2 2 2 1 1 1 3 1 1 3 3 3 1 1 1 3 1 1 ", "3 1 2 3 1 1 1 3 2 2 3 1 1 3 1 3 1 3 2 1 1 3 1 3 3 ", "2 3 3 2 1 2 3 3 3 1 3 1 3 1 2 1 1 1 2 1 1 3 1 1 1 ", "1 1 1 1 3 2 1 1 3 1 1 1 1 3 3 1 3 2 1 2 1 1 1 1 1 ", "1 2 1 1 3 1 1 2 1 2 3 3 2 3 3 1 1 2 1 1 3 1 2 1 1 ", "3 1 1 3 3 3 1 1 1 3 1 2 1 3 1 3 1 1 1 2 2 2 1 3 1 ", "2 2 3 1 3 3 3 1 3 2 1 2 2 3 3 1 3 1 3 2 3 3 1 2 3 ", "1 2 1 3 2 3 1 2 2 1 3 1 1 2 2 1 3 2 2 2 1 1 1 3 1 ", "1 2 1 3 2 2 2 1 1 1 1 1 1 1 2 3 2 2 1 1 2 2 1 1 2 ", "2 1 1 2 1 1 1 1 2 1 2 1 1 1 2 1 3 1 3 1 3 1 1 2 3 ", "1 3 2 1 1 3 1 3 2 1 3 2 2 2 1 2 1 3 1 2 1 1 1 3 1 ", "3 1 1 1 1 1 3 1 1 1 2 1 1 3 3 1 2 2 1 2 2 1 2 2 2 ", "1 2 2 1 1 2 2 1 1 1 1 3 3 2 1 3 3 2 3 1 2 2 1 2 1 ", "3 1 3 2 1 2 1 1 3 1 1 1 2 1 1 1 3 1 1 1 3 1 1 3 3 ", "1 1 2 2 2 3 3 3 3 2 2 3 1 2 3 1"};
    vector<string> names = {"O Y WA G I D W IH O UC M A VA N ID K M Q G I R U G", " S G CA Y Y N Q GN M S Q R Q WI MA K MN U K UR G K", " W W A A O A SH O J S U O Y T I K BO U A W Y S KA ", "K YU K K K L U AQ O E Q A A NX K Z R UW A M O A A ", "X Y J X W EG BV R RD KX I MM S Q K V W O U A H AM ", "N C A YS A D QC B M QK A LA P Z AA QY O M W W T I ", "VA K PK KK Q Z OO Q Z GP PW A I G E P O M I GX A P", " XI AH S J IL S J U NM AM A V I R ES M TG TJ Z G E", " B AY AB QD M CX AX W C H A A YT D X K G XI Y N BC", " V E Z C UU L C H S A W S R IO Y E ZO M W L S M A ", "M YV OA A I P A L A IE T I F U J W M S I C G K M U", " IQ S M EO AG U MK L IT K Y IU B M EV G A A I I C ", "M I M X E F M Q S M W A SQ P NA OC ER I G U M C E ", "N B X U Y A O QS D O PA N N KA K U VW Q Y U QQ A W", " P M H CW I QQ M F X Q QA Q Q W O W Z O Y K CB C N", " B KI P O IM IA V AS P AQ LA A X B KI Q E QI UK MB", " HA J A S I L YM N MO Y IU R V B W YJ A SH S A A P", " KT A U E F BQ C O U AB WY I S UX U RJ U A X K G V", " NQ Y C U AX V I C C Q A Q MW N Y T QW Q IU T HQ A", " S G Q I T O Y O YI G A N Q S TG W O RQ K AG W YM ", "A Y N Y H G Y K U N W N S E Z DJ UJ EQ ON EQ QS X ", "J A H VU I O T B C CE Q CO E WJ M SM AE I R OE C S", " V NK O E CU E CB YC A X D A SZ AS M AE Y NA O F Y", " W E U S C U UV Y O I Y A O K S K I KL I GA P L A ", "ZS EG G Q QW P CU LX K WW WO I J BC L T AA AA B M ", "IE M G NQ QW S Q EW G C S K O YQ U F U A S G G O C", " WW R A A HM A MG O G L OY QJ VA A A QY US F Y NS ", "O E N SE K YA E N R Q EA C M I A X NN O U QK ME E ", "S S I CF N U E Y A G U A OA DC YM A Y O X K Z A K ", "C E A E CI AM A K K T VA C N A QL W WD E A M OI G ", "U V K SW A E M AU M CH K A VE G F O W YO AC IW CZ ", "O D Q U UY I N SC B JB Z O E E Q I SB M U ZU GG OT", " H QU IO A Q M O W F W G AS N M ZM A K Q D I M R A", " O K YA R I OG G O KN E A A F U S A C G S SG UA N ", "N EQ NI WO S Y Z K P A C A M O C M O Y O UB NO X D", " GI A M P Y E A K G A AQ K E O H AK JY ML QB Y M C", " E E SK F N CA Z S KN P A Q GK X E YM L C U H Q"};
    int k = 136;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "AK", "AM", "AQ", "B", "B", "B", "B", "B", "BC", "BC", "BQ", "BV", "C", "C", "C", "C", "C", "CA", "CW", "E", "E", "E", "E", "E", "EG", "EQ", "ES", "F", "F", "F", "G", "G", "G", "G", "G", "GG", "GN", "GP", "GX", "H", "H", "H", "I", "I", "I", "I", "I", "I", "I", "I", "IE", "J", "K", "K", "K", "K", "K", "KI", "KI", "L", "LA", "M", "M", "M", "M", "M", "ME", "N", "NK", "NQ", "NX", "O", "O", "O", "O", "O", "OG", "OT", "P", "Q", "Q", "Q", "Q", "QI", "QQ", "QU", "QW", "R", "R", "R", "RJ", "S", "S", "S", "S", "S", "S", "T", "TJ", "U", "U", "U", "U", "U", "U", "U", "UB", "UJ", "US", "V", "VA", "W", "W", "W", "W", "W", "W"};
    if(result == expected) {
        cout << "Test Case 73: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 73: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test74() {
    vector<string> x = {"60 59 59 59 60 59 59 59 59 60 61 59 59 61 59 60 59", " 59 59 59 59 59 59 61 59 59 61 59 61 59 59 59 59 6", "1 59 59 59 59 59 59 60 60 59 61 59 60 59 59 59 59 ", "61 59 60 59 59 60 59 60 60 61 60 59 59 59 60 60 61", " 59 60 61 59 59 59 59 61 59 61 59 59 59 60 61 61 6", "1 60 61 61 61 60 60 60 59 61 60 59 59 61 61 59 59 ", "59 59 61 60 59 61 61 59 60 59 59 59 61 59 60 60 59", " 61 60 60 59 59 60 60 60 61 59 59 61 59 59 60 59 6", "0 60 61 60 61 61 59 60 61 59 61 61 59 61 59 61 59 ", "59 59 59 59 59 59 59 59 59 59 59 59 60 60 59 61 59", " 59 59 59 59 60 60 61 59 60 61 61 59 59 59 59 59 6", "0 60 59 61 59 59 59 59 61 59 59 59 59 59 59 61 60 ", "61 59 59 59 59 60 59 59 61 59 61 61 60 61 61 59 59", " 59 59 60 59 59 61 61 61 59 59 59 61 61 59 59 59 5", "9 61 59 60 59 61 60 59 61 60 60 59 60 59 59 60 59 ", "60 61 59 60 59 59 61 61 59 61 59 61 60 59 59 60 61", " 59 60 59 61 59 61 59 59 59 59 61 59 60 60 61 60 5", "9 59 59 59 61 59 59 59 60 59 59 59 60 59 60 59 61 ", "59 60 59 59 59 59 61 59 59 59 59 59 60 60 61 61 59", " 61 61 61 59 60 59 60 61 61 60 59 59 59 59 61 59 5", "9 59 59 59 59 59 60 61 61 61 61 59 59 59 59 61 61 ", "59 59 60 61 59 60 59 59 60 59 61 61 60 59 59 59 61", " 60 61 59 59 59 59 60 60 60 61 61 59 59 59 59 59 6", "0 61 59 60 59 59 59 59 61 61 60 59 61 61 60 61 60 ", "59 59 59 59 59 60 59 59 59 60 59 60 59 60 60 61 59", " 59 59 61 59 59 59 59 61 61 61 59 60 59 59 60 59 6", "0 61 59 59 59 61 61 60 59 61 59 59 61 59 60 59 61 ", "59 59 59 60 59 60 59 59 61 60 59 61 60 61 60 59 59", " 59 59 59 59 61 61 59 59 60 60 61 59 59 59 59 59 6", "1 59 59 61 59 59 60 59 61 59 59 59 59 61 59 60 60 ", "61 59 59 59 59 61 59 59 59 59 60 61 61 59 59 59 59", " 59 60 59 59 61 61 61 59 60 59 61 59 59 59 59 60 5", "9 59 59 60 60 59 59 60 59 59 60 59 59 59 59 60 61 ", "59 60 59 59 60 60 61 59 59 60 59 59 60 59 61 59 59", " 61 61 60 60 61 59 61 60 59 60 60 61 59 61 59 59 5", "9 61 59 59 61 60 61 61 59 59 61 60 60 59 59 59 59 ", "61 59 61 60 60 59 61 61 59 61 61 60 60 59 61 59 59", " 59 60 61 59 60 59 61 61 61 61 59 61 59 59 59 60 6", "1 59 59 60 61 59 60 59 60 59 60 59 61 61 59 59 59 ", "60 61 59 61 59 60 59 61 60 59 61 59 61 59 61 59 59", " 59 61 59 61 61 59 61 60 59 59 61 59 59 61 60 59 6", "1 61 59 60 59 59 61 59 59 60 59 59 59 61 60 60 61 ", "61 59 60 59 60 60 59 60 59 59 59 59 59 59 59 59 61", " 59 59 60 59 60 59 59 59 59 59 61 61 61 59 59 59 5", "9 59 61 61 59 59 59 61 59 61 60 59 61 59 59 59 59 ", "59 59 59 60 59 59 61 59 59 59 59 61 61 59 59 59 59", " 59 60 59 59 61 60 61 60 59 60 59 59 59 61 60 60 5", "9 60 61 60 59 59 61 60 60 61 60 60 61 61 59 61 61 ", "61 60 60"};
    vector<string> y = {"59 59 60 59 59 59 60 59 60 60 60 59 61 59 60 60 59", " 59 61 61 59 59 60 59 59 59 61 59 59 59 60 61 60 6", "1 61 59 60 61 59 59 60 59 61 59 61 59 61 59 61 59 ", "59 60 61 59 59 61 61 59 59 59 59 60 61 59 59 60 61", " 60 59 59 61 59 59 59 59 59 59 59 59 60 59 61 59 5", "9 59 60 61 61 60 59 60 59 61 59 59 60 59 59 59 59 ", "60 61 61 59 60 59 59 59 59 59 59 60 59 59 61 61 61", " 59 59 61 59 59 59 59 61 60 61 60 59 59 61 60 59 6", "1 61 60 60 61 59 61 61 61 60 61 60 60 59 59 59 60 ", "59 60 59 59 60 59 59 59 59 59 59 59 60 61 59 59 61", " 59 59 60 59 61 59 60 59 61 59 59 59 59 61 61 59 5", "9 61 59 59 61 59 60 61 59 59 59 59 60 59 59 61 59 ", "59 61 61 60 59 61 59 61 60 59 59 60 60 59 59 60 61", " 60 61 59 60 61 59 59 59 59 60 59 60 59 61 60 59 6", "0 59 61 61 59 59 59 59 59 59 59 60 60 61 59 59 60 ", "59 59 59 59 60 59 59 59 59 59 59 59 61 59 60 61 61", " 59 59 60 59 61 59 59 61 59 59 61 60 59 61 59 59 5", "9 59 61 60 60 59 60 59 60 61 60 59 60 61 59 59 60 ", "61 59 59 59 59 59 61 59 59 59 59 60 60 60 60 61 59", " 59 61 60 59 59 59 59 61 59 59 59 60 61 59 59 59 5", "9 59 59 59 59 59 60 59 59 60 60 61 59 59 59 59 59 ", "59 59 59 60 61 60 59 60 59 59 61 59 59 59 59 59 61", " 59 59 60 61 61 60 59 59 59 59 60 61 59 59 60 59 6", "1 61 59 59 59 60 59 59 59 60 61 59 59 59 59 59 59 ", "59 61 59 59 61 59 59 59 59 59 59 61 60 59 61 60 59", " 60 59 60 59 59 59 61 59 61 59 61 60 59 61 59 59 5", "9 60 61 59 59 59 61 59 60 61 59 59 60 60 59 59 61 ", "59 59 59 59 61 59 59 59 59 61 59 59 59 60 59 61 59", " 60 59 59 59 60 61 59 59 61 59 61 59 60 59 60 59 5", "9 60 59 59 59 59 60 59 61 60 61 59 60 59 59 60 61 ", "59 59 60 59 59 60 59 59 61 59 60 61 59 59 59 59 61", " 60 60 59 59 59 61 59 59 60 61 59 59 59 60 61 59 6", "1 59 61 61 59 59 60 59 59 59 59 59 59 59 60 60 60 ", "59 60 59 60 59 60 61 59 61 60 60 59 59 59 59 59 59", " 61 59 61 59 60 60 59 59 59 60 59 61 60 59 60 59 5", "9 59 59 60 59 59 60 59 60 59 60 60 59 59 59 59 59 ", "60 61 59 60 60 60 60 59 59 60 61 59 59 60 61 59 59", " 61 60 59 59 59 60 60 59 60 59 59 60 60 59 59 59 5", "9 60 59 59 61 59 59 59 59 61 61 61 60 59 60 60 60 ", "60 59 59 59 61 59 59 60 60 59 59 59 59 60 59 59 61", " 60 60 59 59 61 60 59 59 59 59 61 61 59 59 61 59 6", "0 61 61 61 60 61 61 60 59 60 61 59 61 59 61 59 59 ", "59 59 61 59 59 59 59 61 59 60 61 59 61 59 59 59 59", " 59 59 59 60 61 61 59 59 59 59 61 59 59 59 59 60 5", "9 59 59 59 61 61 60 59 59 60 59 61 61 59 59 60 61 ", "60 60 60 59 61 59 60 59 59 59 59 59 59 61 59 59 59", " 59 59 60 61 59 60 59 59 59 59 60 61 60 61 59 59 6", "0 60 61 61 60 60 59 59 59 59 61 60 59 59 59 59 60 ", "59 59 61"};
    vector<string> lengths = {"3 3 2 1 3 1 1 2 1 3 2 1 3 3 1 1 2 3 1 1 1 1 1 3 1 ", "1 3 2 3 2 3 1 1 3 1 1 2 1 1 1 2 1 3 1 1 1 2 3 3 1 ", "3 1 2 1 2 1 1 1 2 1 2 3 1 1 1 1 3 1 2 1 1 3 1 1 1 ", "1 3 2 2 1 2 1 2 3 1 1 2 1 1 2 3 1 1 2 1 1 1 1 1 1 ", "2 1 3 2 1 2 1 1 2 1 1 3 3 2 2 1 1 1 1 1 2 1 1 1 1 ", "2 1 2 3 2 1 1 2 1 1 1 1 1 1 3 1 2 3 1 1 1 3 1 1 1 ", "1 1 1 1 1 3 3 3 1 1 1 1 1 2 1 3 1 3 2 3 1 1 3 1 2 ", "1 3 2 3 2 3 2 2 3 1 2 1 1 2 1 1 3 2 1 1 1 1 3 1 2 ", "1 1 1 3 1 3 2 3 3 2 1 1 1 1 1 1 3 3 1 3 1 2 1 1 3 ", "1 1 1 3 3 3 3 1 1 1 2 2 2 2 2 1 3 3 1 1 1 1 2 1 1 ", "2 2 1 1 1 3 2 1 1 1 3 2 3 3 1 1 1 1 1 1 2 1 3 2 1 ", "1 2 3 1 1 1 2 1 2 1 2 1 1 2 1 2 1 2 1 1 2 1 1 3 1 ", "1 1 1 2 3 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 ", "1 2 3 2 1 1 3 2 2 3 2 1 1 1 2 1 2 1 2 1 1 1 1 1 1 ", "1 1 1 1 1 3 1 1 3 1 1 3 1 2 1 2 3 1 1 2 1 2 1 1 2 ", "2 1 3 1 3 3 1 2 1 2 3 1 1 1 1 2 3 1 1 1 2 1 1 2 1 ", "1 3 3 1 1 1 1 3 1 2 2 1 1 1 1 1 3 1 1 1 1 1 2 1 2 ", "1 1 3 3 2 1 3 2 3 1 2 1 1 3 1 1 2 2 3 1 1 1 1 1 1 ", "1 1 1 1 3 2 1 3 1 1 1 1 3 1 1 3 2 3 1 2 1 2 1 2 2 ", "3 1 2 1 3 1 1 1 2 1 1 2 2 1 3 1 1 3 1 2 1 1 3 2 1 ", "3 2 1 1 1 2 3 3 1 2 1 1 1 2 1 2 1 3 1 1 1 1 3 1 3 ", "1 2 1 1 2 3 2 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 3 2 1 3 1 3 2 1 1 1 2 2 2 1 1 2 2 1 3 3 3 1 1 3 ", "1 1 1 2 2 1 3 3 1 1 1 1 3 1 2 1 1 2 2 1 2 1 1 1 1 ", "3 3 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 3 1 1 3 1 3 1 ", "2 1 3 1 1 1 3 1 1 1 3 3 1 1 1 1 2 2 2 2 2 2 2 1 3 ", "1 1 1 1 3 1 1 3 3 1 2 1 1 1 3 3 1 1 1 1 2 1 2 1 1 ", "1 2 1 1 1 1 3 1 2 3 1 3 3 2 3 1 1 2 1 2 1 1 2 3 2 ", "1 1 3 2 1 3 3 1 2 3 1 1 3 3 2 1 1 3 1 1 2 3 1 3 1 ", "2 3 3 2 3 1 1 2 1 1 1 2 1 1 1 2 1 1 3 3 2 1 1 1 1 ", "3 2 1 1 2 1 1 3 1 3 1 2 1 1 2 1 2 3 3 2 2 1 1 1 1 ", "2 1 1 2 2 1 1 1 1 2 3 2 2 3 3 1 2 3 2 2 1 1 3 2 1 ", "2 3 2"};
    vector<string> names = {"KQ U C IZ AN Z WA E M A IP UI G U S SD O W M S I Y", " NU DO A I Q N S E P C GR K XA G S V E EF M V L S ", "AY BU S J O L A U A UC A QC S O W EV E QK WO A AM ", "BA V DV B A NL G M HO O AV QO N K UO CU G Q O A W ", "L V Y Y B Q Q Y U A Y C J C EQ Q H OO WE MV W I U ", "OG N JG Y G C L S F H G G A E P WG K K Z GY J E WG", " K N E N AM S ME Y A V HU O FC A I A M MA K UR I S", "A U AS Y A A B S I K S U O W X WY K N GT W K ZU KQ", " C H U M FO C U R Q R AA A Y Y NH U C O C QK W Q G", " NG G W V AY A YU N M Y N G A A X AE JI A AE J A M", "M W KS W I A O A WK C CX K Q XO E KB Q OE OA J K Q", " I J IG V Y Q S K S N F PY SM K L Z I KA N AM U Q ", "N K WM L J AO C Y B M W E Y A QM W Y Q W C N Y YQ ", "Q M AB K Q M T B OQ K U QA E A T V QA Q A AU A W J", " W A ML Z P G O AK RE M JS RA RZ E SY IP E Z E N A", "O E D I U C H L QU F C HF SO YA K N A A C W Q S KM", " CG Q G H GA V B G M W I I M FO S G Z AM A I SM U ", "E Y YQ AL IS CG L I N Y SA S GN A K A Z G R I D UM", " K Y K WE UM UQ H U GJ WS C A K T GV K B G Y C WG ", "T H C C K E JC Y G W PU M Y Q A OB N S A C D O PM ", "F O W P Y R V W R Y A UY Y O A FN YO AE A Y H A WY", " YR O V J N A E W Z S NP M T I I IQ U UO Y R EI UW", " FG N A N Q L ZA E Z G AW Z U C A NQ O I Z Y Q O M", " S GK A U M W OY U A A D WK K IS A AQ U OU ON R A ", "N U RP C KS MK S EM C CJ MU YS H RA R A F AM HE AQ", " QC K KK K SH GA G K UJ J ML U BI Y I IW C S M M I", " W VR RA A K E J OK IX H E J YC L MN S Q H K W I U", " K T W QC KS A O K A A C N C W Y Q UA N M U W N S ", "E M I U RB Y Y QP G QQ K W V O S C WN K M A A E Q ", "K O T W E N Y W N VG J H A U E KE K C O C S W G U ", "B J R K O G N A E MO C K C J U N A SA WQ A O W D U", " P D Q Q C Y M D J C W LB OO G N UZ NN O C A LH I ", "ZI U Q W I CA Y U GN Q SW Y UZ G QC O A S D IQ EO ", "O I C C S U A UY N VE K QB AZ G M TU K QL CJ K A Y", "A W Q Y E E Z TW I C M CP UM G H Z S K I H G D T A", "O P S LA M A WT MK J M Q A K I S I IW U U I AG Q R", "N U G SR V ZM C"};
    int k = 182;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "C", "C", "C", "C", "CA", "D", "D", "E", "E", "G", "G", "G", "I", "I", "I", "I", "J", "J", "J", "K", "K", "K", "K", "K", "KK", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "AO", "AV", "B", "B", "B", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "D", "E", "E", "E", "E", "E", "EF", "F", "F", "FN", "G", "G", "GN", "H", "H", "H", "H", "H", "HO", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "IW", "IZ", "J", "JS", "K", "K", "K", "K", "K", "KS", "KS", "L", "L", "L", "M", "MN", "N", "N", "N", "N", "N", "N", "N", "O", "O", "O", "O", "O", "OG", "P", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "QB", "QC", "QC", "QL", "QU", "R", "R", "RB", "RZ", "S", "S", "S", "S", "S", "S", "SA", "T", "TW", "U", "U", "U", "U", "UC", "UI", "UW", "UY", "V", "W", "W", "W", "W", "W", "WE", "WK", "WS", "Y", "Y", "Y", "Y", "Y", "YC", "YS", "Z", "Z"};
    if(result == expected) {
        cout << "Test Case 74: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 74: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test75() {
    vector<string> x = {"61 59 59 59 60 61 59 59 61 59 59 59 59 60 61 59 59", " 61 59 60 59 59 60 59 59 59 59 60 59 61 59 59 59 5", "9 59 60 61 60 60 59 59 61 60 60 60 59 59 60 60 59 ", "60 59 59 61 59 59 61 59 59 59 59 61 59 59 59 59 59", " 59 59 60 59 59 60 60 61 60 59 61 59 59 61 59 61 5", "9 61 59 59 59 61 59 60 59 61 59 59 61 61 59 59 59 ", "60 61 59 59 61 61 61 59 59 59 59 59 61 59 61 61 61", " 61 59 61 60 59 59 61 59 59 60 59 59 59 60 60 60 5", "9 59 59 59 59 61 59 59 61 59 61 59 61 61 59 59 61 ", "61 59 61 59 59 60 61 59 59 59 61 59 59 59 61 59 61", " 59 59 60 59 59 59 59 59 59 59 59 61 59 59 61 60 5", "9 59 59 60 59 60 59 60 59 61 60 59 61 61 59 59 60 ", "59 59 59 59 61 59 61 61 61 59 61 60 59 59 59 59 61", " 59 59 59 60 60 59 59 60 61 59 59 59 60 59 59 61 5", "9 60 61 61 59 60 59 60 60 61 61 60 61 59 59 59 59 ", "59 59 61 59 59 61 60 59 61 60 60 60 60 59 59 59 59", " 59 59 59 59 59 59 59 59 60 60 59 59 59 59 59 59 6", "0 59 60 60 60 59 61 59 59 59 59 59 61 60 59 59 60 ", "59 60 59 61 61 59 60 59 59 60 59 61 59 59 61 59 60", " 61 59 61 59 61 59 60 61 61 61 61 61 60 59 60 59 5", "9 59 59 61 61 59 59 59 59 59 59 59 59 59 59 59 60 ", "60 61 61 59 59 59 59 59 59 61 59 60 59 59 59 59 59", " 61 61 59 60 60 59 61 59 61 59 60 59 59 59 59 61 5", "9 59 60 59 61 60 61 59 61 59 59 59 59 59 60 60 59 ", "59 59 59 59 59 59 61 59 59 59 59 59 61 59 60 61 61", " 59 59 59 61 59 59 59 59 59 61 59 59 59 59 59 61 6", "0 61 59 60 59 59 59 60 59 59 59 59 59 59 59 59 59 ", "61 61 59 60 60 61 59 59 59 59 59 59 61 59 59 59 59", " 59 61 59 60 59 61 59 61 59 59 59 59 61 59 59 60 5", "9 60 61 60 60 60 59 59 60 61 59 60 59 59 59 59 59 ", "59 59 60 59 60 59 61 59 60 60 59 61 61 59 60 59 59", " 59 60 59 60 59 59 59 59 60 59 59 59 59 60 61 59 5", "9 59 59 59 59 59 59 59 60 59 60 59 61 61 59 60 60 ", "61 59 60 59 59 61 61 59 60 61 59 59 61 59 60 61 61", " 59 59 59 59 61 59 60 59 59 59 61 59 61 59 59 59 6", "0 61 59 60 59 61 59 61 59 59 60 59 59 59 61 60 61 ", "60 60 60 61 59 59 61 61 59 59 59 59 60 59 60 59 60", " 59 61 61 60 59 61 59 59 61 59 59 60 61 59 59 59 6", "0 59 61 59 59 59 61 60 59 59 59 59 60 61 59 59 59 ", "59 60 60 59 60 59 61 59 59 59 61 60 59 59 59 60 59", " 59 61 59 59 59 59 59 60 60 59 60 59 59 59 60 60 6", "0 61 59 59 61 59 60 61 61 61 61 59 60 59 59 59 61 ", "59 60 59 59 61 59 61 61 59 59 61 61 59 59 59 61 59", " 59 59 59 61 59 59 60 59 60 59 61 59 60 61 61 61 6", "1 59 60 59 59 60 59 59 60 59 61 61 59 59 61 60 59 ", "59 59 60 60 60 59 59 59 61 59 60 59 59 59 60 61 59", " 59 59 59 59 60 59 60 61 59 59 60 60 59 60 59 59 5", "9 59 61 59 61 61 59 60 59 59 60 59 59 61 59 59 60 ", "59 59 61 59 59 60 60 60 59 59 60 60 61 59 61 60 59", " 61 59 59"};
    vector<string> y = {"61 60 59 59 59 60 59 60 59 61 59 61 59 60 59 59 59", " 59 59 59 59 59 61 59 60 59 61 59 59 59 59 59 59 6", "0 60 59 61 59 61 59 60 61 61 60 59 59 59 61 60 61 ", "59 61 59 59 59 59 61 59 59 59 59 59 60 59 60 60 59", " 59 59 59 59 59 60 59 59 61 59 59 61 59 59 59 60 6", "0 59 59 59 60 59 60 61 59 59 60 59 60 59 59 59 61 ", "59 59 60 60 59 60 59 59 60 61 61 59 59 59 59 60 61", " 59 60 60 60 59 59 61 59 60 60 61 59 61 59 61 59 5", "9 61 59 59 61 60 61 59 61 61 61 61 61 59 60 59 61 ", "61 60 61 60 59 59 59 60 59 59 59 59 61 59 59 59 60", " 61 60 60 60 61 61 59 61 60 60 61 59 60 61 60 61 6", "0 59 60 59 59 59 61 61 59 61 60 59 60 59 59 59 61 ", "61 59 59 59 59 60 61 59 59 59 59 61 59 59 59 61 59", " 59 59 59 59 59 59 59 59 61 59 59 59 60 59 60 60 5", "9 59 61 59 60 59 59 59 59 59 59 61 59 61 59 60 60 ", "61 59 59 59 59 59 59 59 60 60 59 61 59 59 59 61 59", " 59 59 60 59 60 59 59 59 59 60 59 59 59 59 60 59 5", "9 59 59 61 59 60 60 61 59 59 59 61 61 59 59 60 59 ", "61 59 59 59 61 60 60 59 60 61 59 59 61 60 59 60 59", " 60 61 59 61 59 59 59 59 59 59 61 59 61 60 61 59 6", "0 59 61 59 59 59 59 59 60 59 59 61 60 61 60 61 59 ", "59 61 59 59 60 61 59 59 59 60 59 59 61 61 59 60 60", " 61 61 59 59 60 59 59 59 59 60 61 59 59 59 60 59 6", "0 60 59 60 61 61 59 59 59 59 59 60 59 59 59 61 60 ", "59 59 59 61 59 59 59 59 59 60 61 59 59 59 61 60 61", " 59 59 60 59 59 59 60 61 59 59 61 59 60 59 61 59 6", "1 61 61 59 59 60 61 59 60 61 60 59 60 60 59 60 60 ", "59 59 59 61 60 60 61 61 59 61 59 59 60 60 59 61 60", " 59 60 61 61 59 59 61 59 59 59 61 59 60 59 60 61 6", "1 59 59 61 60 61 59 59 60 61 59 61 59 60 61 60 60 ", "59 61 61 59 59 59 59 59 59 59 59 60 59 60 60 59 60", " 61 59 59 61 61 59 60 59 59 61 60 60 59 60 61 59 6", "1 61 60 59 60 60 59 59 59 61 59 59 59 60 59 59 60 ", "59 60 60 60 59 60 59 59 60 59 59 60 59 60 59 59 60", " 59 60 59 61 59 59 60 60 59 60 60 61 59 60 59 60 6", "0 61 60 59 60 60 60 61 59 60 61 60 59 60 60 60 61 ", "61 61 59 59 61 59 61 59 59 60 60 60 60 59 60 61 61", " 59 59 59 59 59 59 60 61 59 61 59 60 59 61 59 60 5", "9 59 59 59 59 59 59 61 59 61 59 61 59 59 59 61 60 ", "61 59 59 60 60 61 61 60 60 61 59 61 59 59 59 59 60", " 61 59 60 59 59 61 61 59 61 59 61 59 59 59 61 59 6", "1 59 59 60 59 60 59 59 59 59 59 60 61 59 61 61 60 ", "61 61 61 59 60 59 60 59 59 60 59 59 60 59 59 59 59", " 59 59 59 59 59 60 60 61 61 61 59 59 59 59 60 59 5", "9 59 60 61 60 59 59 59 59 59 59 59 61 59 61 61 59 ", "60 60 59 59 59 61 61 59 61 59 59 60 60 61 59 59 59", " 61 59 60 59 61 61 61 59 60 59 59 59 59 59 61 59 5", "9 60 61 61 59 60 61 59 61 60 60 59 61 59 60 61 59 ", "61 59 59 61 59 59 59 61 60 59 59 59 60 59 60 59 61", " 59 59 59"};
    vector<string> lengths = {"2 1 1 1 1 2 3 1 1 2 3 1 1 1 3 2 1 1 1 1 2 3 1 2 2 ", "1 1 2 3 3 1 1 3 1 3 1 1 2 1 1 2 2 1 1 2 3 1 2 3 1 ", "2 2 3 1 1 1 1 2 1 2 2 1 1 2 3 1 1 1 1 1 1 2 1 2 1 ", "3 1 2 2 1 1 1 1 3 3 1 1 1 3 2 1 1 1 1 1 2 2 1 3 1 ", "1 1 3 3 3 3 2 1 3 3 1 1 2 1 2 1 3 1 1 2 1 1 1 3 2 ", "1 2 3 1 2 1 2 1 2 1 3 1 2 1 1 3 3 1 1 2 3 3 3 1 1 ", "3 1 3 2 1 3 1 2 1 3 1 3 3 1 1 1 1 1 1 3 1 1 3 1 1 ", "1 3 1 3 3 1 1 1 1 3 1 1 2 3 3 3 1 1 1 1 1 1 2 1 1 ", "1 1 1 1 2 1 2 3 2 1 2 3 1 1 2 1 1 1 1 3 1 1 1 1 1 ", "2 1 1 2 1 1 1 1 1 1 2 2 3 1 1 3 1 3 1 1 1 1 1 1 3 ", "2 2 2 2 3 3 2 2 1 2 3 1 2 2 3 2 2 3 3 1 1 3 2 2 3 ", "3 1 2 3 1 1 1 3 3 3 1 3 1 1 1 1 2 1 1 1 1 1 1 1 2 ", "3 3 1 1 3 1 1 1 1 2 1 1 3 3 1 1 1 2 1 1 1 1 3 2 2 ", "3 1 1 1 1 1 1 3 2 3 1 3 1 1 2 3 3 1 2 3 3 1 3 1 1 ", "1 1 3 1 1 1 1 1 3 2 1 3 1 1 1 1 2 2 2 1 1 3 1 1 3 ", "1 2 1 1 2 1 1 2 1 1 1 1 1 1 1 1 3 1 3 1 1 1 3 1 1 ", "1 1 3 1 2 1 1 2 2 2 2 1 1 1 1 2 2 3 2 3 1 1 3 1 2 ", "1 1 1 2 2 1 3 1 1 2 2 3 2 1 1 2 2 1 2 3 1 3 1 1 2 ", "3 1 3 1 1 1 1 3 3 3 1 1 3 2 2 1 1 3 1 3 1 1 1 3 2 ", "1 1 1 2 1 1 1 1 3 1 1 1 1 3 1 1 1 2 2 2 1 1 1 2 2 ", "1 1 2 1 3 1 1 2 1 1 3 1 1 1 3 1 3 1 2 3 1 3 2 3 1 ", "1 1 3 2 1 3 3 1 1 2 3 1 1 1 1 3 2 1 2 1 2 2 1 1 1 ", "2 2 1 1 3 1 1 3 1 1 2 1 1 1 2 1 1 2 2 3 1 1 3 3 1 ", "1 1 1 1 1 3 2 1 1 2 3 1 1 3 2 1 3 2 2 1 2 3 3 2 1 ", "2 1 1 2 3 2 2 3 1 1 1 2 1 1 3 2 2 3 3 1 3 1 1 3 1 ", "3 2 1 1 1 2 3 3 3 1 2 1 1 1 1 3 1 3 3 2 2 1 1 1 1 ", "1 3 1 1 1 2 1 2 3 1 1 1 1 2 1 1 2 3 1 1 1 1 1 1 2 ", "1 1 1 1 2 1 1 1 2 3 1 3 2 3 1 1 1 1 2 1 1 2 2 3 1 ", "2 1 1 1 2 1 3 3 1 1 3 1 1 2 2 1 1 1 1 1 3 1 3 1 1 ", "3 1 3 2 2 2 1 1 2 2 2 1 3 1 2 1 2 2 1 3 2 1 1 1 1 ", "1 1 2 3 3 3 1 2 1 2 1 2 3 1 2 1 2 1 1 1 2 1 1 1 1 ", "1 1 1 1 2 3 3 1 2 2 3 3 2 1 3 1 3 1 2 1 3 2 2 1 1 ", "1 3 1 1 1 1 1 1 3 1 1 2 1 1 3 1 1 1 1 3"};
    vector<string> names = {"N Y W GA A IK P C W K J H S E CB O NU W M AK M A S", "E W A X I S V AC E B G G MH K A C SU T L D W P G C", " G A VW M OS W MD A V PJ EN S N GJ S K YC P Q D M ", "Y M G A FM P S R QS N N P X N T W S E C K C G K A ", "I O W O YU CQ K UO ZA II KF I G M N E CI G O R N O", " N V UC P Y K SM EE O UC WC A FW A O WK EK C SU IU", " K K O S C A LW R QW G I A K I Z XU GA MI S F K M ", "HB Q R SW Y G G W S U A O UI C K Y K I CC S E U W ", "A L S C AU ZN I JB X M E KV GM Z KY Q A H NA N U B", "A GW Z N M G MQ OJ K M I QE ZG BV A F IK K HA G YU", " XN E S G W I W I D A G Y N N L BY KP Q Y O S UQ K", " I A C C UR S Q H K V QN CE E H Z I K XJ S K IM C ", "K R U U AS C CK SN U J Q G J EA SA Q A EE G W D R ", "W T A IQ GI OC A AM Q G E Y QY I V C C AU A A NK G", " D Q DA TC SQ O S K X Y A N Y L YA Z OC W S L A N ", "K KK W D R Q Z J K I F G DE M N UA P AF J S I N J ", "K N D A O S U M U U Q F YQ Y K S GZ D L A EP U K L", " I C V X G F VN A U G A S M W W KG WA Y FQ K A UC ", "N O C K V S I M L G E Q MU K A N B C V I X D S G H", " K N A E X Y U WK Q L H M M DE HM G R A V O S A A ", "SC OY F S N G F O WB G M B Q L MA K E J M F S IQ A", "G U LN M A KP XU N AR VI E QU V KZ G E A Q V QA IE", " QI NW K N O C QV G S O M AK I E S AE C SG W U Y E", " C G S W U F I N J I W S S A Y NC Z GZ WZ B W A L ", "KO S G F JI O MN E YO Q E D M QU G G C R IC A W I ", "LA I V MA J X K P K RS E E YN Y U GD DM W X M AI Q", " A KE L UA V U J G QJ M UA I S C J YI EB AS W E Q ", "V A A D U N GE Y CI I M WD W O G B WA E AM X NU Y ", "M A Q N E MC AQ G U D A Y O O LM G A W L M M W Y A", " Y IU SA S U JA M Q YJ M S S TB GA GQ AD S O S OU ", "Q Y O L WI X PZ E G E O V KP O EE UA E A H W Q F Y", " I U K M E P PX G D I A NC Y Z XA X IK Q U Q M WQ ", "AS GS WC EE V Y GS O X AE W M FC S GV ID G A G GG ", "K A PC Q LE F O C A W GY E Y M MN J H AO N A JC O ", "K K T C M H HU G R O U U K F M O Y N C O A KA G Q ", "P Y A YC Q W G Y P R SA D G Y S A W B W B AO ST B ", "UD I U IA MI DM I PU Q NS NC K GS Q IH K AM T FR"};
    int k = 108;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "AD", "AE", "AO", "B", "B", "BV", "C", "C", "C", "CC", "CI", "D", "D", "D", "E", "E", "E", "E", "E", "F", "FQ", "G", "G", "G", "G", "G", "G", "G", "GA", "GS", "GS", "H", "HA", "I", "I", "I", "I", "I", "IA", "IE", "J", "J", "K", "K", "K", "K", "KO", "KP", "L", "L", "L", "L", "LM", "M", "M", "M", "M", "M", "M", "M", "MN", "N", "N", "N", "N", "N", "N", "N", "NK", "NU", "NU", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "OC", "PJ", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "QA", "S", "S", "S", "S", "S", "S", "S"};
    if(result == expected) {
        cout << "Test Case 75: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 75: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test76() {
    vector<string> x = {"61 61 59 61 59 59 61 59 61 59 59 59 59 59 59 59 60", " 59 61 60 61 61 60 61 59 59 60 59 61 61 59 59 61 5", "9 60 59 60 59 59 61 59 61 61 61 61 61 60 61 61 61 ", "61 59 59 59 61 59 60 59 60 59 59 59 60 60 59 59 59", " 59 59 59 59 60 60 59 59 61 59 59 60 59 59 59 59 5", "9 59 59 59 59 59 60 59 61 59 59 59 59 59 59 59 59 ", "61 60 61 61 59 61 59 59 59 59 59 61 59 59 59 59 59", " 59 59 59 59 61 60 59 61 59 60 61 61 59 59 59 61 6", "1 61 61 59 60 59 60 61 59 61 59 59 59 60 61 59 59 ", "59 59 59 59 60 59 59 61 60 59 59 60 59 60 60 61 61", " 59 60 59 61 59 61 59 59 59 59 59 60 61 61 59 60 6", "1 60 60 60 59 59 60 60 59 59 59 59 59 59 61 59 61 ", "60 59 59 61 60 61 61 59 61 59 59 59 59 61 61 61 59", " 60 59 59 59 59 59 59 59 59 61 61 61 60 59 61 59 6", "0 59 60 61 59 59 61 59 59 59 60 60 59 59 60 59 60 ", "59 59 60 59 61 59 59 60 59 61 61 59 60 60 59 59 60", " 60 59 59 59 59 61 61 61 59 60 59 59 59 59 59 61 5", "9 61 59 59 59 59 61 61 60 59 60 60 59 59 61 60 61 ", "59 59 59 60 59 60 60 59 61 61 60 59 61 60 60 59 61", " 60 59 59 61 59 60 59 59 61 59 59 60 59 59 61 60 6", "1 60 59 59 61 61 59 60 59 61 59 59 61 59 61 60 59 ", "59 59 60 60 59 59 60 61 59 59 61 60 59 59 59 61 60", " 59 61 61 60 61 61 59 61 59 59 59 59 60 60 59 61 5", "9 61 61 60 59 59 61 61 59 61 61 60 59 60 61 60 59 ", "60 61 59 59 61 59 59 59 59 61 59 59 59 59 59 59 59", " 61 59 60 60 59 59 59 59 59 60 59 59 60 59 59 61 5", "9 60 59 61 59 60 60 59 59 59 59 59 61 59 61 60 59 ", "59 61 61 59 61 60 59 59 59 61 61 61 61 59 59 59 59", " 59 59 59 61 59 59 60 59 59 60 59 60 60 59 60 60 5", "9 60 59 59 61 59 61 59 59 60 59 59 59 59 61 60 59 ", "59 59 59 59 59 60 59 60 59 61 61 59 61 60 61 59 59", " 60 59 59 60 59 61 59 61 61 61 59 59 59 59 59 60 5", "9 59 61 61 59 60 59 61 59 60 61 59 59 59 59 61 59 ", "59 59 60 59 59 59 60 59 60 60 60 59 59 59 61 59 60", " 59 61 59 59 59 59 61 59 61 59 60 61 59 59 60 59 5", "9 61 59 60 61 59 59 60 60 60 59 60 59 59 59 60 59 ", "61 59 60 59 59 61 60 59 59 59 59 61 59 59 60 59 59", " 61 59 59 59 59 59 60 59 59 60 59 61 61 61 59 59 5", "9 60 59 59 61 60 59 59 60 61 60 59 59 59 59 59 59 ", "59 60 60 59 59 59 60 61 60 60 59 61 60 61 60 59 61", " 59 59 59 59 60 61 61 59 60 59 59 59 61 61 61 59 6", "0 59 60 61 59 59 59 61 61 59 59 61 61 61 59 59 60 ", "59 59 59 59 60 60 59 59 61 59 59 59 61 59 59 60 59", " 60 59 59 59 59 59 60 59 60 59 59 59 59 59 61 61 5", "9 59 61 61 61 59 61 61 59 61 59 60 60 61 60 59 60 ", "60 59 60 59 60 59 59 61 60 59 59 59 59 61 60 60 59", " 59 60 61 61 59 60 60 59 61 59 60 61 59 60 60 60 6", "1 60 59 59 60 59 60 61 60 60 60 61 61 61 61 59 61 ", "61 61 59 59 59 59 59 59 59 59 59 59 60 60 59 59 59", " 60 61 59 60 61 59 59 60 59 59 59 61"};
    vector<string> y = {"59 59 60 59 61 60 60 59 61 59 59 59 61 59 61 61 61", " 59 61 59 59 59 60 60 59 59 60 60 59 61 60 61 60 6", "0 59 59 61 59 61 61 59 60 60 61 59 61 59 59 59 61 ", "59 61 59 59 59 59 59 59 59 59 60 61 60 59 60 60 60", " 60 61 59 59 60 59 61 59 60 59 59 60 59 59 59 59 5", "9 59 60 59 59 59 61 59 59 59 61 60 59 59 59 59 61 ", "60 61 60 59 59 59 61 59 60 59 59 59 59 59 59 59 59", " 61 59 61 59 59 59 59 60 60 59 60 61 60 59 61 60 5", "9 60 61 59 59 60 60 59 59 59 61 59 61 59 59 59 59 ", "59 59 59 59 59 59 59 59 60 61 59 60 59 60 59 61 59", " 60 59 61 60 59 60 59 61 59 59 59 59 61 59 59 61 5", "9 60 59 59 59 60 61 59 59 61 59 59 59 59 59 59 59 ", "61 60 59 59 59 59 59 59 61 60 59 59 59 59 59 59 60", " 61 61 61 59 61 59 59 59 60 60 59 60 60 59 59 59 5", "9 59 59 59 59 59 59 60 61 59 59 61 60 60 59 61 61 ", "61 60 59 60 61 59 59 59 59 60 59 60 59 61 59 59 61", " 61 61 59 60 59 61 60 59 59 59 60 59 61 59 60 59 5", "9 61 60 59 59 60 59 61 59 59 59 61 61 59 59 59 59 ", "59 59 59 59 59 59 59 61 61 60 59 59 61 59 61 61 59", " 59 59 61 59 61 60 59 61 59 61 59 59 59 60 59 59 6", "0 59 59 60 59 59 60 59 59 60 60 59 59 61 59 61 61 ", "61 59 60 61 61 61 59 60 59 59 59 59 59 59 61 60 59", " 59 60 60 59 59 59 59 59 60 59 60 59 60 59 60 60 6", "0 59 59 59 59 60 59 59 59 60 59 59 61 59 60 61 60 ", "60 61 59 59 59 59 61 59 59 61 61 59 61 59 60 59 59", " 60 60 59 60 59 59 61 60 59 61 59 59 60 59 60 60 6", "0 59 60 60 59 59 59 59 60 60 59 59 59 60 59 61 61 ", "59 59 60 60 59 59 59 59 59 61 61 59 59 61 61 60 59", " 61 59 60 59 60 59 59 60 60 59 59 59 60 59 61 59 5", "9 60 61 59 60 59 59 61 59 59 59 59 59 59 61 59 61 ", "59 59 59 61 59 59 61 61 61 60 59 59 60 60 61 61 59", " 60 59 60 59 61 60 59 60 60 60 59 59 59 61 59 60 5", "9 61 61 61 61 61 61 60 59 61 59 61 59 59 61 59 60 ", "59 59 59 59 59 60 59 59 59 60 61 59 60 59 59 59 59", " 59 60 61 59 59 60 59 59 60 59 59 61 60 59 59 59 5", "9 60 60 60 60 61 59 59 60 61 59 61 59 61 61 59 59 ", "59 59 59 59 59 59 59 59 61 59 60 60 60 59 59 59 59", " 61 59 59 59 59 60 59 60 59 61 61 60 59 60 59 59 5", "9 60 61 61 59 60 61 59 61 59 59 59 60 61 61 61 59 ", "59 59 61 60 60 59 61 60 59 59 60 59 59 60 59 61 59", " 59 61 59 60 59 59 60 59 60 61 61 60 59 60 60 59 5", "9 61 61 59 59 59 59 59 61 59 61 59 60 60 59 61 61 ", "61 60 59 59 61 59 61 61 61 59 60 59 59 59 59 59 59", " 59 61 60 61 61 59 61 59 60 60 60 59 59 59 59 59 5", "9 61 59 59 59 60 59 61 60 59 59 60 59 61 61 59 59 ", "59 60 60 61 59 59 60 59 59 59 59 60 60 59 59 60 59", " 59 59 59 61 59 59 59 59 60 61 59 61 60 60 61 59 5", "9 61 59 59 59 59 61 59 59 59 61 59 60 59 61 59 59 ", "59 59 60 59 59 61 60 61 60 59 60 61 61 59 61 59 61", " 61 59 59 59 60 59 61 60 59 61 60 61"};
    vector<string> lengths = {"3 1 1 1 2 3 1 1 1 1 2 1 3 3 3 1 3 3 1 2 3 1 1 1 3 ", "3 1 3 2 3 2 3 3 1 3 1 1 1 3 1 1 1 2 3 3 1 1 3 1 2 ", "1 3 2 1 2 3 3 1 1 1 3 2 1 1 1 1 3 1 1 3 1 1 3 1 1 ", "1 2 2 1 2 2 3 1 3 3 1 1 1 3 1 1 2 1 1 3 1 3 1 1 1 ", "2 2 3 1 1 2 1 1 1 2 3 1 1 2 1 1 3 1 1 2 3 2 1 1 3 ", "1 1 1 1 2 1 1 2 3 1 1 1 1 1 1 1 1 1 1 3 2 3 1 3 1 ", "2 3 2 3 3 1 1 1 3 1 1 2 1 2 1 3 2 1 1 1 1 2 1 3 2 ", "3 2 1 3 2 2 2 3 3 1 1 1 2 3 1 1 1 2 1 1 1 1 1 1 1 ", "3 1 1 1 1 3 2 3 3 1 3 2 1 1 1 2 1 3 1 3 2 1 3 1 2 ", "3 3 1 1 2 1 1 1 2 1 1 1 3 1 3 1 2 1 1 1 1 1 1 1 1 ", "2 3 1 3 1 1 2 1 1 1 3 2 1 1 3 3 1 2 1 1 2 1 1 1 1 ", "3 2 1 3 1 1 3 1 3 2 1 1 1 1 3 3 1 3 1 2 1 1 1 2 3 ", "1 1 3 1 1 1 2 1 3 2 1 1 1 1 3 1 3 1 2 3 1 3 1 1 1 ", "2 2 1 2 2 3 2 3 3 1 3 1 1 1 3 1 3 1 1 1 3 1 1 1 1 ", "1 2 1 2 1 1 1 2 3 1 1 1 3 2 2 3 2 1 3 1 2 2 1 2 1 ", "1 2 3 3 3 2 2 3 1 3 2 1 2 1 1 1 2 1 1 1 2 3 3 1 2 ", "2 1 2 3 3 1 3 1 2 1 2 3 2 1 3 1 1 2 1 1 1 2 1 3 1 ", "2 3 1 1 1 1 1 1 2 1 3 1 1 2 2 1 3 3 1 1 1 2 1 2 1 ", "1 2 1 1 1 3 1 1 1 1 1 1 1 2 1 3 1 1 3 1 3 1 3 1 1 ", "1 2 1 3 1 1 2 2 1 3 2 1 3 2 2 1 1 3 3 2 2 3 1 1 3 ", "1 1 1 1 1 1 1 1 2 3 1 3 2 1 3 3 1 1 3 1 3 2 2 3 3 ", "2 3 2 1 1 3 1 2 1 3 3 2 1 1 2 1 1 1 1 2 2 3 1 1 3 ", "1 3 1 2 3 1 2 2 3 1 1 1 3 1 3 1 1 2 2 1 3 1 3 2 1 ", "2 3 1 1 1 1 1 1 2 3 1 2 3 1 1 3 1 3 1 1 2 2 2 3 3 ", "3 3 3 1 1 3 1 1 1 1 1 2 1 2 1 2 1 1 1 2 1 1 3 1 1 ", "2 1 3 3 1 1 1 1 1 1 1 1 1 3 2 1 1 1 1 1 3 1 2 1 2 ", "1 1 1 1 1 2 3 1 2 2 1 2 1 1 2 3 2 3 3 2 2 2 1 1 1 ", "1 3 2 1 2 1 3 2 3 2 1 2 2 1 1 1 1 1 2 3 1 1 1 1 1 ", "2 2 2 2 3 1 1 2 1 2 3 2 1 1 1 3 1 1 1 1 2 3 1 1 1 ", "1 1 2 1 3 1 3 1 1 1 1 1 1 3 1 3 2 2 2 1 1 1 1 1 1 ", "1 1 1 1 1 2 3 1 1 2 2 1 1 1 1 1 3 1 1 1 1 3 1 3 1 ", "2 1 1 2 3 1 1 1 3 1 1 1 2 1 1 1 1 1 1 3 3 1 2 1 3 ", "1 3 1 1 1 2 1 1 1 1 1 2 1 3 1 1 1 2 1 2 2 3 1 2 1 ", "3 1 1 2"};
    vector<string> names = {"DR K M I V W C W Q O U D S TM A V Y Y AE A JZ Y U ", "G OY U N L C U CH S KY C I O Y R G G KC X U C G A ", "AK CE A I A K X HA HU P Y CG M J M Y H J M M C B U", " I O B L LC PF C W EU G I IE N O U O X K FE U IK I", " ZE W UN N B S Y L I C GM U Q AE MO E VC B C GZ A ", "X B XW Q G EA E A T U B E G M MG S K U H I U U K P", "Q S F M S Q Q U E A Q A AX W N N M WK J A AQ X A G", " W XK IT H Q K C S EG F A H S M Q C A I M M QG C P", " MB E G EO OW IE EX TU U W A U W Q E G M B CP G T ", "IW W B P K H KA O O K V WK Q N SW I GA S KE I D L ", "N AK G I K I G W IY AI U Q A Q V G O K G I F I A N", " O I YD GU M AD GM I Q EO W G EY S A A A Y N I WI ", "WQ L E G VO A G C W EO SD Q A CK K GS G W L X U A ", "KB G O XQ KG K L F Y QY W UH BL Q G B O U GE IX C ", "A U A F I IW A M YH C G B E B KM Q A Q H A D M M K", "I G Y YC AQ C MG U S X H S QE P M AJ C I IY C V C ", "U K S I S F E Y BU G F Z J O SZ C I O G Y W YQ A A", " C A V V CK M Q X EA BG MC AY A NQ I A Q O A EI M ", "E SO E HQ N EU O OI U S Q WW N UC EH C JH ON T BO ", "GW K Q O C K S G W A U BY S E A Y U A U I K M SX N", " A U Q H D E K O K O G S OA X D M W X BE U A E N Q", " V C GD M U Y MO A C ZF W DR N A I Q A S U S II B ", "W M NM G BB N I V R A N A EG A A S D Z U X E S Y A", " Y H Q A W I XG V A DO C ES C IC M XM JQ Q Q E AO ", "H U K T V RX S U H N YI D W P LS M M A L C S E T Y", " J WY H Q OE T G G QA V N SY BJ HC AK W D A TT O A", "G UG L A E X H K C G MI A A J A QS M JC A YO A R E", " B C S A F M A JS IN D K K O I E O Y A A C Y KY O ", "K M IP Q I A W R M T E MH A M F N E Z Z W GZ M K G", " GE M Q C S Y E AB RS R WP W Y E M O Q O K AK AP K", " M I W WI F K V SH AC IP M UY MV A K NS X X Q V S ", "A A M F Q E G UW W Q U QF O L CY A A A F S S A OP ", "PU A A I K C E E L RI A H YQ C VA I Q C N O D AC Y", " X MB S A K V D M O K G G M O G X E Q I S MA M UU ", "V CS E AN W Z A Q G V N W Y S UA QN E N Y E A K K ", "R U Y Y S E Q UA MC C T Z S A GE RU NS Y G S M O R", "W WE Y C IA NQ C F CW S A G X AI Q Y Y Q Y Y"};
    int k = 200;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "AC", "AJ", "B", "BG", "C", "C", "C", "C", "C", "CY", "E", "EU", "EU", "F", "G", "G", "I", "I", "I", "I", "IE", "IE", "IN", "IW", "J", "K", "L", "M", "M", "M", "M", "M", "N", "NM", "O", "O", "P", "Q", "S", "S", "S", "S", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "AE", "AG", "AI", "AI", "AN", "AQ", "B", "BJ", "BL", "BO", "C", "C", "C", "CG", "D", "D", "E", "E", "E", "E", "E", "E", "E", "EO", "ES", "F", "F", "FE", "G", "G", "G", "G", "G", "GM", "H", "H", "H", "HA", "I", "I", "I", "I", "I", "II", "IX", "J", "JQ", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "KC", "KG", "KM", "L", "L", "M", "M", "M", "M", "M", "M", "M", "MO", "N", "N", "N", "N", "N", "NS", "NS", "O", "O", "O", "O", "O", "O", "PF", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "QY", "R", "R", "R", "RW", "S", "S", "S", "S", "S", "SD", "T", "T", "TT", "U", "U", "U", "UC", "V", "V", "VC", "W", "W", "W", "W", "W", "W", "W", "WI", "WY", "X", "X", "XK", "XW", "Y", "Y", "Y", "Y", "Y", "YQ", "Z", "ZF"};
    if(result == expected) {
        cout << "Test Case 76: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 76: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test77() {
    vector<string> x = {"59 61 59 59 60 60 61 59 59 60 59 61 61 59 59 59 59", " 60 61 59 61 60 61 59 59 59 61 59 59 59 59 59 59 5", "9 59 59 61 60 59 61 59 60 59 59 59 59 59 61 59 61 ", "59 60 61 59 60 61 59 59 60 60 59 61 59 61 61 60 59", " 61 59 61 59 61 60 59 59 59 59 60 61 61 60 59 60 6", "1 59 61 60 60 61 60 60 59 61 60 61 61 59 59 59 60 ", "59 61 59 61 59 59 61 59 61 60 59 59 59 59 60 61 59", " 59 60 59 60 60 61 59 61 60 59 59 59 61 59 59 59 5", "9 60 60 61 59 59 59 61 60 59 60 59 60 61 59 60 60 ", "60 59 61 61 59 59 59 60 59 60 60 61 59 61 59 60 59", " 59 60 59 60 59 59 60 59 61 61 60 59 60 59 59 59 6", "1 60 60 61 60 60 59 59 60 59 59 59 61 59 59 59 59 ", "61 59 59 59 59 60 59 61 59 59 59 59 59 59 59 60 61", " 59 60 59 61 60 59 59 60 60 59 59 59 59 59 61 59 6", "0 59 59 61 61 60 59 59 60 59 60 59 61 61 59 61 60 ", "60 61 59 60 61 59 59 60 59 60 61 59 61 59 61 59 60", " 59 60 59 61 60 59 60 61 60 61 61 60 59 59 59 60 5", "9 60 60 59 59 60 59 60 59 61 60 61 59 59 60 59 59 ", "59 60 61 59 59 60 59 59 61 59 59 59 59 61 59 60 59", " 61 60 59 59 59 60 59 59 61 59 59 61 61 60 60 59 6", "0 59 61 60 59 59 61 59 59 59 61 60 59 59 61 59 59 ", "59 59 61 59 60 59 60 59 60 59 59 59 59 59 59 60 59", " 59 59 59 59 59 59 59 59 61 59 60 61 59 61 61 59 5", "9 59 60 61 61 59 59 61 61 59 59 59 59 61 59 59 60 ", "59 59 61 59 59 59 60 59 59 61 59 59 61 60 61 59 60", " 61 59 60 61 60 59 59 60 59 59 60 59 60 60 60 59 5", "9 60 60 59 59 59 61 60 61 61 60 61 59 61 59 59 61 ", "59 59 59 61 59 61 60 59 60 61 59 59 60 61 61 60 61", " 59 59 60 59 60 59 61 61 61 60 59 59 59 60 60 61 6", "1 61 60 59 59 60 59 59 59 60 61 60 60 59 59 59 59 ", "59 59 59 60 59 59 60 59 59 59 59 59 59 59 59 60 60", " 61 59 61 61 60 59 59 61 59 61 59 61 60 61 59 61 5", "9 61 59 59 61 60 59 59 61 60 59 59 59 61 59 60 60 ", "59 59 59 61 59 59 59 59 59 59 59 61 59 59 61 61 59", " 60 61 61 59 61 60 61 59 59 59 60 59 59 61 60 59 6", "0 59 61 59 59 59 61 59 59 59 60 61 59 59 59 59 59 ", "59 61 59 59 60 60 61 60 59 61 60 59 61 59 59 59 61", " 59 59 60 60 59 59 59 59 59 60 59 59 59 61 59 61 5", "9 59 61 59 60 59 60 60 60 60 59 59 59 59 60 61 59 ", "61 61 60 61 59 59 59 61 59 59 60 59 61 61 60 59 59", " 59 59 61 60 59 59 59 60 59 59 59 59 59 60 60 60 5", "9 59 61 61 59 59 59 59 61 60 60 59 59 59 60 60 59 ", "59 59 59 59 59 59 59 61 59 60 61 60 59 59 59 60 61", " 61 61 59 60 61 61 60 59 61 59 60 59 59 60 60 59 5", "9 59 60 59 59 60 59 59 59 61 59 59 59 59 59 60 59 ", "60 60 59 60 59 59 59 59 60 59 59 60 61 59 60 59 59", " 59 59 59 61 60 60 60 60 59 59 59 60 60 59 59 60 5", "9 59 59 59 60 59 61 60 60 61 60 59 60 59 60 60 59 ", "59 61 59 61 61 59 59 61 59 59 59 59 59 60 60 61"};
    vector<string> y = {"59 60 60 59 59 59 59 59 61 60 59 60 59 61 59 61 60", " 59 59 59 60 60 59 61 59 61 61 59 59 61 59 61 61 6", "0 59 60 60 59 60 61 59 59 59 61 59 59 59 59 60 59 ", "59 61 60 61 61 59 60 59 60 59 60 59 60 60 60 59 61", " 61 60 59 60 59 61 59 59 59 59 59 59 59 61 59 59 6", "1 60 61 60 59 59 59 61 60 60 59 59 60 59 59 61 59 ", "59 61 60 60 61 61 59 59 59 59 61 59 59 59 60 59 59", " 61 59 61 60 59 59 60 61 59 61 59 59 59 61 59 59 5", "9 59 60 61 59 60 60 59 60 61 60 59 61 60 61 59 60 ", "61 61 60 59 59 61 59 59 59 61 60 59 60 61 59 59 60", " 60 61 59 60 59 59 59 59 59 59 61 59 59 59 59 59 5", "9 61 60 59 60 59 59 59 61 59 61 59 60 61 59 59 59 ", "60 59 59 61 59 59 59 61 59 59 59 61 60 61 59 59 61", " 59 59 59 59 59 60 59 60 61 61 61 59 59 60 60 61 6", "0 60 59 61 61 60 59 59 61 59 59 59 60 60 60 59 59 ", "59 61 59 61 59 61 59 61 59 59 59 59 61 61 59 59 61", " 59 60 59 59 61 59 61 60 59 60 59 59 61 59 60 59 6", "1 59 59 59 60 61 60 59 59 61 60 59 60 59 59 59 59 ", "60 59 59 61 60 60 60 59 59 61 59 61 60 59 60 60 59", " 61 59 60 59 59 61 59 61 60 60 61 59 59 60 59 59 5", "9 59 61 59 59 61 60 59 59 59 59 59 59 59 59 61 59 ", "59 59 59 59 61 59 60 59 59 59 61 60 60 60 61 59 59", " 60 59 59 59 59 59 59 59 59 59 60 60 61 60 59 60 5", "9 60 61 59 59 61 59 61 61 59 59 60 61 59 59 59 59 ", "59 59 60 61 61 59 59 59 59 61 59 59 60 61 59 59 61", " 59 59 59 59 60 59 60 59 60 60 59 59 60 60 59 59 5", "9 60 61 59 60 59 59 59 61 59 60 59 59 61 60 59 59 ", "61 59 59 61 60 59 61 60 60 59 59 59 59 59 59 60 60", " 59 59 59 59 59 61 60 60 60 59 61 60 59 61 59 59 6", "0 59 61 59 61 59 59 59 59 60 59 59 59 61 61 59 59 ", "59 61 61 61 61 61 61 59 61 59 59 59 59 60 60 60 60", " 59 59 60 60 59 59 61 59 59 59 59 59 59 59 59 59 6", "1 59 59 61 59 59 59 60 59 61 59 61 59 60 60 61 59 ", "59 59 59 59 61 59 59 61 60 60 61 59 61 59 61 60 59", " 60 60 59 59 60 59 61 61 59 59 59 60 60 59 59 59 6", "1 61 59 61 59 59 59 59 59 61 60 59 60 61 61 59 60 ", "61 59 59 59 59 61 59 60 61 59 60 59 59 59 60 59 59", " 59 61 59 59 59 59 59 60 59 59 59 59 61 61 60 61 5", "9 61 59 60 59 60 60 60 59 59 59 60 59 59 59 60 61 ", "59 59 59 60 60 59 59 61 59 59 59 60 60 59 59 60 60", " 61 61 59 59 61 59 59 59 59 59 59 59 60 59 59 59 6", "0 61 60 59 61 59 61 60 61 59 60 61 60 59 59 59 59 ", "59 61 59 59 59 59 59 59 60 59 61 60 61 59 59 59 60", " 60 61 61 61 60 61 60 60 61 59 61 60 61 59 59 59 5", "9 59 60 61 59 61 59 59 59 60 60 59 59 59 59 60 61 ", "60 59 61 60 59 59 60 59 60 60 60 59 59 59 60 59 60", " 59 61 59 59 61 61 61 59 59 61 59 61 59 61 60 60 6", "0 59 59 59 61 59 59 59 59 60 59 61 61 60 59 59 61 ", "59 61 59 60 59 59 61 61 60 61 59 59 59 59 61 59"};
    vector<string> lengths = {"2 1 1 3 1 1 1 2 1 2 1 2 1 3 2 1 1 1 3 2 1 1 1 3 1 ", "1 2 2 3 2 1 3 2 1 3 1 1 1 1 3 1 1 2 3 2 1 1 2 2 2 ", "2 3 2 2 2 1 2 1 1 2 3 3 2 1 2 2 3 1 3 3 1 2 1 1 3 ", "1 2 1 1 1 1 1 3 3 1 1 2 3 3 1 2 1 1 2 1 3 1 1 1 2 ", "2 1 1 1 3 1 1 1 1 1 2 1 2 3 3 1 2 3 2 1 3 1 1 1 1 ", "1 1 3 2 3 1 1 3 1 1 3 2 2 1 1 1 2 3 1 1 2 1 1 3 2 ", "3 1 1 1 1 1 1 1 2 1 2 2 2 1 3 1 3 1 2 2 3 1 1 1 1 ", "1 3 1 1 1 3 2 3 3 2 1 1 1 1 1 1 1 2 2 1 2 1 2 1 1 ", "3 3 2 1 2 1 1 1 1 2 1 1 1 1 1 2 2 1 2 3 3 2 1 1 2 ", "2 3 2 3 2 1 1 1 2 3 3 2 1 1 3 1 2 3 2 1 1 1 1 3 1 ", "3 1 3 3 1 1 1 1 1 2 1 1 1 3 2 1 1 2 3 2 1 3 1 1 2 ", "1 3 1 2 1 2 1 1 2 1 3 1 1 1 1 1 1 3 1 1 2 1 2 3 1 ", "1 1 1 1 1 3 1 1 1 3 1 1 1 1 1 1 1 1 1 1 2 1 1 3 1 ", "2 2 1 1 1 1 3 1 1 1 1 3 1 1 1 2 2 3 1 1 2 1 1 1 1 ", "1 1 1 1 2 3 1 1 1 3 1 1 1 2 2 3 3 1 3 2 2 2 1 3 1 ", "2 3 1 2 1 2 2 2 1 1 1 2 3 1 3 3 3 1 1 2 3 1 3 1 2 ", "3 3 1 1 1 2 1 1 1 1 1 1 2 1 2 3 1 2 3 2 1 3 1 1 3 ", "3 1 1 1 2 2 2 1 1 2 3 3 1 2 3 1 1 2 1 2 2 2 3 1 1 ", "2 2 3 1 1 3 1 2 2 2 1 1 1 3 1 1 3 3 3 1 1 1 3 1 1 ", "3 1 2 3 1 1 1 3 2 2 3 1 1 3 1 3 1 3 2 1 1 3 1 3 3 ", "2 3 3 2 1 2 3 3 3 1 3 1 3 1 2 1 1 1 2 1 1 3 1 1 1 ", "1 1 1 1 3 2 1 1 3 1 1 1 1 3 3 1 3 2 1 2 1 1 1 1 1 ", "1 2 1 1 3 1 1 2 1 2 3 3 2 3 3 1 1 2 1 1 3 1 2 1 1 ", "3 1 1 3 3 3 1 1 1 3 1 2 1 3 1 3 1 1 1 2 2 2 1 3 1 ", "2 2 3 1 3 3 3 1 3 2 1 2 2 3 3 1 3 1 3 2 3 3 1 2 3 ", "1 2 1 3 2 3 1 2 2 1 3 1 1 2 2 1 3 2 2 2 1 1 1 3 1 ", "1 2 1 3 2 2 2 1 1 1 1 1 1 1 2 3 2 2 1 1 2 2 1 1 2 ", "2 1 1 2 1 1 1 1 2 1 2 1 1 1 2 1 3 1 3 1 3 1 1 2 3 ", "1 3 2 1 1 3 1 3 2 1 3 2 2 2 1 2 1 3 1 2 1 1 1 3 1 ", "3 1 1 1 1 1 3 1 1 1 2 1 1 3 3 1 2 2 1 2 2 1 2 2 2 ", "1 2 2 1 1 2 2 1 1 1 1 3 3 2 1 3 3 2 3 1 2 2 1 2 1 ", "3 1 3 2 1 2 1 1 3 1 1 1 2 1 1 1 3 1 1 1 3 1 1 3 3 ", "1 1 2 2 2 3 3 3 3 2 2 3 1 2 3 1"};
    vector<string> names = {"O Y WA G I D W IH O UC M A VA N ID K M Q G I R U G", " S G CA Y Y N Q GN M S Q R Q WI MA K MN U K UR G K", " W W A A O A SH O J S U O Y T I K BO U A W Y S KA ", "K YU K K K L U AQ O E Q A A NX K Z R UW A M O A A ", "X Y J X W EG BV R RD KX I MM S Q K V W O U A H AM ", "N C A YS A D QC B M QK A LA P Z AA QY O M W W T I ", "VA K PK KK Q Z OO Q Z GP PW A I G E P O M I GX A P", " XI AH S J IL S J U NM AM A V I R ES M TG TJ Z G E", " B AY AB QD M CX AX W C H A A YT D X K G XI Y N BC", " V E Z C UU L C H S A W S R IO Y E ZO M W L S M A ", "M YV OA A I P A L A IE T I F U J W M S I C G K M U", " IQ S M EO AG U MK L IT K Y IU B M EV G A A I I C ", "M I M X E F M Q S M W A SQ P NA OC ER I G U M C E ", "N B X U Y A O QS D O PA N N KA K U VW Q Y U QQ A W", " P M H CW I QQ M F X Q QA Q Q W O W Z O Y K CB C N", " B KI P O IM IA V AS P AQ LA A X B KI Q E QI UK MB", " HA J A S I L YM N MO Y IU R V B W YJ A SH S A A P", " KT A U E F BQ C O U AB WY I S UX U RJ U A X K G V", " NQ Y C U AX V I C C Q A Q MW N Y T QW Q IU T HQ A", " S G Q I T O Y O YI G A N Q S TG W O RQ K AG W YM ", "A Y N Y H G Y K U N W N S E Z DJ UJ EQ ON EQ QS X ", "J A H VU I O T B C CE Q CO E WJ M SM AE I R OE C S", " V NK O E CU E CB YC A X D A SZ AS M AE Y NA O F Y", " W E U S C U UV Y O I Y A O K S K I KL I GA P L A ", "ZS EG G Q QW P CU LX K WW WO I J BC L T AA AA B M ", "IE M G NQ QW S Q EW G C S K O YQ U F U A S G G O C", " WW R A A HM A MG O G L OY QJ VA A A QY US F Y NS ", "O E N SE K YA E N R Q EA C M I A X NN O U QK ME E ", "S S I CF N U E Y A G U A OA DC YM A Y O X K Z A K ", "C E A E CI AM A K K T VA C N A QL W WD E A M OI G ", "U V K SW A E M AU M CH K A VE G F O W YO AC IW CZ ", "O D Q U UY I N SC B JB Z O E E Q I SB M U ZU GG OT", " H QU IO A Q M O W F W G AS N M ZM A K Q D I M R A", " O K YA R I OG G O KN E A A F U S A C G S SG UA N ", "N EQ NI WO S Y Z K P A C A M O C M O Y O UB NO X D", " GI A M P Y E A K G A AQ K E O H AK JY ML QB Y M C", " E E SK F N CA Z S KN P A Q GK X E YM L C U H Q"};
    int k = 236;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "AA", "AB", "D", "D", "E", "F", "G", "G", "H", "H", "I", "IU", "IU", "K", "K", "L", "LX", "M", "M", "M", "MB", "MK", "N", "N", "N", "N", "NQ", "O", "QA", "QY", "R", "S", "S", "S", "A", "AH", "AM", "AQ", "B", "C", "C", "E", "E", "F", "F", "G", "G", "I", "I", "I", "IA", "ID", "IH", "IM", "K", "K", "KX", "L", "L", "M", "M", "M", "N", "NN", "O", "O", "O", "O", "P", "PK", "QD", "QY", "S", "SG", "SZ", "U", "UR", "V", "W", "W", "W", "W", "WD", "X", "Y", "Y", "Y", "Y", "Y", "YJ", "YM", "YS", "ZU", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "AK", "AM", "AQ", "B", "B", "B", "B", "B", "BC", "BC", "BQ", "BV", "C", "C", "C", "C", "C", "CA", "CW", "E", "E", "E", "E", "E", "EG", "EQ", "ES", "F", "F", "F", "G", "G", "G", "G", "G", "GG", "GN", "GP", "GX", "H", "H", "H", "I", "I", "I", "I", "I", "I", "I", "I", "IE", "J", "K", "K", "K", "K", "K", "KI", "KI", "L", "LA", "M", "M", "M", "M", "M", "ME", "N", "NK", "NQ", "NX", "O", "O", "O", "O", "O", "OG", "OT", "P", "Q", "Q", "Q", "Q", "QI", "QQ", "QU", "QW", "R", "R", "R", "RJ", "S", "S", "S", "S", "S", "S", "T", "TJ", "U", "U", "U", "U", "U", "U", "U", "UB", "UJ", "US", "V", "VA", "W", "W", "W", "W", "W", "W", "W", "WJ", "X", "Y", "Y", "Y", "YT", "YV"};
    if(result == expected) {
        cout << "Test Case 77: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 77: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test78() {
    vector<string> x = {"60 59 59 59 60 59 59 59 59 60 61 59 59 61 59 60 59", " 59 59 59 59 59 59 61 59 59 61 59 61 59 59 59 59 6", "1 59 59 59 59 59 59 60 60 59 61 59 60 59 59 59 59 ", "61 59 60 59 59 60 59 60 60 61 60 59 59 59 60 60 61", " 59 60 61 59 59 59 59 61 59 61 59 59 59 60 61 61 6", "1 60 61 61 61 60 60 60 59 61 60 59 59 61 61 59 59 ", "59 59 61 60 59 61 61 59 60 59 59 59 61 59 60 60 59", " 61 60 60 59 59 60 60 60 61 59 59 61 59 59 60 59 6", "0 60 61 60 61 61 59 60 61 59 61 61 59 61 59 61 59 ", "59 59 59 59 59 59 59 59 59 59 59 59 60 60 59 61 59", " 59 59 59 59 60 60 61 59 60 61 61 59 59 59 59 59 6", "0 60 59 61 59 59 59 59 61 59 59 59 59 59 59 61 60 ", "61 59 59 59 59 60 59 59 61 59 61 61 60 61 61 59 59", " 59 59 60 59 59 61 61 61 59 59 59 61 61 59 59 59 5", "9 61 59 60 59 61 60 59 61 60 60 59 60 59 59 60 59 ", "60 61 59 60 59 59 61 61 59 61 59 61 60 59 59 60 61", " 59 60 59 61 59 61 59 59 59 59 61 59 60 60 61 60 5", "9 59 59 59 61 59 59 59 60 59 59 59 60 59 60 59 61 ", "59 60 59 59 59 59 61 59 59 59 59 59 60 60 61 61 59", " 61 61 61 59 60 59 60 61 61 60 59 59 59 59 61 59 5", "9 59 59 59 59 59 60 61 61 61 61 59 59 59 59 61 61 ", "59 59 60 61 59 60 59 59 60 59 61 61 60 59 59 59 61", " 60 61 59 59 59 59 60 60 60 61 61 59 59 59 59 59 6", "0 61 59 60 59 59 59 59 61 61 60 59 61 61 60 61 60 ", "59 59 59 59 59 60 59 59 59 60 59 60 59 60 60 61 59", " 59 59 61 59 59 59 59 61 61 61 59 60 59 59 60 59 6", "0 61 59 59 59 61 61 60 59 61 59 59 61 59 60 59 61 ", "59 59 59 60 59 60 59 59 61 60 59 61 60 61 60 59 59", " 59 59 59 59 61 61 59 59 60 60 61 59 59 59 59 59 6", "1 59 59 61 59 59 60 59 61 59 59 59 59 61 59 60 60 ", "61 59 59 59 59 61 59 59 59 59 60 61 61 59 59 59 59", " 59 60 59 59 61 61 61 59 60 59 61 59 59 59 59 60 5", "9 59 59 60 60 59 59 60 59 59 60 59 59 59 59 60 61 ", "59 60 59 59 60 60 61 59 59 60 59 59 60 59 61 59 59", " 61 61 60 60 61 59 61 60 59 60 60 61 59 61 59 59 5", "9 61 59 59 61 60 61 61 59 59 61 60 60 59 59 59 59 ", "61 59 61 60 60 59 61 61 59 61 61 60 60 59 61 59 59", " 59 60 61 59 60 59 61 61 61 61 59 61 59 59 59 60 6", "1 59 59 60 61 59 60 59 60 59 60 59 61 61 59 59 59 ", "60 61 59 61 59 60 59 61 60 59 61 59 61 59 61 59 59", " 59 61 59 61 61 59 61 60 59 59 61 59 59 61 60 59 6", "1 61 59 60 59 59 61 59 59 60 59 59 59 61 60 60 61 ", "61 59 60 59 60 60 59 60 59 59 59 59 59 59 59 59 61", " 59 59 60 59 60 59 59 59 59 59 61 61 61 59 59 59 5", "9 59 61 61 59 59 59 61 59 61 60 59 61 59 59 59 59 ", "59 59 59 60 59 59 61 59 59 59 59 61 61 59 59 59 59", " 59 60 59 59 61 60 61 60 59 60 59 59 59 61 60 60 5", "9 60 61 60 59 59 61 60 60 61 60 60 61 61 59 61 61 ", "61 60 60"};
    vector<string> y = {"59 59 60 59 59 59 60 59 60 60 60 59 61 59 60 60 59", " 59 61 61 59 59 60 59 59 59 61 59 59 59 60 61 60 6", "1 61 59 60 61 59 59 60 59 61 59 61 59 61 59 61 59 ", "59 60 61 59 59 61 61 59 59 59 59 60 61 59 59 60 61", " 60 59 59 61 59 59 59 59 59 59 59 59 60 59 61 59 5", "9 59 60 61 61 60 59 60 59 61 59 59 60 59 59 59 59 ", "60 61 61 59 60 59 59 59 59 59 59 60 59 59 61 61 61", " 59 59 61 59 59 59 59 61 60 61 60 59 59 61 60 59 6", "1 61 60 60 61 59 61 61 61 60 61 60 60 59 59 59 60 ", "59 60 59 59 60 59 59 59 59 59 59 59 60 61 59 59 61", " 59 59 60 59 61 59 60 59 61 59 59 59 59 61 61 59 5", "9 61 59 59 61 59 60 61 59 59 59 59 60 59 59 61 59 ", "59 61 61 60 59 61 59 61 60 59 59 60 60 59 59 60 61", " 60 61 59 60 61 59 59 59 59 60 59 60 59 61 60 59 6", "0 59 61 61 59 59 59 59 59 59 59 60 60 61 59 59 60 ", "59 59 59 59 60 59 59 59 59 59 59 59 61 59 60 61 61", " 59 59 60 59 61 59 59 61 59 59 61 60 59 61 59 59 5", "9 59 61 60 60 59 60 59 60 61 60 59 60 61 59 59 60 ", "61 59 59 59 59 59 61 59 59 59 59 60 60 60 60 61 59", " 59 61 60 59 59 59 59 61 59 59 59 60 61 59 59 59 5", "9 59 59 59 59 59 60 59 59 60 60 61 59 59 59 59 59 ", "59 59 59 60 61 60 59 60 59 59 61 59 59 59 59 59 61", " 59 59 60 61 61 60 59 59 59 59 60 61 59 59 60 59 6", "1 61 59 59 59 60 59 59 59 60 61 59 59 59 59 59 59 ", "59 61 59 59 61 59 59 59 59 59 59 61 60 59 61 60 59", " 60 59 60 59 59 59 61 59 61 59 61 60 59 61 59 59 5", "9 60 61 59 59 59 61 59 60 61 59 59 60 60 59 59 61 ", "59 59 59 59 61 59 59 59 59 61 59 59 59 60 59 61 59", " 60 59 59 59 60 61 59 59 61 59 61 59 60 59 60 59 5", "9 60 59 59 59 59 60 59 61 60 61 59 60 59 59 60 61 ", "59 59 60 59 59 60 59 59 61 59 60 61 59 59 59 59 61", " 60 60 59 59 59 61 59 59 60 61 59 59 59 60 61 59 6", "1 59 61 61 59 59 60 59 59 59 59 59 59 59 60 60 60 ", "59 60 59 60 59 60 61 59 61 60 60 59 59 59 59 59 59", " 61 59 61 59 60 60 59 59 59 60 59 61 60 59 60 59 5", "9 59 59 60 59 59 60 59 60 59 60 60 59 59 59 59 59 ", "60 61 59 60 60 60 60 59 59 60 61 59 59 60 61 59 59", " 61 60 59 59 59 60 60 59 60 59 59 60 60 59 59 59 5", "9 60 59 59 61 59 59 59 59 61 61 61 60 59 60 60 60 ", "60 59 59 59 61 59 59 60 60 59 59 59 59 60 59 59 61", " 60 60 59 59 61 60 59 59 59 59 61 61 59 59 61 59 6", "0 61 61 61 60 61 61 60 59 60 61 59 61 59 61 59 59 ", "59 59 61 59 59 59 59 61 59 60 61 59 61 59 59 59 59", " 59 59 59 60 61 61 59 59 59 59 61 59 59 59 59 60 5", "9 59 59 59 61 61 60 59 59 60 59 61 61 59 59 60 61 ", "60 60 60 59 61 59 60 59 59 59 59 59 59 61 59 59 59", " 59 59 60 61 59 60 59 59 59 59 60 61 60 61 59 59 6", "0 60 61 61 60 60 59 59 59 59 61 60 59 59 59 59 60 ", "59 59 61"};
    vector<string> lengths = {"3 3 2 1 3 1 1 2 1 3 2 1 3 3 1 1 2 3 1 1 1 1 1 3 1 ", "1 3 2 3 2 3 1 1 3 1 1 2 1 1 1 2 1 3 1 1 1 2 3 3 1 ", "3 1 2 1 2 1 1 1 2 1 2 3 1 1 1 1 3 1 2 1 1 3 1 1 1 ", "1 3 2 2 1 2 1 2 3 1 1 2 1 1 2 3 1 1 2 1 1 1 1 1 1 ", "2 1 3 2 1 2 1 1 2 1 1 3 3 2 2 1 1 1 1 1 2 1 1 1 1 ", "2 1 2 3 2 1 1 2 1 1 1 1 1 1 3 1 2 3 1 1 1 3 1 1 1 ", "1 1 1 1 1 3 3 3 1 1 1 1 1 2 1 3 1 3 2 3 1 1 3 1 2 ", "1 3 2 3 2 3 2 2 3 1 2 1 1 2 1 1 3 2 1 1 1 1 3 1 2 ", "1 1 1 3 1 3 2 3 3 2 1 1 1 1 1 1 3 3 1 3 1 2 1 1 3 ", "1 1 1 3 3 3 3 1 1 1 2 2 2 2 2 1 3 3 1 1 1 1 2 1 1 ", "2 2 1 1 1 3 2 1 1 1 3 2 3 3 1 1 1 1 1 1 2 1 3 2 1 ", "1 2 3 1 1 1 2 1 2 1 2 1 1 2 1 2 1 2 1 1 2 1 1 3 1 ", "1 1 1 2 3 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 ", "1 2 3 2 1 1 3 2 2 3 2 1 1 1 2 1 2 1 2 1 1 1 1 1 1 ", "1 1 1 1 1 3 1 1 3 1 1 3 1 2 1 2 3 1 1 2 1 2 1 1 2 ", "2 1 3 1 3 3 1 2 1 2 3 1 1 1 1 2 3 1 1 1 2 1 1 2 1 ", "1 3 3 1 1 1 1 3 1 2 2 1 1 1 1 1 3 1 1 1 1 1 2 1 2 ", "1 1 3 3 2 1 3 2 3 1 2 1 1 3 1 1 2 2 3 1 1 1 1 1 1 ", "1 1 1 1 3 2 1 3 1 1 1 1 3 1 1 3 2 3 1 2 1 2 1 2 2 ", "3 1 2 1 3 1 1 1 2 1 1 2 2 1 3 1 1 3 1 2 1 1 3 2 1 ", "3 2 1 1 1 2 3 3 1 2 1 1 1 2 1 2 1 3 1 1 1 1 3 1 3 ", "1 2 1 1 2 3 2 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 3 2 1 3 1 3 2 1 1 1 2 2 2 1 1 2 2 1 3 3 3 1 1 3 ", "1 1 1 2 2 1 3 3 1 1 1 1 3 1 2 1 1 2 2 1 2 1 1 1 1 ", "3 3 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 3 1 1 3 1 3 1 ", "2 1 3 1 1 1 3 1 1 1 3 3 1 1 1 1 2 2 2 2 2 2 2 1 3 ", "1 1 1 1 3 1 1 3 3 1 2 1 1 1 3 3 1 1 1 1 2 1 2 1 1 ", "1 2 1 1 1 1 3 1 2 3 1 3 3 2 3 1 1 2 1 2 1 1 2 3 2 ", "1 1 3 2 1 3 3 1 2 3 1 1 3 3 2 1 1 3 1 1 2 3 1 3 1 ", "2 3 3 2 3 1 1 2 1 1 1 2 1 1 1 2 1 1 3 3 2 1 1 1 1 ", "3 2 1 1 2 1 1 3 1 3 1 2 1 1 2 1 2 3 3 2 2 1 1 1 1 ", "2 1 1 2 2 1 1 1 1 2 3 2 2 3 3 1 2 3 2 2 1 1 3 2 1 ", "2 3 2"};
    vector<string> names = {"KQ U C IZ AN Z WA E M A IP UI G U S SD O W M S I Y", " NU DO A I Q N S E P C GR K XA G S V E EF M V L S ", "AY BU S J O L A U A UC A QC S O W EV E QK WO A AM ", "BA V DV B A NL G M HO O AV QO N K UO CU G Q O A W ", "L V Y Y B Q Q Y U A Y C J C EQ Q H OO WE MV W I U ", "OG N JG Y G C L S F H G G A E P WG K K Z GY J E WG", " K N E N AM S ME Y A V HU O FC A I A M MA K UR I S", "A U AS Y A A B S I K S U O W X WY K N GT W K ZU KQ", " C H U M FO C U R Q R AA A Y Y NH U C O C QK W Q G", " NG G W V AY A YU N M Y N G A A X AE JI A AE J A M", "M W KS W I A O A WK C CX K Q XO E KB Q OE OA J K Q", " I J IG V Y Q S K S N F PY SM K L Z I KA N AM U Q ", "N K WM L J AO C Y B M W E Y A QM W Y Q W C N Y YQ ", "Q M AB K Q M T B OQ K U QA E A T V QA Q A AU A W J", " W A ML Z P G O AK RE M JS RA RZ E SY IP E Z E N A", "O E D I U C H L QU F C HF SO YA K N A A C W Q S KM", " CG Q G H GA V B G M W I I M FO S G Z AM A I SM U ", "E Y YQ AL IS CG L I N Y SA S GN A K A Z G R I D UM", " K Y K WE UM UQ H U GJ WS C A K T GV K B G Y C WG ", "T H C C K E JC Y G W PU M Y Q A OB N S A C D O PM ", "F O W P Y R V W R Y A UY Y O A FN YO AE A Y H A WY", " YR O V J N A E W Z S NP M T I I IQ U UO Y R EI UW", " FG N A N Q L ZA E Z G AW Z U C A NQ O I Z Y Q O M", " S GK A U M W OY U A A D WK K IS A AQ U OU ON R A ", "N U RP C KS MK S EM C CJ MU YS H RA R A F AM HE AQ", " QC K KK K SH GA G K UJ J ML U BI Y I IW C S M M I", " W VR RA A K E J OK IX H E J YC L MN S Q H K W I U", " K T W QC KS A O K A A C N C W Y Q UA N M U W N S ", "E M I U RB Y Y QP G QQ K W V O S C WN K M A A E Q ", "K O T W E N Y W N VG J H A U E KE K C O C S W G U ", "B J R K O G N A E MO C K C J U N A SA WQ A O W D U", " P D Q Q C Y M D J C W LB OO G N UZ NN O C A LH I ", "ZI U Q W I CA Y U GN Q SW Y UZ G QC O A S D IQ EO ", "O I C C S U A UY N VE K QB AZ G M TU K QL CJ K A Y", "A W Q Y E E Z TW I C M CP UM G H Z S K I H G D T A", "O P S LA M A WT MK J M Q A K I S I IW U U I AG Q R", "N U G SR V ZM C"};
    int k = 282;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 78: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 78: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test79() {
    vector<string> x = {"61 59 59 59 60 61 59 59 61 59 59 59 59 60 61 59 59", " 61 59 60 59 59 60 59 59 59 59 60 59 61 59 59 59 5", "9 59 60 61 60 60 59 59 61 60 60 60 59 59 60 60 59 ", "60 59 59 61 59 59 61 59 59 59 59 61 59 59 59 59 59", " 59 59 60 59 59 60 60 61 60 59 61 59 59 61 59 61 5", "9 61 59 59 59 61 59 60 59 61 59 59 61 61 59 59 59 ", "60 61 59 59 61 61 61 59 59 59 59 59 61 59 61 61 61", " 61 59 61 60 59 59 61 59 59 60 59 59 59 60 60 60 5", "9 59 59 59 59 61 59 59 61 59 61 59 61 61 59 59 61 ", "61 59 61 59 59 60 61 59 59 59 61 59 59 59 61 59 61", " 59 59 60 59 59 59 59 59 59 59 59 61 59 59 61 60 5", "9 59 59 60 59 60 59 60 59 61 60 59 61 61 59 59 60 ", "59 59 59 59 61 59 61 61 61 59 61 60 59 59 59 59 61", " 59 59 59 60 60 59 59 60 61 59 59 59 60 59 59 61 5", "9 60 61 61 59 60 59 60 60 61 61 60 61 59 59 59 59 ", "59 59 61 59 59 61 60 59 61 60 60 60 60 59 59 59 59", " 59 59 59 59 59 59 59 59 60 60 59 59 59 59 59 59 6", "0 59 60 60 60 59 61 59 59 59 59 59 61 60 59 59 60 ", "59 60 59 61 61 59 60 59 59 60 59 61 59 59 61 59 60", " 61 59 61 59 61 59 60 61 61 61 61 61 60 59 60 59 5", "9 59 59 61 61 59 59 59 59 59 59 59 59 59 59 59 60 ", "60 61 61 59 59 59 59 59 59 61 59 60 59 59 59 59 59", " 61 61 59 60 60 59 61 59 61 59 60 59 59 59 59 61 5", "9 59 60 59 61 60 61 59 61 59 59 59 59 59 60 60 59 ", "59 59 59 59 59 59 61 59 59 59 59 59 61 59 60 61 61", " 59 59 59 61 59 59 59 59 59 61 59 59 59 59 59 61 6", "0 61 59 60 59 59 59 60 59 59 59 59 59 59 59 59 59 ", "61 61 59 60 60 61 59 59 59 59 59 59 61 59 59 59 59", " 59 61 59 60 59 61 59 61 59 59 59 59 61 59 59 60 5", "9 60 61 60 60 60 59 59 60 61 59 60 59 59 59 59 59 ", "59 59 60 59 60 59 61 59 60 60 59 61 61 59 60 59 59", " 59 60 59 60 59 59 59 59 60 59 59 59 59 60 61 59 5", "9 59 59 59 59 59 59 59 60 59 60 59 61 61 59 60 60 ", "61 59 60 59 59 61 61 59 60 61 59 59 61 59 60 61 61", " 59 59 59 59 61 59 60 59 59 59 61 59 61 59 59 59 6", "0 61 59 60 59 61 59 61 59 59 60 59 59 59 61 60 61 ", "60 60 60 61 59 59 61 61 59 59 59 59 60 59 60 59 60", " 59 61 61 60 59 61 59 59 61 59 59 60 61 59 59 59 6", "0 59 61 59 59 59 61 60 59 59 59 59 60 61 59 59 59 ", "59 60 60 59 60 59 61 59 59 59 61 60 59 59 59 60 59", " 59 61 59 59 59 59 59 60 60 59 60 59 59 59 60 60 6", "0 61 59 59 61 59 60 61 61 61 61 59 60 59 59 59 61 ", "59 60 59 59 61 59 61 61 59 59 61 61 59 59 59 61 59", " 59 59 59 61 59 59 60 59 60 59 61 59 60 61 61 61 6", "1 59 60 59 59 60 59 59 60 59 61 61 59 59 61 60 59 ", "59 59 60 60 60 59 59 59 61 59 60 59 59 59 60 61 59", " 59 59 59 59 60 59 60 61 59 59 60 60 59 60 59 59 5", "9 59 61 59 61 61 59 60 59 59 60 59 59 61 59 59 60 ", "59 59 61 59 59 60 60 60 59 59 60 60 61 59 61 60 59", " 61 59 59"};
    vector<string> y = {"61 60 59 59 59 60 59 60 59 61 59 61 59 60 59 59 59", " 59 59 59 59 59 61 59 60 59 61 59 59 59 59 59 59 6", "0 60 59 61 59 61 59 60 61 61 60 59 59 59 61 60 61 ", "59 61 59 59 59 59 61 59 59 59 59 59 60 59 60 60 59", " 59 59 59 59 59 60 59 59 61 59 59 61 59 59 59 60 6", "0 59 59 59 60 59 60 61 59 59 60 59 60 59 59 59 61 ", "59 59 60 60 59 60 59 59 60 61 61 59 59 59 59 60 61", " 59 60 60 60 59 59 61 59 60 60 61 59 61 59 61 59 5", "9 61 59 59 61 60 61 59 61 61 61 61 61 59 60 59 61 ", "61 60 61 60 59 59 59 60 59 59 59 59 61 59 59 59 60", " 61 60 60 60 61 61 59 61 60 60 61 59 60 61 60 61 6", "0 59 60 59 59 59 61 61 59 61 60 59 60 59 59 59 61 ", "61 59 59 59 59 60 61 59 59 59 59 61 59 59 59 61 59", " 59 59 59 59 59 59 59 59 61 59 59 59 60 59 60 60 5", "9 59 61 59 60 59 59 59 59 59 59 61 59 61 59 60 60 ", "61 59 59 59 59 59 59 59 60 60 59 61 59 59 59 61 59", " 59 59 60 59 60 59 59 59 59 60 59 59 59 59 60 59 5", "9 59 59 61 59 60 60 61 59 59 59 61 61 59 59 60 59 ", "61 59 59 59 61 60 60 59 60 61 59 59 61 60 59 60 59", " 60 61 59 61 59 59 59 59 59 59 61 59 61 60 61 59 6", "0 59 61 59 59 59 59 59 60 59 59 61 60 61 60 61 59 ", "59 61 59 59 60 61 59 59 59 60 59 59 61 61 59 60 60", " 61 61 59 59 60 59 59 59 59 60 61 59 59 59 60 59 6", "0 60 59 60 61 61 59 59 59 59 59 60 59 59 59 61 60 ", "59 59 59 61 59 59 59 59 59 60 61 59 59 59 61 60 61", " 59 59 60 59 59 59 60 61 59 59 61 59 60 59 61 59 6", "1 61 61 59 59 60 61 59 60 61 60 59 60 60 59 60 60 ", "59 59 59 61 60 60 61 61 59 61 59 59 60 60 59 61 60", " 59 60 61 61 59 59 61 59 59 59 61 59 60 59 60 61 6", "1 59 59 61 60 61 59 59 60 61 59 61 59 60 61 60 60 ", "59 61 61 59 59 59 59 59 59 59 59 60 59 60 60 59 60", " 61 59 59 61 61 59 60 59 59 61 60 60 59 60 61 59 6", "1 61 60 59 60 60 59 59 59 61 59 59 59 60 59 59 60 ", "59 60 60 60 59 60 59 59 60 59 59 60 59 60 59 59 60", " 59 60 59 61 59 59 60 60 59 60 60 61 59 60 59 60 6", "0 61 60 59 60 60 60 61 59 60 61 60 59 60 60 60 61 ", "61 61 59 59 61 59 61 59 59 60 60 60 60 59 60 61 61", " 59 59 59 59 59 59 60 61 59 61 59 60 59 61 59 60 5", "9 59 59 59 59 59 59 61 59 61 59 61 59 59 59 61 60 ", "61 59 59 60 60 61 61 60 60 61 59 61 59 59 59 59 60", " 61 59 60 59 59 61 61 59 61 59 61 59 59 59 61 59 6", "1 59 59 60 59 60 59 59 59 59 59 60 61 59 61 61 60 ", "61 61 61 59 60 59 60 59 59 60 59 59 60 59 59 59 59", " 59 59 59 59 59 60 60 61 61 61 59 59 59 59 60 59 5", "9 59 60 61 60 59 59 59 59 59 59 59 61 59 61 61 59 ", "60 60 59 59 59 61 61 59 61 59 59 60 60 61 59 59 59", " 61 59 60 59 61 61 61 59 60 59 59 59 59 59 61 59 5", "9 60 61 61 59 60 61 59 61 60 60 59 61 59 60 61 59 ", "61 59 59 61 59 59 59 61 60 59 59 59 60 59 60 59 61", " 59 59 59"};
    vector<string> lengths = {"2 1 1 1 1 2 3 1 1 2 3 1 1 1 3 2 1 1 1 1 2 3 1 2 2 ", "1 1 2 3 3 1 1 3 1 3 1 1 2 1 1 2 2 1 1 2 3 1 2 3 1 ", "2 2 3 1 1 1 1 2 1 2 2 1 1 2 3 1 1 1 1 1 1 2 1 2 1 ", "3 1 2 2 1 1 1 1 3 3 1 1 1 3 2 1 1 1 1 1 2 2 1 3 1 ", "1 1 3 3 3 3 2 1 3 3 1 1 2 1 2 1 3 1 1 2 1 1 1 3 2 ", "1 2 3 1 2 1 2 1 2 1 3 1 2 1 1 3 3 1 1 2 3 3 3 1 1 ", "3 1 3 2 1 3 1 2 1 3 1 3 3 1 1 1 1 1 1 3 1 1 3 1 1 ", "1 3 1 3 3 1 1 1 1 3 1 1 2 3 3 3 1 1 1 1 1 1 2 1 1 ", "1 1 1 1 2 1 2 3 2 1 2 3 1 1 2 1 1 1 1 3 1 1 1 1 1 ", "2 1 1 2 1 1 1 1 1 1 2 2 3 1 1 3 1 3 1 1 1 1 1 1 3 ", "2 2 2 2 3 3 2 2 1 2 3 1 2 2 3 2 2 3 3 1 1 3 2 2 3 ", "3 1 2 3 1 1 1 3 3 3 1 3 1 1 1 1 2 1 1 1 1 1 1 1 2 ", "3 3 1 1 3 1 1 1 1 2 1 1 3 3 1 1 1 2 1 1 1 1 3 2 2 ", "3 1 1 1 1 1 1 3 2 3 1 3 1 1 2 3 3 1 2 3 3 1 3 1 1 ", "1 1 3 1 1 1 1 1 3 2 1 3 1 1 1 1 2 2 2 1 1 3 1 1 3 ", "1 2 1 1 2 1 1 2 1 1 1 1 1 1 1 1 3 1 3 1 1 1 3 1 1 ", "1 1 3 1 2 1 1 2 2 2 2 1 1 1 1 2 2 3 2 3 1 1 3 1 2 ", "1 1 1 2 2 1 3 1 1 2 2 3 2 1 1 2 2 1 2 3 1 3 1 1 2 ", "3 1 3 1 1 1 1 3 3 3 1 1 3 2 2 1 1 3 1 3 1 1 1 3 2 ", "1 1 1 2 1 1 1 1 3 1 1 1 1 3 1 1 1 2 2 2 1 1 1 2 2 ", "1 1 2 1 3 1 1 2 1 1 3 1 1 1 3 1 3 1 2 3 1 3 2 3 1 ", "1 1 3 2 1 3 3 1 1 2 3 1 1 1 1 3 2 1 2 1 2 2 1 1 1 ", "2 2 1 1 3 1 1 3 1 1 2 1 1 1 2 1 1 2 2 3 1 1 3 3 1 ", "1 1 1 1 1 3 2 1 1 2 3 1 1 3 2 1 3 2 2 1 2 3 3 2 1 ", "2 1 1 2 3 2 2 3 1 1 1 2 1 1 3 2 2 3 3 1 3 1 1 3 1 ", "3 2 1 1 1 2 3 3 3 1 2 1 1 1 1 3 1 3 3 2 2 1 1 1 1 ", "1 3 1 1 1 2 1 2 3 1 1 1 1 2 1 1 2 3 1 1 1 1 1 1 2 ", "1 1 1 1 2 1 1 1 2 3 1 3 2 3 1 1 1 1 2 1 1 2 2 3 1 ", "2 1 1 1 2 1 3 3 1 1 3 1 1 2 2 1 1 1 1 1 3 1 3 1 1 ", "3 1 3 2 2 2 1 1 2 2 2 1 3 1 2 1 2 2 1 3 2 1 1 1 1 ", "1 1 2 3 3 3 1 2 1 2 1 2 3 1 2 1 2 1 1 1 2 1 1 1 1 ", "1 1 1 1 2 3 3 1 2 2 3 3 2 1 3 1 3 1 2 1 3 2 2 1 1 ", "1 3 1 1 1 1 1 1 3 1 1 2 1 1 3 1 1 1 1 3"};
    vector<string> names = {"N Y W GA A IK P C W K J H S E CB O NU W M AK M A S", "E W A X I S V AC E B G G MH K A C SU T L D W P G C", " G A VW M OS W MD A V PJ EN S N GJ S K YC P Q D M ", "Y M G A FM P S R QS N N P X N T W S E C K C G K A ", "I O W O YU CQ K UO ZA II KF I G M N E CI G O R N O", " N V UC P Y K SM EE O UC WC A FW A O WK EK C SU IU", " K K O S C A LW R QW G I A K I Z XU GA MI S F K M ", "HB Q R SW Y G G W S U A O UI C K Y K I CC S E U W ", "A L S C AU ZN I JB X M E KV GM Z KY Q A H NA N U B", "A GW Z N M G MQ OJ K M I QE ZG BV A F IK K HA G YU", " XN E S G W I W I D A G Y N N L BY KP Q Y O S UQ K", " I A C C UR S Q H K V QN CE E H Z I K XJ S K IM C ", "K R U U AS C CK SN U J Q G J EA SA Q A EE G W D R ", "W T A IQ GI OC A AM Q G E Y QY I V C C AU A A NK G", " D Q DA TC SQ O S K X Y A N Y L YA Z OC W S L A N ", "K KK W D R Q Z J K I F G DE M N UA P AF J S I N J ", "K N D A O S U M U U Q F YQ Y K S GZ D L A EP U K L", " I C V X G F VN A U G A S M W W KG WA Y FQ K A UC ", "N O C K V S I M L G E Q MU K A N B C V I X D S G H", " K N A E X Y U WK Q L H M M DE HM G R A V O S A A ", "SC OY F S N G F O WB G M B Q L MA K E J M F S IQ A", "G U LN M A KP XU N AR VI E QU V KZ G E A Q V QA IE", " QI NW K N O C QV G S O M AK I E S AE C SG W U Y E", " C G S W U F I N J I W S S A Y NC Z GZ WZ B W A L ", "KO S G F JI O MN E YO Q E D M QU G G C R IC A W I ", "LA I V MA J X K P K RS E E YN Y U GD DM W X M AI Q", " A KE L UA V U J G QJ M UA I S C J YI EB AS W E Q ", "V A A D U N GE Y CI I M WD W O G B WA E AM X NU Y ", "M A Q N E MC AQ G U D A Y O O LM G A W L M M W Y A", " Y IU SA S U JA M Q YJ M S S TB GA GQ AD S O S OU ", "Q Y O L WI X PZ E G E O V KP O EE UA E A H W Q F Y", " I U K M E P PX G D I A NC Y Z XA X IK Q U Q M WQ ", "AS GS WC EE V Y GS O X AE W M FC S GV ID G A G GG ", "K A PC Q LE F O C A W GY E Y M MN J H AO N A JC O ", "K K T C M H HU G R O U U K F M O Y N C O A KA G Q ", "P Y A YC Q W G Y P R SA D G Y S A W B W B AO ST B ", "UD I U IA MI DM I PU Q NS NC K GS Q IH K AM T FR"};
    int k = 208;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "C", "C", "A", "AR", "C", "C", "C", "C", "D", "DE", "E", "E", "F", "FM", "G", "GI", "GJ", "GS", "GY", "H", "I", "IM", "J", "K", "K", "K", "K", "K", "KE", "KP", "L", "M", "M", "M", "M", "N", "O", "P", "PC", "PX", "QN", "R", "RS", "S", "S", "S", "SN", "U", "U", "V", "V", "V", "W", "W", "WC", "Y", "Y", "YI", "Z", "A", "A", "A", "A", "A", "A", "A", "A", "AD", "AE", "AO", "B", "B", "BV", "C", "C", "C", "CC", "CI", "D", "D", "D", "E", "E", "E", "E", "E", "F", "FQ", "G", "G", "G", "G", "G", "G", "G", "GA", "GS", "GS", "H", "HA", "I", "I", "I", "I", "I", "IA", "IE", "J", "J", "K", "K", "K", "K", "KO", "KP", "L", "L", "L", "L", "LM", "M", "M", "M", "M", "M", "M", "M", "MN", "N", "N", "N", "N", "N", "N", "N", "NK", "NU", "NU", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "OC", "PJ", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "QA", "S", "S", "S", "S", "S", "S", "S", "S", "S", "SA", "SW", "T", "T", "T", "U", "U", "U", "U", "UC", "UR", "V", "V", "V", "V", "W", "W", "W", "W", "W", "W", "WI", "WK", "X", "X", "X", "XU", "XU", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "YO", "Z", "Z", "Z", "Z"};
    if(result == expected) {
        cout << "Test Case 79: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 79: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test80() {
    vector<string> x = {"9 9 2 7 4 4 1 9 1 3 1 1 2 8 5 4 7 1 7 1 8 3 1 5 8 ", "4 7 8 1 6 9 7 9 7 7 8 2 7 9 3 8 2 1 7 8 3 3 1 7 4 ", "6 3 9 4 7 1 2 3 4 4 7 4 1 3 5 7 4 1 7 9 4 1 6 4 7 ", "6 1 7 9 1 1 1 8 5 9 9 4 1 8 3 4 7 9 1 1 7 4 7 6 7 ", "1 3 7 6 5 1 6 3 7 4 2 3 7 7 1 1 9 3 2 6 4 4 2 1 1 ", "5 6 8 4 1 3 4 4 8 6 2 1 9 8 1 2 6 1 2 7 2 6 4 9 4 ", "1 1 8 6 7 7 7 6 9 1 1 5 2 7 7 3 7 4 2 1 2 2 9 9 1 ", "8 8 2 7 1 7 4 7 7 1 1 2 8 2 2 4 9 1 4 7 4 5 2 9 1 ", "4 2 4 1 1 4 1 4 1 3 8 1 1 2 6 6 1 3 7 4 5 4 4 3 1 ", "7 9 1 4 3 7 9 1 4 7 1 3 7 5 5 4 7 1 3 4 1 7 4 6 1 ", "3 1 2 4 1 7 1 1 7 7 1 2 9 7 7 3 3 5 5 9 7 4 6 5 7 ", "9 7 7 9 6 9 1 1 1 1 7 7 1 9 8 6 4 2 7 8 7 1 6 7 1 ", "6 1 7 9 4 5 4 5 1 9 7 1 1 1 1 1 1 5 9 4 3 1 1 3 8 ", "2 7 3 7 3 6 4 4 1 4 9 4 1 7 5 6 4 1 4 6 4 7 4 2 7 ", "4 4 1 4 1 6 1 7 9 1 2 7 8 1 1 1 7 2 6 4 5 7 9 7 8 ", "1 7 7 4 7 1 3 2 1 1 9 3 5 9 3 1 7 1 8 1 9 5 4 3 4 ", "1 4 4 3 4 5 7 1 1 7 6 5 1 4 1 6 6 4 5 8 4 7 4 4 1 ", "4 1 4 6 3 9 6 2 7 6 4 1 3 8 9 3 4 2 1 3 7 1 2 4 1 ", "5 1 1 3 4 2 3 1 8 4 8 9 8 7 1 4 4 3 2 3 3 3 7 5 7 ", "1 9 3 7 8 7 5 7 4 4 5 7 3 4 6 7 2 1 8 7 1 1 4 2 7 ", "1 3 6 7 4 4 7 3 8 4 6 2 8 4 1 1 1 4 7 4 3 1 2 9 4 ", "2 1 4 4 7 4 8 7 8 5 7 1 1 7 4 1 1 4 9 6 1 1 6 9 5 ", "6 7 7 7 7 8 4 4 1 6 9 5 7 3 9 8 1 6 7 7 4 4 1 3 1 ", "4 1 7 8 1 5 4 4 8 4 5 5 2 1 1 3 1 1 4 2 6 1 7 4 6 ", "4 5 1 3 4 3 5 7 5 1 7 1 1 4 1 6 7 7 7 4 4 4 1 5 8 ", "8 7 1 9 7 1 6 2 1 1 3 9 4 1 7 2 8 1 1 8 1 7 1 8 1 ", "1 3 1 1 8 1 9 2 1 8 7 1 1 5 7 1 9 5 1 7 3 1 3 4 7 ", "1 4 6 1 2 1 7 6 7 7 8 9 7 8 2 8 9 2 7 4 7 4 1 1 8 ", "7 9 4 1 4 4 4 6 8 8 1 2 5 7 1 5 1 5 5 7 1 7 3 9 1 ", "7 9 3 9 1 1 8 7 1 1 6 5 1 3 5 4 5 4 3 5 1 1 1 6 4 ", "4 3 1 1 7 4 8 4 8 1 7 7 9 7 6 4 7 4 1 1 1 1 9 7 3 ", "5 1 7 2 2 9 2 4 5 8 7 2 1 2 4 4 6 2 7 4 1 4 4 1 1 ", "3 9 4 7 1 3 1 1 1 7 8 6 1 3 1 7 2 1 1 2 1 3 1 4 3 ", "3 1 3 9 4 4 4 4 5 1 3 1 6 5 1 5 5 7 4 7 8 6 1 2 7 ", "3 3 4 7 8 9 4 5 7 2 3 3 7 9 4 4 7 2 3 6 7 8 5 1 1 ", "2 9 7 9 1 1 1 4 8 4 9 7 1 5 1 4 2 8 2 9 7 7 2 1 1 ", "6 8 6 4 4 8 2 3 6 1 3 2 7 3 3 4 7 5 9 7 7 4 7 7 2 ", "7 5 7 4 4 1 7 1 4 7 6 5 6 1 3 1 5 1 1 5 5 1 3 1 1 ", "2 9 3 2 7 4 5 1 6 9 1 8 9 4 1 7 6 8 6 1 3 4 1 3 4 ", "1 1 1 7 9 4 5 8 4 1 8 5 1 4 4 1 1 1 4 3 9 1 7 9 6 ", "2 1 6 8 2 1 4 7 7 3 1 7 1 7 1 5 8 8 4 7 1 8 7 3 6 ", "7 2 3 7 9 3 3 4 5 6 1 1 1 8 1 4 6 9 4 4 1 1 5 8 6 ", "7 1 5 8 4 7 7 6 7 1 7 7 4 7 4 4 7 7 5 1 1 1 4 2 1 ", "9 1 4 7 7 8 5 7 7 4 1 2 4 2 7 2 7 4 4 1 6 6 1 2 7 ", "1 3 5 6 4 7 5 2 4 1 1 5 1 1 6 1 6 4 8 1 4 4 1 1 6 ", "4 7 1 7 2 7 1 2 6 4 9 1 2 9 9 5 4 1 1 2 1 3"};
    vector<string> y = {"1 3 4 9 4 7 3 1 9 7 1 7 4 7 6 1 1 1 4 1 9 1 1 1 7 ", "9 7 2 8 7 9 2 4 9 2 7 1 6 6 9 4 6 9 6 8 3 7 7 7 9 ", "1 3 7 9 4 1 9 2 6 3 5 3 7 7 6 3 7 7 3 1 1 5 4 4 9 ", "7 1 1 2 7 7 8 1 4 7 1 8 9 9 4 5 4 5 7 1 8 7 3 7 4 ", "1 1 4 1 9 2 1 7 4 1 7 1 7 8 1 1 3 1 1 4 3 6 4 1 1 ", "6 6 1 7 4 6 1 3 1 1 2 1 4 8 6 7 4 7 4 5 8 7 4 4 9 ", "1 3 1 7 4 7 1 4 4 4 7 5 5 1 9 1 9 7 8 1 2 1 3 1 2 ", "2 1 3 1 3 1 1 7 4 4 5 9 7 7 8 4 1 4 1 1 4 1 8 1 1 ", "1 4 5 4 4 7 1 4 1 6 1 4 4 4 7 4 1 9 5 1 4 7 9 9 1 ", "7 4 2 4 1 2 7 1 1 1 2 5 6 6 8 1 6 1 8 5 3 7 8 9 1 ", "5 9 7 2 1 9 3 7 7 5 4 5 1 7 5 9 7 2 1 6 1 5 4 5 1 ", "4 6 9 4 8 1 4 5 7 9 3 6 1 3 2 7 3 4 1 9 1 9 3 8 1 ", "1 1 6 3 8 7 7 9 3 1 1 1 5 6 4 4 1 1 1 1 1 1 1 6 7 ", "1 1 1 4 9 1 6 1 2 6 7 9 2 4 1 6 7 4 4 4 7 5 7 5 7 ", "8 2 5 1 4 2 1 4 8 4 1 9 1 3 2 8 3 2 7 8 8 9 4 7 8 ", "3 7 1 1 6 8 2 9 2 1 2 2 1 4 4 4 6 1 7 1 4 2 4 4 4 ", "4 7 6 1 3 1 1 1 6 2 5 9 6 1 1 2 9 4 4 8 1 5 6 6 1 ", "9 1 1 4 8 1 1 2 6 7 1 1 2 4 5 1 7 5 1 3 2 1 3 1 1 ", "8 7 8 2 5 4 1 6 1 5 8 1 1 1 4 1 9 9 8 3 1 9 5 3 3 ", "9 4 4 3 3 7 5 7 8 4 1 2 1 1 7 9 7 3 7 9 1 8 5 4 7 ", "2 2 4 7 4 7 3 1 7 1 4 1 2 9 7 3 6 5 2 1 3 8 7 4 1 ", "7 1 4 5 4 2 4 8 4 5 1 8 1 1 1 1 5 2 5 8 7 7 3 1 5 ", "4 2 1 1 6 1 8 1 1 7 7 4 7 4 5 1 1 7 1 6 1 1 9 1 4 ", "4 1 5 8 8 8 1 1 1 9 9 8 2 2 5 3 6 2 2 8 1 9 1 5 1 ", "1 2 4 1 1 1 1 1 1 4 4 9 1 1 4 2 1 7 5 7 1 4 4 1 5 ", "4 3 9 1 1 5 1 7 6 8 7 4 7 1 3 1 5 7 4 1 3 2 1 5 2 ", "3 1 7 2 4 1 3 3 4 4 1 1 7 8 3 6 1 8 3 7 8 3 5 1 4 ", "4 1 4 7 3 1 3 4 6 5 1 5 1 1 7 1 1 4 3 8 1 3 4 1 1 ", "7 8 1 5 1 3 5 2 9 7 2 1 6 4 8 7 4 8 2 5 4 4 1 3 1 ", "9 4 2 5 1 3 9 6 2 7 1 2 5 1 1 7 3 2 9 7 7 1 4 3 8 ", "8 7 5 6 9 4 9 7 2 5 2 1 4 1 3 4 7 1 8 2 1 1 1 1 6 ", "8 5 1 2 1 6 3 4 7 4 8 5 3 1 1 2 1 4 4 4 2 7 9 7 8 ", "4 9 1 4 4 4 9 1 6 7 8 1 1 5 5 8 8 8 9 8 1 1 8 7 5 ", "6 8 5 2 9 8 1 7 1 5 2 8 9 4 7 1 1 4 4 1 4 5 1 1 5 ", "6 7 4 3 6 3 4 5 9 7 5 1 3 1 6 4 2 2 2 1 1 1 4 6 6 ", "1 5 9 1 1 5 6 8 1 8 4 6 9 4 9 9 8 3 8 7 2 8 1 7 2 ", "1 6 1 5 1 2 3 4 5 9 1 3 8 2 6 1 9 2 4 3 9 5 7 3 4 ", "3 1 6 4 3 9 9 5 2 1 1 1 1 7 2 5 4 8 1 6 8 8 5 1 7 ", "3 1 7 2 4 9 1 7 3 7 1 5 1 1 3 4 7 2 1 8 1 2 9 7 3 ", "1 1 1 4 6 1 6 1 6 9 5 2 2 7 8 7 6 7 4 5 7 7 1 4 2 ", "1 7 5 8 9 6 1 1 7 1 1 9 7 7 3 9 1 8 1 9 4 1 1 7 7 ", "4 1 3 2 1 2 4 8 5 1 4 4 8 2 7 1 9 9 1 1 4 5 3 3 1 ", "1 4 4 1 1 3 6 1 1 2 6 1 4 7 6 1 6 3 5 6 1 7 8 4 7 ", "1 8 5 8 4 5 7 2 7 7 4 1 8 5 8 2 5 4 6 4 1 8 1 2 5 ", "7 4 4 1 7 1 1 6 1 4 9 4 4 1 1 6 9 8 1 1 5 1 9 2 5 ", "6 3 1 4 7 9 9 1 4 1 4 1 4 4 1 3 1 4 9 7 6 3"};
    vector<string> lengths = {"6 1 5 4 3 2 8 7 9 4 7 1 9 7 7 4 2 4 9 8 1 1 4 5 1 ", "5 9 7 3 2 3 2 6 5 1 2 1 5 7 7 6 4 2 9 7 4 1 1 3 3 ", "7 8 4 9 2 4 1 7 2 1 4 8 1 4 1 1 5 1 7 1 4 1 7 9 5 ", "1 5 1 7 5 8 5 7 1 1 7 1 1 7 7 7 2 1 4 8 2 7 1 8 1 ", "7 7 1 6 2 6 9 6 1 8 5 2 1 1 5 6 4 4 4 1 4 4 7 3 1 ", "3 1 2 1 9 4 7 9 1 1 3 1 1 1 5 8 6 4 1 1 1 1 4 1 4 ", "9 2 9 7 1 4 4 1 7 1 5 1 2 7 6 1 8 5 7 4 5 7 9 2 4 ", "4 6 2 7 5 1 9 1 1 1 4 9 3 7 5 1 5 2 7 4 2 5 5 1 7 ", "7 8 7 1 9 9 8 7 4 5 3 1 7 4 3 5 3 3 4 4 1 1 1 4 6 ", "4 8 7 3 1 6 9 9 1 2 6 9 4 2 8 1 7 7 1 7 1 2 3 8 4 ", "7 7 7 6 4 5 7 4 7 7 1 2 9 6 3 4 7 1 5 1 1 1 9 1 4 ", "4 7 4 1 4 8 4 2 4 6 5 1 7 5 7 7 1 4 5 7 2 7 5 7 7 ", "4 2 4 9 4 1 5 8 4 7 3 4 5 5 5 3 3 1 7 5 8 1 6 9 8 ", "6 1 1 1 1 1 4 2 5 3 4 6 2 1 6 4 3 1 8 1 1 9 5 6 2 ", "1 1 1 5 6 7 4 6 1 8 4 7 9 1 9 4 7 4 1 6 1 4 1 5 1 ", "8 6 1 4 9 2 4 8 7 4 9 7 8 8 4 1 1 8 1 8 1 2 5 4 6 ", "1 3 6 5 1 6 2 7 9 7 1 7 8 1 1 7 7 5 1 7 4 1 4 6 7 ", "6 7 1 9 1 7 1 1 2 1 7 9 2 2 4 2 9 1 4 3 4 5 9 4 7 ", "1 7 7 1 8 4 5 2 1 7 7 4 8 5 1 1 1 7 3 8 4 1 6 6 4 ", "6 8 1 7 1 9 3 1 1 1 7 4 5 3 1 6 4 6 5 3 4 1 1 5 4 ", "1 2 7 2 8 7 1 1 1 8 9 8 9 7 1 4 2 8 1 3 7 1 3 1 7 ", "1 3 1 1 1 5 7 9 3 4 3 5 3 4 1 5 7 1 8 7 6 4 1 1 3 ", "8 7 4 4 3 4 5 4 1 7 3 7 3 3 1 7 6 4 4 8 8 3 1 4 8 ", "1 1 1 1 1 1 2 4 5 8 2 1 1 1 9 3 1 5 8 8 4 3 4 3 5 ", "1 3 7 1 4 5 1 1 4 7 1 6 7 8 3 1 1 8 8 8 1 8 7 3 1 ", "2 1 5 3 3 7 1 4 7 7 4 6 7 5 5 8 4 5 3 4 4 7 2 7 6 ", "4 4 1 6 5 5 6 8 7 1 7 4 1 1 7 1 1 3 5 4 3 7 1 4 8 ", "9 3 3 1 1 5 8 9 6 1 1 3 3 1 7 1 8 1 2 7 3 4 1 3 7 ", "5 1 6 6 1 7 7 3 4 1 1 2 8 2 1 1 2 6 1 1 7 6 4 1 1 ", "8 9 7 7 1 1 1 2 5 5 7 6 4 9 1 3 1 7 8 9 3 7 9 1 6 ", "8 6 1 8 6 1 7 4 1 4 2 4 1 1 3 9 7 4 4 2 2 7 1 4 3 ", "4 1 2 7 4 4 1 1 1 4 1 1 7 4 8 6 1 4 8 2 7 5 4 5 8 ", "1 1 1 1 4 5 3 4 1 7 7 9 8 7 6 8 9 7 1 6 4 1 7 4 6 ", "7 7 1 3 7 6 7 3 1 3 8 1 7 1 4 4 9 5 9 8 4 1 6 3 6 ", "1 7 4 4 2 1 4 1 8 7 1 8 4 1 1 9 4 5 6 2 6 7 5 2 4 ", "7 9 9 1 1 4 6 7 5 1 7 5 5 2 1 7 7 7 3 1 1 2 1 8 7 ", "7 1 3 8 4 3 7 8 6 5 5 5 7 7 9 4 7 7 1 7 4 4 7 6 9 ", "1 4 9 9 1 4 9 1 6 8 4 5 4 7 4 7 6 4 1 4 6 7 4 7 2 ", "3 5 1 4 1 8 1 4 7 8 5 2 6 1 9 7 6 7 1 1 1 1 6 9 2 ", "7 4 7 8 3 1 1 3 8 5 8 1 5 6 6 4 2 1 5 8 7 1 4 7 9 ", "1 1 2 5 5 1 6 4 2 1 1 1 5 1 1 3 9 9 6 1 1 5 6 4 4 ", "6 5 9 3 1 5 2 3 6 6 1 8 1 4 9 9 2 1 2 1 6 2 2 4 9 ", "7 4 4 7 1 1 2 7 9 2 1 2 1 6 1 5 4 3 6 9 1 7 1 7 4 ", "8 2 2 7 4 3 1 7 6 9 7 9 4 7 7 7 5 4 7 1 1 7 8 7 9 ", "3 2 7 9 6 2 3 1 7 9 4 8 9 8 7 3 9 1 7 7 4 4 5 1 5 ", "4 1 2 1 3 9 1 1 1 8 3 4 7 7 4 9 3 2 6 9 1 4"};
    vector<string> names = {"D U I U I E G S A Q O Y C V S Q W X A J W A E M W ", "Y U N L C U C U Z U G N W M Y X X M A O C U J O E ", "A I A K X H J O N J G O E U N Q A H N Y H J G G K ", "C B F C W E Q G D G A E T K Y Y K D F E E W U E K ", "K M Q A E B A G M I W O C B C G A Q C N W K N A W ", "I E U E G T T O P M W G M G A O Q S F M S Q Q U E ", "A Q A A A M A A H P A K U X D W E X T H Q K C S E ", "A G S I G O Y I M S A V W R W G K B W W I D X S A ", "W N K A A V Q Z X S G G W W B P K H K Y C Q M F Q ", "A A U Q G Q E I D L N A O A E S O W N U A R P M T ", "A I B M G A W O E Y C T A U M A H M I Q K H K A N ", "U Q Y K W O I W S I W H I Z E V O I U Q K K K G Q ", "S U A A U F W T W A D A Q Q B Y W U D A G N Q N U ", "A X B I P L Y Z W A M Y A A Y S A P O K I Q O G N ", "K K F U C A Q C M C W M M O D I A Q A K O Z A C Y ", "E U Q Y Q G A I U G F Z J O S U M O C G K N O K A ", "B E Y C Y U G R Z G M T G D C D Q S N Y Q W F O E ", "H A V E M G R W A I Y C E W T B X D Q W K Q O C K ", "S G W A U B I A C U O Y M S I K D E E A A C G A R ", "H S J T P Q Q Y Y Y V Y R P W U F G K K D M U Y M ", "A M N G O R Q Q Y A Q E L S M N S A M G B A U E A ", "M M S B A R H A Y E X M S G L Y V I C O U E Y F C ", "W Y S C I Q R D K I X U G Z I Y Q A X S U H N Y O ", "I U D X A J W O E K C W O A C U P E A S C A V N S ", "F H E U U S G T O A B D K E A A N Q A W D T A A U ", "Z S C A Y A W A Y W E S W C I Z I E Y B W A Y K S ", "U C A V Q S E O O P Q I A W R M T E M K C M K I M ", "A I J W D K E Q Z M P U A O E S R W G G Q I O E M ", "Q B Q Q W L Y E D J D T H A P I U A K C C S X X Q ", "V S A A M F Q E G U E I K L M A I Z N Z B R P E A ", "Y U A A I K C E E L R M Q J W O F Y E F W V C S A ", "K B S A K V D M O K G G M O G X E Q I S M W Z W X ", "W O V X G B T C W G Z W G A Q U K C M C Q I M Q I ", "I Q Y I R M K Q S K S C E U N E A I K A H Q C L B ", "A Q C F C O M Q Q D W G E Z C Y C H O G K E E I Y ", "A E N A P G A K O P O Q M N O X F G W K A U C G P ", "K G S A G G V M K K L U K A C K G Q C A W Q P Q Q ", "U K W Y E C M I Y S V S N J N B A Y U F L A K T Y ", "P M M S U Y U U O A E L A Y Q U J A G W A W M G A ", "M W N M A I B J O Y E H F U W V Q A W A Q E T M C ", "W F M N U F M A C Y Y S I Q A E A G B C J F A A K ", "H I W A G G C U O N E M A P L P G X K E Q N Q M C ", "K A D E Z P E A C B F A U Y O X A Q M S W L A K I ", "E S Y Y R G I K G K Q I Q A G I Y D N M X K Q A A ", "Q T Y G T Y A Y C H O G E Y U E F A Y A E T X Y S ", "M N E Y J T M Q M S O A O U Q W O J D B T D"};
    int k = 10;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A"};
    if(result == expected) {
        cout << "Test Case 80: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 80: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test81() {
    vector<string> x = {"7 8 2 4 1 5 6 9 2 1 4 8 9 4 6 6 4 3 7 2 3 5 4 7 1 ", "3 1 7 2 5 7 7 7 1 8 6 8 8 7 6 9 3 1 4 1 9 5 2 8 2 ", "1 8 3 4 6 4 6 2 1 6 4 4 8 1 7 3 1 1 1 4 7 6 6 7 7 ", "1 1 3 7 5 2 9 6 3 6 4 9 1 9 1 8 1 8 1 1 8 2 1 7 3 ", "7 7 1 1 9 7 9 1 3 4 6 1 7 4 7 7 4 4 1 1 5 1 5 1 5 ", "2 9 8 1 1 5 8 2 8 6 1 3 5 2 1 6 1 1 3 3 2 2 2 4 6 ", "1 1 4 2 5 3 9 1 1 1 3 1 7 6 3 4 1 6 4 2 1 4 7 3 5 ", "7 1 1 4 7 9 6 6 4 6 1 7 6 9 4 6 2 7 8 4 4 8 1 4 7 ", "6 4 4 1 9 7 1 1 5 1 4 7 7 6 5 3 7 7 3 4 8 7 2 5 2 ", "2 1 1 7 4 1 9 3 2 7 8 1 6 5 7 1 6 7 4 2 4 2 7 9 4 ", "6 1 1 1 5 2 2 1 1 4 7 1 4 7 7 3 6 5 7 8 9 5 7 9 1 ", "7 1 7 4 6 3 1 9 4 5 7 3 7 6 8 1 1 3 8 6 3 2 1 3 8 ", "2 5 7 5 1 5 6 3 5 9 6 5 1 3 1 5 7 1 2 7 2 1 1 1 9 ", "2 1 6 3 4 2 8 1 2 5 1 2 8 7 2 8 1 8 9 1 8 5 1 1 7 ", "1 6 9 2 1 9 6 8 9 4 1 8 5 5 8 6 7 1 7 7 8 2 7 5 2 ", "8 7 1 5 1 4 1 8 3 1 4 1 1 8 4 7 4 3 1 2 2 1 1 3 3 ", "1 4 1 9 1 1 4 4 1 9 4 4 2 1 4 1 1 1 1 7 1 2 5 1 1 ", "4 3 8 8 1 7 1 2 1 7 8 4 5 9 7 1 8 1 2 4 1 5 1 6 4 ", "4 3 7 3 4 3 8 8 4 7 4 2 6 1 4 4 3 1 4 1 3 5 7 8 1 ", "2 9 4 7 7 4 1 1 4 6 9 7 1 3 1 1 6 5 3 7 7 9 1 9 3 ", "8 4 8 3 7 3 2 3 1 4 1 7 2 1 1 7 9 6 6 4 1 8 3 8 9 ", "5 7 6 8 1 3 3 4 7 9 1 1 2 8 4 3 7 1 4 6 1 1 1 1 1 ", "4 7 4 1 1 5 6 8 1 4 2 5 2 7 7 1 8 3 4 4 1 4 9 2 7 ", "7 8 7 1 6 4 9 2 2 4 5 5 1 1 4 5 1 4 7 1 7 1 2 6 1 ", "9 1 7 6 1 7 4 9 3 2 6 4 5 5 5 7 2 2 4 3 2 4 1 4 2 ", "5 1 1 3 7 1 1 2 1 8 5 2 1 5 2 3 4 1 2 7 3 7 1 7 1 ", "8 6 1 1 9 7 1 5 3 1 1 3 6 1 1 4 7 5 7 6 4 9 7 7 9 ", "9 3 7 4 1 7 5 1 3 7 7 5 2 1 6 9 1 2 4 2 4 8 9 9 1 ", "1 1 7 5 2 6 6 7 5 5 5 6 3 5 3 9 9 4 7 1 1 1 3 1 1 ", "1 7 7 7 6 1 3 3 5 6 7 7 4 9 3 8 2 6 2 1 5 9 1 5 4 ", "2 2 6 4 7 7 1 8 7 1 6 7 5 4 8 6 4 1 6 8 4 3 4 9 1 ", "7 9 3 3 5 9 5 5 2 2 4 4 3 1 7 8 1 4 4 9 1 9 8 8 1 ", "1 3 4 8 1 4 1 6 1 1 9 8 1 9 4 4 4 5 2 1 1 3 8 5 8 ", "5 4 1 4 8 1 7 7 4 1 8 1 3 4 3 3 8 7 4 1 1 9 6 7 4 ", "8 6 3 1 4 5 8 2 3 3 1 3 3 1 6 4 1 7 6 1 1 1 6 1 5 ", "2 4 1 8 4 1 7 3 7 1 9 7 7 7 7 4 1 1 4 4 7 5 8 1 7 ", "9 1 1 1 4 6 9 6 9 2 2 1 3 3 1 2 7 6 7 1 7 4 6 1 8 ", "5 6 4 6 3 5 4 1 5 4 4 4 1 2 7 6 7 6 1 7 3 7 8 3 7 ", "4 3 2 4 7 2 7 5 3 1 4 1 1 4 6 1 2 1 4 4 3 7 6 4 9 ", "4 6 7 1 9 7 8 1 2 5 5 1 4 1 5 4 3 6 8 8 6 8 6 3 7 ", "4 1 1 5 1 1 6 8 8 5 7 8 4 8 1 9 1 4 7 6 8 2 7 4 2 ", "7 6 9 8 8 5 2 8 6 4 4 1 7 7 1 7 7 8 1 1 4 9 3 4 1 ", "1 7 4 3 2 4 1 8 1 2 1 3 7 4 4 5 4 1 4 8 4 9 1 7 1 ", "1 6 3 7 1 7 5 1 1 1 3 3 1 6 9 1 6 9 4 1 1 1 4 3 8 ", "4 1 1 5 7 9 6 5 7 3 9 7 7 1 2 1 7 1 4 1 2 3 2 1 4 ", "1 7 4 3 2 9 8 9 3 6 4 8 1 7 1 1 1 4 3 1 1 4 1 1 6 ", "4 1 8 2 1 5 1 5 1 7 9 4 1 5 8 9 5 5 3 6 1 1 4 6 4 ", "1 4 6 6 1 8 1 4 9 1 4 6 6 5 4 9 4 6 7 7 9 7 8 1 7 ", "1 6"};
    vector<string> y = {"2 4 1 3 7 7 7 7 4 5 3 1 9 3 2 7 3 5 7 4 1 4 1 4 9 ", "7 7 4 8 8 5 4 7 7 4 3 7 9 1 8 2 5 9 7 1 9 4 7 3 7 ", "6 1 4 2 7 2 2 8 5 3 1 3 1 1 4 4 2 1 8 2 8 6 1 6 6 ", "8 3 7 8 7 6 7 2 8 7 1 3 1 4 4 6 4 7 1 8 4 1 9 1 1 ", "1 1 1 1 1 5 3 4 6 5 1 1 4 7 1 9 1 1 6 1 7 6 4 1 7 ", "7 4 1 4 7 4 1 7 4 2 3 2 4 2 9 1 3 7 6 5 7 8 3 6 1 ", "9 2 6 1 1 5 6 7 7 1 4 2 4 7 6 1 3 1 2 4 9 1 1 7 1 ", "2 8 3 9 4 1 1 1 1 1 4 7 2 6 1 2 4 2 4 2 3 6 4 3 7 ", "1 5 8 4 7 6 2 7 4 7 4 1 7 1 1 9 4 6 1 8 1 5 8 8 7 ", "1 7 8 7 3 8 7 6 7 7 2 1 8 8 8 2 6 4 1 7 1 6 9 2 1 ", "1 2 8 7 9 8 4 4 1 2 7 1 1 1 8 8 1 6 1 8 7 8 4 1 1 ", "9 2 6 8 4 1 4 4 3 1 8 7 5 1 9 1 7 1 1 2 3 8 2 5 7 ", "8 3 6 1 3 6 7 5 9 2 9 5 2 3 1 9 2 9 1 5 4 1 4 6 1 ", "1 4 3 6 8 4 7 7 7 4 9 6 5 6 8 7 1 4 8 1 7 7 6 2 2 ", "6 7 6 7 1 1 7 9 1 7 8 6 9 3 8 7 7 4 5 2 1 1 5 1 8 ", "9 2 4 4 8 2 4 1 9 2 1 5 7 5 4 7 5 2 4 2 7 8 6 6 6 ", "8 9 1 7 7 2 5 6 1 5 7 5 4 3 7 1 7 1 7 7 9 8 1 7 6 ", "6 2 1 1 1 1 2 8 3 7 7 1 6 9 1 1 4 6 1 3 2 7 7 1 8 ", "1 7 9 2 7 1 4 1 6 5 8 1 1 1 3 6 8 4 6 7 5 2 4 3 4 ", "3 3 1 3 2 1 8 1 1 9 4 3 4 1 5 4 5 1 6 4 1 5 6 8 9 ", "3 1 1 3 3 7 3 5 3 3 6 5 1 8 4 4 4 1 4 1 1 5 5 5 1 ", "1 3 6 2 3 7 9 1 8 3 1 1 3 6 1 4 1 8 1 9 4 2 1 4 1 ", "3 4 3 7 2 1 3 4 8 5 2 4 1 5 7 1 1 7 4 2 7 3 1 5 3 ", "1 6 2 1 4 6 8 4 1 1 1 1 1 5 1 5 4 8 4 1 8 4 7 7 1 ", "6 1 1 1 4 8 1 7 1 1 9 1 3 4 7 4 1 3 1 7 5 8 1 1 3 ", "2 6 1 1 2 3 1 3 8 4 1 7 3 9 4 4 7 1 1 2 4 2 3 7 6 ", "1 1 1 7 1 8 1 1 9 4 1 8 2 3 8 5 1 7 8 4 4 8 7 6 7 ", "6 3 5 9 3 1 9 7 1 2 2 5 1 2 5 1 5 1 6 6 1 6 4 1 9 ", "1 7 4 1 4 4 1 5 4 4 6 1 7 9 4 1 1 4 1 8 1 1 1 4 4 ", "2 9 6 7 3 1 4 1 4 2 3 4 7 1 1 7 2 5 9 7 1 1 9 1 7 ", "6 9 4 1 1 6 3 1 1 4 1 8 7 1 2 1 1 2 8 1 5 7 1 4 3 ", "5 3 4 4 5 4 1 3 3 1 2 3 5 4 2 4 2 6 1 2 2 1 1 7 4 ", "4 1 1 8 1 2 7 6 8 1 1 4 1 5 4 1 9 4 9 4 3 5 8 9 1 ", "2 4 3 4 7 7 9 4 7 2 7 7 4 7 3 1 3 1 2 8 1 1 6 8 9 ", "4 1 6 2 2 2 7 7 1 4 1 5 1 4 5 5 2 3 1 3 4 2 6 5 5 ", "1 5 1 7 1 2 9 6 3 2 7 1 1 7 1 9 4 3 3 8 7 8 8 4 6 ", "1 7 7 6 3 7 5 1 9 4 3 7 4 7 4 2 1 4 7 6 6 9 1 4 2 ", "1 1 9 1 4 4 4 8 8 9 7 2 7 1 2 7 2 7 4 1 1 7 1 4 8 ", "4 8 2 8 6 7 4 9 4 4 7 7 1 1 1 5 5 4 3 6 4 1 7 4 1 ", "1 7 4 4 1 4 3 2 8 9 6 7 1 3 6 3 3 1 7 1 1 7 3 5 4 ", "1 4 4 1 6 1 7 6 1 2 4 1 2 9 2 9 1 1 1 2 1 3 7 3 6 ", "1 1 2 4 4 1 4 7 9 1 7 7 5 8 9 7 2 4 3 4 1 9 1 7 1 ", "7 6 4 1 9 5 6 7 1 9 1 7 1 1 1 3 7 8 5 5 8 3 4 5 8 ", "4 9 7 6 4 9 3 2 3 9 5 4 3 7 3 2 3 7 1 3 1 7 4 3 2 ", "1 4 2 4 1 4 1 7 1 1 7 5 1 4 1 2 4 3 1 4 1 6 1 9 4 ", "4 9 1 7 9 8 6 8 1 3 4 1 7 7 7 7 7 7 5 9 7 4 4 8 2 ", "7 1 6 1 4 4 7 5 7 6 9 2 7 1 7 7 1 1 2 1 8 5 7 8 3 ", "6 8 5 1 1 7 2 1 1 7 4 1 3 5 7 1 8 1 1 9 6 2 1 6 4 ", "1 5"};
    vector<string> lengths = {"5 7 1 1 2 5 6 1 4 5 1 7 7 1 5 9 4 9 1 1 9 4 1 4 9 ", "1 3 5 4 8 3 2 8 9 4 1 6 6 3 2 1 1 9 7 4 1 7 1 1 1 ", "8 5 1 5 5 7 6 9 1 1 1 1 9 1 7 4 5 9 5 1 4 5 2 7 3 ", "9 3 9 9 7 1 1 1 4 1 1 1 9 4 4 2 1 2 2 2 1 1 4 7 1 ", "1 1 9 4 4 4 1 1 4 7 1 1 3 3 4 2 3 2 4 5 1 4 4 9 1 ", "1 2 7 4 4 4 9 1 1 4 1 8 4 3 6 9 5 3 9 1 1 8 2 4 4 ", "8 1 9 6 4 4 2 1 4 1 7 1 1 6 8 3 2 1 4 6 4 1 1 1 7 ", "1 5 5 1 3 8 6 9 7 7 8 8 6 1 4 6 2 7 2 1 6 4 7 7 1 ", "9 1 4 4 7 4 1 1 2 1 7 1 2 4 2 2 2 7 6 1 4 8 2 7 3 ", "8 2 5 1 1 5 6 7 6 8 1 4 2 3 8 7 4 4 4 7 5 8 7 4 2 ", "7 7 1 3 7 2 9 5 3 8 8 1 1 8 7 7 8 7 7 6 4 7 7 7 4 ", "5 4 9 1 5 7 7 1 2 8 1 8 7 3 7 1 1 1 1 6 1 1 1 4 1 ", "7 6 6 7 4 9 4 7 4 7 4 3 7 6 7 1 1 1 7 7 4 7 4 2 7 ", "3 1 7 1 1 3 7 1 1 3 1 3 1 5 1 8 9 8 4 7 6 9 9 4 7 ", "7 1 1 3 5 7 5 7 1 6 1 8 7 8 1 7 6 1 3 1 6 2 5 2 4 ", "1 1 2 7 2 5 5 6 8 4 6 6 5 1 2 1 7 4 7 7 6 6 1 2 4 ", "6 2 5 1 7 4 3 1 1 2 1 4 7 9 7 1 8 9 8 4 1 4 7 6 5 ", "4 1 8 8 4 5 6 3 4 4 8 3 8 4 2 5 2 5 2 1 5 7 1 1 2 ", "3 6 6 4 3 9 3 5 5 5 7 7 5 2 3 7 8 4 1 9 1 1 1 8 1 ", "4 7 4 2 1 6 7 7 4 9 1 1 7 1 3 1 6 6 2 3 4 1 5 8 8 ", "1 1 1 1 1 1 5 1 9 4 8 6 3 8 1 2 2 3 1 2 7 8 8 9 1 ", "7 5 1 1 8 6 4 1 1 1 8 8 4 1 5 8 1 1 8 7 3 3 9 6 4 ", "5 4 7 1 3 4 1 6 6 9 1 2 1 4 1 1 4 6 2 9 7 7 1 7 5 ", "6 3 1 9 7 3 4 9 1 2 7 2 5 1 7 1 1 4 3 2 2 4 1 3 7 ", "6 9 7 1 4 9 1 1 4 7 7 1 1 1 5 7 6 1 6 4 9 1 4 4 4 ", "1 1 4 7 1 7 4 2 9 1 8 6 1 1 1 9 2 5 1 2 4 5 3 6 9 ", "7 1 1 6 1 9 5 8 8 1 4 7 1 6 6 8 8 4 4 3 1 7 6 3 7 ", "3 9 9 1 7 4 2 3 1 6 1 1 2 8 8 1 1 4 7 1 9 7 7 4 2 ", "3 1 7 7 1 1 6 6 5 1 9 4 7 4 7 1 1 1 4 7 1 9 7 1 5 ", "8 5 7 4 1 6 7 4 9 3 6 5 5 7 1 6 1 4 8 5 2 7 1 8 5 ", "8 4 1 1 1 1 3 1 5 1 1 8 8 1 5 7 2 5 7 2 1 5 4 5 3 ", "8 4 5 8 7 1 4 4 4 5 1 4 2 3 9 9 6 1 1 1 1 2 1 6 8 ", "7 3 1 1 4 3 3 6 1 8 7 6 4 7 5 7 2 2 1 4 6 7 7 6 3 ", "2 3 7 2 1 4 3 1 7 1 4 8 5 9 6 4 1 6 1 7 1 2 6 1 7 ", "3 1 1 3 1 4 7 6 4 6 1 1 5 7 3 1 1 1 9 8 7 2 5 6 7 ", "9 7 4 3 5 1 1 1 2 6 7 9 2 7 2 7 1 8 5 7 3 1 7 5 8 ", "9 5 9 5 3 8 7 2 1 5 1 4 4 4 1 5 9 4 1 2 5 3 7 4 7 ", "3 2 3 7 2 2 1 6 7 6 8 1 8 7 9 9 8 1 1 8 4 1 1 1 7 ", "6 7 4 1 7 9 9 5 1 4 4 5 9 1 8 1 3 9 1 4 4 9 1 1 1 ", "2 7 7 2 8 1 4 6 3 7 6 4 1 6 7 2 1 9 1 5 1 1 1 4 5 ", "4 9 1 1 6 1 4 7 4 3 1 4 5 6 4 6 4 4 8 3 1 8 3 6 5 ", "3 1 9 1 8 2 4 5 1 7 3 5 4 1 7 5 7 1 7 6 1 5 6 1 1 ", "2 6 3 8 5 1 8 5 1 1 7 1 3 7 7 7 4 9 4 7 6 2 7 1 1 ", "1 9 8 5 1 1 8 7 4 7 3 4 2 1 1 4 7 3 6 4 1 1 4 1 9 ", "8 1 4 7 2 8 1 4 1 9 1 4 4 8 1 4 2 1 7 2 3 6 4 4 5 ", "1 7 2 8 4 1 4 6 4 4 5 4 3 1 9 4 6 3 7 8 7 9 2 3 7 ", "4 1 1 7 4 6 2 1 1 7 2 7 5 1 7 5 4 7 6 4 8 6 1 4 1 ", "1 7 8 7 5 3 7 8 1 1 4 4 1 6 7 6 2 6 5 8 7 8 6 8 4 ", "7 1"};
    vector<string> names = {"W Z W Z P M S A I I Q K A K B U X O Y Z G K U K E ", "G W G A F Y A E Q O R O Y Q J Y P M H O E X I E Q ", "C A T W H Y B B W E C S V N G W H C W C M D U G V ", "Z A Q V E A Q K D G H Y C C I M A E S U S Q Q N Q ", "O I L I G Q G K D W Q S M G T U L G L Y A U A H G ", "L A A Y Q D A Y V A J J A W G C S K O Y E Y U Y A ", "O O E C X Y S D K E U F S U Z Y Q T M Z U A M W Q ", "S O E N S I Z Y I I Q M H A N Q A U S K Y K M W I ", "A U T U E R M I U C F G E E M A Y O X K Z A K C E ", "A E C L T B S A A I C A A A Z D E A M O A W Y K H ", "A C N S B Q Q U V E G F O W Y N E T Y M P E O Y I ", "N S E F Y W C U A O D N G I B G O A N A H U A M O ", "I P J Y G G C M A K Q D I M R A O K Y Q I H S Y S ", "Q N L N V C D M M C U H A N N E R Q I W I U F I G ", "A X U A A Z Q Y R Y O X D G G E Q E U M I A A N M ", "D S C A W J L Q A G Q O S Z K F P N G E S U P W K ", "X E Y A Y A I U K A K K I V T C Q K B S R K U F I ", "E K L A O S E U K M F D D S L C I T U Q B U C O A ", "F P K K K U C Y E K A O O O J M Q M A D W P M U I ", "B W G C Z Y O O E E A L U I N M S A M W M I N X Y ", "I S H K N M T U K Q A M A C N G K Y A S Y A I N U ", "O S Q O G U I J A A E O W E A Y N M V W Q U A K J ", "Y A Y C P G W Y M U N V C Q L U P A M W H C X C G ", "Y A K S K M I V B N Q Y Y K J W O S O A E X Q Y O ", "Z C S L X S U U Y W D K G S C A U I V A A A A K A ", "C G C G J X A J C V D E J E I Y L A N M E V R E C ", "S K K E K V W S M I A M Q K U A Q I Z L L A U A I ", "M U U G W N O O A G F G E H M A A G K A Q U Q E F ", "W B H M Y Q W K M M A K K G K Y O D R C S W A K Y ", "W S I A A A U I A T Q X A W Y A U Y A A S M E O K ", "A M S N M Q Q A A I M A P G W W E I C A K W N Y E ", "E O L S W H M Q A O C G U A O N O K I O L K T U O ", "Y S G N S E W U X Q W N U N M L A D A U G K S J T ", "L U Z A U I A O Q H U E C N B E F E O U E H X L Y ", "C B E K Y Z E O U M W M K Y N N G Y N N I G K Q U ", "C T Y T W A J U O Y I M I P A S A Y S F V I A G W ", "W K R L Z G S K T S M O O M X W M K H U A E G J E ", "P C Q Y I U R K X G O C K U G Z C H F A H A H I U ", "E N D S W Y U C I C C Z X U A I W A Q R G Z G U A ", "N U I M U A A A N E O Y O Q A Q C R O A G G E G O ", "M G S M U Z S D C I N V H O P M Z H Q D W N N Y Q ", "I G S A I S Q M S T A T O F G T O B B Y V E A E C ", "N F V I S Y A T T I Z Q K A J I A K M A I E O C V ", "X A A O W Q G B J A F O K Q D C L C F R J E W G S ", "Q Y X S U W A F A G M S E Y V Y C G L N H G A N G ", "C U A E E E Q R K O W V H U Y F Y F U G S O C P E ", "A Q S K I E R A V L U H P V T D O C J Q T U N S A ", "W W I U K O A C G A D A R O P Q U S X T Y H Q C V ", "M T"};
    int k = 18;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "C", "E", "F", "I", "I", "I", "K", "K"};
    if(result == expected) {
        cout << "Test Case 81: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 81: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test82() {
    vector<string> x = {"5 7 5 1 7 7 3 6 7 4 1 5 9 1 4 5 9 8 7 1 7 5 1 8 4 ", "1 9 5 8 1 8 7 5 1 5 7 1 3 2 6 6 1 4 2 6 7 4 4 1 1 ", "1 4 4 1 4 4 5 7 7 5 2 7 4 4 7 8 2 2 4 1 2 4 7 7 4 ", "7 3 1 7 6 8 6 1 1 6 4 7 1 8 6 8 3 1 1 2 6 1 1 4 7 ", "3 1 4 4 1 9 1 9 7 4 2 6 1 1 8 5 4 4 1 3 1 1 4 1 7 ", "8 1 9 2 6 2 7 3 4 7 7 7 3 1 2 4 3 1 4 5 9 1 1 8 4 ", "7 2 6 1 1 5 1 7 7 7 7 4 8 6 6 7 7 6 5 5 5 8 8 1 6 ", "1 7 6 6 9 7 1 9 4 1 1 4 3 3 4 1 3 8 4 8 4 7 1 1 7 ", "9 1 7 9 3 6 8 9 6 1 5 1 9 7 1 4 7 1 4 5 7 4 4 1 4 ", "4 1 5 2 7 3 7 7 1 4 9 6 9 7 4 9 1 4 1 4 1 6 7 1 8 ", "8 4 6 3 3 3 4 4 2 1 8 7 4 1 3 1 5 1 3 6 2 7 2 9 5 ", "2 2 7 3 2 2 9 9 6 9 3 9 1 2 4 6 1 6 4 5 1 9 7 6 2 ", "6 7 1 1 6 8 7 2 7 6 1 9 8 8 1 4 1 8 4 4 2 2 1 4 5 ", "1 6 3 1 9 9 5 5 8 4 7 4 6 1 1 7 1 6 1 7 6 1 4 6 5 ", "2 5 6 5 7 1 1 7 1 8 7 7 8 7 1 5 1 8 1 4 9 5 3 7 7 ", "7 1 1 6 2 1 8 1 1 8 7 1 9 1 7 1 7 5 4 5 2 7 4 4 4 ", "1 7 8 3 1 9 7 1 7 4 1 1 1 1 4 3 1 4 5 3 4 1 1 1 7 ", "1 1 1 3 7 1 4 3 9 7 7 1 9 6 4 6 1 5 1 1 8 4 6 5 4 ", "2 8 9 9 2 1 5 9 5 1 9 9 1 2 1 1 4 6 1 9 1 9 7 4 4 ", "1 7 1 1 6 1 4 7 5 1 6 5 1 5 1 1 1 7 7 1 3 1 1 2 1 ", "7 1 9 1 3 6 7 5 7 1 1 7 1 6 7 1 1 1 8 4 7 8 2 6 4 ", "4 4 4 7 7 1 1 7 1 3 1 1 7 4 8 5 8 7 9 4 1 3 1 8 1 ", "7 4 8 3 4 1 8 8 9 7 7 7 9 4 8 6 3 1 4 1 1 8 7 6 7 ", "1 4 9 1 7 3 7 4 2 7 1 7 1 2 6 6 1 8 4 6 7 1 1 7 7 ", "1 5 7 7 9 4 2 3 7 1 5 1 1 1 1 1 2 2 1 8 8 5 2 1 8 ", "8 8 1 2 1 1 1 4 4 5 6 1 8 7 8 7 3 2 6 7 7 1 5 3 3 ", "4 8 7 1 1 9 1 3 1 8 8 9 8 5 9 6 1 1 4 1 3 6 7 7 4 ", "4 9 5 9 3 1 7 6 8 2 1 4 7 2 4 4 6 2 8 7 3 1 2 1 6 ", "1 1 7 7 8 1 1 7 3 4 1 4 8 8 6 3 1 6 5 9 4 7 1 1 6 ", "9 7 8 8 7 7 8 1 9 1 1 7 4 5 7 9 1 4 4 7 3 4 4 5 2 ", "7 7 7 7 5 7 1 6 5 8 1 1 3 5 3 5 7 1 6 7 1 6 9 1 7 ", "2 3 9 2 2 9 7 7 6 8 7 1 4 7 1 1 5 1 4 9 1 9 1 4 7 ", "7 7 3 1 1 9 9 5 4 1 4 1 5 1 4 1 4 1 1 8 9 9 2 1 4 ", "1 7 1 7 6 6 1 9 7 1 1 1 1 1 6 6 1 4 8 5 3 3 1 1 4 ", "5 1 1 6 1 1 4 7 1 1 3 1 1 1 9 1 8 3 7 4 6 3 9 4 7 ", "2 2 1 4 8 1 5 3 8 7 1 6 2 9 8 1 1 4 9 2 6 2 1 4 1 ", "5 8 2 1 1 1 1 5 1 8 1 6 7 3 7 8 4 4 4 2 6 5 2 9 2 ", "2 5 8 7 1 8 9 6 1 1 7 8 8 5 9 8 5 7 4 2 8 1 7 5 9 ", "1 8 3 1 1 2 6 7 4 4 6 4 4 6 4 5 1 8 2 6 1 1 4 1 7 ", "4 8 5 4 1 9 1 3 1 7 6 1 6 7 6 4 7 1 9 7 2 7 9 4 4 ", "9 4 1 1 7 7 1 3 1 9 1 1 7 1 7 1 4 9 1 4 1 7 5 9 7 ", "1 5 5 1 1 4 2 4 1 2 9 7 9 5 5 9 5"};
    vector<string> y = {"1 1 4 4 8 8 5 9 9 1 3 5 1 6 1 1 5 1 7 1 9 5 1 4 4 ", "1 4 3 6 6 1 4 4 7 8 6 1 8 1 9 9 5 9 1 6 4 4 7 3 1 ", "7 1 4 1 2 1 7 1 4 7 4 6 5 1 2 1 6 2 1 4 9 7 8 7 2 ", "9 7 2 8 1 2 4 4 7 3 5 3 5 6 1 1 3 9 7 1 1 4 1 4 5 ", "6 4 4 7 7 5 3 9 1 3 7 2 1 4 6 1 8 8 9 5 7 7 1 1 4 ", "2 9 4 1 8 4 5 1 5 4 4 4 1 7 7 7 2 3 5 5 3 9 5 1 3 ", "1 4 8 2 2 7 1 4 6 3 1 7 1 7 3 2 5 3 1 1 8 4 9 2 7 ", "9 8 5 7 4 1 1 1 8 4 7 7 1 8 6 8 4 7 1 8 5 1 7 9 7 ", "1 4 4 6 1 2 6 9 8 4 3 7 9 7 1 3 7 9 1 4 6 1 1 4 4 ", "7 1 2 9 1 4 3 1 1 4 1 8 5 3 3 4 3 6 2 6 8 3 6 4 7 ", "3 7 1 4 7 4 7 1 6 1 4 1 6 1 1 9 4 1 4 1 3 1 6 4 1 ", "6 1 6 6 5 9 9 4 6 1 2 1 9 1 6 1 6 6 1 7 4 9 8 1 1 ", "1 7 8 7 2 6 4 6 7 4 7 4 4 1 7 9 2 7 3 5 5 4 6 8 7 ", "1 7 4 1 7 7 6 6 4 1 4 1 7 5 1 7 8 4 3 5 1 1 8 3 4 ", "7 9 7 4 4 1 3 2 9 1 7 1 4 9 4 1 4 9 1 1 9 1 1 4 1 ", "2 7 1 9 7 7 4 4 1 2 7 2 1 7 2 3 4 7 4 4 1 6 7 1 9 ", "2 3 5 1 4 7 7 1 1 1 7 1 1 8 9 6 6 2 5 1 7 1 1 7 4 ", "1 4 1 8 4 8 4 1 1 6 3 2 1 3 7 1 4 8 6 1 6 8 5 1 4 ", "1 1 7 8 1 5 6 4 4 8 1 5 3 1 1 7 7 4 9 9 5 7 9 6 3 ", "7 1 6 8 9 6 4 6 4 1 8 6 9 1 3 7 1 1 9 6 8 4 4 7 1 ", "1 2 7 2 6 1 3 8 1 4 8 1 8 1 6 1 1 3 3 1 4 8 1 4 5 ", "8 6 4 2 7 1 8 7 7 9 2 1 1 9 5 4 3 6 5 6 4 3 8 9 1 ", "5 4 2 1 2 2 6 1 6 1 5 4 4 9 2 4 1 4 2 1 4 8 1 3 8 ", "1 7 4 9 6 9 2 8 5 5 4 3 4 6 4 2 1 6 9 7 1 8 4 5 6 ", "5 5 4 1 3 3 2 7 1 7 5 1 1 1 8 9 1 1 1 1 7 8 4 7 1 ", "1 7 1 7 2 3 5 7 3 1 2 7 4 8 1 9 7 1 6 7 9 2 7 1 2 ", "1 2 5 7 8 2 4 3 3 6 7 7 8 7 5 5 9 7 7 7 6 4 7 1 1 ", "2 1 4 2 4 2 1 8 8 1 7 4 4 7 5 4 6 1 7 7 5 4 1 7 4 ", "2 6 4 1 2 4 7 6 4 1 6 3 4 9 1 5 3 7 6 7 7 4 5 9 4 ", "6 1 1 1 1 1 1 5 4 8 8 7 1 2 3 1 4 9 9 1 1 7 1 3 6 ", "1 8 1 1 1 9 9 7 1 1 1 8 7 8 1 4 7 1 6 6 4 1 2 1 7 ", "9 1 8 7 6 9 5 1 2 2 4 1 4 4 1 4 5 1 7 3 7 5 5 1 8 ", "6 1 9 1 1 5 5 9 1 1 3 7 1 7 5 7 1 5 5 5 5 9 4 6 7 ", "1 8 4 7 1 4 9 1 7 1 2 6 3 3 6 2 7 7 4 1 1 1 8 4 6 ", "9 7 4 1 7 3 1 5 4 6 1 1 1 1 8 1 1 9 8 6 8 8 4 2 5 ", "1 1 6 1 1 5 5 3 9 5 8 4 4 2 6 8 2 1 2 6 1 9 9 2 3 ", "3 2 4 4 4 4 1 9 6 4 1 8 3 4 1 7 6 4 4 3 1 2 2 7 3 ", "7 9 9 8 2 7 1 9 7 1 6 1 9 4 3 7 9 7 4 6 8 8 5 7 1 ", "2 8 1 1 7 7 7 1 1 7 6 1 1 1 3 1 7 1 5 9 1 1 8 4 6 ", "8 7 1 5 1 6 7 7 3 1 4 1 5 5 4 1 7 8 4 8 3 1 7 8 7 ", "8 6 1 8 7 2 7 4 1 1 6 6 6 4 4 3 4 1 1 1 1 2 8 1 5 ", "4 4 1 1 7 3 2 1 1 1 4 1 5 4 9 2 2"};
    vector<string> lengths = {"1 2 7 1 4 6 5 1 9 6 1 9 1 1 8 7 5 1 1 7 6 4 4 6 4 ", "2 5 7 3 9 6 3 8 5 1 6 9 5 2 1 6 8 1 5 7 7 7 4 7 4 ", "5 1 1 7 1 4 6 4 2 4 5 7 5 7 7 7 1 6 1 6 7 2 2 7 1 ", "4 4 4 7 7 7 1 1 4 4 6 4 7 8 1 9 6 4 1 8 9 7 4 8 5 ", "4 6 7 6 2 1 4 3 1 7 1 4 1 5 1 6 1 7 7 2 1 7 3 1 5 ", "7 9 8 2 9 7 1 4 6 1 7 7 6 1 7 2 5 4 4 1 1 1 1 1 2 ", "2 7 5 1 5 2 4 1 7 4 8 5 6 6 9 9 4 7 9 1 8 4 9 6 7 ", "1 6 8 5 6 7 7 7 9 2 4 2 8 2 4 2 6 1 3 2 4 8 8 9 8 ", "9 4 4 7 7 1 1 7 1 2 7 4 4 2 1 7 3 6 4 1 4 6 6 7 7 ", "7 7 4 2 1 9 4 3 5 5 4 3 8 9 7 5 2 4 9 7 9 7 8 2 3 ", "7 8 1 9 1 2 3 3 7 4 4 4 4 3 9 2 1 7 8 1 1 7 3 7 3 ", "5 4 1 5 5 1 1 7 5 3 6 2 4 1 8 1 4 1 4 8 1 5 3 7 1 ", "3 2 4 1 5 5 8 4 8 1 3 8 5 7 3 4 1 9 2 1 9 1 1 1 1 ", "3 2 1 7 1 4 4 5 7 1 5 9 9 7 7 7 7 1 1 3 7 6 1 1 1 ", "1 4 2 7 8 1 5 1 2 7 2 4 8 7 1 7 8 1 6 1 1 1 3 6 9 ", "5 3 7 4 1 7 7 4 2 5 2 6 6 1 9 4 6 1 5 1 1 2 9 1 1 ", "9 1 1 1 2 3 2 2 6 8 1 1 1 8 7 1 3 1 3 8 6 5 4 4 6 ", "4 6 7 4 9 2 7 8 5 4 6 9 8 7 1 1 3 9 5 1 1 7 8 6 1 ", "5 5 4 6 9 1 9 1 3 4 3 1 5 7 4 2 7 4 4 2 9 4 1 7 2 ", "6 8 1 4 2 1 7 1 4 1 1 1 8 1 8 4 1 7 7 4 2 8 7 4 5 ", "7 1 4 9 1 7 9 9 4 6 1 7 7 3 7 7 1 9 6 2 5 2 2 4 1 ", "4 4 7 5 7 1 5 2 2 1 2 9 3 1 5 1 9 5 3 9 1 3 1 8 5 ", "8 9 1 1 3 3 6 1 8 1 3 7 2 4 3 1 7 7 8 8 1 9 4 4 9 ", "3 4 2 1 1 8 2 9 4 6 8 9 5 6 2 6 1 9 8 9 7 7 3 1 7 ", "6 7 4 1 1 9 3 4 6 1 5 7 7 5 3 2 1 9 1 1 3 8 8 1 1 ", "1 1 1 8 1 7 1 4 4 8 4 7 5 1 1 1 6 1 9 5 1 2 2 1 8 ", "7 9 4 1 1 7 3 1 3 7 6 1 4 7 2 7 3 4 1 6 7 4 9 1 7 ", "4 3 7 5 4 1 2 5 1 5 7 7 1 1 9 7 9 5 8 1 9 6 1 9 7 ", "4 8 1 1 4 4 1 7 8 7 1 8 7 5 1 5 4 4 2 2 7 4 1 3 4 ", "1 8 6 1 8 1 5 1 8 4 9 3 1 1 7 4 8 4 8 5 5 1 1 6 4 ", "4 8 1 7 4 8 1 1 1 7 7 8 6 7 4 4 1 2 7 1 1 1 9 1 6 ", "6 1 2 1 7 3 7 1 2 1 4 7 3 5 5 1 8 5 7 8 5 1 1 1 3 ", "1 1 4 2 3 1 1 6 9 4 6 7 7 2 6 4 7 8 1 1 1 5 5 1 4 ", "4 8 7 7 1 8 1 3 5 6 4 7 3 5 2 1 7 7 2 1 1 1 1 4 4 ", "9 3 2 1 8 4 6 7 8 1 4 1 1 1 1 8 3 1 5 4 4 4 5 7 9 ", "9 3 7 1 1 7 5 6 5 2 3 3 4 1 1 6 5 6 6 3 8 4 7 9 8 ", "5 9 7 7 4 6 9 4 7 3 7 7 9 4 2 2 8 2 7 7 4 4 1 4 5 ", "8 2 1 5 3 7 9 8 4 5 1 1 5 1 4 8 4 1 8 6 9 8 7 1 4 ", "9 8 7 5 1 1 1 3 7 5 1 7 7 1 1 9 1 4 1 4 8 8 8 2 2 ", "2 1 5 7 1 2 7 2 5 1 1 1 4 9 6 1 1 1 6 8 7 1 1 4 1 ", "5 1 4 4 5 1 5 4 5 2 7 5 7 1 7 1 7 7 9 7 9 9 4 6 1 ", "7 4 6 1 4 9 1 1 7 7 1 8 4 4 5 7 1"};
    vector<string> names = {"E M X M E S M U G Z Y M K Q K I I U E G O K O T L ", "U Y G E E E R M K N E O M A R C N M M A U H Q U M ", "M P C U U K K E I B A X C D Y O O P U G A A N Q Q ", "A G R D E W D Q O K D N U M W R K X S A A Q N L S ", "S S K S Q N Z M D C M Y C A Q M Y E D B W H K S M ", "B U L W F M M A W O U V Q A G D W J M O C I M A Q ", "U S U C C E F E Q X T Y S I O O W N O W S U U S Z ", "W C K G M W O A C S S O G K K Z G Y E N A M M I S ", "K I Y U W N U O F K O I A P J A D S Z A S Y A A B ", "S I K S U O W X W C E T U G K G G F Y U D O C U R ", "Q R A K Y U N F N X V O N A I C I L O C Y A Y Y U ", "A I M G W A Z O O T M J A M W K E K O S E J L H M ", "J A K X B Q O F W C W P G K M H Y A Y X A U J E M ", "K L Z I K A N S M Z S U U B C A I W S O N N S A M ", "W Y Q W C N Y Y W A H U M F W P K P C K J X E V I ", "A Q A A I E A I Y X M L U J U F P U S R V R I R Q ", "T C A G O E D I U C H L Q E I N Y A Q A I H U G T ", "W S M C W Q U J U W F W I M O S B A U R A A S A M ", "U E Y Y L M A Y A A B N A S G K Q C I E G U E Z N ", "C L I A Q Q H U G B R U G Q Y J A K Y B O U S G A ", "W Q R C Y G W P C M Q Y R A Q E G G U C C I W Y Q ", "A O C C A A H L C Q E N Y D Z H U A T O E A Q F I ", "G K M I O P M T I I I Q R A K N Y A G N A N Q L Z ", "C E E H A E O W H G C A C A V W M O A Y J A U Y U ", "A A D W O Z Z A S D O N R A N U R I J G P O Z A J ", "M N N W C J J O Y E A D V Q J P A A G K U O P Y A ", "G Y E W S N K U K M R R C A Q K R X W P C C O G N ", "S Q H K W I U K T W Q B G C S Y W M M I Q W S W I ", "L E J E E B U Y Y M U A D P G Q A K Y A E Y F O C ", "E R U B I D O E N G E S Y M D A V U W F A W K E O ", "L A V I A A W A E Z K E O O C K C J U N A S V E U ", "Z H W Y K R O Q B U K B E L F W W B W Z N M I A T ", "A V U N M O T Y I E N Q S K Z Z S A D C C K E O O ", "I C C S U A U U P E A Y U C S U K Q Z M F A W N S ", "A R I C K N A O P U U G Y I E M C U O O L A U E C ", "H G S K J M Q A K I S I I G W U Z R W N C E A M M ", "C O T C K M B G U M K Q I I Y I B O N G K X B V J ", "K R N A E O S E A Q C Y H K A C S E A Y A A C Y A ", "A V W S A P I N W J E I G T Z E O N Q A S Y A X O ", "C U K M C S N N P X N T W S E C K C G K A I O W O ", "Y F Z E C K I K K W S K Q N Y I E A A A E H Z Y A ", "A R E O U J F E K C W Z K C S J A"};
    int k = 16;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "D", "H", "J", "O", "S", "U", "W"};
    if(result == expected) {
        cout << "Test Case 82: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 82: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test83() {
    vector<string> x = {"9 9 2 7 4 4 1 9 1 3 1 1 2 8 5 4 7 1 7 1 8 3 1 5 8 ", "4 7 8 1 6 9 7 9 7 7 8 2 7 9 3 8 2 1 7 8 3 3 1 7 4 ", "6 3 9 4 7 1 2 3 4 4 7 4 1 3 5 7 4 1 7 9 4 1 6 4 7 ", "6 1 7 9 1 1 1 8 5 9 9 4 1 8 3 4 7 9 1 1 7 4 7 6 7 ", "1 3 7 6 5 1 6 3 7 4 2 3 7 7 1 1 9 3 2 6 4 4 2 1 1 ", "5 6 8 4 1 3 4 4 8 6 2 1 9 8 1 2 6 1 2 7 2 6 4 9 4 ", "1 1 8 6 7 7 7 6 9 1 1 5 2 7 7 3 7 4 2 1 2 2 9 9 1 ", "8 8 2 7 1 7 4 7 7 1 1 2 8 2 2 4 9 1 4 7 4 5 2 9 1 ", "4 2 4 1 1 4 1 4 1 3 8 1 1 2 6 6 1 3 7 4 5 4 4 3 1 ", "7 9 1 4 3 7 9 1 4 7 1 3 7 5 5 4 7 1 3 4 1 7 4 6 1 ", "3 1 2 4 1 7 1 1 7 7 1 2 9 7 7 3 3 5 5 9 7 4 6 5 7 ", "9 7 7 9 6 9 1 1 1 1 7 7 1 9 8 6 4 2 7 8 7 1 6 7 1 ", "6 1 7 9 4 5 4 5 1 9 7 1 1 1 1 1 1 5 9 4 3 1 1 3 8 ", "2 7 3 7 3 6 4 4 1 4 9 4 1 7 5 6 4 1 4 6 4 7 4 2 7 ", "4 4 1 4 1 6 1 7 9 1 2 7 8 1 1 1 7 2 6 4 5 7 9 7 8 ", "1 7 7 4 7 1 3 2 1 1 9 3 5 9 3 1 7 1 8 1 9 5 4 3 4 ", "1 4 4 3 4 5 7 1 1 7 6 5 1 4 1 6 6 4 5 8 4 7 4 4 1 ", "4 1 4 6 3 9 6 2 7 6 4 1 3 8 9 3 4 2 1 3 7 1 2 4 1 ", "5 1 1 3 4 2 3 1 8 4 8 9 8 7 1 4 4 3 2 3 3 3 7 5 7 ", "1 9 3 7 8 7 5 7 4 4 5 7 3 4 6 7 2 1 8 7 1 1 4 2 7 ", "1 3 6 7 4 4 7 3 8 4 6 2 8 4 1 1 1 4 7 4 3 1 2 9 4 ", "2 1 4 4 7 4 8 7 8 5 7 1 1 7 4 1 1 4 9 6 1 1 6 9 5 ", "6 7 7 7 7 8 4 4 1 6 9 5 7 3 9 8 1 6 7 7 4 4 1 3 1 ", "4 1 7 8 1 5 4 4 8 4 5 5 2 1 1 3 1 1 4 2 6 1 7 4 6 ", "4 5 1 3 4 3 5 7 5 1 7 1 1 4 1 6 7 7 7 4 4 4 1 5 8 ", "8 7 1 9 7 1 6 2 1 1 3 9 4 1 7 2 8 1 1 8 1 7 1 8 1 ", "1 3 1 1 8 1 9 2 1 8 7 1 1 5 7 1 9 5 1 7 3 1 3 4 7 ", "1 4 6 1 2 1 7 6 7 7 8 9 7 8 2 8 9 2 7 4 7 4 1 1 8 ", "7 9 4 1 4 4 4 6 8 8 1 2 5 7 1 5 1 5 5 7 1 7 3 9 1 ", "7 9 3 9 1 1 8 7 1 1 6 5 1 3 5 4 5 4 3 5 1 1 1 6 4 ", "4 3 1 1 7 4 8 4 8 1 7 7 9 7 6 4 7 4 1 1 1 1 9 7 3 ", "5 1 7 2 2 9 2 4 5 8 7 2 1 2 4 4 6 2 7 4 1 4 4 1 1 ", "3 9 4 7 1 3 1 1 1 7 8 6 1 3 1 7 2 1 1 2 1 3 1 4 3 ", "3 1 3 9 4 4 4 4 5 1 3 1 6 5 1 5 5 7 4 7 8 6 1 2 7 ", "3 3 4 7 8 9 4 5 7 2 3 3 7 9 4 4 7 2 3 6 7 8 5 1 1 ", "2 9 7 9 1 1 1 4 8 4 9 7 1 5 1 4 2 8 2 9 7 7 2 1 1 ", "6 8 6 4 4 8 2 3 6 1 3 2 7 3 3 4 7 5 9 7 7 4 7 7 2 ", "7 5 7 4 4 1 7 1 4 7 6 5 6 1 3 1 5 1 1 5 5 1 3 1 1 ", "2 9 3 2 7 4 5 1 6 9 1 8 9 4 1 7 6 8 6 1 3 4 1 3 4 ", "1 1 1 7 9 4 5 8 4 1 8 5 1 4 4 1 1 1 4 3 9 1 7 9 6 ", "2 1 6 8 2 1 4 7 7 3 1 7 1 7 1 5 8 8 4 7 1 8 7 3 6 ", "7 2 3 7 9 3 3 4 5 6 1 1 1 8 1 4 6 9 4 4 1 1 5 8 6 ", "7 1 5 8 4 7 7 6 7 1 7 7 4 7 4 4 7 7 5 1 1 1 4 2 1 ", "9 1 4 7 7 8 5 7 7 4 1 2 4 2 7 2 7 4 4 1 6 6 1 2 7 ", "1 3 5 6 4 7 5 2 4 1 1 5 1 1 6 1 6 4 8 1 4 4 1 1 6 ", "4 7 1 7 2 7 1 2 6 4 9 1 2 9 9 5 4 1 1 2 1 3"};
    vector<string> y = {"1 3 4 9 4 7 3 1 9 7 1 7 4 7 6 1 1 1 4 1 9 1 1 1 7 ", "9 7 2 8 7 9 2 4 9 2 7 1 6 6 9 4 6 9 6 8 3 7 7 7 9 ", "1 3 7 9 4 1 9 2 6 3 5 3 7 7 6 3 7 7 3 1 1 5 4 4 9 ", "7 1 1 2 7 7 8 1 4 7 1 8 9 9 4 5 4 5 7 1 8 7 3 7 4 ", "1 1 4 1 9 2 1 7 4 1 7 1 7 8 1 1 3 1 1 4 3 6 4 1 1 ", "6 6 1 7 4 6 1 3 1 1 2 1 4 8 6 7 4 7 4 5 8 7 4 4 9 ", "1 3 1 7 4 7 1 4 4 4 7 5 5 1 9 1 9 7 8 1 2 1 3 1 2 ", "2 1 3 1 3 1 1 7 4 4 5 9 7 7 8 4 1 4 1 1 4 1 8 1 1 ", "1 4 5 4 4 7 1 4 1 6 1 4 4 4 7 4 1 9 5 1 4 7 9 9 1 ", "7 4 2 4 1 2 7 1 1 1 2 5 6 6 8 1 6 1 8 5 3 7 8 9 1 ", "5 9 7 2 1 9 3 7 7 5 4 5 1 7 5 9 7 2 1 6 1 5 4 5 1 ", "4 6 9 4 8 1 4 5 7 9 3 6 1 3 2 7 3 4 1 9 1 9 3 8 1 ", "1 1 6 3 8 7 7 9 3 1 1 1 5 6 4 4 1 1 1 1 1 1 1 6 7 ", "1 1 1 4 9 1 6 1 2 6 7 9 2 4 1 6 7 4 4 4 7 5 7 5 7 ", "8 2 5 1 4 2 1 4 8 4 1 9 1 3 2 8 3 2 7 8 8 9 4 7 8 ", "3 7 1 1 6 8 2 9 2 1 2 2 1 4 4 4 6 1 7 1 4 2 4 4 4 ", "4 7 6 1 3 1 1 1 6 2 5 9 6 1 1 2 9 4 4 8 1 5 6 6 1 ", "9 1 1 4 8 1 1 2 6 7 1 1 2 4 5 1 7 5 1 3 2 1 3 1 1 ", "8 7 8 2 5 4 1 6 1 5 8 1 1 1 4 1 9 9 8 3 1 9 5 3 3 ", "9 4 4 3 3 7 5 7 8 4 1 2 1 1 7 9 7 3 7 9 1 8 5 4 7 ", "2 2 4 7 4 7 3 1 7 1 4 1 2 9 7 3 6 5 2 1 3 8 7 4 1 ", "7 1 4 5 4 2 4 8 4 5 1 8 1 1 1 1 5 2 5 8 7 7 3 1 5 ", "4 2 1 1 6 1 8 1 1 7 7 4 7 4 5 1 1 7 1 6 1 1 9 1 4 ", "4 1 5 8 8 8 1 1 1 9 9 8 2 2 5 3 6 2 2 8 1 9 1 5 1 ", "1 2 4 1 1 1 1 1 1 4 4 9 1 1 4 2 1 7 5 7 1 4 4 1 5 ", "4 3 9 1 1 5 1 7 6 8 7 4 7 1 3 1 5 7 4 1 3 2 1 5 2 ", "3 1 7 2 4 1 3 3 4 4 1 1 7 8 3 6 1 8 3 7 8 3 5 1 4 ", "4 1 4 7 3 1 3 4 6 5 1 5 1 1 7 1 1 4 3 8 1 3 4 1 1 ", "7 8 1 5 1 3 5 2 9 7 2 1 6 4 8 7 4 8 2 5 4 4 1 3 1 ", "9 4 2 5 1 3 9 6 2 7 1 2 5 1 1 7 3 2 9 7 7 1 4 3 8 ", "8 7 5 6 9 4 9 7 2 5 2 1 4 1 3 4 7 1 8 2 1 1 1 1 6 ", "8 5 1 2 1 6 3 4 7 4 8 5 3 1 1 2 1 4 4 4 2 7 9 7 8 ", "4 9 1 4 4 4 9 1 6 7 8 1 1 5 5 8 8 8 9 8 1 1 8 7 5 ", "6 8 5 2 9 8 1 7 1 5 2 8 9 4 7 1 1 4 4 1 4 5 1 1 5 ", "6 7 4 3 6 3 4 5 9 7 5 1 3 1 6 4 2 2 2 1 1 1 4 6 6 ", "1 5 9 1 1 5 6 8 1 8 4 6 9 4 9 9 8 3 8 7 2 8 1 7 2 ", "1 6 1 5 1 2 3 4 5 9 1 3 8 2 6 1 9 2 4 3 9 5 7 3 4 ", "3 1 6 4 3 9 9 5 2 1 1 1 1 7 2 5 4 8 1 6 8 8 5 1 7 ", "3 1 7 2 4 9 1 7 3 7 1 5 1 1 3 4 7 2 1 8 1 2 9 7 3 ", "1 1 1 4 6 1 6 1 6 9 5 2 2 7 8 7 6 7 4 5 7 7 1 4 2 ", "1 7 5 8 9 6 1 1 7 1 1 9 7 7 3 9 1 8 1 9 4 1 1 7 7 ", "4 1 3 2 1 2 4 8 5 1 4 4 8 2 7 1 9 9 1 1 4 5 3 3 1 ", "1 4 4 1 1 3 6 1 1 2 6 1 4 7 6 1 6 3 5 6 1 7 8 4 7 ", "1 8 5 8 4 5 7 2 7 7 4 1 8 5 8 2 5 4 6 4 1 8 1 2 5 ", "7 4 4 1 7 1 1 6 1 4 9 4 4 1 1 6 9 8 1 1 5 1 9 2 5 ", "6 3 1 4 7 9 9 1 4 1 4 1 4 4 1 3 1 4 9 7 6 3"};
    vector<string> lengths = {"6 1 5 4 3 2 8 7 9 4 7 1 9 7 7 4 2 4 9 8 1 1 4 5 1 ", "5 9 7 3 2 3 2 6 5 1 2 1 5 7 7 6 4 2 9 7 4 1 1 3 3 ", "7 8 4 9 2 4 1 7 2 1 4 8 1 4 1 1 5 1 7 1 4 1 7 9 5 ", "1 5 1 7 5 8 5 7 1 1 7 1 1 7 7 7 2 1 4 8 2 7 1 8 1 ", "7 7 1 6 2 6 9 6 1 8 5 2 1 1 5 6 4 4 4 1 4 4 7 3 1 ", "3 1 2 1 9 4 7 9 1 1 3 1 1 1 5 8 6 4 1 1 1 1 4 1 4 ", "9 2 9 7 1 4 4 1 7 1 5 1 2 7 6 1 8 5 7 4 5 7 9 2 4 ", "4 6 2 7 5 1 9 1 1 1 4 9 3 7 5 1 5 2 7 4 2 5 5 1 7 ", "7 8 7 1 9 9 8 7 4 5 3 1 7 4 3 5 3 3 4 4 1 1 1 4 6 ", "4 8 7 3 1 6 9 9 1 2 6 9 4 2 8 1 7 7 1 7 1 2 3 8 4 ", "7 7 7 6 4 5 7 4 7 7 1 2 9 6 3 4 7 1 5 1 1 1 9 1 4 ", "4 7 4 1 4 8 4 2 4 6 5 1 7 5 7 7 1 4 5 7 2 7 5 7 7 ", "4 2 4 9 4 1 5 8 4 7 3 4 5 5 5 3 3 1 7 5 8 1 6 9 8 ", "6 1 1 1 1 1 4 2 5 3 4 6 2 1 6 4 3 1 8 1 1 9 5 6 2 ", "1 1 1 5 6 7 4 6 1 8 4 7 9 1 9 4 7 4 1 6 1 4 1 5 1 ", "8 6 1 4 9 2 4 8 7 4 9 7 8 8 4 1 1 8 1 8 1 2 5 4 6 ", "1 3 6 5 1 6 2 7 9 7 1 7 8 1 1 7 7 5 1 7 4 1 4 6 7 ", "6 7 1 9 1 7 1 1 2 1 7 9 2 2 4 2 9 1 4 3 4 5 9 4 7 ", "1 7 7 1 8 4 5 2 1 7 7 4 8 5 1 1 1 7 3 8 4 1 6 6 4 ", "6 8 1 7 1 9 3 1 1 1 7 4 5 3 1 6 4 6 5 3 4 1 1 5 4 ", "1 2 7 2 8 7 1 1 1 8 9 8 9 7 1 4 2 8 1 3 7 1 3 1 7 ", "1 3 1 1 1 5 7 9 3 4 3 5 3 4 1 5 7 1 8 7 6 4 1 1 3 ", "8 7 4 4 3 4 5 4 1 7 3 7 3 3 1 7 6 4 4 8 8 3 1 4 8 ", "1 1 1 1 1 1 2 4 5 8 2 1 1 1 9 3 1 5 8 8 4 3 4 3 5 ", "1 3 7 1 4 5 1 1 4 7 1 6 7 8 3 1 1 8 8 8 1 8 7 3 1 ", "2 1 5 3 3 7 1 4 7 7 4 6 7 5 5 8 4 5 3 4 4 7 2 7 6 ", "4 4 1 6 5 5 6 8 7 1 7 4 1 1 7 1 1 3 5 4 3 7 1 4 8 ", "9 3 3 1 1 5 8 9 6 1 1 3 3 1 7 1 8 1 2 7 3 4 1 3 7 ", "5 1 6 6 1 7 7 3 4 1 1 2 8 2 1 1 2 6 1 1 7 6 4 1 1 ", "8 9 7 7 1 1 1 2 5 5 7 6 4 9 1 3 1 7 8 9 3 7 9 1 6 ", "8 6 1 8 6 1 7 4 1 4 2 4 1 1 3 9 7 4 4 2 2 7 1 4 3 ", "4 1 2 7 4 4 1 1 1 4 1 1 7 4 8 6 1 4 8 2 7 5 4 5 8 ", "1 1 1 1 4 5 3 4 1 7 7 9 8 7 6 8 9 7 1 6 4 1 7 4 6 ", "7 7 1 3 7 6 7 3 1 3 8 1 7 1 4 4 9 5 9 8 4 1 6 3 6 ", "1 7 4 4 2 1 4 1 8 7 1 8 4 1 1 9 4 5 6 2 6 7 5 2 4 ", "7 9 9 1 1 4 6 7 5 1 7 5 5 2 1 7 7 7 3 1 1 2 1 8 7 ", "7 1 3 8 4 3 7 8 6 5 5 5 7 7 9 4 7 7 1 7 4 4 7 6 9 ", "1 4 9 9 1 4 9 1 6 8 4 5 4 7 4 7 6 4 1 4 6 7 4 7 2 ", "3 5 1 4 1 8 1 4 7 8 5 2 6 1 9 7 6 7 1 1 1 1 6 9 2 ", "7 4 7 8 3 1 1 3 8 5 8 1 5 6 6 4 2 1 5 8 7 1 4 7 9 ", "1 1 2 5 5 1 6 4 2 1 1 1 5 1 1 3 9 9 6 1 1 5 6 4 4 ", "6 5 9 3 1 5 2 3 6 6 1 8 1 4 9 9 2 1 2 1 6 2 2 4 9 ", "7 4 4 7 1 1 2 7 9 2 1 2 1 6 1 5 4 3 6 9 1 7 1 7 4 ", "8 2 2 7 4 3 1 7 6 9 7 9 4 7 7 7 5 4 7 1 1 7 8 7 9 ", "3 2 7 9 6 2 3 1 7 9 4 8 9 8 7 3 9 1 7 7 4 4 5 1 5 ", "4 1 2 1 3 9 1 1 1 8 3 4 7 7 4 9 3 2 6 9 1 4"};
    vector<string> names = {"D U I U I E G S A Q O Y C V S Q W X A J W A E M W ", "Y U N L C U C U Z U G N W M Y X X M A O C U J O E ", "A I A K X H J O N J G O E U N Q A H N Y H J G G K ", "C B F C W E Q G D G A E T K Y Y K D F E E W U E K ", "K M Q A E B A G M I W O C B C G A Q C N W K N A W ", "I E U E G T T O P M W G M G A O Q S F M S Q Q U E ", "A Q A A A M A A H P A K U X D W E X T H Q K C S E ", "A G S I G O Y I M S A V W R W G K B W W I D X S A ", "W N K A A V Q Z X S G G W W B P K H K Y C Q M F Q ", "A A U Q G Q E I D L N A O A E S O W N U A R P M T ", "A I B M G A W O E Y C T A U M A H M I Q K H K A N ", "U Q Y K W O I W S I W H I Z E V O I U Q K K K G Q ", "S U A A U F W T W A D A Q Q B Y W U D A G N Q N U ", "A X B I P L Y Z W A M Y A A Y S A P O K I Q O G N ", "K K F U C A Q C M C W M M O D I A Q A K O Z A C Y ", "E U Q Y Q G A I U G F Z J O S U M O C G K N O K A ", "B E Y C Y U G R Z G M T G D C D Q S N Y Q W F O E ", "H A V E M G R W A I Y C E W T B X D Q W K Q O C K ", "S G W A U B I A C U O Y M S I K D E E A A C G A R ", "H S J T P Q Q Y Y Y V Y R P W U F G K K D M U Y M ", "A M N G O R Q Q Y A Q E L S M N S A M G B A U E A ", "M M S B A R H A Y E X M S G L Y V I C O U E Y F C ", "W Y S C I Q R D K I X U G Z I Y Q A X S U H N Y O ", "I U D X A J W O E K C W O A C U P E A S C A V N S ", "F H E U U S G T O A B D K E A A N Q A W D T A A U ", "Z S C A Y A W A Y W E S W C I Z I E Y B W A Y K S ", "U C A V Q S E O O P Q I A W R M T E M K C M K I M ", "A I J W D K E Q Z M P U A O E S R W G G Q I O E M ", "Q B Q Q W L Y E D J D T H A P I U A K C C S X X Q ", "V S A A M F Q E G U E I K L M A I Z N Z B R P E A ", "Y U A A I K C E E L R M Q J W O F Y E F W V C S A ", "K B S A K V D M O K G G M O G X E Q I S M W Z W X ", "W O V X G B T C W G Z W G A Q U K C M C Q I M Q I ", "I Q Y I R M K Q S K S C E U N E A I K A H Q C L B ", "A Q C F C O M Q Q D W G E Z C Y C H O G K E E I Y ", "A E N A P G A K O P O Q M N O X F G W K A U C G P ", "K G S A G G V M K K L U K A C K G Q C A W Q P Q Q ", "U K W Y E C M I Y S V S N J N B A Y U F L A K T Y ", "P M M S U Y U U O A E L A Y Q U J A G W A W M G A ", "M W N M A I B J O Y E H F U W V Q A W A Q E T M C ", "W F M N U F M A C Y Y S I Q A E A G B C J F A A K ", "H I W A G G C U O N E M A P L P G X K E Q N Q M C ", "K A D E Z P E A C B F A U Y O X A Q M S W L A K I ", "E S Y Y R G I K G K Q I Q A G I Y D N M X K Q A A ", "Q T Y G T Y A Y C H O G E Y U E F A Y A E T X Y S ", "M N E Y J T M Q M S O A O U Q W O J D B T D"};
    int k = 50;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "B", "C", "C", "E", "K", "Q", "S", "A", "A", "C", "D", "E", "G", "G", "H", "H", "I", "Q", "Q", "Q", "T", "W", "X", "X", "A", "E", "K", "M", "S", "W", "E", "U", "W", "Y", "C", "G", "K", "M", "N", "P", "Q", "U", "U", "W", "W", "Y"};
    if(result == expected) {
        cout << "Test Case 83: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 83: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test84() {
    vector<string> x = {"8 8 2 4 1 6 4 9 9 6 3 7 1 1 4 4 1 5 1 9 1 9 5 4 5 ", "1 5 4 5 8 7 6 7 4 6 6 3 7 1 3 4 1 8 7 8 1 1 7 2 3 ", "2 7 2 7 7 2 9 1 1 1 3 3 5 9 7 1 2 4 4 7 7 5 9 2 1 ", "7 4 9 2 1 1 8 1 4 1 1 2 6 4 7 1 7 4 7 2 3 8 6 8 6 ", "1 1 5 3 5 6 8 7 6 3 9 4 1 5 1 9 8 1 4 1 3 6 2 5 6 ", "1 7 5 5 5 7 5 5 7 2 4 1 4 8 1 1 8 4 5 8 1 7 9 6 1 ", "7 4 1 5 9 9 6 1 1 4 7 9 1 1 7 3 1 5 2 5 4 4 7 4 1 ", "4 7 2 4 7 6 5 4 3 9 5 1 3 2 4 7 6 8 5 7 4 6 8 1 3 ", "1 1 5 8 4 8 2 7 1 1 5 9 6 2 1 4 4 1 2 1 5 3 4 3 9 ", "5 6 5 1 4 4 5 7 4 4 6 5 1 4 1 7 9 7 9 8 1 5 1 9 9 ", "8 4 3 2 5 6 5 9 7 9 2 1 8 4 3 4 8 1 1 7 4 1 8 4 3 ", "6 2 1 4 3 9 1 5 3 1 1 1 6 4 1 8 6 4 8 4 1 1 1 1 1 ", "9 8 4 1 1 4 1 8 2 1 1 8 7 6 2 4 7 1 8 2 8 7 6 6 6 ", "1 1 6 7 4 2 1 8 6 4 8 9 9 7 9 8 1 2 7 6 4 4 7 1 1 ", "1 7 1 4 6 7 1 1 7 7 3 7 1 4 5 1 9 2 4 9 1 7 2 3 5 ", "7 4 4 3 3 4 8 7 1 5 2 1 1 1 9 2 1 1 9 7 1 1 1 2 9 ", "8 8 7 4 2 7 8 9 9 5 6 1 3 1 1 1 8 6 7 4 1 4 7 7 2 ", "7 4 1 1 4 1 4 1 1 5 5 5 1 5 7 1 7 7 3 3 2 7 4 7 7 ", "1 7 7 7 4 9 7 4 4 3 1 1 1 4 8 2 1 1 1 7 1 3 1 3 7 ", "1 6 2 2 1 1 1 2 4 1 4 4 2 4 4 1 1 4 7 7 3 5 1 8 4 ", "7 1 1 4 5 3 8 3 4 5 7 1 4 9 9 5 8 9 7 5 8 2 8 1 4 ", "6 5 8 9 5 7 9 5 1 8 7 9 1 7 9 5 1 1 1 1 5 5 1 5 4 ", "4 2 4 7 7 9 1 6 7 2 1 7 1 5 4 3 3 4 7 3 9 7 7 9 1 ", "5 6 4 7 1 2 9 8 4 3 9 1 2 2 7 1 4 7 1 3 7 3 7 1 1 ", "5 5 9 5 1 9 9 5 1 5 2 2 8 4 7 7 7 4 9 5 7 7 5 2 2 ", "8 6 5 9 3 1 2 4 8 1 8 7 7 6 3 8 4 3 2 1 7 7 4 7 2 ", "9 7 2 1 1 7 7 1 1 6 5 6 8 2 9 8 5 7 6 2 6 6 1 6 7 ", "9 4 5 3 5 9 1 4 9 1 9 5 4 7 7 4 9 5 6 8 4 8 1 3 7 ", "1 5 3 8 1 1 1 3 1 2 8 3 1 7 1 8 8 8 7 3 5 1 1 4 4 ", "9 1 1 6 2 3 1 1 1 7 3 4 4 4 1 7 4 1 7 4 6 1 6 8 3 ", "4 5 7 4 8 3 1 7 9 5 4 2 3 1 4 9 5 1 7 7 3 7 8 4 1 ", "8 5 4 5 9 1 4 1 9 4 1 7 1 6 4 6 6 5 8 7 8 7 2 2 1 ", "2 1 8 9 9 2 1 1 5 8 1 1 1 4 1 9 6 4 1 8 1 4 7 1 9 ", "1 7 6 1 9 4 1 7 7 1 9 9 4 2 3 5 1 5 1 1 1 6 4 7 3 ", "5 1 4 2 6 2 1 3 1 7 2 4 6 7 2 7 4 2 8 1 5 1 8 1 7 ", "1 8 4 1 1 5 9 4 6 9 3 1 1 7 1 9 1 5 7 7 1 1 1 1 1 ", "3 6 6 2 2 7 1 2 1 1 9 1 1 6 7 1 9 6 8 8 7 5 4 4 9 ", "1 1 6 9 7 2 7 1 8 1 1 4 1 1 4 8 1 4 7 9 1 5 1 4 7 ", "3 9 2 8 5 2 1 7 1 7 4 1 1 1 1 6 8 6 1 2 7 4 5 2 5 ", "4 5 3 7 1 1 2 1 1 7 1 2 5 3 4 3 7 5 3 1 5 6 3 4 8 ", "1 7 6 1 4 6 7 2 6 7 1 8 2 8 4 2 7 5 7 5 8 4 7"};
    vector<string> y = {"3 1 4 5 9 1 8 8 4 7 7 1 5 1 1 7 9 9 1 1 1 1 1 8 4 ", "7 8 8 2 7 1 9 4 4 6 4 7 6 7 6 7 1 1 1 1 9 3 2 7 8 ", "1 5 5 7 4 7 7 1 9 2 1 4 3 8 7 4 4 9 5 1 8 5 1 1 4 ", "9 8 9 5 4 1 2 3 1 1 6 1 5 3 1 4 4 5 7 6 1 9 5 4 7 ", "8 7 4 9 4 1 1 3 6 6 1 1 8 1 1 1 1 7 6 6 5 7 5 1 4 ", "4 7 1 3 4 4 1 9 6 3 5 3 7 3 4 3 2 6 1 2 5 1 1 2 5 ", "4 8 5 2 2 1 4 7 3 1 1 5 9 5 3 9 7 8 1 1 7 9 8 2 4 ", "9 1 1 7 6 8 5 1 9 2 7 8 1 4 9 4 6 2 6 2 4 4 7 1 7 ", "1 3 4 1 1 1 7 1 2 7 3 1 1 1 4 4 4 1 9 4 6 2 1 1 2 ", "1 7 8 9 7 2 1 4 9 1 4 1 4 8 7 1 1 2 4 7 1 9 3 4 8 ", "6 4 1 1 6 1 8 3 1 5 7 1 1 4 8 9 2 4 1 4 8 5 5 7 1 ", "8 4 3 1 4 1 4 4 4 8 4 1 4 8 5 3 6 9 1 7 6 1 7 4 3 ", "4 1 8 9 7 6 8 1 7 7 1 2 1 6 8 8 1 1 7 9 9 1 3 1 9 ", "1 5 7 1 7 7 6 6 2 7 7 4 7 6 1 3 4 5 1 6 6 2 3 6 4 ", "4 9 1 4 3 1 1 4 6 3 7 1 1 9 2 7 1 3 1 3 6 9 3 2 7 ", "5 7 9 1 5 9 9 7 9 8 5 5 1 9 5 8 2 6 7 2 3 5 1 4 1 ", "9 1 1 7 1 3 9 3 4 2 9 1 4 9 1 9 1 4 9 8 9 4 7 6 6 ", "1 4 1 3 9 1 7 9 1 5 1 8 1 8 3 1 7 1 4 4 1 8 1 4 1 ", "6 6 9 4 4 3 7 1 1 7 7 6 4 3 1 6 4 1 2 6 9 5 7 5 7 ", "8 1 7 3 3 8 1 7 6 1 8 1 8 1 5 4 6 7 9 2 5 1 1 9 6 ", "1 6 8 8 3 4 7 9 5 2 1 6 4 3 1 7 6 9 1 1 1 4 7 1 4 ", "5 9 8 1 7 8 1 9 9 6 7 1 7 3 8 2 6 1 4 7 3 7 1 9 7 ", "2 1 7 7 3 1 7 5 4 5 4 2 4 3 2 9 7 9 1 1 1 1 7 5 7 ", "5 7 5 1 8 1 1 5 7 8 7 1 1 9 9 1 4 1 1 7 1 2 4 7 1 ", "1 4 7 7 8 3 2 7 3 4 1 1 4 6 1 7 7 1 1 8 9 9 6 3 6 ", "3 3 5 8 2 7 8 4 1 2 3 3 5 2 5 4 6 3 7 9 1 6 9 1 4 ", "1 8 3 4 6 7 5 1 9 6 1 4 2 1 1 4 6 8 2 4 1 5 1 7 5 ", "4 5 3 1 7 5 6 6 1 1 7 4 6 7 1 1 2 9 4 4 7 1 7 7 7 ", "3 7 4 1 9 7 7 1 1 6 6 1 9 5 1 1 1 1 5 1 8 1 2 7 4 ", "4 4 4 3 7 1 1 1 6 1 7 4 4 1 5 2 3 7 7 7 4 3 9 1 5 ", "2 9 7 7 7 7 8 2 7 3 2 8 1 8 4 1 2 5 1 4 1 2 7 5 8 ", "5 1 2 5 1 8 4 1 5 1 4 6 4 2 7 3 1 7 7 7 4 4 1 1 8 ", "7 9 4 8 4 1 4 4 5 9 9 6 7 1 2 8 7 2 7 1 9 3 2 7 1 ", "2 7 8 1 3 9 3 8 4 4 6 1 6 3 1 1 1 5 5 5 7 8 9 1 7 ", "5 1 9 1 7 3 5 7 7 9 1 1 6 9 8 4 2 1 1 7 1 1 5 1 8 ", "1 5 1 1 7 9 4 2 9 8 3 5 5 7 1 1 5 5 2 4 3 4 1 2 5 ", "5 1 1 2 1 6 3 4 8 1 1 6 9 8 5 3 4 1 5 1 1 7 7 3 5 ", "4 7 8 7 7 7 3 1 4 1 1 7 4 9 4 4 7 1 6 8 1 5 5 8 6 ", "1 2 6 8 6 1 6 9 8 4 4 1 4 1 4 3 7 4 4 4 1 5 6 4 6 ", "8 7 1 2 9 9 7 6 3 9 7 1 5 5 7 2 6 1 7 6 1 7 7 7 7 ", "1 7 3 1 1 2 5 6 4 2 5 1 2 9 6 9 1 7 9 3 1 1 1"};
    vector<string> lengths = {"8 2 6 6 8 1 7 1 4 4 5 3 1 9 6 4 7 2 6 8 9 7 3 3 1 ", "4 1 4 8 1 7 4 4 3 7 1 8 9 5 6 4 1 7 1 5 9 1 1 5 7 ", "7 7 4 6 4 1 1 8 1 4 5 2 7 1 7 2 2 2 4 4 5 6 7 8 7 ", "1 3 7 8 1 1 6 2 4 7 5 1 7 4 2 2 7 8 7 4 1 1 6 7 5 ", "1 6 3 1 5 4 4 1 4 5 1 2 4 8 3 4 1 1 7 7 1 1 1 9 1 ", "4 4 9 8 4 6 3 1 1 4 1 2 4 7 1 5 9 5 1 5 5 7 9 7 1 ", "4 5 3 1 1 9 2 3 7 4 6 1 1 1 5 1 5 7 6 5 1 4 1 1 1 ", "4 6 9 4 1 3 1 7 3 1 7 4 4 4 4 1 7 2 3 2 6 2 2 7 8 ", "6 6 1 4 1 4 1 4 4 2 3 4 1 6 2 8 5 1 7 9 1 2 7 3 6 ", "1 9 6 6 1 2 8 1 1 1 1 1 7 3 1 3 4 4 2 1 4 4 2 3 4 ", "7 3 1 5 7 7 4 8 5 5 8 7 5 6 9 3 1 4 3 6 3 7 7 9 2 ", "4 6 8 4 4 5 1 1 5 4 1 1 1 5 1 7 1 7 3 6 1 9 4 9 1 ", "7 8 7 7 1 4 1 5 1 1 4 4 7 9 8 1 1 7 2 4 5 8 9 4 6 ", "8 4 8 1 6 1 2 1 1 8 6 1 2 1 8 5 2 4 3 6 8 3 7 4 2 ", "9 1 5 7 7 7 8 3 7 3 7 1 7 9 7 9 4 4 5 3 1 4 7 7 4 ", "1 1 4 1 5 8 1 1 8 7 7 7 5 3 2 7 1 3 1 5 1 8 4 1 7 ", "5 1 1 2 2 2 1 4 2 2 1 9 1 2 3 7 6 7 1 5 1 1 4 1 6 ", "2 3 5 3 3 1 7 7 8 2 8 3 7 5 7 1 4 7 2 5 2 8 7 1 8 ", "2 9 6 1 9 5 4 3 1 4 7 8 7 1 4 8 1 1 4 7 6 8 1 1 3 ", "4 1 5 1 1 3 3 5 1 4 3 4 5 8 7 1 4 3 7 9 8 4 4 7 3 ", "2 3 7 1 1 1 4 4 9 7 2 4 6 4 1 4 1 5 1 1 6 3 4 9 9 ", "4 5 7 5 7 8 3 4 1 1 1 7 5 1 1 1 1 1 1 4 5 2 3 3 5 ", "7 1 4 7 5 5 5 6 1 8 2 8 8 9 1 2 3 2 1 2 1 4 4 6 1 ", "5 5 7 4 3 7 1 6 4 2 1 9 1 1 7 2 6 1 6 2 6 1 1 4 3 ", "4 1 2 1 8 9 1 6 7 7 9 1 2 3 7 2 7 1 7 4 7 1 3 1 1 ", "4 3 8 8 1 8 9 6 1 7 9 7 2 4 5 2 9 1 8 7 1 3 2 1 1 ", "4 9 1 1 1 1 1 3 6 7 1 9 8 3 3 1 2 7 7 5 1 3 1 1 1 ", "2 7 3 5 8 1 9 1 1 7 1 7 8 7 2 4 5 1 1 1 5 7 1 7 3 ", "8 9 9 1 1 6 1 9 4 7 1 1 2 8 5 1 1 7 7 1 5 3 5 1 8 ", "7 6 9 1 9 4 1 7 7 1 7 6 2 8 6 2 1 1 9 4 5 1 4 1 5 ", "2 1 2 7 4 7 6 3 2 1 8 8 4 4 9 9 9 5 9 8 2 4 1 1 1 ", "8 5 6 1 2 1 2 4 3 3 2 1 1 7 1 3 7 1 7 6 5 7 4 2 2 ", "4 1 4 4 8 7 2 2 1 5 3 2 6 5 1 1 6 5 5 4 6 9 5 4 1 ", "6 1 1 7 5 5 4 6 5 9 4 9 1 3 4 3 4 3 7 2 3 6 1 6 9 ", "1 4 7 9 7 1 5 3 7 7 3 1 7 7 1 7 4 3 1 6 2 5 7 4 2 ", "7 5 4 9 5 6 4 7 5 3 1 4 9 9 1 9 4 6 1 1 1 6 4 1 7 ", "6 1 8 1 9 7 2 7 4 2 2 3 4 5 8 7 1 7 4 6 1 1 7 3 1 ", "1 1 9 1 1 7 4 4 7 5 1 3 7 1 1 7 4 4 7 3 3 8 1 2 1 ", "4 1 1 2 4 4 1 7 1 6 5 5 5 4 7 7 6 4 2 3 6 1 5 6 6 ", "3 4 1 9 6 7 4 9 6 1 7 2 1 7 3 1 8 1 4 1 4 9 6 8 7 ", "1 1 7 7 4 8 9 1 7 3 9 1 7 1 7 4 1 4 8 7 3 9 4"};
    vector<string> names = {"Q O S Y X F C Q Z C I C K Q A Y Q K C G C N S Y C ", "C W C E Y G Z C E O F S R L C S I E V G A P U L A ", "E K C M M U I U J R I E O V N H K X E N C G K A Y ", "A T R E P O V A R I I S C C W G W Q F W S G N A G ", "Z Y Q A K E Q S C Y F A A E Z O B T J A P I K A Z ", "L B E A J G G M G K I W R N N A I E Y N Z Q T Y Z ", "T J N Q Y Y Y A S A A G M V Q N H O Z M S Z P D A ", "Q N S T G A S M R Q Y N U Q A Z H T Y I A C Q K C ", "P E N D R G W N O T A N E Q N C G M U E M K M Z I ", "K K O S G W N S K A S O U H F E A A W S N P Q P A ", "D R Y C A E Y G K A H G S M N L Y C Q Y W E J M I ", "F B A A D S S M L W E C R C Q T S L O S W E Z M N ", "R M I S E O K O C A A C P M G I G V Z D J C A O O ", "E N J S S G C N G V A W C N O N H M A G K I K K A ", "F W C S D B Z M N B J P Y O N C Y H A H D A M W N ", "I K I C Q E S U Q S S S N D A W S V K B E G Q W K ", "W Q Q P K U J O M U V Y Y O M K M N Y K M I E I I ", "I S A I W U Q S T Y S T W G J A M S I Y I K N Z E ", "C C Y U I U A Z B K S O S G A P U Q L A H W Z S E ", "C I L A D G U C T W G L G V C Y A G K N A M M J A ", "E E H V A Y W O W S A O E J G A G M K Y C M Y I K ", "C L W I M N Y K A Q B Y C R O F S M F O U K G T G ", "I X K Q I A F Y C I J E B A V P E C S Y C J Q B U ", "F L E I V I K C M A V U D E O X X M I Y Y E G I Y ", "W U A R V Y N C Y L I M G R W L S C I L L C H I Y ", "S G M K S X U A M M Y O U A W Y S K K F G I T U Y ", "M W J B Y G A E C G Z W A M O A A X Y J X W E D I ", "K S M W M S Q K V W O U A H A M I S L K S C A E A ", "L K A P Z A H D I A N A A Y S Y S K Q Z O U G L U ", "S A U A W C K M I N C N I A S U R U O K N O Z Q W ", "C N S M T N Y Y F A G D Q D M C N W Y G N G J O U ", "G A G P O B C V E Z C U M S I Q O K Y U B S C K S ", "Z M L E S K G M A A I P A L A I C S K K E C M A K ", "A U G K E F L J S H M A K L I S I F S E S S I I W ", "O T A K S E W M N E A R M A W G U A O N M A K A C ", "E W H A J V Y N E O L L L L V A K U V U Q W D A Y ", "Q C A R O M W A N O W A Q Q W O W Z O Y K C M K W ", "R B M I S Z I S P A D S W O K Q C W K K M J D A U ", "A K X M E A V U R V B W Y O N O A Z N I Y Q O P E ", "U A I C B W S S V C W J D W C A A V E V G B X V I ", "C C Q A Q M A E Q V K R U A P U K H R A L W I"};
    int k = 94;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 84: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 84: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test85() {
    vector<string> x = {"1 3 1 6 4 3 1 7 1 5 4 4 7 5 1 4 7 1 1 7 4 1 2 8 9 ", "4 1 5 1 1 7 7 7 1 9 4 4 1 1 7 3 4 4 9 6 1 5 1 1 9 ", "2 4 8 7 2 5 2 1 5 7 7 3 1 1 4 9 2 4 7 1 4 2 8 2 8 ", "7 8 9 9 8 1 5 4 7 1 1 2 8 1 7 2 4 3 3 1 6 4 1 2 4 ", "1 7 1 9 7 7 2 7 1 7 1 4 6 5 4 2 1 1 7 4 1 1 2 1 4 ", "7 7 2 6 6 3 5 4 5 3 1 4 2 1 2 1 5 2 4 4 8 9 1 4 8 ", "9 1 1 4 8 1 8 1 7 1 4 1 7 1 4 2 8 8 5 7 1 8 8 3 2 ", "7 7 7 7 4 7 6 7 4 3 2 1 8 4 1 1 4 9 3 3 4 4 6 2 7 ", "7 1 7 1 7 4 7 8 5 2 4 6 1 6 2 5 3 7 8 4 1 7 4 9 2 ", "7 1 5 3 3 1 7 9 4 4 1 5 8 3 1 8 1 7 9 2 7 1 1 7 1 ", "2 9 7 1 1 4 5 1 1 8 1 5 7 9 7 2 4 1 5 8 4 4 1 1 2 ", "4 8 6 4 4 7 4 9 1 1 3 7 1 3 3 4 7 4 7 6 3 3 1 1 6 ", "4 4 1 4 4 1 1 4 7 3 1 9 1 6 1 1 9 6 7 3 7 1 7 3 4 ", "5 7 9 1 8 2 1 4 4 2 1 1 3 3 7 1 1 1 2 9 7 8 1 9 3 ", "5 7 1 6 5 4 1 1 1 1 4 5 3 8 8 1 7 2 8 2 7 7 1 1 1 ", "3 7 1 3 1 3 7 7 5 8 5 1 3 1 2 9 1 6 7 3 7 8 2 7 4 ", "3 2 1 1 4 5 1 2 1 8 4 1 4 2 7 5 1 1 4 1 7 8 8 7 4 ", "8 8 7 6 4 1 1 6 4 1 1 6 3 7 1 5 1 1 1 4 7 7 1 2 9 ", "1 4 5 2 1 3 1 7 5 7 6 4 5 1 4 6 3 1 1 4 6 7 4 1 4 ", "2 4 1 4 8 7 4 1 1 6 6 5 4 4 7 5 4 1 4 9 4 4 7 2 1 ", "8 1 1 9 4 4 3 1 3 9 4 5 2 3 2 2 1 1 3 8 5 1 2 7 2 ", "1 8 4 2 4 9 5 3 8 1 1 9 4 8 6 9 9 2 7 5 6 9 6 1 1 ", "1 8 5 1 7 7 7 4 3 8 7 1 1 9 4 3 4 1 3 8 8 6 9 7 2 ", "1 6 7 6 1 5 1 7 1 4 6 3 6 1 2 1 4 2 7 7 1 4 7 9 1 ", "4 7 4 6 1 1 5 4 1 4 7 7 3 5 9 3 8 3 3 3 1 1 3 4 3 ", "7 7 2 1 4 7 1 9 1 2 7 1 3 1 7 4 2 1 9 4 7 1 6 1 7 ", "5 9 4 4 5 9 1 1 7 1 4 8 1 1 5 8 7 2 8 4 1 1 4 1 7 ", "6 5 1 1 6 2 4 1 1 7 2 7 8 1 4 5 3 3 9 1 8 4 4 8 1 ", "7 3 3 4 9 9 9 1 2 6 8 7 1 3 7 1 7 2 4 8 6 5 1 7 4 ", "5 1 1 1 8 9 3 4 7 5 8 4 4 7 1 4 8 1 8 9 2 7 4 4 1 ", "3 9 7 6 4 4 7 8 7 1 1 1 4 5 8 4 7 1 2 7 1 7 1 7 4 ", "1 4 8 4 9 9 6 1 1 8 4 4 1 8 8 6 1 1 2 3 1 4 7 7 1 ", "4 8 5 8 3 1 9 1 3 1 1 1 5 8 4 9 7 4 3 1 4 5 4 6 2 ", "4 1 4 1 9 8 4 6 5 5 9 2 5 8 3 9 7 1 9 7 7 7 3 1 7 ", "7 9 1 7 1 5 8 9 1 7 7 1 7 7 7 4 8 3 4 2 9 2 8 4 2 ", "8 4 2 1 6 7 2 2 1 8 5 1 5 5 4 8 1 1 9 4 7 4 3 9 1 ", "5 3 2 6 1 5 1 7 1 1 1 8 1 1 1 6 4 1 4 9 4 4 1 6 1 ", "4 3 7 6 8 2 8 4 2 1 8 1 6 2 1 2 1 9 1 3 1 8 6 1 2 ", "7 3 2 4 9 6 3 1 1 1 1 7 5 8 1 8 9 9 1 7 7 1 4 1 2 ", "1 5 7 3 5 1 4 3 4 2 8 1 4 1 1 1 9 3 5 5 3 8 9 1 4 ", "7 9 7 1 1 3 6 4 4 8 7 4 1 1 1 6 4 1 4 3 1 2 3 1 5 ", "1 7 5 2 1 3 6 4 4 4 9 2 9 1 9 8 2 1 1 1 7 8 5 4 4 ", "4 9 7 1 9 9 7 3 4 7 5 1 6 4 6 4 2 1 8 3 1 4 6 7 9 ", "1 4 1 7 1 9 1 1 6 9 1 9 2 7 1 2 1 5 4 8 7 4 1 8 1 ", "4 7 6 6 7 1 4 1 4 1 7 9 1 4 1 1 7 1 1 1 3 1 7 7 1 ", "2 9 5 1 9 1 1 4 1 7 4 2 2 7 8 7 1 7 8 1 4 3 4 2 7 ", "3 7 8 3 6 5 9 4 5 1 1 4 5 1 1 2 8 5 4 9 4 4 1 7 5 ", "4 8 1 7 3 4 6 1 1 7 1 9 1 7 4 4 1 3 4 9 1 2 3 6 2 ", "7 5 3 6 7 3 6 6"};
    vector<string> y = {"6 8 9 5 1 3 1 4 4 4 4 1 5 4 1 4 1 1 4 3 7 7 1 2 5 ", "9 2 1 1 7 1 7 7 4 1 7 2 2 4 7 7 6 7 1 1 9 5 4 4 7 ", "1 7 4 1 1 7 8 1 1 5 1 2 1 1 9 9 2 4 2 3 1 8 4 4 9 ", "4 7 8 5 7 8 8 1 3 1 1 5 1 9 1 9 9 7 1 7 9 1 6 9 4 ", "7 9 1 2 8 1 8 1 1 7 2 3 2 1 3 3 8 6 4 8 1 7 3 8 9 ", "7 9 9 1 1 8 1 7 7 7 7 4 2 7 7 3 7 4 7 8 3 1 9 7 4 ", "9 1 2 9 1 1 4 1 4 4 9 1 7 2 3 1 5 4 8 3 1 4 7 7 4 ", "6 7 6 3 9 7 2 5 6 2 8 6 1 7 4 7 6 8 1 3 1 1 2 9 4 ", "1 2 3 1 5 1 8 5 1 7 6 9 7 3 1 3 7 8 1 1 1 1 8 7 2 ", "1 5 7 7 9 7 6 7 2 3 2 1 9 4 4 2 4 4 7 8 4 1 1 4 1 ", "4 9 7 1 5 1 3 3 7 2 7 4 6 5 5 8 7 2 4 3 1 1 1 7 2 ", "7 2 1 1 1 2 7 3 7 2 1 2 9 6 4 8 2 8 4 9 3 7 1 7 5 ", "4 3 4 8 9 1 8 8 9 9 1 2 9 4 1 7 8 5 3 3 1 4 8 1 4 ", "1 3 3 6 4 4 1 4 1 5 7 3 8 4 9 5 7 8 6 1 6 6 1 7 1 ", "1 1 8 8 3 9 1 7 1 3 1 1 2 1 4 1 7 3 3 1 8 9 3 9 4 ", "7 4 1 9 1 1 4 1 2 5 1 8 1 4 7 4 2 4 7 6 1 1 4 4 2 ", "3 1 3 1 5 5 1 4 1 5 1 1 7 1 7 1 1 3 7 1 8 4 1 1 1 ", "3 7 8 4 7 7 1 2 7 1 1 4 5 5 6 9 8 3 4 7 4 2 4 7 1 ", "6 4 3 7 3 1 1 8 4 9 4 7 2 5 6 4 3 5 3 6 1 1 1 8 3 ", "1 1 6 3 1 4 9 3 6 4 9 8 8 1 1 4 9 4 8 1 4 9 5 9 7 ", "8 5 1 4 1 1 6 2 8 1 1 3 4 4 4 1 1 8 4 7 4 1 1 3 6 ", "4 9 1 4 9 7 5 8 3 2 6 1 1 7 8 5 4 6 4 4 1 1 2 9 2 ", "7 1 5 1 7 7 9 4 7 2 7 9 9 9 4 4 1 1 1 1 5 8 4 1 9 ", "7 7 1 8 5 1 7 3 1 4 1 1 2 6 1 9 9 1 4 9 1 1 7 7 1 ", "1 4 3 8 1 1 7 4 1 2 7 7 5 1 1 4 8 1 7 9 4 4 1 6 1 ", "1 7 1 7 1 6 7 7 4 9 7 5 1 9 6 5 9 9 2 8 4 9 8 9 9 ", "6 1 1 2 7 5 4 1 4 1 7 7 7 9 1 7 7 4 6 9 6 6 8 3 1 ", "4 4 1 4 6 1 1 3 3 5 2 1 4 6 5 6 3 1 5 7 4 3 5 8 9 ", "5 3 4 1 4 7 1 8 6 4 7 7 6 7 2 7 6 1 5 1 7 5 4 1 4 ", "1 1 1 3 4 7 6 7 9 6 1 4 7 1 4 8 6 1 6 7 7 5 7 9 4 ", "4 8 3 8 6 3 8 1 7 1 1 4 7 8 3 4 2 7 7 8 5 1 2 5 8 ", "5 4 1 6 1 4 9 4 9 1 7 7 2 7 9 9 1 2 8 1 6 3 4 5 9 ", "4 6 6 1 1 1 6 1 7 5 7 1 3 1 4 3 1 1 4 7 6 6 1 8 1 ", "7 1 7 6 7 1 8 7 8 1 1 6 4 1 2 5 7 2 3 4 9 9 4 3 6 ", "1 1 5 1 3 8 4 4 1 9 7 1 8 4 8 7 1 7 3 1 6 3 2 4 2 ", "2 4 3 4 5 4 2 1 8 8 4 1 6 8 7 1 1 6 5 8 6 8 1 3 4 ", "1 7 4 4 8 1 7 1 4 2 2 2 1 4 3 7 5 1 1 1 4 5 3 4 5 ", "8 4 1 5 7 7 8 1 6 1 7 4 1 4 5 7 1 4 5 3 9 2 5 1 7 ", "4 2 9 4 3 2 8 5 9 7 3 1 9 1 1 7 1 8 5 8 1 2 1 2 1 ", "2 4 1 1 1 1 1 1 8 4 2 1 2 2 6 2 6 7 4 7 4 7 7 1 1 ", "7 8 5 7 4 1 1 9 4 9 4 1 7 7 7 6 3 4 2 8 1 9 3 3 8 ", "6 1 1 9 5 1 7 3 7 3 1 4 3 1 7 7 1 1 2 4 4 3 6 6 3 ", "4 1 1 4 2 1 7 8 3 7 5 1 1 1 7 7 3 1 7 8 1 4 7 8 1 ", "7 1 1 1 7 6 1 1 3 7 1 2 9 5 7 8 4 2 1 3 4 6 4 9 1 ", "7 3 4 4 4 8 2 8 1 8 1 1 4 4 3 9 8 4 9 1 6 1 7 7 7 ", "1 4 4 5 2 7 1 7 1 5 1 4 8 4 9 8 5 1 2 8 9 6 6 7 6 ", "5 6 5 4 1 8 1 6 5 5 1 5 3 4 1 5 6 8 7 4 9 7 7 1 1 ", "4 1 1 1 3 8 7 1 2 1 1 6 4 1 7 3 9 8 4 5 3 4 7 5 1 ", "7 1 1 1 8 1 4 1"};
    vector<string> lengths = {"1 1 4 4 1 4 7 8 5 3 6 7 7 4 1 7 4 1 9 2 2 1 1 6 8 ", "1 9 2 3 7 4 7 4 1 9 8 4 4 7 5 5 1 1 1 9 7 3 1 3 4 ", "7 3 1 9 1 7 4 7 7 1 1 7 4 9 1 1 1 3 2 5 4 1 5 1 4 ", "1 1 9 7 6 7 1 2 7 2 4 1 1 7 2 8 2 1 3 6 5 4 4 7 7 ", "9 9 4 4 7 1 8 3 1 1 1 4 1 1 4 1 7 3 7 1 7 7 1 7 7 ", "2 8 4 7 1 2 2 2 9 9 7 2 3 6 7 1 6 4 7 1 1 9 3 1 1 ", "4 9 7 6 1 6 1 9 3 4 7 4 5 3 1 6 7 7 6 1 4 4 6 1 1 ", "9 1 4 4 1 6 2 1 7 4 9 1 2 6 6 1 1 9 1 2 3 1 9 1 1 ", "2 6 7 5 1 6 2 9 7 9 7 7 4 9 3 4 7 1 3 4 1 2 4 8 3 ", "5 8 4 1 3 4 4 1 7 8 4 8 7 8 9 9 1 7 5 1 2 1 4 5 7 ", "1 4 1 7 5 7 4 9 6 4 6 5 7 9 7 1 2 2 8 9 5 7 5 1 4 ", "4 7 4 2 1 5 8 3 1 4 1 1 4 6 7 1 8 5 9 8 1 1 2 4 6 ", "4 4 7 8 1 1 8 9 8 6 1 4 1 1 1 2 1 7 7 6 8 9 4 4 1 ", "7 4 4 8 1 5 4 1 9 7 4 1 1 7 3 9 1 5 7 1 1 2 1 7 6 ", "2 2 7 7 6 5 2 1 6 1 7 4 9 8 4 9 5 6 9 1 9 5 3 2 4 ", "7 4 7 3 1 2 5 4 4 1 7 6 1 1 4 3 8 6 3 4 1 1 1 7 7 ", "6 4 1 7 8 3 2 3 3 4 7 7 6 4 3 2 6 9 9 5 5 1 3 6 8 ", "2 7 1 7 1 2 1 3 3 9 1 4 1 8 9 4 1 9 6 7 1 1 8 1 4 ", "9 6 6 3 9 3 4 1 2 1 4 4 1 2 5 8 8 5 9 5 1 7 3 1 4 ", "3 9 7 1 4 3 9 7 5 4 7 3 4 7 7 4 4 9 1 7 1 1 6 8 4 ", "3 1 5 5 1 6 7 5 5 8 7 2 6 7 2 1 3 7 3 6 9 4 5 3 6 ", "7 4 3 1 4 1 7 1 1 1 8 1 7 9 2 8 1 5 9 6 9 7 8 2 4 ", "1 6 1 1 1 3 8 1 7 2 4 3 4 1 6 2 1 7 2 8 8 9 7 7 8 ", "1 9 9 4 3 3 1 7 5 1 4 1 9 1 5 4 1 1 4 2 1 8 4 2 2 ", "1 2 6 3 2 8 5 8 7 1 4 6 1 1 1 1 3 4 1 7 9 4 4 7 3 ", "2 3 1 3 1 7 6 1 7 4 4 6 1 8 1 1 9 4 7 7 1 3 5 1 4 ", "1 5 5 6 6 2 8 8 7 2 1 7 1 6 4 5 4 1 4 1 4 7 6 1 4 ", "4 7 4 9 6 1 7 2 8 6 5 2 1 9 1 2 7 4 1 3 1 7 9 4 1 ", "1 4 5 4 2 1 8 9 7 1 1 7 1 6 5 6 9 7 7 1 1 9 6 8 4 ", "8 7 1 4 1 5 6 1 9 3 6 5 2 1 3 1 5 2 7 1 7 7 4 5 4 ", "1 1 3 6 7 8 7 6 7 4 1 4 5 3 7 8 1 1 7 2 1 7 7 3 1 ", "6 1 3 9 7 3 1 1 3 7 1 1 3 3 4 7 4 7 4 1 4 4 1 4 9 ", "7 2 2 8 6 7 8 1 4 9 4 1 1 8 9 4 4 6 1 4 8 1 7 2 3 ", "8 7 1 1 4 7 7 7 4 4 2 9 6 1 1 3 1 4 7 6 6 1 4 1 4 ", "5 8 5 7 5 6 1 9 1 8 5 1 1 5 1 1 8 1 8 1 2 4 1 5 1 ", "1 4 8 4 1 7 7 5 1 9 7 7 7 2 7 1 1 6 4 4 8 8 9 5 1 ", "1 6 5 5 8 1 4 4 6 3 9 5 9 2 1 7 1 5 2 5 7 1 1 7 7 ", "1 7 1 7 7 9 6 1 8 1 1 1 2 9 2 4 8 3 8 4 9 2 5 1 3 ", "5 1 7 7 3 2 6 1 5 9 7 1 7 4 1 8 9 1 3 9 5 1 1 4 1 ", "3 6 6 7 6 7 1 8 3 1 7 1 4 7 9 9 1 4 1 9 7 2 7 1 6 ", "1 8 2 1 8 1 1 9 4 6 4 7 7 5 4 1 3 8 7 1 9 1 4 7 1 ", "4 1 4 4 4 4 8 2 7 4 3 1 1 7 3 1 2 3 7 8 9 1 5 3 2 ", "5 7 4 8 1 8 7 6 1 1 4 2 4 4 3 5 1 8 4 1 8 7 1 2 4 ", "7 2 8 1 8 2 7 4 4 4 7 5 6 4 1 7 1 2 1 5 9 1 1 9 3 ", "1 5 9 7 3 2 1 5 8 8 7 1 5 8 3 3 8 7 3 9 3 2 4 6 8 ", "4 2 1 1 7 5 1 1 7 6 2 1 7 4 7 7 1 3 4 1 7 7 1 1 8 ", "1 7 7 7 7 8 9 3 5 7 1 1 3 8 1 5 1 4 6 7 5 8 2 1 7 ", "1 7 7 5 4 2 2 6 6 9 1 4 4 4 6 1 1 1 1 1 7 2 1 7 1 ", "1 4 4 7 4 7 1 7"};
    vector<string> names = {"Q J F V L G X U Y S A J X G G Y A I O A K X Y S Q ", "K O Y A C I B D P M S N Y S S A W O N J A W E W Q ", "E Y Q W A K V A S K A Z X I I I J H H Q S V R U G ", "Y J N L F E U Q A K O N N U C A C R F W A Q S Y A ", "E K W A K E K A I Y U S E E W W E J U I M D K R O ", "M Y G I Y B C M W Z A Q I Q P N Y G E C I W Q A E ", "Q I X O A O R A W N X K W O A U Y P S M W S V M O ", "I E S U A F A F P W D L I M S I P Q W O A G Q A A ", "Y W W A G L O X Y A E K R M J P K O N N E E W F M ", "U M A Y Y R N S A S O W W B W O A A K Z O Z V G M ", "I A J G I Y S M I N K J U Y N U A S C A A B S I Z ", "Q S E W Y W W O U K S I M M E Q A K F S N B N Y S ", "A A M C Y U G C C K M G O U N C C S Q Y B M W Z Q ", "S O U M S Y W V M E I D W A D O K X Z A G D H L Y ", "E O I A Z M A E G K B G P A S Y A C I F E S S C A ", "Q O U G C R A D Y E C A U B U I U E E A Q A U Y Y ", "W A Y I F Q O C A M A K T W E C U O T J C O W K U ", "U E A K G S A S J Q R A Q V L C Y W D S K E S G A ", "G I E U M H E Y I Q I M G S L P X U Z T P U A O W ", "U A N O D E Y Q C A R M C G N N N Y Y S A U S S I ", "Y A J N N I Y W F V K K Y A I A I U R U H S I C J ", "S A Z Y K M K E D A Y P B L E C A O G V A A I W T ", "M M A D G N I C A S A C W O U A M A K A E K O O K ", "E M A F C I M D D W A E Q I U U U V A N Q K R N Y ", "B B M X X N G N F A O C X C U U E W P Y R G A L Y ", "M V N V A C Q M D W X F X U B Z S U C B N B A S K ", "H A E I J Y O N O M N F S A S F A A U I O W Q I Q ", "C E A I D T S I M Y O B G W Q M M C A T A X S Q V ", "O E Y I Q W P A D D G G V E B E P S C E T U A M C ", "C B W P W W D Y M Y I I V K Q C N Z K U T E R H J ", "E C K Y O K C G V Q T N K Q U A M Q I C Q U C M Y ", "I A I U M V I C I W R A P E S M Q G A G Q Y A C W ", "C J G E S M Q J G C S A W F I Q C Q E W C A A C A ", "R W Q C K J O M U O T K Y M M I A E W C E D P N V ", "Q G S U X U K A R E Q A R A I M A M G G M K I C Q ", "N K O R A V O Y C A Q W O Y A W S Y A C F U C M C ", "S T Q G X A H A M U E K C U N P W S K G N A M C G ", "M P Y A W A N H Y A Q Y G H N T A D J Z W C Y K D ", "F S F K Q Y A Q U M O E Q W K M G H U W A C U K M ", "S X U S M I S P Y B P A Z E O U G W N K N N A K A ", "K S E Y Y R O A U J J Y V M R A A I O S C A F I X ", "A S V Y N L R U K Y I K E I A A O I Y G O I A U O ", "N P G N Q U K R O H Z G T A Q Z H O X F Q Y I B A ", "N A C S G S I C M Z Y B D S G G H I R B D I Q K W ", "W S F R T A H Z B H H I U F O L I C M E N U A Y N ", "A Y M C C X O S C C K T X S Y U K M S O O D Y A L ", "V G Q Y A A K E A A V I S E Z O O V S A P S A I E ", "O G U L A W W A V S M U P Y S S Y U M J O W C G O ", "H Y W A C O J I"};
    int k = 71;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "G", "O", "A", "D", "J", "J", "S", "S", "A", "C", "E", "K", "O", "Q", "Q", "S", "V", "W", "W", "W", "X", "A", "A", "I", "I", "W", "A", "G", "K", "M", "N", "O", "U", "X", "Y", "Z", "A", "A", "A", "A", "A", "C", "D", "E", "G", "H", "I", "I", "J", "K", "K", "K", "M", "M", "N", "O", "Q", "R", "R", "S", "T", "U", "V", "W", "Z", "Z"};
    if(result == expected) {
        cout << "Test Case 85: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 85: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test86() {
    vector<string> x = {"5 1 6 1 4 1 7 7 2 1 4 7 3 3 1 7 1 4 7 2 1 2 3 5 1 ", "5 2 5 7 7 6 9 3 5 8 7 8 4 9 8 4 7 7 7 1 3 2 1 1 7 ", "4 5 4 5 3 4 8 4 4 2 4 6 4 7 2 3 7 3 5 9 8 5 2 1 4 ", "1 7 1 1 1 6 1 2 1 9 1 9 4 3 7 9 8 1 1 6 8 1 5 4 1 ", "2 2 7 9 1 4 2 8 6 3 7 7 2 5 1 9 1 6 6 1 5 9 1 8 1 ", "9 3 1 1 8 2 5 9 7 7 2 4 7 1 9 7 7 1 6 8 5 9 7 1 1 ", "2 8 1 1 4 7 9 8 7 1 9 9 6 4 2 6 7 8 8 3 4 1 8 7 4 ", "4 1 6 4 6 9 5 1 8 3 1 4 3 7 7 1 4 1 2 2 3 9 8 1 7 ", "4 1 9 3 4 5 2 7 7 1 7 6 1 5 1 1 8 8 3 1 2 7 9 1 3 ", "8 6 5 1 1 4 1 1 9 8 4 4 4 5 2 5 1 7 1 5 1 8 5 1 1 ", "1 2 4 8 5 2 9 7 2 9 4 3 6 2 3 3 9 2 1 5 4 1 1 4 5 ", "1 3 1 1 2 1 3 5 8 1 2 7 2 7 2 7 4 1 1 6 6 3 8 5 8 ", "3 1 1 7 7 7 1 6 2 3 6 1 1 6 1 5 4 7 1 1 4 1 7 3 6 ", "1 3 7 7 1 9 9 7 1 9 4 7 1 2 1 7 1 7 1 7 9 4 7 5 1 ", "1 9 6 1 4 6 4 4 7 8 5 3 1 3 7 8 2 7 3 1 3 4 7 1 3 ", "3 4 5 7 2 4 5 1 9 6 3 5 7 9 6 8 9 3 2 7 2 6 9 2 2 ", "1 2 8 1 7 1 4 7 4 2 4 9 7 9 4 1 1 4 7 1 1 1 3 3 8 ", "9 4 4 9 5 8 9 9 9 1 6 2 7 4 4 6 2 1 4 7 1 1 8 4 2 ", "7 1 4 7 8 6 1 4 1 3 2 3 4 1 7 6 9 4 1 7 7 2 9 7 4 ", "7 6 1 1 1 9 6 7 1 7 1 2 5 5 1 1 8 1 1 8 7 6 1 1 9 ", "1 3 1 1 4 2 1 4 7 7 2 5 2 4 2 4 7 2 7 2 1 8 9 1 4 ", "9 9 7 6 8 4 4 9 7 3 7 8 8 1 6 1 2 1 3 4 6 9 7 1 7 ", "7 1 6 3 1 3 1 9 8 1 4 3 3 1 7 7 4 4 4 4 1 4 3 4 7 ", "7 9 6 1 3 1 1 7 1 9 1 9 1 3 7 8 4 1 7 4 1 4 5 4 2 ", "2 1 5 5 1 2 1 7 2 1 9 9 1 2 1 1 2 2 5 1 2 2 8 1 7 ", "1 7 5 7 1 4 8 8 1 3 1 3 5 7 4 1 1 2 9 5 5 4 2 7 5 ", "1 8 1 4 4 4 2 5 9 2 7 7 7 2 1 5 1 6 2 9 5 8 4 5 1 ", "7 6 7 1 4 6 5 1 1 2 1 1 1 1 7 4 9 8 1 9 4 2 1 7 4 ", "7 8 5 7 1 8 5 2 7 7 4 4 6 6 1 1 1 2 4 7 9 8 2 2 3 ", "4 3 7 1 4 1 1 6 5 1 7 1 5 3 4 5 2 6 7 5 2 1 1 7 1 ", "1 4 4 6 1 1 5 7 8 8 4 5 1 7 4 6 9 6 7 3 1 1 2 1 8 ", "8 1 9 9 7 1 5 8 6 6 6 6 1 1 6 5 9 2 7 9 7 4 6 7 6 ", "1 4 7 1 9 1 1 1 9 5 7 5 5 5 5 1 1 3 4 1 4 9 1 9 9 ", "9 8 1 2 1 3 9 8 9 3 1 3 6 2 4 7 5 2 1 6 4 4 1 9 1 ", "4 9 1 5 9 7 9 3 2 1 6 1 6 5 4 1 1 4 8 8 3 1 1 2 7 ", "8 1 7 8 4 4 4 2 7 4 3 1 7 1 4 4 2 1 6 4 7 9 1 1 1 ", "5 2 7 1 4 6 4 1 2 1 2 4 1 1 1 1 6 1 1 9 9 1 9 7 3 ", "4 7 6 7 4 1 7 7 1 7 5 5 8 4 7 1 3 2 7 9 4 7 2 6 3 ", "1 4 6 1 9 4 1 5 1 9 1 3 4 3 2 1 8 7 9 9 6 1 7 1 5 ", "1 1 4 8 8 1 2 4 7 1 9 5 9 1 4 6 8 1 1 3 8 8 6 9 8 ", "1 1 2 1 7 1 1 1 7 4 7 5 7 8 1 1 7 7 2 4 2 3 8 4 9 ", "4 4 3 7 3 4 1 2 7 1 1 6 5 8 9 1 4 7 1 2 5 2 3 8 1 ", "1 6 1 3 4 4 7 7 9 4 4 3 6 8 1 1 2 7 4 1 9 8 1 4 7 ", "1 8 2 4 4 4 1 1 6 3 6 3 6 2 2 4 6 6 4 4 8 7 1 5 1 ", "6 4 5 1"};
    vector<string> y = {"1 5 4 7 4 4 7 7 1 1 5 1 7 1 5 7 7 1 5 1 4 5 4 1 4 ", "4 7 8 4 1 7 4 4 3 4 3 1 6 1 7 5 1 1 6 7 4 1 1 3 6 ", "1 4 4 3 1 3 3 8 4 2 5 1 7 7 3 1 2 1 3 5 7 4 7 7 3 ", "5 3 4 4 7 7 6 1 3 7 1 1 7 1 7 1 2 4 3 4 9 7 1 1 1 ", "1 2 7 1 2 4 7 6 6 4 8 5 1 5 3 2 1 4 7 1 7 3 3 7 5 ", "1 6 4 9 1 3 1 7 9 8 1 5 1 8 7 9 8 1 1 4 1 7 1 1 5 ", "2 6 2 4 1 2 1 1 1 4 1 7 1 2 3 9 8 7 1 4 9 1 3 4 7 ", "4 3 7 7 1 1 6 7 7 1 2 1 7 8 9 4 3 1 7 9 9 9 5 1 2 ", "9 9 1 5 2 6 6 1 3 1 3 9 1 1 3 4 4 8 2 2 6 1 8 5 7 ", "3 1 3 3 4 5 1 7 1 3 7 9 4 7 1 4 9 7 4 3 3 4 1 1 5 ", "1 4 1 7 7 7 2 1 1 1 1 7 6 9 1 4 7 8 6 7 7 4 7 4 1 ", "9 1 2 2 2 2 7 4 5 3 3 1 3 8 2 7 1 1 7 7 1 1 9 7 1 ", "1 4 1 1 1 4 2 1 5 1 2 7 9 7 1 4 8 3 4 6 3 5 1 9 7 ", "1 7 8 5 1 1 3 3 3 1 2 2 1 5 8 2 9 4 7 6 3 2 7 3 4 ", "3 6 4 5 5 7 1 7 5 1 3 1 4 1 1 3 8 3 4 2 9 7 3 3 1 ", "5 5 8 7 1 5 5 3 8 6 7 1 7 8 4 8 8 2 4 7 1 5 1 5 8 ", "7 7 1 3 9 7 1 5 7 6 1 7 3 4 1 9 7 1 9 9 4 5 1 8 1 ", "1 3 1 1 6 9 7 2 6 1 1 7 7 9 8 3 7 4 2 4 2 3 5 4 9 ", "4 2 8 1 5 1 3 6 1 3 7 9 4 7 7 7 1 7 3 7 9 1 8 7 7 ", "9 1 5 6 5 1 6 3 4 1 1 3 1 7 2 4 7 5 2 3 5 8 3 1 6 ", "4 3 1 4 5 5 4 1 4 7 5 6 7 1 6 6 3 1 3 1 3 7 1 1 6 ", "4 1 1 5 5 1 6 2 1 2 1 7 7 6 1 2 8 1 7 7 7 8 6 7 4 ", "6 6 7 1 5 1 1 7 2 9 1 2 1 4 4 1 1 1 3 4 9 1 3 4 1 ", "8 1 7 8 4 4 8 7 8 5 6 2 1 9 8 1 5 1 1 1 4 5 1 1 1 ", "4 5 9 9 6 5 7 2 8 7 1 8 4 3 8 3 1 6 9 4 4 8 7 1 1 ", "1 3 7 2 1 2 6 2 1 2 2 3 4 6 2 7 1 1 1 3 6 1 2 1 6 ", "8 1 1 4 1 4 2 4 6 1 9 1 4 4 4 1 6 1 1 5 7 9 1 3 4 ", "7 3 1 8 8 5 1 1 7 5 3 5 9 2 5 7 5 5 7 1 3 3 2 8 9 ", "4 8 2 2 1 7 1 8 2 7 2 1 4 6 1 1 1 7 6 5 9 6 6 5 4 ", "6 4 1 1 9 8 7 1 1 9 1 6 5 1 1 1 1 3 8 7 7 1 7 9 7 ", "1 7 3 1 1 1 5 1 4 7 1 1 7 4 2 3 4 4 3 7 7 7 4 1 1 ", "9 8 9 1 4 5 1 3 6 1 4 9 8 5 4 3 6 1 4 4 1 1 7 1 5 ", "1 9 1 3 5 9 1 7 9 3 4 9 7 1 1 7 1 5 3 1 4 4 5 9 2 ", "8 1 6 1 1 2 1 4 4 5 4 1 1 6 1 1 6 1 2 5 6 3 4 9 4 ", "4 1 1 5 4 9 9 7 4 1 6 7 7 6 3 4 7 7 1 3 7 5 7 1 1 ", "1 7 1 6 5 1 5 6 1 7 1 4 4 9 3 1 4 1 6 1 8 9 5 4 1 ", "1 3 1 7 3 2 9 4 1 1 8 1 8 1 1 7 4 1 7 1 8 2 4 5 1 ", "1 3 1 1 6 1 5 7 4 2 8 2 5 8 4 1 6 7 5 7 8 1 2 1 8 ", "3 3 1 8 9 7 3 7 2 1 9 5 5 9 1 6 4 1 4 1 1 2 7 8 1 ", "4 9 4 1 1 6 1 6 3 6 5 7 1 5 1 1 7 8 3 2 8 3 4 8 9 ", "9 1 3 4 4 7 7 3 7 5 8 2 6 2 9 4 7 7 9 1 4 4 7 6 2 ", "3 3 3 5 3 3 1 9 7 4 1 7 1 1 9 1 9 1 6 7 1 6 5 7 3 ", "1 4 1 1 6 7 7 1 7 4 1 1 4 4 1 9 5 4 9 1 9 1 1 4 6 ", "9 1 1 1 4 7 1 9 7 2 5 3 7 5 9 1 1 9 1 3 4 7 1 6 4 ", "3 3 1 3"};
    vector<string> lengths = {"1 9 8 4 3 1 5 4 6 8 4 2 8 5 2 4 2 4 7 2 4 4 2 4 6 ", "3 7 4 8 4 9 2 7 8 3 1 1 7 1 9 1 1 7 6 7 6 1 3 4 3 ", "4 9 1 4 1 3 7 7 4 8 1 7 8 1 1 1 8 1 9 1 3 1 7 3 4 ", "9 4 1 1 1 2 8 9 7 1 2 1 7 4 6 7 8 1 5 1 8 5 6 9 6 ", "8 1 1 1 9 6 9 9 2 5 1 2 7 1 1 1 4 1 1 6 1 5 4 9 1 ", "1 4 4 3 1 6 6 7 8 7 7 7 1 7 7 1 1 2 4 1 3 7 1 2 6 ", "2 9 1 1 8 5 1 4 6 3 1 7 3 2 3 7 1 7 8 6 5 1 7 1 1 ", "1 9 8 4 4 2 4 1 2 7 1 8 7 8 7 8 9 7 1 7 4 9 2 4 1 ", "7 8 2 3 2 4 1 6 4 4 3 6 7 7 1 7 3 1 8 1 4 7 2 4 1 ", "2 1 4 4 5 8 2 3 5 8 2 1 1 7 7 9 7 8 8 8 9 9 4 5 1 ", "9 1 7 3 3 1 2 6 6 1 7 7 1 4 3 6 2 1 5 2 2 4 1 6 2 ", "5 1 1 2 7 1 9 7 1 3 4 9 4 1 4 1 7 4 7 7 4 1 4 1 1 ", "3 9 1 7 2 9 1 3 7 7 4 3 5 6 8 5 6 7 4 5 4 2 2 7 1 ", "7 1 6 2 1 7 3 7 1 7 1 9 1 7 3 3 7 4 8 7 7 1 3 8 4 ", "8 4 3 9 1 5 5 4 9 8 1 6 5 7 9 5 1 7 1 8 7 7 5 4 1 ", "6 2 4 4 7 1 5 8 1 4 4 7 2 7 1 7 2 7 7 1 1 4 6 2 8 ", "4 4 4 7 7 8 1 1 7 1 7 1 8 4 6 4 4 1 7 1 9 4 7 1 4 ", "8 7 5 7 3 7 1 1 4 2 5 7 2 7 1 2 9 4 2 4 5 1 6 6 8 ", "1 7 5 4 1 7 1 1 5 4 3 9 4 1 1 6 1 4 6 2 8 8 5 6 5 ", "6 9 5 7 5 1 2 5 9 8 3 3 8 1 9 2 4 4 1 1 1 7 2 1 1 ", "7 7 3 3 2 3 7 2 4 7 8 6 3 9 1 4 2 3 5 8 4 7 5 7 8 ", "1 1 7 1 5 1 8 1 1 7 7 4 4 2 4 6 8 4 1 1 1 7 8 9 8 ", "1 6 1 2 3 1 8 7 9 5 7 6 9 2 8 4 3 7 4 4 7 3 1 1 1 ", "2 7 7 1 1 2 7 7 6 6 5 1 4 8 9 9 5 3 4 4 7 4 3 1 6 ", "6 1 8 1 7 1 4 4 4 7 8 1 4 7 8 8 5 1 4 1 7 1 5 1 4 ", "1 7 9 1 6 9 4 1 1 7 2 4 2 1 4 4 7 6 3 1 4 5 7 3 2 ", "3 4 5 3 6 7 7 6 7 6 8 1 1 4 1 1 9 7 4 1 1 5 5 5 4 ", "4 1 6 7 5 7 9 6 8 8 1 1 1 1 7 4 5 1 7 8 1 1 9 4 3 ", "1 1 6 6 7 3 1 6 1 5 3 6 9 7 1 4 9 6 5 8 1 4 4 1 4 ", "3 7 6 4 1 9 3 9 9 6 5 1 7 7 3 5 4 4 7 1 1 7 7 3 8 ", "6 2 3 5 9 1 4 1 8 3 1 1 1 3 5 4 5 1 1 2 6 8 1 2 1 ", "5 9 5 1 7 7 6 5 7 8 4 3 4 4 1 2 9 4 1 1 1 9 7 6 7 ", "7 5 8 4 8 7 1 1 3 4 1 1 7 8 8 6 1 7 5 1 9 7 4 7 7 ", "1 9 1 7 2 4 1 4 1 1 5 5 9 7 1 8 4 9 4 7 3 7 4 1 3 ", "7 4 7 7 4 1 7 9 5 1 4 2 9 7 1 7 7 2 7 7 2 2 1 7 8 ", "1 4 8 9 8 8 1 1 1 1 7 1 6 6 6 4 7 7 4 8 4 9 8 1 7 ", "7 4 1 4 4 2 1 9 4 8 8 1 4 9 9 4 8 1 5 2 2 2 7 4 5 ", "3 8 2 1 7 6 7 5 4 2 1 9 8 6 8 1 5 6 7 3 4 7 4 7 4 ", "3 7 4 3 4 6 1 7 9 9 6 6 8 7 1 4 2 5 8 4 5 6 8 5 3 ", "7 1 4 9 1 1 1 4 5 7 4 5 2 9 7 8 1 1 4 6 7 7 1 9 1 ", "9 7 9 2 1 3 1 3 1 7 4 7 1 8 3 9 8 8 7 1 1 4 7 9 4 ", "7 4 4 7 7 6 2 8 9 1 2 7 6 8 7 7 6 7 4 9 1 7 5 7 1 ", "1 9 2 1 6 3 1 4 2 7 1 1 4 9 9 5 1 2 7 1 4 1 1 6 1 ", "2 7 8 1 7 6 5 1 4 5 1 6 9 2 1 4 4 7 8 3 8 4 1 9 9 ", "7 2 3 6"};
    vector<string> names = {"F B P S A Y J X D W Q G Y F A M Y J A W C O S W W ", "F C M Y V S Q A Q E E C A U I Y A G T E I A J L E ", "W K Q Q G S G E C G Y I W O N C S P Q E G O O R M ", "M X S N U E I I M A I N D I O B M Y Y A S I J Y K ", "S A F E W Y M N V E G K A G C U B S K T U Y K I M ", "I K Q G Q C A E O Q D A W K K O G A P X B E D Q Y ", "G C A J A X A L G W Q Q Q O U O N U Y I W T I J M ", "M R O N F K C C J A Z C I S Q K M Q W H W S E M O ", "V J O S M A A P T A N X F L U A I R V B N M A S K ", "M S A U I Q A S R A I M R N A E A R U B O M P A A ", "W Q M J T H J Y J A A A Q K Y M E H Q A K G O E U ", "M Y I I H G Q Y M E O S P N F A R Q A C Y X I A U ", "J L A O X Q K P W W A V U R V G Y V W Q E U S S M ", "Q U G U Q V A M C A C U I V Q Z Y K M I Y U I A F ", "Y N E O K A S W L M Q E Y S X A A W C L W V S J O ", "I O G A G O Q F P M Y O X W M R O E Y O N F W K I ", "W K C F G P E S M W A P V C K N E K A K C E A L W ", "N I W W A L I G Y A K W X I G U M A O F Y I U M W ", "H Y I I E S M E C C W O I E O Y O A E E C S U W W ", "J B Y I A Y Q G Y O S E R A B A S A X E Y A A E W ", "Q K L B A C T R M K J Y G Q A Y U A I Q Y K Q Q A ", "A F K Q W I I Q H L M B C C I H E A U M Q A Q A C ", "A A W A S C U K L M M F U F E A T V G Q W E W D C ", "P F C K Q U E G Y A P G S C W M A D A K C Y E U S ", "Q W I S W O W C L X M Y S A E P Y K Q Y S I Q U J ", "D F E Z K A B Q Y P V K A L M Y M Q R Y S C O T O ", "U Q X E X Q W S W W C K N E V G V L G A E Y H G S ", "M G M M C J T U L B W I Q J O C F E A A X Q C A Q ", "J Q A P E A K H G G M Q C Q O E H Y Q U S Y Q Y H ", "B K U A R Y F G O K N Q H K A E O M E C G Y A G E ", "O G F Z A J X G W Y C Y Y L T U D A N Y R Y G I Y ", "O O I G G A U A M G K D O O Y A G X K E Y T Y R O ", "F O A C Y A N J N A A C Y Y W E N O U K M A I C J ", "S G G W O I I R P I E S E I D H Q C P Y V R G C I ", "W A A M F N A U C W W I R U U Q A U Y O Y O A S Q ", "N M K G W G U Y E C E C N V S S B F V P G G A G W ", "W Q M G T W S W W A C N G G N A M J L A S D A A U ", "I M I C H W Q I C M M E Y I I I H H A I N C Q F Z ", "E T A C X C C O U G K N T U S S I C Y D M A U V Q ", "T C Y K C G Y H W K S L M O C C A F U Y U W C P Q ", "L K S L E K X U K P Q N C Q O T Y A Y J A W Q G U ", "C R F G A I S A A L M A Z S A F I S D I R T V A Z ", "A O A A V P Z Y C E S Q F U K A N K O K W G W I Z ", "M C K G V Z I X S K E K W A C E U U K U M K O F K ", "I A I A"};
    int k = 60;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "E", "F", "F", "F", "F", "K", "K", "K", "O", "T", "U", "A", "C", "I", "X", "A", "A", "A", "B", "E", "M", "Q", "S", "D", "J", "L", "S", "A", "A", "A", "A", "I", "I", "M", "O", "Q", "S", "A", "A", "D", "E", "I", "I", "J", "J", "K", "K", "N", "N", "O", "O", "Q", "T", "U", "W", "W", "Y"};
    if(result == expected) {
        cout << "Test Case 86: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 86: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test87() {
    vector<string> x = {"2 2 5 4 3 4 4 1 1 2 1 1 1 1 1 5 5 2 5 3 1 4 1 4 4 ", "4 4 1 1 5 1 3 1 5 2 5 2 4 1 1 1 3 1 3 1 2 4 3 4 4 ", "1 5 1 2 1 2 3 1 4 2 1 5 2 3 1 1 1 3 3 2 1 4 5 2 4 ", "1 1 5 2 3 1 1 1 2 1 1 1 3 3 4 1 4 2 1 1 2 5 5 2 3 ", "1 1 5 5 1 5 5 2 1 1 1 1 3 1 1 4 2 4 4 1 5 2 1 1 2 ", "5 5 5 1 4 2 1 1 5 1 1 2 1 1 2 2 1 2 4 5 1 3 3 2 5 ", "3 2 3 3 3 1 5 1 1 5 1 5 3 1 1 4 1 1 3 4 5 4 2 2 4 ", "3 1 5 3 1 1 1 1 5 1 1 1 3 5 1 3 3 2 1 3 1 2 1 1 1 ", "1 5 1 3 2 3 3 1 1 4 3 3 3 1 2 1 4 3 1 1 1 2 1 3 3 ", "1 1 5 3 3 2 1 4 1 1 4 1 4 1 1 4 5 2 2 3 1 5 2 1 1 ", "1 1 1 5 2 2 1 1 1 4 5 2 5 4 2 3 5 1 2 3 4 3 5 2 5 ", "3 3 3 5 1 3 1 2 4 2 3 1 5 5 4 3 3 2 3 3 1 3 5 3 4 ", "4 4 5 1 3 5 3 5 1 1 1 1 1 4 1 1 3 2 4 3 1 1 5 2 2 ", "5 4 1 2 3 3 2 1 2 1 5 5 4 2 2 4 3 5 2 3 3 2 1 1 1 ", "3 1 2 1 2 2 4 5 4 1 1 2 2 5 1 4 4 5 4 1 5 4 3 5 1 ", "1 1 1 2 5 1 4 2 4 2 2 3 5 3 1 5 3 5 1 4 4 1 3 1 2 ", "1 1 4 1 3 5 1 2 3 3 5 2 5 3 4 4 2 3 2 3 3 4 1 2 2 ", "3 1 1 2 5 3 1 1 3 5 2 3 1 4 3 4 5 4 5 2 2 3 3 4 2 ", "1 1 5 1 1 4 3 5 4 2 1 2 1 3 4 4 2 5 4 1 4 1 1 4 1 ", "1 1 3 2 1 2 4 4 1 1 5 5 1 3 5 2 3 1 1 3 1 5 2 1 5 ", "5 5 1 3 5 4 2 2 1 3 1 2 3 3 2 1 4 1 3 4 4 5 5 1 3 ", "4 2 1 1 1 5 4 1 3 3 5 1 3 3 2 1 1 1 3 1 1 5 1 1 4 ", "3 5 1 3 2 1 3 5 4 5 5 1 1 1 4 3 5 4 2 1 5 4 3 4 3 ", "5 4 1 1 1 1 2 1 1 1 1 5 3 1 2 3 2 1 1 2 1 2 4 4 1 ", "3 3 3 3 1 4 2 2 4 5 5 1 3 5 4 3 5 4 5 4 2 1 2 5 3 ", "5 3 5 2 1 1 1 3 3 5 1 4 5 1 5 4 5 2 1 1 1 3 5 1 1 ", "3 5 1 1 2 5 5 5 5 3 1 1 1 2 4 2 3 3 4 3 3 1 1 4 1 ", "1 4 1 4 1 4 1 1 1 2 1 3 1 1 5 1 2 3 1 2 3 3 5 1 2 ", "4 1 3 1 4 2 4 1 1 3 2 4 1 2 1 1 2 1 4 1 1 1 4 1 5 ", "5 1 1 1 4 2 4 1 3 2 1 5 4 4 5 1 2 5 4 2 4 4 1 2 1 ", "1 1 4 4 4 5 1 4 5 5 1 1 3 1 2 3 2 5 4 4 5 3 2 2 4 ", "3 4 3 1 5 1 3 4 4 5 3 1 1 4 2 1 3 5 3 1 1 1 2 4 2 ", "5 4 1 2 4 1 4 1 1 3 1 1 3 2 4 4 4 4 4 3 1 3 2 4 1 ", "1 5 1 1 1 5 1 2 1 1 3 1 1 3 1 3 2 2 1 1 4 3 4 2 4 ", "4 4 4 2 5 1 2 1 1 1 5 1 2 1 2 5 1 3 1 1 5 1 1 2 3 ", "1 5 4 3 4 1 1 3 2 4 1 4 5 1 1 1 1 1 4 1 1 5 1 2 1 ", "3 1 1 5 1 1 5 1 2 5 4 2 1 1 2 1 1 1 1 5 1 2 3 3 4 ", "4 1 1 4 2 5 3 5 1 2 2 4 4 1 4 1 2 4 3 5 1 4 1 4 5 ", "3 4 1 1 2 2 1 3 5 5 4 3 5 4 1 1 1 5 5 2 1 5 1 3 2 ", "4 5 3 2 3 3 5 5 4 3 5 5 1 2 4 1 1 3 4 4 3 4 1 1 3 ", "3 5 3 1 2 4 4 5 4 1 1 5 1 3 3 4 3 4 2 2 1 4 5 1 4 ", "3 3 3 1 1 5 5 1 2 4 1 5 3 5 5 1 5 2 4 1 1 1 2 4 4 ", "1 1 5 2 5 5 4 5 3 2 4 1 3 1 1 1 2 5 4 3 3 1 1 5 1 ", "3 1 2 1 4 3 1 2 1 1 2 5 1 4 1 1 1 5 3 1 1 4 3 3 5 ", "4 4 1 1 4 4 5 2 1 1 2 2 1 1 1 4 1 3 1 2 1 5 3 1 1 ", "2 1 4 1 1 5 4 1 1 3 1 2 1 5 1 1 3 1 4 1 5 1 4 4 1 ", "1 1 3 4 3 2 1 2 3 5 1 2 1 5 5 2 4 3 1 1 2 1 5 2 1 ", "3 5 2 1 4 4 3 4 5 5 1 1 1 3 2 1 1 1 1 4 3 1 3 5 3 ", "3 3 5 3 1 1 1 1 3 1 1 3 3 4 4 3 1 5 1 2 2 1 1 2 1 ", "1 4 1 1 5 4 5 1 4 1 2 5 1 2 5 1 4 1 3 1 4 5 1 4 5"};
    vector<string> y = {"5 1 2 4 2 4 1 2 2 2 3 2 1 3 3 1 1 3 1 1 5 1 5 5 1 ", "3 3 1 1 2 2 5 3 2 1 3 4 4 4 5 1 2 5 1 1 2 1 5 1 3 ", "2 1 1 2 5 3 5 4 4 1 1 3 1 3 1 1 3 1 1 5 1 1 2 3 4 ", "1 4 2 1 1 3 4 4 3 2 1 4 3 1 3 2 1 1 4 1 1 5 3 1 1 ", "2 3 1 3 3 3 4 3 1 5 1 1 5 1 1 2 1 2 5 5 2 1 1 1 5 ", "3 5 2 5 4 1 4 5 1 4 4 5 3 1 1 4 4 4 1 2 1 5 3 2 1 ", "3 4 1 1 1 4 5 4 3 1 1 1 4 1 3 1 5 5 1 3 1 2 3 1 1 ", "1 5 5 2 1 1 4 1 5 5 3 4 1 4 2 5 4 1 3 5 5 3 3 1 5 ", "1 1 1 4 1 3 1 2 3 1 1 4 3 1 1 4 4 1 1 3 3 4 3 1 2 ", "2 3 2 1 1 2 4 1 2 2 1 1 1 1 1 1 1 5 3 5 4 3 1 3 1 ", "1 5 1 1 1 1 3 2 5 4 1 4 1 1 3 1 4 2 2 1 1 5 1 4 1 ", "1 5 4 1 5 1 5 5 1 1 1 1 1 1 3 1 5 1 1 1 4 4 1 5 1 ", "4 4 2 5 5 4 1 1 1 2 4 1 3 1 1 1 5 5 1 1 3 3 1 1 2 ", "1 2 5 2 1 3 1 1 5 2 4 2 4 1 2 1 5 2 1 3 1 5 4 1 1 ", "5 5 1 3 2 4 3 1 1 1 5 2 1 3 1 2 1 1 1 2 1 1 5 3 1 ", "1 3 1 1 5 5 1 4 5 5 1 2 4 2 4 3 4 2 2 2 1 1 1 2 1 ", "1 1 3 2 2 3 5 3 2 2 1 5 4 2 2 3 1 2 2 5 2 3 1 3 5 ", "1 1 1 1 1 1 1 5 1 1 1 1 2 5 1 2 1 2 3 1 1 1 1 1 1 ", "3 1 1 1 5 5 3 4 4 4 1 3 1 5 1 2 5 5 1 5 3 3 5 3 4 ", "1 4 2 4 2 1 3 1 4 2 1 1 2 5 2 1 5 1 1 3 5 3 1 3 1 ", "5 1 1 3 1 5 3 5 1 2 1 2 1 3 1 1 2 2 2 1 1 3 1 1 3 ", "5 2 1 1 4 1 3 2 1 1 4 2 1 1 2 3 5 1 2 1 1 1 4 4 5 ", "1 3 4 5 2 2 1 1 1 4 5 1 1 1 1 3 1 2 1 5 3 3 1 4 5 ", "4 4 2 4 4 2 1 4 3 1 1 2 2 5 3 1 4 1 1 2 2 1 3 1 5 ", "1 1 1 3 2 5 1 3 1 5 5 3 5 1 2 3 2 2 3 5 5 3 4 3 5 ", "4 1 1 2 5 2 5 3 2 4 1 2 4 5 1 1 2 3 2 1 4 4 5 1 1 ", "4 3 1 2 1 1 1 1 1 3 3 2 1 5 4 5 1 4 4 1 3 1 2 1 2 ", "1 4 1 4 4 5 1 2 1 1 1 3 1 5 3 4 1 4 1 3 1 3 1 5 3 ", "3 4 2 1 1 3 3 3 5 4 5 1 1 2 2 2 5 1 3 5 1 3 1 1 4 ", "1 3 1 5 4 1 1 1 1 1 1 1 3 3 3 3 4 2 4 3 1 4 5 5 4 ", "2 5 1 5 3 1 1 4 2 3 5 5 1 1 4 2 3 5 2 4 2 2 4 1 5 ", "5 4 2 2 4 4 2 1 3 5 5 2 2 2 4 3 1 4 1 2 1 1 4 5 3 ", "5 4 1 4 3 3 1 5 1 5 2 5 1 2 2 1 2 5 5 3 4 1 2 1 1 ", "5 1 1 1 4 3 4 2 5 1 1 1 3 1 1 5 1 1 1 4 1 1 1 3 1 ", "1 2 5 5 1 1 1 1 1 2 3 5 4 1 2 1 4 1 4 1 2 4 1 2 2 ", "3 1 3 4 1 1 1 1 5 3 1 1 1 2 1 1 5 4 1 4 3 2 1 2 1 ", "1 2 3 1 4 4 4 1 1 1 4 4 5 5 4 4 3 4 1 2 3 3 2 4 1 ", "1 3 1 3 1 3 1 1 1 3 2 1 4 4 1 1 3 2 1 4 1 2 1 3 4 ", "4 3 1 1 5 3 4 3 2 1 1 1 4 5 1 4 5 3 1 5 1 1 1 2 1 ", "3 1 4 1 4 5 4 5 3 5 2 2 4 4 1 1 5 4 1 2 4 1 3 1 2 ", "5 3 2 2 4 3 1 1 4 5 1 5 1 2 1 1 3 3 3 5 5 5 2 5 5 ", "4 1 3 2 2 3 2 2 3 4 3 1 5 2 1 5 1 3 1 1 1 3 2 2 3 ", "5 4 4 3 1 4 1 1 1 3 4 2 1 1 1 1 5 5 1 1 1 2 1 1 1 ", "1 4 5 3 1 1 2 4 2 3 5 1 5 3 4 1 3 2 4 4 2 2 3 1 3 ", "5 3 3 1 4 3 4 1 2 1 1 1 3 1 1 4 5 4 1 3 5 1 5 3 1 ", "5 1 1 5 4 4 5 1 5 3 5 1 5 1 3 5 1 2 1 1 3 1 5 3 3 ", "2 5 4 1 1 3 4 3 1 4 2 1 1 1 5 1 4 2 1 4 3 1 1 2 1 ", "2 1 3 4 3 1 3 3 2 1 4 4 5 4 1 1 4 4 1 2 3 5 4 2 5 ", "2 4 5 1 2 1 4 1 2 1 3 4 2 2 4 1 4 4 2 1 1 1 2 4 5 ", "5 2 3 3 3 4 1 4 2 5 1 4 1 1 5 1 2 1 4 1 1 2 1 1 5"};
    vector<string> lengths = {"4 3 1 1 5 3 3 5 4 5 4 5 3 5 4 1 1 3 5 3 5 5 1 2 2 ", "1 5 3 1 5 3 4 1 4 4 5 3 5 2 2 2 2 3 1 1 5 1 2 3 1 ", "3 4 3 1 1 3 3 1 2 2 5 4 4 2 5 4 1 5 3 4 5 1 1 5 1 ", "4 2 2 4 2 3 1 1 1 2 1 5 4 5 3 5 4 5 1 2 2 5 1 1 5 ", "2 5 4 1 1 4 3 1 3 3 3 5 1 5 1 5 5 3 1 3 4 3 3 3 1 ", "1 3 4 4 2 1 1 4 5 1 1 5 4 2 1 2 3 3 5 3 3 1 2 1 5 ", "1 1 1 4 5 2 5 1 1 3 4 3 5 2 3 5 2 1 3 2 1 3 1 1 1 ", "5 3 1 3 5 4 3 1 1 1 1 4 2 1 1 5 1 1 1 1 2 2 5 1 4 ", "2 3 5 1 4 1 1 1 4 5 4 3 3 5 1 2 1 2 3 1 1 1 2 1 4 ", "3 3 3 2 2 2 5 4 3 4 1 1 3 1 5 1 2 2 4 5 5 1 4 1 2 ", "1 1 4 5 1 5 1 1 2 1 5 5 4 4 1 1 1 4 5 5 4 5 1 1 4 ", "2 2 3 1 4 5 4 1 2 1 3 1 2 3 2 4 3 1 3 1 2 2 5 4 5 ", "2 4 1 5 1 4 3 2 1 5 1 1 5 3 2 3 4 5 1 1 1 1 4 3 3 ", "5 1 4 5 2 1 3 1 5 5 1 3 4 3 1 2 3 2 1 1 1 2 1 3 2 ", "5 1 1 4 2 1 1 1 1 2 2 5 5 3 5 1 2 3 1 1 2 2 1 4 1 ", "1 1 4 1 5 3 4 1 1 3 1 1 3 1 1 3 1 1 1 1 2 1 3 1 5 ", "4 1 4 5 2 1 2 4 4 4 1 2 3 3 5 1 1 1 2 4 1 2 1 1 4 ", "3 3 1 3 5 4 4 1 1 1 1 2 5 3 5 4 1 2 4 4 4 5 5 1 4 ", "4 2 5 1 2 4 3 2 1 4 1 5 2 5 3 3 2 3 1 1 4 2 5 1 1 ", "1 1 4 3 3 1 1 1 5 5 5 1 2 4 2 4 3 3 1 5 2 1 4 1 2 ", "3 3 3 4 5 2 1 3 1 1 3 1 3 5 4 2 1 1 1 3 3 1 2 4 2 ", "3 3 5 5 1 1 5 4 1 3 1 4 4 1 1 1 4 5 1 5 1 1 3 3 1 ", "1 5 3 4 5 3 4 1 4 3 4 4 1 3 2 3 1 1 2 2 4 4 1 4 4 ", "4 5 4 1 1 5 1 4 1 1 4 1 1 1 1 5 5 2 1 4 4 1 3 2 5 ", "3 2 1 1 1 1 1 3 4 2 5 1 1 4 3 1 4 5 4 2 1 1 1 1 3 ", "1 4 2 3 4 4 1 3 1 1 1 1 3 2 5 1 1 1 2 4 1 1 3 1 3 ", "4 4 4 5 1 4 5 2 4 5 3 5 3 1 1 5 1 1 1 1 5 1 2 2 1 ", "2 3 1 1 1 1 3 3 1 4 2 2 2 2 2 1 2 3 1 4 1 1 4 1 1 ", "1 2 3 3 1 5 1 2 5 1 2 2 3 3 1 4 1 1 1 5 4 1 3 3 4 ", "3 5 1 1 1 4 3 3 3 1 5 4 2 1 5 3 4 1 4 1 1 3 5 1 2 ", "1 5 2 2 3 3 1 1 1 5 2 3 5 1 3 4 1 3 1 5 1 1 1 5 5 ", "3 1 1 1 5 3 1 1 5 1 1 5 2 2 2 2 2 1 4 2 2 4 3 4 5 ", "4 4 2 1 1 5 1 3 1 5 2 1 5 2 3 1 3 5 5 4 1 1 1 5 1 ", "1 2 1 5 1 5 1 4 5 1 1 5 4 1 1 1 1 4 5 2 3 4 1 2 4 ", "1 4 1 1 3 3 3 4 4 5 1 1 3 5 4 2 1 4 5 1 4 3 4 1 3 ", "4 1 5 2 1 3 3 2 2 3 3 1 2 2 1 1 4 1 3 1 3 1 4 1 2 ", "5 3 5 2 1 4 4 1 4 1 4 5 2 5 2 1 2 4 5 1 3 2 5 2 4 ", "2 1 5 1 2 3 5 1 4 3 1 1 1 1 4 1 2 4 3 4 3 4 3 4 5 ", "4 1 1 1 1 1 4 5 3 3 1 3 1 5 3 2 1 5 1 4 3 4 3 2 3 ", "2 4 4 1 1 5 1 1 1 3 1 5 2 5 1 2 5 3 2 2 3 1 2 1 1 ", "3 3 5 3 2 5 1 1 2 1 1 4 1 2 1 1 5 3 1 4 3 3 3 4 1 ", "2 1 4 1 1 2 1 1 4 1 1 1 4 2 1 3 4 5 2 4 5 1 1 1 3 ", "3 2 5 5 4 5 3 1 1 5 1 4 2 5 1 3 1 3 1 1 3 1 3 1 5 ", "4 3 5 3 4 1 1 2 3 4 2 1 2 4 5 1 1 1 5 4 1 3 2 1 3 ", "1 4 1 5 2 4 1 3 3 3 5 3 1 1 4 1 5 2 2 3 5 1 1 1 1 ", "4 3 5 2 4 5 3 3 2 4 1 1 2 1 2 1 3 5 2 5 1 5 4 3 5 ", "1 3 1 3 1 4 3 5 5 2 1 1 4 4 1 1 4 5 2 3 2 3 2 5 4 ", "3 5 5 3 3 1 3 3 4 2 4 5 5 1 1 3 1 1 1 1 1 1 3 2 2 ", "1 5 3 1 4 3 2 1 1 1 4 2 3 3 5 2 2 1 1 5 3 2 2 4 1 ", "3 5 3 2 4 1 1 1 3 2 1 1 3 5 1 1 2 4 5 4 1 1 5 2 3"};
    vector<string> names = {"D U I U I E G S A Q O Y C V S Q W X A J W A E M W ", "Y U N L C U C U Z U G N W M Y X X M A O C U J O E ", "A I A K X H J O N J G O E U N Q A H N Y H J G G K ", "C B F C W E Q G D G A E T K Y Y K D F E E W U E K ", "K M Q A E B A G M I W O C B C G A Q C N W K N A W ", "I E U E G T T O P M W G M G A O Q S F M S Q Q U E ", "A Q A A A M A A H P A K U X D W E X T H Q K C S E ", "A G S I G O Y I M S A V W R W G K B W W I D X S A ", "W N K A A V Q Z X S G G W W B P K H K Y C Q M F Q ", "A A U Q G Q E I D L N A O A E S O W N U A R P M T ", "A I B M G A W O E Y C T A U M A H M I Q K H K A N ", "U Q Y K W O I W S I W H I Z E V O I U Q K K K G Q ", "S U A A U F W T W A D A Q Q B Y W U D A G N Q N U ", "A X B I P L Y Z W A M Y A A Y S A P O K I Q O G N ", "K K F U C A Q C M C W M M O D I A Q A K O Z A C Y ", "E U Q Y Q G A I U G F Z J O S U M O C G K N O K A ", "B E Y C Y U G R Z G M T G D C D Q S N Y Q W F O E ", "H A V E M G R W A I Y C E W T B X D Q W K Q O C K ", "S G W A U B I A C U O Y M S I K D E E A A C G A R ", "H S J T P Q Q Y Y Y V Y R P W U F G K K D M U Y M ", "A M N G O R Q Q Y A Q E L S M N S A M G B A U E A ", "M M S B A R H A Y E X M S G L Y V I C O U E Y F C ", "W Y S C I Q R D K I X U G Z I Y Q A X S U H N Y O ", "I U D X A J W O E K C W O A C U P E A S C A V N S ", "F H E U U S G T O A B D K E A A N Q A W D T A A U ", "Z S C A Y A W A Y W E S W C I Z I E Y B W A Y K S ", "U C A V Q S E O O P Q I A W R M T E M K C M K I M ", "A I J W D K E Q Z M P U A O E S R W G G Q I O E M ", "Q B Q Q W L Y E D J D T H A P I U A K C C S X X Q ", "V S A A M F Q E G U E I K L M A I Z N Z B R P E A ", "Y U A A I K C E E L R M Q J W O F Y E F W V C S A ", "K B S A K V D M O K G G M O G X E Q I S M W Z W X ", "W O V X G B T C W G Z W G A Q U K C M C Q I M Q I ", "I Q Y I R M K Q S K S C E U N E A I K A H Q C L B ", "A Q C F C O M Q Q D W G E Z C Y C H O G K E E I Y ", "A E N A P G A K O P O Q M N O X F G W K A U C G P ", "K G S A G G V M K K L U K A C K G Q C A W Q P Q Q ", "U K W Y E C M I Y S V S N J N B A Y U F L A K T Y ", "P M M S U Y U U O A E L A Y Q U J A G W A W M G A ", "M W N M A I B J O Y E H F U W V Q A W A Q E T M C ", "W F M N U F M A C Y Y S I Q A E A G B C J F A A K ", "H I W A G G C U O N E M A P L P G X K E Q N Q M C ", "K A D E Z P E A C B F A U Y O X A Q M S W L A K I ", "E S Y Y R G I K G K Q I Q A G I Y D N M X K Q A A ", "Q T Y G T Y A Y C H O G E Y U E F A Y A E T X Y S ", "M N E Y J T M Q M S O A O U Q W O J D B T D O G O ", "Y A G K A K T S A O Q C Q Q I M T J W L K S U U K ", "I O I I H I M I Q R A W A A V K Q A Q G S I C Q N ", "E A A U E E H S Q A A Y L U G W R O H O Y X A H I ", "S Y C Y K S G G I H E Y F A A D G E I Q K I E H I"};
    int k = 120;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "C", "E", "E", "E", "F", "G", "G", "G", "H", "H", "K", "K", "K", "L", "M", "M", "N", "N", "N", "N", "O", "O", "Q", "Q", "Q", "Q", "S", "A", "A", "B", "C", "E", "E", "G", "G", "M", "M", "N", "N", "P", "P", "T", "V", "V", "W", "W", "X", "X", "X", "Y", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "C", "C", "D", "E", "E", "E", "F", "G", "G", "G", "H", "H", "I", "I", "I", "I", "J", "J", "K", "K", "K", "K", "L", "M", "M", "M", "M", "N", "N", "O", "O", "O", "O", "Q", "S", "S", "S", "S", "U", "V", "W", "W", "X", "Y", "Y", "Y", "Y", "Y", "Z", "Z"};
    if(result == expected) {
        cout << "Test Case 87: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 87: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test88() {
    vector<string> x = {"4 5 4 4 5 1 5 2 2 4 4 2 1 5 5 4 1 3 4 4 3 3 5 3 1 ", "2 1 1 2 3 4 1 1 4 2 3 5 5 1 5 3 3 1 5 1 1 4 5 2 3 ", "1 3 3 3 5 1 3 1 5 4 5 5 2 5 3 1 4 4 5 1 3 4 2 3 1 ", "2 4 3 1 1 4 5 5 1 2 5 2 1 1 3 1 4 4 5 2 4 3 3 5 4 ", "5 3 1 2 1 4 1 3 3 3 1 3 1 2 5 1 2 1 5 4 5 1 5 5 1 ", "5 3 4 4 1 1 5 2 4 5 1 3 2 4 1 5 5 5 5 1 1 2 5 3 4 ", "4 2 5 2 1 4 2 4 5 3 1 3 1 1 4 4 4 3 2 4 5 1 2 1 5 ", "4 5 2 1 1 5 5 1 1 1 1 5 4 5 4 5 5 1 5 1 1 2 1 2 3 ", "5 3 3 2 5 4 2 2 4 5 3 1 5 2 1 4 3 5 2 1 4 1 2 2 2 ", "1 3 5 5 3 1 2 1 3 1 3 2 1 1 5 2 3 2 2 5 1 4 4 5 1 ", "4 1 1 2 5 1 3 3 1 5 4 1 1 1 1 3 1 2 4 1 2 3 3 1 1 ", "5 5 1 3 3 5 1 1 3 1 4 5 1 5 5 1 4 4 3 1 1 1 1 2 1 ", "5 1 1 4 5 1 1 1 2 5 1 5 2 4 4 5 1 1 1 1 1 1 1 3 5 ", "4 2 3 1 1 1 1 1 2 5 1 1 1 1 3 2 2 5 2 5 4 1 5 5 3 ", "4 1 1 3 1 1 1 3 1 4 4 4 2 2 1 1 4 2 1 4 1 1 5 1 1 ", "2 1 2 1 5 1 1 1 4 1 3 3 1 1 1 1 1 3 5 1 1 5 4 2 1 ", "2 4 3 1 1 1 1 5 4 1 3 5 5 4 5 3 1 1 3 4 4 3 1 1 5 ", "4 4 3 5 1 4 4 5 1 3 2 5 2 1 5 1 1 1 1 4 4 3 3 5 1 ", "4 5 2 1 4 5 4 4 4 4 4 1 5 1 5 4 3 1 4 5 2 2 1 3 1 ", "5 1 5 1 1 1 1 4 1 5 5 2 2 2 4 3 2 4 4 1 3 1 1 3 5 ", "4 3 5 1 4 4 3 3 1 1 4 1 4 1 1 5 5 1 1 1 1 5 1 3 5 ", "1 1 1 1 2 5 1 1 1 5 1 1 1 1 1 1 1 2 1 4 1 1 2 5 1 ", "5 5 4 1 1 1 5 1 1 4 1 3 5 5 1 1 1 3 4 4 2 2 3 5 4 ", "1 2 1 3 5 3 5 4 5 1 1 3 1 2 3 4 4 2 1 2 4 2 5 2 3 ", "1 3 3 1 3 4 1 1 5 3 2 5 1 1 1 2 4 5 4 1 4 1 5 1 5 ", "4 4 1 4 1 5 2 1 1 3 1 1 1 1 1 1 1 5 1 1 2 1 1 1 3 ", "1 2 3 2 1 2 2 4 3 1 3 1 5 4 5 2 4 1 2 1 5 4 5 1 1 ", "1 1 1 1 3 2 5 4 3 2 4 5 1 4 3 1 4 1 1 1 3 1 1 3 4 ", "5 1 3 3 1 2 4 5 2 2 5 2 1 1 1 5 3 5 2 2 3 5 1 1 1 ", "1 4 1 4 1 5 1 5 4 4 5 1 1 2 4 1 2 4 3 3 1 1 1 4 1 ", "1 1 1 4 2 4 1 5 3 5 5 1 1 1 1 2 1 1 1 3 4 1 3 1 5 ", "1 1 2 1 4 3 1 2 3 4 4 1 3 3 1 1 5 3 4 1 1 5 2 3 4 ", "4 1 5 4 4 5 2 2 3 1 2 4 4 1 1 3 2 1 5 4 1 3 3 3 1 ", "3 1 1 4 4 1 1 1 2 4 1 1 2 1 1 1 1 1 1 1 3 1 1 3 3 ", "5 4 4 4 3 3 5 1 1 1 1 1 5 1 5 4 1 1 2 2 1 1 3 1 1 ", "1 1 1 2 2 3 1 4 5 1 2 4 2 3 1 1 4 1 4 3 1 3 3 5 1 ", "1 5 5 1 1 5 1 1 1 3 1 4 2 5 4 2 3 5 3 5 3 2 3 2 1 ", "1 5 3 4 2 1 2 5 1 1 2 5 4 2 5 4 1 4 4 1 5 3 2 4 3 ", "2 3 4 1 5 3 3 2 1 4 4 5 2 5 2 1 1 1 1 1 2 1 1 1 1 ", "4 1 3 2 1 2 4 4 1 2 1 2 2 5 3 4 3 4 5 1 2 1 5 1 5 ", "2 5 4 1 3 4 1 4 2 2 4 1 1 1 1 3 1 3 1 1 1 1 4 1 5 ", "5 3 2 2 3 4 1 5 5 3 2 1 1 5 1 2 5 4 1 5 1 4 2 3 1 ", "1 3 1 1 2 3 4 3 1 1 1 5 3 1 2 2 2 1 4 1 1 2 1 5 4 ", "1 5 4 1 1 1 3 1 1 3 5 3 1 2 3 2 1 3 3 2 1 2 5 4 2 ", "4 4 1 4 1 5 5 3 5 2 1 1 2 1 5 2 5 1 4 4 1 1 2 1 1 ", "4 2 1 1 2 1 3 1 1 2 1 1 3 3 1 2 1 5 5 3 1 4 5 3 1 ", "4 1 3 5 2 1 4 1 2 4 1 1 4 2 2 5 2 1 3 1 1 5 4 2 3 ", "3 1 1 1 1 3 2 3 5 1 3 4 2 1 4 2 1 5 1 1 3 5 2 4 5 ", "4 3 1 3 1 1 5 5 5 1 4 1 1 1 5 5 1 3 4 1 4 4 1 1 3 ", "5 5 1 2 3 5 2 4 3 1 1 3 2 2 4 2 3 4 2 3 1 4 2 2 2"};
    vector<string> y = {"2 1 5 4 2 3 4 5 3 2 3 1 5 5 1 4 5 5 2 2 1 5 4 1 1 ", "2 4 3 5 5 1 1 1 4 2 1 2 4 3 5 1 5 3 3 1 4 1 1 1 1 ", "1 3 5 2 2 1 2 1 4 1 1 5 5 1 1 1 5 1 3 1 3 4 1 3 5 ", "5 1 1 1 4 3 4 3 2 3 1 4 3 2 5 1 3 3 1 1 3 5 1 4 1 ", "1 5 1 5 5 5 3 4 1 4 1 3 1 4 1 1 1 4 2 5 4 5 2 5 4 ", "1 4 3 2 5 1 2 5 1 3 3 1 1 2 1 1 2 1 3 5 5 1 1 4 3 ", "2 2 1 1 1 1 1 1 5 1 5 3 3 2 1 3 4 1 2 1 2 3 4 2 3 ", "2 4 1 2 1 2 5 1 2 1 2 1 3 4 1 5 4 4 2 1 4 5 5 3 2 ", "1 1 2 1 5 2 5 5 3 4 4 5 3 5 3 4 3 5 5 2 5 5 4 5 4 ", "5 3 4 2 1 2 1 4 2 1 3 2 2 4 1 5 1 3 2 3 1 4 5 4 3 ", "4 3 2 1 4 2 1 5 1 1 2 1 5 1 2 1 3 1 4 1 1 5 3 2 1 ", "3 4 4 4 2 1 2 5 5 1 2 5 3 2 5 4 4 2 5 1 2 1 3 3 1 ", "3 1 2 3 5 1 4 2 4 3 3 2 5 2 1 2 5 4 5 5 3 5 3 1 3 ", "1 5 1 3 2 1 1 4 1 4 1 2 1 2 4 2 3 2 1 4 5 5 2 4 1 ", "1 2 1 4 1 2 5 2 1 5 4 4 2 1 3 2 4 2 3 5 3 3 5 1 4 ", "5 4 2 1 2 2 2 5 4 5 2 3 1 4 2 3 4 1 5 5 1 4 3 5 2 ", "2 3 1 4 5 4 3 4 1 2 1 3 1 1 1 1 1 3 1 5 1 1 1 1 1 ", "1 1 1 3 3 1 2 1 1 5 2 1 2 5 1 5 4 4 5 1 1 4 3 1 3 ", "3 2 1 1 1 2 5 1 1 2 2 4 1 1 1 3 1 1 5 2 4 1 1 4 3 ", "1 1 5 3 1 4 1 4 1 1 2 5 1 2 2 5 4 4 4 1 1 4 1 5 1 ", "5 1 5 3 1 1 2 4 2 5 1 5 1 2 1 3 3 4 5 1 5 3 5 5 1 ", "1 1 5 5 1 1 2 1 1 1 3 2 1 1 4 2 5 3 1 2 3 4 2 2 1 ", "2 3 2 2 4 2 2 1 3 3 1 3 1 2 5 4 1 3 4 1 3 3 2 1 5 ", "5 4 1 3 2 1 4 5 4 1 2 5 2 4 2 3 1 1 1 4 5 3 4 1 1 ", "1 1 5 1 1 5 5 1 1 1 4 1 5 5 4 1 2 1 1 1 2 1 3 4 1 ", "1 1 1 1 1 1 1 1 1 3 1 2 2 3 1 1 1 4 3 4 1 3 3 1 3 ", "4 3 2 1 3 3 1 3 1 5 1 4 2 4 3 3 3 1 1 4 4 1 2 2 2 ", "3 3 1 3 5 5 2 2 1 3 2 1 1 2 4 1 1 5 3 2 1 1 3 2 5 ", "1 3 1 4 4 5 5 1 3 1 1 4 4 1 1 1 5 3 1 2 1 1 4 5 3 ", "1 4 4 1 1 3 4 1 4 1 5 1 5 4 2 5 1 1 5 5 3 2 2 5 4 ", "1 1 3 3 5 2 3 4 1 4 5 1 1 5 1 3 4 1 4 1 1 1 3 1 4 ", "1 2 2 1 4 1 2 1 2 4 3 1 3 5 5 1 5 2 2 4 5 5 4 5 1 ", "5 4 3 1 3 1 4 4 1 1 3 1 4 5 1 5 1 1 1 2 1 4 5 1 1 ", "3 1 3 4 2 1 1 1 4 1 1 1 5 4 1 5 5 4 1 1 1 3 5 4 1 ", "1 2 1 4 5 1 2 5 3 4 1 5 4 3 1 2 1 1 1 2 4 1 2 1 5 ", "3 1 5 1 4 3 5 4 4 4 1 1 5 5 1 4 2 4 1 2 3 4 4 3 1 ", "2 1 5 4 4 2 4 5 5 1 3 1 2 1 2 3 1 5 1 3 2 3 1 1 2 ", "4 4 4 3 4 3 2 2 5 3 5 1 4 1 1 1 5 2 4 2 3 3 4 1 1 ", "1 5 2 5 1 4 5 5 5 1 2 4 2 2 4 1 4 2 5 1 5 3 5 1 2 ", "1 3 3 1 1 1 1 2 5 4 1 2 1 1 3 2 1 1 1 1 1 1 5 3 2 ", "5 1 1 5 3 1 1 2 4 5 4 4 3 1 5 1 3 4 5 4 1 1 5 5 5 ", "3 2 4 5 5 1 5 4 2 3 2 4 4 3 5 5 3 3 4 2 1 5 3 4 2 ", "5 1 3 4 1 2 3 3 1 4 2 4 1 1 2 1 1 3 5 2 1 4 4 1 1 ", "3 1 1 1 1 4 1 1 4 1 3 1 3 1 2 5 3 3 3 3 2 1 1 1 4 ", "4 4 2 4 2 2 4 2 4 5 1 5 1 1 3 4 4 3 4 4 2 3 1 4 3 ", "1 2 2 5 4 5 5 4 5 5 4 1 2 3 1 2 4 1 1 2 1 4 4 1 3 ", "2 4 5 3 2 4 4 1 2 1 3 2 3 4 2 4 2 3 2 1 1 2 4 2 3 ", "1 1 4 1 1 1 2 3 1 2 1 2 5 5 2 1 1 4 5 3 2 1 5 2 1 ", "1 1 1 1 2 1 5 4 1 5 5 2 3 2 1 5 1 1 1 1 1 1 4 2 1 ", "1 1 5 1 1 4 1 2 5 2 3 4 3 1 3 5 1 3 5 1 2 5 4 4 2"};
    vector<string> lengths = {"1 2 3 1 1 3 5 1 3 1 5 5 2 1 1 5 1 2 3 2 1 1 3 3 4 ", "2 1 1 4 3 1 1 4 1 5 1 1 4 2 5 3 5 5 2 3 4 1 1 1 4 ", "1 4 5 1 3 1 1 5 4 2 1 3 1 1 1 4 5 1 5 1 1 4 4 4 2 ", "1 1 5 2 5 1 5 5 1 1 5 3 1 1 5 3 3 4 1 3 3 2 1 1 2 ", "4 4 3 1 2 5 2 4 2 1 1 1 1 2 1 4 5 2 1 5 4 3 4 1 5 ", "5 5 1 3 2 1 4 4 4 1 5 1 1 3 3 1 3 4 5 1 5 1 2 4 1 ", "5 1 5 2 5 4 4 3 2 5 2 1 3 1 4 4 4 2 4 2 3 1 1 4 3 ", "4 3 1 2 5 5 4 3 1 1 1 1 2 3 5 3 1 5 1 5 1 2 1 1 4 ", "5 2 1 5 2 5 2 1 1 1 2 5 2 5 4 4 1 1 3 1 5 3 1 4 2 ", "1 1 5 3 5 3 1 5 1 5 5 5 1 4 3 1 3 2 1 1 4 1 5 5 5 ", "1 2 1 3 3 1 5 1 2 2 2 5 4 2 1 3 5 1 4 1 1 3 2 2 1 ", "1 2 3 4 1 5 5 1 4 5 1 2 3 2 1 1 3 2 4 3 1 1 5 1 2 ", "1 1 3 2 4 1 2 3 1 5 2 1 4 1 1 3 5 5 2 1 1 1 3 2 5 ", "2 2 4 2 4 5 1 4 2 2 1 1 5 5 1 2 2 4 4 4 2 4 1 1 1 ", "1 1 1 4 1 1 1 5 4 3 2 4 5 1 4 5 5 1 4 4 4 1 1 5 4 ", "5 1 2 3 5 5 2 1 4 1 5 1 5 1 1 3 5 2 4 5 5 5 1 1 1 ", "1 2 5 4 2 3 5 4 4 2 5 3 4 1 5 3 1 5 3 1 2 3 3 3 1 ", "1 4 4 3 3 5 3 3 4 2 2 2 3 2 4 5 3 4 1 5 2 5 2 5 1 ", "2 1 1 1 3 1 1 2 4 1 2 4 5 5 5 4 1 4 1 1 2 3 5 3 2 ", "1 4 5 2 3 3 1 1 4 1 1 1 1 1 5 3 4 1 3 1 3 2 1 3 5 ", "4 3 3 5 5 4 1 4 1 5 3 2 1 5 2 4 4 1 2 5 2 3 2 5 3 ", "1 1 1 5 3 2 3 4 4 1 4 5 1 4 5 1 5 1 4 4 1 1 4 1 1 ", "1 1 5 2 2 1 4 5 3 5 1 5 1 3 4 5 1 3 3 4 1 4 4 4 4 ", "4 2 5 4 4 1 4 3 1 3 4 1 1 1 1 2 1 3 1 3 1 1 1 4 2 ", "2 5 2 5 1 1 3 4 3 4 4 2 2 1 2 2 1 1 5 3 3 3 2 2 2 ", "5 1 5 1 5 1 5 1 5 4 4 1 5 3 2 4 2 4 4 5 5 5 1 1 4 ", "5 4 2 3 5 1 1 4 5 4 3 3 3 1 3 3 4 1 1 5 1 2 5 1 5 ", "3 4 2 1 1 1 1 1 5 3 5 4 1 1 1 5 1 5 3 1 2 3 1 2 2 ", "1 4 3 2 4 1 1 1 2 2 2 4 1 5 3 1 1 1 1 1 3 1 5 1 3 ", "5 1 3 3 4 3 1 5 4 5 2 3 4 3 1 1 1 4 3 4 5 1 1 1 3 ", "2 5 3 4 5 1 3 1 5 4 5 4 3 1 5 1 4 3 1 1 3 2 3 4 5 ", "5 1 1 4 1 1 2 1 1 3 4 5 3 5 2 1 5 2 4 1 1 1 2 2 1 ", "2 5 5 1 5 4 1 1 5 1 1 5 4 5 1 1 5 3 1 2 1 4 2 1 1 ", "4 1 1 5 4 1 5 1 3 1 5 2 3 4 3 1 3 4 1 4 1 1 1 5 2 ", "1 4 1 2 4 5 3 1 3 1 3 3 1 1 3 1 1 1 1 2 1 4 2 1 1 ", "1 4 4 1 4 5 1 2 1 2 5 1 3 4 1 1 2 5 1 5 1 5 2 3 1 ", "3 4 1 2 5 1 1 4 1 5 3 3 3 4 2 3 1 4 1 3 3 1 1 5 2 ", "1 1 3 4 1 1 1 1 1 3 3 1 4 1 1 5 1 5 4 1 3 1 4 1 5 ", "5 2 5 1 3 1 1 4 2 3 5 3 3 1 4 5 3 1 1 3 3 3 2 2 5 ", "5 1 4 1 3 2 3 1 5 3 2 2 1 4 4 1 1 1 1 2 3 4 1 2 5 ", "1 5 2 1 1 1 1 1 4 3 2 5 5 4 5 4 3 2 4 1 3 1 5 1 3 ", "3 4 1 3 1 1 2 1 1 3 1 4 3 2 5 1 4 3 2 2 3 2 3 2 3 ", "2 2 4 3 1 1 3 4 2 2 1 4 3 4 4 2 2 1 3 5 1 3 3 2 1 ", "1 2 1 1 5 3 2 1 4 5 3 2 1 5 1 5 4 1 1 5 3 5 4 1 1 ", "4 5 1 5 2 3 5 1 5 5 1 4 1 2 1 1 1 1 1 2 3 1 2 5 1 ", "2 4 5 5 1 5 1 1 1 2 5 5 2 2 2 5 1 1 1 3 5 2 2 1 1 ", "4 1 4 5 1 1 1 1 1 1 1 1 1 4 3 3 1 1 1 1 2 1 3 5 5 ", "4 4 4 4 5 5 1 2 1 1 5 3 3 4 1 5 1 1 1 1 4 2 4 2 1 ", "4 1 2 1 1 4 3 4 3 2 5 1 3 3 1 1 3 1 3 2 5 1 5 4 1 ", "1 3 3 2 3 3 3 5 3 5 4 5 1 1 4 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {"C D M M C U H A N N E R Q I W I U F I G A X U A A ", "Z Q Y R Y O X D G G E Q E U M I A A N M D S C A W ", "J L Q A G Q O S Z K F P N G E S U P W K X E Y A Y ", "A I U K A K K I V T C Q K B S R K U F I E K L A O ", "S E U K M F D D S L C I T U Q B U C O A F P K K K ", "U C Y E K A O O O J M Q M A D W P M U I B W G C Z ", "Y O O E E A L U I N M S A M W M I N X Y I S H K N ", "M T U K Q A M A C N G K Y A S Y A I N U O S Q O G ", "U I J A A E O W E A Y N M V W Q U A K J Y A Y C P ", "G W Y M U N V C Q L U P A M W H C X C G Y A K S K ", "M I V B N Q Y Y K J W O S O A E X Q Y O Z C S L X ", "S U U Y W D K G S C A U I V A A A A K A C G C G J ", "X A J C V D E J E I Y L A N M E V R E C S K K E K ", "V W S M I A M Q K U A Q I Z L L A U A I M U U G W ", "N O O A G F G E H M A A G K A Q U Q E F W B H M Y ", "Q W K M M A K K G K Y O D R C S W A K Y W S I A A ", "A U I A T Q X A W Y A U Y A A S M E O K A M S N M ", "Q Q A A I M A P G W W E I C A K W N Y E E O L S W ", "H M Q A O C G U A O N O K I O L K T U O Y S G N S ", "E W U X Q W N U N M L A D A U G K S J T L U Z A U ", "I A O Q H U E C N B E F E O U E H X L Y C B E K Y ", "Z E O U M W M K Y N N G Y N N I G K Q U C T Y T W ", "A J U O Y I M I P A S A Y S F V I A G W W K R L Z ", "G S K T S M O O M X W M K H U A E G J E P C Q Y I ", "U R K X G O C K U G Z C H F A H A H I U E N D S W ", "Y U C I C C Z X U A I W A Q R G Z G U A N U I M U ", "A A A N E O Y O Q A Q C R O A G G E G O M G S M U ", "Z S D C I N V H O P M Z H Q D W N N Y Q I G S A I ", "S Q M S T A T O F G T O B B Y V E A E C N F V I S ", "Y A T T I Z Q K A J I A K M A I E O C V X A A O W ", "Q G B J A F O K Q D C L C F R J E W G S Q Y X S U ", "W A F A G M S E Y V Y C G L N H G A N G C U A E E ", "E Q R K O W V H U Y F Y F U G S O C P E A Q S K I ", "E R A V L U H P V T D O C J Q T U N S A W W I U K ", "O A C G A D A R O P Q U S X T Y H Q C V M T S N A ", "G A K B A P M U K Y T Q M D C C R Y U P A O W Y C ", "S G C K Q P D Q A G V O A A F S A Q L H X T Q K S ", "A F E D Y E I M N Z W W K G H G O C U Q O F X X W ", "A J U D A Q Q S A E Q E H P Q Y M I A E A Q J K W ", "Y B K K A S C A E X N Q A E K K U A K W A D J O K ", "Q A L L G M H E V A K V S U U G Q O A W L V Y Y B ", "Q Q Y U A Y C J C E Q Y N K M D I K O G N J O Y C ", "A Q U M W K Y I A F O Z A N W O C M M U K K M S M ", "O A G D S Q O G N F V O I R I S W N K M K Q N A X ", "N N E A S A I Q M R A U U K W M S Q Z G D M Y F I ", "E T O D U N I E V K W Q G N A A U P K O S I Q A K ", "H N Y U E I A A W G N Z S O Q B C K U M C X K Q X ", "A R P U V W A L Q C E G V Y Q S K S N F P B K W E ", "U P A T K M I Y S M L J A K K W I E I A S H Z E L ", "Q G G O U W A W U U A S F Q Q K U Q I E G I N E W"};
    int k = 81;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "C", "D", "J", "K", "K", "K", "K", "N", "O", "O", "Q", "R", "A", "A", "A", "A", "A", "A", "A", "C", "C", "C", "D", "D", "E", "E", "G", "G", "G", "G", "H", "H", "H", "H", "I", "I", "J", "J", "K", "K", "K", "M", "M", "M", "M", "N", "N", "N", "O", "O", "P", "Q", "Q", "R", "S", "S", "T", "T", "U", "V", "W", "X", "X", "X", "Y", "Y", "Z", "Z"};
    if(result == expected) {
        cout << "Test Case 88: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 88: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test89() {
    vector<string> x = {"1 3 5 3 1 3 1 5 1 3 1 1 2 2 1 2 1 1 5 2 2 5 4 1 1 ", "2 1 1 1 2 2 1 2 1 1 2 1 1 2 3 2 3 3 2 4 3 5 1 5 2 ", "1 4 2 2 4 5 1 1 2 1 1 4 3 2 1 2 3 5 4 5 3 4 3 3 5 ", "2 2 1 3 5 5 4 4 4 1 2 5 3 2 3 1 1 2 3 2 1 1 2 2 1 ", "5 1 2 4 2 1 1 2 5 5 5 1 2 4 1 1 4 5 1 3 1 3 5 5 1 ", "2 1 1 3 1 4 5 1 1 4 4 1 1 1 1 1 4 2 1 4 3 3 4 3 1 ", "5 1 1 1 1 4 2 3 2 1 2 2 3 3 5 4 3 5 1 1 1 4 1 1 5 ", "2 1 1 2 4 1 2 2 5 3 4 5 1 2 2 1 4 5 1 1 4 4 1 2 5 ", "1 3 1 1 1 4 1 1 4 1 4 2 2 1 1 1 3 3 4 4 1 5 4 5 3 ", "4 3 5 1 1 1 1 4 2 1 4 1 1 2 1 1 2 5 1 3 2 1 4 1 1 ", "3 5 4 1 1 4 2 1 2 5 1 4 5 1 5 3 4 4 2 5 3 3 1 3 5 ", "3 1 1 1 2 5 3 1 1 2 4 1 4 5 1 3 1 4 1 2 5 4 2 5 5 ", "3 1 5 2 1 2 2 5 2 3 3 4 1 2 1 4 3 5 3 1 1 4 1 3 2 ", "4 5 5 1 3 5 3 1 3 2 1 5 5 3 3 2 3 1 4 3 4 1 2 1 3 ", "4 4 5 4 4 1 1 3 5 1 4 4 2 1 4 4 2 4 2 1 4 1 4 1 3 ", "1 4 1 4 1 2 1 5 2 4 4 2 5 1 3 2 1 4 5 1 3 1 1 1 1 ", "4 5 1 2 1 2 1 4 4 1 3 2 2 2 5 1 2 3 4 3 1 1 3 4 1 ", "1 2 5 4 2 5 2 1 3 1 1 1 1 4 2 2 3 1 5 1 4 4 5 1 1 ", "5 2 3 1 1 4 5 5 1 1 1 1 4 4 4 2 4 5 5 2 4 1 2 2 5 ", "1 1 3 2 3 5 3 2 1 5 3 1 4 2 1 5 3 1 3 3 3 1 3 1 4 ", "3 2 3 4 3 3 4 3 2 4 3 1 3 4 3 5 1 1 3 4 2 4 1 3 5 ", "4 2 1 2 1 2 5 5 4 3 3 2 5 5 1 3 5 1 4 2 3 3 4 3 4 ", "4 1 1 1 4 4 1 5 1 1 2 5 1 3 4 2 1 3 3 5 2 1 2 4 3 ", "5 1 2 3 2 2 1 1 3 1 3 1 4 1 2 3 1 1 1 4 5 1 1 3 1 ", "5 3 5 4 4 2 4 4 1 1 1 1 1 4 1 2 4 1 1 5 2 3 3 1 5 ", "3 2 1 4 1 3 1 2 1 1 1 2 1 2 1 2 5 1 1 5 1 1 1 4 1 ", "4 4 1 5 1 2 5 1 5 4 5 4 1 1 2 3 5 1 5 5 1 1 1 1 4 ", "4 2 1 1 4 2 1 1 3 1 1 4 2 1 1 5 2 2 3 2 3 1 5 4 2 ", "5 4 5 2 1 2 1 1 3 4 5 1 1 1 4 3 2 1 1 4 1 1 3 3 1 ", "2 1 1 4 1 1 5 5 1 3 1 3 1 3 1 1 5 1 5 1 3 4 1 2 4 ", "4 4 1 2 3 1 1 1 1 5 1 2 1 1 2 3 3 1 1 1 5 2 5 1 1 ", "2 3 2 5 5 5 5 5 4 2 4 4 4 3 4 5 3 3 4 4 5 3 3 5 1 ", "4 5 5 5 1 5 1 3 1 5 3 1 4 4 5 5 2 1 3 1 1 3 3 5 1 ", "1 3 5 5 5 1 1 5 1 3 1 1 2 5 1 1 1 1 3 1 1 1 5 1 1 ", "5 5 2 4 1 2 5 3 2 3 5 2 3 4 5 5 4 4 3 4 3 1 3 5 5 ", "1 2 1 1 3 4 1 1 1 4 4 2 3 5 3 1 4 4 1 1 3 3 1 3 4 ", "5 3 1 3 5 3 1 2 3 5 2 1 2 2 3 5 1 4 3 1 2 1 3 5 1 ", "3 2 5 2 5 2 1 1 4 4 5 1 2 5 5 3 2 1 5 2 1 4 5 5 2 ", "3 1 5 3 5 1 3 3 1 1 4 4 2 1 1 3 3 1 3 3 2 5 5 1 5 ", "2 1 1 4 1 5 2 4 1 5 1 1 3 1 1 1 4 3 1 5 1 3 2 1 2 ", "2 2 4 4 3 5 3 1 1 1 4 1 1 3 1 5 2 1 1 1 1 1 3 3 1 ", "5 5 2 1 3 1 3 2 1 1 4 4 1 3 2 5 1 1 5 3 3 1 4 5 1 ", "2 4 1 1 1 1 3 1 3 3 2 5 4 5 4 3 1 1 2 4 2 4 1 1 1 ", "3 4 2 5 2 1 4 1 3 1 1 3 3 2 4 1 1 1 2 4 2 5 1 1 2 ", "2 1 3 2 4 4 1 4 2 5 1 1 4 1 5 1 5 1 1 3 1 1 4 1 2 ", "2 1 1 4 4 4 1 1 5 1 3 2 4 1 3 3 4 1 1 3 1 4 1 3 3 ", "1 1 5 1 2 1 1 1 1 1 5 1 4 1 5 2 3 1 3 5 1 1 1 1 5 ", "1 1 5 2 4 1 5 1 2 5 5 3 3 5 1 2 4 1 1 1 4 2 2 1 1 ", "5 1 1 1 2 3 3 5 5 2 3 2 2 5 4 1 3 1 4 2 4 1 2 5 1 ", "5 3 5 3 4 1 2 1 4 2 1 3 1 1 3 4 1 2 1 2 5 3 2 2 4"};
    vector<string> y = {"5 5 3 3 5 1 3 5 3 1 1 2 4 1 3 5 2 4 4 2 3 1 4 4 2 ", "4 3 1 1 4 4 4 4 3 4 1 3 2 1 4 3 3 1 2 1 3 2 1 1 5 ", "1 5 1 5 5 2 2 5 1 2 1 2 2 2 2 5 2 1 2 3 3 1 1 5 1 ", "3 3 1 2 3 1 1 4 1 3 2 1 1 1 5 2 2 1 2 3 1 1 5 1 1 ", "3 5 4 3 1 5 3 5 1 1 1 4 4 2 5 1 1 4 4 1 1 1 1 3 2 ", "2 1 2 2 3 2 1 2 3 2 4 4 1 2 4 3 5 1 1 1 4 2 1 1 1 ", "4 4 2 3 2 1 2 3 4 5 3 2 5 4 1 3 3 3 2 1 2 3 1 3 1 ", "4 1 3 1 3 2 4 4 4 5 4 1 4 2 1 4 2 3 5 1 1 2 3 1 1 ", "1 2 2 5 3 1 3 1 3 3 4 4 5 2 1 1 5 4 3 1 1 1 2 1 2 ", "2 4 5 1 1 2 2 1 3 1 4 5 1 1 1 1 4 5 4 2 1 1 2 5 2 ", "5 2 3 3 2 4 4 4 2 4 3 3 1 2 5 5 3 3 1 4 1 5 1 2 4 ", "4 4 1 5 3 5 1 1 3 5 3 3 5 3 4 1 1 1 3 4 2 1 5 3 5 ", "1 1 1 1 2 1 1 4 1 5 4 3 5 1 4 4 1 2 1 3 4 1 4 4 1 ", "2 5 1 3 1 1 5 3 2 3 1 1 4 3 1 5 1 4 3 2 3 4 4 2 2 ", "1 1 2 5 2 1 4 1 4 5 4 1 1 3 4 5 3 4 1 4 1 4 2 4 4 ", "2 4 1 4 1 5 1 2 3 1 1 3 4 2 1 2 1 5 5 1 2 4 1 2 2 ", "3 1 1 4 4 4 1 1 1 3 3 3 4 4 5 1 1 2 4 3 2 5 1 5 3 ", "3 5 3 3 1 1 3 3 2 1 3 4 1 2 4 1 4 3 4 3 1 4 4 3 2 ", "1 1 4 5 1 4 1 3 3 4 1 1 3 1 1 1 1 1 4 1 4 1 1 1 1 ", "5 5 4 1 3 1 1 4 2 2 1 2 3 3 1 1 1 3 5 5 2 4 3 1 5 ", "2 1 4 3 3 3 5 1 1 2 1 5 1 5 1 3 5 1 1 1 1 1 5 5 1 ", "1 4 4 1 5 4 2 5 3 2 4 3 2 5 2 1 4 2 1 4 2 1 4 1 5 ", "1 3 5 5 4 4 1 1 2 5 4 1 5 4 2 1 1 3 1 1 4 4 1 2 1 ", "2 3 4 4 1 2 5 5 1 5 4 4 1 5 2 5 4 1 5 1 1 3 3 1 1 ", "5 3 5 1 1 1 5 4 4 2 2 2 2 1 2 4 2 3 1 3 1 1 4 3 1 ", "5 4 1 4 1 3 1 1 2 1 1 2 5 2 2 1 5 1 1 1 1 1 1 1 4 ", "5 5 3 1 1 1 4 1 1 1 1 1 5 2 5 1 1 5 5 1 1 5 2 2 4 ", "4 1 1 3 3 1 4 2 1 1 5 1 3 1 1 1 3 1 5 4 4 1 1 4 3 ", "1 4 1 5 1 2 1 1 4 3 1 1 2 2 2 3 1 1 1 4 3 1 2 5 5 ", "4 1 1 4 1 3 1 2 5 2 1 2 3 5 5 3 1 1 3 4 1 5 1 2 1 ", "2 5 4 2 5 1 3 3 1 1 1 1 4 1 1 5 3 1 1 2 5 1 4 2 1 ", "2 5 3 5 5 5 1 1 1 5 5 1 1 1 2 1 3 3 4 1 5 4 2 3 1 ", "1 1 1 4 1 3 1 1 5 1 3 3 1 4 1 4 2 1 1 2 5 2 4 1 1 ", "4 2 2 1 3 1 3 1 1 1 4 1 3 4 4 2 2 3 2 3 1 1 3 1 4 ", "2 1 5 2 3 1 1 1 1 4 3 4 2 3 3 1 1 1 1 4 3 1 2 3 3 ", "1 2 1 1 2 3 1 3 4 1 2 4 2 1 2 5 1 1 1 5 1 4 4 4 2 ", "5 4 1 1 2 1 5 4 3 4 3 5 4 5 2 1 1 4 3 2 1 1 5 1 2 ", "3 3 1 2 2 5 4 1 1 1 1 5 4 1 3 1 3 4 4 4 1 2 1 1 3 ", "1 4 2 1 1 1 3 1 3 1 1 5 4 4 2 1 2 3 1 5 2 1 2 4 3 ", "1 1 3 2 5 4 3 1 1 1 1 5 1 3 3 1 5 2 1 5 2 1 1 3 1 ", "4 4 1 1 1 4 2 1 4 3 2 5 1 1 1 4 2 5 2 1 1 4 2 3 2 ", "4 1 3 1 2 4 2 1 3 4 3 1 1 1 1 2 1 3 1 1 3 3 1 4 3 ", "3 3 2 3 2 3 2 2 1 2 1 4 1 2 3 1 4 3 1 1 4 3 5 1 1 ", "3 5 4 5 4 1 4 1 5 4 1 2 4 1 2 5 4 3 4 4 4 1 1 1 3 ", "4 2 1 1 2 3 1 3 2 1 3 4 1 1 1 2 1 3 4 1 4 4 1 4 1 ", "4 2 2 5 1 2 1 5 3 1 5 5 1 3 3 5 5 1 2 2 2 1 1 1 3 ", "4 3 1 2 3 1 1 1 1 1 2 1 1 1 1 2 1 1 3 4 2 1 1 3 1 ", "2 1 1 1 1 5 4 5 1 4 4 1 5 5 1 2 1 2 3 2 1 3 4 2 5 ", "5 1 1 2 1 2 3 2 1 4 2 1 2 5 5 4 2 1 1 1 3 1 1 4 3 ", "5 1 4 2 5 5 1 1 1 1 3 1 1 5 5 1 3 1 3 1 4 1 2 3 1"};
    vector<string> lengths = {"1 3 5 1 1 5 1 3 2 1 4 3 2 3 1 1 3 1 2 1 5 5 1 1 4 ", "2 2 2 4 5 1 5 5 1 2 3 1 1 1 5 5 5 1 2 1 1 2 1 2 1 ", "4 5 4 5 2 1 5 2 2 3 4 4 3 1 1 3 3 3 4 1 1 3 5 3 5 ", "1 2 2 3 1 3 1 2 2 5 1 2 1 4 4 4 1 4 1 1 1 1 5 1 4 ", "1 3 5 4 1 4 4 2 1 2 1 1 1 2 4 5 2 5 1 3 1 4 5 5 1 ", "3 1 1 2 1 1 5 3 4 2 2 1 3 5 2 2 2 1 2 1 1 1 4 1 1 ", "1 4 5 1 1 4 1 3 5 1 1 3 3 3 3 1 1 3 1 2 1 1 1 1 3 ", "3 4 3 3 1 4 4 1 1 3 2 1 1 2 5 1 3 1 3 1 2 1 2 4 5 ", "4 1 5 3 2 3 4 1 5 1 4 4 5 4 2 1 1 3 1 1 5 5 1 3 1 ", "5 5 1 2 1 1 3 4 2 5 2 4 3 5 3 4 3 1 3 1 5 1 2 1 4 ", "1 4 4 5 2 4 1 2 3 2 3 2 1 2 4 1 2 4 3 1 2 5 1 1 1 ", "3 5 5 1 4 1 5 1 3 4 4 1 3 3 5 1 1 1 1 1 1 1 2 3 4 ", "5 5 3 1 1 4 3 3 2 4 2 4 5 2 1 2 3 1 4 4 2 3 2 2 3 ", "5 2 4 2 1 4 2 2 1 1 4 4 3 2 1 3 2 1 1 1 1 1 3 1 1 ", "1 1 1 4 1 2 1 3 5 1 1 1 5 3 5 1 4 1 3 1 5 1 2 4 1 ", "3 2 2 1 3 1 2 1 3 3 1 1 1 1 3 1 3 1 3 1 1 2 1 1 1 ", "5 3 1 1 1 1 5 1 4 1 3 1 3 4 4 1 4 2 3 4 1 2 4 5 5 ", "1 5 5 5 3 4 1 4 1 4 3 1 5 4 1 4 1 2 1 5 1 3 3 1 5 ", "2 1 1 2 5 1 4 3 1 1 5 1 5 5 4 2 1 1 2 1 1 1 1 2 1 ", "2 5 1 5 4 3 1 3 3 1 1 1 1 5 3 1 4 4 2 3 2 4 2 5 5 ", "4 1 1 3 5 1 3 4 2 1 1 1 4 2 1 3 1 1 5 1 2 5 3 5 1 ", "1 1 4 2 2 3 2 4 2 5 2 1 1 1 1 1 2 1 5 4 1 3 5 2 2 ", "5 1 2 1 2 1 3 1 2 3 5 4 5 1 5 5 3 2 4 4 4 1 5 5 1 ", "5 5 4 2 1 4 4 3 5 4 3 1 5 5 3 2 5 1 2 3 4 5 4 1 3 ", "1 1 3 4 4 1 1 1 2 3 1 4 4 4 4 1 5 4 4 1 1 5 1 2 1 ", "2 2 2 1 3 1 3 2 2 4 4 1 1 1 2 4 4 2 3 5 2 2 2 1 5 ", "4 1 5 1 4 2 3 1 3 1 2 2 1 4 3 1 5 3 1 3 4 3 1 5 3 ", "2 5 5 4 4 1 3 3 1 5 1 1 1 3 2 3 3 5 2 5 2 3 5 3 1 ", "4 4 3 5 5 1 4 1 3 1 2 4 1 1 3 4 1 1 3 4 4 1 5 2 2 ", "5 4 4 4 4 5 1 1 4 1 1 4 1 1 3 4 5 3 1 1 1 1 1 5 4 ", "4 3 5 4 1 4 1 4 3 1 1 5 1 1 4 1 4 1 2 3 5 1 4 3 4 ", "5 1 2 1 1 3 5 5 2 2 5 1 5 3 1 5 2 1 5 5 2 1 1 2 1 ", "3 3 3 4 4 1 3 5 3 1 5 3 2 1 3 5 2 2 2 1 3 3 4 1 3 ", "3 3 2 5 1 1 5 3 3 1 1 5 4 4 4 2 5 1 1 3 5 1 3 1 1 ", "5 5 5 4 5 2 4 1 3 3 4 4 5 3 1 2 5 2 2 1 5 4 1 3 1 ", "3 1 1 4 3 2 4 3 3 2 4 1 1 5 1 4 5 5 1 3 2 1 5 1 2 ", "4 1 4 4 5 1 5 1 2 5 4 4 1 1 1 2 5 1 2 2 4 1 3 3 1 ", "5 4 2 1 2 1 3 2 5 3 5 4 4 1 4 5 3 2 4 1 4 4 4 3 1 ", "3 1 1 5 1 1 1 4 5 2 1 3 2 4 1 2 1 1 5 1 1 1 1 3 1 ", "1 2 1 1 2 1 2 1 2 3 3 1 1 4 2 4 1 1 3 3 1 3 1 3 4 ", "2 1 3 1 4 1 3 1 4 3 2 1 5 4 4 5 4 1 1 3 4 1 3 5 5 ", "3 3 1 1 3 1 1 4 2 1 4 3 1 3 4 1 3 1 3 3 3 5 1 1 5 ", "4 5 5 2 3 1 3 1 3 2 2 3 1 5 2 5 5 2 1 1 1 4 1 5 1 ", "4 2 1 4 1 4 4 5 1 2 1 2 2 1 1 1 1 4 5 1 2 2 4 5 4 ", "3 4 4 5 1 2 5 1 1 4 1 5 1 2 4 1 1 5 5 3 1 1 1 1 1 ", "3 3 1 1 5 5 1 5 2 1 1 1 3 2 5 2 1 2 4 1 3 3 4 4 5 ", "1 1 5 4 1 3 1 1 1 1 5 1 1 2 5 3 3 1 3 3 2 5 1 1 2 ", "1 5 4 4 2 5 5 1 4 2 4 1 1 3 5 1 3 1 3 1 1 1 4 5 3 ", "1 4 4 1 1 1 4 2 2 1 3 3 1 5 1 4 1 4 3 4 1 3 1 4 2 ", "2 4 4 4 4 4 5 3 1 1 3 1 3 1 2 1 3 1 1 3 1 1 1 2 5"};
    vector<string> names = {"K S K P A W P Z H J J C G G K Q U Q M W N N N J E ", "V Y G K E H S G W C K U D G A G G I M V D P E U U ", "O G A I Z I Y N J H A K K V K N M A A K A C A K L ", "U F I E M N N U Y C K F K D O E U A C Q W G Y P R ", "S K Q A S E Y Y U S D U I G X M Q A M Z T T G F C ", "C K G I T A P Y X M Y L E I C Z J O Q S J G S S U ", "A N V C A S T P V D X S U C W X Q W O G O B O D W ", "X H X V R K R M O E Y S A A Q S K U U O G Q R C W ", "O H F E R S O M N A B W C N A G I W Z S O L Q J E ", "H S Q Q K S O A S G E X A K F I I M Z Q O A I R K ", "R I O S U S G S X Y O I C M Y G Q Q J K B A G E C ", "O K G A A A S H A S W N J Y Y A A S B A E T A W A ", "I W M K W N I O H M O T T U Y N E G S C I W U D S ", "M F X W B A N E M I Y U Q G H N N K S Y Q N K D G ", "E O C G M K Q E E E A R S G A Q U A E G I U X A Z ", "B T I T X B M I G S A Q Y I T C D U C C C S K A A ", "Y M C H I Y S L A T Q E D A J A E I U N K V M W C ", "O J C J N W H G T O P P Q P A R U C Q I H A Z K A ", "V U W Z G Y Y O E V P Q L G I S C A W W W Y A N C ", "I G R A S M P K Q G I R R V C R Y H C A N A G X I ", "I I I G A Q Q A T F Q H G A Y C G Y X U K E C W Q ", "U M C X A N E K B Q V D V O W S W V G O V E A W F ", "Y Q N Q A S C W P L A G I A I W A Z N X G L M V F ", "M O O K Y Y M L K S U I M O A O K T A K R I U A A ", "I M C Y Y D E L H F A K W C L Q A Q A Z S S O V K ", "A X A Y J E O O V U N I Y R G C A Z C G L I A Y A ", "H N C E I I H B A O K A Z A C M S G S S D E U E H ", "Q C F M E K K R Y O M P S I A K E U H C O E O W A ", "B S A I R J Z W Y F Y M G M O A O M E E R I C L E ", "G N Y Y O N Q G A S I K M C V C A S M A Q F Q K C ", "C O G G G U E H N G C O E G P T S W A X Y W G W T ", "C M S N J C W A C O Y I X I K W R O S U K W S U S ", "V P O G C L E Y S W E A M E C N Q C A I T Q W I G ", "A R Q I Y J M C Q D G W I I T E I Y Q I D G A O N ", "A A Z K I U U N A P A C S A L Y P S U Y R L U O K ", "A I E Z L F I I W V S G X J C O K M V T G E W I A ", "I Z O X U T X K X S D Y C D I S U A A F A E X K A ", "G S S G Z T M Y J G E M A U S S A C I K K G A N S ", "G A S F F U D A E O A Q U O M H G U J C S U Y S C ", "Q C U U E Q K W Q V N N Y U U G K A A S U A C I T ", "A I C N G N F U A A S N A S E G D F O Y A O C K Y ", "C B Q S A W T C E T G Q K T S T B W D S Z W Y H S ", "O Y K B K X X U U J Y A R A S G S U R U I Q T O Z ", "J I G I F E Q W M M A L B P E H M A M E Q G X U A ", "Q Y C Y S U W G C A U A A G C E F G G U M K R E W ", "A Y E H E A L F B K M P A U L O B I D F Q Z C U S ", "H B Q Q U K W R I S W G E Q I J W I V O M N Y Q M ", "N A U S M Y X E N A K E U G M A T H Y I G A N M E ", "M E N W A K Y C O M Q A S K U X C A F W U S J J E ", "A Q A B U W U C P I W U Q U G J C C E U N J A O A"};
    int k = 120;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "C", "C", "D", "E", "E", "E", "G", "A", "A", "A", "A", "A", "B", "C", "C", "C", "C", "D", "E", "E", "E", "E", "F", "G", "I", "J", "K", "N", "N", "O", "Q", "Q", "S", "S", "X", "Y", "A", "A", "A", "A", "A", "C", "C", "G", "G", "G", "I", "I", "I", "I", "K", "L", "M", "O", "Q", "Q", "Q", "Q", "Y", "Z", "A", "A", "A", "A", "B", "C", "C", "C", "E", "E", "E", "G", "G", "G", "G", "G", "G", "H", "I", "I", "I", "I", "J", "K", "K", "K", "K", "K", "L", "M", "M", "O", "O", "O", "Q", "Q", "R", "S", "S", "S", "T", "T", "U", "U", "U", "V", "W", "W", "W", "W", "Y", "Y", "Y", "Z"};
    if(result == expected) {
        cout << "Test Case 89: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 89: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test90() {
    vector<string> x = {"5 1 4 1 5 4 2 1 1 2 1 4 2 1 1 1 2 4 2 1 3 3 4 5 2 ", "2 4 4 2 5 1 1 4 2 4 5 1 4 3 4 1 2 2 4 3 5 4 5 4 4 ", "1 1 1 3 5 2 1 4 4 1 1 5 3 1 1 1 5 5 1 1 1 5 2 4 4 ", "3 4 3 4 5 5 1 1 3 3 3 3 5 4 1 4 1 1 1 2 2 5 3 5 4 ", "5 4 1 5 4 2 1 4 4 5 2 1 3 3 2 1 2 5 3 1 3 2 1 4 2 ", "1 1 1 3 4 1 3 5 1 1 1 5 1 3 5 5 1 4 2 1 1 4 3 3 3 ", "1 3 4 5 3 4 3 3 4 5 5 4 1 1 1 1 4 2 5 5 4 4 3 1 3 ", "5 5 1 1 1 5 1 4 3 2 5 1 1 1 1 1 2 2 5 1 1 5 1 1 3 ", "5 4 5 4 1 1 4 3 3 1 2 2 2 1 2 1 4 1 4 2 4 1 2 1 2 ", "1 5 2 3 4 1 5 4 2 2 1 3 4 1 1 2 2 5 5 4 5 2 3 2 1 ", "4 3 5 1 1 1 1 5 4 2 1 1 1 5 1 1 4 3 1 4 4 2 2 3 3 ", "4 2 1 1 2 1 4 1 4 1 4 4 2 3 3 5 2 1 4 1 1 2 1 2 2 ", "5 1 2 4 1 1 5 1 1 3 2 4 4 5 3 5 5 5 1 5 2 3 3 1 1 ", "2 5 5 1 5 2 2 5 3 4 5 1 1 3 4 1 2 4 1 3 5 4 2 1 1 ", "1 1 5 3 2 4 3 5 2 5 4 4 1 1 4 1 1 2 5 4 4 2 2 1 5 ", "1 1 4 2 1 4 2 2 1 3 5 5 2 2 3 4 1 1 2 1 1 5 1 5 1 ", "4 4 2 5 4 4 3 5 4 4 1 2 5 1 3 2 3 4 2 5 2 1 1 4 2 ", "1 1 1 2 1 1 1 3 1 2 4 3 4 3 2 2 1 1 5 4 1 4 5 1 4 ", "2 4 3 4 4 2 3 5 4 1 5 3 5 5 3 1 1 1 3 5 1 2 5 1 1 ", "2 3 5 1 3 2 2 1 4 2 4 1 3 4 2 3 1 4 3 5 1 3 1 3 1 ", "5 5 1 4 2 1 2 1 2 3 5 3 3 2 5 1 2 1 5 2 2 4 5 5 5 ", "1 1 5 2 1 1 4 4 2 1 5 4 1 1 2 5 4 5 3 1 1 1 3 1 3 ", "2 2 1 1 1 2 4 5 1 2 4 1 2 4 1 4 3 1 1 1 4 4 4 5 1 ", "2 5 2 5 2 4 1 4 3 3 1 5 2 1 2 4 2 1 1 4 5 1 1 1 4 ", "4 1 1 1 5 5 2 1 4 1 3 5 1 5 1 3 1 2 1 2 2 3 2 1 1 ", "5 1 4 1 3 3 1 1 5 3 5 1 3 5 1 1 5 1 3 5 1 1 3 1 1 ", "2 4 3 3 1 5 3 5 2 1 1 2 1 3 3 1 5 1 5 1 1 1 3 5 3 ", "3 4 1 2 1 1 1 1 4 3 4 1 3 1 1 2 2 1 2 1 1 1 1 5 1 ", "1 3 5 4 5 3 1 4 1 3 5 1 2 1 1 5 1 1 4 1 5 5 1 1 1 ", "4 3 4 3 1 4 1 1 2 1 3 1 1 1 2 1 1 4 1 4 5 2 5 4 3 ", "5 4 2 1 5 3 5 2 3 1 3 1 1 5 2 3 1 5 5 1 1 5 5 5 5 ", "1 3 5 3 1 1 2 3 2 2 5 1 3 1 1 1 5 2 2 5 4 3 5 1 4 ", "5 4 4 3 5 5 2 2 4 5 3 3 4 4 1 5 3 1 1 1 1 2 1 4 2 ", "1 1 5 1 1 3 4 2 2 4 5 5 4 1 1 1 3 1 2 4 4 1 1 2 3 ", "1 5 2 5 4 1 4 3 1 4 2 4 4 4 1 2 1 1 2 4 2 3 1 1 2 ", "1 3 4 1 1 5 2 2 2 2 2 1 5 4 1 4 2 1 5 3 4 1 1 5 5 ", "1 1 2 5 2 3 1 1 1 3 5 2 2 2 2 3 4 4 3 1 3 1 5 1 5 ", "1 1 1 2 2 1 3 5 5 2 1 2 1 1 5 5 1 1 1 2 4 1 2 1 1 ", "1 3 2 4 4 1 2 1 1 3 3 5 1 1 1 1 3 1 3 1 5 5 3 1 3 ", "1 2 3 2 2 5 4 1 5 1 1 5 1 1 3 5 1 5 5 2 4 1 1 2 5 ", "4 2 3 5 5 5 1 3 3 4 1 3 2 2 4 1 1 2 4 2 3 3 5 2 2 ", "1 1 5 4 3 1 3 3 1 1 4 1 3 3 5 3 5 2 2 2 4 5 5 5 1 ", "2 1 1 3 2 1 4 5 3 1 2 4 4 1 5 1 3 4 1 4 3 1 5 4 5 ", "3 2 2 3 4 1 5 1 1 2 2 3 4 2 3 4 5 3 2 3 1 1 2 3 1 ", "5 1 1 1 2 3 4 2 1 3 1 2 5 3 5 5 1 5 2 2 4 1 4 3 1 ", "4 4 2 5 1 1 1 1 4 5 5 5 1 1 1 4 1 4 5 5 1 1 2 1 5 ", "1 5 4 1 1 4 1 4 1 3 3 4 1 1 1 1 1 5 5 5 1 5 1 2 1 ", "3 1 3 5 5 1 4 1 5 3 1 4 3 2 4 3 3 4 3 1 1 1 4 4 4 ", "2 1 3 1 4 2 3 2 1 3 3 1 2 1 3 2 4 2 1 1 5 1 1 4 1 ", "1 3 1 4 4 4 1 1 3 1 2 1 1 1 2 2 4 2 2 5 3 5 2 5 1"};
    vector<string> y = {"2 5 1 3 2 4 1 5 4 4 3 1 4 2 1 1 5 2 5 1 4 4 1 2 5 ", "4 4 2 1 1 5 5 2 4 4 3 3 3 1 3 4 3 1 3 1 4 2 1 1 2 ", "1 2 4 1 1 4 1 4 4 2 3 1 1 4 2 1 2 1 1 2 3 1 4 1 2 ", "1 1 2 2 5 2 1 1 1 4 3 5 5 1 4 5 3 5 5 3 4 1 1 1 4 ", "4 2 4 5 1 5 4 4 4 1 2 1 1 1 5 4 4 5 4 1 4 2 1 1 2 ", "4 1 1 1 1 1 4 5 2 3 1 3 2 2 4 1 1 4 4 4 1 2 5 3 4 ", "4 4 1 5 5 4 1 5 2 1 3 1 1 4 5 2 3 4 1 5 4 5 1 4 3 ", "4 3 5 3 2 5 4 3 1 2 2 1 5 1 4 5 4 2 1 4 1 2 5 4 1 ", "2 3 2 1 4 5 5 4 1 1 2 3 3 4 4 1 2 1 2 1 1 2 5 5 5 ", "2 2 1 5 1 5 2 5 1 1 2 2 2 5 2 1 1 4 3 2 1 3 1 1 5 ", "1 1 4 1 1 4 1 1 3 2 1 2 4 3 1 1 1 1 5 5 4 5 3 5 4 ", "1 1 3 5 1 4 1 1 4 1 5 3 1 1 4 1 1 3 5 4 2 2 1 3 5 ", "5 1 1 1 1 1 2 2 5 1 3 1 1 3 1 3 1 3 5 1 4 1 2 1 4 ", "3 5 1 1 2 1 5 1 1 3 1 4 5 1 1 1 1 1 4 4 3 1 3 5 2 ", "1 2 5 3 1 2 2 5 1 3 5 5 5 3 3 1 1 4 5 5 2 1 1 5 5 ", "1 2 4 5 2 3 2 3 5 2 4 1 1 1 5 2 3 1 1 1 3 3 5 1 5 ", "5 1 5 1 3 4 1 1 1 2 1 1 5 1 5 1 3 3 2 1 1 5 4 5 3 ", "2 2 2 2 1 3 5 3 3 1 4 1 1 3 3 1 2 4 2 3 5 1 1 3 5 ", "1 2 2 3 4 4 4 1 2 2 4 5 1 3 5 2 5 1 4 4 2 2 1 4 4 ", "1 1 4 1 3 4 1 4 2 3 1 5 3 4 1 1 3 1 4 3 2 2 1 5 2 ", "4 2 1 5 4 3 2 5 5 1 3 5 1 1 1 1 1 1 5 5 1 2 1 4 1 ", "2 3 3 1 5 1 1 4 2 3 2 5 5 4 1 1 1 2 5 3 5 1 1 1 1 ", "4 4 2 1 3 5 2 1 1 1 4 5 1 2 1 3 1 3 2 4 4 3 1 1 1 ", "3 1 4 1 2 2 4 2 3 5 1 1 4 4 1 5 1 1 3 1 2 1 5 5 3 ", "4 3 1 1 4 1 1 2 1 1 3 1 2 5 3 1 4 5 2 1 5 3 1 1 2 ", "1 2 3 4 1 5 3 5 2 4 3 3 1 1 5 1 1 5 1 4 4 1 1 4 5 ", "3 1 3 3 4 5 3 1 1 3 4 5 1 1 4 4 1 1 1 3 2 3 3 5 5 ", "2 5 5 4 1 4 1 1 4 1 1 2 3 3 1 2 4 3 5 1 1 1 4 4 1 ", "2 2 2 1 4 2 5 4 1 3 1 3 2 1 1 4 1 2 1 4 5 2 5 4 1 ", "2 1 1 1 2 2 4 1 4 1 5 3 1 3 4 5 2 1 2 1 4 4 1 5 4 ", "5 1 1 1 4 4 5 4 5 2 3 2 2 5 3 1 1 2 4 2 2 1 5 2 3 ", "3 4 1 5 4 3 3 5 1 5 1 1 1 1 1 2 1 3 3 1 1 1 2 5 2 ", "5 4 3 4 1 4 2 5 4 1 1 4 1 1 1 2 2 1 3 5 5 4 2 1 3 ", "3 4 1 3 2 5 1 1 1 1 1 1 1 1 5 3 3 1 1 3 1 4 2 1 5 ", "1 4 1 3 5 2 2 5 3 3 1 1 5 3 5 3 2 1 5 2 5 3 5 3 4 ", "5 1 3 4 5 3 4 2 3 1 4 3 4 2 3 1 4 1 3 2 2 1 1 3 1 ", "3 1 3 2 4 5 5 1 2 5 5 5 3 2 4 5 1 4 2 3 3 1 2 3 4 ", "2 2 3 5 4 4 5 1 5 5 2 3 4 3 5 1 1 1 3 1 2 1 3 4 2 ", "1 2 5 3 1 4 1 5 3 2 3 5 2 5 5 4 1 3 4 1 1 5 2 1 2 ", "3 4 3 5 1 1 4 1 5 1 2 2 3 3 1 1 1 1 2 1 4 2 1 1 5 ", "4 3 4 1 3 1 5 3 1 1 1 3 4 1 5 4 5 5 1 1 1 1 3 1 5 ", "4 4 4 2 4 2 3 3 4 1 4 1 1 5 4 3 2 5 5 4 5 1 2 4 3 ", "2 1 4 1 4 4 5 1 1 3 4 2 1 1 5 3 4 1 4 1 4 3 1 1 4 ", "4 2 1 5 2 3 4 1 1 5 5 2 3 5 1 1 1 1 1 1 1 1 1 4 2 ", "1 1 2 4 2 2 1 1 1 1 1 1 1 1 1 1 5 1 2 5 4 5 4 1 4 ", "5 1 2 1 3 1 2 1 3 1 5 1 3 3 1 3 1 1 4 1 3 4 4 3 3 ", "5 1 2 1 1 3 4 5 5 5 1 5 3 3 5 3 2 5 1 5 2 1 1 1 1 ", "1 2 4 4 5 2 5 5 1 1 3 1 2 2 1 1 5 2 2 5 1 1 1 1 2 ", "5 1 1 4 1 5 4 3 2 4 1 5 5 3 3 4 1 2 1 5 5 3 1 4 1 ", "1 5 1 5 1 5 5 4 3 3 1 3 1 2 4 4 4 1 1 1 4 1 1 1 4"};
    vector<string> lengths = {"1 1 3 1 3 4 4 5 2 1 3 3 1 3 4 2 1 1 5 3 5 1 5 5 1 ", "1 3 3 3 1 2 1 1 1 4 1 1 5 5 3 5 2 1 2 1 3 4 2 2 5 ", "1 1 3 3 5 1 3 5 4 3 4 5 3 1 4 3 3 3 4 4 5 1 1 1 2 ", "1 1 3 1 3 5 5 1 3 2 1 1 1 2 1 3 4 5 5 1 4 4 2 1 2 ", "4 5 4 1 4 1 5 2 2 1 4 1 4 3 5 1 1 3 5 2 5 1 1 1 2 ", "5 2 3 4 3 1 2 4 3 1 1 2 2 5 1 5 4 3 4 3 4 2 5 2 1 ", "5 5 1 4 1 5 3 5 1 2 2 1 1 4 1 2 5 3 1 5 1 1 1 2 1 ", "3 2 3 1 5 5 2 5 3 1 4 3 1 1 5 5 3 1 1 1 4 3 1 5 5 ", "1 1 1 4 2 5 5 1 2 4 1 1 3 1 1 2 1 1 5 4 1 3 1 1 1 ", "1 2 1 1 1 1 1 1 1 1 1 3 4 2 4 2 4 1 2 2 5 1 2 3 3 ", "5 1 3 3 3 4 1 2 2 1 5 5 2 3 4 5 4 1 3 1 1 1 5 1 1 ", "5 2 3 5 1 1 1 4 5 2 5 1 4 4 1 5 5 1 1 1 1 3 3 4 1 ", "2 5 2 5 3 5 3 3 4 1 1 3 1 1 3 3 1 3 3 3 4 4 5 1 1 ", "1 5 1 1 1 1 1 2 1 5 1 1 2 1 2 2 4 3 4 1 4 3 1 2 1 ", "3 3 1 2 1 2 1 4 4 5 3 1 4 1 4 5 4 1 4 1 1 4 5 1 3 ", "3 1 1 5 1 1 3 1 2 1 1 1 5 2 1 3 4 3 1 1 1 5 2 4 3 ", "2 2 3 3 1 4 1 4 1 1 1 5 4 5 2 1 2 1 1 3 4 3 4 1 5 ", "5 5 5 3 1 1 4 1 4 3 3 5 1 2 1 5 2 2 1 5 1 1 4 1 2 ", "1 1 3 5 1 1 3 4 3 1 5 3 5 2 3 3 2 5 2 2 3 1 4 5 5 ", "1 3 2 5 1 4 1 1 4 2 5 5 5 1 5 5 1 5 2 4 1 4 2 2 4 ", "1 5 2 1 2 1 1 5 1 4 5 3 2 5 1 1 5 5 2 4 4 5 2 1 2 ", "2 5 4 1 5 2 1 4 1 4 2 1 4 4 1 1 5 1 1 1 1 2 4 1 1 ", "5 4 1 5 1 5 1 5 4 2 1 1 2 2 2 1 2 1 5 1 3 5 5 3 4 ", "1 4 4 1 1 4 1 4 4 2 3 1 4 4 3 1 1 2 5 3 1 1 1 4 2 ", "1 4 1 3 3 1 2 2 3 1 2 5 5 2 2 3 1 1 5 3 1 1 4 4 2 ", "3 4 4 3 5 1 1 2 1 4 1 2 5 4 1 2 5 3 1 1 5 5 4 2 1 ", "1 1 4 5 1 2 1 1 2 2 1 2 1 1 3 3 1 1 1 1 2 1 3 1 1 ", "3 3 2 1 1 1 4 4 3 5 1 1 4 1 2 2 2 1 1 5 1 1 2 1 5 ", "3 2 1 4 1 5 2 1 5 1 2 2 5 4 3 1 1 5 4 5 5 2 4 2 5 ", "3 5 4 1 1 3 1 5 1 4 1 3 1 2 1 2 5 1 4 4 1 5 5 1 1 ", "4 1 5 1 2 1 3 5 1 5 1 3 2 4 3 3 5 1 2 4 5 3 2 2 1 ", "1 2 1 4 3 1 1 1 5 4 1 3 1 1 2 1 1 1 2 5 4 2 3 5 1 ", "3 1 2 2 1 1 2 4 1 4 4 3 2 4 4 1 2 4 2 4 5 3 4 3 1 ", "4 2 3 3 3 2 1 4 3 2 4 1 1 2 4 4 3 4 2 1 1 5 3 3 3 ", "1 2 2 2 1 5 1 4 2 1 2 4 4 4 5 3 3 4 4 3 1 1 1 1 4 ", "3 5 4 1 2 3 1 1 2 3 1 3 1 1 1 3 1 4 1 1 4 1 5 4 3 ", "3 1 2 1 3 4 1 1 1 1 1 3 5 4 1 3 2 1 1 3 1 4 1 5 2 ", "2 2 5 5 5 1 5 5 1 4 1 1 5 1 5 1 5 2 4 1 3 2 4 4 2 ", "3 3 1 1 1 1 1 1 2 3 4 4 2 3 4 3 2 3 1 2 2 4 5 2 5 ", "5 1 2 1 4 4 4 1 5 2 3 2 3 2 4 5 5 5 3 3 4 1 4 1 3 ", "4 2 1 3 2 4 3 5 1 4 3 1 2 1 3 4 5 5 1 1 1 1 5 1 4 ", "2 3 4 4 1 1 5 2 5 2 1 4 4 3 2 5 1 4 3 1 4 5 5 3 1 ", "1 3 2 1 4 1 2 1 3 5 5 1 1 5 3 1 3 1 5 4 4 5 3 1 5 ", "5 4 5 5 5 2 1 1 1 3 4 2 1 3 1 5 2 4 1 4 3 3 3 1 3 ", "2 5 2 2 4 4 4 2 2 2 3 5 4 3 4 1 5 1 3 1 2 1 3 3 3 ", "5 5 1 3 4 4 2 3 1 5 3 1 1 5 4 4 1 1 1 2 5 1 1 4 2 ", "1 1 4 4 1 2 1 2 3 1 5 3 5 4 1 1 3 1 1 3 5 5 3 1 1 ", "1 1 1 1 1 5 4 3 4 1 1 1 3 4 1 2 3 3 2 1 4 1 4 4 2 ", "4 2 4 1 5 4 2 1 3 1 1 1 2 5 3 4 4 4 3 4 2 1 1 3 4 ", "1 1 1 4 3 1 1 1 4 3 1 2 5 1 5 1 3 1 1 1 4 1 3 4 3"};
    vector<string> names = {"B G W Q M M C A T A X S Q V O E Y I Q W P A D D G ", "G V E B E P S C E T U A M C C B W P W W D Y M Y I ", "I V K Q C N Z K U T E R H J E C K Y O K C G V Q T ", "N K Q U A M Q I C Q U C M Y I A I U M V I C I W R ", "A P E S M Q G A G Q Y A C W C J G E S M Q J G C S ", "A W F I Q C Q E W C A A C A R W Q C K J O M U O T ", "K Y M M I A E W C E D P N V Q G S U X U K A R E Q ", "A R A I M A M G G M K I C Q N K O R A V O Y C A Q ", "W O Y A W S Y A C F U C M C S T Q G X A H A M U E ", "K C U N P W S K G N A M C G M P Y A W A N H Y A Q ", "Y G H N T A D J Z W C Y K D F S F K Q Y A Q U M O ", "E Q W K M G H U W A C U K M S X U S M I S P Y B P ", "A Z E O U G W N K N N A K A K S E Y Y R O A U J J ", "Y V M R A A I O S C A F I X A S V Y N L R U K Y I ", "K E I A A O I Y G O I A U O N P G N Q U K R O H Z ", "G T A Q Z H O X F Q Y I B A N A C S G S I C M Z Y ", "B D S G G H I R B D I Q K W W S F R T A H Z B H H ", "I U F O L I C M E N U A Y N A Y M C C X O S C C K ", "T X S Y U K M S O O D Y A L V G Q Y A A K E A A V ", "I S E Z O O V S A P S A I E O G U L A W W A V S M ", "U P Y S S Y U M J O W C G O H Y W A C O J I W A K ", "W V S H A G K K D W G O M E Y Y P E W U K I C M H ", "C P P I I O C E U I A Y S A J Q C K F O P B Z M Q ", "P G U S I K H S X X O R N A C Y M S G G G B K Q K ", "E Y W W G Y W E U Z K O M V J L S M Q Y O N G S A ", "Y M I D G M F I X G H Q S E P A C A M H U W G C I ", "C B A N D N A O C I I S K H K C Z Q Q Z Z A M A Q ", "U X E W E J Y X C U Q A E Q S M L W G A D M Q F O ", "N X S E Y G D Y Z W D S A I Q I G Y F G J E G Y N ", "N M W I G W Q Q M O M E S E E A W C M E G M M Y F ", "A R G D P L G K B X J C E O Y L A O I I X P Y E O ", "Y T U V G J G R J Q A B E K B C B C B S A M J B U ", "C O I G G L U K B I C A B P M G P P W A H F U K K ", "U W L Q I N Q G W Y C F Y U Q L C J Q N H H U G Q ", "S E Z E F A E L F U I I Q O A I W A S Y Y A A C Y ", "E I M A B Q P N A U Y E Q T K L A C Y I I P C S I ", "C C A S E A P Q S K O Y C Y Z C U A X K L A G U K ", "W O K C A Q L A Z G Q N C M M Q S G K Y Z A Z K L ", "E R U N P O G X U N A C V U A W Y S Y E A R M M N ", "A K K E E I A W Y U S C E A T U M Z S F N D Y U U ", "Q I G U Z P Q E L K O B Y M Y K Y Y H K H A O H N ", "V Y I F J G W N U A H M O Y M A Q Y E P A C L C E ", "E I W U Y M U B C P G Q G R P C J M E G I T A M S ", "I M B I S H Q E I Y N C Y Y L A D Z E L A P S K O ", "A W U O Q T Y C Y O A A Y G Z I V B R W P A X W M ", "Q M C M K W I C F T S K E E I C K Y C S H K Q R D ", "F E U S A A C M G U M O W C L O Y A F Y Y I D I U ", "G A O A C T W G M E B I G Z W F N F Y Y Q A J E E ", "A J W I A U K W G Q O O Y Y G V L E Q M U T U S C ", "G Q M A W A D U Y O Y Z A A Q O E C S A C J I M D"};
    int k = 80;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "B", "C", "C", "D", "E", "A", "A", "A", "A", "B", "E", "E", "G", "G", "I", "J", "J", "M", "M", "S", "S", "S", "T", "U", "U", "V", "W", "Y", "Y", "A", "A", "A", "A", "B", "C", "C", "D", "D", "D", "E", "E", "G", "G", "G", "G", "I", "I", "I", "I", "J", "K", "K", "K", "L", "M", "M", "M", "N", "P", "Q", "Q", "Q", "R", "S", "S", "S", "U", "U", "W", "W", "Y", "Z"};
    if(result == expected) {
        cout << "Test Case 90: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 90: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test91() {
    vector<string> x = {"3 3 2 1 1 1 1 3 1 3 1 1 2 2 2 1 1 1 1 1 2 3 1 2 2 ", "1 1 2 1 3 3 1 3 1 1 2 2 1 3 3 2 2 1 1 2 3 3 1 1 1 ", "3 3 3 1 1 1 2 3 1 1 1 1 1 3 2 1 1 1 1 3 1 1 3 1 1 ", "3 1 1 3 1 1 1 2 2 3 3 1 1 2 3 1 1 3 1 1 1 1 1 3 1 ", "1 3 1 3 2 1 3 3 1 1 2 3 1 1 1 1 3 3 2 3 1 1 2 1 1 ", "2 3 2 1 1 3 1 1 2 3 2 1 3 2 1 2 3 1 2 1 2 3 1 3 1 ", "1 1 2 3 1 1 1 3 3 1 1 2 2 1 1 3 1 1 2 1 2 2 3 3 1 ", "2 2 2 1 1 1 1 1 1 1 1 2 2 2 2 1 3 1 1 1 1 2 2 3 1 ", "1 2 1 1 1 1 1 1 1 3 2 1 1 2 3 3 1 3 1 1 2 1 1 3 1 ", "1 3 1 1 3 1 3 1 1 1 1 3 1 2 2 1 1 1 3 1 1 1 1 3 1 ", "3 1 2 1 1 1 1 1 1 1 1 2 3 1 1 3 3 2 2 3 1 1 3 2 1 ", "3 1 1 3 3 3 1 1 1 1 1 1 1 3 2 3 1 2 1 2 1 1 3 1 1 ", "3 1 1 3 1 2 1 2 1 3 1 1 1 1 1 1 1 2 3 1 3 1 1 3 2 ", "2 1 3 1 3 3 1 1 1 1 3 1 1 1 2 3 1 1 1 3 1 1 1 2 1 ", "1 1 1 1 1 3 1 1 3 1 2 1 2 1 1 1 1 2 3 1 2 1 3 1 2 ", "1 1 1 1 1 1 3 2 1 1 3 3 2 3 3 1 1 1 2 1 3 2 1 3 1 ", "1 1 1 3 1 2 1 1 1 1 3 2 1 1 1 3 3 1 2 2 1 1 1 1 1 ", "1 1 1 3 3 3 3 2 1 3 1 1 3 2 3 3 1 2 1 3 1 1 2 1 1 ", "2 1 1 3 1 2 3 1 2 1 2 3 2 1 1 1 1 3 2 3 3 3 1 2 1 ", "1 3 3 1 2 1 2 1 1 1 2 1 3 1 3 1 2 1 2 1 1 1 1 2 1 ", "1 3 3 1 1 1 1 3 2 1 3 2 2 1 1 1 1 1 1 1 3 1 2 3 1 ", "2 1 1 1 1 1 2 1 2 2 1 1 1 1 1 1 1 1 3 3 1 1 3 3 2 ", "3 1 1 1 1 2 1 1 1 3 3 2 1 3 3 2 1 3 1 1 1 1 1 3 1 ", "1 1 1 2 1 2 1 1 2 1 2 2 2 1 1 3 1 1 1 2 3 1 1 1 3 ", "1 2 1 3 1 3 2 1 2 1 1 1 1 1 1 3 1 1 1 1 1 1 1 2 2 ", "2 1 1 3 1 1 3 2 1 1 3 3 1 1 1 2 2 1 1 2 1 1 1 2 1 ", "1 3 1 1 2 1 3 2 1 2 1 1 1 2 1 1 3 2 1 1 3 1 3 1 1 ", "1 1 3 1 2 1 1 3 1 1 2 3 1 2 2 2 3 2 1 1 1 1 1 1 2 ", "1 3 1 1 1 1 1 3 2 2 1 2 2 1 1 2 1 2 2 1 1 1 3 3 1 ", "1 3 3 3 1 1 2 1 1 1 3 2 1 3 2 1 2 1 3 2 1 1 1 3 1 ", "1 3 1 1 1 1 2 1 2 1 1 1 3 1 3 1 1 1 1 1 1 1 3 1 3 ", "2 1 1 2 2 3 2 1 2 2 1 2 1 2 1 1 3 2 1 1 1 1 1 1 1 ", "3 3 1 1 1 3 1 1 1 1 2 3 1 3 1 1 2 1 1 2 1 3 1 1 3 ", "3 1 3 3 1 1 1 1 2 1 3 1 3 2 1 2 2 1 1 1 2 3 1 2 1 ", "3 3 1 1 2 3 1 2 1 2 3 3 1 3 1 1 1 2 3 3 1 2 2 1 1 ", "2 3 1 3 1 1 1 1 2 1 3 1 1 2 1 1 2 2 2 3 1 1 2 1 1 ", "3 2 3 1 1 2 2 3 3 1 3 2 1 3 3 1 1 2 3 1 1 1 1 1 2 ", "1 2 1 1 1 1 1 1 1 1 3 2 3 1 3 1 2 1 1 2 2 1 3 1 1 ", "2 3 3 2 1 1 2 1 3 3 1 2 3 1 1 1 3 2 3 1 3 1 1 3 1 ", "1 1 1 1 3 1 2 2 1 1 2 2 1 1 1 1 1 1 1 3 3 1 1 3 3 ", "2 1 3 2 2 1 1 1 1 3 1 1 1 1 1 2 2 2 1 1 1 2 1 3 3 ", "1 2 3 1 3 3 3 1 2 3 1 1 1 2 1 1 3 3 1 1 1 1 2 2 3 ", "1 1 2 2 1 1 1 3 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 ", "3 1 1 1 1 2 2 1 1 1 1 2 1 2 1 2 1 1 1 1 3 3 1 2 1 ", "1 3 2 3 1 1 2 2 1 1 1 2 1 1 3 1 3 1 2 1 1 1 1 1 3 ", "1 1 1 1 2 1 1 2 3 1 3 1 2 3 3 2 1 1 1 2 1 3 1 1 3 ", "1 3 3 1 2 1 1 1 1 2 2 1 3 1 3 3 2 1 1 1 1 1 1 3 1 ", "3 3 1 3 3 1 1 1 1 3 1 2 3 3 1 3 1 2 2 2 2 1 3 2 1 ", "2 3 2 3 1 3 1 1 1 1 3 1 3 1 1 2 1 1 1 2 2 1 1 2 3 ", "2 3 1 1 3 1 1 1 2 3 3 1 2 1 1 1 1 2 2 2 1 2 2 1 1"};
    vector<string> y = {"1 3 1 3 1 1 3 1 3 1 1 1 1 1 3 1 1 1 1 1 3 1 1 1 1 ", "3 1 2 2 1 3 2 1 3 2 1 1 3 3 3 1 3 3 3 2 3 1 1 1 3 ", "1 3 1 3 1 1 3 2 3 3 2 3 1 1 3 3 1 1 3 1 1 2 1 1 3 ", "1 1 1 2 1 1 2 1 1 1 1 2 3 3 1 2 1 2 1 1 2 1 3 1 1 ", "1 1 1 1 3 2 1 1 1 1 1 1 1 2 1 1 3 1 1 1 3 3 1 1 1 ", "3 3 1 1 1 3 1 3 1 1 2 1 1 2 3 1 1 1 1 2 2 1 1 1 3 ", "1 3 1 1 1 1 1 1 1 1 1 2 2 1 3 1 3 1 2 1 2 1 3 1 2 ", "2 1 3 1 3 1 1 1 1 1 2 3 1 1 2 1 1 1 1 1 1 1 2 1 1 ", "1 1 2 1 1 1 1 1 1 3 1 1 1 1 1 1 1 3 2 1 1 1 3 3 1 ", "1 1 2 1 1 2 1 1 1 1 2 2 3 3 2 1 3 1 2 2 3 1 2 3 1 ", "2 3 1 2 1 3 3 1 1 2 1 2 1 1 2 3 1 2 1 3 1 2 1 2 1 ", "1 3 3 1 2 1 1 2 1 3 3 3 1 3 2 1 3 1 1 3 1 3 3 2 1 ", "1 1 3 3 2 1 1 3 3 1 1 1 2 3 1 1 1 1 1 1 1 1 1 3 1 ", "1 1 1 1 3 1 3 1 2 3 1 3 2 1 1 3 1 1 1 1 1 2 1 2 1 ", "2 2 2 1 1 2 1 1 2 1 1 3 1 3 2 2 3 2 1 2 2 3 1 1 2 ", "3 1 1 1 3 2 2 3 2 1 2 2 1 1 1 1 3 1 1 1 1 2 1 1 1 ", "1 1 3 1 3 1 1 1 3 2 2 3 3 1 1 2 3 1 1 2 1 2 3 3 1 ", "3 1 1 1 2 1 1 2 3 1 1 1 2 1 2 1 1 2 1 3 2 1 3 1 1 ", "2 1 2 2 2 1 1 3 1 2 2 1 1 1 1 1 3 3 2 3 1 3 2 3 3 ", "3 1 1 3 3 1 2 1 2 1 1 2 1 1 1 3 1 3 1 3 1 2 2 1 1 ", "2 2 1 1 1 1 3 1 1 1 1 1 2 3 1 3 3 2 2 1 3 2 1 1 1 ", "1 1 1 2 1 2 1 2 1 2 1 2 1 1 1 1 2 2 2 2 1 1 3 1 2 ", "1 2 1 1 3 1 2 1 1 1 1 1 1 1 2 1 1 1 1 3 1 1 3 1 1 ", "1 1 2 2 2 2 1 1 1 3 3 2 2 2 2 3 3 2 2 2 1 3 1 2 1 ", "1 2 1 1 1 1 1 1 1 1 1 3 1 1 1 2 1 1 2 1 1 1 1 1 2 ", "1 3 3 1 1 2 1 1 3 2 1 1 1 1 3 1 2 1 1 1 3 2 1 2 2 ", "3 1 1 2 1 1 3 3 1 1 1 1 1 2 3 3 1 2 3 1 2 3 2 1 1 ", "1 1 1 1 3 1 3 1 3 2 1 2 1 1 1 1 1 1 3 2 1 3 1 1 1 ", "1 2 1 2 1 3 2 2 3 1 2 1 3 1 2 1 1 2 2 2 1 1 1 3 1 ", "3 1 2 2 1 3 3 3 2 1 1 2 2 1 1 1 3 2 3 1 1 1 1 3 2 ", "2 1 2 3 3 1 3 1 2 2 2 1 1 1 3 1 1 1 2 2 1 1 1 1 3 ", "2 2 1 2 1 3 3 1 1 1 2 2 3 1 1 2 1 1 1 1 2 1 3 1 2 ", "1 3 1 1 1 1 3 1 3 1 2 1 1 2 2 2 2 2 3 2 1 1 2 1 2 ", "3 2 2 2 3 2 1 1 1 2 2 2 3 1 1 1 1 1 1 1 1 2 1 1 2 ", "3 1 1 3 3 3 1 2 3 1 2 1 3 1 3 1 2 2 2 1 1 1 1 3 3 ", "1 2 3 1 1 2 3 2 1 2 1 3 3 1 3 3 2 3 2 1 2 2 1 1 2 ", "1 3 1 2 1 2 3 1 2 3 1 3 2 2 3 1 3 2 1 3 3 2 1 3 1 ", "3 1 3 1 3 3 3 2 2 1 1 1 1 1 2 2 1 2 1 3 2 2 2 1 1 ", "3 1 1 2 1 3 1 1 3 1 1 2 1 1 3 1 1 2 1 2 1 2 3 1 3 ", "1 1 1 1 3 1 3 1 3 3 2 2 2 1 2 1 3 1 1 2 1 1 1 1 2 ", "1 1 2 2 3 3 1 1 1 1 1 3 1 1 3 3 1 2 1 3 1 1 1 1 1 ", "1 1 3 2 1 2 1 2 2 1 1 1 2 2 1 1 3 3 1 1 1 2 3 3 1 ", "1 1 1 1 1 3 3 1 1 2 3 1 1 1 3 1 3 3 2 3 1 1 2 1 1 ", "1 2 2 2 1 2 1 2 1 1 1 1 2 2 2 2 2 1 3 1 1 2 1 2 2 ", "1 1 1 1 1 1 1 3 1 1 3 1 1 1 1 3 3 2 1 1 2 1 3 2 2 ", "3 3 1 1 1 3 3 1 1 1 1 1 1 1 1 3 1 1 3 1 3 3 1 2 2 ", "2 1 3 1 1 2 1 1 1 1 1 3 3 2 1 3 1 1 1 1 3 1 2 1 1 ", "1 2 1 1 1 1 3 2 3 1 2 2 1 2 1 1 1 1 2 1 2 1 1 1 1 ", "1 3 3 1 1 1 1 2 1 3 1 1 2 1 1 2 1 2 3 1 1 1 1 2 1 ", "1 1 3 1 1 2 1 3 1 2 3 1 1 1 2 1 1 1 3 1 1 1 2 2 3"};
    vector<string> lengths = {"3 1 2 1 3 2 2 1 3 1 1 1 3 1 1 1 2 1 3 2 1 1 1 2 1 ", "2 3 1 3 2 3 2 3 2 1 2 1 2 1 1 3 1 2 3 1 1 1 1 3 3 ", "1 2 1 3 2 1 1 1 2 1 1 2 1 1 1 1 2 1 1 1 1 1 1 3 2 ", "1 2 1 1 2 2 2 1 1 1 1 1 1 1 1 1 2 1 1 2 2 1 1 2 1 ", "1 1 1 3 2 3 3 3 1 2 2 2 1 1 2 3 1 1 1 1 1 1 1 3 1 ", "3 1 2 1 3 1 1 3 1 1 3 1 1 1 2 2 3 1 1 1 1 1 1 1 1 ", "3 2 3 1 1 1 1 1 1 1 2 1 2 1 3 1 2 2 1 1 2 1 3 2 1 ", "1 3 2 1 2 1 3 1 1 1 1 3 3 1 2 1 2 2 1 1 2 2 2 1 1 ", "1 2 1 1 3 3 2 1 1 2 3 1 1 1 3 2 3 3 1 1 1 1 1 1 3 ", "1 2 1 3 1 3 3 3 1 2 3 3 1 2 2 1 1 1 1 1 1 2 3 2 1 ", "1 1 1 3 1 2 1 1 1 1 1 2 3 3 3 1 1 1 2 1 1 1 3 1 1 ", "1 1 1 1 1 2 1 2 1 3 2 1 1 2 1 1 1 1 2 1 2 1 2 1 1 ", "1 2 1 3 1 1 2 2 1 1 3 1 2 2 2 3 3 1 1 2 2 1 3 3 2 ", "3 1 1 1 1 1 1 2 2 3 1 3 2 1 3 1 3 1 2 1 1 3 2 3 2 ", "1 1 1 2 3 1 1 3 1 2 1 1 3 1 3 1 1 1 1 3 1 1 1 2 1 ", "2 3 1 1 3 2 1 2 1 1 3 1 2 2 1 1 1 2 1 2 1 2 2 1 3 ", "1 3 3 2 1 3 2 1 3 1 1 1 2 1 1 1 1 2 1 1 1 1 1 3 1 ", "3 1 1 3 1 1 1 1 2 1 1 3 2 2 1 2 3 1 1 3 1 2 3 1 1 ", "1 1 1 1 2 1 2 2 1 1 1 1 2 2 1 1 1 1 3 2 1 1 3 3 1 ", "3 2 1 1 1 3 3 1 1 1 1 1 2 3 1 3 1 3 2 3 1 1 1 2 1 ", "1 2 1 2 2 1 1 1 1 2 3 2 3 1 1 1 2 2 1 3 1 1 3 1 1 ", "1 3 1 1 1 2 1 3 3 1 3 2 3 1 1 2 1 1 2 1 3 1 1 1 3 ", "2 1 1 1 3 1 2 1 1 1 3 1 3 3 1 1 3 1 1 2 2 3 1 1 2 ", "1 1 1 1 1 1 2 1 2 2 2 1 1 1 3 3 1 2 2 2 1 3 1 3 2 ", "1 3 1 1 1 2 1 1 1 1 1 3 1 2 3 1 1 2 2 2 1 2 1 3 1 ", "2 1 2 3 3 1 1 1 1 1 1 3 1 2 2 2 1 2 3 1 1 1 2 1 3 ", "1 1 1 3 2 2 3 2 1 1 1 1 1 1 1 1 1 3 2 1 3 1 1 1 2 ", "3 3 3 1 1 2 2 3 3 1 1 3 3 1 1 1 2 1 2 1 3 1 1 3 1 ", "2 1 3 3 1 1 1 3 1 1 1 2 2 2 1 1 2 3 1 1 1 3 1 1 1 ", "2 3 1 1 1 1 1 2 2 2 1 3 1 3 1 3 1 1 2 3 3 1 3 1 3 ", "2 3 1 2 3 1 1 1 1 1 2 1 1 1 3 3 1 1 1 2 2 1 1 1 3 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 3 1 1 2 2 1 2 1 2 2 ", "1 1 1 1 1 2 3 1 1 1 1 3 2 1 3 2 3 1 1 3 1 1 1 1 3 ", "1 1 1 3 1 3 1 3 1 3 2 1 1 1 1 1 3 2 3 2 1 1 3 3 3 ", "1 1 1 1 2 1 1 1 2 1 1 2 1 1 1 3 1 2 3 2 3 1 2 2 1 ", "1 3 3 1 1 1 3 1 2 1 1 2 2 2 1 1 1 1 3 1 1 2 1 2 1 ", "1 1 3 2 1 3 1 2 3 2 2 2 1 1 3 1 1 1 1 1 1 1 1 3 3 ", "1 1 3 3 1 1 3 1 3 2 1 2 1 1 1 1 3 1 1 1 3 1 1 1 2 ", "3 2 1 1 1 2 1 1 1 2 2 2 3 1 3 1 3 1 1 1 1 1 3 3 2 ", "1 1 1 2 3 1 1 3 2 2 2 1 2 3 3 1 2 1 2 2 1 1 1 1 3 ", "1 1 2 2 2 1 3 1 2 1 1 1 2 1 1 3 3 3 3 1 1 2 3 1 1 ", "3 2 3 3 1 2 2 3 3 3 1 2 1 1 3 3 2 1 2 1 3 2 2 1 3 ", "1 1 1 1 1 1 2 1 3 2 1 2 1 3 1 2 1 3 3 3 1 1 1 1 1 ", "2 2 2 1 1 3 1 1 3 3 1 3 1 1 1 1 2 1 1 1 1 1 2 1 3 ", "3 2 1 3 3 2 3 1 1 3 1 2 3 2 1 3 3 1 1 1 1 1 2 1 2 ", "1 1 2 1 3 3 1 1 1 2 3 1 1 1 1 3 3 2 3 3 1 1 2 2 2 ", "1 1 3 1 3 3 3 3 1 1 1 1 1 1 2 1 3 1 3 2 1 2 1 2 1 ", "2 2 1 3 1 1 3 3 3 1 1 3 1 1 2 1 2 1 1 1 2 3 2 1 2 ", "1 1 2 3 1 1 1 3 3 2 3 1 1 2 1 1 1 1 2 3 2 1 1 1 3 ", "2 1 1 2 1 1 1 1 2 3 1 1 1 1 1 1 2 3 2 3 2 3 1 1 2"};
    vector<string> names = {"D U I U I E G S A Q O Y C V S Q W X A J W A E M W ", "Y U N L C U C U Z U G N W M Y X X M A O C U J O E ", "A I A K X H J O N J G O E U N Q A H N Y H J G G K ", "C B F C W E Q G D G A E T K Y Y K D F E E W U E K ", "K M Q A E B A G M I W O C B C G A Q C N W K N A W ", "I E U E G T T O P M W G M G A O Q S F M S Q Q U E ", "A Q A A A M A A H P A K U X D W E X T H Q K C S E ", "A G S I G O Y I M S A V W R W G K B W W I D X S A ", "W N K A A V Q Z X S G G W W B P K H K Y C Q M F Q ", "A A U Q G Q E I D L N A O A E S O W N U A R P M T ", "A I B M G A W O E Y C T A U M A H M I Q K H K A N ", "U Q Y K W O I W S I W H I Z E V O I U Q K K K G Q ", "S U A A U F W T W A D A Q Q B Y W U D A G N Q N U ", "A X B I P L Y Z W A M Y A A Y S A P O K I Q O G N ", "K K F U C A Q C M C W M M O D I A Q A K O Z A C Y ", "E U Q Y Q G A I U G F Z J O S U M O C G K N O K A ", "B E Y C Y U G R Z G M T G D C D Q S N Y Q W F O E ", "H A V E M G R W A I Y C E W T B X D Q W K Q O C K ", "S G W A U B I A C U O Y M S I K D E E A A C G A R ", "H S J T P Q Q Y Y Y V Y R P W U F G K K D M U Y M ", "A M N G O R Q Q Y A Q E L S M N S A M G B A U E A ", "M M S B A R H A Y E X M S G L Y V I C O U E Y F C ", "W Y S C I Q R D K I X U G Z I Y Q A X S U H N Y O ", "I U D X A J W O E K C W O A C U P E A S C A V N S ", "F H E U U S G T O A B D K E A A N Q A W D T A A U ", "Z S C A Y A W A Y W E S W C I Z I E Y B W A Y K S ", "U C A V Q S E O O P Q I A W R M T E M K C M K I M ", "A I J W D K E Q Z M P U A O E S R W G G Q I O E M ", "Q B Q Q W L Y E D J D T H A P I U A K C C S X X Q ", "V S A A M F Q E G U E I K L M A I Z N Z B R P E A ", "Y U A A I K C E E L R M Q J W O F Y E F W V C S A ", "K B S A K V D M O K G G M O G X E Q I S M W Z W X ", "W O V X G B T C W G Z W G A Q U K C M C Q I M Q I ", "I Q Y I R M K Q S K S C E U N E A I K A H Q C L B ", "A Q C F C O M Q Q D W G E Z C Y C H O G K E E I Y ", "A E N A P G A K O P O Q M N O X F G W K A U C G P ", "K G S A G G V M K K L U K A C K G Q C A W Q P Q Q ", "U K W Y E C M I Y S V S N J N B A Y U F L A K T Y ", "P M M S U Y U U O A E L A Y Q U J A G W A W M G A ", "M W N M A I B J O Y E H F U W V Q A W A Q E T M C ", "W F M N U F M A C Y Y S I Q A E A G B C J F A A K ", "H I W A G G C U O N E M A P L P G X K E Q N Q M C ", "K A D E Z P E A C B F A U Y O X A Q M S W L A K I ", "E S Y Y R G I K G K Q I Q A G I Y D N M X K Q A A ", "Q T Y G T Y A Y C H O G E Y U E F A Y A E T X Y S ", "M N E Y J T M Q M S O A O U Q W O J D B T D O G O ", "Y A G K A K T S A O Q C Q Q I M T J W L K S U U K ", "I O I I H I M I Q R A W A A V K Q A Q G S I C Q N ", "E A A U E E H S Q A A Y L U G W R O H O Y X A H I ", "S Y C Y K S G G I H E Y F A A D G E I Q K I E H I"};
    int k = 248;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "B", "B", "C", "C", "C", "C", "C", "E", "E", "E", "E", "E", "E", "E", "G", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "B", "C", "C", "C", "C", "C", "C", "C", "C", "C", "D", "D", "D", "D", "D", "D", "D", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "F", "F", "F", "F", "F", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "H", "H", "H", "H", "H", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "J", "J", "J", "J", "J", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "L", "L", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "N", "N", "N", "N", "N", "O", "O", "O", "O", "O", "O", "P", "P", "P", "P", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "R", "R", "R", "R", "R", "S", "S", "S", "S", "S", "S", "S", "T", "T", "T", "T", "T", "T", "U", "U", "U", "U", "U", "U", "U", "U", "V", "V", "V", "V", "V", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "X", "X", "X", "X", "X", "X", "X", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Z", "Z"};
    if(result == expected) {
        cout << "Test Case 91: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 91: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test92() {
    vector<string> x = {"2 2 1 2 2 1 2 2 1 2 2 1 2 3 1 2 2 1 1 1 1 3 3 2 1 ", "3 3 2 3 1 1 2 2 2 2 3 1 1 1 1 2 2 1 2 2 2 1 1 2 1 ", "1 1 2 3 1 1 1 1 2 1 1 1 3 1 2 2 1 1 3 3 1 1 1 3 1 ", "1 1 1 1 3 1 1 2 1 1 1 1 1 1 1 1 2 2 1 1 1 3 2 2 1 ", "1 1 2 1 1 2 1 2 3 1 1 2 1 2 1 1 2 1 3 1 1 3 1 3 1 ", "3 2 2 1 1 1 2 3 1 1 1 3 1 1 1 3 2 1 2 1 2 3 1 1 1 ", "1 1 1 1 3 3 1 1 3 1 1 3 2 3 1 1 3 1 3 3 2 1 2 3 1 ", "3 2 3 1 1 1 1 2 1 1 1 3 3 3 1 1 2 3 2 3 2 1 3 2 1 ", "3 3 1 1 3 1 1 2 2 1 3 1 1 1 3 1 1 1 1 1 1 1 1 1 1 ", "2 3 2 1 1 2 2 2 1 1 1 2 3 1 1 1 1 3 2 1 1 2 1 1 3 ", "1 3 2 2 1 2 2 1 1 1 2 1 1 1 1 1 1 2 3 1 3 1 1 3 1 ", "1 1 3 3 2 3 1 2 2 2 1 2 2 1 3 2 1 1 1 2 2 1 1 3 1 ", "1 1 2 1 2 2 2 1 2 2 3 1 1 2 1 3 1 1 1 1 2 3 1 1 3 ", "1 1 2 3 1 1 3 3 1 1 1 1 2 1 3 1 3 1 1 3 3 3 1 1 1 ", "1 2 1 3 1 1 2 2 1 3 3 1 2 1 2 1 2 3 3 1 1 1 1 2 2 ", "3 3 1 2 2 2 3 3 2 3 3 3 1 1 1 1 1 3 1 1 1 1 1 1 3 ", "1 3 3 2 3 1 1 1 3 3 2 2 3 2 1 2 3 1 2 1 2 2 3 1 1 ", "1 1 2 1 1 3 1 2 1 2 3 1 1 3 2 1 3 1 3 1 1 3 3 3 2 ", "3 2 2 2 2 1 1 3 1 1 2 1 1 1 3 1 3 2 2 1 1 3 1 2 1 ", "1 1 3 1 1 3 2 1 3 1 1 1 2 2 1 1 3 2 2 2 2 1 1 1 2 ", "1 1 1 1 1 2 1 3 1 3 3 2 1 1 1 1 3 3 1 1 2 3 3 1 1 ", "2 2 2 3 3 1 3 3 1 3 1 1 1 3 1 1 1 3 1 2 2 1 1 2 1 ", "1 1 3 1 1 3 1 1 1 1 1 1 1 1 1 1 2 2 1 1 3 1 1 1 1 ", "3 3 3 3 2 2 1 3 3 1 2 1 3 1 1 1 1 3 1 2 2 3 1 3 3 ", "2 1 1 2 1 1 1 1 2 1 3 1 3 1 1 3 1 2 3 1 1 3 2 1 1 ", "2 1 2 3 1 1 1 1 1 3 1 2 1 1 1 3 1 3 1 3 1 3 1 1 3 ", "1 2 1 2 2 2 1 1 1 2 1 3 3 2 2 3 2 3 3 1 1 1 1 2 1 ", "1 3 2 2 2 1 2 1 2 1 3 1 1 1 3 2 2 1 1 2 1 3 3 2 2 ", "2 2 2 3 1 1 1 1 1 1 1 1 2 1 1 1 3 3 1 1 1 1 1 3 2 ", "1 1 2 1 2 1 3 1 1 1 2 1 1 1 2 1 3 1 1 1 1 3 3 1 1 ", "1 2 1 1 1 3 3 1 3 3 1 3 3 1 1 1 1 1 3 2 1 1 1 2 1 ", "3 3 2 1 3 3 1 1 1 2 1 1 1 1 1 2 3 2 1 1 1 1 1 3 2 ", "3 2 3 3 3 1 2 1 1 1 1 1 1 3 1 1 1 1 1 3 1 1 2 2 1 ", "2 1 2 1 1 3 1 1 2 2 3 2 2 3 3 1 1 1 3 1 1 1 3 3 1 ", "2 1 1 3 1 1 3 3 2 1 3 1 3 1 1 3 1 2 1 1 1 3 2 2 1 ", "1 1 1 1 1 1 3 3 3 1 2 2 1 1 2 3 2 3 1 3 1 1 1 3 2 ", "3 1 2 2 2 1 2 1 1 2 1 1 1 1 2 2 1 1 1 2 1 3 1 1 1 ", "3 1 2 3 2 3 2 1 1 1 1 3 1 2 1 2 1 3 3 1 1 1 1 3 3 ", "1 1 2 3 2 3 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 2 1 3 1 ", "3 2 1 2 1 1 1 3 2 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 3 ", "1 1 1 3 1 1 1 1 1 2 3 2 2 1 1 3 3 3 2 3 3 3 2 2 2 ", "1 3 2 1 1 3 3 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 3 2 1 ", "2 1 3 2 2 3 1 1 2 2 2 1 1 2 1 2 1 1 1 3 3 2 2 3 3 ", "1 1 2 2 1 3 3 1 3 1 1 1 1 2 1 1 1 3 1 2 3 1 3 1 1 ", "3 2 3 1 2 3 3 3 1 1 1 2 1 2 1 3 1 1 1 2 1 3 2 2 3 ", "1 1 2 1 1 1 1 1 1 2 1 1 3 2 1 2 2 1 1 1 2 2 3 3 2 ", "1 1 1 1 1 2 1 1 3 1 1 1 2 1 1 3 1 1 1 3 1 3 1 1 1 ", "2 1 1 1 2 2 1 1 1 1 1 2 2 1 1 2 1 2 3 1 2 1 3 1 1 ", "1 1 1 3 2 3 1 2 3 3 1 2 1 2 3 1 2 1 2 2 3 1 2 1 1 ", "1 1 1 1 1 1 1 2 1 1 2 3 2 1 2 1 2 1 1 1 2 3 1 1 2"};
    vector<string> y = {"1 1 1 1 1 3 3 2 3 2 1 1 1 2 1 1 1 3 2 2 3 1 3 1 1 ", "1 1 3 1 1 2 3 3 3 2 1 1 1 2 2 1 1 2 1 2 3 2 1 1 2 ", "2 1 1 3 2 1 2 1 2 1 1 2 2 1 2 1 2 3 3 3 2 3 1 1 1 ", "2 2 3 1 2 1 2 1 3 1 1 1 1 1 1 3 2 1 1 3 3 2 1 1 1 ", "1 2 2 3 1 1 1 3 3 1 1 1 3 1 3 2 1 1 1 2 1 1 3 2 1 ", "1 1 1 3 2 2 1 1 1 3 3 2 1 3 1 2 2 1 3 1 3 3 1 3 2 ", "1 2 1 1 3 1 3 1 1 2 1 2 1 3 1 1 2 3 2 3 3 1 1 3 3 ", "1 3 2 3 3 3 2 1 2 1 1 1 1 1 1 1 2 2 2 1 1 3 3 2 3 ", "1 3 1 2 3 1 1 3 3 1 1 1 2 1 3 1 2 1 1 1 3 1 3 1 2 ", "1 3 1 2 2 2 1 1 2 1 1 1 1 1 2 1 3 1 2 3 1 3 2 1 1 ", "3 2 1 1 1 1 1 1 2 1 2 1 2 1 1 2 1 1 1 1 3 1 1 1 1 ", "2 1 1 1 1 3 1 3 1 1 1 1 3 1 1 2 2 1 1 3 2 3 1 1 2 ", "3 1 3 2 1 1 1 3 3 1 1 1 1 1 2 1 2 3 1 3 1 1 1 1 1 ", "2 1 1 3 1 1 2 2 3 2 2 1 1 2 1 1 2 1 3 1 3 3 2 3 3 ", "1 3 1 1 2 2 2 1 2 2 1 2 1 3 3 1 3 1 1 3 1 1 1 1 1 ", "1 1 2 1 1 3 1 1 3 1 1 1 1 1 2 1 1 1 1 1 2 3 3 1 3 ", "1 1 1 1 2 3 1 1 1 1 1 2 2 3 1 1 1 3 1 1 3 3 1 1 1 ", "3 3 1 1 1 1 2 1 1 2 1 1 2 2 1 2 1 1 1 3 2 3 1 1 2 ", "1 1 3 3 1 2 3 2 1 2 1 2 3 1 2 2 1 1 1 1 1 1 1 2 1 ", "2 1 3 2 1 1 1 1 2 1 1 3 1 3 1 3 2 2 3 1 2 1 3 1 1 ", "1 3 1 1 2 1 1 1 1 3 1 3 1 2 2 1 1 3 2 3 1 1 3 2 2 ", "2 1 1 1 1 1 2 1 1 2 2 2 3 1 3 1 2 3 2 2 1 2 1 1 1 ", "2 3 3 3 2 1 1 1 1 1 3 1 3 3 2 1 2 2 1 3 1 1 1 3 3 ", "1 2 1 3 1 3 1 1 1 1 2 1 1 1 3 3 3 1 1 2 1 1 3 1 1 ", "1 1 2 2 3 1 2 1 1 2 1 2 1 1 1 1 1 1 1 2 1 2 2 2 3 ", "1 1 3 1 1 1 1 1 1 1 2 2 1 3 3 1 1 1 1 1 1 1 1 1 1 ", "1 3 2 2 3 3 1 1 3 3 3 3 1 1 1 1 1 3 2 1 1 1 1 1 3 ", "1 1 3 1 2 1 1 2 3 2 3 1 1 1 2 1 3 1 3 3 1 1 2 1 1 ", "1 1 1 3 1 1 1 2 2 3 1 2 1 3 1 1 3 1 1 1 1 3 1 1 3 ", "2 3 1 1 3 1 1 1 1 1 3 1 2 2 2 2 3 1 2 2 1 3 1 3 1 ", "3 3 2 3 3 2 1 3 1 3 2 3 1 1 3 1 1 1 3 2 1 1 2 1 1 ", "1 1 1 1 1 1 2 1 1 1 2 1 3 1 1 1 3 1 3 1 1 3 1 1 3 ", "2 3 2 1 3 1 1 1 1 1 1 1 1 2 3 1 1 1 2 2 1 1 3 1 1 ", "1 1 2 1 3 3 2 1 1 1 1 1 1 2 1 2 2 1 2 3 3 2 2 1 1 ", "1 2 1 1 1 1 1 3 2 1 1 2 1 1 3 3 2 1 3 1 1 2 2 3 3 ", "3 1 1 1 2 1 1 3 3 1 1 1 2 3 2 1 1 2 2 1 1 2 1 2 1 ", "2 1 3 1 1 2 1 1 1 2 3 3 2 1 1 3 3 1 2 2 3 1 2 2 1 ", "1 2 1 2 1 1 1 3 3 1 2 1 1 2 3 1 1 1 3 2 1 2 3 1 1 ", "1 1 1 1 1 1 3 1 3 1 1 1 1 1 1 1 1 1 1 3 1 2 1 3 1 ", "1 1 1 1 1 1 3 1 2 1 1 1 2 2 1 1 1 2 3 3 1 2 1 3 1 ", "1 2 1 1 1 1 1 3 1 1 3 2 1 1 2 3 1 1 1 2 3 3 2 1 2 ", "1 3 1 1 2 1 1 1 1 2 1 3 2 1 2 1 1 1 2 1 1 2 3 1 2 ", "2 1 3 2 2 1 1 2 2 2 2 1 3 1 1 1 1 1 2 1 1 1 1 3 1 ", "1 2 3 1 1 1 1 1 1 3 1 2 1 1 1 1 1 1 1 1 1 3 1 1 2 ", "3 1 1 2 2 1 2 1 2 2 3 1 2 3 3 3 1 1 1 1 2 3 2 1 2 ", "2 3 2 2 3 3 2 1 1 1 1 1 3 1 3 1 1 1 1 2 3 3 3 3 1 ", "2 1 1 3 3 1 3 2 1 2 1 2 1 3 2 1 1 3 3 2 3 3 2 1 2 ", "3 1 1 1 1 1 2 1 3 3 1 1 2 3 1 1 2 1 1 1 1 1 1 1 2 ", "1 1 1 1 1 3 3 1 1 1 1 1 2 3 1 3 1 1 1 1 3 1 1 2 1 ", "1 1 2 1 2 1 3 1 1 2 1 2 1 1 2 3 1 1 3 1 2 1 1 1 2"};
    vector<string> lengths = {"3 1 1 1 3 1 3 1 2 1 2 3 2 1 1 3 3 3 1 1 1 1 1 3 2 ", "1 2 1 1 3 1 2 1 2 1 1 3 1 3 1 3 2 2 2 1 1 1 2 1 2 ", "2 2 3 2 1 3 3 2 1 2 1 1 1 1 1 3 3 1 2 1 3 2 2 1 1 ", "1 3 1 1 2 1 1 1 3 1 1 2 3 2 1 1 1 1 3 2 1 1 2 2 1 ", "2 3 3 1 1 2 3 2 1 2 2 2 2 2 1 2 1 1 1 2 3 3 3 1 3 ", "3 3 2 2 2 1 1 2 2 3 1 2 1 1 3 1 1 1 2 1 1 1 1 2 1 ", "3 1 1 1 3 1 1 1 1 3 1 3 3 2 3 1 1 2 2 2 1 1 1 1 1 ", "1 2 1 3 1 2 3 3 2 1 2 2 3 1 2 1 2 2 3 1 1 2 1 1 2 ", "3 1 1 1 1 2 2 1 1 2 2 1 1 2 1 3 3 3 3 1 2 1 1 1 3 ", "1 1 3 3 3 1 2 1 1 1 1 1 3 2 3 1 1 1 1 2 3 3 1 3 1 ", "3 1 3 1 2 1 2 2 1 1 1 1 1 3 2 2 1 1 3 1 3 3 1 1 1 ", "3 1 1 1 1 1 1 1 1 2 1 3 1 3 1 3 1 1 1 1 1 1 1 1 1 ", "1 1 2 3 1 2 3 1 1 1 3 2 2 1 2 1 2 3 3 3 1 1 1 3 1 ", "3 2 2 2 1 1 1 1 3 3 2 2 1 1 3 1 1 3 3 1 3 3 3 1 1 ", "1 2 3 1 3 1 1 2 2 2 1 1 1 1 1 3 1 1 1 2 3 1 1 1 1 ", "1 3 3 2 1 3 1 1 1 1 1 1 1 1 1 1 3 1 1 2 2 2 1 1 1 ", "3 1 1 3 3 3 2 2 1 1 3 1 1 2 2 2 1 1 2 2 2 1 1 1 1 ", "1 3 1 2 1 1 2 2 1 2 1 2 2 1 2 1 2 1 2 3 2 1 2 2 1 ", "1 1 1 1 2 1 1 2 3 3 3 3 1 1 1 1 2 1 3 2 1 3 1 1 1 ", "3 3 3 1 2 1 3 1 1 2 1 2 2 1 1 3 1 1 3 3 2 3 1 2 1 ", "1 3 1 1 1 1 2 2 3 3 1 1 3 1 1 1 2 3 1 1 3 1 1 3 1 ", "1 1 3 1 3 1 1 2 1 3 1 1 1 3 2 1 2 2 3 1 3 1 1 3 2 ", "1 1 1 2 3 1 3 2 1 2 1 1 2 2 1 3 1 1 2 2 3 2 3 2 3 ", "2 1 2 1 2 1 1 1 1 1 2 3 1 1 2 2 3 1 1 1 3 2 3 1 2 ", "2 1 3 1 3 2 1 2 1 3 3 2 1 1 2 1 1 1 1 1 3 1 1 1 1 ", "3 3 2 1 1 1 2 3 1 2 1 3 3 1 1 1 3 1 1 1 2 1 1 2 2 ", "1 1 3 3 1 3 1 1 3 1 2 1 3 1 2 1 1 1 1 2 1 3 1 1 3 ", "1 1 1 1 3 1 1 2 3 1 3 1 1 2 3 1 2 3 3 2 3 1 3 1 2 ", "2 1 2 1 1 3 2 1 1 1 2 1 1 1 3 1 2 3 1 1 2 3 3 2 2 ", "1 2 2 1 1 1 1 3 1 1 1 1 3 1 1 3 2 1 1 1 1 3 2 2 1 ", "1 2 1 1 1 3 1 2 1 1 1 1 3 3 1 1 1 1 1 3 2 1 1 1 2 ", "2 1 1 1 3 1 1 1 2 1 1 2 1 1 2 3 3 1 1 2 1 1 2 2 1 ", "1 1 3 1 1 2 1 3 1 3 1 3 3 1 2 1 3 2 3 1 1 1 1 1 1 ", "3 2 1 1 1 2 1 2 1 1 2 1 1 3 1 2 3 1 1 1 1 1 2 1 2 ", "3 1 2 1 1 1 1 1 3 1 3 2 3 2 2 1 2 3 2 1 1 1 2 1 2 ", "1 1 1 3 3 1 1 1 2 3 1 1 2 3 2 1 1 1 2 1 2 1 1 3 2 ", "2 1 2 1 2 1 2 1 1 3 2 3 3 1 1 2 3 1 1 1 1 1 1 1 1 ", "1 1 1 2 1 1 2 2 1 1 1 1 2 2 2 1 1 2 1 1 1 1 1 3 1 ", "1 3 2 3 1 1 3 1 1 1 2 3 2 3 1 1 2 3 1 1 1 1 3 1 1 ", "1 1 3 1 3 1 1 2 3 1 1 2 2 1 1 1 3 1 1 1 1 1 2 1 3 ", "2 3 2 1 3 1 1 1 1 3 1 2 1 3 1 1 2 3 1 1 2 1 1 2 3 ", "1 1 2 1 1 1 1 1 1 2 3 3 1 1 3 2 2 2 2 2 1 3 1 1 3 ", "3 3 1 1 3 1 1 1 1 3 3 1 1 3 2 1 2 1 1 1 1 1 3 1 1 ", "3 3 3 2 3 3 1 2 1 3 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 ", "2 1 3 1 1 1 1 3 3 3 1 1 3 1 1 1 1 1 3 1 1 2 2 1 3 ", "3 3 3 1 1 2 1 2 1 1 1 3 1 2 1 3 3 2 1 2 3 2 2 2 1 ", "3 2 2 3 3 3 3 3 3 1 2 1 3 1 3 1 2 1 3 1 3 2 3 1 1 ", "1 3 2 1 2 1 3 1 3 2 2 1 1 1 2 1 1 2 2 1 1 2 1 3 3 ", "1 3 3 2 2 2 1 1 1 3 1 1 1 1 3 1 1 3 1 1 3 2 2 2 3 ", "2 1 1 1 1 1 2 1 1 2 1 1 2 1 2 1 1 3 2 3 1 1 1 1 1"};
    vector<string> names = {"C D M M C U H A N N E R Q I W I U F I G A X U A A ", "Z Q Y R Y O X D G G E Q E U M I A A N M D S C A W ", "J L Q A G Q O S Z K F P N G E S U P W K X E Y A Y ", "A I U K A K K I V T C Q K B S R K U F I E K L A O ", "S E U K M F D D S L C I T U Q B U C O A F P K K K ", "U C Y E K A O O O J M Q M A D W P M U I B W G C Z ", "Y O O E E A L U I N M S A M W M I N X Y I S H K N ", "M T U K Q A M A C N G K Y A S Y A I N U O S Q O G ", "U I J A A E O W E A Y N M V W Q U A K J Y A Y C P ", "G W Y M U N V C Q L U P A M W H C X C G Y A K S K ", "M I V B N Q Y Y K J W O S O A E X Q Y O Z C S L X ", "S U U Y W D K G S C A U I V A A A A K A C G C G J ", "X A J C V D E J E I Y L A N M E V R E C S K K E K ", "V W S M I A M Q K U A Q I Z L L A U A I M U U G W ", "N O O A G F G E H M A A G K A Q U Q E F W B H M Y ", "Q W K M M A K K G K Y O D R C S W A K Y W S I A A ", "A U I A T Q X A W Y A U Y A A S M E O K A M S N M ", "Q Q A A I M A P G W W E I C A K W N Y E E O L S W ", "H M Q A O C G U A O N O K I O L K T U O Y S G N S ", "E W U X Q W N U N M L A D A U G K S J T L U Z A U ", "I A O Q H U E C N B E F E O U E H X L Y C B E K Y ", "Z E O U M W M K Y N N G Y N N I G K Q U C T Y T W ", "A J U O Y I M I P A S A Y S F V I A G W W K R L Z ", "G S K T S M O O M X W M K H U A E G J E P C Q Y I ", "U R K X G O C K U G Z C H F A H A H I U E N D S W ", "Y U C I C C Z X U A I W A Q R G Z G U A N U I M U ", "A A A N E O Y O Q A Q C R O A G G E G O M G S M U ", "Z S D C I N V H O P M Z H Q D W N N Y Q I G S A I ", "S Q M S T A T O F G T O B B Y V E A E C N F V I S ", "Y A T T I Z Q K A J I A K M A I E O C V X A A O W ", "Q G B J A F O K Q D C L C F R J E W G S Q Y X S U ", "W A F A G M S E Y V Y C G L N H G A N G C U A E E ", "E Q R K O W V H U Y F Y F U G S O C P E A Q S K I ", "E R A V L U H P V T D O C J Q T U N S A W W I U K ", "O A C G A D A R O P Q U S X T Y H Q C V M T S N A ", "G A K B A P M U K Y T Q M D C C R Y U P A O W Y C ", "S G C K Q P D Q A G V O A A F S A Q L H X T Q K S ", "A F E D Y E I M N Z W W K G H G O C U Q O F X X W ", "A J U D A Q Q S A E Q E H P Q Y M I A E A Q J K W ", "Y B K K A S C A E X N Q A E K K U A K W A D J O K ", "Q A L L G M H E V A K V S U U G Q O A W L V Y Y B ", "Q Q Y U A Y C J C E Q Y N K M D I K O G N J O Y C ", "A Q U M W K Y I A F O Z A N W O C M M U K K M S M ", "O A G D S Q O G N F V O I R I S W N K M K Q N A X ", "N N E A S A I Q M R A U U K W M S Q Z G D M Y F I ", "E T O D U N I E V K W Q G N A A U P K O S I Q A K ", "H N Y U E I A A W G N Z S O Q B C K U M C X K Q X ", "A R P U V W A L Q C E G V Y Q S K S N F P B K W E ", "U P A T K M I Y S M L J A K K W I E I A S H Z E L ", "Q G G O U W A W U U A S F Q Q K U Q I E G I N E W"};
    int k = 209;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "C", "C", "C", "C", "C", "C", "C", "C", "C", "D", "D", "E", "E", "E", "E", "E", "E", "E", "E", "F", "F", "F", "F", "G", "G", "G", "G", "G", "G", "H", "H", "H", "H", "H", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "J", "J", "J", "J", "J", "J", "J", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "L", "L", "L", "L", "L", "L", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "P", "P", "P", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "R", "R", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "T", "T", "T", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "V", "V", "V", "V", "V", "V", "W", "W", "W", "W", "W", "W", "W", "W", "X", "X", "X", "X", "X", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y"};
    if(result == expected) {
        cout << "Test Case 92: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 92: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test93() {
    vector<string> x = {"3 2 1 2 1 1 2 1 1 3 1 1 1 1 2 1 2 2 1 1 1 1 1 1 2 ", "3 1 3 1 1 1 1 1 1 1 1 1 3 1 1 2 3 1 1 1 1 1 1 1 1 ", "3 1 1 1 3 3 1 1 1 3 3 1 3 1 2 1 1 2 1 3 2 1 2 2 3 ", "3 2 1 2 3 2 1 3 3 1 2 1 1 1 3 1 3 1 3 1 1 1 1 1 1 ", "1 3 1 1 1 2 1 3 2 1 2 1 1 1 1 1 1 3 1 1 2 1 1 1 3 ", "1 3 3 1 2 1 1 1 1 1 3 1 1 1 1 2 1 1 2 2 3 1 1 1 1 ", "1 1 1 1 1 1 3 1 1 1 1 2 2 2 1 3 1 1 3 1 2 1 1 1 2 ", "3 1 1 2 2 3 1 1 1 3 1 2 3 3 1 1 1 1 2 1 3 1 1 1 3 ", "1 1 3 1 1 2 1 1 1 1 2 3 3 1 2 1 3 1 1 1 1 1 1 2 1 ", "1 3 1 2 3 1 1 2 1 1 1 1 1 2 2 1 2 2 2 2 1 2 2 2 1 ", "2 1 1 1 1 1 2 3 1 2 1 2 1 3 2 3 1 1 1 2 3 3 1 2 1 ", "1 1 3 1 3 1 2 2 3 2 2 3 3 1 1 1 1 3 3 1 1 1 1 3 2 ", "3 3 1 1 3 2 2 1 1 1 2 1 1 3 2 2 1 3 1 2 1 3 1 1 1 ", "1 2 1 1 1 3 1 1 1 2 2 3 3 1 3 2 3 1 1 1 1 3 3 1 2 ", "2 1 1 2 1 3 1 1 1 1 2 1 3 1 1 1 1 3 1 1 2 2 1 1 1 ", "1 2 1 1 3 2 2 1 1 3 2 3 2 1 1 3 1 1 3 3 1 1 2 3 3 ", "2 2 3 1 1 3 2 1 1 1 1 1 1 2 1 1 3 1 3 1 1 1 1 1 3 ", "1 1 3 3 2 1 1 1 1 2 1 1 1 1 1 1 2 3 3 2 1 1 1 1 1 ", "1 3 3 1 3 1 1 1 1 1 1 3 3 1 1 2 2 3 3 1 1 1 2 1 1 ", "3 1 1 1 1 1 1 3 1 1 1 3 1 2 3 1 1 3 3 3 1 1 2 2 1 ", "1 2 1 2 3 2 1 1 3 2 3 2 1 1 1 3 2 3 2 1 1 1 2 2 2 ", "1 1 1 1 2 1 2 1 3 1 3 1 2 1 1 1 2 3 2 2 3 2 2 2 2 ", "1 1 2 3 3 1 1 1 2 2 2 3 2 2 1 1 2 2 1 1 2 3 1 2 3 ", "1 1 2 3 1 1 1 3 1 1 3 1 2 1 2 2 3 1 1 1 1 1 1 2 2 ", "1 1 3 1 3 1 1 3 1 3 1 3 1 1 1 3 1 2 1 3 1 1 3 1 1 ", "1 1 1 1 3 1 3 1 1 1 1 1 1 1 3 1 1 1 1 2 3 1 1 2 2 ", "1 1 1 2 1 1 2 3 1 3 2 2 3 2 3 1 3 1 1 1 1 3 3 3 3 ", "3 3 1 2 1 3 2 1 1 3 1 1 1 1 2 1 1 1 1 3 1 1 1 2 3 ", "1 2 1 1 1 1 2 1 1 1 3 3 2 1 1 1 3 3 1 1 1 1 3 2 1 ", "3 3 3 1 1 2 2 1 1 3 1 1 1 3 1 2 3 1 1 1 1 3 1 1 1 ", "1 2 1 2 1 1 1 1 1 1 1 3 1 1 1 2 1 2 2 1 1 3 3 1 1 ", "3 1 1 1 1 1 1 2 2 1 1 3 2 2 2 2 1 3 2 1 3 2 2 1 1 ", "3 2 1 1 1 2 3 1 1 3 1 1 1 2 2 1 1 2 1 1 1 1 3 3 1 ", "3 1 1 1 1 1 1 1 1 1 1 1 3 1 2 3 3 1 1 3 2 2 1 1 2 ", "1 3 2 1 1 1 1 1 2 1 1 1 1 3 2 1 1 3 3 3 2 1 2 1 3 ", "1 1 1 1 1 1 3 1 2 3 1 1 3 3 3 1 1 1 3 1 1 2 3 1 1 ", "1 2 1 1 3 3 1 2 2 3 3 1 2 2 1 1 1 3 2 1 3 2 1 1 2 ", "2 1 3 1 1 1 1 1 1 3 1 3 2 1 1 3 2 2 2 1 2 2 1 3 1 ", "1 1 3 1 1 3 3 1 1 2 2 3 2 3 1 1 3 1 2 1 1 1 2 2 1 ", "3 1 3 3 3 1 1 2 1 1 1 1 3 1 3 3 2 1 2 1 3 1 3 1 1 ", "1 1 3 1 3 1 1 2 1 1 1 1 1 3 1 1 1 1 1 3 2 1 1 1 1 ", "1 1 2 1 1 3 1 1 3 2 3 1 1 3 1 3 2 2 1 1 1 2 2 1 3 ", "3 1 2 1 3 1 1 1 1 1 1 3 1 1 1 2 1 1 3 1 1 2 1 1 1 ", "1 1 1 1 3 3 1 1 1 1 1 1 1 1 1 3 2 1 2 1 1 2 1 1 2 ", "3 1 2 1 1 2 2 2 1 1 3 1 1 1 1 2 1 1 2 2 1 3 3 1 2 ", "1 1 1 2 2 2 1 3 2 2 2 3 1 2 1 3 1 1 3 2 2 1 1 2 3 ", "2 2 3 2 2 2 3 1 1 3 3 3 3 3 2 1 2 1 3 2 2 3 1 1 2 ", "1 3 2 1 2 1 1 3 1 1 2 3 3 3 1 2 1 1 1 1 3 1 3 1 3 ", "1 1 1 3 1 1 2 1 1 3 1 1 1 2 3 1 1 2 2 2 3 1 2 3 3 ", "1 1 1 1 3 3 2 2 1 2 1 1 2 2 2 1 2 3 1 3 2 3 1 1 1"};
    vector<string> y = {"3 1 1 1 1 1 2 1 2 1 1 2 3 1 1 1 1 1 3 1 1 3 2 3 2 ", "1 1 1 1 1 1 1 1 1 1 2 3 3 3 2 2 1 1 1 1 1 1 1 1 1 ", "2 1 2 1 1 1 3 3 2 1 3 1 1 1 2 3 1 3 2 2 1 1 1 1 1 ", "2 1 2 3 1 1 2 1 2 3 1 1 1 1 1 3 3 2 1 3 3 3 1 1 3 ", "2 3 3 1 3 1 1 2 3 3 1 3 1 1 1 3 3 2 1 1 1 1 1 2 1 ", "2 3 1 3 2 1 1 2 1 2 1 3 1 1 3 3 1 1 2 1 1 2 2 3 1 ", "2 1 1 2 1 1 3 2 1 1 3 2 1 3 3 2 3 1 3 2 3 1 2 1 2 ", "1 2 2 3 1 3 1 2 1 1 3 2 1 1 1 2 1 1 2 1 3 2 1 1 1 ", "3 3 3 2 2 2 2 1 3 1 3 1 2 1 3 3 1 1 2 1 2 3 2 2 1 ", "1 3 3 2 1 1 1 2 1 1 1 2 3 1 1 1 1 1 2 1 1 1 1 1 1 ", "1 2 3 2 1 3 1 2 1 1 2 1 3 1 1 3 1 3 2 1 1 2 1 2 2 ", "1 2 2 1 3 3 3 1 1 2 1 2 2 3 1 1 1 3 1 1 1 1 2 1 1 ", "2 1 2 1 2 2 1 1 1 1 1 2 1 3 1 1 1 2 1 1 1 1 2 3 1 ", "1 2 1 1 3 1 1 3 3 1 3 1 2 3 1 3 1 1 1 2 3 1 3 1 1 ", "1 1 1 1 2 1 2 2 1 1 2 3 1 1 3 3 1 1 1 1 3 3 1 2 1 ", "1 1 3 3 1 1 1 1 2 1 2 1 1 1 1 3 3 1 1 2 1 1 3 1 2 ", "1 3 3 2 1 2 2 1 1 1 1 1 1 2 1 1 3 1 2 2 1 2 3 1 3 ", "1 1 2 2 3 1 1 3 1 1 1 2 1 1 2 2 2 2 3 1 3 1 1 2 1 ", "1 1 1 3 1 1 1 2 3 3 3 3 2 1 1 1 1 1 1 2 1 3 3 1 1 ", "1 1 3 1 2 1 3 1 1 1 1 2 1 1 3 2 3 2 2 1 2 2 1 1 3 ", "1 1 2 2 3 3 2 2 1 1 2 3 2 2 1 2 3 1 3 3 2 3 3 2 1 ", "1 1 1 1 3 3 1 1 2 3 1 1 1 3 1 1 3 1 2 2 1 3 1 3 3 ", "2 2 1 1 3 1 1 3 1 3 1 3 1 3 1 1 3 2 2 2 1 1 2 2 1 ", "1 1 1 1 1 1 1 3 1 1 1 3 1 1 1 2 3 1 1 2 1 3 2 1 1 ", "2 1 3 1 1 3 1 1 1 2 2 1 1 1 2 1 2 3 1 1 2 1 2 3 1 ", "2 1 2 1 1 1 1 3 3 3 1 1 3 1 1 1 1 1 2 2 1 2 1 1 1 ", "1 1 3 2 1 1 1 1 1 2 1 3 2 2 1 1 3 2 2 1 1 1 3 1 1 ", "2 3 3 3 1 3 3 2 1 1 2 1 2 2 3 2 3 1 3 3 1 1 1 1 1 ", "2 2 2 3 3 1 1 1 1 1 3 1 1 3 2 3 1 3 1 1 2 3 3 3 1 ", "3 2 1 2 3 1 3 1 2 1 1 1 1 1 2 3 1 1 1 1 1 2 1 1 1 ", "3 3 1 2 1 1 2 1 1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 1 2 ", "1 2 2 1 1 1 1 3 1 1 2 1 2 1 1 1 3 1 1 1 2 2 1 2 2 ", "1 2 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 3 2 1 3 1 3 ", "3 3 3 3 3 2 1 1 1 1 2 3 2 1 1 3 1 1 1 3 1 1 1 2 3 ", "1 1 1 1 1 2 1 3 1 3 1 3 1 1 1 2 3 1 3 1 3 2 3 1 1 ", "1 1 3 3 1 1 1 1 1 1 1 3 1 1 1 3 1 1 1 3 1 1 1 1 1 ", "3 2 1 3 1 1 1 1 2 3 3 1 1 2 1 3 1 1 2 3 3 1 1 2 1 ", "1 1 3 1 3 1 3 1 3 1 1 2 1 1 1 2 2 1 1 1 3 3 3 3 1 ", "1 1 3 2 2 3 2 2 3 2 1 3 1 3 1 1 1 2 1 3 2 2 1 2 3 ", "3 1 1 2 2 3 2 1 3 2 1 1 1 1 1 1 1 1 2 2 3 3 1 1 2 ", "1 1 3 3 3 1 1 3 2 1 3 2 1 2 3 2 1 1 1 1 3 1 1 3 1 ", "3 2 1 3 3 1 1 1 1 1 3 1 1 2 3 2 3 3 1 1 3 2 2 1 1 ", "2 1 1 1 1 1 2 3 1 2 3 3 3 2 3 2 1 1 2 3 3 1 3 3 1 ", "2 1 2 1 2 3 1 3 3 2 1 1 1 1 1 1 1 1 3 1 2 2 1 1 1 ", "1 2 2 2 1 3 3 1 2 1 3 1 2 2 2 1 3 1 1 2 3 1 1 1 2 ", "1 3 1 1 3 1 3 1 2 1 1 3 2 1 2 2 1 3 1 3 2 1 3 3 2 ", "3 2 3 3 3 1 1 3 1 3 1 1 1 2 1 2 1 1 2 1 1 2 3 1 1 ", "1 3 1 1 3 1 1 2 3 1 3 3 2 1 3 3 1 1 1 1 3 1 3 3 2 ", "2 1 1 1 2 1 2 2 1 3 2 1 3 1 1 1 1 3 1 1 1 3 2 1 3 ", "1 1 1 1 1 1 1 3 1 3 1 1 1 2 3 1 1 1 3 1 1 1 3 1 3"};
    vector<string> lengths = {"1 1 1 1 1 2 2 2 3 3 1 3 1 3 1 2 1 1 2 3 1 1 3 1 1 ", "1 2 3 2 2 3 2 1 1 1 2 1 1 3 1 3 2 3 2 1 1 3 1 3 1 ", "1 3 2 1 2 2 1 3 3 2 1 1 1 3 3 2 1 1 1 2 3 1 2 2 1 ", "3 3 1 3 1 3 1 3 1 2 1 1 2 1 1 1 2 3 1 1 1 2 3 2 1 ", "1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 2 2 1 1 2 1 1 1 ", "3 1 1 3 3 1 3 1 1 1 3 1 1 1 3 3 2 2 2 2 1 1 1 1 1 ", "2 1 1 2 2 2 1 2 3 3 1 2 1 3 2 3 3 1 3 1 2 2 2 3 1 ", "1 3 3 3 1 2 1 3 1 2 1 3 1 1 1 2 2 1 3 1 1 3 3 1 2 ", "1 1 2 2 3 1 3 2 3 2 3 2 3 1 3 2 3 1 1 3 1 1 3 1 1 ", "1 1 3 3 1 3 1 2 1 1 2 3 2 1 3 1 1 3 2 2 1 1 1 1 1 ", "2 1 1 1 1 1 2 1 1 2 1 1 1 3 1 3 2 1 2 2 1 2 1 3 1 ", "1 1 1 3 1 3 1 3 1 1 1 2 1 3 1 1 3 1 1 3 1 1 1 3 1 ", "2 1 1 2 2 1 2 1 1 1 1 3 1 3 2 2 1 3 3 1 3 1 1 2 1 ", "1 1 1 1 1 2 1 1 2 1 2 1 2 1 1 2 2 1 1 1 3 1 1 2 3 ", "1 2 1 2 1 2 1 3 3 1 1 1 1 2 1 2 2 2 1 1 3 1 1 2 1 ", "1 1 2 1 1 1 1 1 2 3 1 1 1 1 2 1 1 1 1 3 1 3 3 1 2 ", "1 1 3 1 1 2 1 1 1 3 2 2 1 2 2 1 2 2 1 1 1 3 1 1 1 ", "2 3 1 1 3 3 1 3 1 1 2 3 1 1 2 1 1 1 2 2 1 1 1 2 1 ", "1 1 2 1 3 2 3 1 1 3 2 2 1 1 1 2 1 1 1 1 1 1 3 3 2 ", "1 2 1 3 1 2 1 1 1 1 1 1 2 3 1 2 1 1 1 2 1 3 3 3 1 ", "1 1 1 2 3 2 2 3 3 1 1 1 3 2 3 3 3 2 1 1 3 2 2 3 1 ", "1 1 3 3 1 1 3 1 1 3 1 2 2 2 2 1 1 1 1 1 1 2 2 2 1 ", "2 3 1 3 2 1 2 1 1 2 1 1 2 1 1 2 3 3 2 1 1 1 3 2 1 ", "2 1 1 1 3 1 2 1 1 1 1 1 3 1 1 1 1 2 2 2 2 2 2 1 2 ", "1 1 2 1 2 2 1 1 1 1 3 3 1 1 1 3 2 1 1 1 1 1 2 1 1 ", "1 2 1 2 1 2 2 1 2 1 1 1 1 1 1 3 1 3 3 1 3 1 1 1 3 ", "1 1 3 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 3 1 2 1 3 1 1 ", "2 2 2 1 1 1 3 1 3 1 1 2 3 1 2 2 3 1 3 1 1 3 2 2 2 ", "1 3 1 1 3 1 3 2 2 3 1 2 3 2 3 1 1 2 1 1 2 3 1 3 1 ", "3 2 1 3 3 3 1 3 1 2 1 1 1 2 1 3 3 3 1 3 1 1 1 1 2 ", "1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 1 2 1 2 2 1 ", "1 1 1 3 3 2 3 1 1 1 3 3 1 1 1 1 3 3 2 2 1 2 3 3 1 ", "1 1 1 1 1 1 1 1 2 3 1 2 3 3 1 2 3 1 1 1 1 1 3 2 2 ", "3 2 1 1 3 3 1 1 3 3 2 1 1 2 1 1 1 2 1 2 1 1 3 1 2 ", "1 1 3 1 3 1 1 1 1 1 1 3 2 3 1 1 1 1 1 1 1 1 1 3 2 ", "1 3 1 1 1 1 1 2 1 1 1 1 1 3 1 1 1 1 1 2 3 1 3 3 2 ", "1 1 2 2 2 2 1 1 2 2 2 1 1 2 1 1 1 3 1 2 1 1 1 1 3 ", "1 1 1 1 1 1 1 1 3 1 1 1 1 1 1 1 3 2 1 1 1 1 1 1 3 ", "1 1 1 1 1 3 3 1 2 3 3 2 1 1 1 2 1 3 1 3 2 2 3 3 1 ", "1 1 1 2 1 1 2 1 1 1 2 3 2 1 2 2 1 2 1 1 3 3 2 1 1 ", "1 2 1 3 1 1 2 3 2 2 1 1 3 1 3 3 1 3 2 1 1 1 1 1 2 ", "2 1 1 2 1 2 1 2 3 1 2 1 1 2 3 1 3 1 1 2 2 2 1 2 1 ", "3 1 3 1 1 1 1 2 1 3 3 1 2 1 1 1 2 1 2 1 1 1 1 2 1 ", "1 1 2 3 1 2 1 1 2 3 1 2 2 1 1 2 1 1 2 1 2 2 2 1 2 ", "2 2 1 1 3 2 1 1 2 3 1 1 1 1 3 1 1 2 2 1 1 1 1 3 3 ", "2 1 1 3 1 3 3 1 1 3 2 2 3 1 1 3 2 3 1 1 2 1 1 3 2 ", "1 2 1 2 1 1 2 3 2 2 3 1 2 1 1 2 3 1 2 2 1 1 1 3 3 ", "1 1 2 3 1 3 1 2 3 3 3 2 1 1 1 1 1 2 2 1 1 1 3 3 3 ", "3 2 1 2 1 3 1 1 1 2 1 1 1 3 2 3 3 1 1 1 1 2 1 3 1 ", "1 1 1 1 2 1 2 1 1 1 1 2 1 3 2 1 3 1 3 1 1 3 2 3 2"};
    vector<string> names = {"A I E A I Y X M L U J U F P U S R V R I R Q T C A ", "G O E D I U C H L Q E I N Y A Q A I H U G T W S M ", "C W Q U J U W F W I M O S B A U R A A S A M U E Y ", "Y L M A Y A A B N A S G K Q C I E G U E Z N C L I ", "A Q Q H U G B R U G Q Y J A K Y B O U S G A W Q R ", "C Y G W P C M Q Y R A Q E G G U C C I W Y Q A O C ", "C A A H L C Q E N Y D Z H U A T O E A Q F I G K M ", "I O P M T I I I Q R A K N Y A G N A N Q L Z C E E ", "H A E O W H G C A C A V W M O A Y J A U Y U A A D ", "W O Z Z A S D O N R A N U R I J G P O Z A J M N N ", "W C J J O Y E A D V Q J P A A G K U O P Y A G Y E ", "W S N K U K M R R C A Q K R X W P C C O G N S Q H ", "K W I U K T W Q B G C S Y W M M I Q W S W I L E J ", "E E B U Y Y M U A D P G Q A K Y A E Y F O C E R U ", "B I D O E N G E S Y M D A V U W F A W K E O L A V ", "I A A W A E Z K E O O C K C J U N A S V E U Z H W ", "Y K R O Q B U K B E L F W W B W Z N M I A T A V U ", "N M O T Y I E N Q S K Z Z S A D C C K E O O I C C ", "S U A U U P E A Y U C S U K Q Z M F A W N S A R I ", "C K N A O P U U G Y I E M C U O O L A U E C H G S ", "K J M Q A K I S I I G W U Z R W N C E A M M C O T ", "C K M B G U M K Q I I Y I B O N G K X B V J K R N ", "A E O S E A Q C Y H K A C S E A Y A A C Y A A V W ", "S A P I N W J E I G T Z E O N Q A S Y A X O C U K ", "M C S N N P X N T W S E C K C G K A I O W O Y F Z ", "E C K I K K W S K Q N Y I E A A A E H Z Y A A R E ", "O U J F E K C W Z K C S J A O A R C E A K R H L I ", "F I W G U G N N L M U S O Q H H O W M A F W O R I ", "C K Y K I C I Y A O A A Q W V E E K G N C Q V G C ", "F C W W M G P M Y W Z N M G M R J W M N G A V A F ", "I Q H S W X Y I Y L U U Z E A U C C A P Y Y K I E ", "Y U H I O O C O A E C S Q S O R E E H Z I K X O A ", "N B W Z O S Q B Q D N U J Q G J E F D K M D R E E ", "N M L A M I O Q V C I U Y Y E S Q M I A I Q K G D ", "Q D N P C V G Q A C W Q S A H W C W S L A N K K O ", "W A E A G A A S Q L J S I P M C E G X Q K I C S Y ", "H E O Y U P S M Q Y K S G M S E B K A Y A M V A A ", "Z N G N H Z A K V C V G A Y F A G L A K S E J E C ", "N J I Q V Q E K A W E U V W I C K R Z W I K M A O ", "L K N A T W G E H Q S G O M E G Y N O I A A S K W ", "E G N Z O U A A K E J M F S I H M M T K C S U N A ", "J K C C O U E L I B S A I L Q L Y H M M U K Y C R ", "K I E S A G F T Y W E K I G D I M U S M J C Y U G ", "A W A A O Z B W A L K W A A B Y T I E M W K G L U ", "G G C R I O U M P E Z T H L E I X A B A Z N Y U G ", "P Y U A S E S E A S A V U J G Q G N I E A K A U A ", "S W E Q V A A D U N G A J O U V Y Z Z Z S G R M X ", "N I O M E C M T N N F W C Z K P Y E I Y Y M M W C ", "W A Z U S A A V P G R L C H C U A G T L K Q S G J ", "E E G X K Z E G E O V K A N P M N O A N U E M Z O"};
    int k = 152;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "B", "B", "B", "B", "B", "B", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "D", "D", "D", "D", "D", "D", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "F", "F", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "H", "H", "H", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "J", "J", "J", "J", "J", "J", "J", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "L", "L", "L", "L", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "N", "N", "N"};
    if(result == expected) {
        cout << "Test Case 93: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 93: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test94() {
    vector<string> x = {"1 2 1 1 1 2 1 1 1 1 1 1 2 1 2 1 1 1 1 2 1 1 1 2 1 ", "1 1 1 2 1 2 2 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 2 1 1 2 2 1 2 1 1 1 2 2 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 1 2 2 2 ", "2 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 2 1 2 2 2 1 1 2 1 ", "1 1 1 1 1 2 1 2 2 2 1 1 1 2 1 1 1 1 2 1 2 2 1 1 2 ", "1 1 2 1 2 1 2 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 ", "1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 2 1 1 2 2 ", "1 1 1 1 1 2 2 2 1 2 2 1 1 1 1 2 1 1 1 1 1 1 1 2 1 ", "1 1 2 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 ", "1 1 2 1 1 1 2 1 2 1 1 1 1 2 1 1 2 1 1 1 2 1 1 2 2 ", "1 1 2 1 1 1 2 1 1 2 1 1 2 1 1 1 1 2 2 2 1 1 1 1 1 ", "1 1 2 2 1 1 1 1 1 2 1 1 2 1 2 1 2 1 2 2 1 1 1 1 1 ", "2 1 1 1 1 1 1 2 2 1 1 2 2 1 1 2 1 2 1 1 1 1 1 1 1 ", "1 1 2 2 1 1 2 1 2 1 1 1 2 2 1 1 1 1 2 1 2 1 1 1 1 ", "2 1 1 1 2 1 1 1 1 1 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 2 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 ", "1 1 2 1 1 2 1 2 1 1 1 2 1 2 1 2 2 1 1 1 2 1 2 2 1 ", "1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 1 2 2 2 2 1 ", "1 1 1 2 1 2 1 2 1 2 1 1 1 1 2 2 1 2 1 2 1 2 2 1 2 ", "2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 ", "1 1 1 1 2 1 1 2 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 ", "2 1 2 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 ", "1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 ", "2 1 1 1 2 1 1 2 1 2 1 1 1 2 1 1 2 2 1 2 1 1 1 1 2 ", "1 1 2 2 1 2 1 1 1 1 1 1 2 1 2 1 1 2 1 2 1 1 2 2 1 ", "2 2 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 ", "1 1 1 2 2 1 2 1 2 1 2 1 1 1 1 1 1 2 1 1 2 1 2 2 1 ", "2 2 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 ", "1 1 2 1 1 1 1 1 1 2 1 1 1 2 1 1 2 1 1 1 2 1 2 1 1 ", "1 1 2 1 1 1 1 1 1 2 1 1 2 2 1 2 2 1 2 1 1 1 1 1 1 ", "2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 2 1 ", "1 1 1 1 1 1 2 1 1 2 1 1 2 1 2 1 1 1 1 1 1 2 2 1 1 ", "2 1 1 2 2 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 ", "2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 2 1 1 1 2 2 1 ", "1 1 1 1 1 2 2 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 ", "1 2 1 1 1 1 1 1 2 1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 1 ", "1 2 1 1 2 1 1 1 2 2 1 1 2 2 2 1 1 1 1 1 2 2 2 1 1 ", "1 1 1 1 2 1 2 1 2 1 2 1 1 2 2 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 ", "1 1 1 1 1 2 1 1 2 1 2 1 2 1 1 1 1 2 2 1 1 1 1 1 1 ", "2 1 1 2 1 1 2 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 1 1 1 1 2 1 2 2 2 2 1 2 1 2 1 1 1 1 1 1 ", "2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 ", "1 1 1 1 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 2 1 1 1 1 2 ", "1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 ", "2 1 1 1 1 1 1 2 1 1 2 1 2 1 1 1 1 2 2 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 2 1 1 1 2 2"};
    vector<string> y = {"1 1 1 2 2 2 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 2 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 ", "2 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 2 1 1 2 1 2 1 1 1 2 1 2 1 2 1 1 1 1 2 1 ", "1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 2 1 2 1 1 1 2 1 1 1 2 1 1 1 2 1 2 1 ", "1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 2 ", "1 1 1 2 2 1 2 1 1 1 1 1 1 1 2 1 1 1 2 1 2 1 2 2 1 ", "1 1 1 1 1 1 1 1 1 2 2 2 1 1 1 1 1 2 1 1 1 1 1 2 1 ", "1 2 1 1 2 1 1 1 1 1 1 2 2 1 1 1 2 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 2 1 ", "1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 ", "2 2 1 1 1 1 2 1 1 2 2 2 1 1 1 1 1 1 2 2 1 1 2 1 1 ", "1 2 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 2 1 1 1 1 2 1 2 ", "1 1 1 1 1 2 2 2 1 1 2 1 1 2 2 1 2 1 1 1 1 2 2 1 1 ", "1 1 1 2 1 1 1 2 2 1 1 1 2 1 1 1 2 1 2 1 1 1 1 1 1 ", "1 1 2 2 1 1 1 1 2 1 1 2 1 1 2 1 1 1 1 1 2 1 2 1 1 ", "2 1 1 1 1 1 1 1 1 2 1 2 2 2 1 2 1 1 2 1 2 2 1 1 1 ", "1 2 1 1 1 2 1 1 1 1 1 1 2 1 1 1 2 2 2 1 1 1 2 2 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 2 1 1 1 1 1 ", "1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 2 1 ", "1 1 2 2 1 1 1 1 2 2 1 2 1 1 1 1 1 2 1 1 1 1 2 1 1 ", "2 1 2 1 2 1 1 1 2 1 1 1 2 2 1 2 1 1 2 1 1 2 2 1 1 ", "2 1 1 1 1 1 1 2 1 1 1 2 1 2 1 1 1 2 2 1 1 1 2 1 1 ", "1 2 2 2 1 1 2 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 ", "2 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 ", "2 1 1 2 1 1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 1 2 2 2 ", "2 1 1 1 1 1 1 1 2 2 1 1 1 2 1 2 1 1 2 1 2 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 2 1 1 1 1 1 1 1 1 ", "2 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 2 1 ", "1 1 2 1 1 2 1 1 2 1 1 2 1 1 1 1 1 1 1 2 1 1 2 1 2 ", "1 1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 2 ", "1 2 2 2 2 1 1 1 1 1 1 1 2 1 1 1 1 2 2 1 1 1 1 1 1 ", "2 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "2 1 2 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 2 2 1 2 1 1 ", "1 1 1 1 1 2 1 1 2 2 2 1 2 1 1 1 1 1 2 1 1 1 2 2 1 ", "1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 1 2 2 2 1 1 1 1 1 1 ", "1 1 2 1 1 2 2 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 2 1 1 2 1 2 2 ", "1 2 2 1 1 1 1 1 1 2 2 1 2 1 1 1 1 2 1 1 1 1 2 2 1 ", "1 1 1 2 2 1 1 2 1 1 2 2 1 1 2 1 1 1 1 1 1 1 1 2 1 ", "1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 2 2 1 1 1 2 2 1 1 ", "1 1 1 2 1 2 2 2 1 1 1 1 2 1 1 2 1 1 2 2 1 1 1 1 1 ", "1 1 1 2 2 1 1 1 1 2 1 2 1 1 1 1 1 1 2 2 1 1 1 1 1 ", "1 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 2 1 2 2 1 1 1 1 2 1 1 2 1 2 1 1 1 ", "1 1 1 1 1 1 2 2 1 1 1 2 2 2 1 2 1 2 1 1 1 1 1 1 2 ", "2 1 2 1 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 2 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 2 1 1 2 1 1 1 ", "2 2 2 1 2 1 2 1 1 1 2 1 1 1 1 2 2 1 2 1 1 1 1 1 2 ", "2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 2 1 1 1 2 ", "2 2 2 1 1 1 2 2 1 1 1 2 1 1 1 2 1 1 1 1 2 1 1 1 1 ", "1 1 2 1 1 1 1 2 1 1 1 1 2 1 1 2 1 1 2 1 1 1 1 1 1 ", "1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 2 ", "1 1 2 2 1 1 1 1 1 2 1 2 1 2 1 1 1 2 2 1 2 1 2 2 1 ", "1 1 2 1 1 2 2 1 1 1 1 1 1 1 2 2 1 1 1 2 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 1 ", "1 1 1 1 1 1 2 1 2 2 1 1 2 1 1 1 1 2 2 2 1 1 1 1 1 ", "2 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 2 2 1 1 1 1 2 1 1 2 ", "1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 2 1 1 1 2 1 2 1 1 ", "1 1 1 1 1 1 1 1 2 2 1 1 1 1 2 2 1 1 1 2 1 1 1 1 1 ", "2 1 1 1 1 1 2 1 1 1 1 2 1 1 2 2 1 1 2 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 2 2 1 1 1 1 1 ", "2 2 2 1 1 1 1 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 2 2 ", "1 2 2 1 1 1 1 1 1 1 1 2 1 1 1 2 2 2 2 2 1 1 1 1 1 ", "1 2 2 1 1 1 2 1 2 1 2 2 1 1 2 1 1 1 2 1 1 1 2 1 1 ", "1 2 1 1 1 1 1 2 2 1 1 2 2 1 1 1 1 1 1 1 2 1 1 1 2 ", "2 1 1 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 2 1 ", "1 2 1 1 1 2 1 1 1 2 1 1 2 2 1 2 1 1 2 2 2 2 1 2 1 ", "2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 2 ", "1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 2 2 1 1 ", "1 1 1 1 1 1 1 2 2 1 1 2 1 1 1 2 1 1 1 1 1 1 1 2 1 ", "1 1 2 1 1 1 1 1 1 1 1 2 1 2 1 2 2 2 2 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 2 2 1 1 2 1 1 ", "1 1 2 2 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 1 1 2 1 1 2 ", "2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 ", "1 2 2 1 1 1 1 1 2 2 2 2 1 1 2 2 1 1 1 1 2 1 2 1 1 ", "1 2 1 2 1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 1 2 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 1 1 1 1 1 ", "1 2 1 2 2 1 1 1 2 2 1 1 1 2 1 1 1 2 1 1 1 2 1 1 1 ", "1 2 1 1 2 1 2 2 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 2 1 2 1 2 2 1 1 1 1 2 1 2 1 1 1 2 1 2 1 1 2 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 2 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 2 2 1 2 2 2 1 2 1 1 1 1 1 ", "1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 2 1 2 1 1 1 1 ", "1 1 1 2 1 1 1 1 1 1 2 1 2 1 2 2 1 1 1 1 1 2 2 1 1 ", "1 1 1 2 1 2 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 2 2 1 2 1 1 2 1 1 1 1 1 2 1 1 1 1 1 ", "1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 ", "1 1 1 1 1 1 2 1 1 1 2 2 2 2 1 2 1 1 1 2 2 1 1 1 1 ", "1 1 2 1 2 1 1 2 1 1 2 2 1 2 1 1 2 1 1 2 1 1 1 1 2 ", "2 1 1 2 1 1 1 2 1 1 2 2 1 1 1 1 2 2 1 1 2 1 1 2 1 ", "1 1 1 1 1 2 1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 2 1 1 ", "1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 2 1 2 1 ", "2 1 1 1 1 1 1 2 1 1 1 1 1 1 2 2 2 1 1 1 1 2 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 2 2 1 1 2 2 1 1 2 1 1 2 1"};
    vector<string> names = {"D U I U I E G S A Q O Y C V S Q W X A J W A E M W ", "Y U N L C U C U Z U G N W M Y X X M A O C U J O E ", "A I A K X H J O N J G O E U N Q A H N Y H J G G K ", "C B F C W E Q G D G A E T K Y Y K D F E E W U E K ", "K M Q A E B A G M I W O C B C G A Q C N W K N A W ", "I E U E G T T O P M W G M G A O Q S F M S Q Q U E ", "A Q A A A M A A H P A K U X D W E X T H Q K C S E ", "A G S I G O Y I M S A V W R W G K B W W I D X S A ", "W N K A A V Q Z X S G G W W B P K H K Y C Q M F Q ", "A A U Q G Q E I D L N A O A E S O W N U A R P M T ", "A I B M G A W O E Y C T A U M A H M I Q K H K A N ", "U Q Y K W O I W S I W H I Z E V O I U Q K K K G Q ", "S U A A U F W T W A D A Q Q B Y W U D A G N Q N U ", "A X B I P L Y Z W A M Y A A Y S A P O K I Q O G N ", "K K F U C A Q C M C W M M O D I A Q A K O Z A C Y ", "E U Q Y Q G A I U G F Z J O S U M O C G K N O K A ", "B E Y C Y U G R Z G M T G D C D Q S N Y Q W F O E ", "H A V E M G R W A I Y C E W T B X D Q W K Q O C K ", "S G W A U B I A C U O Y M S I K D E E A A C G A R ", "H S J T P Q Q Y Y Y V Y R P W U F G K K D M U Y M ", "A M N G O R Q Q Y A Q E L S M N S A M G B A U E A ", "M M S B A R H A Y E X M S G L Y V I C O U E Y F C ", "W Y S C I Q R D K I X U G Z I Y Q A X S U H N Y O ", "I U D X A J W O E K C W O A C U P E A S C A V N S ", "F H E U U S G T O A B D K E A A N Q A W D T A A U ", "Z S C A Y A W A Y W E S W C I Z I E Y B W A Y K S ", "U C A V Q S E O O P Q I A W R M T E M K C M K I M ", "A I J W D K E Q Z M P U A O E S R W G G Q I O E M ", "Q B Q Q W L Y E D J D T H A P I U A K C C S X X Q ", "V S A A M F Q E G U E I K L M A I Z N Z B R P E A ", "Y U A A I K C E E L R M Q J W O F Y E F W V C S A ", "K B S A K V D M O K G G M O G X E Q I S M W Z W X ", "W O V X G B T C W G Z W G A Q U K C M C Q I M Q I ", "I Q Y I R M K Q S K S C E U N E A I K A H Q C L B ", "A Q C F C O M Q Q D W G E Z C Y C H O G K E E I Y ", "A E N A P G A K O P O Q M N O X F G W K A U C G P ", "K G S A G G V M K K L U K A C K G Q C A W Q P Q Q ", "U K W Y E C M I Y S V S N J N B A Y U F L A K T Y ", "P M M S U Y U U O A E L A Y Q U J A G W A W M G A ", "M W N M A I B J O Y E H F U W V Q A W A Q E T M C ", "W F M N U F M A C Y Y S I Q A E A G B C J F A A K ", "H I W A G G C U O N E M A P L P G X K E Q N Q M C ", "K A D E Z P E A C B F A U Y O X A Q M S W L A K I ", "E S Y Y R G I K G K Q I Q A G I Y D N M X K Q A A ", "Q T Y G T Y A Y C H O G E Y U E F A Y A E T X Y S ", "M N E Y J T M Q M S O A O U Q W O J D B T D O G O ", "Y A G K A K T S A O Q C Q Q I M T J W L K S U U K ", "I O I I H I M I Q R A W A A V K Q A Q G S I C Q N ", "E A A U E E H S Q A A Y L U G W R O H O Y X A H I ", "S Y C Y K S G G I H E Y F A A D G E I Q K I E H I"};
    int k = 504;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 94: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 94: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test95() {
    vector<string> x = {"1 1 1 1 1 1 2 1 2 2 2 1 2 2 1 1 1 2 1 1 1 1 1 2 1 ", "1 1 2 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 ", "1 1 2 2 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 2 ", "1 1 2 1 2 1 1 1 1 1 2 2 1 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 2 1 2 1 1 1 1 1 1 1 1 2 2 2 1 1 2 1 2 2 2 1 1 ", "1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 2 1 ", "2 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 ", "1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 2 1 ", "1 1 2 1 2 1 2 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 2 2 2 1 ", "2 1 1 1 2 1 1 1 1 1 2 1 1 1 2 2 2 1 1 1 1 1 1 1 2 ", "1 2 1 1 1 2 2 2 1 1 1 1 1 2 2 1 2 2 1 1 1 1 1 1 1 ", "1 2 2 2 1 2 2 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 1 1 2 ", "1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 ", "1 2 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 2 2 1 1 1 1 ", "2 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 2 ", "1 1 2 1 1 2 1 1 1 2 1 1 1 1 1 1 2 2 1 1 2 2 2 1 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 2 1 2 ", "1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 1 1 1 1 1 1 1 1 2 2 ", "1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 ", "1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 2 2 1 ", "1 1 1 2 1 1 1 1 2 1 1 2 2 1 1 1 1 1 2 1 2 1 1 1 1 ", "1 1 1 1 1 2 1 1 1 1 2 2 1 1 1 1 1 1 1 1 2 2 2 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 ", "2 1 2 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 ", "1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 2 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 2 1 2 1 2 1 1 2 1 1 1 1 1 ", "1 1 2 1 2 1 2 2 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 2 1 1 1 2 1 1 1 1 2 2 1 1 1 1 2 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 2 1 1 1 2 2 2 1 1 1 ", "2 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 2 1 2 2 1 1 ", "1 1 1 1 2 1 1 2 2 1 1 1 2 1 1 1 2 2 2 2 1 1 1 1 1 ", "1 1 1 1 1 2 1 2 1 1 1 1 2 1 1 1 2 1 1 1 1 2 1 1 1 ", "1 2 2 1 1 1 2 1 1 2 1 1 2 2 1 1 1 1 1 2 1 1 2 1 1 ", "1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 ", "1 1 2 1 2 1 1 1 2 1 2 1 1 1 1 1 2 2 1 1 1 1 1 1 1 ", "2 1 2 1 1 1 1 1 2 1 1 2 1 1 1 2 2 1 1 1 1 1 1 1 2 ", "2 1 1 1 2 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 ", "2 1 1 2 1 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 2 1 1 2 ", "1 2 1 1 1 1 2 1 2 1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 ", "1 2 1 2 2 1 1 1 1 2 1 1 1 1 2 1 1 2 1 1 1 1 1 2 1 ", "1 1 1 2 2 1 2 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 ", "2 2 2 1 1 1 1 1 1 2 1 1 2 1 1 1 1 2 1 1 2 1 1 1 1 ", "1 2 1 1 1 1 1 2 1 2 1 1 1 2 2 1 2 2 1 1 1 1 1 2 1 ", "1 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 2 1 2 1 1 2 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 2 2 1 1"};
    vector<string> y = {"1 1 1 1 1 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 2 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 ", "2 1 1 2 1 2 1 1 1 1 2 2 1 1 1 2 2 2 2 1 2 1 1 2 1 ", "1 2 2 1 1 2 2 2 1 2 1 1 2 1 1 1 1 2 2 2 1 1 1 1 1 ", "2 2 1 2 1 2 1 2 1 2 1 1 2 2 1 1 1 1 1 2 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 2 1 ", "1 1 1 1 2 1 2 1 2 1 1 1 2 1 2 1 1 2 1 1 2 1 1 1 2 ", "1 1 1 2 2 1 1 2 1 2 1 1 2 1 1 2 2 2 1 1 2 1 1 1 1 ", "1 1 1 1 2 1 2 1 2 2 1 1 2 2 1 1 1 1 2 2 1 1 1 2 2 ", "1 1 1 1 1 1 1 2 2 2 1 2 1 1 1 1 1 2 2 2 1 1 1 1 2 ", "1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 2 ", "1 1 1 1 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 2 2 1 ", "1 1 2 1 2 1 1 2 1 1 2 1 2 1 1 1 1 1 1 1 1 2 1 2 1 ", "2 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 1 1 1 2 1 ", "1 1 2 1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 ", "1 1 1 1 2 2 1 1 2 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 2 2 1 1 2 ", "2 1 2 1 1 2 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 ", "1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 2 ", "2 2 1 2 1 1 1 1 1 1 1 1 2 1 2 1 1 1 2 1 1 2 1 2 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 2 2 1 1 2 2 2 ", "2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 ", "1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 2 1 2 2 1 2 1 2 1 1 1 1 1 1 2 2 1 1 1 1 2 1 1 1 ", "1 2 1 1 1 1 1 2 1 1 1 2 2 2 1 2 1 1 1 1 1 1 1 1 1 ", "1 2 1 2 2 1 1 1 2 1 2 2 1 2 1 1 2 1 1 1 1 1 2 1 1 ", "1 1 2 2 1 1 2 2 1 2 1 2 2 1 1 1 2 1 1 1 1 2 1 1 1 ", "2 2 2 1 1 1 2 1 1 1 2 2 2 2 1 1 2 1 2 2 1 1 2 1 1 ", "2 1 2 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 ", "1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 1 2 2 2 1 1 1 2 1 2 2 1 1 2 1 1 2 2 ", "1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 1 2 1 1 1 1 2 1 2 1 1 1 2 1 2 1 1 1 2 1 1 1 1 ", "1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 ", "2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 ", "1 1 1 1 2 1 1 2 1 1 1 1 2 1 2 1 1 1 1 2 1 1 1 1 2 ", "1 1 1 1 1 1 1 2 1 2 1 2 1 1 1 2 1 1 1 1 2 1 1 1 1 ", "2 2 1 1 2 1 1 1 2 2 1 1 1 2 1 2 1 1 1 1 2 2 1 1 1 ", "1 1 1 2 2 1 2 1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 2 1 ", "2 1 2 1 1 1 1 1 1 2 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 ", "1 1 1 2 1 1 2 1 1 1 1 2 2 1 2 1 2 1 1 1 1 1 2 1 1 ", "1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 2 1 1 2 1 1 1 2 1 2 ", "1 1 1 1 2 2 2 2 2 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 1 1 1 2 2 2 1 2 1 ", "1 2 2 1 1 2 1 1 1 2 1 1 1 2 1 1 1 2 1 1 2 1 1 1 2 ", "2 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 1 1 2 2 1 1 1 1 1 ", "1 1 1 2 1 1 1 1 2 1 1 2 1 2 1 2 1 1 2 2 1 2 1 1 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 2 2 1 1 2 1 1 1 1 2 1 2 1 1 1 1 1 1 ", "1 1 1 1 1 2 2 1 2 1 2 1 1 2 2 1 1 1 2 1 1 1 1 2 1 ", "2 2 1 2 1 1 1 1 1 1 2 2 1 2 1 1 1 1 1 2 1 1 2 1 1 ", "1 1 1 1 1 1 1 1 2 2 1 1 1 1 2 1 1 1 2 1 1 2 1 1 1 ", "2 1 1 1 1 1 1 1 1 1 2 1 1 2 2 1 1 2 2 2 1 1 1 2 2 ", "1 1 1 1 1 1 1 2 2 1 1 2 1 1 1 1 2 1 2 1 1 2 1 1 1 ", "1 2 2 2 1 1 1 1 1 1 1 2 1 2 2 1 1 1 1 2 1 1 1 1 1 ", "1 2 1 1 1 1 2 1 1 1 1 1 2 1 2 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 2 2 1 1 1 1 2 2 1 1 ", "1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 2 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 2 1 ", "1 2 1 1 1 1 2 2 1 1 1 2 1 1 2 1 1 1 1 1 1 2 2 1 1 ", "1 1 2 1 1 1 2 1 2 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 1 ", "2 2 1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 ", "2 1 1 1 1 2 1 1 1 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 2 ", "1 1 1 1 2 2 1 2 1 1 1 1 1 1 1 1 2 2 1 1 1 1 2 1 1 ", "1 1 2 1 1 1 1 2 2 1 1 2 2 2 2 1 1 2 1 2 1 1 2 2 1 ", "1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 ", "1 1 1 1 1 1 1 1 2 1 2 1 1 1 2 2 1 1 2 1 1 2 1 2 2 ", "1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 2 2 1 1 2 1 1 1 1 1 ", "2 1 2 1 2 1 2 2 1 1 1 1 2 2 1 1 1 1 1 2 1 2 1 1 1 ", "1 2 1 2 1 1 2 1 2 1 1 1 1 1 1 2 2 1 1 2 1 1 1 1 1 ", "1 2 1 2 2 2 2 1 2 2 1 2 1 1 2 1 1 1 1 1 1 1 2 1 2 ", "1 1 1 2 1 1 1 1 1 1 1 2 1 2 2 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 2 1 1 2 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 2 2 ", "1 2 1 1 1 2 1 1 1 1 1 1 2 2 1 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 2 2 1 1 1 1 1 2 1 1 2 1 1 2 1 2 1 1 1 1 1 1 ", "1 1 2 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 ", "1 1 1 1 1 2 1 1 2 1 2 1 1 2 1 2 1 1 1 2 2 1 1 2 2 ", "1 1 2 1 1 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 2 2 1 1 1 ", "1 1 2 1 1 1 2 2 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 ", "1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 2 1 1 1 ", "1 1 1 1 1 1 1 1 1 2 1 2 1 2 1 1 1 1 2 1 2 2 1 1 1 ", "1 1 2 2 1 1 2 1 1 1 1 1 1 1 2 2 2 1 1 2 1 1 1 1 1 ", "2 1 1 1 1 2 2 2 2 1 2 2 1 2 2 1 2 1 1 1 1 1 2 1 1 ", "1 2 1 1 1 1 2 2 1 2 2 1 1 2 1 1 1 1 1 2 1 1 1 2 1 ", "2 1 2 1 1 1 1 1 2 1 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 ", "2 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 1 1 2 1 1 2 ", "2 1 1 2 2 1 1 1 2 2 1 2 1 1 2 1 1 2 1 1 1 2 1 2 1 ", "1 1 2 2 2 1 2 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 ", "1 1 1 2 2 1 2 1 2 1 1 2 1 2 1 2 1 1 1 1 1 1 2 1 1 ", "1 2 1 1 1 2 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 2 1 2 2 ", "1 1 2 2 1 2 1 1 2 1 1 1 2 2 1 2 1 1 1 1 1 2 1 2 1 ", "1 1 1 1 2 1 1 1 1 2 1 2 1 1 1 1 1 2 1 1 1 2 1 1 2 ", "1 1 1 2 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 ", "2 1 2 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 2 ", "2 1 1 2 1 1 1 1 1 2 2 1 1 1 2 1 2 1 1 1 2 2 2 1 1 ", "1 2 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 2 2"};
    vector<string> names = {"C D M M C U H A N N E R Q I W I U F I G A X U A A ", "Z Q Y R Y O X D G G E Q E U M I A A N M D S C A W ", "J L Q A G Q O S Z K F P N G E S U P W K X E Y A Y ", "A I U K A K K I V T C Q K B S R K U F I E K L A O ", "S E U K M F D D S L C I T U Q B U C O A F P K K K ", "U C Y E K A O O O J M Q M A D W P M U I B W G C Z ", "Y O O E E A L U I N M S A M W M I N X Y I S H K N ", "M T U K Q A M A C N G K Y A S Y A I N U O S Q O G ", "U I J A A E O W E A Y N M V W Q U A K J Y A Y C P ", "G W Y M U N V C Q L U P A M W H C X C G Y A K S K ", "M I V B N Q Y Y K J W O S O A E X Q Y O Z C S L X ", "S U U Y W D K G S C A U I V A A A A K A C G C G J ", "X A J C V D E J E I Y L A N M E V R E C S K K E K ", "V W S M I A M Q K U A Q I Z L L A U A I M U U G W ", "N O O A G F G E H M A A G K A Q U Q E F W B H M Y ", "Q W K M M A K K G K Y O D R C S W A K Y W S I A A ", "A U I A T Q X A W Y A U Y A A S M E O K A M S N M ", "Q Q A A I M A P G W W E I C A K W N Y E E O L S W ", "H M Q A O C G U A O N O K I O L K T U O Y S G N S ", "E W U X Q W N U N M L A D A U G K S J T L U Z A U ", "I A O Q H U E C N B E F E O U E H X L Y C B E K Y ", "Z E O U M W M K Y N N G Y N N I G K Q U C T Y T W ", "A J U O Y I M I P A S A Y S F V I A G W W K R L Z ", "G S K T S M O O M X W M K H U A E G J E P C Q Y I ", "U R K X G O C K U G Z C H F A H A H I U E N D S W ", "Y U C I C C Z X U A I W A Q R G Z G U A N U I M U ", "A A A N E O Y O Q A Q C R O A G G E G O M G S M U ", "Z S D C I N V H O P M Z H Q D W N N Y Q I G S A I ", "S Q M S T A T O F G T O B B Y V E A E C N F V I S ", "Y A T T I Z Q K A J I A K M A I E O C V X A A O W ", "Q G B J A F O K Q D C L C F R J E W G S Q Y X S U ", "W A F A G M S E Y V Y C G L N H G A N G C U A E E ", "E Q R K O W V H U Y F Y F U G S O C P E A Q S K I ", "E R A V L U H P V T D O C J Q T U N S A W W I U K ", "O A C G A D A R O P Q U S X T Y H Q C V M T S N A ", "G A K B A P M U K Y T Q M D C C R Y U P A O W Y C ", "S G C K Q P D Q A G V O A A F S A Q L H X T Q K S ", "A F E D Y E I M N Z W W K G H G O C U Q O F X X W ", "A J U D A Q Q S A E Q E H P Q Y M I A E A Q J K W ", "Y B K K A S C A E X N Q A E K K U A K W A D J O K ", "Q A L L G M H E V A K V S U U G Q O A W L V Y Y B ", "Q Q Y U A Y C J C E Q Y N K M D I K O G N J O Y C ", "A Q U M W K Y I A F O Z A N W O C M M U K K M S M ", "O A G D S Q O G N F V O I R I S W N K M K Q N A X ", "N N E A S A I Q M R A U U K W M S Q Z G D M Y F I ", "E T O D U N I E V K W Q G N A A U P K O S I Q A K ", "H N Y U E I A A W G N Z S O Q B C K U M C X K Q X ", "A R P U V W A L Q C E G V Y Q S K S N F P B K W E ", "U P A T K M I Y S M L J A K K W I E I A S H Z E L ", "Q G G O U W A W U U A S F Q Q K U Q I E G I N E W"};
    int k = 337;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 95: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 95: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test96() {
    vector<string> x = {"2 1 1 1 2 1 1 1 1 1 1 1 2 2 2 1 1 1 2 1 2 1 2 1 1 ", "2 1 1 2 2 1 1 1 2 1 1 2 1 2 2 1 1 1 2 1 2 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 2 ", "1 1 1 2 1 1 2 2 2 1 2 2 2 1 1 1 2 1 2 1 2 1 1 1 1 ", "2 2 2 1 1 1 2 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 2 ", "1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 ", "1 1 1 1 1 1 2 2 2 1 1 2 1 2 1 1 1 1 1 1 1 2 1 1 2 ", "1 1 1 1 1 2 2 1 1 2 2 1 1 1 2 1 1 2 1 1 2 1 1 1 1 ", "1 2 1 1 1 1 1 2 1 1 1 2 1 2 1 1 1 1 2 2 1 1 2 1 2 ", "2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 1 2 ", "2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 ", "1 2 1 1 1 1 1 2 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 2 ", "2 2 1 1 2 2 2 1 1 1 1 2 1 1 1 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 2 1 2 ", "2 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 2 1 ", "2 1 1 1 1 2 2 1 2 1 1 1 2 1 2 2 1 1 1 2 2 1 1 1 1 ", "2 1 2 1 1 2 2 1 1 2 2 1 1 1 2 1 2 2 1 1 1 2 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 ", "1 1 2 1 1 1 1 1 1 1 1 2 1 2 2 1 1 1 1 1 1 1 2 1 1 ", "2 1 2 2 2 2 1 1 1 1 1 2 1 2 1 2 2 2 1 2 1 1 1 1 2 ", "1 2 1 1 1 1 1 1 2 1 2 1 1 1 2 2 1 1 1 2 1 1 2 1 1 ", "2 1 1 2 1 2 1 1 1 2 1 1 2 2 1 1 1 1 1 1 2 1 1 1 1 ", "1 2 1 1 2 2 1 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 2 2 1 ", "1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 2 ", "1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 2 1 ", "2 1 1 1 1 2 1 2 1 2 1 1 2 1 2 1 1 1 1 1 2 1 2 1 1 ", "1 1 1 2 1 2 1 1 1 2 2 2 2 1 1 1 1 1 1 1 1 2 1 2 1 ", "1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 2 2 1 2 1 1 1 2 1 ", "1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 2 1 1 1 1 2 1 1 1 ", "1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 ", "2 2 1 2 2 1 1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 ", "1 2 2 1 2 2 1 1 2 1 2 1 1 2 1 2 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 2 1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 2 1 2 1 1 1 2 1 ", "1 2 1 1 1 1 2 1 1 1 1 2 1 2 1 1 1 1 1 2 1 2 2 2 2 ", "1 1 2 1 1 1 1 2 2 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 ", "2 2 1 2 1 2 2 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 ", "2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 2 1 2 2 2 1 2 1 1 1 1 1 2 2 1 2 1 1 1 2 2 2 1 ", "1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 ", "2 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 ", "2 1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 ", "2 1 1 1 1 1 2 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 ", "2 2 1 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 1 1 2 1 ", "1 1 1 1 1 1 2 1 2 1 1 1 2 1 1 2 2 1 2 1 1 2 2 1 1"};
    vector<string> y = {"2 1 1 2 1 1 1 2 2 2 1 1 1 2 1 1 2 1 2 1 1 2 1 1 1 ", "2 1 1 2 1 1 2 1 1 2 2 2 1 2 1 2 1 2 1 1 2 1 1 1 1 ", "1 2 1 1 2 1 2 2 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 ", "1 2 2 1 2 1 1 2 1 1 1 1 2 2 1 1 2 2 1 1 1 1 1 1 1 ", "1 2 2 2 1 2 2 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 2 1 1 ", "1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 2 1 1 1 1 1 2 1 1 2 1 2 1 1 2 2 1 ", "1 2 2 2 2 2 1 1 1 1 1 1 2 1 2 1 2 2 1 1 1 2 1 1 1 ", "1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 ", "1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 1 ", "2 2 1 1 1 2 1 1 2 1 1 1 1 2 2 1 1 2 1 2 2 1 2 1 1 ", "2 1 1 1 1 2 1 1 1 1 2 1 2 1 1 1 1 1 1 2 1 1 1 1 1 ", "1 2 2 2 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 2 2 1 1 1 1 1 2 1 2 2 1 1 2 1 1 1 1 ", "1 1 1 1 2 1 1 2 1 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 ", "2 1 1 1 1 1 2 1 1 1 1 1 1 2 2 2 2 2 2 1 1 1 1 1 2 ", "1 2 2 1 1 1 1 1 2 2 1 1 2 2 2 1 1 1 1 1 1 1 2 1 2 ", "1 1 1 1 2 1 1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 ", "1 2 2 1 2 1 1 1 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 2 1 2 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 2 1 2 1 1 2 ", "1 2 2 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 2 ", "1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 2 2 1 1 1 1 1 1 ", "1 1 1 2 1 2 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 2 ", "2 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 2 1 2 1 1 1 2 1 1 ", "1 1 2 1 1 1 1 1 2 2 1 1 1 1 2 2 1 2 2 1 1 1 1 2 1 ", "1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 2 ", "1 2 1 1 1 2 2 1 1 2 1 1 2 1 1 2 1 2 1 1 1 1 2 1 1 ", "1 1 1 1 1 1 1 2 1 1 2 1 1 1 2 1 2 1 2 2 1 2 2 1 1 ", "1 1 1 1 2 2 1 1 2 2 2 1 1 1 2 2 2 1 1 1 1 2 1 2 2 ", "1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 ", "1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 2 1 1 ", "2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 2 ", "2 1 1 1 2 1 2 2 1 2 2 1 1 1 1 1 2 2 1 1 2 1 1 2 2 ", "1 2 2 1 1 1 1 1 1 1 1 2 1 2 2 2 1 1 1 2 1 1 1 2 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 2 1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 ", "1 2 1 1 1 2 1 1 1 2 1 1 2 1 1 1 1 1 2 1 1 2 1 1 1 ", "1 1 1 1 1 2 1 2 1 2 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 ", "2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 1 1 1 ", "1 1 2 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 2 ", "1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 2 1 1 ", "2 1 1 2 1 1 1 1 2 2 2 1 2 1 1 2 2 1 1 1 1 1 2 1 2 ", "1 1 1 2 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 ", "1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 2 1 ", "2 1 1 2 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 ", "1 1 1 2 1 1 1 2 2 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 2 1 1 1 1 1 1 1 ", "1 2 2 1 1 1 1 1 1 1 2 2 2 2 1 1 1 1 1 1 1 1 1 1 2 ", "1 1 1 1 1 2 2 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 2 1 1 ", "1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 2 1 1 1 1 1 1 1 2 ", "1 1 2 1 1 2 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 ", "2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 2 2 ", "1 2 1 1 1 1 1 1 2 2 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 2 2 1 1 1 1 1 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 2 ", "1 1 1 2 2 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 ", "2 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 ", "1 1 2 1 2 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 2 1 1 2 2 1 2 1 2 2 1 2 1 1 2 2 2 1 ", "2 1 1 1 1 2 2 1 1 1 1 1 1 1 1 2 2 2 2 1 1 1 2 1 1 ", "1 2 1 1 1 1 1 2 1 1 2 1 1 2 1 2 2 1 2 2 1 2 1 1 1 ", "1 2 2 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 2 2 1 2 2 2 1 2 1 1 2 1 1 1 2 ", "1 1 2 2 2 1 1 1 1 1 1 2 2 1 1 1 2 2 1 1 2 2 2 1 1 ", "1 1 1 1 1 1 1 2 2 1 2 1 2 2 1 1 1 1 2 1 2 1 2 1 1 ", "1 1 2 1 1 1 1 1 2 1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 ", "2 2 1 1 1 2 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 ", "2 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 2 1 1 2 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 2 2 1 1 1 ", "2 1 1 2 1 1 1 1 1 2 1 2 2 2 1 2 1 1 1 2 1 2 1 1 1 ", "2 1 1 1 1 1 2 1 1 1 1 1 2 2 1 2 1 2 1 1 1 1 1 2 1 ", "1 1 2 1 1 1 1 1 2 1 2 1 1 1 1 2 1 1 1 1 1 1 2 1 1 ", "1 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 2 ", "1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 2 1 1 2 1 1 1 ", "1 1 1 1 2 1 2 1 1 1 1 2 2 1 2 1 1 1 1 1 1 1 1 1 2 ", "2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 2 1 1 ", "2 1 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 1 1 1 2 2 1 1 ", "1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 ", "1 1 1 2 1 1 2 1 1 2 1 1 2 1 2 1 2 1 2 2 1 1 2 1 1 ", "1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 2 2 1 1 2 1 1 1 2 ", "2 1 2 1 1 2 2 1 1 1 2 1 2 1 1 1 2 1 1 1 1 1 2 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 2 1 2 1 1 2 1 1 2 1 1 1 1 1 ", "2 1 1 2 1 2 1 1 1 2 2 2 2 1 2 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 1 1 2 1 ", "2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 2 1 2 1 1 1 1 1 2 1 ", "1 2 1 1 1 2 1 1 1 2 2 1 2 1 2 2 1 1 2 1 2 1 1 2 1 ", "1 1 1 1 1 1 1 2 2 1 1 1 2 1 1 1 1 1 2 1 2 1 2 1 2 ", "1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 2 2 1 2 1 1 1 2 1 2 ", "1 1 2 1 2 1 1 1 1 1 1 2 1 2 2 1 1 2 1 1 1 1 1 1 1 ", "2 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 2 1 2 1 1 2 1 1 1 1 1 2 1 2 2 1 1 1 1 1 1 2 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 2 2 1 2 1 2 1 1 2 1 1 2 ", "2 1 1 2 1 1 1 1 1 1 2 1 1 2 1 2 1 2 1 1 1 2 2 1 1 ", "2 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 2 1 1 2 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 ", "1 1 1 2 2 1 1 2 1 2 1 2 1 1 1 2 2 1 1 2 1 2 2 1 1 ", "1 1 2 1 1 2 2 1 1 1 2 1 1 1 1 1 1 1 2 1 1 2 1 1 1"};
    vector<string> names = {"A I E A I Y X M L U J U F P U S R V R I R Q T C A ", "G O E D I U C H L Q E I N Y A Q A I H U G T W S M ", "C W Q U J U W F W I M O S B A U R A A S A M U E Y ", "Y L M A Y A A B N A S G K Q C I E G U E Z N C L I ", "A Q Q H U G B R U G Q Y J A K Y B O U S G A W Q R ", "C Y G W P C M Q Y R A Q E G G U C C I W Y Q A O C ", "C A A H L C Q E N Y D Z H U A T O E A Q F I G K M ", "I O P M T I I I Q R A K N Y A G N A N Q L Z C E E ", "H A E O W H G C A C A V W M O A Y J A U Y U A A D ", "W O Z Z A S D O N R A N U R I J G P O Z A J M N N ", "W C J J O Y E A D V Q J P A A G K U O P Y A G Y E ", "W S N K U K M R R C A Q K R X W P C C O G N S Q H ", "K W I U K T W Q B G C S Y W M M I Q W S W I L E J ", "E E B U Y Y M U A D P G Q A K Y A E Y F O C E R U ", "B I D O E N G E S Y M D A V U W F A W K E O L A V ", "I A A W A E Z K E O O C K C J U N A S V E U Z H W ", "Y K R O Q B U K B E L F W W B W Z N M I A T A V U ", "N M O T Y I E N Q S K Z Z S A D C C K E O O I C C ", "S U A U U P E A Y U C S U K Q Z M F A W N S A R I ", "C K N A O P U U G Y I E M C U O O L A U E C H G S ", "K J M Q A K I S I I G W U Z R W N C E A M M C O T ", "C K M B G U M K Q I I Y I B O N G K X B V J K R N ", "A E O S E A Q C Y H K A C S E A Y A A C Y A A V W ", "S A P I N W J E I G T Z E O N Q A S Y A X O C U K ", "M C S N N P X N T W S E C K C G K A I O W O Y F Z ", "E C K I K K W S K Q N Y I E A A A E H Z Y A A R E ", "O U J F E K C W Z K C S J A O A R C E A K R H L I ", "F I W G U G N N L M U S O Q H H O W M A F W O R I ", "C K Y K I C I Y A O A A Q W V E E K G N C Q V G C ", "F C W W M G P M Y W Z N M G M R J W M N G A V A F ", "I Q H S W X Y I Y L U U Z E A U C C A P Y Y K I E ", "Y U H I O O C O A E C S Q S O R E E H Z I K X O A ", "N B W Z O S Q B Q D N U J Q G J E F D K M D R E E ", "N M L A M I O Q V C I U Y Y E S Q M I A I Q K G D ", "Q D N P C V G Q A C W Q S A H W C W S L A N K K O ", "W A E A G A A S Q L J S I P M C E G X Q K I C S Y ", "H E O Y U P S M Q Y K S G M S E B K A Y A M V A A ", "Z N G N H Z A K V C V G A Y F A G L A K S E J E C ", "N J I Q V Q E K A W E U V W I C K R Z W I K M A O ", "L K N A T W G E H Q S G O M E G Y N O I A A S K W ", "E G N Z O U A A K E J M F S I H M M T K C S U N A ", "J K C C O U E L I B S A I L Q L Y H M M U K Y C R ", "K I E S A G F T Y W E K I G D I M U S M J C Y U G ", "A W A A O Z B W A L K W A A B Y T I E M W K G L U ", "G G C R I O U M P E Z T H L E I X A B A Z N Y U G ", "P Y U A S E S E A S A V U J G Q G N I E A K A U A ", "S W E Q V A A D U N G A J O U V Y Z Z Z S G R M X ", "N I O M E C M T N N F W C Z K P Y E I Y Y M M W C ", "W A Z U S A A V P G R L C H C U A G T L K Q S G J ", "E E G X K Z E G E O V K A N P M N O A N U E M Z O"};
    int k = 280;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 96: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 96: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test97() {
    vector<string> x = {"1 1 2 1 1 2 1 2 1 2 2 2 1 1 1 2 1 2 1 1 1 1 1 2 2 ", "1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 2 1 ", "1 1 1 2 1 1 2 1 2 1 1 1 1 1 2 2 2 2 1 1 1 1 1 2 2 ", "1 1 2 2 1 1 1 2 2 2 1 2 2 1 2 2 2 2 1 1 1 1 1 1 1 ", "1 1 1 2 1 1 1 2 2 1 1 1 2 2 2 2 1 1 1 2 1 1 1 2 1 ", "1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 ", "1 1 2 1 1 2 1 1 2 1 2 1 1 1 1 1 1 1 2 1 2 1 2 1 1 ", "1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 2 2 1 ", "1 1 1 1 1 2 1 1 1 1 1 2 1 2 1 1 1 1 1 1 2 1 2 1 2 ", "1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 2 1 2 2 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 ", "1 2 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 ", "1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 2 ", "2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 2 1 1 1 2 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 2 1 1 2 1 2 2 1 1 2 ", "1 1 2 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 2 1 2 1 1 1 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 ", "1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 ", "1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 ", "1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 1 2 2 2 1 1 1 1 2 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 ", "1 1 1 1 2 1 2 1 1 1 2 1 1 2 2 1 2 1 1 1 2 1 1 1 1 ", "2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 2 2 ", "1 2 1 2 1 2 2 1 1 1 1 1 2 1 2 2 1 1 1 1 1 1 1 1 2 ", "1 1 2 1 2 2 2 2 2 2 1 1 1 2 2 1 1 2 1 2 1 1 1 1 2 ", "2 1 1 1 1 1 1 2 2 1 1 1 1 1 2 1 1 2 2 1 2 1 2 2 1 ", "1 1 1 1 1 1 2 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 2 1 ", "2 2 1 1 1 1 1 2 1 2 1 1 1 1 2 1 1 2 1 1 1 2 1 1 1 ", "1 2 1 1 2 1 1 2 2 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 2 ", "2 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 2 2 1 1 1 2 1 1 1 ", "1 2 1 1 1 1 2 1 2 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 ", "1 1 1 1 1 2 2 1 2 1 1 1 1 1 2 1 2 1 1 1 1 2 1 1 1 ", "2 1 1 2 1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 2 1 1 1 1 1 ", "2 2 2 1 1 1 2 1 2 1 1 1 2 1 1 1 1 1 2 1 2 2 1 1 1 ", "1 1 2 1 1 2 1 2 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "2 1 1 1 1 2 2 1 1 2 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 1 2 1 2 1 1 1 1 2 1 1 1 1 1 1 2 2 1 ", "1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 2 1 2 1 2 ", "2 1 1 1 2 1 1 1 1 1 1 2 1 1 2 1 1 1 1 2 2 2 1 1 2 ", "2 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 ", "1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 2 ", "1 1 2 1 1 1 2 1 1 1 1 1 2 1 2 1 1 1 1 2 1 2 1 2 1 ", "1 1 2 1 1 1 1 2 2 1 1 1 1 1 2 1 1 2 1 1 2 1 1 1 1 ", "1 2 2 1 1 2 1 1 1 1 1 2 1 1 1 2 1 2 1 1 2 1 1 1 2 ", "2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 ", "1 1 1 2 1 1 2 2 1 2 2 1 2 1 2 1 1 1 2 1 1 2 1 1 2 ", "2 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 2"};
    vector<string> y = {"2 1 2 1 1 2 1 1 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 ", "1 2 1 1 2 2 2 1 1 2 1 2 1 2 2 1 1 1 1 1 2 1 1 1 1 ", "1 1 1 1 1 2 1 1 1 1 2 2 1 1 1 1 2 1 1 1 2 1 2 1 1 ", "1 2 1 1 1 1 2 1 2 1 1 2 1 2 1 2 1 1 1 1 1 2 2 1 2 ", "1 1 2 2 1 1 1 1 1 1 1 1 1 2 2 1 1 2 2 1 2 1 1 1 2 ", "2 1 2 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 2 1 1 1 2 ", "1 2 2 2 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 2 2 2 ", "2 1 2 1 2 2 1 1 1 1 2 1 2 2 2 1 1 1 1 1 1 2 1 2 2 ", "2 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 2 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 2 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 2 1 2 2 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 1 1 2 1 1 ", "1 2 1 1 1 2 1 1 1 2 1 1 1 2 1 2 1 1 1 2 1 1 1 1 2 ", "1 2 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 ", "1 1 2 1 1 2 1 1 1 2 2 2 1 2 2 1 1 1 1 1 1 2 1 1 1 ", "1 1 1 1 2 1 2 1 2 1 2 1 2 2 1 1 1 1 1 1 1 1 2 1 1 ", "1 1 2 1 1 1 1 1 2 2 1 2 1 1 1 1 1 2 1 1 1 2 1 2 2 ", "2 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 ", "1 1 1 2 1 1 2 1 1 1 1 2 1 1 1 1 1 2 1 2 1 1 1 2 1 ", "1 2 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 2 ", "2 1 1 1 2 2 2 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 2 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 2 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 2 1 1 2 ", "1 2 1 1 1 1 1 1 1 2 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 ", "2 1 1 1 1 2 2 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 2 2 1 2 1 1 1 1 ", "1 2 1 2 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 2 1 1 2 ", "1 2 2 1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 2 ", "1 1 1 1 1 2 2 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 1 1 1 2 2 1 1 1 2 1 2 1 1 2 1 1 1 1 ", "1 2 2 2 2 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 1 1 1 2 2 2 1 2 1 1 1 1 2 1 1 1 2 2 ", "1 1 2 1 1 2 1 1 1 2 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 1 2 ", "1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 2 1 2 1 2 1 1 1 ", "1 1 1 1 1 2 2 1 1 1 2 1 1 2 1 1 1 1 2 2 1 1 1 1 1 ", "1 2 1 2 1 1 1 1 1 2 2 1 1 2 1 1 1 1 1 1 1 2 1 2 1 ", "1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 2 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 ", "1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 2 1 1 1 1 1 1 1 1 ", "2 2 1 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 ", "1 1 1 1 1 1 2 2 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 1 1 2 1 2 1 1 2 2 1 1 1 1 1 2 1 2 2 ", "1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 2 ", "1 2 1 1 2 1 1 2 2 1 1 2 1 1 1 1 2 1 1 1 1 2 1 1 1 ", "2 1 2 1 1 1 1 1 1 1 2 1 2 1 2 2 1 1 1 1 2 1 1 1 1 ", "1 1 1 2 2 1 2 2 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 2 1 ", "1 2 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 2 1"};
    vector<string> lengths = {"1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 ", "1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 2 2 1 1 2 1 2 1 1 ", "1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 2 1 ", "1 1 1 1 1 1 2 2 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 2 1 2 1 2 1 1 1 2 1 2 1 2 ", "2 2 1 1 2 2 1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 2 2 2 1 1 1 2 1 1 2 1 1 1 1 2 2 1 ", "1 2 2 1 2 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 ", "1 1 1 2 2 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 2 1 2 ", "1 1 1 2 1 2 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 ", "1 1 2 2 1 1 1 2 2 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 ", "1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 ", "1 2 1 1 1 1 1 2 1 2 1 1 2 1 1 1 2 1 2 1 1 1 1 1 1 ", "1 1 2 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 1 ", "2 2 2 2 1 1 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 2 1 1 1 2 1 2 1 2 1 1 1 1 1 1 1 1 2 1 1 ", "2 1 1 1 2 2 1 1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 2 2 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 1 2 2 ", "1 1 2 1 2 2 1 2 1 1 1 1 1 1 2 1 1 1 2 1 1 1 2 1 2 ", "2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 ", "2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 1 1 ", "1 1 1 1 1 1 1 1 1 1 2 2 1 1 2 1 1 1 1 2 1 1 2 2 2 ", "1 2 1 1 1 2 1 1 2 1 1 1 1 2 1 2 1 2 1 2 1 1 2 1 1 ", "1 2 1 1 1 1 1 1 1 1 2 2 1 1 2 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 2 1 2 2 2 1 1 1 2 1 2 1 2 1 2 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 2 1 1 1 1 1 1 ", "2 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 2 1 2 1 1 1 2 1 1 ", "1 2 1 1 1 2 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 ", "2 2 2 1 2 2 2 1 1 1 2 2 1 1 1 1 2 1 1 2 2 1 1 2 2 ", "1 1 1 1 1 1 1 2 2 2 1 1 1 2 1 1 1 2 1 1 1 1 1 1 2 ", "1 1 1 1 1 1 1 1 1 2 2 2 2 1 1 2 2 1 1 2 1 2 1 1 1 ", "1 1 1 2 2 1 2 1 1 1 1 2 1 1 2 2 1 2 1 1 1 1 2 1 2 ", "1 2 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 ", "1 2 2 1 1 1 2 1 1 1 1 2 1 2 2 1 2 1 1 1 1 1 2 2 1 ", "1 1 1 1 2 1 2 2 1 1 1 2 1 1 1 1 1 1 1 1 2 2 1 1 1 ", "1 2 1 2 2 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 ", "2 2 1 1 1 1 2 1 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 ", "2 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 2 2 1 1 ", "1 2 1 1 1 1 1 1 2 1 1 2 2 1 2 1 1 1 2 1 1 1 1 1 1 ", "1 1 1 2 2 1 1 1 1 1 2 1 1 2 1 1 2 1 1 1 2 1 1 1 1 ", "1 1 2 1 2 2 2 1 1 2 1 1 1 1 1 1 1 1 1 2 2 2 1 1 1 ", "1 1 2 1 1 1 2 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 1 1 ", "2 1 1 2 1 1 1 1 2 1 2 2 2 2 1 1 1 2 1 1 2 2 1 1 2 ", "1 1 2 1 2 1 1 2 1 2 2 1 1 2 2 1 1 1 1 1 1 1 1 2 2 ", "2 1 2 2 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 2 2 ", "1 1 2 1 1 2 1 1 1 1 1 1 1 2 2 1 2 1 1 1 1 1 1 2 1 ", "1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 2"};
    vector<string> names = {"B G W Q M M C A T A X S Q V O E Y I Q W P A D D G ", "G V E B E P S C E T U A M C C B W P W W D Y M Y I ", "I V K Q C N Z K U T E R H J E C K Y O K C G V Q T ", "N K Q U A M Q I C Q U C M Y I A I U M V I C I W R ", "A P E S M Q G A G Q Y A C W C J G E S M Q J G C S ", "A W F I Q C Q E W C A A C A R W Q C K J O M U O T ", "K Y M M I A E W C E D P N V Q G S U X U K A R E Q ", "A R A I M A M G G M K I C Q N K O R A V O Y C A Q ", "W O Y A W S Y A C F U C M C S T Q G X A H A M U E ", "K C U N P W S K G N A M C G M P Y A W A N H Y A Q ", "Y G H N T A D J Z W C Y K D F S F K Q Y A Q U M O ", "E Q W K M G H U W A C U K M S X U S M I S P Y B P ", "A Z E O U G W N K N N A K A K S E Y Y R O A U J J ", "Y V M R A A I O S C A F I X A S V Y N L R U K Y I ", "K E I A A O I Y G O I A U O N P G N Q U K R O H Z ", "G T A Q Z H O X F Q Y I B A N A C S G S I C M Z Y ", "B D S G G H I R B D I Q K W W S F R T A H Z B H H ", "I U F O L I C M E N U A Y N A Y M C C X O S C C K ", "T X S Y U K M S O O D Y A L V G Q Y A A K E A A V ", "I S E Z O O V S A P S A I E O G U L A W W A V S M ", "U P Y S S Y U M J O W C G O H Y W A C O J I W A K ", "W V S H A G K K D W G O M E Y Y P E W U K I C M H ", "C P P I I O C E U I A Y S A J Q C K F O P B Z M Q ", "P G U S I K H S X X O R N A C Y M S G G G B K Q K ", "E Y W W G Y W E U Z K O M V J L S M Q Y O N G S A ", "Y M I D G M F I X G H Q S E P A C A M H U W G C I ", "C B A N D N A O C I I S K H K C Z Q Q Z Z A M A Q ", "U X E W E J Y X C U Q A E Q S M L W G A D M Q F O ", "N X S E Y G D Y Z W D S A I Q I G Y F G J E G Y N ", "N M W I G W Q Q M O M E S E E A W C M E G M M Y F ", "A R G D P L G K B X J C E O Y L A O I I X P Y E O ", "Y T U V G J G R J Q A B E K B C B C B S A M J B U ", "C O I G G L U K B I C A B P M G P P W A H F U K K ", "U W L Q I N Q G W Y C F Y U Q L C J Q N H H U G Q ", "S E Z E F A E L F U I I Q O A I W A S Y Y A A C Y ", "E I M A B Q P N A U Y E Q T K L A C Y I I P C S I ", "C C A S E A P Q S K O Y C Y Z C U A X K L A G U K ", "W O K C A Q L A Z G Q N C M M Q S G K Y Z A Z K L ", "E R U N P O G X U N A C V U A W Y S Y E A R M M N ", "A K K E E I A W Y U S C E A T U M Z S F N D Y U U ", "Q I G U Z P Q E L K O B Y M Y K Y Y H K H A O H N ", "V Y I F J G W N U A H M O Y M A Q Y E P A C L C E ", "E I W U Y M U B C P G Q G R P C J M E G I T A M S ", "I M B I S H Q E I Y N C Y Y L A D Z E L A P S K O ", "A W U O Q T Y C Y O A A Y G Z I V B R W P A X W M ", "Q M C M K W I C F T S K E E I C K Y C S H K Q R D ", "F E U S A A C M G U M O W C L O Y A F Y Y I D I U ", "G A O A C T W G M E B I G Z W F N F Y Y Q A J E E ", "A J W I A U K W G Q O O Y Y G V L E Q M U T U S C ", "G Q M A W A D U Y O Y Z A A Q O E C S A C J I M D"};
    int k = 400;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 97: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 97: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test98() {
    vector<string> x = {"1 1 1 1 1 2 2 1 1 1 1 2 2 1 1 2 2 2 1 1 1 1 1 2 1 ", "1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 1 2 1 2 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 2 2 2 1 2 2 1 1 1 2 1 1 2 ", "1 2 1 1 2 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 ", "1 1 1 1 1 2 1 1 1 2 2 1 1 2 2 2 2 1 2 2 2 1 1 1 1 ", "1 2 1 1 1 1 1 2 1 2 1 2 1 1 1 2 2 1 1 1 1 2 1 1 2 ", "1 2 1 1 1 1 1 1 2 2 2 1 1 1 2 2 1 2 1 1 1 1 1 1 1 ", "1 2 1 1 2 2 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 ", "1 1 1 1 1 1 2 1 1 1 1 2 1 1 2 1 1 2 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 2 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 2 ", "1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 2 1 1 1 ", "1 2 2 2 2 2 1 1 1 2 1 1 2 2 1 1 1 1 2 1 2 1 1 1 1 ", "1 1 1 2 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 2 1 1 1 1 ", "1 1 1 1 1 2 1 2 1 1 1 2 2 1 2 2 1 1 2 1 1 2 2 1 1 ", "1 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 2 ", "2 2 1 1 1 1 1 1 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 2 ", "1 1 1 2 1 2 1 1 1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 ", "1 1 2 1 2 1 1 2 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 2 1 1 1 1 1 2 1 1 2 1 2 2 1 1 1 2 2 1 2 2 1 ", "1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 2 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 2 1 1 2 1 2 1 1 2 ", "1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 2 2 1 2 2 1 1 1 1 ", "1 1 1 2 2 1 2 2 1 2 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 ", "2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 2 1 1 2 1 1 ", "1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 2 2 1 2 1 2 ", "1 2 2 1 1 2 1 2 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 2 1 2 2 2 1 ", "1 1 1 1 1 1 2 1 1 2 2 2 1 1 1 1 2 1 1 1 1 1 2 1 1 ", "1 1 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 2 2 ", "2 2 1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 2 2 1 1 1 2 ", "2 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 2 1 2 2 1 2 2 ", "1 2 1 1 2 1 1 1 1 2 1 2 1 2 1 1 1 2 1 1 1 1 2 1 1 ", "1 1 2 1 2 1 1 1 1 2 1 2 1 2 2 1 1 1 1 1 1 2 1 1 1 ", "1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 ", "1 1 2 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 2 1 2 ", "1 1 2 2 1 2 1 1 2 1 2 1 1 1 1 1 1 2 2 1 1 1 2 2 1 ", "1 1 2 1 1 1 1 1 1 1 1 2 1 2 2 1 2 1 2 1 1 1 1 1 1 ", "1 2 1 1 2 1 1 2 2 1 2 1 1 1 2 1 1 2 1 1 1 1 1 1 2 ", "1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 2 1 1 2 2 2 2 1 1 1 ", "2 1 1 1 1 2 1 1 1 1 1 1 2 2 1 1 2 1 1 2 1 1 1 2 2 ", "2 1 1 2 1 1 2 1 1 1 1 2 1 1 1 2 1 2 1 1 1 1 2 1 1 ", "1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 ", "1 2 2 1 1 1 1 2 1 1 1 2 1 1 1 1 2 1 1 1 2 1 1 1 2 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 2 1 1 2 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 2 1 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 1 1 2 ", "2 1 1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 ", "2 2 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 2 1 1 2 1"};
    vector<string> y = {"1 1 1 1 1 1 2 1 2 1 1 2 2 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 1 2 2 1 1 ", "1 1 1 1 2 1 1 2 2 2 2 1 1 2 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 2 1 1 1 1 1 1 2 1 ", "2 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 2 2 2 1 ", "2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 2 2 1 1 1 1 1 ", "1 1 1 1 2 1 2 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 2 ", "1 1 1 1 1 1 2 2 1 2 2 2 1 1 2 2 1 1 2 1 1 2 1 1 1 ", "1 1 1 2 2 1 2 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 ", "1 1 1 1 1 1 2 1 1 1 2 2 1 1 1 1 2 1 1 1 1 2 1 1 2 ", "1 1 2 2 1 1 1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 2 2 ", "1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 2 1 2 2 2 1 1 2 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 2 1 2 1 2 1 1 2 1 1 1 2 1 2 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 2 ", "2 1 1 1 2 1 1 1 1 2 1 1 1 2 2 1 1 2 2 2 1 1 1 2 1 ", "1 1 1 1 1 2 1 1 1 2 1 1 1 1 2 2 2 2 1 1 1 1 1 1 2 ", "2 1 2 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 2 2 1 1 1 ", "1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 ", "2 2 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 ", "1 1 2 1 2 2 2 1 2 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 2 1 1 1 1 ", "2 1 1 2 1 1 1 1 1 1 2 1 2 2 1 1 1 2 1 2 2 2 2 1 1 ", "1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 ", "1 2 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 2 1 2 1 1 ", "1 2 2 1 1 1 2 1 2 2 1 1 1 2 1 1 1 2 1 2 1 1 1 1 1 ", "2 1 1 1 1 1 2 1 1 1 1 1 2 1 2 2 2 1 1 1 1 1 1 1 1 ", "1 1 1 2 2 1 1 1 1 1 2 1 1 1 2 1 2 1 1 1 1 1 1 2 1 ", "1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 2 2 2 2 1 2 1 ", "1 1 1 1 1 1 2 1 2 1 1 1 1 2 2 1 1 1 1 2 1 1 1 1 1 ", "1 2 2 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 2 2 2 1 1 1 ", "1 2 1 2 2 1 1 1 2 1 2 1 1 2 1 1 1 1 2 1 1 1 1 1 2 ", "1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 2 1 2 2 1 1 1 1 1 2 ", "1 1 1 1 1 2 1 1 2 1 1 2 2 1 2 2 1 1 1 1 1 1 1 2 1 ", "1 1 1 1 2 1 1 1 1 2 1 2 1 1 1 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 2 2 1 1 2 1 1 2 1 1 1 1 2 1 1 1 1 2 1 2 1 1 ", "1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 2 1 1 1 1 1 2 2 1 ", "1 1 1 1 1 2 1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 1 2 1 ", "2 1 1 1 1 1 2 2 1 1 1 1 1 2 1 1 2 1 2 2 1 1 1 1 2 ", "1 1 2 1 1 1 1 2 1 1 2 1 1 2 1 1 1 2 2 1 2 2 1 1 2 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 ", "1 1 2 1 1 2 1 1 2 2 1 1 2 2 1 2 1 2 2 1 2 1 1 1 2 ", "1 1 1 2 2 1 1 1 1 2 1 2 2 1 1 1 2 2 1 1 1 1 2 2 2 ", "1 1 1 2 1 1 2 1 1 2 1 1 2 1 2 1 1 1 2 1 1 1 1 1 2 ", "1 2 1 2 1 1 1 1 2 2 1 1 1 1 2 1 2 1 1 1 1 1 1 2 1 ", "2 1 2 1 2 1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 ", "2 1 1 1 1 1 1 2 1 2 2 1 1 1 1 1 1 2 2 1 2 1 2 1 1 ", "1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 ", "1 2 1 1 1 2 1 1 1 2 1 2 1 1 1 1 2 1 2 2 1 2 2 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 ", "1 2 2 2 1 1 1 1 2 1 1 1 2 1 2 1 1 1 1 2 2 1 1 1 1"};
    vector<string> lengths = {"2 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 2 ", "1 2 1 2 2 2 2 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 2 2 ", "2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 ", "1 2 1 1 1 2 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 2 1 2 1 1 1 1 2 1 1 1 1 2 1 1 2 1 1 ", "1 2 1 2 2 1 1 2 1 1 1 1 2 1 2 2 1 1 1 1 1 1 1 1 1 ", "2 1 1 2 1 1 1 1 1 2 1 2 2 1 1 2 1 1 1 1 1 2 1 1 1 ", "2 1 2 1 1 1 1 2 1 1 1 1 1 2 1 2 1 2 1 1 1 1 1 2 1 ", "1 2 2 1 1 2 1 1 2 1 2 1 2 1 1 2 1 1 1 1 1 2 2 1 1 ", "1 1 1 2 2 1 1 2 2 1 1 1 1 2 1 2 1 1 2 2 1 1 1 2 1 ", "1 1 1 1 1 2 2 1 1 2 1 1 1 1 1 2 1 2 1 2 1 1 1 1 2 ", "1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 2 1 1 2 2 1 1 1 1 1 ", "2 1 2 1 1 2 1 2 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 ", "1 2 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 ", "2 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 2 ", "2 1 1 2 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 ", "1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 ", "1 2 2 1 1 1 2 1 1 1 2 1 1 2 1 1 1 1 1 2 1 1 1 1 1 ", "1 2 1 2 2 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 ", "1 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 ", "2 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 2 ", "2 2 2 2 2 1 2 2 1 1 2 1 1 1 1 2 1 1 1 1 1 2 2 1 2 ", "2 1 1 1 1 1 1 2 1 1 1 2 2 2 2 1 1 1 1 1 1 2 2 1 1 ", "1 1 2 2 1 1 2 1 1 1 1 2 1 1 1 1 1 2 2 1 2 1 1 1 1 ", "1 2 1 1 2 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 ", "1 1 1 1 1 2 1 1 2 2 1 1 1 2 1 1 2 1 1 2 1 2 1 1 1 ", "1 1 1 1 2 2 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 2 1 1 1 ", "1 1 2 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 1 2 2 1 ", "1 1 1 1 1 1 2 2 1 2 2 1 1 2 1 1 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 2 2 1 1 1 1 1 1 1 1 1 2 2 ", "1 1 1 1 2 1 2 1 2 1 2 1 1 2 1 1 1 1 1 2 2 1 2 1 1 ", "2 2 1 1 1 1 1 1 1 1 1 2 2 2 1 2 2 1 1 1 2 2 1 1 2 ", "1 2 1 1 2 1 2 1 1 1 1 1 2 1 1 1 2 2 1 1 1 1 1 2 2 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 1 1 2 1 1 ", "2 2 1 1 1 1 1 1 1 2 1 2 1 1 1 2 2 1 1 1 1 1 1 1 1 ", "1 1 2 2 1 1 1 1 1 2 1 1 1 1 1 2 1 1 2 1 2 1 1 2 1 ", "2 1 1 1 1 1 1 1 1 2 2 1 1 1 2 2 1 1 1 2 1 2 1 2 1 ", "1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 2 2 1 1 1 ", "1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 ", "1 1 1 2 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 ", "1 1 2 2 1 1 1 1 1 1 1 1 2 1 1 1 2 1 2 2 1 1 1 1 1 ", "2 1 1 1 2 1 2 1 1 1 2 1 1 1 1 1 1 1 1 2 2 1 1 2 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 ", "2 1 1 1 1 1 2 1 1 1 1 2 2 1 2 1 1 1 1 1 1 2 2 1 2 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 2 1 1 1"};
    vector<string> names = {"A R Y F G O K N Q H K A E O M E C G Y A G E O G F ", "Z A J X G W Y C Y Y L T U D A N Y R Y G I Y O O I ", "G G A U A M G K D O O Y A G X K E Y T Y R O F O A ", "C Y A N J N A A C Y Y W E N O U K M A I C J S G G ", "W O I I R P I E S E I D H Q C P Y V R G C I W A A ", "M F N A U C W W I R U U Q A U Y O Y O A S Q N M K ", "G W G U Y E C E C N V S S B F V P G G A G W W Q M ", "G T W S W W A C N G G N A M J L A S D A A U I M I ", "C H W Q I C M M E Y I I I H H A I N C Q F Z E T A ", "C X C C O U G K N T U S S I C Y D M A U V Q T C Y ", "K C G Y H W K S L M O C C A F U Y U W C P Q L K S ", "L E K X U K P Q N C Q O T Y A Y J A W Q G U C R F ", "G A I S A A L M A Z S A F I S D I R T V A Z A O A ", "A V P Z Y C E S Q F U K A N K O K W G W I Z M C K ", "G V Z I X S K E K W A C E U U K U M K O F K I A I ", "A N A F R W M O A R V F G Q A J O Q S U U W Y S J ", "B T U M N W O K J E C J N S H I A E S L X N U U C ", "V E M O S O M S Y G M O I E B S A Y O M A G K M S ", "M W Y N K C M Y G K A A K M C Y R O M P U Y C E O ", "E M K H I A W A W E V A Q W E L C E G S T O A E P ", "O T A Z K S N M N W N O R I U U N A S S S F W T C ", "I D G W M K C Y A C I D U U A N G Y V A A X H S P ", "Y Z O F K X A W S A U M B G P N K D K A J T C A Q ", "G R Y A S G C P Q M G A E A Q I I G P P A Z M O E ", "A K K Q Y F W J A O E A Y H M A M A U N Q G N D A ", "A P P U A H B A U K G E M V E P S G O U U N L N K ", "G Y Q Y M E F C A U Z P H Y Y W C Y E C A R O V M ", "N U K C A D M G Y G N Q C A Q E E A R N I W I N M ", "Y M E Q N C W A T K I Y C G Y B U Y A N W E V J V ", "A K A U W Y A T N Q L R O M S M O F J P K M X W K ", "D Y X Y W K Q A R Y O M M G W C Y G S U A M N D Q ", "D Z W S Y A O C B A W O N K Y E U A Q M C A M Y A ", "Q J Y Y I Y U A C O B Q I A G N Z C K R O W U J A ", "I K A Q N S C L E L E S O W G A R A R K A N E G Y ", "Q T G A C Y A Y A I U E A S E S G W I Y B H W G E ", "A O Q I A K A G O A I W Z O Z D M U E S Z O X G O ", "Y A I W E O K E S F W A G S Y C E Y M O E C A I J ", "L A B C Z D Q M M K R B Y I N U A A N A Y M A H A ", "Y C Q M Q Y I E U A M O Q S I G C B G I W W W P R ", "A A W E A J I V I C P N A E I I D E A D U Z O H M ", "U G N S A G X E V A A O P Y C C E T T Y T K S A W ", "O Y G I K E W N K A Y Q O M K W O I S A G U Q O P ", "D U S Y D H C U Y S E Y Q K Y I B E A K W U I Q I ", "M I I O M Q G Q M X C X B O T W O O S A G E G Y I ", "E W U K S I O E C G M W E W K A S Z Z T C D U A S ", "A J C W Y W Y O O I E G E C W E A A A K Z A X W E ", "C A J G B W A C Q A U T C Y E N X W A T N W G U K ", "S O C G C G O A S A I A O P T F S A Y W H K Q J Y ", "Y Q G R G M F G F E A M G C D U M P A B Y S Q K Y ", "O S W O H Q V J K C A I Y O S D S Q G F I A Q N P"};
    int k = 426;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "B", "B", "B", "B", "B", "B", "B", "B", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "D", "D", "D", "D", "D", "D", "D", "D", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "H", "H", "H", "H", "H", "H", "H", "H", "H", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "L", "L", "L", "L", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S"};
    if(result == expected) {
        cout << "Test Case 98: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 98: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test99() {
    vector<string> x = {"1 2 1 1 1 2 1 1 1 1 1 1 2 1 2 1 1 1 1 2 1 1 1 2 1 ", "1 1 1 2 1 2 2 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 2 1 1 2 2 1 2 1 1 1 2 2 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 1 2 2 2 ", "2 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 2 1 2 2 2 1 1 2 1 ", "1 1 1 1 1 2 1 2 2 2 1 1 1 2 1 1 1 1 2 1 2 2 1 1 2 ", "1 1 2 1 2 1 2 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 ", "1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 2 1 1 2 2 ", "1 1 1 1 1 2 2 2 1 2 2 1 1 1 1 2 1 1 1 1 1 1 1 2 1 ", "1 1 2 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 ", "1 1 2 1 1 1 2 1 2 1 1 1 1 2 1 1 2 1 1 1 2 1 1 2 2 ", "1 1 2 1 1 1 2 1 1 2 1 1 2 1 1 1 1 2 2 2 1 1 1 1 1 ", "1 1 2 2 1 1 1 1 1 2 1 1 2 1 2 1 2 1 2 2 1 1 1 1 1 ", "2 1 1 1 1 1 1 2 2 1 1 2 2 1 1 2 1 2 1 1 1 1 1 1 1 ", "1 1 2 2 1 1 2 1 2 1 1 1 2 2 1 1 1 1 2 1 2 1 1 1 1 ", "2 1 1 1 2 1 1 1 1 1 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 2 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 ", "1 1 2 1 1 2 1 2 1 1 1 2 1 2 1 2 2 1 1 1 2 1 2 2 1 ", "1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 1 2 2 2 2 1 ", "1 1 1 2 1 2 1 2 1 2 1 1 1 1 2 2 1 2 1 2 1 2 2 1 2 ", "2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 ", "1 1 1 1 2 1 1 2 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 ", "2 1 2 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 ", "1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 ", "2 1 1 1 2 1 1 2 1 2 1 1 1 2 1 1 2 2 1 2 1 1 1 1 2 ", "1 1 2 2 1 2 1 1 1 1 1 1 2 1 2 1 1 2 1 2 1 1 2 2 1 ", "2 2 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 ", "1 1 1 2 2 1 2 1 2 1 2 1 1 1 1 1 1 2 1 1 2 1 2 2 1 ", "2 2 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 ", "1 1 2 1 1 1 1 1 1 2 1 1 1 2 1 1 2 1 1 1 2 1 2 1 1 ", "1 1 2 1 1 1 1 1 1 2 1 1 2 2 1 2 2 1 2 1 1 1 1 1 1 ", "2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 2 1 ", "1 1 1 1 1 1 2 1 1 2 1 1 2 1 2 1 1 1 1 1 1 2 2 1 1 ", "2 1 1 2 2 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 ", "2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 2 1 1 1 2 2 1 ", "1 1 1 1 1 2 2 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 ", "1 2 1 1 1 1 1 1 2 1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 1 ", "1 2 1 1 2 1 1 1 2 2 1 1 2 2 2 1 1 1 1 1 2 2 2 1 1 ", "1 1 1 1 2 1 2 1 2 1 2 1 1 2 2 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 ", "1 1 1 1 1 2 1 1 2 1 2 1 2 1 1 1 1 2 2 1 1 1 1 1 1 ", "2 1 1 2 1 1 2 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 1 1 1 1 2 1 2 2 2 2 1 2 1 2 1 1 1 1 1 1 ", "2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 ", "1 1 1 1 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 2 1 1 1 1 2 ", "1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 ", "2 1 1 1 1 1 1 2 1 1 2 1 2 1 1 1 1 2 2 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 2 1 1 1 2 2"};
    vector<string> y = {"1 1 1 2 2 2 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 2 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 ", "2 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 2 1 1 2 1 2 1 1 1 2 1 2 1 2 1 1 1 1 2 1 ", "1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 2 1 2 1 1 1 2 1 1 1 2 1 1 1 2 1 2 1 ", "1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 2 ", "1 1 1 2 2 1 2 1 1 1 1 1 1 1 2 1 1 1 2 1 2 1 2 2 1 ", "1 1 1 1 1 1 1 1 1 2 2 2 1 1 1 1 1 2 1 1 1 1 1 2 1 ", "1 2 1 1 2 1 1 1 1 1 1 2 2 1 1 1 2 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 2 1 ", "1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 ", "2 2 1 1 1 1 2 1 1 2 2 2 1 1 1 1 1 1 2 2 1 1 2 1 1 ", "1 2 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 2 1 1 1 1 2 1 2 ", "1 1 1 1 1 2 2 2 1 1 2 1 1 2 2 1 2 1 1 1 1 2 2 1 1 ", "1 1 1 2 1 1 1 2 2 1 1 1 2 1 1 1 2 1 2 1 1 1 1 1 1 ", "1 1 2 2 1 1 1 1 2 1 1 2 1 1 2 1 1 1 1 1 2 1 2 1 1 ", "2 1 1 1 1 1 1 1 1 2 1 2 2 2 1 2 1 1 2 1 2 2 1 1 1 ", "1 2 1 1 1 2 1 1 1 1 1 1 2 1 1 1 2 2 2 1 1 1 2 2 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 2 1 1 1 1 1 ", "1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 2 1 ", "1 1 2 2 1 1 1 1 2 2 1 2 1 1 1 1 1 2 1 1 1 1 2 1 1 ", "2 1 2 1 2 1 1 1 2 1 1 1 2 2 1 2 1 1 2 1 1 2 2 1 1 ", "2 1 1 1 1 1 1 2 1 1 1 2 1 2 1 1 1 2 2 1 1 1 2 1 1 ", "1 2 2 2 1 1 2 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 ", "2 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 ", "2 1 1 2 1 1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 1 2 2 2 ", "2 1 1 1 1 1 1 1 2 2 1 1 1 2 1 2 1 1 2 1 2 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 2 1 1 1 1 1 1 1 1 ", "2 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 2 1 ", "1 1 2 1 1 2 1 1 2 1 1 2 1 1 1 1 1 1 1 2 1 1 2 1 2 ", "1 1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 2 ", "1 2 2 2 2 1 1 1 1 1 1 1 2 1 1 1 1 2 2 1 1 1 1 1 1 ", "2 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "2 1 2 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 2 2 1 2 1 1 ", "1 1 1 1 1 2 1 1 2 2 2 1 2 1 1 1 1 1 2 1 1 1 2 2 1 ", "1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 1 2 2 2 1 1 1 1 1 1 ", "1 1 2 1 1 2 2 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 2 1 1 2 1 2 2 ", "1 2 2 1 1 1 1 1 1 2 2 1 2 1 1 1 1 2 1 1 1 1 2 2 1 ", "1 1 1 2 2 1 1 2 1 1 2 2 1 1 2 1 1 1 1 1 1 1 1 2 1 ", "1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 2 2 1 1 1 2 2 1 1 ", "1 1 1 2 1 2 2 2 1 1 1 1 2 1 1 2 1 1 2 2 1 1 1 1 1 ", "1 1 1 2 2 1 1 1 1 2 1 2 1 1 1 1 1 1 2 2 1 1 1 1 1 ", "1 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 2 1 2 2 1 1 1 1 2 1 1 2 1 2 1 1 1 ", "1 1 1 1 1 1 2 2 1 1 1 2 2 2 1 2 1 2 1 1 1 1 1 1 2 ", "2 1 2 1 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 2 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 2 1 1 2 1 1 1 ", "2 2 2 1 2 1 2 1 1 1 2 1 1 1 1 2 2 1 2 1 1 1 1 1 2 ", "2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 2 1 1 1 2 ", "2 2 2 1 1 1 2 2 1 1 1 2 1 1 1 2 1 1 1 1 2 1 1 1 1 ", "1 1 2 1 1 1 1 2 1 1 1 1 2 1 1 2 1 1 2 1 1 1 1 1 1 ", "1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 2 ", "1 1 2 2 1 1 1 1 1 2 1 2 1 2 1 1 1 2 2 1 2 1 2 2 1 ", "1 1 2 1 1 2 2 1 1 1 1 1 1 1 2 2 1 1 1 2 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 1 ", "1 1 1 1 1 1 2 1 2 2 1 1 2 1 1 1 1 2 2 2 1 1 1 1 1 ", "2 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 2 2 1 1 1 1 2 1 1 2 ", "1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 2 1 1 1 2 1 2 1 1 ", "1 1 1 1 1 1 1 1 2 2 1 1 1 1 2 2 1 1 1 2 1 1 1 1 1 ", "2 1 1 1 1 1 2 1 1 1 1 2 1 1 2 2 1 1 2 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 2 2 1 1 1 1 1 ", "2 2 2 1 1 1 1 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 2 2 ", "1 2 2 1 1 1 1 1 1 1 1 2 1 1 1 2 2 2 2 2 1 1 1 1 1 ", "1 2 2 1 1 1 2 1 2 1 2 2 1 1 2 1 1 1 2 1 1 1 2 1 1 ", "1 2 1 1 1 1 1 2 2 1 1 2 2 1 1 1 1 1 1 1 2 1 1 1 2 ", "2 1 1 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 2 1 ", "1 2 1 1 1 2 1 1 1 2 1 1 2 2 1 2 1 1 2 2 2 2 1 2 1 ", "2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 2 ", "1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 2 2 1 1 ", "1 1 1 1 1 1 1 2 2 1 1 2 1 1 1 2 1 1 1 1 1 1 1 2 1 ", "1 1 2 1 1 1 1 1 1 1 1 2 1 2 1 2 2 2 2 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 2 2 1 1 2 1 1 ", "1 1 2 2 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 1 1 2 1 1 2 ", "2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 ", "1 2 2 1 1 1 1 1 2 2 2 2 1 1 2 2 1 1 1 1 2 1 2 1 1 ", "1 2 1 2 1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 1 2 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 1 1 1 1 1 ", "1 2 1 2 2 1 1 1 2 2 1 1 1 2 1 1 1 2 1 1 1 2 1 1 1 ", "1 2 1 1 2 1 2 2 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 2 1 2 1 2 2 1 1 1 1 2 1 2 1 1 1 2 1 2 1 1 2 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 2 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 2 2 1 2 2 2 1 2 1 1 1 1 1 ", "1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 2 1 2 1 1 1 1 ", "1 1 1 2 1 1 1 1 1 1 2 1 2 1 2 2 1 1 1 1 1 2 2 1 1 ", "1 1 1 2 1 2 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 2 2 1 2 1 1 2 1 1 1 1 1 2 1 1 1 1 1 ", "1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 ", "1 1 1 1 1 1 2 1 1 1 2 2 2 2 1 2 1 1 1 2 2 1 1 1 1 ", "1 1 2 1 2 1 1 2 1 1 2 2 1 2 1 1 2 1 1 2 1 1 1 1 2 ", "2 1 1 2 1 1 1 2 1 1 2 2 1 1 1 1 2 2 1 1 2 1 1 2 1 ", "1 1 1 1 1 2 1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 2 1 1 ", "1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 2 1 2 1 ", "2 1 1 1 1 1 1 2 1 1 1 1 1 1 2 2 2 1 1 1 1 2 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 2 2 1 1 2 2 1 1 2 1 1 2 1"};
    vector<string> names = {"D U I U I E G S A Q O Y C V S Q W X A J W A E M W ", "Y U N L C U C U Z U G N W M Y X X M A O C U J O E ", "A I A K X H J O N J G O E U N Q A H N Y H J G G K ", "C B F C W E Q G D G A E T K Y Y K D F E E W U E K ", "K M Q A E B A G M I W O C B C G A Q C N W K N A W ", "I E U E G T T O P M W G M G A O Q S F M S Q Q U E ", "A Q A A A M A A H P A K U X D W E X T H Q K C S E ", "A G S I G O Y I M S A V W R W G K B W W I D X S A ", "W N K A A V Q Z X S G G W W B P K H K Y C Q M F Q ", "A A U Q G Q E I D L N A O A E S O W N U A R P M T ", "A I B M G A W O E Y C T A U M A H M I Q K H K A N ", "U Q Y K W O I W S I W H I Z E V O I U Q K K K G Q ", "S U A A U F W T W A D A Q Q B Y W U D A G N Q N U ", "A X B I P L Y Z W A M Y A A Y S A P O K I Q O G N ", "K K F U C A Q C M C W M M O D I A Q A K O Z A C Y ", "E U Q Y Q G A I U G F Z J O S U M O C G K N O K A ", "B E Y C Y U G R Z G M T G D C D Q S N Y Q W F O E ", "H A V E M G R W A I Y C E W T B X D Q W K Q O C K ", "S G W A U B I A C U O Y M S I K D E E A A C G A R ", "H S J T P Q Q Y Y Y V Y R P W U F G K K D M U Y M ", "A M N G O R Q Q Y A Q E L S M N S A M G B A U E A ", "M M S B A R H A Y E X M S G L Y V I C O U E Y F C ", "W Y S C I Q R D K I X U G Z I Y Q A X S U H N Y O ", "I U D X A J W O E K C W O A C U P E A S C A V N S ", "F H E U U S G T O A B D K E A A N Q A W D T A A U ", "Z S C A Y A W A Y W E S W C I Z I E Y B W A Y K S ", "U C A V Q S E O O P Q I A W R M T E M K C M K I M ", "A I J W D K E Q Z M P U A O E S R W G G Q I O E M ", "Q B Q Q W L Y E D J D T H A P I U A K C C S X X Q ", "V S A A M F Q E G U E I K L M A I Z N Z B R P E A ", "Y U A A I K C E E L R M Q J W O F Y E F W V C S A ", "K B S A K V D M O K G G M O G X E Q I S M W Z W X ", "W O V X G B T C W G Z W G A Q U K C M C Q I M Q I ", "I Q Y I R M K Q S K S C E U N E A I K A H Q C L B ", "A Q C F C O M Q Q D W G E Z C Y C H O G K E E I Y ", "A E N A P G A K O P O Q M N O X F G W K A U C G P ", "K G S A G G V M K K L U K A C K G Q C A W Q P Q Q ", "U K W Y E C M I Y S V S N J N B A Y U F L A K T Y ", "P M M S U Y U U O A E L A Y Q U J A G W A W M G A ", "M W N M A I B J O Y E H F U W V Q A W A Q E T M C ", "W F M N U F M A C Y Y S I Q A E A G B C J F A A K ", "H I W A G G C U O N E M A P L P G X K E Q N Q M C ", "K A D E Z P E A C B F A U Y O X A Q M S W L A K I ", "E S Y Y R G I K G K Q I Q A G I Y D N M X K Q A A ", "Q T Y G T Y A Y C H O G E Y U E F A Y A E T X Y S ", "M N E Y J T M Q M S O A O U Q W O J D B T D O G O ", "Y A G K A K T S A O Q C Q Q I M T J W L K S U U K ", "I O I I H I M I Q R A W A A V K Q A Q G S I C Q N ", "E A A U E E H S Q A A Y L U G W R O H O Y X A H I ", "S Y C Y K S G G I H E Y F A A D G E I Q K I E H I"};
    int k = 500;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "F", "F", "F", "F", "F", "F", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "L", "L", "L", "L", "L", "L", "L", "L", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "R", "R", "R", "R", "R", "R", "R", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "V", "V", "V", "V", "V", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W"};
    if(result == expected) {
        cout << "Test Case 99: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 99: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test100() {
    vector<string> x = {"1 1 1 2 2 2 2 2 1 2 1 1 1 2 1 2 1 1 1 1 1 1 2 1 1 ", "1 2 1 1 1 1 1 1 1 2 2 1 2 1 1 1 1 1 2 2 1 2 2 1 1 ", "2 1 1 2 2 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 2 1 2 1 ", "1 2 1 1 1 2 1 1 1 1 2 2 2 2 1 1 1 1 1 1 1 1 2 2 1 ", "1 1 1 2 1 2 1 1 2 1 2 1 2 1 2 1 1 1 1 1 2 2 1 2 2 ", "1 1 1 1 1 1 2 1 1 2 1 2 2 2 1 1 2 1 2 1 2 1 1 1 1 ", "1 1 2 1 1 1 1 1 2 2 2 1 1 1 1 2 1 1 1 1 1 2 1 1 1 ", "2 1 1 2 2 1 2 1 1 1 2 1 2 1 1 1 1 2 1 1 2 1 1 1 1 ", "1 1 1 2 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 ", "2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 2 1 2 1 ", "1 1 2 2 1 1 1 1 1 2 2 1 2 1 1 1 1 2 1 2 1 1 2 1 1 ", "2 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 2 2 1 1 1 2 1 1 1 ", "2 1 2 1 1 2 2 2 2 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 2 ", "1 2 1 2 2 1 2 2 1 2 2 2 1 1 1 1 1 1 1 1 1 1 1 2 2 ", "2 2 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 2 1 1 2 1 1 1 2 ", "1 1 1 1 2 1 2 1 1 2 1 1 2 1 1 2 2 2 1 1 2 1 2 1 1 ", "1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 2 1 2 1 1 1 1 1 2 ", "2 1 1 1 1 1 1 2 1 1 1 2 1 1 1 2 1 1 2 1 1 1 2 2 1 ", "2 1 2 1 2 1 1 2 2 1 2 1 1 2 1 1 1 1 2 1 1 1 2 1 2 ", "1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 2 2 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 2 1 1 1 1 1 1 ", "2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 ", "1 2 1 2 1 1 2 1 1 1 2 1 1 1 1 1 1 1 2 1 1 2 1 2 2 ", "1 1 2 1 1 1 2 2 1 2 1 1 1 2 1 1 1 1 1 2 2 1 1 2 1 ", "1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 2 1 1 ", "1 1 1 2 1 1 1 2 1 1 1 2 1 2 1 1 1 1 2 1 2 2 1 1 1 ", "2 1 1 2 1 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 2 1 1 1 1 ", "2 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 2 1 1 1 2 1 1 1 ", "2 1 1 2 1 2 1 1 2 1 2 1 1 1 2 1 2 1 2 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 2 1 2 1 1 1 2 ", "2 1 1 1 1 2 1 2 2 1 2 1 2 1 2 2 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 2 1 2 2 1 1 ", "1 2 2 1 1 1 2 1 2 1 1 1 2 2 2 1 1 1 2 2 1 1 1 1 1 ", "2 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 2 2 2 1 1 1 1 1 ", "1 2 1 1 1 1 1 1 2 1 2 1 1 1 2 1 1 1 2 1 1 1 1 2 1 ", "1 2 1 1 2 1 2 1 1 2 1 1 2 1 2 1 1 2 2 2 1 2 2 1 1 ", "1 1 2 1 1 1 2 1 2 1 1 1 1 1 1 1 2 2 1 1 1 2 1 1 1 ", "1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 2 2 1 1 ", "1 2 1 1 2 1 1 1 1 2 2 2 1 1 2 1 1 1 2 2 1 1 2 1 1 ", "1 1 1 1 1 2 2 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 ", "2 1 1 1 2 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 2 1 2 2 ", "1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 2 1 2 2 ", "1 1 2 1 1 2 1 1 1 1 2 1 2 1 1 2 1 1 1 2 1 2 1 1 1 ", "2 1 1 1 1 1 2 2 2 2 1 2 1 1 2 1 1 1 2 2 2 2 2 2 1 ", "1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 ", "1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 2 1 2 2 1 1 1 1 1 1 ", "1 1 2 1 1 2 1 1 1 1 2 1 2 2 2 1 2 1 1 1 1 1 2 2 1 ", "1 1 2 1 1 1 2 1 2 1 1 1 2 1 2 2 1 1 1 2 1 1 1 1 1 ", "1 2 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 2 1"};
    vector<string> y = {"1 1 1 2 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 2 1 ", "1 1 2 1 1 1 2 2 1 1 1 1 1 1 2 1 1 1 2 1 2 1 1 2 2 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 ", "1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 ", "2 1 2 1 1 1 1 2 2 1 2 1 1 1 2 2 1 1 1 2 2 1 1 2 1 ", "1 1 1 2 2 1 1 2 1 1 1 2 2 1 1 1 1 2 1 2 1 2 1 1 2 ", "2 2 1 1 1 2 2 1 2 1 2 2 1 1 1 1 1 2 1 1 2 2 2 1 2 ", "1 2 1 2 1 1 2 1 1 1 2 1 2 2 1 1 1 2 2 1 1 1 1 1 1 ", "1 2 1 1 1 2 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 2 1 2 1 1 2 1 2 1 1 1 1 1 2 1 1 1 2 2 1 ", "1 1 2 1 2 1 1 1 2 2 2 1 1 1 1 1 2 1 1 1 1 1 1 2 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 2 1 1 2 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 ", "2 2 1 1 1 1 2 2 2 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 ", "1 1 2 1 1 2 1 1 2 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 ", "1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 ", "1 1 2 2 1 1 2 1 2 1 1 1 2 2 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 1 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 2 1 ", "2 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 ", "1 1 1 1 2 1 2 1 2 1 2 1 1 1 1 1 1 2 1 1 1 2 2 2 2 ", "1 2 1 2 1 2 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 1 2 ", "1 1 1 1 1 1 1 1 1 2 1 2 1 2 1 2 2 2 1 2 2 2 2 1 1 ", "1 1 1 1 1 1 2 2 1 1 1 1 1 1 2 1 2 1 2 2 1 2 1 1 2 ", "2 1 1 2 2 1 1 2 1 2 2 1 1 1 2 1 1 2 1 1 1 1 1 1 1 ", "2 2 1 2 1 2 1 2 2 1 1 1 2 2 1 1 1 1 1 1 1 2 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 2 ", "1 1 2 1 1 1 1 2 1 2 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 1 1 2 1 1 1 1 1 1 2 ", "2 2 1 1 1 1 1 1 1 2 1 1 2 1 1 2 1 2 1 2 1 1 1 2 1 ", "2 1 1 2 1 1 2 2 1 2 1 2 2 2 2 1 1 1 1 1 1 2 1 1 2 ", "1 1 2 1 1 1 1 2 1 1 2 2 1 1 1 2 1 1 2 1 2 1 1 1 2 ", "1 1 2 1 2 1 1 1 2 1 1 2 2 1 1 1 2 1 1 1 1 1 2 1 1 ", "1 1 1 2 1 2 2 1 2 1 1 1 1 1 1 2 1 2 2 1 2 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 2 1 1 1 2 1 1 2 1 2 ", "2 1 1 1 1 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 1 1 ", "2 1 1 1 1 1 2 1 1 1 2 1 2 1 2 1 1 2 1 1 1 1 1 2 1 ", "2 1 2 2 1 1 1 1 2 2 1 1 2 1 1 1 1 2 1 1 2 2 1 1 2 ", "1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 ", "1 1 1 1 2 1 1 1 1 1 2 1 2 1 2 1 1 1 1 2 1 2 1 1 1 ", "1 2 1 1 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "2 1 1 2 1 1 1 2 1 1 2 1 1 2 1 2 1 1 1 1 1 1 1 1 2 ", "1 1 2 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 ", "1 2 1 1 1 1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 ", "2 2 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 2 1 1 2 1 ", "2 1 1 1 2 1 1 2 1 1 1 2 1 2 1 1 2 1 1 1 1 2 1 1 2 ", "1 1 1 1 1 1 2 2 1 1 2 1 1 1 2 1 2 1 1 1 1 1 2 2 1 ", "1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 2 2 2"};
    vector<string> lengths = {"2 1 1 1 1 2 1 1 1 1 2 1 1 1 2 2 2 1 1 1 1 1 1 1 2 ", "1 2 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 2 2 ", "1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 2 1 ", "1 1 1 2 1 1 1 1 1 1 1 1 2 1 2 2 1 1 1 2 1 1 1 1 1 ", "2 1 1 1 2 1 2 1 1 2 1 2 1 2 1 2 2 1 1 1 1 1 1 2 1 ", "1 1 1 1 1 2 1 1 1 1 1 1 2 2 1 2 1 1 1 1 1 1 1 2 1 ", "1 1 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 ", "1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 2 1 ", "1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 1 2 1 1 2 1 2 1 1 ", "1 1 1 1 2 1 1 2 1 1 1 1 2 1 1 2 1 1 2 1 2 2 1 1 1 ", "1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 2 2 1 ", "1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 1 1 2 1 ", "2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 2 1 1 ", "1 2 1 1 2 2 1 2 1 1 2 1 1 1 1 1 2 1 1 1 1 2 1 1 1 ", "1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 2 1 1 2 1 2 1 2 1 ", "1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 2 2 2 1 2 2 2 1 ", "2 2 1 1 1 2 1 1 1 1 1 1 1 2 2 1 1 1 2 1 1 1 2 2 2 ", "1 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 2 2 ", "1 1 2 2 2 1 2 1 1 2 1 1 1 1 1 1 1 1 2 2 2 1 1 1 1 ", "2 1 1 1 2 1 1 1 2 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 2 ", "1 1 1 1 1 1 1 2 1 1 1 2 1 2 2 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 2 1 2 1 1 1 2 1 2 2 1 1 1 2 1 2 1 ", "1 2 1 1 2 1 1 1 2 2 2 2 2 2 2 1 1 1 2 1 2 1 1 1 2 ", "1 1 1 1 1 1 2 1 2 2 1 1 1 2 2 1 1 1 1 2 1 1 1 1 1 ", "1 1 2 1 1 1 1 1 1 2 2 2 2 1 2 1 1 2 1 1 1 1 1 1 2 ", "1 1 2 1 1 1 2 1 1 1 2 1 1 2 1 1 1 2 2 1 2 2 2 1 1 ", "2 1 1 2 1 1 1 1 1 1 2 2 1 2 2 1 1 1 2 2 2 1 1 1 2 ", "1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 ", "1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 2 2 1 2 1 1 1 1 1 1 ", "1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 2 2 ", "2 2 1 1 2 1 1 2 1 2 1 1 2 2 1 2 1 1 1 2 1 2 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 ", "1 1 1 1 2 1 1 1 1 2 1 2 1 1 1 1 2 1 1 2 1 1 2 1 1 ", "1 2 1 1 2 2 1 1 1 1 1 2 1 2 1 2 1 2 1 1 1 2 2 1 1 ", "1 2 1 1 2 2 1 1 2 1 1 2 1 1 2 2 1 1 1 2 1 2 1 1 1 ", "1 1 2 1 1 2 1 1 2 1 2 2 1 1 1 1 1 1 1 1 1 2 1 1 1 ", "1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 2 1 2 1 2 2 1 1 1 1 2 2 2 1 1 1 1 1 1 1 ", "2 1 1 1 1 1 2 2 1 1 1 1 1 1 2 1 1 1 2 1 1 2 1 1 1 ", "1 2 1 1 2 2 2 2 1 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 2 ", "1 2 2 1 2 2 1 1 1 2 1 1 2 1 1 2 1 1 2 2 2 1 1 1 2 ", "1 1 1 1 2 1 2 2 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 2 2 1 1 1 1 1 2 2 2 1 1 2 1 1 2 1 1 1 1 1 ", "1 1 1 1 1 1 1 2 1 1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 2 2 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 ", "1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 ", "2 1 1 2 1 2 1 2 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 2 2 ", "1 1 1 1 1 1 2 1 1 1 1 1 2 2 1 2 1 1 1 1 1 2 2 1 1 ", "1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 2"};
    vector<string> names = {"A K E Q S C Y F A A E Z O B T J A P I K A Z L B E ", "A J G G M G K I W R N N A I E Y N Z Q T Y Z T J N ", "Q Y Y Y A S A A G M V Q N H O Z M S Z P D A Q N S ", "T G A S M R Q Y N U Q A Z H T Y I A C Q K C P E N ", "D R G W N O T A N E Q N C G M U E M K M Z I K K O ", "S G W N S K A S O U H F E A A W S N P Q P A D R Y ", "C A E Y G K A H G S M N L Y C Q Y W E J M I F B A ", "A D S S M L W E C R C Q T S L O S W E Z M N R M I ", "S E O K O C A A C P M G I G V Z D J C A O O E N J ", "S S G C N G V A W C N O N H M A G K I K K A F W C ", "S D B Z M N B J P Y O N C Y H A H D A M W N I K I ", "C Q E S U Q S S S N D A W S V K B E G Q W K W Q Q ", "P K U J O M U V Y Y O M K M N Y K M I E I I I S A ", "I W U Q S T Y S T W G J A M S I Y I K N Z E C C Y ", "U I U A Z B K S O S G A P U Q L A H W Z S E C I L ", "A D G U C T W G L G V C Y A G K N A M M J A E E H ", "V A Y W O W S A O E J G A G M K Y C M Y I K C L W ", "I M N Y K A Q B Y C R O F S M F O U K G T G I X K ", "Q I A F Y C I J E B A V P E C S Y C J Q B U F L E ", "I V I K C M A V U D E O X X M I Y Y E G I Y W U A ", "R V Y N C Y L I M G R W L S C I L L C H I Y S G M ", "K S X U A M M Y O U A W Y S K K F G I T U Y M W J ", "B Y G A E C G Z W A M O A A X Y J X W E D I K S M ", "W M S Q K V W O U A H A M I S L K S C A E A L K A ", "P Z A H D I A N A A Y S Y S K Q Z O U G L U S A U ", "A W C K M I N C N I A S U R U O K N O Z Q W C N S ", "M T N Y Y F A G D Q D M C N W Y G N G J O U G A G ", "P O B C V E Z C U M S I Q O K Y U B S C K S Z M L ", "E S K G M A A I P A L A I C S K K E C M A K A U G ", "K E F L J S H M A K L I S I F S E S S I I W O T A ", "K S E W M N E A R M A W G U A O N M A K A C E W H ", "A J V Y N E O L L L L V A K U V U Q W D A Y Q C A ", "R O M W A N O W A Q Q W O W Z O Y K C M K W R B M ", "I S Z I S P A D S W O K Q C W K K M J D A U A K X ", "M E A V U R V B W Y O N O A Z N I Y Q O P E U A I ", "C B W S S V C W J D W C A A V E V G B X V I C C Q ", "A Q M A E Q V K R U A P U K H R A L W I Q I G A N ", "Q S T K S X T B A N G Q O Z E W E H G W U I K H M ", "F J U X A K G S X J A H V Q O Y Q I F T Z G I A C ", "M A S Y N O F X Y N L M E G B Y Y A U A B Z K P E ", "T A O F Y W E U S C U U G S C Y G G A O E E P Q Q ", "I I Q O X G G Q Q Y X W U O K O I J B O A P A W S ", "A T Q N Q Q U W T Q K E X A Q K D W C T I A N C Q ", "L E O A M A M M A O T H W I X M Y U G U J W E U W ", "K U A C G L G A C M I A X N A S X E E A E N A O W ", "S A G I R S U A D J G B V Y M A B R O I F O S W W ", "K Q G O A C N A Q I B Q K V U O B K U U J C S P U ", "M C M C N O S Q M M M E W C G K A A D O X O Q S E ", "I X V M U G B M U Z D U D G F O A Q M O W F W G A ", "G E X U G R E M Q C W S I D Q V H M I Y N E A A F"};
    int k = 828;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 100: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 100: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test101() {
    vector<string> x = {"2 1 1 1 2 1 1 1 1 1 1 1 2 2 2 1 1 1 2 1 2 1 2 1 1 ", "2 1 1 2 2 1 1 1 2 1 1 2 1 2 2 1 1 1 2 1 2 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 2 ", "1 1 1 2 1 1 2 2 2 1 2 2 2 1 1 1 2 1 2 1 2 1 1 1 1 ", "2 2 2 1 1 1 2 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 2 ", "1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 ", "1 1 1 1 1 1 2 2 2 1 1 2 1 2 1 1 1 1 1 1 1 2 1 1 2 ", "1 1 1 1 1 2 2 1 1 2 2 1 1 1 2 1 1 2 1 1 2 1 1 1 1 ", "1 2 1 1 1 1 1 2 1 1 1 2 1 2 1 1 1 1 2 2 1 1 2 1 2 ", "2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 1 2 ", "2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 ", "1 2 1 1 1 1 1 2 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 2 ", "2 2 1 1 2 2 2 1 1 1 1 2 1 1 1 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 2 1 2 ", "2 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 2 1 ", "2 1 1 1 1 2 2 1 2 1 1 1 2 1 2 2 1 1 1 2 2 1 1 1 1 ", "2 1 2 1 1 2 2 1 1 2 2 1 1 1 2 1 2 2 1 1 1 2 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 ", "1 1 2 1 1 1 1 1 1 1 1 2 1 2 2 1 1 1 1 1 1 1 2 1 1 ", "2 1 2 2 2 2 1 1 1 1 1 2 1 2 1 2 2 2 1 2 1 1 1 1 2 ", "1 2 1 1 1 1 1 1 2 1 2 1 1 1 2 2 1 1 1 2 1 1 2 1 1 ", "2 1 1 2 1 2 1 1 1 2 1 1 2 2 1 1 1 1 1 1 2 1 1 1 1 ", "1 2 1 1 2 2 1 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 2 2 1 ", "1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 2 ", "1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 2 1 ", "2 1 1 1 1 2 1 2 1 2 1 1 2 1 2 1 1 1 1 1 2 1 2 1 1 ", "1 1 1 2 1 2 1 1 1 2 2 2 2 1 1 1 1 1 1 1 1 2 1 2 1 ", "1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 2 2 1 2 1 1 1 2 1 ", "1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 2 1 1 1 1 2 1 1 1 ", "1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 ", "2 2 1 2 2 1 1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 ", "1 2 2 1 2 2 1 1 2 1 2 1 1 2 1 2 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 2 1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 2 1 2 1 1 1 2 1 ", "1 2 1 1 1 1 2 1 1 1 1 2 1 2 1 1 1 1 1 2 1 2 2 2 2 ", "1 1 2 1 1 1 1 2 2 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 ", "2 2 1 2 1 2 2 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 ", "2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 2 1 2 2 2 1 2 1 1 1 1 1 2 2 1 2 1 1 1 2 2 2 1 ", "1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 ", "2 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 ", "2 1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 ", "2 1 1 1 1 1 2 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 ", "2 2 1 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 1 1 2 1 ", "1 1 1 1 1 1 2 1 2 1 1 1 2 1 1 2 2 1 2 1 1 2 2 1 1"};
    vector<string> y = {"2 1 1 2 1 1 1 2 2 2 1 1 1 2 1 1 2 1 2 1 1 2 1 1 1 ", "2 1 1 2 1 1 2 1 1 2 2 2 1 2 1 2 1 2 1 1 2 1 1 1 1 ", "1 2 1 1 2 1 2 2 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 ", "1 2 2 1 2 1 1 2 1 1 1 1 2 2 1 1 2 2 1 1 1 1 1 1 1 ", "1 2 2 2 1 2 2 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 2 1 1 ", "1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 2 1 1 1 1 1 2 1 1 2 1 2 1 1 2 2 1 ", "1 2 2 2 2 2 1 1 1 1 1 1 2 1 2 1 2 2 1 1 1 2 1 1 1 ", "1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 ", "1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 1 ", "2 2 1 1 1 2 1 1 2 1 1 1 1 2 2 1 1 2 1 2 2 1 2 1 1 ", "2 1 1 1 1 2 1 1 1 1 2 1 2 1 1 1 1 1 1 2 1 1 1 1 1 ", "1 2 2 2 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 2 2 1 1 1 1 1 2 1 2 2 1 1 2 1 1 1 1 ", "1 1 1 1 2 1 1 2 1 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 ", "2 1 1 1 1 1 2 1 1 1 1 1 1 2 2 2 2 2 2 1 1 1 1 1 2 ", "1 2 2 1 1 1 1 1 2 2 1 1 2 2 2 1 1 1 1 1 1 1 2 1 2 ", "1 1 1 1 2 1 1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 ", "1 2 2 1 2 1 1 1 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 2 1 2 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 2 1 2 1 1 2 ", "1 2 2 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 2 ", "1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 2 2 1 1 1 1 1 1 ", "1 1 1 2 1 2 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 2 ", "2 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 2 1 2 1 1 1 2 1 1 ", "1 1 2 1 1 1 1 1 2 2 1 1 1 1 2 2 1 2 2 1 1 1 1 2 1 ", "1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 2 ", "1 2 1 1 1 2 2 1 1 2 1 1 2 1 1 2 1 2 1 1 1 1 2 1 1 ", "1 1 1 1 1 1 1 2 1 1 2 1 1 1 2 1 2 1 2 2 1 2 2 1 1 ", "1 1 1 1 2 2 1 1 2 2 2 1 1 1 2 2 2 1 1 1 1 2 1 2 2 ", "1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 ", "1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 2 1 1 ", "2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 2 ", "2 1 1 1 2 1 2 2 1 2 2 1 1 1 1 1 2 2 1 1 2 1 1 2 2 ", "1 2 2 1 1 1 1 1 1 1 1 2 1 2 2 2 1 1 1 2 1 1 1 2 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 2 1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 ", "1 2 1 1 1 2 1 1 1 2 1 1 2 1 1 1 1 1 2 1 1 2 1 1 1 ", "1 1 1 1 1 2 1 2 1 2 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 ", "2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 1 1 1 ", "1 1 2 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 2 ", "1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 2 1 1 ", "2 1 1 2 1 1 1 1 2 2 2 1 2 1 1 2 2 1 1 1 1 1 2 1 2 ", "1 1 1 2 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 ", "1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 2 1 ", "2 1 1 2 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 ", "1 1 1 2 1 1 1 2 2 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 2 1 1 1 1 1 1 1 ", "1 2 2 1 1 1 1 1 1 1 2 2 2 2 1 1 1 1 1 1 1 1 1 1 2 ", "1 1 1 1 1 2 2 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 2 1 1 ", "1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 2 1 1 1 1 1 1 1 2 ", "1 1 2 1 1 2 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 ", "2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 2 2 ", "1 2 1 1 1 1 1 1 2 2 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 2 2 1 1 1 1 1 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 2 ", "1 1 1 2 2 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 ", "2 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 ", "1 1 2 1 2 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 2 1 1 2 2 1 2 1 2 2 1 2 1 1 2 2 2 1 ", "2 1 1 1 1 2 2 1 1 1 1 1 1 1 1 2 2 2 2 1 1 1 2 1 1 ", "1 2 1 1 1 1 1 2 1 1 2 1 1 2 1 2 2 1 2 2 1 2 1 1 1 ", "1 2 2 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 2 2 1 2 2 2 1 2 1 1 2 1 1 1 2 ", "1 1 2 2 2 1 1 1 1 1 1 2 2 1 1 1 2 2 1 1 2 2 2 1 1 ", "1 1 1 1 1 1 1 2 2 1 2 1 2 2 1 1 1 1 2 1 2 1 2 1 1 ", "1 1 2 1 1 1 1 1 2 1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 ", "2 2 1 1 1 2 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 ", "2 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 2 1 1 2 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 2 2 1 1 1 ", "2 1 1 2 1 1 1 1 1 2 1 2 2 2 1 2 1 1 1 2 1 2 1 1 1 ", "2 1 1 1 1 1 2 1 1 1 1 1 2 2 1 2 1 2 1 1 1 1 1 2 1 ", "1 1 2 1 1 1 1 1 2 1 2 1 1 1 1 2 1 1 1 1 1 1 2 1 1 ", "1 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 2 ", "1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 2 1 1 2 1 1 1 ", "1 1 1 1 2 1 2 1 1 1 1 2 2 1 2 1 1 1 1 1 1 1 1 1 2 ", "2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 2 1 1 ", "2 1 1 2 1 1 2 1 2 2 1 2 1 1 2 2 1 1 1 1 1 2 2 1 1 ", "1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 ", "1 1 1 2 1 1 2 1 1 2 1 1 2 1 2 1 2 1 2 2 1 1 2 1 1 ", "1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 2 2 1 1 2 1 1 1 2 ", "2 1 2 1 1 2 2 1 1 1 2 1 2 1 1 1 2 1 1 1 1 1 2 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 2 1 2 1 1 2 1 1 2 1 1 1 1 1 ", "2 1 1 2 1 2 1 1 1 2 2 2 2 1 2 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 1 1 2 1 ", "2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 2 1 2 1 1 1 1 1 2 1 ", "1 2 1 1 1 2 1 1 1 2 2 1 2 1 2 2 1 1 2 1 2 1 1 2 1 ", "1 1 1 1 1 1 1 2 2 1 1 1 2 1 1 1 1 1 2 1 2 1 2 1 2 ", "1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 2 2 1 2 1 1 1 2 1 2 ", "1 1 2 1 2 1 1 1 1 1 1 2 1 2 2 1 1 2 1 1 1 1 1 1 1 ", "2 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 2 1 2 1 1 2 1 1 1 1 1 2 1 2 2 1 1 1 1 1 1 2 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 2 2 1 2 1 2 1 1 2 1 1 2 ", "2 1 1 2 1 1 1 1 1 1 2 1 1 2 1 2 1 2 1 1 1 2 2 1 1 ", "2 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 2 1 1 2 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 ", "1 1 1 2 2 1 1 2 1 2 1 2 1 1 1 2 2 1 1 2 1 2 2 1 1 ", "1 1 2 1 1 2 2 1 1 1 2 1 1 1 1 1 1 1 2 1 1 2 1 1 1"};
    vector<string> names = {"A I E A I Y X M L U J U F P U S R V R I R Q T C A ", "G O E D I U C H L Q E I N Y A Q A I H U G T W S M ", "C W Q U J U W F W I M O S B A U R A A S A M U E Y ", "Y L M A Y A A B N A S G K Q C I E G U E Z N C L I ", "A Q Q H U G B R U G Q Y J A K Y B O U S G A W Q R ", "C Y G W P C M Q Y R A Q E G G U C C I W Y Q A O C ", "C A A H L C Q E N Y D Z H U A T O E A Q F I G K M ", "I O P M T I I I Q R A K N Y A G N A N Q L Z C E E ", "H A E O W H G C A C A V W M O A Y J A U Y U A A D ", "W O Z Z A S D O N R A N U R I J G P O Z A J M N N ", "W C J J O Y E A D V Q J P A A G K U O P Y A G Y E ", "W S N K U K M R R C A Q K R X W P C C O G N S Q H ", "K W I U K T W Q B G C S Y W M M I Q W S W I L E J ", "E E B U Y Y M U A D P G Q A K Y A E Y F O C E R U ", "B I D O E N G E S Y M D A V U W F A W K E O L A V ", "I A A W A E Z K E O O C K C J U N A S V E U Z H W ", "Y K R O Q B U K B E L F W W B W Z N M I A T A V U ", "N M O T Y I E N Q S K Z Z S A D C C K E O O I C C ", "S U A U U P E A Y U C S U K Q Z M F A W N S A R I ", "C K N A O P U U G Y I E M C U O O L A U E C H G S ", "K J M Q A K I S I I G W U Z R W N C E A M M C O T ", "C K M B G U M K Q I I Y I B O N G K X B V J K R N ", "A E O S E A Q C Y H K A C S E A Y A A C Y A A V W ", "S A P I N W J E I G T Z E O N Q A S Y A X O C U K ", "M C S N N P X N T W S E C K C G K A I O W O Y F Z ", "E C K I K K W S K Q N Y I E A A A E H Z Y A A R E ", "O U J F E K C W Z K C S J A O A R C E A K R H L I ", "F I W G U G N N L M U S O Q H H O W M A F W O R I ", "C K Y K I C I Y A O A A Q W V E E K G N C Q V G C ", "F C W W M G P M Y W Z N M G M R J W M N G A V A F ", "I Q H S W X Y I Y L U U Z E A U C C A P Y Y K I E ", "Y U H I O O C O A E C S Q S O R E E H Z I K X O A ", "N B W Z O S Q B Q D N U J Q G J E F D K M D R E E ", "N M L A M I O Q V C I U Y Y E S Q M I A I Q K G D ", "Q D N P C V G Q A C W Q S A H W C W S L A N K K O ", "W A E A G A A S Q L J S I P M C E G X Q K I C S Y ", "H E O Y U P S M Q Y K S G M S E B K A Y A M V A A ", "Z N G N H Z A K V C V G A Y F A G L A K S E J E C ", "N J I Q V Q E K A W E U V W I C K R Z W I K M A O ", "L K N A T W G E H Q S G O M E G Y N O I A A S K W ", "E G N Z O U A A K E J M F S I H M M T K C S U N A ", "J K C C O U E L I B S A I L Q L Y H M M U K Y C R ", "K I E S A G F T Y W E K I G D I M U S M J C Y U G ", "A W A A O Z B W A L K W A A B Y T I E M W K G L U ", "G G C R I O U M P E Z T H L E I X A B A Z N Y U G ", "P Y U A S E S E A S A V U J G Q G N I E A K A U A ", "S W E Q V A A D U N G A J O U V Y Z Z Z S G R M X ", "N I O M E C M T N N F W C Z K P Y E I Y Y M M W C ", "W A Z U S A A V P G R L C H C U A G T L K Q S G J ", "E E G X K Z E G E O V K A N P M N O A N U E M Z O"};
    int k = 664;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "D", "D", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "F", "F", "F", "F", "G", "G", "G", "G", "G", "G", "G", "G", "H", "H", "H", "H", "H", "H", "H", "H", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "J", "J", "J", "J", "J", "J", "J", "K", "K", "K", "K", "K", "K", "K", "L", "L", "L", "L", "L", "L", "M", "M", "M", "M", "M", "M", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "P", "P", "Q", "Q", "Q", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "B", "B", "B", "B", "B", "B", "B", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "D", "D", "D", "D", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "F", "F", "F", "F", "F", "F", "F", "F", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "H", "H", "H", "H", "H", "H", "H", "H", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "J", "J", "J", "J", "J", "J", "J", "J", "J", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "L", "L", "L", "L", "L", "L", "L", "L", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "P", "P", "P", "P", "P", "P", "P", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "T", "T", "T", "T", "T", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "V", "V", "V", "V", "V", "V", "V", "V", "V", "V", "V", "V", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "X", "X", "X", "X", "X", "X", "X", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z"};
    if(result == expected) {
        cout << "Test Case 101: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 101: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test102() {
    vector<string> x = {"1 1 2 1 1 2 1 2 1 2 2 2 1 1 1 2 1 2 1 1 1 1 1 2 2 ", "1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 2 1 ", "1 1 1 2 1 1 2 1 2 1 1 1 1 1 2 2 2 2 1 1 1 1 1 2 2 ", "1 1 2 2 1 1 1 2 2 2 1 2 2 1 2 2 2 2 1 1 1 1 1 1 1 ", "1 1 1 2 1 1 1 2 2 1 1 1 2 2 2 2 1 1 1 2 1 1 1 2 1 ", "1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 ", "1 1 2 1 1 2 1 1 2 1 2 1 1 1 1 1 1 1 2 1 2 1 2 1 1 ", "1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 2 2 1 ", "1 1 1 1 1 2 1 1 1 1 1 2 1 2 1 1 1 1 1 1 2 1 2 1 2 ", "1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 2 1 2 2 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 ", "1 2 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 ", "1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 2 ", "2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 2 1 1 1 2 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 2 1 1 2 1 2 2 1 1 2 ", "1 1 2 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 2 1 2 1 1 1 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 ", "1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 ", "1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 ", "1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 1 2 2 2 1 1 1 1 2 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 ", "1 1 1 1 2 1 2 1 1 1 2 1 1 2 2 1 2 1 1 1 2 1 1 1 1 ", "2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 2 2 ", "1 2 1 2 1 2 2 1 1 1 1 1 2 1 2 2 1 1 1 1 1 1 1 1 2 ", "1 1 2 1 2 2 2 2 2 2 1 1 1 2 2 1 1 2 1 2 1 1 1 1 2 ", "2 1 1 1 1 1 1 2 2 1 1 1 1 1 2 1 1 2 2 1 2 1 2 2 1 ", "1 1 1 1 1 1 2 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 2 1 ", "2 2 1 1 1 1 1 2 1 2 1 1 1 1 2 1 1 2 1 1 1 2 1 1 1 ", "1 2 1 1 2 1 1 2 2 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 2 ", "2 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 2 2 1 1 1 2 1 1 1 ", "1 2 1 1 1 1 2 1 2 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 ", "1 1 1 1 1 2 2 1 2 1 1 1 1 1 2 1 2 1 1 1 1 2 1 1 1 ", "2 1 1 2 1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 2 1 1 1 1 1 ", "2 2 2 1 1 1 2 1 2 1 1 1 2 1 1 1 1 1 2 1 2 2 1 1 1 ", "1 1 2 1 1 2 1 2 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "2 1 1 1 1 2 2 1 1 2 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 1 2 1 2 1 1 1 1 2 1 1 1 1 1 1 2 2 1 ", "1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 2 1 2 1 2 ", "2 1 1 1 2 1 1 1 1 1 1 2 1 1 2 1 1 1 1 2 2 2 1 1 2 ", "2 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 ", "1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 2 ", "1 1 2 1 1 1 2 1 1 1 1 1 2 1 2 1 1 1 1 2 1 2 1 2 1 ", "1 1 2 1 1 1 1 2 2 1 1 1 1 1 2 1 1 2 1 1 2 1 1 1 1 ", "1 2 2 1 1 2 1 1 1 1 1 2 1 1 1 2 1 2 1 1 2 1 1 1 2 ", "2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 ", "1 1 1 2 1 1 2 2 1 2 2 1 2 1 2 1 1 1 2 1 1 2 1 1 2 ", "2 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 2"};
    vector<string> y = {"2 1 2 1 1 2 1 1 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 ", "1 2 1 1 2 2 2 1 1 2 1 2 1 2 2 1 1 1 1 1 2 1 1 1 1 ", "1 1 1 1 1 2 1 1 1 1 2 2 1 1 1 1 2 1 1 1 2 1 2 1 1 ", "1 2 1 1 1 1 2 1 2 1 1 2 1 2 1 2 1 1 1 1 1 2 2 1 2 ", "1 1 2 2 1 1 1 1 1 1 1 1 1 2 2 1 1 2 2 1 2 1 1 1 2 ", "2 1 2 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 2 1 1 1 2 ", "1 2 2 2 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 2 2 2 ", "2 1 2 1 2 2 1 1 1 1 2 1 2 2 2 1 1 1 1 1 1 2 1 2 2 ", "2 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 2 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 2 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 2 1 2 2 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 1 1 2 1 1 ", "1 2 1 1 1 2 1 1 1 2 1 1 1 2 1 2 1 1 1 2 1 1 1 1 2 ", "1 2 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 ", "1 1 2 1 1 2 1 1 1 2 2 2 1 2 2 1 1 1 1 1 1 2 1 1 1 ", "1 1 1 1 2 1 2 1 2 1 2 1 2 2 1 1 1 1 1 1 1 1 2 1 1 ", "1 1 2 1 1 1 1 1 2 2 1 2 1 1 1 1 1 2 1 1 1 2 1 2 2 ", "2 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 ", "1 1 1 2 1 1 2 1 1 1 1 2 1 1 1 1 1 2 1 2 1 1 1 2 1 ", "1 2 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 2 ", "2 1 1 1 2 2 2 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 2 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 2 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 2 1 1 2 ", "1 2 1 1 1 1 1 1 1 2 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 ", "2 1 1 1 1 2 2 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 2 2 1 2 1 1 1 1 ", "1 2 1 2 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 2 1 1 2 ", "1 2 2 1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 2 ", "1 1 1 1 1 2 2 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 1 1 1 2 2 1 1 1 2 1 2 1 1 2 1 1 1 1 ", "1 2 2 2 2 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 1 1 1 2 2 2 1 2 1 1 1 1 2 1 1 1 2 2 ", "1 1 2 1 1 2 1 1 1 2 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 1 2 ", "1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 2 1 2 1 2 1 1 1 ", "1 1 1 1 1 2 2 1 1 1 2 1 1 2 1 1 1 1 2 2 1 1 1 1 1 ", "1 2 1 2 1 1 1 1 1 2 2 1 1 2 1 1 1 1 1 1 1 2 1 2 1 ", "1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 2 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 ", "1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 2 1 1 1 1 1 1 1 1 ", "2 2 1 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 ", "1 1 1 1 1 1 2 2 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 1 1 2 1 2 1 1 2 2 1 1 1 1 1 2 1 2 2 ", "1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 2 ", "1 2 1 1 2 1 1 2 2 1 1 2 1 1 1 1 2 1 1 1 1 2 1 1 1 ", "2 1 2 1 1 1 1 1 1 1 2 1 2 1 2 2 1 1 1 1 2 1 1 1 1 ", "1 1 1 2 2 1 2 2 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 2 1 ", "1 2 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 2 1"};
    vector<string> lengths = {"1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 ", "1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 2 2 1 1 2 1 2 1 1 ", "1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 2 1 ", "1 1 1 1 1 1 2 2 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 2 1 2 1 2 1 1 1 2 1 2 1 2 ", "2 2 1 1 2 2 1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 2 2 2 1 1 1 2 1 1 2 1 1 1 1 2 2 1 ", "1 2 2 1 2 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 ", "1 1 1 2 2 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 2 1 2 ", "1 1 1 2 1 2 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 ", "1 1 2 2 1 1 1 2 2 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 ", "1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 ", "1 2 1 1 1 1 1 2 1 2 1 1 2 1 1 1 2 1 2 1 1 1 1 1 1 ", "1 1 2 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 1 ", "2 2 2 2 1 1 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 2 1 1 1 2 1 2 1 2 1 1 1 1 1 1 1 1 2 1 1 ", "2 1 1 1 2 2 1 1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 2 2 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 1 2 2 ", "1 1 2 1 2 2 1 2 1 1 1 1 1 1 2 1 1 1 2 1 1 1 2 1 2 ", "2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 ", "2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 1 1 ", "1 1 1 1 1 1 1 1 1 1 2 2 1 1 2 1 1 1 1 2 1 1 2 2 2 ", "1 2 1 1 1 2 1 1 2 1 1 1 1 2 1 2 1 2 1 2 1 1 2 1 1 ", "1 2 1 1 1 1 1 1 1 1 2 2 1 1 2 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 2 1 2 2 2 1 1 1 2 1 2 1 2 1 2 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 2 1 1 1 1 1 1 ", "2 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 2 1 2 1 1 1 2 1 1 ", "1 2 1 1 1 2 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 ", "2 2 2 1 2 2 2 1 1 1 2 2 1 1 1 1 2 1 1 2 2 1 1 2 2 ", "1 1 1 1 1 1 1 2 2 2 1 1 1 2 1 1 1 2 1 1 1 1 1 1 2 ", "1 1 1 1 1 1 1 1 1 2 2 2 2 1 1 2 2 1 1 2 1 2 1 1 1 ", "1 1 1 2 2 1 2 1 1 1 1 2 1 1 2 2 1 2 1 1 1 1 2 1 2 ", "1 2 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 ", "1 2 2 1 1 1 2 1 1 1 1 2 1 2 2 1 2 1 1 1 1 1 2 2 1 ", "1 1 1 1 2 1 2 2 1 1 1 2 1 1 1 1 1 1 1 1 2 2 1 1 1 ", "1 2 1 2 2 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 ", "2 2 1 1 1 1 2 1 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 ", "2 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 2 2 1 1 ", "1 2 1 1 1 1 1 1 2 1 1 2 2 1 2 1 1 1 2 1 1 1 1 1 1 ", "1 1 1 2 2 1 1 1 1 1 2 1 1 2 1 1 2 1 1 1 2 1 1 1 1 ", "1 1 2 1 2 2 2 1 1 2 1 1 1 1 1 1 1 1 1 2 2 2 1 1 1 ", "1 1 2 1 1 1 2 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 1 1 ", "2 1 1 2 1 1 1 1 2 1 2 2 2 2 1 1 1 2 1 1 2 2 1 1 2 ", "1 1 2 1 2 1 1 2 1 2 2 1 1 2 2 1 1 1 1 1 1 1 1 2 2 ", "2 1 2 2 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 2 2 ", "1 1 2 1 1 2 1 1 1 1 1 1 1 2 2 1 2 1 1 1 1 1 1 2 1 ", "1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 2"};
    vector<string> names = {"B G W Q M M C A T A X S Q V O E Y I Q W P A D D G ", "G V E B E P S C E T U A M C C B W P W W D Y M Y I ", "I V K Q C N Z K U T E R H J E C K Y O K C G V Q T ", "N K Q U A M Q I C Q U C M Y I A I U M V I C I W R ", "A P E S M Q G A G Q Y A C W C J G E S M Q J G C S ", "A W F I Q C Q E W C A A C A R W Q C K J O M U O T ", "K Y M M I A E W C E D P N V Q G S U X U K A R E Q ", "A R A I M A M G G M K I C Q N K O R A V O Y C A Q ", "W O Y A W S Y A C F U C M C S T Q G X A H A M U E ", "K C U N P W S K G N A M C G M P Y A W A N H Y A Q ", "Y G H N T A D J Z W C Y K D F S F K Q Y A Q U M O ", "E Q W K M G H U W A C U K M S X U S M I S P Y B P ", "A Z E O U G W N K N N A K A K S E Y Y R O A U J J ", "Y V M R A A I O S C A F I X A S V Y N L R U K Y I ", "K E I A A O I Y G O I A U O N P G N Q U K R O H Z ", "G T A Q Z H O X F Q Y I B A N A C S G S I C M Z Y ", "B D S G G H I R B D I Q K W W S F R T A H Z B H H ", "I U F O L I C M E N U A Y N A Y M C C X O S C C K ", "T X S Y U K M S O O D Y A L V G Q Y A A K E A A V ", "I S E Z O O V S A P S A I E O G U L A W W A V S M ", "U P Y S S Y U M J O W C G O H Y W A C O J I W A K ", "W V S H A G K K D W G O M E Y Y P E W U K I C M H ", "C P P I I O C E U I A Y S A J Q C K F O P B Z M Q ", "P G U S I K H S X X O R N A C Y M S G G G B K Q K ", "E Y W W G Y W E U Z K O M V J L S M Q Y O N G S A ", "Y M I D G M F I X G H Q S E P A C A M H U W G C I ", "C B A N D N A O C I I S K H K C Z Q Q Z Z A M A Q ", "U X E W E J Y X C U Q A E Q S M L W G A D M Q F O ", "N X S E Y G D Y Z W D S A I Q I G Y F G J E G Y N ", "N M W I G W Q Q M O M E S E E A W C M E G M M Y F ", "A R G D P L G K B X J C E O Y L A O I I X P Y E O ", "Y T U V G J G R J Q A B E K B C B C B S A M J B U ", "C O I G G L U K B I C A B P M G P P W A H F U K K ", "U W L Q I N Q G W Y C F Y U Q L C J Q N H H U G Q ", "S E Z E F A E L F U I I Q O A I W A S Y Y A A C Y ", "E I M A B Q P N A U Y E Q T K L A C Y I I P C S I ", "C C A S E A P Q S K O Y C Y Z C U A X K L A G U K ", "W O K C A Q L A Z G Q N C M M Q S G K Y Z A Z K L ", "E R U N P O G X U N A C V U A W Y S Y E A R M M N ", "A K K E E I A W Y U S C E A T U M Z S F N D Y U U ", "Q I G U Z P Q E L K O B Y M Y K Y Y H K H A O H N ", "V Y I F J G W N U A H M O Y M A Q Y E P A C L C E ", "E I W U Y M U B C P G Q G R P C J M E G I T A M S ", "I M B I S H Q E I Y N C Y Y L A D Z E L A P S K O ", "A W U O Q T Y C Y O A A Y G Z I V B R W P A X W M ", "Q M C M K W I C F T S K E E I C K Y C S H K Q R D ", "F E U S A A C M G U M O W C L O Y A F Y Y I D I U ", "G A O A C T W G M E B I G Z W F N F Y Y Q A J E E ", "A J W I A U K W G Q O O Y Y G V L E Q M U T U S C ", "G Q M A W A D U Y O Y Z A A Q O E C S A C J I M D"};
    int k = 980;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 102: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 102: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test103() {
    vector<string> x = {"1 1 1 1 1 2 2 1 1 1 1 2 2 1 1 2 2 2 1 1 1 1 1 2 1 ", "1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 1 2 1 2 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 2 2 2 1 2 2 1 1 1 2 1 1 2 ", "1 2 1 1 2 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 ", "1 1 1 1 1 2 1 1 1 2 2 1 1 2 2 2 2 1 2 2 2 1 1 1 1 ", "1 2 1 1 1 1 1 2 1 2 1 2 1 1 1 2 2 1 1 1 1 2 1 1 2 ", "1 2 1 1 1 1 1 1 2 2 2 1 1 1 2 2 1 2 1 1 1 1 1 1 1 ", "1 2 1 1 2 2 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 ", "1 1 1 1 1 1 2 1 1 1 1 2 1 1 2 1 1 2 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 2 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 2 ", "1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 2 1 1 1 ", "1 2 2 2 2 2 1 1 1 2 1 1 2 2 1 1 1 1 2 1 2 1 1 1 1 ", "1 1 1 2 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 2 1 1 1 1 ", "1 1 1 1 1 2 1 2 1 1 1 2 2 1 2 2 1 1 2 1 1 2 2 1 1 ", "1 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 2 ", "2 2 1 1 1 1 1 1 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 2 ", "1 1 1 2 1 2 1 1 1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 ", "1 1 2 1 2 1 1 2 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 2 1 1 1 1 1 2 1 1 2 1 2 2 1 1 1 2 2 1 2 2 1 ", "1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 2 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 2 1 1 2 1 2 1 1 2 ", "1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 2 2 1 2 2 1 1 1 1 ", "1 1 1 2 2 1 2 2 1 2 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 ", "2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 2 1 1 2 1 1 ", "1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 2 2 1 2 1 2 ", "1 2 2 1 1 2 1 2 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 2 1 2 2 2 1 ", "1 1 1 1 1 1 2 1 1 2 2 2 1 1 1 1 2 1 1 1 1 1 2 1 1 ", "1 1 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 2 2 ", "2 2 1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 2 2 1 1 1 2 ", "2 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 2 1 2 2 1 2 2 ", "1 2 1 1 2 1 1 1 1 2 1 2 1 2 1 1 1 2 1 1 1 1 2 1 1 ", "1 1 2 1 2 1 1 1 1 2 1 2 1 2 2 1 1 1 1 1 1 2 1 1 1 ", "1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 ", "1 1 2 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 2 1 2 ", "1 1 2 2 1 2 1 1 2 1 2 1 1 1 1 1 1 2 2 1 1 1 2 2 1 ", "1 1 2 1 1 1 1 1 1 1 1 2 1 2 2 1 2 1 2 1 1 1 1 1 1 ", "1 2 1 1 2 1 1 2 2 1 2 1 1 1 2 1 1 2 1 1 1 1 1 1 2 ", "1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 2 1 1 2 2 2 2 1 1 1 ", "2 1 1 1 1 2 1 1 1 1 1 1 2 2 1 1 2 1 1 2 1 1 1 2 2 ", "2 1 1 2 1 1 2 1 1 1 1 2 1 1 1 2 1 2 1 1 1 1 2 1 1 ", "1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 ", "1 2 2 1 1 1 1 2 1 1 1 2 1 1 1 1 2 1 1 1 2 1 1 1 2 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 2 1 1 2 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 2 1 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 1 1 2 ", "2 1 1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 ", "2 2 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 2 1 1 2 1"};
    vector<string> y = {"1 1 1 1 1 1 2 1 2 1 1 2 2 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 1 2 2 1 1 ", "1 1 1 1 2 1 1 2 2 2 2 1 1 2 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 2 1 1 1 1 1 1 2 1 ", "2 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 2 2 2 1 ", "2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 2 2 1 1 1 1 1 ", "1 1 1 1 2 1 2 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 2 ", "1 1 1 1 1 1 2 2 1 2 2 2 1 1 2 2 1 1 2 1 1 2 1 1 1 ", "1 1 1 2 2 1 2 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 ", "1 1 1 1 1 1 2 1 1 1 2 2 1 1 1 1 2 1 1 1 1 2 1 1 2 ", "1 1 2 2 1 1 1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 2 2 ", "1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 2 1 2 2 2 1 1 2 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 2 1 2 1 2 1 1 2 1 1 1 2 1 2 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 2 ", "2 1 1 1 2 1 1 1 1 2 1 1 1 2 2 1 1 2 2 2 1 1 1 2 1 ", "1 1 1 1 1 2 1 1 1 2 1 1 1 1 2 2 2 2 1 1 1 1 1 1 2 ", "2 1 2 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 2 2 1 1 1 ", "1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 ", "2 2 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 ", "1 1 2 1 2 2 2 1 2 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 2 1 1 1 1 ", "2 1 1 2 1 1 1 1 1 1 2 1 2 2 1 1 1 2 1 2 2 2 2 1 1 ", "1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 ", "1 2 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 2 1 2 1 1 ", "1 2 2 1 1 1 2 1 2 2 1 1 1 2 1 1 1 2 1 2 1 1 1 1 1 ", "2 1 1 1 1 1 2 1 1 1 1 1 2 1 2 2 2 1 1 1 1 1 1 1 1 ", "1 1 1 2 2 1 1 1 1 1 2 1 1 1 2 1 2 1 1 1 1 1 1 2 1 ", "1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 2 2 2 2 1 2 1 ", "1 1 1 1 1 1 2 1 2 1 1 1 1 2 2 1 1 1 1 2 1 1 1 1 1 ", "1 2 2 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 2 2 2 1 1 1 ", "1 2 1 2 2 1 1 1 2 1 2 1 1 2 1 1 1 1 2 1 1 1 1 1 2 ", "1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 2 1 2 2 1 1 1 1 1 2 ", "1 1 1 1 1 2 1 1 2 1 1 2 2 1 2 2 1 1 1 1 1 1 1 2 1 ", "1 1 1 1 2 1 1 1 1 2 1 2 1 1 1 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 2 2 1 1 2 1 1 2 1 1 1 1 2 1 1 1 1 2 1 2 1 1 ", "1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 2 1 1 1 1 1 2 2 1 ", "1 1 1 1 1 2 1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 1 2 1 ", "2 1 1 1 1 1 2 2 1 1 1 1 1 2 1 1 2 1 2 2 1 1 1 1 2 ", "1 1 2 1 1 1 1 2 1 1 2 1 1 2 1 1 1 2 2 1 2 2 1 1 2 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 ", "1 1 2 1 1 2 1 1 2 2 1 1 2 2 1 2 1 2 2 1 2 1 1 1 2 ", "1 1 1 2 2 1 1 1 1 2 1 2 2 1 1 1 2 2 1 1 1 1 2 2 2 ", "1 1 1 2 1 1 2 1 1 2 1 1 2 1 2 1 1 1 2 1 1 1 1 1 2 ", "1 2 1 2 1 1 1 1 2 2 1 1 1 1 2 1 2 1 1 1 1 1 1 2 1 ", "2 1 2 1 2 1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 ", "2 1 1 1 1 1 1 2 1 2 2 1 1 1 1 1 1 2 2 1 2 1 2 1 1 ", "1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 ", "1 2 1 1 1 2 1 1 1 2 1 2 1 1 1 1 2 1 2 2 1 2 2 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 ", "1 2 2 2 1 1 1 1 2 1 1 1 2 1 2 1 1 1 1 2 2 1 1 1 1"};
    vector<string> lengths = {"2 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 2 ", "1 2 1 2 2 2 2 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 2 2 ", "2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 ", "1 2 1 1 1 2 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 2 1 2 1 1 1 1 2 1 1 1 1 2 1 1 2 1 1 ", "1 2 1 2 2 1 1 2 1 1 1 1 2 1 2 2 1 1 1 1 1 1 1 1 1 ", "2 1 1 2 1 1 1 1 1 2 1 2 2 1 1 2 1 1 1 1 1 2 1 1 1 ", "2 1 2 1 1 1 1 2 1 1 1 1 1 2 1 2 1 2 1 1 1 1 1 2 1 ", "1 2 2 1 1 2 1 1 2 1 2 1 2 1 1 2 1 1 1 1 1 2 2 1 1 ", "1 1 1 2 2 1 1 2 2 1 1 1 1 2 1 2 1 1 2 2 1 1 1 2 1 ", "1 1 1 1 1 2 2 1 1 2 1 1 1 1 1 2 1 2 1 2 1 1 1 1 2 ", "1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 2 1 1 2 2 1 1 1 1 1 ", "2 1 2 1 1 2 1 2 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 ", "1 2 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 ", "2 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 2 ", "2 1 1 2 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 ", "1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 ", "1 2 2 1 1 1 2 1 1 1 2 1 1 2 1 1 1 1 1 2 1 1 1 1 1 ", "1 2 1 2 2 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 ", "1 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 ", "2 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 2 ", "2 2 2 2 2 1 2 2 1 1 2 1 1 1 1 2 1 1 1 1 1 2 2 1 2 ", "2 1 1 1 1 1 1 2 1 1 1 2 2 2 2 1 1 1 1 1 1 2 2 1 1 ", "1 1 2 2 1 1 2 1 1 1 1 2 1 1 1 1 1 2 2 1 2 1 1 1 1 ", "1 2 1 1 2 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 ", "1 1 1 1 1 2 1 1 2 2 1 1 1 2 1 1 2 1 1 2 1 2 1 1 1 ", "1 1 1 1 2 2 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 2 1 1 1 ", "1 1 2 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 1 2 2 1 ", "1 1 1 1 1 1 2 2 1 2 2 1 1 2 1 1 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 2 2 1 1 1 1 1 1 1 1 1 2 2 ", "1 1 1 1 2 1 2 1 2 1 2 1 1 2 1 1 1 1 1 2 2 1 2 1 1 ", "2 2 1 1 1 1 1 1 1 1 1 2 2 2 1 2 2 1 1 1 2 2 1 1 2 ", "1 2 1 1 2 1 2 1 1 1 1 1 2 1 1 1 2 2 1 1 1 1 1 2 2 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 1 1 2 1 1 ", "2 2 1 1 1 1 1 1 1 2 1 2 1 1 1 2 2 1 1 1 1 1 1 1 1 ", "1 1 2 2 1 1 1 1 1 2 1 1 1 1 1 2 1 1 2 1 2 1 1 2 1 ", "2 1 1 1 1 1 1 1 1 2 2 1 1 1 2 2 1 1 1 2 1 2 1 2 1 ", "1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 2 2 1 1 1 ", "1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 ", "1 1 1 2 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 ", "1 1 2 2 1 1 1 1 1 1 1 1 2 1 1 1 2 1 2 2 1 1 1 1 1 ", "2 1 1 1 2 1 2 1 1 1 2 1 1 1 1 1 1 1 1 2 2 1 1 2 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 ", "2 1 1 1 1 1 2 1 1 1 1 2 2 1 2 1 1 1 1 1 1 2 2 1 2 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 2 1 1 1"};
    vector<string> names = {"A R Y F G O K N Q H K A E O M E C G Y A G E O G F ", "Z A J X G W Y C Y Y L T U D A N Y R Y G I Y O O I ", "G G A U A M G K D O O Y A G X K E Y T Y R O F O A ", "C Y A N J N A A C Y Y W E N O U K M A I C J S G G ", "W O I I R P I E S E I D H Q C P Y V R G C I W A A ", "M F N A U C W W I R U U Q A U Y O Y O A S Q N M K ", "G W G U Y E C E C N V S S B F V P G G A G W W Q M ", "G T W S W W A C N G G N A M J L A S D A A U I M I ", "C H W Q I C M M E Y I I I H H A I N C Q F Z E T A ", "C X C C O U G K N T U S S I C Y D M A U V Q T C Y ", "K C G Y H W K S L M O C C A F U Y U W C P Q L K S ", "L E K X U K P Q N C Q O T Y A Y J A W Q G U C R F ", "G A I S A A L M A Z S A F I S D I R T V A Z A O A ", "A V P Z Y C E S Q F U K A N K O K W G W I Z M C K ", "G V Z I X S K E K W A C E U U K U M K O F K I A I ", "A N A F R W M O A R V F G Q A J O Q S U U W Y S J ", "B T U M N W O K J E C J N S H I A E S L X N U U C ", "V E M O S O M S Y G M O I E B S A Y O M A G K M S ", "M W Y N K C M Y G K A A K M C Y R O M P U Y C E O ", "E M K H I A W A W E V A Q W E L C E G S T O A E P ", "O T A Z K S N M N W N O R I U U N A S S S F W T C ", "I D G W M K C Y A C I D U U A N G Y V A A X H S P ", "Y Z O F K X A W S A U M B G P N K D K A J T C A Q ", "G R Y A S G C P Q M G A E A Q I I G P P A Z M O E ", "A K K Q Y F W J A O E A Y H M A M A U N Q G N D A ", "A P P U A H B A U K G E M V E P S G O U U N L N K ", "G Y Q Y M E F C A U Z P H Y Y W C Y E C A R O V M ", "N U K C A D M G Y G N Q C A Q E E A R N I W I N M ", "Y M E Q N C W A T K I Y C G Y B U Y A N W E V J V ", "A K A U W Y A T N Q L R O M S M O F J P K M X W K ", "D Y X Y W K Q A R Y O M M G W C Y G S U A M N D Q ", "D Z W S Y A O C B A W O N K Y E U A Q M C A M Y A ", "Q J Y Y I Y U A C O B Q I A G N Z C K R O W U J A ", "I K A Q N S C L E L E S O W G A R A R K A N E G Y ", "Q T G A C Y A Y A I U E A S E S G W I Y B H W G E ", "A O Q I A K A G O A I W Z O Z D M U E S Z O X G O ", "Y A I W E O K E S F W A G S Y C E Y M O E C A I J ", "L A B C Z D Q M M K R B Y I N U A A N A Y M A H A ", "Y C Q M Q Y I E U A M O Q S I G C B G I W W W P R ", "A A W E A J I V I C P N A E I I D E A D U Z O H M ", "U G N S A G X E V A A O P Y C C E T T Y T K S A W ", "O Y G I K E W N K A Y Q O M K W O I S A G U Q O P ", "D U S Y D H C U Y S E Y Q K Y I B E A K W U I Q I ", "M I I O M Q G Q M X C X B O T W O O S A G E G Y I ", "E W U K S I O E C G M W E W K A S Z Z T C D U A S ", "A J C W Y W Y O O I E G E C W E A A A K Z A X W E ", "C A J G B W A C Q A U T C Y E N X W A T N W G U K ", "S O C G C G O A S A I A O P T F S A Y W H K Q J Y ", "Y Q G R G M F G F E A M G C D U M P A B Y S Q K Y ", "O S W O H Q V J K C A I Y O S D S Q G F I A Q N P"};
    int k = 530;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 103: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 103: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test104() {
    vector<string> x = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> y = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {"D U I U I E G S A Q O Y C V S Q W X A J W A E M W ", "Y U N L C U C U Z U G N W M Y X X M A O C U J O E ", "A I A K X H J O N J G O E U N Q A H N Y H J G G K ", "C B F C W E Q G D G A E T K Y Y K D F E E W U E K ", "K M Q A E B A G M I W O C B C G A Q C N W K N A W ", "I E U E G T T O P M W G M G A O Q S F M S Q Q U E ", "A Q A A A M A A H P A K U X D W E X T H Q K C S E ", "A G S I G O Y I M S A V W R W G K B W W I D X S A ", "W N K A A V Q Z X S G G W W B P K H K Y C Q M F Q ", "A A U Q G Q E I D L N A O A E S O W N U A R P M T ", "A I B M G A W O E Y C T A U M A H M I Q K H K A N ", "U Q Y K W O I W S I W H I Z E V O I U Q K K K G Q ", "S U A A U F W T W A D A Q Q B Y W U D A G N Q N U ", "A X B I P L Y Z W A M Y A A Y S A P O K I Q O G N ", "K K F U C A Q C M C W M M O D I A Q A K O Z A C Y ", "E U Q Y Q G A I U G F Z J O S U M O C G K N O K A ", "B E Y C Y U G R Z G M T G D C D Q S N Y Q W F O E ", "H A V E M G R W A I Y C E W T B X D Q W K Q O C K ", "S G W A U B I A C U O Y M S I K D E E A A C G A R ", "H S J T P Q Q Y Y Y V Y R P W U F G K K D M U Y M ", "A M N G O R Q Q Y A Q E L S M N S A M G B A U E A ", "M M S B A R H A Y E X M S G L Y V I C O U E Y F C ", "W Y S C I Q R D K I X U G Z I Y Q A X S U H N Y O ", "I U D X A J W O E K C W O A C U P E A S C A V N S ", "F H E U U S G T O A B D K E A A N Q A W D T A A U ", "Z S C A Y A W A Y W E S W C I Z I E Y B W A Y K S ", "U C A V Q S E O O P Q I A W R M T E M K C M K I M ", "A I J W D K E Q Z M P U A O E S R W G G Q I O E M ", "Q B Q Q W L Y E D J D T H A P I U A K C C S X X Q ", "V S A A M F Q E G U E I K L M A I Z N Z B R P E A ", "Y U A A I K C E E L R M Q J W O F Y E F W V C S A ", "K B S A K V D M O K G G M O G X E Q I S M W Z W X ", "W O V X G B T C W G Z W G A Q U K C M C Q I M Q I ", "I Q Y I R M K Q S K S C E U N E A I K A H Q C L B ", "A Q C F C O M Q Q D W G E Z C Y C H O G K E E I Y ", "A E N A P G A K O P O Q M N O X F G W K A U C G P ", "K G S A G G V M K K L U K A C K G Q C A W Q P Q Q ", "U K W Y E C M I Y S V S N J N B A Y U F L A K T Y ", "P M M S U Y U U O A E L A Y Q U J A G W A W M G A ", "M W N M A I B J O Y E H F U W V Q A W A Q E T M C ", "W F M N U F M A C Y Y S I Q A E A G B C J F A A K ", "H I W A G G C U O N E M A P L P G X K E Q N Q M C ", "K A D E Z P E A C B F A U Y O X A Q M S W L A K I ", "E S Y Y R G I K G K Q I Q A G I Y D N M X K Q A A ", "Q T Y G T Y A Y C H O G E Y U E F A Y A E T X Y S ", "M N E Y J T M Q M S O A O U Q W O J D B T D O G O ", "Y A G K A K T S A O Q C Q Q I M T J W L K S U U K ", "I O I I H I M I Q R A W A A V K Q A Q G S I C Q N ", "E A A U E E H S Q A A Y L U G W R O H O Y X A H I ", "S Y C Y K S G G I H E Y F A A D G E I Q K I E H I"};
    int k = 999;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U"};
    if(result == expected) {
        cout << "Test Case 104: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 104: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test105() {
    vector<string> x = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> y = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {"A K E Q S C Y F A A E Z O B T J A P I K A Z L B E ", "A J G G M G K I W R N N A I E Y N Z Q T Y Z T J N ", "Q Y Y Y A S A A G M V Q N H O Z M S Z P D A Q N S ", "T G A S M R Q Y N U Q A Z H T Y I A C Q K C P E N ", "D R G W N O T A N E Q N C G M U E M K M Z I K K O ", "S G W N S K A S O U H F E A A W S N P Q P A D R Y ", "C A E Y G K A H G S M N L Y C Q Y W E J M I F B A ", "A D S S M L W E C R C Q T S L O S W E Z M N R M I ", "S E O K O C A A C P M G I G V Z D J C A O O E N J ", "S S G C N G V A W C N O N H M A G K I K K A F W C ", "S D B Z M N B J P Y O N C Y H A H D A M W N I K I ", "C Q E S U Q S S S N D A W S V K B E G Q W K W Q Q ", "P K U J O M U V Y Y O M K M N Y K M I E I I I S A ", "I W U Q S T Y S T W G J A M S I Y I K N Z E C C Y ", "U I U A Z B K S O S G A P U Q L A H W Z S E C I L ", "A D G U C T W G L G V C Y A G K N A M M J A E E H ", "V A Y W O W S A O E J G A G M K Y C M Y I K C L W ", "I M N Y K A Q B Y C R O F S M F O U K G T G I X K ", "Q I A F Y C I J E B A V P E C S Y C J Q B U F L E ", "I V I K C M A V U D E O X X M I Y Y E G I Y W U A ", "R V Y N C Y L I M G R W L S C I L L C H I Y S G M ", "K S X U A M M Y O U A W Y S K K F G I T U Y M W J ", "B Y G A E C G Z W A M O A A X Y J X W E D I K S M ", "W M S Q K V W O U A H A M I S L K S C A E A L K A ", "P Z A H D I A N A A Y S Y S K Q Z O U G L U S A U ", "A W C K M I N C N I A S U R U O K N O Z Q W C N S ", "M T N Y Y F A G D Q D M C N W Y G N G J O U G A G ", "P O B C V E Z C U M S I Q O K Y U B S C K S Z M L ", "E S K G M A A I P A L A I C S K K E C M A K A U G ", "K E F L J S H M A K L I S I F S E S S I I W O T A ", "K S E W M N E A R M A W G U A O N M A K A C E W H ", "A J V Y N E O L L L L V A K U V U Q W D A Y Q C A ", "R O M W A N O W A Q Q W O W Z O Y K C M K W R B M ", "I S Z I S P A D S W O K Q C W K K M J D A U A K X ", "M E A V U R V B W Y O N O A Z N I Y Q O P E U A I ", "C B W S S V C W J D W C A A V E V G B X V I C C Q ", "A Q M A E Q V K R U A P U K H R A L W I Q I G A N ", "Q S T K S X T B A N G Q O Z E W E H G W U I K H M ", "F J U X A K G S X J A H V Q O Y Q I F T Z G I A C ", "M A S Y N O F X Y N L M E G B Y Y A U A B Z K P E ", "T A O F Y W E U S C U U G S C Y G G A O E E P Q Q ", "I I Q O X G G Q Q Y X W U O K O I J B O A P A W S ", "A T Q N Q Q U W T Q K E X A Q K D W C T I A N C Q ", "L E O A M A M M A O T H W I X M Y U G U J W E U W ", "K U A C G L G A C M I A X N A S X E E A E N A O W ", "S A G I R S U A D J G B V Y M A B R O I F O S W W ", "K Q G O A C N A Q I B Q K V U O B K U U J C S P U ", "M C M C N O S Q M M M E W C G K A A D O X O Q S E ", "I X V M U G B M U Z D U D G F O A Q M O W F W G A ", "G E X U G R E M Q C W S I D Q V H M I Y N E A A F"};
    int k = 625;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M"};
    if(result == expected) {
        cout << "Test Case 105: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 105: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test106() {
    vector<string> x = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> y = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {"A I E A I Y X M L U J U F P U S R V R I R Q T C A ", "G O E D I U C H L Q E I N Y A Q A I H U G T W S M ", "C W Q U J U W F W I M O S B A U R A A S A M U E Y ", "Y L M A Y A A B N A S G K Q C I E G U E Z N C L I ", "A Q Q H U G B R U G Q Y J A K Y B O U S G A W Q R ", "C Y G W P C M Q Y R A Q E G G U C C I W Y Q A O C ", "C A A H L C Q E N Y D Z H U A T O E A Q F I G K M ", "I O P M T I I I Q R A K N Y A G N A N Q L Z C E E ", "H A E O W H G C A C A V W M O A Y J A U Y U A A D ", "W O Z Z A S D O N R A N U R I J G P O Z A J M N N ", "W C J J O Y E A D V Q J P A A G K U O P Y A G Y E ", "W S N K U K M R R C A Q K R X W P C C O G N S Q H ", "K W I U K T W Q B G C S Y W M M I Q W S W I L E J ", "E E B U Y Y M U A D P G Q A K Y A E Y F O C E R U ", "B I D O E N G E S Y M D A V U W F A W K E O L A V ", "I A A W A E Z K E O O C K C J U N A S V E U Z H W ", "Y K R O Q B U K B E L F W W B W Z N M I A T A V U ", "N M O T Y I E N Q S K Z Z S A D C C K E O O I C C ", "S U A U U P E A Y U C S U K Q Z M F A W N S A R I ", "C K N A O P U U G Y I E M C U O O L A U E C H G S ", "K J M Q A K I S I I G W U Z R W N C E A M M C O T ", "C K M B G U M K Q I I Y I B O N G K X B V J K R N ", "A E O S E A Q C Y H K A C S E A Y A A C Y A A V W ", "S A P I N W J E I G T Z E O N Q A S Y A X O C U K ", "M C S N N P X N T W S E C K C G K A I O W O Y F Z ", "E C K I K K W S K Q N Y I E A A A E H Z Y A A R E ", "O U J F E K C W Z K C S J A O A R C E A K R H L I ", "F I W G U G N N L M U S O Q H H O W M A F W O R I ", "C K Y K I C I Y A O A A Q W V E E K G N C Q V G C ", "F C W W M G P M Y W Z N M G M R J W M N G A V A F ", "I Q H S W X Y I Y L U U Z E A U C C A P Y Y K I E ", "Y U H I O O C O A E C S Q S O R E E H Z I K X O A ", "N B W Z O S Q B Q D N U J Q G J E F D K M D R E E ", "N M L A M I O Q V C I U Y Y E S Q M I A I Q K G D ", "Q D N P C V G Q A C W Q S A H W C W S L A N K K O ", "W A E A G A A S Q L J S I P M C E G X Q K I C S Y ", "H E O Y U P S M Q Y K S G M S E B K A Y A M V A A ", "Z N G N H Z A K V C V G A Y F A G L A K S E J E C ", "N J I Q V Q E K A W E U V W I C K R Z W I K M A O ", "L K N A T W G E H Q S G O M E G Y N O I A A S K W ", "E G N Z O U A A K E J M F S I H M M T K C S U N A ", "J K C C O U E L I B S A I L Q L Y H M M U K Y C R ", "K I E S A G F T Y W E K I G D I M U S M J C Y U G ", "A W A A O Z B W A L K W A A B Y T I E M W K G L U ", "G G C R I O U M P E Z T H L E I X A B A Z N Y U G ", "P Y U A S E S E A S A V U J G Q G N I E A K A U A ", "S W E Q V A A D U N G A J O U V Y Z Z Z S G R M X ", "N I O M E C M T N N F W C Z K P Y E I Y Y M M W C ", "W A Z U S A A V P G R L C H C U A G T L K Q S G J ", "E E G X K Z E G E O V K A N P M N O A N U E M Z O"};
    int k = 998;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U"};
    if(result == expected) {
        cout << "Test Case 106: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 106: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test107() {
    vector<string> x = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> y = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {"A R Y F G O K N Q H K A E O M E C G Y A G E O G F ", "Z A J X G W Y C Y Y L T U D A N Y R Y G I Y O O I ", "G G A U A M G K D O O Y A G X K E Y T Y R O F O A ", "C Y A N J N A A C Y Y W E N O U K M A I C J S G G ", "W O I I R P I E S E I D H Q C P Y V R G C I W A A ", "M F N A U C W W I R U U Q A U Y O Y O A S Q N M K ", "G W G U Y E C E C N V S S B F V P G G A G W W Q M ", "G T W S W W A C N G G N A M J L A S D A A U I M I ", "C H W Q I C M M E Y I I I H H A I N C Q F Z E T A ", "C X C C O U G K N T U S S I C Y D M A U V Q T C Y ", "K C G Y H W K S L M O C C A F U Y U W C P Q L K S ", "L E K X U K P Q N C Q O T Y A Y J A W Q G U C R F ", "G A I S A A L M A Z S A F I S D I R T V A Z A O A ", "A V P Z Y C E S Q F U K A N K O K W G W I Z M C K ", "G V Z I X S K E K W A C E U U K U M K O F K I A I ", "A N A F R W M O A R V F G Q A J O Q S U U W Y S J ", "B T U M N W O K J E C J N S H I A E S L X N U U C ", "V E M O S O M S Y G M O I E B S A Y O M A G K M S ", "M W Y N K C M Y G K A A K M C Y R O M P U Y C E O ", "E M K H I A W A W E V A Q W E L C E G S T O A E P ", "O T A Z K S N M N W N O R I U U N A S S S F W T C ", "I D G W M K C Y A C I D U U A N G Y V A A X H S P ", "Y Z O F K X A W S A U M B G P N K D K A J T C A Q ", "G R Y A S G C P Q M G A E A Q I I G P P A Z M O E ", "A K K Q Y F W J A O E A Y H M A M A U N Q G N D A ", "A P P U A H B A U K G E M V E P S G O U U N L N K ", "G Y Q Y M E F C A U Z P H Y Y W C Y E C A R O V M ", "N U K C A D M G Y G N Q C A Q E E A R N I W I N M ", "Y M E Q N C W A T K I Y C G Y B U Y A N W E V J V ", "A K A U W Y A T N Q L R O M S M O F J P K M X W K ", "D Y X Y W K Q A R Y O M M G W C Y G S U A M N D Q ", "D Z W S Y A O C B A W O N K Y E U A Q M C A M Y A ", "Q J Y Y I Y U A C O B Q I A G N Z C K R O W U J A ", "I K A Q N S C L E L E S O W G A R A R K A N E G Y ", "Q T G A C Y A Y A I U E A S E S G W I Y B H W G E ", "A O Q I A K A G O A I W Z O Z D M U E S Z O X G O ", "Y A I W E O K E S F W A G S Y C E Y M O E C A I J ", "L A B C Z D Q M M K R B Y I N U A A N A Y M A H A ", "Y C Q M Q Y I E U A M O Q S I G C B G I W W W P R ", "A A W E A J I V I C P N A E I I D E A D U Z O H M ", "U G N S A G X E V A A O P Y C C E T T Y T K S A W ", "O Y G I K E W N K A Y Q O M K W O I S A G U Q O P ", "D U S Y D H C U Y S E Y Q K Y I B E A K W U I Q I ", "M I I O M Q G Q M X C X B O T W O O S A G E G Y I ", "E W U K S I O E C G M W E W K A S Z Z T C D U A S ", "A J C W Y W Y O O I E G E C W E A A A K Z A X W E ", "C A J G B W A C Q A U T C Y E N X W A T N W G U K ", "S O C G C G O A S A I A O P T F S A Y W H K Q J Y ", "Y Q G R G M F G F E A M G C D U M P A B Y S Q K Y ", "O S W O H Q V J K C A I Y O S D S Q G F I A Q N P"};
    int k = 994;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U"};
    if(result == expected) {
        cout << "Test Case 107: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 107: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test108() {
    vector<string> x = {"3 2 3 2 1 3 3 3 1 1 2 1 3 2 1 1 1 3 3 2 2 3 1 1 2 ", "2 2 1 2 2 1 2 1 1 1 2 1 1 2 1 2 2 1 1 3 3 1 1 1 1 ", "2 3 3 3 1 1 1 1 3 1 1 1 3 1 2 2 2 1 1 1 1 1 1 1 2 ", "1 1 3 2 1 3 3 2 1 3 2 1 1 3 2 2 1 1 3 2 1 3 1 1 2 ", "2 1 2 2 1 1 1 2 3 3 2 1 1 1 1 2 1 2 3 1 3 3 2 3 2 ", "1 1 1 2 1 1 1 3 2 1 1 1 1 3 1 3 2 1 2 1 3 3 2 1 3 ", "2 2 3 2 3 1 3 2 1 2 1 3 1 2 1 1 1 1 1 2 1 3 3 2 1 ", "1 3 3 1 2 3 1 1 1 3 1 1 2 3 1 2 1 1 1 1 1 1 3 2 1 ", "1 1 1 1 2 2 1 1 2 1 3 2 1 1 1 2 2 2 1 3 3 3 1 1 3 ", "1 1 2 1 2 3 1 2 3 3 1 3 2 1 2 1 3 1 1 1 1 1 1 1 1 ", "1 3 1 1 1 1 1 3 1 1 1 2 1 3 2 1 3 1 1 2 3 2 1 1 1 ", "3 3 1 2 1 1 2 2 1 1 1 3 2 1 1 3 1 1 1 1 2 3 2 2 1 ", "1 2 1 2 3 3 2 3 1 3 1 1 1 2 3 1 1 1 1 1 1 2 1 1 1 ", "1 1 1 1 1 1 2 2 2 1 2 1 1 1 1 3 3 2 1 1 1 1 1 1 1 ", "1 1 3 1 1 1 3 1 1 1 1 2 2 1 1 1 1 1 3 1 3 1 1 3 2 ", "2 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 3 2 1 2 1 1 1 1 ", "1 2 3 2 3 1 2 1 1 1 3 3 2 2 3 1 2 2 2 2 1 1 3 2 2 ", "3 2 1 3 2 1 2 1 3 1 1 3 2 1 1 1 1 2 2 1 2 1 1 2 1 ", "1 1 3 1 3 1 2 1 1 1 2 1 3 3 1 1 3 3 1 1 3 1 2 3 1 ", "1 1 2 3 2 1 3 3 1 2 2 1 1 1 1 1 3 1 3 1 1 1 2 2 3 ", "2 1 3 3 2 1 2 2 2 2 1 1 1 1 1 3 2 1 1 2 2 2 2 3 2 ", "3 3 1 2 1 2 1 2 1 1 3 3 2 1 3 2 1 1 1 1 1 2 3 1 2 ", "1 1 1 1 1 1 3 2 3 2 2 3 2 2 1 3 2 3 3 1 3 1 3 1 2 ", "3 2 3 1 1 3 1 3 2 1 1 1 1 3 2 3 2 1 2 1 3 1 1 2 3 ", "2 1 1 1 3 1 2 2 3 1 1 1 2 2 2 1 3 2 1 1 1 1 3 1 1 ", "3 2 3 1 1 1 1 3 1 1 1 1 1 1 1 1 1 3 1 3 2 3 1 2 1 ", "1 2 3 1 1 3 2 1 2 3 1 1 3 2 1 1 1 3 1 2 1 1 2 2 1 ", "2 3 1 1 1 3 1 1 1 1 3 1 3 3 2 2 1 2 1 2 2 1 2 1 2 ", "3 3 2 1 1 2 2 1 1 1 1 1 3 3 1 1 2 1 1 1 1 3 1 1 3 ", "1 3 1 1 1 1 1 3 3 1 2 3 2 1 2 1 1 1 3 1 1 3 2 1 1 ", "2 3 2 1 3 1 1 2 1 3 1 2 1 1 2 2 1 2 1 2 1 1 1 2 1 ", "1 1 2 3 1 3 3 3 1 1 1 1 3 1 2 1 1 1 1 1 1 1 3 3 3 ", "2 2 1 1 2 1 1 3 1 1 3 1 1 3 3 2 2 1 2 1 1 3 1 1 3 ", "3 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 3 1 2 1 1 1 3 3 2 ", "2 2 2 1 1 1 1 1 1 1 1 1 3 2 3 1 2 1 1 2 2 2 1 2 3 ", "1 1 1 2 1 1 1 1 2 2 3 1 3 1 2 3 1 2 3 3 1 2 1 1 3 ", "1 1 3 1 2 3 1 1 2 2 2 1 2 1 2 1 2 2 1 1 2 2 2 1 1 ", "2 2 1 3 2 1 3 3 3 2 1 1 1 3 2 1 1 3 1 1 3 2 1 3 2 ", "2 1 1 1 2 3 3 1 2 3 1 1 2 1 1 1 2 1 1 2 2 1 3 1 3 ", "1 3 1 3 2 3 1 1 1 1 3 1 3 1 1 2 3 1 1 3 1 1 1 3 2 ", "3 3 2 1 1 1 1 1 1 1 1 2 1 2 1 2 1 1 1 1 1 3 2 1 1 ", "1 3 2 1 1 3 3 1 1 1 3 1 3 1 3 3 1 1 1 1 1 1 1 2 1 ", "2 1 1 3 1 1 2 1 3 2 3 1 1 1 1 1 1 2 1 1 3 1 2 1 1 ", "3 1 1 2 2 3 2 3 1 1 1 2 1 1 1 1 1 1 1 2 3 1 2 1 1 ", "1 1 2 1 1 1 1 3 3 2 1 3 2 1 3 3 2 1 3 3 1 3 2 3 1 ", "1 1 2 1 1 1 1 3 3 1 2 2 1 1 1 1 1 1 3 1 1 1 3 1 1 ", "1 1 2 3 1 3 2 3 1 3 3 1 3 1 1 3 1 1 1 2 3 2 3 3 1 ", "2 1 2 3 1 1 3 3 3 1 1 1 1 2 3 2 2 3 2 3 1 3 1 3 1 ", "2 3 2 1 1 1 1 1 1 1 1 1 3 3 1 1 1 2 3 2 1 1 1 2 3 ", "1 2 2 2 1 2 2 1 1 1 1 1 2 2 3 3 1 1 1 2 3 1 2 1 1"};
    vector<string> y = {"3 1 1 1 3 3 3 1 1 2 1 1 1 1 1 3 3 2 1 2 1 1 1 1 1 ", "3 1 1 1 3 3 3 2 3 1 3 1 3 2 3 1 2 2 1 1 2 2 1 2 2 ", "2 2 1 1 1 3 1 1 2 3 2 3 3 1 2 1 1 1 3 2 2 1 3 1 1 ", "1 3 2 2 1 3 2 1 2 1 1 3 1 3 2 3 2 1 1 1 1 1 1 3 1 ", "1 1 1 1 1 2 1 3 1 1 1 1 1 1 1 3 1 3 2 1 1 2 1 1 2 ", "3 1 2 1 1 3 1 1 1 1 2 1 1 1 2 1 1 1 3 3 1 2 3 1 1 ", "1 3 1 2 3 1 2 1 1 1 1 2 3 2 1 1 1 2 2 2 1 1 2 1 3 ", "1 1 1 1 1 1 2 1 1 1 2 2 3 3 3 1 1 3 1 1 1 3 1 1 2 ", "3 1 3 2 1 1 1 1 2 1 3 2 2 1 1 1 3 3 1 3 1 3 1 2 1 ", "1 1 1 3 3 2 1 1 1 1 3 1 3 1 2 1 3 3 2 3 3 1 1 3 1 ", "1 3 1 1 1 3 3 1 1 1 3 2 1 1 3 1 3 3 3 3 2 1 2 1 3 ", "1 2 3 3 1 3 2 2 2 1 3 2 2 2 3 1 2 3 2 1 1 1 3 1 1 ", "1 1 3 3 3 1 2 3 1 1 3 1 3 1 1 3 2 3 1 1 3 3 1 1 1 ", "3 3 1 1 3 1 2 1 2 1 2 3 1 1 1 1 1 1 2 1 1 1 3 3 3 ", "1 1 3 1 1 1 1 1 3 1 3 1 3 1 1 2 3 3 2 1 2 1 2 1 1 ", "3 3 2 1 1 3 1 2 1 2 1 2 1 3 1 3 2 2 1 1 3 3 1 3 2 ", "2 3 1 1 3 2 2 1 3 1 3 1 1 3 3 1 1 1 1 1 1 1 2 3 2 ", "1 1 2 1 3 3 3 1 1 1 3 2 2 3 1 1 1 3 1 1 3 1 2 1 1 ", "1 3 1 1 2 1 2 1 2 1 3 2 3 1 3 1 1 1 1 1 2 1 2 1 2 ", "1 2 1 1 2 1 2 1 1 1 3 3 1 1 1 1 1 1 2 1 1 1 1 1 1 ", "1 2 3 2 1 3 1 1 1 1 3 1 1 1 1 1 2 3 3 3 3 3 3 3 2 ", "2 2 1 2 1 1 2 3 3 2 2 2 1 3 3 1 3 1 3 3 1 1 1 2 3 ", "1 3 1 2 1 3 3 1 1 2 1 1 1 3 2 2 1 1 2 1 1 2 1 2 3 ", "1 1 2 3 3 1 1 1 1 3 1 1 1 2 3 1 1 1 1 1 1 1 3 1 1 ", "1 3 1 1 1 1 3 3 1 3 2 1 1 1 1 2 1 2 1 2 1 1 1 1 1 ", "3 1 1 1 1 3 1 1 1 1 1 2 2 3 1 1 1 1 3 3 1 2 2 3 1 ", "1 1 1 2 2 1 3 2 2 1 2 1 1 2 2 1 1 1 2 1 2 2 2 1 2 ", "2 1 2 1 1 2 1 1 3 1 2 1 3 1 1 1 1 1 1 1 1 2 1 3 1 ", "2 1 1 1 1 2 3 3 3 1 1 2 2 1 2 1 1 3 3 2 1 1 2 1 2 ", "1 3 3 3 2 1 1 3 1 3 3 1 1 1 2 2 2 1 2 3 1 1 2 1 3 ", "1 1 3 2 1 1 3 1 1 3 3 2 1 2 1 1 1 1 1 2 1 2 1 2 1 ", "1 1 3 1 2 3 2 3 2 2 1 1 1 2 2 2 1 3 1 1 2 2 2 1 1 ", "2 1 3 3 1 2 1 1 3 3 2 2 3 1 1 2 1 1 1 1 3 2 1 1 2 ", "1 1 1 3 1 1 1 1 1 1 3 1 1 1 1 3 2 1 2 2 2 3 1 2 3 ", "2 3 1 3 3 2 1 1 1 1 1 1 3 1 1 1 1 1 2 3 1 3 2 1 1 ", "2 3 3 1 3 3 3 1 1 2 2 1 2 3 1 1 3 1 1 1 1 1 1 1 3 ", "1 1 2 2 3 1 2 2 1 2 3 3 3 1 1 3 3 1 1 1 2 2 1 1 1 ", "2 3 1 1 1 3 3 1 1 1 1 2 2 2 3 1 1 2 2 3 1 1 3 1 2 ", "2 2 1 1 1 1 1 1 2 2 1 1 1 1 2 1 3 3 3 1 1 2 2 2 1 ", "1 1 3 3 2 3 1 2 1 3 1 1 1 2 1 1 1 1 1 1 1 3 1 2 3 ", "1 2 3 1 3 1 1 1 1 2 2 2 2 3 1 3 3 2 1 1 3 1 3 3 2 ", "1 1 1 1 1 3 1 1 3 3 2 1 1 3 3 2 1 3 1 3 1 2 1 1 1 ", "3 3 1 3 1 1 1 1 1 1 1 3 2 3 3 1 2 2 3 1 3 1 1 1 3 ", "2 1 1 3 3 1 1 1 2 1 3 1 1 2 3 1 3 1 1 2 3 1 1 1 1 ", "1 1 2 2 3 1 3 3 1 2 3 1 2 1 3 1 1 1 3 1 3 1 1 2 3 ", "1 2 3 1 2 1 3 2 3 1 1 1 1 1 1 2 1 3 2 1 2 1 3 3 1 ", "1 1 3 1 1 1 1 2 2 1 1 3 3 3 1 2 1 3 2 3 2 2 2 1 1 ", "1 3 1 1 2 1 1 1 1 1 1 2 1 1 1 1 3 3 1 1 1 1 1 3 3 ", "3 1 3 1 1 2 3 1 3 1 1 2 1 1 1 3 2 1 3 2 3 1 1 1 2 ", "3 3 1 1 3 3 1 2 2 1 3 3 1 2 2 1 2 1 1 2 1 1 3 1 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {"A K E Q S C Y F A A E Z O B T J A P I K A Z L B E ", "A J G G M G K I W R N N A I E Y N Z Q T Y Z T J N ", "Q Y Y Y A S A A G M V Q N H O Z M S Z P D A Q N S ", "T G A S M R Q Y N U Q A Z H T Y I A C Q K C P E N ", "D R G W N O T A N E Q N C G M U E M K M Z I K K O ", "S G W N S K A S O U H F E A A W S N P Q P A D R Y ", "C A E Y G K A H G S M N L Y C Q Y W E J M I F B A ", "A D S S M L W E C R C Q T S L O S W E Z M N R M I ", "S E O K O C A A C P M G I G V Z D J C A O O E N J ", "S S G C N G V A W C N O N H M A G K I K K A F W C ", "S D B Z M N B J P Y O N C Y H A H D A M W N I K I ", "C Q E S U Q S S S N D A W S V K B E G Q W K W Q Q ", "P K U J O M U V Y Y O M K M N Y K M I E I I I S A ", "I W U Q S T Y S T W G J A M S I Y I K N Z E C C Y ", "U I U A Z B K S O S G A P U Q L A H W Z S E C I L ", "A D G U C T W G L G V C Y A G K N A M M J A E E H ", "V A Y W O W S A O E J G A G M K Y C M Y I K C L W ", "I M N Y K A Q B Y C R O F S M F O U K G T G I X K ", "Q I A F Y C I J E B A V P E C S Y C J Q B U F L E ", "I V I K C M A V U D E O X X M I Y Y E G I Y W U A ", "R V Y N C Y L I M G R W L S C I L L C H I Y S G M ", "K S X U A M M Y O U A W Y S K K F G I T U Y M W J ", "B Y G A E C G Z W A M O A A X Y J X W E D I K S M ", "W M S Q K V W O U A H A M I S L K S C A E A L K A ", "P Z A H D I A N A A Y S Y S K Q Z O U G L U S A U ", "A W C K M I N C N I A S U R U O K N O Z Q W C N S ", "M T N Y Y F A G D Q D M C N W Y G N G J O U G A G ", "P O B C V E Z C U M S I Q O K Y U B S C K S Z M L ", "E S K G M A A I P A L A I C S K K E C M A K A U G ", "K E F L J S H M A K L I S I F S E S S I I W O T A ", "K S E W M N E A R M A W G U A O N M A K A C E W H ", "A J V Y N E O L L L L V A K U V U Q W D A Y Q C A ", "R O M W A N O W A Q Q W O W Z O Y K C M K W R B M ", "I S Z I S P A D S W O K Q C W K K M J D A U A K X ", "M E A V U R V B W Y O N O A Z N I Y Q O P E U A I ", "C B W S S V C W J D W C A A V E V G B X V I C C Q ", "A Q M A E Q V K R U A P U K H R A L W I Q I G A N ", "Q S T K S X T B A N G Q O Z E W E H G W U I K H M ", "F J U X A K G S X J A H V Q O Y Q I F T Z G I A C ", "M A S Y N O F X Y N L M E G B Y Y A U A B Z K P E ", "T A O F Y W E U S C U U G S C Y G G A O E E P Q Q ", "I I Q O X G G Q Q Y X W U O K O I J B O A P A W S ", "A T Q N Q Q U W T Q K E X A Q K D W C T I A N C Q ", "L E O A M A M M A O T H W I X M Y U G U J W E U W ", "K U A C G L G A C M I A X N A S X E E A E N A O W ", "S A G I R S U A D J G B V Y M A B R O I F O S W W ", "K Q G O A C N A Q I B Q K V U O B K U U J C S P U ", "M C M C N O S Q M M M E W C G K A A D O X O Q S E ", "I X V M U G B M U Z D U D G F O A Q M O W F W G A ", "G E X U G R E M Q C W S I D Q V H M I Y N E A A F"};
    int k = 124;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "D", "D", "D", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "F", "F", "F", "F", "F", "F", "F", "F", "F", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "H", "H", "H", "H", "H", "H"};
    if(result == expected) {
        cout << "Test Case 108: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 108: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test109() {
    vector<string> x = {"3 2 1 2 1 1 2 1 1 3 1 1 1 1 2 1 2 2 1 1 1 1 1 1 2 ", "3 1 3 1 1 1 1 1 1 1 1 1 3 1 1 2 3 1 1 1 1 1 1 1 1 ", "3 1 1 1 3 3 1 1 1 3 3 1 3 1 2 1 1 2 1 3 2 1 2 2 3 ", "3 2 1 2 3 2 1 3 3 1 2 1 1 1 3 1 3 1 3 1 1 1 1 1 1 ", "1 3 1 1 1 2 1 3 2 1 2 1 1 1 1 1 1 3 1 1 2 1 1 1 3 ", "1 3 3 1 2 1 1 1 1 1 3 1 1 1 1 2 1 1 2 2 3 1 1 1 1 ", "1 1 1 1 1 1 3 1 1 1 1 2 2 2 1 3 1 1 3 1 2 1 1 1 2 ", "3 1 1 2 2 3 1 1 1 3 1 2 3 3 1 1 1 1 2 1 3 1 1 1 3 ", "1 1 3 1 1 2 1 1 1 1 2 3 3 1 2 1 3 1 1 1 1 1 1 2 1 ", "1 3 1 2 3 1 1 2 1 1 1 1 1 2 2 1 2 2 2 2 1 2 2 2 1 ", "2 1 1 1 1 1 2 3 1 2 1 2 1 3 2 3 1 1 1 2 3 3 1 2 1 ", "1 1 3 1 3 1 2 2 3 2 2 3 3 1 1 1 1 3 3 1 1 1 1 3 2 ", "3 3 1 1 3 2 2 1 1 1 2 1 1 3 2 2 1 3 1 2 1 3 1 1 1 ", "1 2 1 1 1 3 1 1 1 2 2 3 3 1 3 2 3 1 1 1 1 3 3 1 2 ", "2 1 1 2 1 3 1 1 1 1 2 1 3 1 1 1 1 3 1 1 2 2 1 1 1 ", "1 2 1 1 3 2 2 1 1 3 2 3 2 1 1 3 1 1 3 3 1 1 2 3 3 ", "2 2 3 1 1 3 2 1 1 1 1 1 1 2 1 1 3 1 3 1 1 1 1 1 3 ", "1 1 3 3 2 1 1 1 1 2 1 1 1 1 1 1 2 3 3 2 1 1 1 1 1 ", "1 3 3 1 3 1 1 1 1 1 1 3 3 1 1 2 2 3 3 1 1 1 2 1 1 ", "3 1 1 1 1 1 1 3 1 1 1 3 1 2 3 1 1 3 3 3 1 1 2 2 1 ", "1 2 1 2 3 2 1 1 3 2 3 2 1 1 1 3 2 3 2 1 1 1 2 2 2 ", "1 1 1 1 2 1 2 1 3 1 3 1 2 1 1 1 2 3 2 2 3 2 2 2 2 ", "1 1 2 3 3 1 1 1 2 2 2 3 2 2 1 1 2 2 1 1 2 3 1 2 3 ", "1 1 2 3 1 1 1 3 1 1 3 1 2 1 2 2 3 1 1 1 1 1 1 2 2 ", "1 1 3 1 3 1 1 3 1 3 1 3 1 1 1 3 1 2 1 3 1 1 3 1 1 ", "1 1 1 1 3 1 3 1 1 1 1 1 1 1 3 1 1 1 1 2 3 1 1 2 2 ", "1 1 1 2 1 1 2 3 1 3 2 2 3 2 3 1 3 1 1 1 1 3 3 3 3 ", "3 3 1 2 1 3 2 1 1 3 1 1 1 1 2 1 1 1 1 3 1 1 1 2 3 ", "1 2 1 1 1 1 2 1 1 1 3 3 2 1 1 1 3 3 1 1 1 1 3 2 1 ", "3 3 3 1 1 2 2 1 1 3 1 1 1 3 1 2 3 1 1 1 1 3 1 1 1 ", "1 2 1 2 1 1 1 1 1 1 1 3 1 1 1 2 1 2 2 1 1 3 3 1 1 ", "3 1 1 1 1 1 1 2 2 1 1 3 2 2 2 2 1 3 2 1 3 2 2 1 1 ", "3 2 1 1 1 2 3 1 1 3 1 1 1 2 2 1 1 2 1 1 1 1 3 3 1 ", "3 1 1 1 1 1 1 1 1 1 1 1 3 1 2 3 3 1 1 3 2 2 1 1 2 ", "1 3 2 1 1 1 1 1 2 1 1 1 1 3 2 1 1 3 3 3 2 1 2 1 3 ", "1 1 1 1 1 1 3 1 2 3 1 1 3 3 3 1 1 1 3 1 1 2 3 1 1 ", "1 2 1 1 3 3 1 2 2 3 3 1 2 2 1 1 1 3 2 1 3 2 1 1 2 ", "2 1 3 1 1 1 1 1 1 3 1 3 2 1 1 3 2 2 2 1 2 2 1 3 1 ", "1 1 3 1 1 3 3 1 1 2 2 3 2 3 1 1 3 1 2 1 1 1 2 2 1 ", "3 1 3 3 3 1 1 2 1 1 1 1 3 1 3 3 2 1 2 1 3 1 3 1 1 ", "1 1 3 1 3 1 1 2 1 1 1 1 1 3 1 1 1 1 1 3 2 1 1 1 1 ", "1 1 2 1 1 3 1 1 3 2 3 1 1 3 1 3 2 2 1 1 1 2 2 1 3 ", "3 1 2 1 3 1 1 1 1 1 1 3 1 1 1 2 1 1 3 1 1 2 1 1 1 ", "1 1 1 1 3 3 1 1 1 1 1 1 1 1 1 3 2 1 2 1 1 2 1 1 2 ", "3 1 2 1 1 2 2 2 1 1 3 1 1 1 1 2 1 1 2 2 1 3 3 1 2 ", "1 1 1 2 2 2 1 3 2 2 2 3 1 2 1 3 1 1 3 2 2 1 1 2 3 ", "2 2 3 2 2 2 3 1 1 3 3 3 3 3 2 1 2 1 3 2 2 3 1 1 2 ", "1 3 2 1 2 1 1 3 1 1 2 3 3 3 1 2 1 1 1 1 3 1 3 1 3 ", "1 1 1 3 1 1 2 1 1 3 1 1 1 2 3 1 1 2 2 2 3 1 2 3 3 ", "1 1 1 1 3 3 2 2 1 2 1 1 2 2 2 1 2 3 1 3 2 3 1 1 1"};
    vector<string> y = {"3 1 1 1 1 1 2 1 2 1 1 2 3 1 1 1 1 1 3 1 1 3 2 3 2 ", "1 1 1 1 1 1 1 1 1 1 2 3 3 3 2 2 1 1 1 1 1 1 1 1 1 ", "2 1 2 1 1 1 3 3 2 1 3 1 1 1 2 3 1 3 2 2 1 1 1 1 1 ", "2 1 2 3 1 1 2 1 2 3 1 1 1 1 1 3 3 2 1 3 3 3 1 1 3 ", "2 3 3 1 3 1 1 2 3 3 1 3 1 1 1 3 3 2 1 1 1 1 1 2 1 ", "2 3 1 3 2 1 1 2 1 2 1 3 1 1 3 3 1 1 2 1 1 2 2 3 1 ", "2 1 1 2 1 1 3 2 1 1 3 2 1 3 3 2 3 1 3 2 3 1 2 1 2 ", "1 2 2 3 1 3 1 2 1 1 3 2 1 1 1 2 1 1 2 1 3 2 1 1 1 ", "3 3 3 2 2 2 2 1 3 1 3 1 2 1 3 3 1 1 2 1 2 3 2 2 1 ", "1 3 3 2 1 1 1 2 1 1 1 2 3 1 1 1 1 1 2 1 1 1 1 1 1 ", "1 2 3 2 1 3 1 2 1 1 2 1 3 1 1 3 1 3 2 1 1 2 1 2 2 ", "1 2 2 1 3 3 3 1 1 2 1 2 2 3 1 1 1 3 1 1 1 1 2 1 1 ", "2 1 2 1 2 2 1 1 1 1 1 2 1 3 1 1 1 2 1 1 1 1 2 3 1 ", "1 2 1 1 3 1 1 3 3 1 3 1 2 3 1 3 1 1 1 2 3 1 3 1 1 ", "1 1 1 1 2 1 2 2 1 1 2 3 1 1 3 3 1 1 1 1 3 3 1 2 1 ", "1 1 3 3 1 1 1 1 2 1 2 1 1 1 1 3 3 1 1 2 1 1 3 1 2 ", "1 3 3 2 1 2 2 1 1 1 1 1 1 2 1 1 3 1 2 2 1 2 3 1 3 ", "1 1 2 2 3 1 1 3 1 1 1 2 1 1 2 2 2 2 3 1 3 1 1 2 1 ", "1 1 1 3 1 1 1 2 3 3 3 3 2 1 1 1 1 1 1 2 1 3 3 1 1 ", "1 1 3 1 2 1 3 1 1 1 1 2 1 1 3 2 3 2 2 1 2 2 1 1 3 ", "1 1 2 2 3 3 2 2 1 1 2 3 2 2 1 2 3 1 3 3 2 3 3 2 1 ", "1 1 1 1 3 3 1 1 2 3 1 1 1 3 1 1 3 1 2 2 1 3 1 3 3 ", "2 2 1 1 3 1 1 3 1 3 1 3 1 3 1 1 3 2 2 2 1 1 2 2 1 ", "1 1 1 1 1 1 1 3 1 1 1 3 1 1 1 2 3 1 1 2 1 3 2 1 1 ", "2 1 3 1 1 3 1 1 1 2 2 1 1 1 2 1 2 3 1 1 2 1 2 3 1 ", "2 1 2 1 1 1 1 3 3 3 1 1 3 1 1 1 1 1 2 2 1 2 1 1 1 ", "1 1 3 2 1 1 1 1 1 2 1 3 2 2 1 1 3 2 2 1 1 1 3 1 1 ", "2 3 3 3 1 3 3 2 1 1 2 1 2 2 3 2 3 1 3 3 1 1 1 1 1 ", "2 2 2 3 3 1 1 1 1 1 3 1 1 3 2 3 1 3 1 1 2 3 3 3 1 ", "3 2 1 2 3 1 3 1 2 1 1 1 1 1 2 3 1 1 1 1 1 2 1 1 1 ", "3 3 1 2 1 1 2 1 1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 1 2 ", "1 2 2 1 1 1 1 3 1 1 2 1 2 1 1 1 3 1 1 1 2 2 1 2 2 ", "1 2 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 3 2 1 3 1 3 ", "3 3 3 3 3 2 1 1 1 1 2 3 2 1 1 3 1 1 1 3 1 1 1 2 3 ", "1 1 1 1 1 2 1 3 1 3 1 3 1 1 1 2 3 1 3 1 3 2 3 1 1 ", "1 1 3 3 1 1 1 1 1 1 1 3 1 1 1 3 1 1 1 3 1 1 1 1 1 ", "3 2 1 3 1 1 1 1 2 3 3 1 1 2 1 3 1 1 2 3 3 1 1 2 1 ", "1 1 3 1 3 1 3 1 3 1 1 2 1 1 1 2 2 1 1 1 3 3 3 3 1 ", "1 1 3 2 2 3 2 2 3 2 1 3 1 3 1 1 1 2 1 3 2 2 1 2 3 ", "3 1 1 2 2 3 2 1 3 2 1 1 1 1 1 1 1 1 2 2 3 3 1 1 2 ", "1 1 3 3 3 1 1 3 2 1 3 2 1 2 3 2 1 1 1 1 3 1 1 3 1 ", "3 2 1 3 3 1 1 1 1 1 3 1 1 2 3 2 3 3 1 1 3 2 2 1 1 ", "2 1 1 1 1 1 2 3 1 2 3 3 3 2 3 2 1 1 2 3 3 1 3 3 1 ", "2 1 2 1 2 3 1 3 3 2 1 1 1 1 1 1 1 1 3 1 2 2 1 1 1 ", "1 2 2 2 1 3 3 1 2 1 3 1 2 2 2 1 3 1 1 2 3 1 1 1 2 ", "1 3 1 1 3 1 3 1 2 1 1 3 2 1 2 2 1 3 1 3 2 1 3 3 2 ", "3 2 3 3 3 1 1 3 1 3 1 1 1 2 1 2 1 1 2 1 1 2 3 1 1 ", "1 3 1 1 3 1 1 2 3 1 3 3 2 1 3 3 1 1 1 1 3 1 3 3 2 ", "2 1 1 1 2 1 2 2 1 3 2 1 3 1 1 1 1 3 1 1 1 3 2 1 3 ", "1 1 1 1 1 1 1 3 1 3 1 1 1 2 3 1 1 1 3 1 1 1 3 1 3"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {"A I E A I Y X M L U J U F P U S R V R I R Q T C A ", "G O E D I U C H L Q E I N Y A Q A I H U G T W S M ", "C W Q U J U W F W I M O S B A U R A A S A M U E Y ", "Y L M A Y A A B N A S G K Q C I E G U E Z N C L I ", "A Q Q H U G B R U G Q Y J A K Y B O U S G A W Q R ", "C Y G W P C M Q Y R A Q E G G U C C I W Y Q A O C ", "C A A H L C Q E N Y D Z H U A T O E A Q F I G K M ", "I O P M T I I I Q R A K N Y A G N A N Q L Z C E E ", "H A E O W H G C A C A V W M O A Y J A U Y U A A D ", "W O Z Z A S D O N R A N U R I J G P O Z A J M N N ", "W C J J O Y E A D V Q J P A A G K U O P Y A G Y E ", "W S N K U K M R R C A Q K R X W P C C O G N S Q H ", "K W I U K T W Q B G C S Y W M M I Q W S W I L E J ", "E E B U Y Y M U A D P G Q A K Y A E Y F O C E R U ", "B I D O E N G E S Y M D A V U W F A W K E O L A V ", "I A A W A E Z K E O O C K C J U N A S V E U Z H W ", "Y K R O Q B U K B E L F W W B W Z N M I A T A V U ", "N M O T Y I E N Q S K Z Z S A D C C K E O O I C C ", "S U A U U P E A Y U C S U K Q Z M F A W N S A R I ", "C K N A O P U U G Y I E M C U O O L A U E C H G S ", "K J M Q A K I S I I G W U Z R W N C E A M M C O T ", "C K M B G U M K Q I I Y I B O N G K X B V J K R N ", "A E O S E A Q C Y H K A C S E A Y A A C Y A A V W ", "S A P I N W J E I G T Z E O N Q A S Y A X O C U K ", "M C S N N P X N T W S E C K C G K A I O W O Y F Z ", "E C K I K K W S K Q N Y I E A A A E H Z Y A A R E ", "O U J F E K C W Z K C S J A O A R C E A K R H L I ", "F I W G U G N N L M U S O Q H H O W M A F W O R I ", "C K Y K I C I Y A O A A Q W V E E K G N C Q V G C ", "F C W W M G P M Y W Z N M G M R J W M N G A V A F ", "I Q H S W X Y I Y L U U Z E A U C C A P Y Y K I E ", "Y U H I O O C O A E C S Q S O R E E H Z I K X O A ", "N B W Z O S Q B Q D N U J Q G J E F D K M D R E E ", "N M L A M I O Q V C I U Y Y E S Q M I A I Q K G D ", "Q D N P C V G Q A C W Q S A H W C W S L A N K K O ", "W A E A G A A S Q L J S I P M C E G X Q K I C S Y ", "H E O Y U P S M Q Y K S G M S E B K A Y A M V A A ", "Z N G N H Z A K V C V G A Y F A G L A K S E J E C ", "N J I Q V Q E K A W E U V W I C K R Z W I K M A O ", "L K N A T W G E H Q S G O M E G Y N O I A A S K W ", "E G N Z O U A A K E J M F S I H M M T K C S U N A ", "J K C C O U E L I B S A I L Q L Y H M M U K Y C R ", "K I E S A G F T Y W E K I G D I M U S M J C Y U G ", "A W A A O Z B W A L K W A A B Y T I E M W K G L U ", "G G C R I O U M P E Z T H L E I X A B A Z N Y U G ", "P Y U A S E S E A S A V U J G Q G N I E A K A U A ", "S W E Q V A A D U N G A J O U V Y Z Z Z S G R M X ", "N I O M E C M T N N F W C Z K P Y E I Y Y M M W C ", "W A Z U S A A V P G R L C H C U A G T L K Q S G J ", "E E G X K Z E G E O V K A N P M N O A N U E M Z O"};
    int k = 108;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "D", "D", "D", "D", "D", "D", "D", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "F", "F", "F", "F", "F", "F"};
    if(result == expected) {
        cout << "Test Case 109: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 109: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test110() {
    vector<string> x = {"1 2 1 1 2 3 3 3 1 2 1 1 2 1 1 3 3 1 3 3 3 1 2 3 2 ", "1 1 3 1 1 1 2 1 2 3 2 1 1 1 2 1 1 1 2 3 3 1 1 2 2 ", "1 1 1 1 1 2 1 2 3 2 1 1 1 1 3 3 1 3 1 1 1 2 1 1 1 ", "1 1 2 2 1 1 1 2 1 1 1 1 1 1 1 1 2 1 3 3 3 1 1 2 1 ", "1 1 2 2 3 1 1 2 3 1 1 1 1 1 1 2 2 2 3 1 3 1 3 1 1 ", "1 2 2 1 3 1 1 3 1 1 2 1 3 2 1 1 1 1 3 2 1 3 2 2 3 ", "2 2 2 3 3 1 1 3 1 1 1 3 1 1 1 3 1 1 1 2 2 3 1 1 1 ", "1 1 1 1 1 2 3 1 2 3 2 2 1 2 2 1 2 1 3 1 2 2 1 2 2 ", "1 2 2 1 2 1 1 3 1 1 1 3 3 1 2 3 2 3 1 2 1 1 1 1 1 ", "2 1 1 1 3 1 1 1 3 1 1 1 3 1 1 3 1 3 2 2 2 1 2 1 2 ", "1 3 2 1 2 1 3 1 3 1 2 3 1 2 1 3 2 1 3 3 3 1 1 1 1 ", "1 2 2 1 2 3 3 1 1 1 1 1 1 2 1 2 1 3 2 1 1 3 1 2 2 ", "1 1 1 1 1 3 3 2 2 3 2 3 1 1 1 3 1 1 1 3 3 1 1 2 1 ", "1 1 1 1 3 1 1 1 3 1 2 3 1 2 1 1 2 2 1 3 3 1 1 1 3 ", "2 3 1 3 2 2 1 1 1 1 2 2 1 1 1 3 1 1 3 3 1 3 1 1 2 ", "1 3 1 3 1 2 1 2 3 1 1 3 1 3 1 1 1 1 1 3 1 1 3 3 1 ", "3 2 1 1 2 1 2 1 2 1 1 1 2 1 1 1 3 3 1 1 1 1 1 1 1 ", "3 1 1 1 1 1 1 1 1 3 1 1 1 1 2 3 2 1 3 1 1 1 1 1 1 ", "2 2 1 2 1 1 1 2 1 1 3 1 2 1 3 1 2 3 3 2 3 1 2 1 1 ", "1 2 1 1 2 2 2 1 3 1 1 1 1 2 1 2 1 1 3 1 3 1 1 1 1 ", "3 1 1 1 1 1 3 1 3 1 2 3 3 2 1 2 3 3 1 3 3 3 1 1 3 ", "1 1 1 1 3 2 2 1 1 3 1 1 1 2 1 1 3 1 1 3 3 1 3 3 2 ", "1 2 2 3 3 1 1 3 3 2 1 3 3 1 2 1 3 1 3 1 1 1 1 1 1 ", "1 1 1 1 2 1 2 2 1 3 1 2 1 2 3 1 1 1 1 1 3 3 1 3 1 ", "3 1 3 2 1 3 1 2 1 1 3 1 3 2 1 1 1 2 1 1 2 2 2 3 1 ", "1 2 1 1 2 1 1 1 1 1 1 1 2 2 1 1 2 3 3 1 1 1 2 1 2 ", "3 1 3 1 1 1 3 1 1 3 2 3 2 1 3 2 2 3 2 1 3 1 1 3 1 ", "1 1 3 1 1 1 1 1 2 2 1 2 1 3 1 1 1 1 1 1 3 2 1 1 3 ", "1 1 3 2 1 2 3 1 2 1 3 3 1 1 3 1 2 1 1 2 3 1 1 2 2 ", "1 2 2 2 1 2 1 1 2 1 1 3 1 3 3 1 1 1 1 1 1 1 1 1 3 ", "2 1 1 1 1 1 3 1 1 3 1 3 3 1 1 1 1 1 2 2 3 3 2 3 1 ", "1 1 1 1 1 2 2 3 3 1 1 2 2 3 1 2 1 1 1 3 1 3 3 1 1 ", "1 2 2 2 1 1 1 3 3 1 1 1 1 3 2 2 1 1 3 2 1 1 1 2 1 ", "1 1 3 1 1 2 2 1 3 2 3 1 1 1 1 2 1 3 1 3 1 1 1 1 3 ", "1 3 2 1 1 1 1 3 2 1 3 3 3 1 1 1 1 1 1 1 2 2 1 1 1 ", "1 1 1 1 2 3 1 2 2 1 1 3 1 1 1 1 2 3 3 3 1 1 2 1 1 ", "1 1 1 3 1 2 3 1 1 3 2 1 1 2 2 1 3 1 3 2 1 3 3 3 1 ", "2 3 1 1 1 1 1 1 2 1 1 3 1 1 1 1 2 2 3 3 3 1 2 1 1 ", "1 1 1 2 1 2 2 1 1 2 3 1 1 1 1 1 1 1 3 3 1 1 1 2 3 ", "2 2 3 3 2 3 1 2 1 2 1 1 2 1 1 1 1 1 3 1 1 1 1 1 1 ", "3 2 1 1 1 3 2 3 1 1 3 2 2 1 1 2 1 1 1 1 3 1 1 2 3 ", "1 2 1 2 2 1 1 3 1 2 2 2 1 1 1 2 1 2 1 2 3 3 2 1 3 ", "2 1 3 3 3 1 1 2 1 1 2 3 2 1 1 2 1 1 3 1 1 1 1 2 2 ", "1 3 3 1 1 3 1 1 1 1 1 1 1 1 3 2 2 2 3 2 2 1 1 1 1 ", "1 1 1 3 2 2 1 1 1 2 1 3 2 3 3 3 1 3 2 1 3 1 1 2 1 ", "1 1 2 3 2 2 1 1 2 2 1 1 1 1 2 1 3 1 2 1 1 2 3 2 2 ", "1 3 1 1 3 3 3 1 1 1 1 1 1 2 1 1 2 3 1 1 2 1 1 1 1 ", "3 1 3 1 1 2 1 1 2 2 1 1 1 2 1 3 1 1 1 1 1 1 3 2 2 ", "1 1 1 1 2 3 2 1 1 1 3 2 1 2 3 1 1 1 1 2 1 3 1 1 1 ", "1 1 2 2 1 1 1 1 1 1 2 2 1 1 1 1 3 2 1 3 2 1 1 2 2"};
    vector<string> y = {"1 1 3 2 3 3 1 2 1 1 3 2 2 3 2 3 1 1 1 1 1 2 3 1 1 ", "1 3 1 2 1 3 1 2 1 1 2 1 1 1 1 1 1 3 1 1 3 1 3 3 1 ", "1 1 1 1 2 3 1 3 1 1 2 1 3 1 1 2 3 2 3 3 2 1 1 1 1 ", "1 1 2 3 1 2 1 1 2 2 1 2 2 2 2 1 1 3 1 1 3 1 3 1 1 ", "1 2 1 3 3 1 2 2 1 3 3 1 2 3 1 3 3 1 1 1 3 1 1 2 1 ", "1 3 1 1 3 1 1 1 1 3 3 1 2 1 1 1 1 3 1 1 2 1 2 1 1 ", "3 1 1 2 2 1 2 3 1 3 3 1 3 3 1 1 2 1 3 2 1 1 1 3 1 ", "1 2 1 2 1 1 1 3 1 3 3 2 1 2 2 1 3 1 2 1 2 1 2 2 1 ", "1 3 2 1 1 1 3 2 2 3 2 1 3 1 1 1 1 1 2 1 1 1 1 2 2 ", "2 1 1 3 1 2 1 1 1 1 2 3 1 2 2 1 1 2 1 1 2 1 3 1 1 ", "1 1 1 2 1 1 1 2 3 3 2 2 1 1 1 2 3 1 3 2 2 2 3 1 3 ", "1 3 1 1 1 1 2 2 2 1 2 1 2 1 2 1 1 1 1 1 1 1 2 1 2 ", "1 2 2 3 2 3 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 3 1 3 1 ", "1 1 1 1 3 3 1 2 2 1 3 3 3 2 3 1 1 3 2 1 1 3 1 3 1 ", "1 3 1 1 1 1 1 2 1 1 3 3 3 3 1 1 1 1 2 1 1 2 3 1 2 ", "1 1 1 1 1 3 1 1 2 1 1 1 2 1 1 1 1 1 1 3 1 1 3 1 1 ", "2 3 2 1 2 1 2 1 3 1 3 1 3 1 1 3 1 1 1 2 2 2 1 2 1 ", "1 1 1 3 3 2 1 3 1 3 1 1 1 1 1 1 1 2 2 1 1 1 1 2 1 ", "1 2 1 3 2 2 1 2 2 3 3 3 1 3 2 3 2 1 1 2 1 3 2 2 1 ", "2 3 1 1 2 3 2 1 1 3 1 1 1 1 1 1 1 1 3 2 1 1 2 1 1 ", "3 1 1 1 3 3 2 1 2 3 1 1 2 1 1 1 1 1 2 1 1 1 2 2 3 ", "2 3 3 1 2 3 3 1 1 1 1 2 2 1 3 2 1 3 1 1 3 1 1 1 1 ", "1 3 3 1 1 3 1 1 1 1 3 2 1 1 3 1 2 3 1 1 1 1 2 1 1 ", "1 1 3 3 2 3 1 2 2 3 1 1 1 2 2 3 2 1 3 2 1 1 1 1 2 ", "3 3 2 2 1 3 1 1 3 1 1 1 3 2 1 1 1 1 1 1 3 2 1 2 1 ", "1 2 2 2 1 2 1 1 1 1 1 3 3 1 1 1 1 3 2 1 1 2 3 1 1 ", "2 1 1 1 2 1 1 2 2 3 2 2 1 3 1 1 3 1 3 3 3 1 2 1 1 ", "3 3 3 3 1 2 1 2 2 1 3 2 3 1 2 1 2 1 3 3 1 3 1 1 2 ", "2 1 3 1 1 1 1 1 1 1 3 1 1 2 1 2 3 2 1 2 3 1 3 1 1 ", "1 3 2 3 1 3 1 2 2 2 2 2 1 1 1 2 1 1 3 1 1 1 1 1 1 ", "1 3 2 1 1 1 3 1 3 2 1 1 1 1 1 1 3 1 3 1 3 3 1 1 1 ", "1 3 3 2 2 1 1 1 1 3 2 3 1 1 3 1 1 3 2 1 1 2 3 1 1 ", "3 2 2 2 1 2 1 1 1 1 3 1 2 1 1 2 1 3 1 1 1 3 1 3 2 ", "3 1 1 1 2 1 3 1 3 1 3 1 2 3 1 1 2 3 2 1 1 3 2 2 1 ", "2 1 3 3 2 1 1 1 1 3 1 1 2 2 1 3 1 3 1 1 1 3 1 3 1 ", "1 3 1 3 2 1 1 2 1 3 3 1 1 1 1 2 3 3 3 1 2 1 1 2 3 ", "3 2 3 1 1 1 1 2 1 1 1 3 3 2 2 2 2 3 1 1 1 1 3 3 2 ", "2 1 2 1 2 1 2 1 1 2 1 2 2 1 1 1 2 1 1 1 2 2 1 3 1 ", "3 1 3 3 1 1 1 1 1 2 3 1 3 1 3 1 1 2 1 3 1 2 1 3 3 ", "2 1 3 1 1 2 1 2 1 3 1 1 3 2 2 1 3 3 1 1 1 2 1 3 2 ", "1 1 1 2 3 1 3 1 1 3 3 3 3 1 2 1 2 3 1 3 1 1 1 1 2 ", "1 1 3 3 1 2 1 2 1 2 1 1 2 3 3 1 1 2 3 1 1 1 2 3 2 ", "1 3 1 2 3 2 1 1 1 2 1 2 3 1 1 1 3 1 1 2 1 2 1 2 3 ", "1 3 1 1 1 2 2 2 1 1 3 1 3 1 3 3 3 1 2 2 2 2 1 3 1 ", "3 2 1 1 1 1 3 3 2 1 1 3 1 1 2 1 1 1 3 1 1 3 2 1 1 ", "1 2 1 3 3 1 1 1 1 2 2 3 1 1 3 3 1 1 1 1 2 1 3 3 2 ", "1 1 1 1 3 3 2 2 2 3 2 1 2 3 2 1 1 2 1 2 1 1 1 3 3 ", "2 1 1 1 1 3 1 1 1 3 1 1 1 1 3 1 3 2 1 1 3 3 1 1 1 ", "1 2 3 1 1 1 2 2 2 1 2 1 3 3 3 2 3 1 1 3 1 1 2 3 1 ", "1 3 1 2 3 2 3 1 1 2 2 1 1 2 3 3 1 1 1 2 1 3 1 2 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {"B G W Q M M C A T A X S Q V O E Y I Q W P A D D G ", "G V E B E P S C E T U A M C C B W P W W D Y M Y I ", "I V K Q C N Z K U T E R H J E C K Y O K C G V Q T ", "N K Q U A M Q I C Q U C M Y I A I U M V I C I W R ", "A P E S M Q G A G Q Y A C W C J G E S M Q J G C S ", "A W F I Q C Q E W C A A C A R W Q C K J O M U O T ", "K Y M M I A E W C E D P N V Q G S U X U K A R E Q ", "A R A I M A M G G M K I C Q N K O R A V O Y C A Q ", "W O Y A W S Y A C F U C M C S T Q G X A H A M U E ", "K C U N P W S K G N A M C G M P Y A W A N H Y A Q ", "Y G H N T A D J Z W C Y K D F S F K Q Y A Q U M O ", "E Q W K M G H U W A C U K M S X U S M I S P Y B P ", "A Z E O U G W N K N N A K A K S E Y Y R O A U J J ", "Y V M R A A I O S C A F I X A S V Y N L R U K Y I ", "K E I A A O I Y G O I A U O N P G N Q U K R O H Z ", "G T A Q Z H O X F Q Y I B A N A C S G S I C M Z Y ", "B D S G G H I R B D I Q K W W S F R T A H Z B H H ", "I U F O L I C M E N U A Y N A Y M C C X O S C C K ", "T X S Y U K M S O O D Y A L V G Q Y A A K E A A V ", "I S E Z O O V S A P S A I E O G U L A W W A V S M ", "U P Y S S Y U M J O W C G O H Y W A C O J I W A K ", "W V S H A G K K D W G O M E Y Y P E W U K I C M H ", "C P P I I O C E U I A Y S A J Q C K F O P B Z M Q ", "P G U S I K H S X X O R N A C Y M S G G G B K Q K ", "E Y W W G Y W E U Z K O M V J L S M Q Y O N G S A ", "Y M I D G M F I X G H Q S E P A C A M H U W G C I ", "C B A N D N A O C I I S K H K C Z Q Q Z Z A M A Q ", "U X E W E J Y X C U Q A E Q S M L W G A D M Q F O ", "N X S E Y G D Y Z W D S A I Q I G Y F G J E G Y N ", "N M W I G W Q Q M O M E S E E A W C M E G M M Y F ", "A R G D P L G K B X J C E O Y L A O I I X P Y E O ", "Y T U V G J G R J Q A B E K B C B C B S A M J B U ", "C O I G G L U K B I C A B P M G P P W A H F U K K ", "U W L Q I N Q G W Y C F Y U Q L C J Q N H H U G Q ", "S E Z E F A E L F U I I Q O A I W A S Y Y A A C Y ", "E I M A B Q P N A U Y E Q T K L A C Y I I P C S I ", "C C A S E A P Q S K O Y C Y Z C U A X K L A G U K ", "W O K C A Q L A Z G Q N C M M Q S G K Y Z A Z K L ", "E R U N P O G X U N A C V U A W Y S Y E A R M M N ", "A K K E E I A W Y U S C E A T U M Z S F N D Y U U ", "Q I G U Z P Q E L K O B Y M Y K Y Y H K H A O H N ", "V Y I F J G W N U A H M O Y M A Q Y E P A C L C E ", "E I W U Y M U B C P G Q G R P C J M E G I T A M S ", "I M B I S H Q E I Y N C Y Y L A D Z E L A P S K O ", "A W U O Q T Y C Y O A A Y G Z I V B R W P A X W M ", "Q M C M K W I C F T S K E E I C K Y C S H K Q R D ", "F E U S A A C M G U M O W C L O Y A F Y Y I D I U ", "G A O A C T W G M E B I G Z W F N F Y Y Q A J E E ", "A J W I A U K W G Q O O Y Y G V L E Q M U T U S C ", "G Q M A W A D U Y O Y Z A A Q O E C S A C J I M D"};
    int k = 116;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "B", "B", "B", "B", "B", "B", "B", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "D", "D", "D", "D", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "F", "F", "F", "F", "F", "F", "F", "F", "F", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G"};
    if(result == expected) {
        cout << "Test Case 110: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 110: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test111() {
    vector<string> x = {"1 2 1 1 1 2 1 1 1 1 1 1 2 1 2 1 1 1 1 2 1 1 1 2 1 ", "1 1 1 2 1 2 2 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 2 1 1 2 2 1 2 1 1 1 2 2 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 1 2 2 2 ", "2 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 2 1 2 2 2 1 1 2 1 ", "1 1 1 1 1 2 1 2 2 2 1 1 1 2 1 1 1 1 2 1 2 2 1 1 2 ", "1 1 2 1 2 1 2 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 ", "1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 2 1 1 2 2 ", "1 1 1 1 1 2 2 2 1 2 2 1 1 1 1 2 1 1 1 1 1 1 1 2 1 ", "1 1 2 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 ", "1 1 2 1 1 1 2 1 2 1 1 1 1 2 1 1 2 1 1 1 2 1 1 2 2 ", "1 1 2 1 1 1 2 1 1 2 1 1 2 1 1 1 1 2 2 2 1 1 1 1 1 ", "1 1 2 2 1 1 1 1 1 2 1 1 2 1 2 1 2 1 2 2 1 1 1 1 1 ", "2 1 1 1 1 1 1 2 2 1 1 2 2 1 1 2 1 2 1 1 1 1 1 1 1 ", "1 1 2 2 1 1 2 1 2 1 1 1 2 2 1 1 1 1 2 1 2 1 1 1 1 ", "2 1 1 1 2 1 1 1 1 1 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 2 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 ", "1 1 2 1 1 2 1 2 1 1 1 2 1 2 1 2 2 1 1 1 2 1 2 2 1 ", "1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 1 2 2 2 2 1 ", "1 1 1 2 1 2 1 2 1 2 1 1 1 1 2 2 1 2 1 2 1 2 2 1 2 ", "2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 ", "1 1 1 1 2 1 1 2 2 1 1 2 1 1 2 1 1 2 1 1 2 1 1 2 1 ", "2 1 2 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 ", "1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 ", "2 1 1 1 2 1 1 2 1 2 1 1 1 2 1 1 2 2 1 2 1 1 1 1 2 ", "1 1 2 2 1 2 1 1 1 1 1 1 2 1 2 1 1 2 1 2 1 1 2 2 1 ", "2 2 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 ", "1 1 1 2 2 1 2 1 2 1 2 1 1 1 1 1 1 2 1 1 2 1 2 2 1 ", "2 2 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 ", "1 1 2 1 1 1 1 1 1 2 1 1 1 2 1 1 2 1 1 1 2 1 2 1 1 ", "1 1 2 1 1 1 1 1 1 2 1 1 2 2 1 2 2 1 2 1 1 1 1 1 1 ", "2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 2 1 ", "1 1 1 1 1 1 2 1 1 2 1 1 2 1 2 1 1 1 1 1 1 2 2 1 1 ", "2 1 1 2 2 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 ", "2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 2 1 1 1 2 2 1 ", "1 1 1 1 1 2 2 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 ", "1 2 1 1 1 1 1 1 2 1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 1 ", "1 2 1 1 2 1 1 1 2 2 1 1 2 2 2 1 1 1 1 1 2 2 2 1 1 ", "1 1 1 1 2 1 2 1 2 1 2 1 1 2 2 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 ", "1 1 1 1 1 2 1 1 2 1 2 1 2 1 1 1 1 2 2 1 1 1 1 1 1 ", "2 1 1 2 1 1 2 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 1 1 1 1 2 1 2 2 2 2 1 2 1 2 1 1 1 1 1 1 ", "2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 ", "1 1 1 1 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 2 1 1 1 1 2 ", "1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 ", "2 1 1 1 1 1 1 2 1 1 2 1 2 1 1 1 1 2 2 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 2 1 1 1 2 2"};
    vector<string> y = {"1 1 1 2 2 2 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 2 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 ", "2 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 2 1 1 2 1 2 1 1 1 2 1 2 1 2 1 1 1 1 2 1 ", "1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 2 1 2 1 1 1 2 1 1 1 2 1 1 1 2 1 2 1 ", "1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 2 ", "1 1 1 2 2 1 2 1 1 1 1 1 1 1 2 1 1 1 2 1 2 1 2 2 1 ", "1 1 1 1 1 1 1 1 1 2 2 2 1 1 1 1 1 2 1 1 1 1 1 2 1 ", "1 2 1 1 2 1 1 1 1 1 1 2 2 1 1 1 2 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 2 1 ", "1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 ", "2 2 1 1 1 1 2 1 1 2 2 2 1 1 1 1 1 1 2 2 1 1 2 1 1 ", "1 2 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 2 1 1 1 1 2 1 2 ", "1 1 1 1 1 2 2 2 1 1 2 1 1 2 2 1 2 1 1 1 1 2 2 1 1 ", "1 1 1 2 1 1 1 2 2 1 1 1 2 1 1 1 2 1 2 1 1 1 1 1 1 ", "1 1 2 2 1 1 1 1 2 1 1 2 1 1 2 1 1 1 1 1 2 1 2 1 1 ", "2 1 1 1 1 1 1 1 1 2 1 2 2 2 1 2 1 1 2 1 2 2 1 1 1 ", "1 2 1 1 1 2 1 1 1 1 1 1 2 1 1 1 2 2 2 1 1 1 2 2 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 2 1 1 1 1 1 ", "1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 2 1 ", "1 1 2 2 1 1 1 1 2 2 1 2 1 1 1 1 1 2 1 1 1 1 2 1 1 ", "2 1 2 1 2 1 1 1 2 1 1 1 2 2 1 2 1 1 2 1 1 2 2 1 1 ", "2 1 1 1 1 1 1 2 1 1 1 2 1 2 1 1 1 2 2 1 1 1 2 1 1 ", "1 2 2 2 1 1 2 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 ", "2 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 ", "2 1 1 2 1 1 1 1 1 1 1 1 1 1 2 2 1 2 1 1 1 1 2 2 2 ", "2 1 1 1 1 1 1 1 2 2 1 1 1 2 1 2 1 1 2 1 2 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 2 1 1 1 1 1 1 1 1 ", "2 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 2 1 ", "1 1 2 1 1 2 1 1 2 1 1 2 1 1 1 1 1 1 1 2 1 1 2 1 2 ", "1 1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 2 ", "1 2 2 2 2 1 1 1 1 1 1 1 2 1 1 1 1 2 2 1 1 1 1 1 1 ", "2 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "2 1 2 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 2 2 1 2 1 1 ", "1 1 1 1 1 2 1 1 2 2 2 1 2 1 1 1 1 1 2 1 1 1 2 2 1 ", "1 1 1 2 2 1 2 1 2 1 1 1 1 2 1 1 2 2 2 1 1 1 1 1 1 ", "1 1 2 1 1 2 2 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 2 1 1 2 1 2 2 ", "1 2 2 1 1 1 1 1 1 2 2 1 2 1 1 1 1 2 1 1 1 1 2 2 1 ", "1 1 1 2 2 1 1 2 1 1 2 2 1 1 2 1 1 1 1 1 1 1 1 2 1 ", "1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 2 2 1 1 1 2 2 1 1 ", "1 1 1 2 1 2 2 2 1 1 1 1 2 1 1 2 1 1 2 2 1 1 1 1 1 ", "1 1 1 2 2 1 1 1 1 2 1 2 1 1 1 1 1 1 2 2 1 1 1 1 1 ", "1 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 2 1 2 2 1 1 1 1 2 1 1 2 1 2 1 1 1 ", "1 1 1 1 1 1 2 2 1 1 1 2 2 2 1 2 1 2 1 1 1 1 1 1 2 ", "2 1 2 1 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 2 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {"D U I U I E G S A Q O Y C V S Q W X A J W A E M W ", "Y U N L C U C U Z U G N W M Y X X M A O C U J O E ", "A I A K X H J O N J G O E U N Q A H N Y H J G G K ", "C B F C W E Q G D G A E T K Y Y K D F E E W U E K ", "K M Q A E B A G M I W O C B C G A Q C N W K N A W ", "I E U E G T T O P M W G M G A O Q S F M S Q Q U E ", "A Q A A A M A A H P A K U X D W E X T H Q K C S E ", "A G S I G O Y I M S A V W R W G K B W W I D X S A ", "W N K A A V Q Z X S G G W W B P K H K Y C Q M F Q ", "A A U Q G Q E I D L N A O A E S O W N U A R P M T ", "A I B M G A W O E Y C T A U M A H M I Q K H K A N ", "U Q Y K W O I W S I W H I Z E V O I U Q K K K G Q ", "S U A A U F W T W A D A Q Q B Y W U D A G N Q N U ", "A X B I P L Y Z W A M Y A A Y S A P O K I Q O G N ", "K K F U C A Q C M C W M M O D I A Q A K O Z A C Y ", "E U Q Y Q G A I U G F Z J O S U M O C G K N O K A ", "B E Y C Y U G R Z G M T G D C D Q S N Y Q W F O E ", "H A V E M G R W A I Y C E W T B X D Q W K Q O C K ", "S G W A U B I A C U O Y M S I K D E E A A C G A R ", "H S J T P Q Q Y Y Y V Y R P W U F G K K D M U Y M ", "A M N G O R Q Q Y A Q E L S M N S A M G B A U E A ", "M M S B A R H A Y E X M S G L Y V I C O U E Y F C ", "W Y S C I Q R D K I X U G Z I Y Q A X S U H N Y O ", "I U D X A J W O E K C W O A C U P E A S C A V N S ", "F H E U U S G T O A B D K E A A N Q A W D T A A U ", "Z S C A Y A W A Y W E S W C I Z I E Y B W A Y K S ", "U C A V Q S E O O P Q I A W R M T E M K C M K I M ", "A I J W D K E Q Z M P U A O E S R W G G Q I O E M ", "Q B Q Q W L Y E D J D T H A P I U A K C C S X X Q ", "V S A A M F Q E G U E I K L M A I Z N Z B R P E A ", "Y U A A I K C E E L R M Q J W O F Y E F W V C S A ", "K B S A K V D M O K G G M O G X E Q I S M W Z W X ", "W O V X G B T C W G Z W G A Q U K C M C Q I M Q I ", "I Q Y I R M K Q S K S C E U N E A I K A H Q C L B ", "A Q C F C O M Q Q D W G E Z C Y C H O G K E E I Y ", "A E N A P G A K O P O Q M N O X F G W K A U C G P ", "K G S A G G V M K K L U K A C K G Q C A W Q P Q Q ", "U K W Y E C M I Y S V S N J N B A Y U F L A K T Y ", "P M M S U Y U U O A E L A Y Q U J A G W A W M G A ", "M W N M A I B J O Y E H F U W V Q A W A Q E T M C ", "W F M N U F M A C Y Y S I Q A E A G B C J F A A K ", "H I W A G G C U O N E M A P L P G X K E Q N Q M C ", "K A D E Z P E A C B F A U Y O X A Q M S W L A K I ", "E S Y Y R G I K G K Q I Q A G I Y D N M X K Q A A ", "Q T Y G T Y A Y C H O G E Y U E F A Y A E T X Y S ", "M N E Y J T M Q M S O A O U Q W O J D B T D O G O ", "Y A G K A K T S A O Q C Q Q I M T J W L K S U U K ", "I O I I H I M I Q R A W A A V K Q A Q G S I C Q N ", "E A A U E E H S Q A A Y L U G W R O H O Y X A H I ", "S Y C Y K S G G I H E Y F A A D G E I Q K I E H I"};
    int k = 309;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 111: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 111: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test112() {
    vector<string> x = {"2 1 1 1 2 1 1 1 1 1 1 1 2 2 2 1 1 1 2 1 2 1 2 1 1 ", "2 1 1 2 2 1 1 1 2 1 1 2 1 2 2 1 1 1 2 1 2 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 2 ", "1 1 1 2 1 1 2 2 2 1 2 2 2 1 1 1 2 1 2 1 2 1 1 1 1 ", "2 2 2 1 1 1 2 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 2 ", "1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 ", "1 1 1 1 1 1 2 2 2 1 1 2 1 2 1 1 1 1 1 1 1 2 1 1 2 ", "1 1 1 1 1 2 2 1 1 2 2 1 1 1 2 1 1 2 1 1 2 1 1 1 1 ", "1 2 1 1 1 1 1 2 1 1 1 2 1 2 1 1 1 1 2 2 1 1 2 1 2 ", "2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 1 2 ", "2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 ", "1 2 1 1 1 1 1 2 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 2 ", "2 2 1 1 2 2 2 1 1 1 1 2 1 1 1 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 2 1 2 ", "2 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 2 1 ", "2 1 1 1 1 2 2 1 2 1 1 1 2 1 2 2 1 1 1 2 2 1 1 1 1 ", "2 1 2 1 1 2 2 1 1 2 2 1 1 1 2 1 2 2 1 1 1 2 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 ", "1 1 2 1 1 1 1 1 1 1 1 2 1 2 2 1 1 1 1 1 1 1 2 1 1 ", "2 1 2 2 2 2 1 1 1 1 1 2 1 2 1 2 2 2 1 2 1 1 1 1 2 ", "1 2 1 1 1 1 1 1 2 1 2 1 1 1 2 2 1 1 1 2 1 1 2 1 1 ", "2 1 1 2 1 2 1 1 1 2 1 1 2 2 1 1 1 1 1 1 2 1 1 1 1 ", "1 2 1 1 2 2 1 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 2 2 1 ", "1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 2 ", "1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 2 1 ", "2 1 1 1 1 2 1 2 1 2 1 1 2 1 2 1 1 1 1 1 2 1 2 1 1 ", "1 1 1 2 1 2 1 1 1 2 2 2 2 1 1 1 1 1 1 1 1 2 1 2 1 ", "1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 2 2 1 2 1 1 1 2 1 ", "1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 2 1 1 1 1 2 1 1 1 ", "1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 ", "2 2 1 2 2 1 1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 ", "1 2 2 1 2 2 1 1 2 1 2 1 1 2 1 2 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 2 1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 2 1 2 1 1 1 2 1 ", "1 2 1 1 1 1 2 1 1 1 1 2 1 2 1 1 1 1 1 2 1 2 2 2 2 ", "1 1 2 1 1 1 1 2 2 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 ", "2 2 1 2 1 2 2 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 ", "2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 2 1 2 2 2 1 2 1 1 1 1 1 2 2 1 2 1 1 1 2 2 2 1 ", "1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 ", "2 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 ", "2 1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 ", "2 1 1 1 1 1 2 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 ", "2 2 1 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 1 1 2 1 ", "1 1 1 1 1 1 2 1 2 1 1 1 2 1 1 2 2 1 2 1 1 2 2 1 1"};
    vector<string> y = {"2 1 1 2 1 1 1 2 2 2 1 1 1 2 1 1 2 1 2 1 1 2 1 1 1 ", "2 1 1 2 1 1 2 1 1 2 2 2 1 2 1 2 1 2 1 1 2 1 1 1 1 ", "1 2 1 1 2 1 2 2 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 ", "1 2 2 1 2 1 1 2 1 1 1 1 2 2 1 1 2 2 1 1 1 1 1 1 1 ", "1 2 2 2 1 2 2 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 2 1 1 ", "1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 2 1 1 1 1 1 2 1 1 2 1 2 1 1 2 2 1 ", "1 2 2 2 2 2 1 1 1 1 1 1 2 1 2 1 2 2 1 1 1 2 1 1 1 ", "1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 ", "1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 1 ", "2 2 1 1 1 2 1 1 2 1 1 1 1 2 2 1 1 2 1 2 2 1 2 1 1 ", "2 1 1 1 1 2 1 1 1 1 2 1 2 1 1 1 1 1 1 2 1 1 1 1 1 ", "1 2 2 2 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 2 2 1 1 1 1 1 2 1 2 2 1 1 2 1 1 1 1 ", "1 1 1 1 2 1 1 2 1 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 ", "2 1 1 1 1 1 2 1 1 1 1 1 1 2 2 2 2 2 2 1 1 1 1 1 2 ", "1 2 2 1 1 1 1 1 2 2 1 1 2 2 2 1 1 1 1 1 1 1 2 1 2 ", "1 1 1 1 2 1 1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 ", "1 2 2 1 2 1 1 1 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 2 1 2 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 2 1 2 1 1 2 ", "1 2 2 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 2 ", "1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 2 2 1 1 1 1 1 1 ", "1 1 1 2 1 2 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 2 ", "2 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 2 1 2 1 1 1 2 1 1 ", "1 1 2 1 1 1 1 1 2 2 1 1 1 1 2 2 1 2 2 1 1 1 1 2 1 ", "1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 2 ", "1 2 1 1 1 2 2 1 1 2 1 1 2 1 1 2 1 2 1 1 1 1 2 1 1 ", "1 1 1 1 1 1 1 2 1 1 2 1 1 1 2 1 2 1 2 2 1 2 2 1 1 ", "1 1 1 1 2 2 1 1 2 2 2 1 1 1 2 2 2 1 1 1 1 2 1 2 2 ", "1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 ", "1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 2 1 1 ", "2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 2 ", "2 1 1 1 2 1 2 2 1 2 2 1 1 1 1 1 2 2 1 1 2 1 1 2 2 ", "1 2 2 1 1 1 1 1 1 1 1 2 1 2 2 2 1 1 1 2 1 1 1 2 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 1 1 2 1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 ", "1 2 1 1 1 2 1 1 1 2 1 1 2 1 1 1 1 1 2 1 1 2 1 1 1 ", "1 1 1 1 1 2 1 2 1 2 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 ", "2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 1 1 1 ", "1 1 2 1 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 2 ", "1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 2 1 1 ", "2 1 1 2 1 1 1 1 2 2 2 1 2 1 1 2 2 1 1 1 1 1 2 1 2 ", "1 1 1 2 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 ", "1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 2 1 ", "2 1 1 2 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 ", "1 1 1 2 1 1 1 2 2 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {"A I E A I Y X M L U J U F P U S R V R I R Q T C A ", "G O E D I U C H L Q E I N Y A Q A I H U G T W S M ", "C W Q U J U W F W I M O S B A U R A A S A M U E Y ", "Y L M A Y A A B N A S G K Q C I E G U E Z N C L I ", "A Q Q H U G B R U G Q Y J A K Y B O U S G A W Q R ", "C Y G W P C M Q Y R A Q E G G U C C I W Y Q A O C ", "C A A H L C Q E N Y D Z H U A T O E A Q F I G K M ", "I O P M T I I I Q R A K N Y A G N A N Q L Z C E E ", "H A E O W H G C A C A V W M O A Y J A U Y U A A D ", "W O Z Z A S D O N R A N U R I J G P O Z A J M N N ", "W C J J O Y E A D V Q J P A A G K U O P Y A G Y E ", "W S N K U K M R R C A Q K R X W P C C O G N S Q H ", "K W I U K T W Q B G C S Y W M M I Q W S W I L E J ", "E E B U Y Y M U A D P G Q A K Y A E Y F O C E R U ", "B I D O E N G E S Y M D A V U W F A W K E O L A V ", "I A A W A E Z K E O O C K C J U N A S V E U Z H W ", "Y K R O Q B U K B E L F W W B W Z N M I A T A V U ", "N M O T Y I E N Q S K Z Z S A D C C K E O O I C C ", "S U A U U P E A Y U C S U K Q Z M F A W N S A R I ", "C K N A O P U U G Y I E M C U O O L A U E C H G S ", "K J M Q A K I S I I G W U Z R W N C E A M M C O T ", "C K M B G U M K Q I I Y I B O N G K X B V J K R N ", "A E O S E A Q C Y H K A C S E A Y A A C Y A A V W ", "S A P I N W J E I G T Z E O N Q A S Y A X O C U K ", "M C S N N P X N T W S E C K C G K A I O W O Y F Z ", "E C K I K K W S K Q N Y I E A A A E H Z Y A A R E ", "O U J F E K C W Z K C S J A O A R C E A K R H L I ", "F I W G U G N N L M U S O Q H H O W M A F W O R I ", "C K Y K I C I Y A O A A Q W V E E K G N C Q V G C ", "F C W W M G P M Y W Z N M G M R J W M N G A V A F ", "I Q H S W X Y I Y L U U Z E A U C C A P Y Y K I E ", "Y U H I O O C O A E C S Q S O R E E H Z I K X O A ", "N B W Z O S Q B Q D N U J Q G J E F D K M D R E E ", "N M L A M I O Q V C I U Y Y E S Q M I A I Q K G D ", "Q D N P C V G Q A C W Q S A H W C W S L A N K K O ", "W A E A G A A S Q L J S I P M C E G X Q K I C S Y ", "H E O Y U P S M Q Y K S G M S E B K A Y A M V A A ", "Z N G N H Z A K V C V G A Y F A G L A K S E J E C ", "N J I Q V Q E K A W E U V W I C K R Z W I K M A O ", "L K N A T W G E H Q S G O M E G Y N O I A A S K W ", "E G N Z O U A A K E J M F S I H M M T K C S U N A ", "J K C C O U E L I B S A I L Q L Y H M M U K Y C R ", "K I E S A G F T Y W E K I G D I M U S M J C Y U G ", "A W A A O Z B W A L K W A A B Y T I E M W K G L U ", "G G C R I O U M P E Z T H L E I X A B A Z N Y U G ", "P Y U A S E S E A S A V U J G Q G N I E A K A U A ", "S W E Q V A A D U N G A J O U V Y Z Z Z S G R M X ", "N I O M E C M T N N F W C Z K P Y E I Y Y M M W C ", "W A Z U S A A V P G R L C H C U A G T L K Q S G J ", "E E G X K Z E G E O V K A N P M N O A N U E M Z O"};
    int k = 374;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "B", "B", "B", "B", "B", "B", "B", "B", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "D", "D", "D", "D", "D", "D", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "G", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "J", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M", "M"};
    if(result == expected) {
        cout << "Test Case 112: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 112: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test113() {
    vector<string> x = {"1 1 1 1 1 2 2 1 1 1 1 2 2 1 1 2 2 2 1 1 1 1 1 2 1 ", "1 1 1 1 1 1 1 2 1 1 2 2 1 1 1 1 2 1 2 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 1 1 1 1 1 2 2 2 1 2 2 1 1 1 2 1 1 2 ", "1 2 1 1 2 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 ", "1 1 1 1 1 2 1 1 1 2 2 1 1 2 2 2 2 1 2 2 2 1 1 1 1 ", "1 2 1 1 1 1 1 2 1 2 1 2 1 1 1 2 2 1 1 1 1 2 1 1 2 ", "1 2 1 1 1 1 1 1 2 2 2 1 1 1 2 2 1 2 1 1 1 1 1 1 1 ", "1 2 1 1 2 2 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 ", "1 1 1 1 1 1 2 1 1 1 1 2 1 1 2 1 1 2 1 1 1 1 1 1 1 ", "1 1 2 1 1 1 1 2 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 2 ", "1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 2 1 1 1 ", "1 2 2 2 2 2 1 1 1 2 1 1 2 2 1 1 1 1 2 1 2 1 1 1 1 ", "1 1 1 2 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 2 1 1 1 1 ", "1 1 1 1 1 2 1 2 1 1 1 2 2 1 2 2 1 1 2 1 1 2 2 1 1 ", "1 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 2 ", "2 2 1 1 1 1 1 1 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 2 ", "1 1 1 2 1 2 1 1 1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 ", "1 1 2 1 2 1 1 2 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 2 1 1 1 1 1 2 1 1 2 1 2 2 1 1 1 2 2 1 2 2 1 ", "1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 2 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 2 1 1 2 1 2 1 1 2 ", "1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 2 2 1 2 2 1 1 1 1 ", "1 1 1 2 2 1 2 2 1 2 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 ", "2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 2 1 1 2 1 1 ", "1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 2 2 1 2 1 2 ", "1 2 2 1 1 2 1 2 1 1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 2 1 2 2 2 1 ", "1 1 1 1 1 1 2 1 1 2 2 2 1 1 1 1 2 1 1 1 1 1 2 1 1 ", "1 1 1 1 1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 2 2 ", "2 2 1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 2 2 1 1 1 2 ", "2 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 2 1 2 2 1 2 2 ", "1 2 1 1 2 1 1 1 1 2 1 2 1 2 1 1 1 2 1 1 1 1 2 1 1 ", "1 1 2 1 2 1 1 1 1 2 1 2 1 2 2 1 1 1 1 1 1 2 1 1 1 ", "1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 ", "1 1 2 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 2 1 2 ", "1 1 2 2 1 2 1 1 2 1 2 1 1 1 1 1 1 2 2 1 1 1 2 2 1 ", "1 1 2 1 1 1 1 1 1 1 1 2 1 2 2 1 2 1 2 1 1 1 1 1 1 ", "1 2 1 1 2 1 1 2 2 1 2 1 1 1 2 1 1 2 1 1 1 1 1 1 2 ", "1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 2 1 1 2 2 2 2 1 1 1 ", "2 1 1 1 1 2 1 1 1 1 1 1 2 2 1 1 2 1 1 2 1 1 1 2 2 ", "2 1 1 2 1 1 2 1 1 1 1 2 1 1 1 2 1 2 1 1 1 1 2 1 1 ", "1 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 ", "1 2 2 1 1 1 1 2 1 1 1 2 1 1 1 1 2 1 1 1 2 1 1 1 2 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 2 1 1 2 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 2 2 1 1 1 2 1 1 1 1 1 1 1 1 1 2 2 1 1 1 2 ", "2 1 1 1 1 2 1 1 2 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 ", "2 2 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 2 1 1 2 1"};
    vector<string> y = {"1 1 1 1 1 1 2 1 2 1 1 2 2 1 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 1 2 2 1 1 ", "1 1 1 1 2 1 1 2 2 2 2 1 1 2 1 1 2 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 2 1 1 1 1 1 1 2 1 ", "2 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 2 2 2 1 ", "2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 2 2 1 1 1 1 1 ", "1 1 1 1 2 1 2 1 2 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 2 ", "1 1 1 1 1 1 2 2 1 2 2 2 1 1 2 2 1 1 2 1 1 2 1 1 1 ", "1 1 1 2 2 1 2 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 ", "1 1 1 1 1 1 2 1 1 1 2 2 1 1 1 1 2 1 1 1 1 2 1 1 2 ", "1 1 2 2 1 1 1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 2 2 ", "1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 2 1 2 2 2 1 1 2 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 2 1 2 1 2 1 1 2 1 1 1 2 1 2 ", "1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 2 ", "2 1 1 1 2 1 1 1 1 2 1 1 1 2 2 1 1 2 2 2 1 1 1 2 1 ", "1 1 1 1 1 2 1 1 1 2 1 1 1 1 2 2 2 2 1 1 1 1 1 1 2 ", "2 1 2 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 2 2 1 1 1 ", "1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 ", "2 2 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 ", "1 1 2 1 2 2 2 1 2 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 1 ", "1 1 1 1 2 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 2 1 1 1 1 ", "2 1 1 2 1 1 1 1 1 1 2 1 2 2 1 1 1 2 1 2 2 2 2 1 1 ", "1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 ", "1 2 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 2 1 2 1 1 ", "1 2 2 1 1 1 2 1 2 2 1 1 1 2 1 1 1 2 1 2 1 1 1 1 1 ", "2 1 1 1 1 1 2 1 1 1 1 1 2 1 2 2 2 1 1 1 1 1 1 1 1 ", "1 1 1 2 2 1 1 1 1 1 2 1 1 1 2 1 2 1 1 1 1 1 1 2 1 ", "1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 2 2 2 2 1 2 1 ", "1 1 1 1 1 1 2 1 2 1 1 1 1 2 2 1 1 1 1 2 1 1 1 1 1 ", "1 2 2 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 2 2 2 1 1 1 ", "1 2 1 2 2 1 1 1 2 1 2 1 1 2 1 1 1 1 2 1 1 1 1 1 2 ", "1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 2 1 2 2 1 1 1 1 1 2 ", "1 1 1 1 1 2 1 1 2 1 1 2 2 1 2 2 1 1 1 1 1 1 1 2 1 ", "1 1 1 1 2 1 1 1 1 2 1 2 1 1 1 2 1 2 1 1 1 1 1 1 1 ", "1 1 1 2 2 1 1 2 1 1 2 1 1 1 1 2 1 1 1 1 2 1 2 1 1 ", "1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 2 1 1 1 1 1 2 2 1 ", "1 1 1 1 1 2 1 1 1 2 1 2 1 1 2 1 1 1 1 1 1 1 1 2 1 ", "2 1 1 1 1 1 2 2 1 1 1 1 1 2 1 1 2 1 2 2 1 1 1 1 2 ", "1 1 2 1 1 1 1 2 1 1 2 1 1 2 1 1 1 2 2 1 2 2 1 1 2 ", "1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 ", "1 1 2 1 1 2 1 1 2 2 1 1 2 2 1 2 1 2 2 1 2 1 1 1 2 ", "1 1 1 2 2 1 1 1 1 2 1 2 2 1 1 1 2 2 1 1 1 1 2 2 2 ", "1 1 1 2 1 1 2 1 1 2 1 1 2 1 2 1 1 1 2 1 1 1 1 1 2 ", "1 2 1 2 1 1 1 1 2 2 1 1 1 1 2 1 2 1 1 1 1 1 1 2 1 ", "2 1 2 1 2 1 2 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 ", "2 1 1 1 1 1 1 2 1 2 2 1 1 1 1 1 1 2 2 1 2 1 2 1 1 ", "1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 ", "1 2 1 1 1 2 1 1 1 2 1 2 1 1 1 1 2 1 2 2 1 2 2 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 ", "1 2 2 2 1 1 1 1 2 1 1 1 2 1 2 1 1 1 1 2 2 1 1 1 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {"A R Y F G O K N Q H K A E O M E C G Y A G E O G F ", "Z A J X G W Y C Y Y L T U D A N Y R Y G I Y O O I ", "G G A U A M G K D O O Y A G X K E Y T Y R O F O A ", "C Y A N J N A A C Y Y W E N O U K M A I C J S G G ", "W O I I R P I E S E I D H Q C P Y V R G C I W A A ", "M F N A U C W W I R U U Q A U Y O Y O A S Q N M K ", "G W G U Y E C E C N V S S B F V P G G A G W W Q M ", "G T W S W W A C N G G N A M J L A S D A A U I M I ", "C H W Q I C M M E Y I I I H H A I N C Q F Z E T A ", "C X C C O U G K N T U S S I C Y D M A U V Q T C Y ", "K C G Y H W K S L M O C C A F U Y U W C P Q L K S ", "L E K X U K P Q N C Q O T Y A Y J A W Q G U C R F ", "G A I S A A L M A Z S A F I S D I R T V A Z A O A ", "A V P Z Y C E S Q F U K A N K O K W G W I Z M C K ", "G V Z I X S K E K W A C E U U K U M K O F K I A I ", "A N A F R W M O A R V F G Q A J O Q S U U W Y S J ", "B T U M N W O K J E C J N S H I A E S L X N U U C ", "V E M O S O M S Y G M O I E B S A Y O M A G K M S ", "M W Y N K C M Y G K A A K M C Y R O M P U Y C E O ", "E M K H I A W A W E V A Q W E L C E G S T O A E P ", "O T A Z K S N M N W N O R I U U N A S S S F W T C ", "I D G W M K C Y A C I D U U A N G Y V A A X H S P ", "Y Z O F K X A W S A U M B G P N K D K A J T C A Q ", "G R Y A S G C P Q M G A E A Q I I G P P A Z M O E ", "A K K Q Y F W J A O E A Y H M A M A U N Q G N D A ", "A P P U A H B A U K G E M V E P S G O U U N L N K ", "G Y Q Y M E F C A U Z P H Y Y W C Y E C A R O V M ", "N U K C A D M G Y G N Q C A Q E E A R N I W I N M ", "Y M E Q N C W A T K I Y C G Y B U Y A N W E V J V ", "A K A U W Y A T N Q L R O M S M O F J P K M X W K ", "D Y X Y W K Q A R Y O M M G W C Y G S U A M N D Q ", "D Z W S Y A O C B A W O N K Y E U A Q M C A M Y A ", "Q J Y Y I Y U A C O B Q I A G N Z C K R O W U J A ", "I K A Q N S C L E L E S O W G A R A R K A N E G Y ", "Q T G A C Y A Y A I U E A S E S G W I Y B H W G E ", "A O Q I A K A G O A I W Z O Z D M U E S Z O X G O ", "Y A I W E O K E S F W A G S Y C E Y M O E C A I J ", "L A B C Z D Q M M K R B Y I N U A A N A Y M A H A ", "Y C Q M Q Y I E U A M O Q S I G C B G I W W W P R ", "A A W E A J I V I C P N A E I I D E A D U Z O H M ", "U G N S A G X E V A A O P Y C C E T T Y T K S A W ", "O Y G I K E W N K A Y Q O M K W O I S A G U Q O P ", "D U S Y D H C U Y S E Y Q K Y I B E A K W U I Q I ", "M I I O M Q G Q M X C X B O T W O O S A G E G Y I ", "E W U K S I O E C G M W E W K A S Z Z T C D U A S ", "A J C W Y W Y O O I E G E C W E A A A K Z A X W E ", "C A J G B W A C Q A U T C Y E N X W A T N W G U K ", "S O C G C G O A S A I A O P T F S A Y W H K Q J Y ", "Y Q G R G M F G F E A M G C D U M P A B Y S Q K Y ", "O S W O H Q V J K C A I Y O S D S Q G F I A Q N P"};
    int k = 370;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 113: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 113: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test114() {
    vector<string> x = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> y = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {};
    int k = 625;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"};
    if(result == expected) {
        cout << "Test Case 114: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 114: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test115() {
    vector<string> x = {"1", "0 10 11 100 101"};
    vector<string> y = {"1", "0 20 21 20 21"};
    vector<string> lengths = {"10", "0 10 1 10 1"};
    vector<string> names = {"A", "HTUNG B X B C"};
    int k = 3;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AHTUNG", "B", "C"};
    if(result == expected) {
        cout << "Test Case 115: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 115: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test116() {
    vector<string> x = {"1 10 200 210 400 410"};
    vector<string> y = {"1 10 200 210 400 410"};
    vector<string> lengths = {"100 10 100 10 100 10"};
    vector<string> names = {"A C A B A C"};
    int k = 2;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "B"};
    if(result == expected) {
        cout << "Test Case 116: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 116: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test117() {
    vector<string> x = {"1 2 3 6 7"};
    vector<string> y = {"1 2 3 6 7"};
    vector<string> lengths = {"10 3 1 3 1"};
    vector<string> names = {"A B TOPCODER B C"};
    int k = 3;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "B", "C"};
    if(result == expected) {
        cout << "Test Case 117: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 117: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test118() {
    vector<string> x = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> y = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {"A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E ", "A B C D E A B C D E A B C D E A B C D E A B C D E"};
    int k = 999;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D"};
    if(result == expected) {
        cout << "Test Case 118: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 118: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test119() {
    vector<string> x = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 ", "1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 ", "2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 ", "2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 ", "1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 ", "1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 ", "2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 ", "2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 ", "1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 ", "1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 ", "2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 ", "2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 ", "9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 ", "1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 ", "9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 ", "1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 ", "9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 ", "1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 ", "9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 ", "1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 ", "9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 ", "1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 ", "9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 ", "1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 ", "9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 ", "1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 ", "9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 ", "1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1"};
    vector<string> y = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 ", "2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 ", "1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 ", "2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 ", "1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 ", "2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 ", "1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 ", "2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 ", "1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 ", "2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 ", "1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 ", "2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 ", "9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 ", "9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 ", "1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 ", "1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 ", "9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 ", "9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 ", "1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 ", "1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 ", "9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 ", "9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 ", "1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 ", "1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 ", "9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 ", "9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 ", "1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 ", "1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1"};
    vector<string> lengths = {"9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {};
    int k = 650;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 119: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 119: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test120() {
    vector<string> x = {"1 1 1 5 3 7"};
    vector<string> y = {"1 1 1 5 3 7"};
    vector<string> lengths = {"8 8 4 4 2 1"};
    vector<string> names = {"A A B B D C"};
    int k = 4;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "B", "C"};
    if(result == expected) {
        cout << "Test Case 120: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 120: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test121() {
    vector<string> x = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 ", "1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 ", "2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 ", "2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 ", "1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 ", "1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 ", "2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 ", "2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 ", "1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 ", "1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 ", "2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 ", "2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 ", "9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 ", "1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 ", "9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 ", "1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 ", "9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 ", "1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 ", "9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 ", "1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 ", "9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 ", "1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 ", "9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 ", "1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 ", "9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 ", "1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 ", "9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 ", "1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1 9 1"};
    vector<string> y = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 ", "2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 ", "1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 ", "2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 ", "1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 ", "2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 ", "1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 ", "2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 ", "1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 ", "2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 ", "1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 ", "2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 ", "9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 ", "9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 ", "1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 ", "1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 ", "9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 ", "9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 ", "1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 ", "1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 ", "9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 ", "9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 ", "1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 ", "1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 ", "9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 ", "9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 ", "1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 ", "1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1 9 9 1 1"};
    vector<string> lengths = {"9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {};
    int k = 450;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W"};
    if(result == expected) {
        cout << "Test Case 121: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 121: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test122() {
    vector<string> x = {"1 10 10 1"};
    vector<string> y = {"1 10 10 1"};
    vector<string> lengths = {"1 1 1 1"};
    vector<string> names = {"A A B C"};
    int k = 2;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "B"};
    if(result == expected) {
        cout << "Test Case 122: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 122: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test123() {
    vector<string> x = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> y = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {};
    int k = 1000;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 123: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 123: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test124() {
    vector<string> x = {"1", "1 1", "2 3 5"};
    vector<string> y = {"1", "1 1", "2 3 5"};
    vector<string> lengths = {"4 1 1", "0 4"};
    vector<string> names = {"A C A B"};
    int k = 2;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "B"};
    if(result == expected) {
        cout << "Test Case 124: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 124: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test125() {
    vector<string> x = {"1 2 2 1"};
    vector<string> y = {"1 2 2 1"};
    vector<string> lengths = {"1 1 1 1"};
    vector<string> names = {"X X Y Z"};
    int k = 2;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"X", "Y"};
    if(result == expected) {
        cout << "Test Case 125: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 125: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test126() {
    vector<string> x = {"1 3 2 4 5"};
    vector<string> y = {"1 3 2 4 5"};
    vector<string> lengths = {"10 10 8 8 2"};
    vector<string> names = {"A ", "A ", "D ", "C ", "B"};
    int k = 3;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "C", "B"};
    if(result == expected) {
        cout << "Test Case 126: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 126: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test127() {
    vector<string> x = {"1 1 10 10"};
    vector<string> y = {"1 1 1 1"};
    vector<string> lengths = {"2 1 2 1"};
    vector<string> names = {"A Y A X"};
    int k = 2;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "X"};
    if(result == expected) {
        cout << "Test Case 127: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 127: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test128() {
    vector<string> x = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> y = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {};
    int k = 1000;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"};
    if(result == expected) {
        cout << "Test Case 128: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 128: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test129() {
    vector<string> x = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> y = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {"X X X X X X X X X X X X X X X X X X ", "X X X X X X X X X X X X X X X X X X ", "X X X X X X X X X X X X X X X X X X ", "X X X X X X X X X X X X X X X X X X ", "X X X X X X X X X X X X X X X X X X ", "X X X X X X X X X X X X X X X X X X ", "X X X X X X X X X X X X X X X X X X ", "X X X X X X X X X X X X X X X X X X ", "X X X X X X X X X X X X X X X X X X ", "X X X X X X X X X X X X X X X X X X"};
    int k = 60;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X"};
    if(result == expected) {
        cout << "Test Case 129: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 129: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test130() {
    vector<string> x = {"123 453 754"};
    vector<string> y = {"119 487 874"};
    vector<string> lengths = {"1000 500 1"};
    vector<string> names = {"SQUARE SQUARE SQUARE"};
    int k = 3;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"SQUARE", "SQUARE", "SQUARE"};
    if(result == expected) {
        cout << "Test Case 130: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 130: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test131() {
    vector<string> x = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> y = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {};
    int k = 500;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"};
    if(result == expected) {
        cout << "Test Case 131: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 131: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test132() {
    vector<string> x = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> y = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {};
    int k = 1000;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"};
    if(result == expected) {
        cout << "Test Case 132: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 132: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test133() {
    vector<string> x = {"1 10 11 50 60"};
    vector<string> y = {"1 10 11 20 30"};
    vector<string> lengths = {"99 20 2 19 1"};
    vector<string> names = {"A B D B C"};
    int k = 3;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "B", "C"};
    if(result == expected) {
        cout << "Test Case 133: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 133: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test134() {
    vector<string> x = {"1 101 2 102"};
    vector<string> y = {"1 1 2 2"};
    vector<string> lengths = {"10 10 1 1"};
    vector<string> names = {"A A B C"};
    int k = 2;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "B"};
    if(result == expected) {
        cout << "Test Case 134: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 134: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test135() {
    vector<string> x = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 9"};
    vector<string> y = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 9"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {"A A A A A A A A A A A A A A A A A A A A A A A A A"};
    int k = 25;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 135: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 135: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test136() {
    vector<string> x = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> y = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    vector<string> names = {};
    int k = 100;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"};
    if(result == expected) {
        cout << "Test Case 136: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 136: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test137() {
    vector<string> x = {"1 1 10 10"};
    vector<string> y = {"1 1 1 1"};
    vector<string> lengths = {"5 1 5 1"};
    vector<string> names = {"A C A B"};
    int k = 2;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "B"};
    if(result == expected) {
        cout << "Test Case 137: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 137: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test138() {
    vector<string> x = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 ", "5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 ", "5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 ", "5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 ", "5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 ", "5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5"};
    vector<string> y = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 ", "5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 ", "5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 ", "5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 ", "5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 ", "5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5"};
    vector<string> lengths = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 ", "5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 ", "5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 ", "5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 ", "5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 ", "5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5"};
    vector<string> names = {};
    int k = 997;
    TheSquares* pObj = new TheSquares();
    clock_t start = clock();
    vector<string> result = pObj->findSequence(x, y, lengths, names, k);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "C", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "D", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z"};
    if(result == expected) {
        cout << "Test Case 138: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 138: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    test67() == 0 ? ++passed : ++failed;
    test68() == 0 ? ++passed : ++failed;
    test69() == 0 ? ++passed : ++failed;
    test70() == 0 ? ++passed : ++failed;
    test71() == 0 ? ++passed : ++failed;
    test72() == 0 ? ++passed : ++failed;
    test73() == 0 ? ++passed : ++failed;
    test74() == 0 ? ++passed : ++failed;
    test75() == 0 ? ++passed : ++failed;
    test76() == 0 ? ++passed : ++failed;
    test77() == 0 ? ++passed : ++failed;
    test78() == 0 ? ++passed : ++failed;
    test79() == 0 ? ++passed : ++failed;
    test80() == 0 ? ++passed : ++failed;
    test81() == 0 ? ++passed : ++failed;
    test82() == 0 ? ++passed : ++failed;
    test83() == 0 ? ++passed : ++failed;
    test84() == 0 ? ++passed : ++failed;
    test85() == 0 ? ++passed : ++failed;
    test86() == 0 ? ++passed : ++failed;
    test87() == 0 ? ++passed : ++failed;
    test88() == 0 ? ++passed : ++failed;
    test89() == 0 ? ++passed : ++failed;
    test90() == 0 ? ++passed : ++failed;
    test91() == 0 ? ++passed : ++failed;
    test92() == 0 ? ++passed : ++failed;
    test93() == 0 ? ++passed : ++failed;
    test94() == 0 ? ++passed : ++failed;
    test95() == 0 ? ++passed : ++failed;
    test96() == 0 ? ++passed : ++failed;
    test97() == 0 ? ++passed : ++failed;
    test98() == 0 ? ++passed : ++failed;
    test99() == 0 ? ++passed : ++failed;
    test100() == 0 ? ++passed : ++failed;
    test101() == 0 ? ++passed : ++failed;
    test102() == 0 ? ++passed : ++failed;
    test103() == 0 ? ++passed : ++failed;
    test104() == 0 ? ++passed : ++failed;
    test105() == 0 ? ++passed : ++failed;
    test106() == 0 ? ++passed : ++failed;
    test107() == 0 ? ++passed : ++failed;
    test108() == 0 ? ++passed : ++failed;
    test109() == 0 ? ++passed : ++failed;
    test110() == 0 ? ++passed : ++failed;
    test111() == 0 ? ++passed : ++failed;
    test112() == 0 ? ++passed : ++failed;
    test113() == 0 ? ++passed : ++failed;
    test114() == 0 ? ++passed : ++failed;
    test115() == 0 ? ++passed : ++failed;
    test116() == 0 ? ++passed : ++failed;
    test117() == 0 ? ++passed : ++failed;
    test118() == 0 ? ++passed : ++failed;
    test119() == 0 ? ++passed : ++failed;
    test120() == 0 ? ++passed : ++failed;
    test121() == 0 ? ++passed : ++failed;
    test122() == 0 ? ++passed : ++failed;
    test123() == 0 ? ++passed : ++failed;
    test124() == 0 ? ++passed : ++failed;
    test125() == 0 ? ++passed : ++failed;
    test126() == 0 ? ++passed : ++failed;
    test127() == 0 ? ++passed : ++failed;
    test128() == 0 ? ++passed : ++failed;
    test129() == 0 ? ++passed : ++failed;
    test130() == 0 ? ++passed : ++failed;
    test131() == 0 ? ++passed : ++failed;
    test132() == 0 ? ++passed : ++failed;
    test133() == 0 ? ++passed : ++failed;
    test134() == 0 ? ++passed : ++failed;
    test135() == 0 ? ++passed : ++failed;
    test136() == 0 ? ++passed : ++failed;
    test137() == 0 ? ++passed : ++failed;
    test138() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=14970299&rd=10804&pm=8418
********************************************************************************
#include <algorithm> 
#include <bitset> 
#include <cassert> 
#include <cctype> 
#include <cmath> 
#include <complex> 
#include <cstdio> 
#include <cstdlib> 
#include <cstring> 
#include <ctime> 
#include <deque> 
#include <functional> 
#include <iostream> 
#include <iterator> 
#include <list> 
#include <map> 
#include <numeric> 
#include <queue> 
#include <set> 
#include <sstream> 
#include <stack> 
#include <string> 
#include <valarray> 
#include <vector> 
#include <utility> 
 
using namespace std; 
 
#define all(v) (v).begin(), (v).end() 
 
// Types 
typedef long double ld; 
typedef long long ll; 
typedef pair <int, int> pii; 
typedef vector <int> vi; 
typedef vector <pii> vp; 
typedef vector <ld> vd; 
typedef vector <string> vs; 
typedef vector <bool> vb; 
typedef queue <pii> qp; 
typedef map <string, int> msi; 
 
// Constants 
const int INF = 1000000000; 
const ld EPS = 1e-10L; 
const ld PI = 3.14159265358979L; 
 
// Vars 
 
// Functions 
template <typename T> void read(const vs &a, vector <T> &b) { 
  string s; 
  for (int i = 0; i < a.size(); ++i) { 
    s += a[i]; 
  } 
  istringstream in(s); 
  T c; 
  while (in >> c) { 
    b.push_back(c); 
  } 
} 
 
bool cmp(const pair <pair <int, int>, pair <int, string> > &a, const pair <pair <int, int>, pair <int, string> > &b) { 
  if (a.second.first != b.second.first) { 
    return a.second.first > b.second.first; 
  } 
  return a.second.second < b.second.second; 
} 
 
//Interface 
class TheSquares { 
public: 
  vector <string> findSequence(vector <string> x, vector <string> y, vector <string> lengths, vector <string> names, int k) { 
    vector <string> res; 
    int n; 
    vi xx, yy, l; 
    vs t; 
    read(x, xx); 
    read(y, yy); 
    read(lengths, l); 
    read(names, t); 
    n = xx.size(); 
    vector <pair <pair <int, int>, pair <int, string> > > s(n); 
    for (int i = 0; i < n; ++i) { 
      s[i].first.first = xx[i]; 
      s[i].first.second = yy[i]; 
      s[i].second.first = l[i]; 
      s[i].second.second = t[i]; 
    } 
    sort(all(s), cmp); 
    vi a(n); 
    for (int i = n - 1; i >= 0; --i) { 
      a[i] = 1; 
      for (int j = i + 1; j < n; ++j) { 
        if (s[i].first.first <= s[j].first.first && s[i].first.second <= s[j].first.second && 
            s[i].first.first + s[i].second.first >= s[j].first.first + s[j].second.first && 
            s[i].first.second + s[i].second.first >= s[j].first.second + s[j].second.first) { 
          a[i] = max(a[i], a[j] + 1); 
        } 
      } 
    } 
    vi cand; 
    string bw; 
    for (int i = 0; i < n; ++i) { 
      if (a[i] >= k && (bw == "" || bw > s[i].second.second)) { 
        cand = vi(1, i); 
        bw = s[i].second.second; 
      } else if (a[i] >= k && bw == s[i].second.second) { 
        cand.push_back(i); 
      } 
    } 
    if (cand.size() == 0) return res; 
    res.push_back(bw); 
    for (int i = 1; i < k; ++i) { 
      string bw; 
      vi ncand; 
      for (int j = 0; j < n; ++j) { 
        if (a[j] < k - i || bw != "" && s[j].second.second > bw) continue; 
        bool good = false; 
        for (int t = 0; t < cand.size(); ++t) { 
          int b = cand[t]; 
          if (j > b && s[b].first.first <= s[j].first.first && s[b].first.second <= s[j].first.second && 
              s[b].first.first + s[b].second.first >= s[j].first.first + s[j].second.first && 
              s[b].first.second + s[b].second.first >= s[j].first.second + s[j].second.first) { 
            good = true; 
            break; 
          } 
        } 
        if (good) { 
          if (s[j].second.second == bw) { 
            ncand.push_back(j); 
          } else { 
            ncand = vi(1, j); 
            bw = s[j].second.second; 
          } 
        } 
      } 
      res.push_back(bw); 
      cand.swap(ncand); 
    } 
    return res; 
  } 
   
 
}; 
 
 
 
// Powered by FileEdit
// Powered by TZTester 1.01 [25-Feb-2003]
// Powered by CodeProcessor

********************************************************************************
*******************************************************************************/