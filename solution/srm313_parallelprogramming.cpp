/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=6517
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class ParallelProgramming {
public:
    int minTime(vector<int> time, vector<string> prec);
};

int ParallelProgramming::minTime(vector<int> time, vector<string> prec) {
    int ret;
    return ret;
}


int test0() {
    vector<int> time = {150, 200, 250};
    vector<string> prec = {"NNN", "NNN", "NNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 250;
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<int> time = {150, 200, 250};
    vector<string> prec = {"NNN", "YNN", "NNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 350;
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<int> time = {150, 200, 250};
    vector<string> prec = {"NYN", "NNY", "NNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 600;
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<int> time = {150, 200, 250};
    vector<string> prec = {"NYN", "NNY", "YNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<int> time = {1000};
    vector<string> prec = {"N"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 1000;
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<int> time = {345, 335, 325, 350, 321, 620};
    vector<string> prec = {"NNNNNN", "NNYYYY", "YNNNNN", "NNYNYN", "NNNNNN", "NNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 1355;
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<int> time = {960, 758, 847, 14, 768, 805, 676, 244, 51, 447, 593, 353, 987, 894, 390, 423, 647, 810, 508, 8, 736, 474, 622, 434, 943, 198, 931, 974, 512, 733, 273, 170, 905, 554, 84, 540, 779, 75, 415, 550, 637, 761, 599, 938, 104, 59, 305, 790, 416, 92};
    vector<string> prec = {"NNNYNNNNNNNNNNNNNNNNNNNYNNNNNYNNNNNNNYNNNNNNNNNNNN", "YNNYNNNNYNNNYNNNNNNYNYYYNYNNYYNNNNNNNYYNNYNNNNYNYN", "NYNYNNNNYNNNYNNYYNYNNYNYYNYNYNNNNNNYYYYNYYNNNNYNYY", "NNNNNNNNNNNNNNNNNNNYNNNYNNNNNYNNNNNNNNNNNNNNNNNNNN", "YNNNNNNYYYYYYYYYYYNYYNYYYYNYYYYYYYYNYNYYYYYYYNYYNN", "YYNNNNNNNNNNYNNYYNNYNNNYYNYNNYNNNNNYNYYNYYNNNNNNYN", "YYYYNNNNYYNNYNYYYNYNNNYYYNYNYYNNYNNNNYYNYYNNNNNNYY", "YYNYNYYNYYNYYNYNYNYYNYYYNYYYYYNNYNYYYYYYYYYNNNYNNY", "YNNYNNNNNNNNNNNNNNNYNNNNNNNNNYNNNNNNNYNNNYNNNNNNNN", "YYNYNYNNNNNNNNNNYNNYNYYYYYYNNNNNNNNNNYYNYYNNNNNNYN", "YNYYNYYNYNNYYNYYYNYYNYYYYYYNYYNYNNNYYYYYNNYNNNYNYY", "YYYYNYYNNNNNYNYYYNYNNNYNYNYYYYNNNNNYYNYNYYYNNNYNNY", "YNNNNNNNNNNNNNNNNNNNNNNYNNNNNYNNNNNNNYNNNYNNNNNNNN", "NNNYNYYNYYNYYNYYNYNNNNYNYYYNNYNNYYYNYYYYYNYNYNYYYY", "YYNYNYNNYNNNYNNYYNNYNNYYNNNNYYNNNNNNNYYNYYNNNNYNYY", "YYNNNNNNNNNNYNNNNNNYNYYYYYYNYYNNNNNNNYYNYNNNNNYNYN", "YNNYNNNNYNNNYNNYNNNNNYYYYNYNYYNNNNNYNYNNYNNNNNYNYN", "YYYYNYYYYYNNYNNYYNYYNYYYYYYYYNNYYYYYYYNYYYYNYNYYYY", "NYNYNYNNNNNNNNYYYNNYNYYYYNYNYYNNNNNYYYNNYYNNNNYNYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYYNNYYYNYYYYYNYYYYNNNNYNYYNNYYYYYNNYYYYNNYNYNYYYY", "YNNYNNNNYNNNNNNNNNNYNNYYYYNNYYNNNNNNNYNNYYNNNNYNYN", "NNNNNNNNYNNNYNNNNNNNNNNYYNNNNNNNNNNNNNNNNNNNNNNNYN", "NNNNNNNNNNNNNNNNNNNYNNNNNNNNNYNNNNNNNNNNNNNNNNNNNN", "YNNNNNNNYNNNYNNNNNNYNNNYNNNNNYNNNNNNNYNNNYNNNNNNYN", "YNNYNNNNYNNNYNNNNNNYNNNNYNNNYYNNNNNNNYNNYYNNNNNNNN", "YNNNNNNNNNNNYNNNNNNYNYYYYYNNYNNNNNNNNYYNYNNNNNYNYN", "YYYYNNYNYYNNYNYYYNYYNYYYYYYNYYNNYNNYNYYNYYYNNNNNYN", "NNNYNNNNYNNNYNNNNNNYNNNNYNNNNYNNNNNNNYNNNYNNNNYNNN", "NNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYYYNYYYYNYYYNYYNYYNNYYYYYYYYYNYYYYYNYYYNYYNYNYYYY", "YYNYNYYNYYNNNNYNYNNYNYYYYYYNNYNNYNYNYYYNYNYNNNYNYY", "NYNNNNNNYNNNNNNYYNNYNYYYYYNNYYNNNNNYNNYNNYNNNNYNYN", "YYYNNNNNYNNYNNYYNNYYNYNYYNYNYYNNNNYYNYYYNYYNNNYYYN", "YNYYNYYNNNNNYNYYNNYYNYNYYYYYYYNNYNNYYYYNNYYNNNYNNN", "NYNYNNNNNNNNYNNYNNNYNYYNYYYNYYNNNNNNNYYNYYNNNNNNNN", "YYNYNNNNYYNNYNYNYNNYNYYYNNYNYYNNYNNYNYYNNYNNNNYNYY", "NNNYNNNNNNNNNNNNNNNYNNNNNNNNNYNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNYNNNYNNNNNNYNNYYYYNNNYNNNNNNNYNNYNNNNNYNYN", "YYYYNYYNYYNNYNYYYNYYNYYYYYNYYYNNYNYYYYYNYNYNNNNYYY", "YNNYNNNNYNNNYNNNNNNYNNYYYNNNYYNNNNNNNNNNNYNNNNYNYN", "NNNYNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNN", "YYYNNYNNYYNNYNYYYNYYNYYNYYYNYYNNYNNNNYYNYYNNNNNNYN", "YNYYNNYYYNNYYYYYYYYNNYYYYNYYYNNYYYNYYYYNNYYNYNYYYY", "YNYYNYNYYYNYYNYNYNYNNNYYYYYYYYNYYNNYYYYYYNNNNNYNYY", "NNYYYYYYYYNYYNYYYNNNNNYYYNYYNYNYYYYNYYYYYNNYNNYYYN", "YNNYNNNNNNNNNNNNNNNYNNYYYNNNNYNNNNNNNYNNNYNNNNNNYN", "YYYNNYYNYYNYYNYYYNNNNNYNNYYNYYNNNNYYYYNNYYNNNNYNYY", "YNNYNNNNNNNNYNNNNNNYNNNNNNNNNNNNNNNNNYNNNYNNNNNNNN", "YYNYNYNNYYNNNNNYNNNYNYNNNNYNYNNNNNNYNYYNNNNNNNYNYN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 21093;
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<int> time = {5, 402, 271, 779, 259, 741, 15, 895, 165, 672, 559, 505, 772, 529, 38, 269, 16, 576, 626, 512, 838, 437, 82, 896, 369, 187, 424, 237, 814, 401, 318, 642};
    vector<string> prec = {"NNNNNNYYNNNNNNNNYYNNNNNNNYNNNNNN", "YNYYNYNYYNNNYYYNNNNNNYNNNNNNNYNN", "YNNNNYYYNNNYYYNNNYNNNYNYNNNNNNNY", "YNNNNNYNNNNNYNNNNYYNYYNYNYYYNYNY", "YNNNNNNNNNNNYYNNNYYYNYNYNNYNNNNN", "NNNNNNNNNNNNNNNNYYNNNNNYNYNYNNYN", "NNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNN", "NNNNNNYNNNNNNNNNYYNNNNNNNNNNNNNN", "NNNNNNNNNNNNYNYNNYYNNYNYNYYYNYNY", "YNNNNNYNNNNNNNNNNNNNNNNNNYNYNNNN", "NYYYYYNNNYNNYNYYNNNYNYNNNNYYNYYN", "YNNNNYYNNNNNNNNNNYYNNNNNNNYYNYYY", "NNNNNYNNNYNYNYNNNNNYYYNYNNNNNNNY", "NNNNNYYNNNNNNNNNNNNNNYNNNNNNNNNN", "YNNNNNYNNNNNNNNNNNNNNYNNNNNNNNNY", "NYNYYNNNNNNNYYNNYYYNNNNNNYNNNYYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNYNNNNNNNNNYNNNNNNNNYNNNNNN", "NNNNNNNNNNNNNNNNNYNNNNNNNYNNNNNN", "NNNNNYNYNNNNNNYNYNNNNNNYNYNNNNYN", "NNNNNNNNNNNNNNYNYNNYNYNNNNNNNNYN", "YNNNNYNNNNNNNNNNYNNNNNNNNYNYNNYN", "NYYNYNYNNNYNNNNYNNNYNNNNYNYNYYYY", "YNNNNNNYNNNNNNNNNYNNNNNNNNNYNNYN", "NYNNNNYYNNNYYYYNYYYYYYNYNNYYNYYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNYYYNNNNNNNNNNNNNYNNNYNYNNNY", "NNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNN", "YNNYNNYYYNNYYNNNNNNNNNNYNNNYNYYY", "NNNNNNYYNNNNNNNNYNNNNYNNNYNYNNNY", "NNNNNNYYNNNNNNNNNNNNNNNNNNNNNNNN", "YNNNNYYNNNNNNNNNNNYNNNNNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 8506;
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<int> time = {208, 964, 636, 117, 597, 395, 33, 445, 114, 160, 48, 433, 245, 880, 585, 575, 595, 838, 50, 116, 88, 681, 539, 350, 3, 681, 603, 682, 888, 174, 875, 969, 476, 151, 910, 635, 164, 545};
    vector<string> prec = {"NYYYYNNYNYYYYYYYYNNNYYYYYYYYNYYYYYNYNY", "NNYYYNNNNYYYNYYYNYNYYYYYNYYYNNYNNYNYNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYNYNNNNYYYNYYYYNNYYYNYYNNYNYYNYYNYNY", "NNYNNNNNNNNYNNNNNYNNNNNNNNNNNNNNNNNNNN", "NNYYYNNYNYNYNYYNNNNYYYYYYYNNNYYNYYNYYY", "YNNNYYNYNNYYYYYYYYYYYYYYNYYYNNYYYYYYNY", "NYYNYNNNNNYYYYYYYYNYNYYYYYYNNYYNYNNYYY", "YYYYNYNYNNYNYYYYYYYYYNNNYYYNNYYNNYNYNY", "NNYNYNNNNNNYNNNNNYNNNNNNNNNNNYNNNNNNNN", "NNYNNNNNNYNNNYNYYNNNYNNYNYYNNYNNNNNNNY", "NNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNN", "NYYYYNNNNYYNNYNYYYNNYYYYNNYYNNYNNYNYYN", "NNYNYNNNNNNYNNYYYYNNYNNYYYYNNYNNNNNNNY", "NNYNYNNNNYNYNNNNNNNNYNNNNNNNNYNNNNNNNN", "NNYNYNNNNYNNNNYNYNNNYNNNYYNNNNNNNNNNNY", "NNNNYNNNNYNNNNYNNYNNYNNNNYNNNYNNNNNNNY", "NNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNYYNNYNNYYNYYYNYNNNYNYNYNYNYYYYYNYYY", "NNYNYNNNNYYYNYYNYYNNYNNNYYYYNYYNYNNYNY", "NNYNYNNNNNNYNNNNNYNNNNNNNNNNNYNNNNNNNN", "NNYNYNNNNYYYNYNYYNNYNNNYYYYYNYYNYYNNNY", "NNYNNNNNNYNYNYYNYYNYYNNYYNNYNYYNYYNYNN", "NNNNYNNNNYNYNNYYYYNNNNNNYYYNNYNNNNNNNY", "NNNNYNNNNYNYNNNNYYNNNNNNNYNNNYNNNNNNNY", "NNNNYNNNNYNNNNYNNYNNYNNNNNNNNNNNNNNNNY", "NNYNYNNNNYNYNNNNYNNNYNNNYYNNNNNNNNNNNY", "NNYNYNNNNYYNNYNYYYNNYNNYNNYNNYNNNYNNNY", "NYNYYYNYYNYYYYYNYYYNYYYYYYYYNYYNYYYNYN", "NNYNYNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNN", "NNYNYNNNNYYYNYYNNYNNYNNYYYYYNNNNNYNNNN", "NYYYNNNYNYYYYYYNYNNYYYYYYNNNNYYNYYNYYY", "NNYNYNNNNYYYNYYNYYNNYNNNYYYYNYYNNYNNNY", "NNNNNNNNNYNNNNYYYYNNYNNYYYYNNYNNNNNNNY", "YYYNNYNYYNYYNNYYYYYYYYYYYYYYNYYYNYNYYY", "NNYNYNNNNNYYNYYYYNNNYNNYNYYYNYYNYYNNNY", "NNNYYNNNNYYYNYYYNYNNNYYYYYYYNYNNYYNYNY", "NNNNYNNNNNNNNNYNNYNNYNNNNNNNNYNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 15453;
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<int> time = {431, 2, 756, 669, 279, 883, 973, 122, 278, 606, 375, 626, 390, 198, 902, 779, 105, 93, 949, 606, 170, 733, 716, 738, 64, 53, 314, 246, 953, 383, 413, 804};
    vector<string> prec = {"NNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNN", "YNYNNYYNNNNYYYNNNYNYYYYYNNNNNNNN", "NNNNYNYNYYNNNNNNNYYNNNYYYYNNYNNY", "YNNNYYNNYYNNYNNNNNNNNNNYNYYNNNYY", "NNNNNNNNNNNNNNNNNYYNNNYNNNYNNYYN", "NNNNYNNNNNNNYNNNNNNNNNYNYNNNNYNN", "YNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNN", "YNYNYNNNYNNNYYNNNNYYNYNNNNNNNNYY", "YNNNYYNNNYNNNYNNNNYNNNNYNNNNYNYY", "YNNNNNYNNNNNNNNNNYYNNNNNNNYNYYNY", "NNNYNYNYYNNYYYNYNNNYNYYNYYYNNNYN", "NNNNYNNYNNNNNNYNNNNYNNYNYNYNYNNY", "YNNNYNYNNNNNNNNNNNNNNNNYYNNNNNNN", "NNNNYNYNNYNNYNNNNNNNNNYNNYYNNYYY", "NNYNYYNNYYNNYNNNNNNNNYYNYNYNYNYN", "NNYYNYNYNNNNNNNNNYYNNYNYNNYNNNNY", "NNNNNYNYYNNNNYNNNYNNNNNNYYNNYYNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNYNNNNNNNNNNYNNNNYNNNNNNYNN", "NNYNNNYNYNNNYNYNNNYNNNYNNNYNYNYN", "NNYYYNNNNNNNNYNYNNNNNNNNYNNNNYNY", "NNNNNYNNYNNNNYNNNNNNNNYNYNYNNNYY", "YNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNN", "YNNNNNYNNNNNNNNNNYNNNNNNNNYNYYYN", "YNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNY", "NNNNNNNNNNNNNNNNNYNNNNNNNNNNNNYY", "NNNNNNYNNNNNNNNNNYNNNNNNYYNNYYNY", "NNNNNYYYYYNNNNYNYYYNNYNNNNNNYNNN", "NNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNN", "YNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNYNNNNNNNNNNNNNNNYNNNNNNYNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 8773;
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<int> time = {343, 936, 919, 637, 779, 536, 791, 968, 727, 802, 369, 680, 718, 154, 469, 221, 389, 488, 185, 21, 213, 632, 9, 817, 119, 389, 494, 283, 287, 828, 690, 12, 931, 7, 106};
    vector<string> prec = {"NNNYYYYNNNNNYNYYNYNNNYYYNYNNYYNNNNN", "NNNNNNNNNNNYNNNNNNNYNNNNNNNNNYNYYYN", "NYNNYNYNNNNNNNNYNNNNNNYNNNNYNNYYNYN", "NNNNNYYNNYNYNYYNYNNYNNYNNYYNNNNNNYY", "NNNNNNNYNNNNYNNYYNNNNNNNNNNYNNYYNYN", "NYNNNNNYNNNNNNNNNNNNYNNNNNNNNNYYNNY", "NYNNNNNNNNNYYYNNYNNNNNNNNNYNNYYNYNY", "NNNNNNNNNNNYYNNNNNNNYNNNNYNNNYNYYYN", "NNNYYYNNNYNNYNNNYNNNNNYNNNYNNNYNNYY", "NNNNNNYNNNNNYYYYNYNYNNNNNNYYNYYNNYY", "YNNYNNYYNYNYNNNNYNYYYNYNNNNNNNNNNNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNYNNNYNNNNNNNYNNNYNYNNNNNYYNN", "NYNNNNNYNNNNNNNNNNNYNNNNNNYNNYYNYNY", "NNNNNNNYNNNNNNYNNNNNNNNYNNYYNNNYNNN", "NNNNNNNNNNNYYNNNNNNYNNNNNNNNNYNNNNN", "NNNNNYYNNNNYNYNNNNNNNNNNNNNYNYNNNNN", "NNNNNNNYYNNYYYNNNYNNNNYYNNNYYNYYYYY", "NNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNYN", "NNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNN", "NYYNYYNNNNNNYNYNNNNYYNYYNNNNNNNYYNY", "NNNNNYYNNNNNYYYNNNNNNNNNNNYYNNNNYYN", "NNNNNNNYNNNYNNNNYNNYYNNNNYYNNNNNNNY", "NNYYYYNYNNNNNNNYNYNYYYNNNNYNNNNNNNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNNNNNYNNNNNNNNNNNNYNNNNNNYNNNYYNY", "NNNNNNNYNNNNYNNNNNNNYNNNNYNNNNYNYYN", "NNNYYYNNNNNNYNYNYYNYYYYYNYYYNNNNNYN", "NNNNNNNNNNNYYNNNNNNNNNNNNYNNNNNNNYN", "NNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNYNNY", "NNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNY", "NNNNNNNNNNNNYNNNNNNNNNNNNYNNNNNNNNN", "NNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 8470;
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<int> time = {5, 899, 927, 92, 142, 931, 789, 993, 78, 928, 843, 24, 218, 55, 991, 276, 964, 13, 871, 971, 999, 260, 11, 900, 81, 29, 884, 361, 1000, 988, 325, 52, 249, 977, 876, 999, 989, 915, 1000, 371, 965, 973, 989, 971, 31, 754, 955, 937, 958, 14};
    vector<string> prec = {"NNYYNNNNNYNNNYNNNNNNNNNNNNNYNNNYNNNYYYNYNNNYYNNNNY", "NNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNYNNYNYNYNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYYNNNNYNYNNYNYYYNYNYNNNNYYNNNNNYYYYNYYYNNNNNYNNY", "NNNNNNNNNNYNNNNNYNNYNYNNNNNNNNNNNNNNYNNNNNNNNYNNNY", "NYYYNYYNNNNNNYNYNYYYYYNYNNNNNYNYYYYNNNNYYNYYNYNNYY", "NYNNYNYNNNYNNYNYNYYYNNNNNNNNYNNYYNYYYNNNNNNYNYNYNY", "NNYNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNN", "NNYNNNNNNYNNNNNNYNNNNNNNNNNNNNNNNNYNNNNYNNNNNNNNNN", "YNYNNNNNNNYNNYNNYYYYYNNNNYNNYYYNYNNNYYYNYNNNNNNYNN", "YYNNYYYNYYNNNYNNYYYNYNYNYYNNNYNYNNYNYNNYNYYNNNNNNN", "NNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNYNYNNNNNNNN", "NNNNYNYNNNNNNYNNNNYNYYNNNNYNYNNNYYNNYYNYYYNNNYNNNN", "NYYNYNNNNNYNNYNNYNYYNYYNNNNYYNNNNNYYNYNNNYNNNNNNNY", "NNYNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNYNNNNYNYNNNNNNNN", "NNNNNNYNNNNNNNNYYNNNNNNNNNNYYNNYYNYYNNNYNNNNNNNNNY", "NNYYYNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNYNYNYNNNNNNNN", "NYNNYNNNNNYNNNNNYNYNNNYNNNNNNNNNNNNNNYNNNNNYNYNNNN", "NNYNNNYNNNNNNNNNYYYYNYNNNNNYYNNYNNNYYYNYNYNYNYNNNY", "NNYNYNNNNYNNNYNNYNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNN", "NYNYNNNNNYYNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNYNYNYNNNN", "NNNYNNNNNYYNNNYYYNNYYYYNNYYNNNYYYYNNYNNYNNNYYYYNNN", "NNNYNNYYYYNNNNNNNNNNYNNNNYNYYNYYYYYNYYYNNNNYNNYNYY", "NNNYNNYNNNYNNNNYYYYNYYNNNNNYYNNNYNNYYYNYNNNNYYNNNY", "NYYYYNYNYNYNNYNYYYYNNNYNNNNYNNNNNNYYYNYNYYYNYYNNNY", "NYNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNYNNNNNNNN", "NYNYNNNNNYYNNNNNYNNNNYYNNNNYNNNNNNNNNYNNNYNNNNNNNN", "NYYYYNNNNNNNNYYNYNNNNNNYNNNYNNNNNNNYNNNYNYYYNNYYYN", "YNNYNYYNYNNNNNNNYNYYNNNNNNYYYNNYYNNNYNNYYNYYYNNNNN", "NNYYNNNNNYNNNNNNYNNNNYYNNNNYNNNNNNNNYYNYNYNYNNNNNN", "NNNNNNNNNYYNNNNYNNYNNYYNNNNNYNNYNNYYNYNYNYNYNNNNNN", "YNYNYNYNNYYNNYNYNYYYYYNNNNNNYNNNYNNNNYNYNNNNYYNNNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNN", "NYYYNNNNNNYNNNNNYNYYNYYNNNNNYNNNNNYNNNNYNNNNNYNNNN", "NYYNNNNNNYNNNYNNYNNNNNNNNNNYNNNNNNNNNYNYNYNYNNNNNN", "NNYYYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNN", "NYYYNNNNNYNNNNNNNYYYYNYNNNNYYNNYYYYNYYNNNYNNYNNNNY", "NNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNNYYNNNYNNNNYNNYYNNYYNNNNNYNNNNNNNYYYNYNYNYYNNNNN", "NNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYYNNNNNYYYNNNNYYYYNNNNNNNNNYNNNNNYNYYNNYYNNYYNNNN", "NNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNYNNYNNNYNNYNNNNYYNNNNNNNYYNNYNNNYNYNYNNNYNYNNNY", "NNNYNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNN", "YYYYYNYNYYNNNNNYNNYNYNNNNNNNNNNYNNYYYNNNNYNYYNNNNY", "YYNYYNYNNNYNNYNNNNNYYYNNNNNNYNNNNYNYYYNNNYNYYNNNNN", "NNNNYNYNYNYNNYNNNNYNYNNNNNNYYNNNNYNYYNYNYYYNYYYNNN", "NNYNYNNNNYNNNYNNYNNYNYYNNNNYYNNYNNNNYYNYNYNYNYNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 18697;
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<int> time = {782, 73, 813, 114, 969, 986, 178, 857, 10, 923, 186, 266, 855, 996, 828, 240, 913, 987, 330, 950, 984, 185, 916, 236, 1000, 58, 1, 145, 43, 642, 819, 969, 40, 573, 802, 887, 991, 725, 946, 212, 788, 6, 995, 258, 367, 990, 1};
    vector<string> prec = {"NYNNNNNNNNYNNYNYNNNYYNNYYNNNYNNNYNNYNNNNYNNNNNY", "NNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNYNNNNNYNNNNNNNYNNNNYNNYNNNNNNNNNNY", "YYYNNNNNNNYYYNNNNYNYNNYNYNNNYNNYNYNNNNNYYNNYYNN", "NYNNNNNYNYYNNNNYNNNNYNYYYNYNNNYNYNYNNYNNYNYYNYY", "YNNYNNYYYNNNNNYNYYYYNNYNNYYYNYYNYYYYYYYYNYNYYYY", "NNNNYNNNYYYNNYYNNYNYNNYNNNNYNNNNYNYNNYYYNNNYYYY", "NNNNNNNNYNNYNNNNYYNYYNNNYNNNNYNNYYNYNYNNYNYYYYY", "NNNNNNNNNNNNNYNNYNNNYNNNYNNYYNNNYNNYNYNNYNNNYYY", "NYNNNNNNNNNNNNNNNYNNNNNNNNNNYYNYYYNYNNYYYNNNYYY", "NYNNNNNNNNNYNNNNNNNNNNNYNNNYNYNNNNNYNNNNNNNNYNY", "NYNNNNNNNNNNNYNNNNNYNNNNNNNNNNNNYNNNNYNNNNNNNNY", "NYYNNNNNNYYNNNNYNNNYNNNNYNNNNNNNYNNNNYYYYNNYYNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNN", "NYYYNNNNYYYYYNNYYNYNYNNNNNNYNNYYNNYNNNYYNNNYYYY", "NNNNNNNNNNNYNYNNNNNYYNNNNNNNNNNNYYNNNYNNYNNNYYN", "NNYNNNNNNNNNNYNNNNNNNNNNNNNYNNNNNNNNNNNNYNNNNNN", "NNNNNNNNNNNNNNNYYNNYYNNNNNNYNYNNYNNYNNNNYNNNYYN", "YYNYNNNYYYYYNYNYNYNNNNNNYNYNYNNYYNYNNYNYYNNYNYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNYNYNNNNNNNNN", "YYYNYNNYNNNYYYNNYYYYNNNYNYYYYYYYYNNNYYYNNYNYNNY", "NNYNNNNNNNYNNNNNNYNYNNNYYNNYYYNNYYNYNNNNNNNNNYY", "NNNNNNNNNNNNNYNNNNNNYNNNNNNYNNNNYYNYNNNNYNNNNNN", "NNYNNNNNNNYYNNNYYYNNYNNYNNNYNYNNYYNYNNNNYNNNNNY", "YNYNYNNYYNYYNNNNYNYNNNNYYNYYYNNYNYNNNYYYYNYYNYY", "NNNNNNNYNNNNNYNYNNNNYNYYYNNYNYNNYNNNNYYYYYYYYYN", "NNNNNNNNNNNNNNNNNNNYYNNNNNNNNNNNNNNNNYNNNNNNNNN", "NNYNNNNNNNNYNNNNNNNNYNNNNNNYNYNNNYNNNYNNNNNYYYY", "NYNNNNNNNNNNNYNNNNNYYNNYNNNYNNNNYYNNNNNNYNNYYNY", "YNYNNNNYYYYYNNNYYNNYNNYNNNNYNNNNNNNYNYYYYNYNYNY", "NNYNNNNNYNNYNNNYYNNYNNNNYNNYYNNNNNNYNNNYNYNYNYN", "NNNNNNNNNNNNNYNNNNNNYNNNNNNNNNNNNNNNNNNNYNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYYNNNNNYYNYNNNNNNNYNNYNYNNYYNNYNYNNNNYNYNNYNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNN", "YNNNYNNNYNYNNYNNYYNYYNNNNNYNNNNNYYYNNNNYYNYYNNY", "NNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNNNNNNNYNNYNYNNYYNYYNNYNNNYNNNNNYNNNNNNNNNYYNN", "YNYNNNNNYNYYNNNNNYNYNNNYNNNYNNNNNNNNNNNNYNNYNYY", "NNNNNNNNNNNNNYNNNNNYNNNNNNNYNNNNNNNYNYNNNNNNNNN", "YNNNNNNNYNYYNYNYNNNNNNNYNNNNYYNNYYNYNYYYYNNYNNN", "YYNNNNNNYNYYNNNNNYNYYNYYNNNYNYNNNYNYNYYYNYNYYYN", "NYNNNNNNNNNYNNNNNNNYNNNNNNNYNNNNYYNYNNNNNNNNNNN", "NYYNNNNNNNNNNNNNNNNNNNNYNNNNNNNNYNNNNYNNYNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYYNYNYNNYNNYNNY", "NYNNNNNNNNNNNYNNNNNNNNNNNNNYNNNNNNNYNNNNYNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 15719;
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<int> time = {735, 12, 942, 270, 2, 35, 713, 951, 966, 961, 694, 915, 662, 50, 928, 26, 5, 49, 596, 770, 64, 867, 799, 20, 884, 787, 294, 790, 551, 2, 775, 865, 161, 976, 974, 767, 192};
    vector<string> prec = {"NNNNNNYNNNYNNNNNNNNYNNNNNYNYNNYNNNYNN", "YNYNNNNYNYYYNYNNYYYYNNNNYNYYNNYNYYYYN", "NNNNYNYYNYNYNNNNYNNNNNNNNYNYNNYNYYNYN", "NNNNYNYYNNNYNNNNNNNYNNNNNYNYNNYNYYYYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNNNNNNNNYYYNNNNYNNNNYNNNNNNNNNNNYYYN", "NNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNN", "YNNNNNYNNYNYNNNNYNYNYYNNYNNNNNYNYYYYN", "YNYNNYNYNNYYYYYYNYNYYNNNNYNYNNYNYYYNN", "NNNNNNNNNNNYNNNNNYNYNNNNNNNNNNYNNNNYN", "NNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNYNYNNNNNYYNNNNYNYNNYNNNYNYNNYNNYNYN", "YNYNYYYNNNNYNNNNYNNYNNNNYYNNNNNNYYYNN", "NNNNYYNYNNYYYNNNYYNNNYNNNNYYNNNNNYYNN", "YNNYYYYYNYNYYNNNNYYYYYNNYNYNNNYNNYYYY", "YNNNYNNNNYNNNNNNNYNYNNNNNNNNNNYNNNYNN", "NNNNYNNNNNYYNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNYYNNNYYNNNNNYYNYNNNNNYNNNNNNNYYYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNYYYNNNYNNNNNNYNYNNNNNYNYNNNNNYNNN", "YNNNYNNNNNNYNNNNNNNYNNNNNYNYNNNNNNNYN", "NYYYYNYYYNYYYYNNNNYYNNNYYYNYNYNNYYYYN", "NYNYYYYYNYNYNYNYNNYYYYNNYYYYYYNNYYYNN", "YNNNYYNNNNNYNNNNYNYYYYNNNYNNNNYNNYNYN", "NNNNNNYNNNNNNNNNNYNNNNNNNNNNNNNNNNNNN", "NNNNNNNYNYNYNNNNYNNNYNNNYNNNNNYNYYYYN", "NNNNYNNNNNYNNNNNNNNNNNNNNYNNNNNNNNNNN", "NYNYNYYYYNNYYYYYNNNNNNNNNYYYNNYNYNYYN", "YNYNNYYYYYYNYNYNNNNNYYNNYNYYNNYNNYYYN", "NNNNYNYNNNYNNNNNNYNNNNNNNYNYNNNNNNNNN", "YNNNYYYYYYYYYNYYYYYYNNNYYNYYYNYNYYNYY", "NNNNYYYNNYYYNNNNYYYYNNNNNNNYNNYNNNNYN", "YNNNYNNNNYYYNNNNNNNNNNNNNYNNNNNNNNYNN", "NNNNYNYNNNNYNNNNNYNNNNNNNNNYNNYNNNNNN", "NNNNYNNNNNYYNNNNNNNYNNNNNYNNNNNNNNNNN", "NNYNYNYNNNNNYNNNNYYNYYNNNYNNNNYNYNYNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 14067;
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<int> time = {1000, 16, 948, 969, 875, 4, 962, 48, 982, 159, 919, 4, 76, 721};
    vector<string> prec = {"NNNNNNNNNNNNNN", "YNNNYNNNNNNYNN", "YYNYYNNYYNNYNN", "YNNNYNNNYNNYNN", "YNNNNNNNYNNNNN", "YYYYYNNNYYNYNN", "YYYYNYNYYYNYNY", "NYNYYNNNYYNYNN", "NNNNNNNNNNNNNN", "YYNYYNNNNNNNNN", "YYNYNYYYYNNYNY", "YNNNNNNNNNNNNN", "YNYYYYYYYYYYNY", "YNYNYYNYNYNYNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 6681;
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<int> time = {656, 348, 5, 236, 126, 22, 148, 964, 3, 722, 836, 986, 30, 4, 876, 655, 90};
    vector<string> prec = {"NYNYYYYNNNNNYYNYY", "NNYYYNNNNNYNNNNNN", "NNNNNNNNNNNNNNNNN", "NNYNYNNNNNNNNNNNN", "NNYNNNNNNNNNNNNNN", "NYNYYNNYNNYYYYNNY", "NNYYNYNNYNYYYYNYY", "NYYYYNNNNNYNNNNNN", "NNYYYNNYNNNNNNNNN", "YYYYYNNYYNNYYYYYY", "NNYNYNNNNNNNNNNNN", "NYYNYNNYNNYNNNNNN", "NNNNNNNYYNNNNYNYY", "NYYYYNNYYNYYNNNNY", "YYYYYYYNYNNYYYNYY", "NNYYYNNYYNNNNYNNY", "NYYNYNNNYNYYNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 6468;
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<int> time = {257, 475, 990, 622, 6, 878, 979, 4, 978, 788, 537, 874, 1000, 912, 158, 999, 591, 3, 765, 97, 40, 952, 944, 139, 851, 31, 207, 9, 624, 23, 85, 121, 888, 997, 14, 98, 237, 942, 237, 981, 116, 121, 439, 1, 901, 953, 178, 2, 845, 131};
    vector<string> prec = {"NYNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNYNNNNNNNNNNNNNNNN", "YYNYNYYYNYNNYNYYYYYNYNYNYNYNNYYYNNNYYYYYYNYYYYYNNY", "NYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNN", "NNYYNNYYNYNNYNYYYYYYYNYNNYYNNYYYNYNYYYYYYNYNYYYNYY", "NNNYNNYYNNNNYNYNYNNNNYYNNYNNYYNNNNNNYNYYYNNYYYNYYY", "NNNNNNNYNYNNYNYYYNYYNYYYYYNNNNNNNYNNYYYYNNNYYNYYYN", "YYNYNNNNNNNNNNYYYNNNNNNNYNNNNYNNNNNNYNNNYNNNYNNNYN", "YYYNNYYYNYNYYNNYYYNYNYNYNYNNNYYYNYNYNNNYYNNYYYNYNY", "YNNYNNNYNNNNYNYYYNYNNYNYYNNNNYNNNYNNYYYNNNNNNNNNYY", "YYYYYNYYYNNNYNYNYYYYNNYYYYNNYYYYNYNYNNNYYYNYYNYNYY", "YYYYYYYNYYYNYNNNYYYYYYNNYYYNNNNNNNYYNYYYNYYNYYYYYN", "YYNNNNNNNNNNNNNYNNNNNNNNYNNNNNYNNNNNYNNNYNNNYNNNNN", "NYNYYYYYYYNYNNYNNYYYYYYNNNYYNYYYNYYYYNYYYNYYYNYYYY", "YYNYNNNNNNNNNNNYNNNNNNNYYNNNNNNNNYNNNNNNNNNNYNNNNN", "NYNYNNNNNNNNNNNNNNNNNNNNYNNNNNNNNYNNNNNNNNNNYNNNNN", "YNNYNNNNNNNNYNNNNNNNNNNYNNNNNNNNNYNNYNNNNNNNNNNNNN", "YYNYNNYNNYNNYNNYYNYYNYNNNNNNNYNNNNNNNNNNNNYNYNYNYN", "YNNYNNNYNNNNNNYNYNNNNYNYNNNNNNNNNYNNYYNYYNNNYNNNYY", "YNNYNNNNNNNNYNYYYNYNNYYYYNNNNYNNNYNNYNYYYNNNNNNYNY", "NYNYNYYYNYNNNNYNNYYYNNYYYYNNYYYNNYNNYYYYNNYYNNNYYY", "YYNYNNNYNNNNYNYYYNNNNNNYNNNNNYNNNYNNYNNNYNNNNNNNYN", "NNNYNNNYNNNNYNYYYNYNNYNNNNNNNYNNNYNNNYNYYNNNYNNNYY", "NYNYNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNYNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNYNNNNN", "NYNYNNNNNYNNYNNYNNNYNYNYYNNNNYNNNYNNYYYYYNNNYNYNNY", "YNNNNYNYNNNNYNYYYYNNYYYYNYNNYYYNNYNYYYNYNNNYYYYYYN", "YNYYNNYNYNNYYNYNYNYYYYYNYYYNYYYYNNNYYYYYYNYYYYYYNY", "YNNNNNYYNNNNNNYNNYYNNYYNYNNNNYNNNYNNNYNYYNYYNNYYNN", "YYNYNNNNNNNNNNYYYNNNNNNNNNNNNNNNNYNNYNNNYNNNNNNNNN", "YYNYNNNYNNNNYNYNYNNYNYYYYYNNNYNNNYNNYNYYNNYYYNYYNY", "YYNYNNYYNYNNNNYYYYYYYYYYYNNNYYYNNNNNYYYYYNYYYNYYYY", "NNYNYYYYYNYNYYYYNYNNYYNYYYNYYNNNNNYYYYYYNYYYNYNYNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYYYNNYNYYNNYNNYNYYYNYNYNNYYNYYNNNNNYNYYYYYYNNYYYY", "YYNNNYYNNYNNYNYYYYYYYYYYNYNNNNNYNNNNNYYNNNNYYNNYYY", "YYNYNNNNNNNNNNYNNNNNNNNYYNNNNNNNNYNNNNNNNNNNNNNNNN", "NNNYNNNYNNNNYNYYYNNNNYNYNNNNNYNNNYNNNNNNYNNNYNYNYN", "NYNYNNNYNNNNNNYYYNNNNNNYYNNNNYNNNYNNNNNNYNNNNNYNYN", "NYNNNNNNNNNNYNYNNNNNNYNNNNNNNNYNNYNNNYYNYNNNYNYNNY", "NYNNNNNNNNNNNNYYNNNNNNNYYNNNNNNNNNNNNNNNNNNNYNNNNN", "YYNYYNYYYNNNYNYNNYNNYYYNYNYYYYNYNNNYYNYYYNNYYNYYYY", "NYNNNNNNNYNNNNYYYNYYNYYYYYNNNYNNNYNNYYNNYNNYYNNYYY", "YYNNNNNYNNNNNNNNYNYNNYNYYNNNNYNNNNNNYNYYYNNNYNNYNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNN", "YNNYNNYYNYNNNNYYYNYYNYYYYYNNNYYNNYNNYNYNYNNYYNYNYY", "YYNNNNNNNNNNYNNYNNNNNNNYYNNNNNNNNYNNYNNNYNNNNNNNNN", "YYNYNNNYNYNNYNYYYNYNNNYYNNNNNYNNNNNNNYYYYNNNYNYNYY", "NYNYNNNNNNNNYNYYYNNNNNNYYNNNNNNNNYNNYNNNYNNNYNYNNN", "YYNYNNNNNNNNYNNYYNNNNYNYNNNNNYNYNYNNYNYNNNNNNNYNYN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<int> time = {974, 17, 129, 38, 11, 32, 18, 997, 908, 995, 758, 832, 327, 172, 12, 63, 25, 973, 983, 41, 948, 145, 562, 932, 32, 8, 845, 928, 44};
    vector<string> prec = {"NYYNYNNYYYYYNNNNNNNYNYYNYNYNY", "NNYNNNNYYYNYNNNNNNNYNNNNNNNNY", "NNNNNNNNYNNNNNNNNNNNNNNNNNNNN", "YYYNNYYYYNYYYYYYYYYYYYYYNYYNN", "NYYNNYNYNYYNNNNNNNNNNYYNNNNNY", "NNNNNNNYYNNNNNNNNNNNNNNNNNNNN", "NNYNYYNYYYYNYNNNYYYYNNYYYNYYY", "NNNNNNNNNYNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYNNNNNYNNNNNNNNNNNNNNNNNNNN", "NYNNNYNYYNNYNNNNNNNYNNNNYNNNY", "NNYNNNNYYYNNNNNNNNNYNNNNYNNNY", "YYYNNYNYYYNYNNNNNNNYYYYNNYYNY", "YYYNYYNYYYYYYNNYYYYYNYNYNYYYY", "YYYNYNYYNYYYYYNYYYNYYNYYYYYYY", "YYNNNYNYYYYYYNNNNNNYYNNNYYYNY", "NYYNNYNYYYYYYNNYNYNNYYYYYYYYY", "YYYNYNNYYYYYYNNNYNYYYYYYNNYYY", "YYNNYNNYYYYYYNNNNNNNNYYYNYYYY", "NNYNNNNYYYNNNNNNNNNNNNNNNNNNN", "YNYNNYNNNYNYNNNNNNNYNNYNYYYNY", "NYYNNYNYYYNYNNNNNNNYNNNNYNNNY", "NNYNNYNNYYYYNNNNNNNYNYNNYNNNY", "YYYNYYNNYNNYYNNYNNNYNNYNYYYYY", "NNYNNYNNNYNNNNNNNNNYNNNNNNNNN", "NYYNNYNNYYYYNNNNNNNYNYYNYNNNY", "NYYNNYNYYYYYNNNNNYNYNYNNYNNNY", "NYYNYYNYYYNNYNNNNNNYYYYNYYYNY", "NNNNNYNNNYNNNNNNNNNYNNNNYNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<int> time = {299, 986, 91, 28, 462, 70, 805, 234, 730, 746, 3, 276, 999, 35, 982, 7, 632, 915, 82, 945, 55, 639, 988, 147, 702, 552, 739, 908, 833, 85, 904, 443, 47, 828, 159, 10, 260, 998, 242, 213, 990, 817, 839, 96, 995, 59};
    vector<string> prec = {"NYNNYYNNNYYNNYNYNNYNYNNYNYNNYNNYYNNYNYNYNYYNYY", "NNNNNYNNNNNNNNNNNNYNNNNNNYNNNNNNNNNNNNNYNYYNNN", "NNNYYYNYNYYYNYYYNNYNYNNNYYYYYYNYYNYYYYNYNYYYNY", "NYNNNYNNYYYNYYYYNNNNYNYYNNNNYNYYYNYYYYNYNYYYNN", "NYNNNYNNNNNNNYNNNNNNNNNYNNNNNNNNNNNYNYNYNNYNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNYYYYNYNYNNYYYYYYYNYNYYYYYNYYNYYNYYYYYYYYYNNY", "NYNNYYNNYYYYYYYNNNNNYNYYNYYNYNYYYYYYYYNYNNYNNY", "YYNNYNNNNNYNNYNYNNNNNNYYNYNNYNNYYNNNNNNNNYNNYY", "NYNNYYNNNNYNNYYYNNNNYNYYNYNNYNNYYNNYNYNYNYNNYY", "NYNNYYNNNNNNNYNYNNYNNNYYNYNNNNNNNNNNNYNYNYYNYN", "YYNNYYNNYYYNNYNNNNYNNNYYNYNNYNNNYNNYNYNYNNYNNY", "YYNNYYNNYYYNNYYYNNYNYNYYNNNNYNNYYNNNYYNYNYNNYY", "NNNNNYNNNNNNNNNNNNNNNNNYNYNNNNNNNNNYNYNYNYYNNN", "NYNNYYNNNNYNNYNYNNYNYNYYNYNNNNNNYNNYNYNYNNNNNY", "NNNNYYNNNNNNNNNNNNYNNNYYNYNNNNNNNNNYNYNYNYYNNY", "YYYYYYNYYYYYYNYYNYNNYYNYYYYYYYYYYYYNYYNYNYYYYY", "NYYYNYNYYYYYNYYYNNYNYNYYYYYYYNYNYYYNYYNYNNYYYY", "NNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNN", "YYYYYYYYYNYYYYYYYYYNNYYYYYYNYYYNNYYNNYYYYNYNYN", "NYNNYYNNNNYNNYNYNNYNNNYYNYNNNNNNYNNYNYNYNNYNYY", "YNYYYYNYYYNYNYNYNYYNNNYYNYYYYNNNYYYNNYNYYYYYYY", "NYNNNYNNNNNNNNNNNNYNNNNYNYNNNNNNNNNYNYNYNYYNNY", "NNNNNYNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNYNYYNNN", "YYNNYNNYNYYYYYNNNNYNYNNYNNYNYNYYYNYYYYNYNYYYYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNYNNNN", "YYNNNYNNNYYNYYNNNNYNYNYYNNNNYNNNYYYNYNNYNYYNYY", "YYNYNYNYYNYNNYYYNNYNNNYYYYNNNNYYYYNYNYNYNYYNYY", "NYNNYNNNNNNNNYYNNNYNYNYYNYNNNNNNNNNNNYNYNYNNYY", "YNNNNYNYYYNNYNYYNNYNYNYYYYYYNNNNYYNYNYNYNYNYYY", "YYNNYNNNYYYNYYYYNNNNYNNYNYNNYNNYYNNNYYNYNYYNYY", "NYNNYYNNNNYNNYYYNNYNYNYYNNNNYNNNYNNYNYNYNYYNNY", "NYNNNNNNNNNNNYNYNNYNNNNYNYNNNNNNNNNYNYNYNYYNNY", "YYNNYYNNYYYYNYYNNNYNYNYYNYNNYNNNNNYYYNNYNYNNYY", "NYNNYYNNYYYYYNNYNNYNNNYYNYNNYNYYYNNNNYNYNYNNYY", "NNNNNYNNNNNNNYNNNNYNNNNYNNNNNNNNNNNNNYNYNYYNNN", "YYNNYNNNYYYYNNYNNNNNNNYYNYNNYNNYYNNNNYNYNYYNYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYYYYNNYYYYYYNNYYYYNNYYYYYYNYYYYYYYYYYNYYYYYNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNN", "YNNYYNNYYYYYYYYYNNYNYNNYYNYYNYYYYNYYYYNYNYYYYY", "NNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNN", "NNNNNYNNNNNNNNNNNNYNNNNNNYNNNNNNNNNNNYNYNNNNNN", "NYNNYYNYNYNYYNYYNNYNYNYYNYYNYNYYYYYNYYNNNNYNNY", "NYNNYYNNNNNNNYNNNNYNNNNYNYNNNNNNNNNYNYNYNYYNNY", "NNNNYYNNNNNNNYNNNNYNNNNYNYNNNNNNNNNYNYNYNYYNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<int> time = {245, 63, 61, 989, 126, 824, 1000, 223, 842, 910, 720, 442, 159, 188, 294, 711, 1, 156, 875, 978, 579, 23, 147, 205, 352, 29, 334, 1, 45, 100, 24, 120, 214, 925, 947, 14, 903, 276, 589, 677, 205, 993, 347, 5, 48, 72, 21, 11, 796};
    vector<string> prec = {"NNNYYNNNYYYYNNYNNNYNYYYYNYNNNNYNYNNNNNNYNNYYYNNNY", "NNNNYNNNNYNYNNNNYNNYNYYNNNNNNNYNNYNYNNNNNNYNNNYNY", "YYNYYNNNNYYNYNNYYNNNYNNNYYNNNNYNNYYNNYNYYYNYNNYYY", "NYNNNNYNNYYYNNYNNYYNNYYYNNNNNNYNNYNNNNNNNNYYNNYYY", "NNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNYNNNYYNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNYNYNNNYYNYYYYYYYNYYYNNYNYNNYNYYYYNYNNNNYNYNYNY", "NNNYYYNYNNYNNNYYYNYYNYNYNYNNNNYNYNNNNYNYYNYNNNNNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNYNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNYNNNNN", "NNNNYYYNNYNNNNYNNNYNNYNYNNNNNNNNNYNNNNNNNNNYNNNYY", "NNNNYYNNNYYYNNYNNNNYNYYYNNNNNNYNNYNYNNNNNNNNNNYNN", "YYYYYYYYYYYYNNNNYYNYNNYYNYNYNYYNYYYYNYYNYNNYNNYNY", "NNNNYYNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNNYNYNNYYYYNYNNNYNYYYNNYNNNNYNYYNNNNNYYNYNYNYYN", "NNNNYNYNNYYNYNNNNNYNNYYNNNNNNNYNNNNYNNNNNNNNNNNYN", "NNNNYNYNNYYYNNNNYNYYNNYYNNNNNNYNYNNYNNNNNNNYNNYYN", "NNNNYNYNNYYNNNNNNNNYNNNNNNNNNNNNNYNNNNNNNNNNNNNNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNNNNYNNNYYNNYNNYYYNNYYNNNNNNNNNYNYNNNNNNYYYNYYY", "NNNNNYYNNYNNNNYNNNNYNNNYNNNNNNNNNYNNNNNNNNNNNNNNN", "NNNNNYYNNNNYNNYNNNYYNYNYNNNNNNYNNNNYNNNNNNYNNNYNN", "NNNNNYNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNYNNYNYYNNNNYYYNNYNYNYNNNYNNYNYYYYNNNNYNYYYNYNN", "NYNYYYNNNYYNYNNNYNYNYNYYNNNNNNYNYNNNNNNYNNYYYNNYY", "NYNNYYNYNYYYNNYNYYNNNYYYYYNYNYNYYYYYNYYNNYYNYNNYY", "NYNYNNYNNYYYNNYNNYYNNYYYNYNNNNNNNNNYNYNNYNNNYNNNY", "NYYYNYYYNNNNYYYYYYYYYYNYNYNYNNYYYYYNNYNNYYYYNNNNY", "NNYYYYYYYYNYNNYYYNYNNYYYNNNYNNYNYYYYNNYYNNYYYNYYY", "NNNNNYYNNYYYNNNNNNYYNNNYNNNNNNNNNYNNNNNNNNYNNNNYN", "YNNYNNYYYYNYNNNNYYNYYYNNYYNNNNNNYNYYNYNYYYYNNYYYN", "NYNNYYNNNYYYYNYNYNYYNYNYNNNNNNNNNNNYNNNNNNYYNNYNN", "NNNNYYNNNNNNNNYNNNNYNNNYNNNNNNNNNNNNNNNNNNNYNNNNY", "NNNYYYYNNNNYNNYYNNYNYYNNNYNYNNYNNNNYNYNYYNNNNNNYN", "NNNNYNYNNYYYNNYNNNYYNYNYNNNNNNNNNYNNNNNNNNNYNNNYY", "YYYNNNYNYNNYYYNYYYNNYYNYYNYNNNYYYYNYNYNNYNNYNYYNY", "NYNYYNYNNYYNNNYNNNYYYYNNNNNNNNYNYYNYNNNNYNYYNNYNY", "NNNNYYNYNYYYNNNNNYYYYYYNNYNYNNYNYNYNNNNYNNNNYNYYY", "NYNNYYYNNYNYNNYNYNYYYYYYNNNNNNYNYNNYNNNNYNYYYNNNY", "NNNYYNNNNNNYYNNNYYYNYYNYNNNNNNNNYNNYNNNNNNYNNNYYN", "YNNYNNYNNYNNYNNNNYYNYYYYNYNNNNYNNYYNNYYNNNYYYNYYY", "NNNNYNYNNYYYNNYNNNNNNYNNNNNNNNNNNYNNNNNNNNNYNNYYN", "NNNNYNYNNYYNNNYNNNNYNNNYNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNYNNYYYNNYNNYYYNYNYNNNNNNNNYYNYNNNNNNYNNNNYY", "NNNNYYNYNYNYNNYYYNYYYNYYYYNYNNYNYYYYNYYNYNYNYNYYN", "NNNNYNYNNYNYNNYNNNYYNYNYNNNNNNNNNYNNNNNNNNNNNNNNY", "NNNNYYNNNNNNNNYNNNNYNNNYNNNNNNNNNNNNNNNNNNNYNNNNN", "NNNNYYNNNYYNNNYNNNNYNNNYNNNNNNNNNNNNNNNNYNNNNNNYN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<int> time = {30, 11, 714, 368, 990, 5, 108, 43, 773, 321, 986, 13, 984, 975};
    vector<string> prec = {"NYNNNYNNNNNYNY", "NNNNNYNYNNNNNN", "YNNNNYNNYNNNNN", "NNNNNNNNNYYNYN", "NNNNNNNNNNNNNY", "NNNNNNYNNNYNNN", "NNNNNNNNNNYNNN", "NNYNNNNNNNNNYN", "NNNNNNNYNNNNYN", "NYYNNNNNYNNNNY", "NNYNNNNNNNNNYN", "NNYNNYYNNYNNNN", "NNYNNNNNNNNNNY", "NNNNNNNNNNNNYN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<int> time = {443, 150, 881, 198, 994, 732, 6, 354, 997, 258, 985, 994, 49, 905, 333, 770, 357, 137, 252, 102, 8, 331, 1, 763, 103, 700};
    vector<string> prec = {"NNYNNNNNNYYNNYNYNNNNNNNNNN", "NNNNNNNNYNNYYNNNNYNYNNNYNN", "NNNNNNYNNYNNNNNNNYNNNNNYYN", "NNNNNNYNNYYNNNYNNNNYNNYNYN", "NNNNNNYNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNYNNNNYNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNYNYNYYYNNNNYN", "NNYYYNNYNNNNNNNYNNNYNNNYYN", "NNNNNNYNNNNNNNNYNNNNNYNYNN", "NNNYNNNNNNNNNNYNNNNNNYNNNN", "YNNYNNNYNYNNNYNNNYNNYYNNNN", "NNNNNNNNNNNNNNNNNYNNYNYNNN", "NNNNNNNNNNNNNNNNYNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNYNNNNNNNNNNNNNNNYNNNN", "NNNNNNYNNNNNNYNNNNNNNNNNYN", "NYNNNNYNNNYNNNNNNYNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNYYNYNNNNYYNNNYNYNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNYNNNNNNNNNNYNNNNN", "NNNNNNYNNNNNYNNNNYNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNYNNNNNNNYNYNNNNNNNYN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<int> time = {24, 117, 992, 911, 128, 952, 940, 13, 198, 254, 774, 459, 179, 155, 847, 686, 2, 237};
    vector<string> prec = {"NNNNNNYNNNNNNNNNYN", "NNNNNNYNNNNYNYNNNN", "NNNNNNNNNNNNNNNNYY", "YNNNNNYNYYYNNNNNYN", "NNNNNNNNYNNNNNNNNN", "NNNNNNNNYNNNNNNNNN", "NNNNYNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNN", "NNYNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNYNNN", "NNNNNNNNNNNNNNNNNY", "NNNNNNNYNNNNNYNNYY", "NNNNNNNNNNNNNNNNYN", "NNNYNNNYNYNYYNNNNY", "NNNNYNNNNNNYNNNNYN", "NNNNNNNNNNYNNNNNNN", "NNNNNNNNNNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<int> time = {976, 154, 24, 879, 282, 725, 947, 901, 982, 5, 688, 989, 25, 33, 901, 994, 338, 959, 260, 966, 205, 916, 6, 746, 867};
    vector<string> prec = {"NNYYNYNYNYNNYYNYNNNNYYNNN", "YNNNYYNNNYNNNYNYNYNYNYNNN", "NNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNYNNNNNNNNNNNYNNNYNNN", "YNNNNNNYYNNYYYNYNYNYNNNNN", "NNYNNNNNNNNNNNNNNNNNNNNNN", "NYYYYYNYYYYYYNNYNNYNYYYYY", "NNNNNNNNNYNYYYNNNNNNNNNNN", "NNYYNYNNNNNNYNNNNYNNNYNNN", "NNNYNYNNYNNNNNNYNYNNYYNNN", "NNNYNNNYYNNNNYNYNYYYNNNNY", "YNYYNYNNYNNNNNNNNYNNYNNNN", "NNYNNNNNNNNNNNNNNYNNYYNNN", "YNNNNYNNNNNNNNNNNNNNYNNNN", "NNNNNYNNYNYYNYNNNYYNYNYYY", "NNNNNYNNNNNYYNNNNYNNNYNNN", "YNNNNYYYYYNYNYNYNYNNYNYNY", "NNNNNNNNNNNNNNNNNNNNNNNNN", "YNYYNYNNYYNNNNNYNNNNYYNNN", "YNNYNYNYYNNNYYNNNYYNNNNNN", "NNNNYYNNNNNNNNNNNNNNNNNNN", "NNYNNNNNNNNNNNNNNNNNYNNNN", "NNNYNYNYNNNNYYNNNYYNNNNNN", "NNYYNNNNYNNYNNNYNYNNYYNNN", "YYNNNYNYYNNYYNNYNNYYYYYYN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<int> time = {973, 15, 950, 53, 922, 33, 890, 159, 147, 34, 966, 997, 403, 407, 210, 89, 994, 966, 1000, 147, 847, 1, 7, 737, 959, 527, 473, 937, 937, 74, 26, 157, 361, 72, 178, 22, 37, 66, 854, 43, 17, 2, 177, 997, 38, 92, 21, 958, 926, 946};
    vector<string> prec = {"NNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNN", "NNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNYNNNNNNNYNNNNNNN", "NNYNNNNNNYYYNNNNNNNNNNNNNYNNNNNNNNNYNNYNNNNNNNYNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNN", "NYNNNNNNYYNNNNNNNNNNNNNNNNNYNNNYNNNNNNNNYNNYNNNNNN", "NNNNNNNNNNNYNYNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNYN", "NNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNYNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYNNNNNNNNNNNNNNNNNNNNNYNNNNYNNNNNNNNNNNNNNNNYNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNNNNNNNNNNNNNNNNNYYYNNNNYNNNNNNNNNNNNNNNNNNYNNNN", "NNNNYNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNYNNNYNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNYNNNNNNYNNNNNNNNNNNNNNNNNYNNYNNN", "NNNNYYNYYNNNNNNNNNNNNNNNNNNNNNNNYNYNNNNNNYNNYNNYNN", "NNNNNNNNNNNYNYNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNYNYNYNN", "YNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNYNNNNNNNNNNNNNNNNNN", "NNNNNYNNYNNNNNNNNNNNNNNNNNNYNYYNNNNNNNNNYNNNNNNNNN", "NNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNN", "NNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNYN", "NNNNNNNNYNNNNNNNNNNNNNNNNNNNNYNNNNNYNNNNYYNNNNNNNN", "NNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNYNNNNNNNNNNYNNNNNNNNNNNYNNNNNNNNYNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNNYNYYNNNNNNNNNNNYNNNNNNNNNNNNNYNNNNNYNYNNNNNNNNN", "NNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNYNYNNNYNNN", "NYNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNYNNNNNNNNNYNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YYYYNNNNNNNYNNNNYNNNNNNNNNYYNYNNNNNNYYNNNNNNNNNNYN", "NNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNYN", "NNNNYYNNNNNNNNNNNNNNNNNNNNNNNNNYYNNNNNNNNYNNNNNNNN", "YYNNNNNNNNNNNYNNNNNNNNNNYNNNYNYNYNNNNNYYNYNNNNNNNN", "NNNYNNYNNNNYNNNNNNNNNNYNNNNNNNNYYNYYNNNNNNNNNNYNNN", "NNYNNNNNNNNNNYNNNNNYNNNNNNYNNNNNNNNNNNNNNNNYNNNNNN", "YNYNNNNNNYNNNNNNNNNYNNNNNYYNNNNYNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYN", "NNNNNNNNYNNNNNNYNNNNNNNNNNNYNNNYNNNNNNNNNNNNNNNYNN", "NYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNYNYNNYNNNNNNNNNNNYNNNNNNNNNNNNYNNNNNNNNNNYNNNNNN", "NNNNNNNNNYNNNNNNNNNNNNNNNNNYNNNNYNNNNNNNNNNNNNYNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNYNNYNNNNNNNNNNNNNNN", "NNYNYNNNNNNYNYNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<int> time = {13, 113, 55, 72, 974, 307, 147, 629, 210, 2, 940, 939, 5, 988, 89, 444, 973, 1, 17, 999, 121, 77, 951, 77, 253, 18, 895, 36, 781, 612, 159, 39, 909, 564, 900, 54, 27, 971, 239, 996, 832, 305, 146};
    vector<string> prec = {"NNNNNNNNNNNNYNNNNNNNNNYNNNNNNNNNNNNNNNNNNNY", "NNNNYNYNNNNNNNNNNYNNNNYNNNNNNNNNNNNNNNNNYNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNN", "NNNNNNNYNNNNNYNNNNYYNNYNNNYNNYNNYNNNNNNNYNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YYNNYNNNNYNNNNNYNYNNNYYNNYNNNNNNYNNYNYNNYNY", "NNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNN", "NNNNNYNNNNNNNNNNNNNNNNNYNNNNNNNNNNNYNYYNNNN", "NNNNNYNNNNNNNNNNNNNYNNYNNNNNNNNNNNNYNNNNNNN", "NNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNYNN", "NNNNNNYNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNYNNNNNNNNNNNNNYNNNNNNNNNNNNNNY", "NNNNNNYNNNNNNNNNNNNNNNNYYNNNNNNYNNNNNNNNNYN", "NNNNNYNNNYNNYNNNNNNYNYNNNNNNNNYYYYNNNNNNNYN", "NNNNNNNNNNNNYNNNNYNYNYNNNYNNNNNNYNNNNNNNNNN", "NNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYNYNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNYNN", "NYNNYNNNNNNYNYNYNNNNNNYNYNYYNNNNNYNNYYNNNNN", "YNNNYNNNNNNNYNNNNNNNNNNYNNNNNNNNYNNNNNNNYNN", "NYNNNNNNNYNNNNNNYNNNNNNNNNNNNNNNNNNNNYNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNYNNNNYNN", "NNNNNNNNNNNNNNNNYYNNNNYYNNNNNNNNNNNNNNNNYNN", "YNNNNNYNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNYNY", "NNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YYNNNNNNNNYNNNNNNNNNNYNNNNNNNNNYNNNNNNNNNNY", "NNNNNNNNNNYNYNNNNNNNNNNNNNYNNNNYNNNYNNNNYNY", "NNNNNNNYNNNNNNNNYNNYNYYYNYNNNNNYNYNYYNNNYYY", "NNNNNNNNNYNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNN", "NNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNY", "NNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNN", "NNNNNYNYNNNNNNNYYNNYNNYNNNNYNNNYNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YYNNYNNNNNYNNNNNNYNYNNNNNNNNNNNYNNNNNNYNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNY", "YNNNNNNNNYNNNNNNNNYNNNNNNNYNNNNNNNNYNYNNNNN", "NYYNYNNYNNNNNNNNNNYNNNNNNNYNYNYNNNNNNNNNNNN", "NNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNYYYNNYNNYYNYNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<int> time = {867, 974, 700, 998, 952, 280, 892, 151, 994, 615, 13, 407, 615, 68, 4, 34, 988, 107, 952, 914, 208, 10, 1, 979, 961, 883, 925, 854, 2, 147, 959, 945, 992, 888, 823, 536, 571, 31, 148, 843, 19};
    vector<string> prec = {"NNNNYNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYNNYNNYNNNNNNYNNNNNNYNNNNYNNYNNNNNNNNNN", "NNNNNNNYNNYNNNNNNNNNNNNNNNNYYNNNNNNYNNNNN", "YNYNNNNNYNNYNNNYNNNNNYNNYNNNYNNNNNNNNNNYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNYNNYNN", "NNNNNNNNNNNNYNNNNNNYNNNNNNNNYNNNNNNNNNNYN", "NNNNYNNNNYNNYNNYNNNNNYNNNNNNYNYYNNNNNNNYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNYNNNNNNNNNYNNNNNYYNNNNNNNNNNNNNYNN", "NNNNYNNYYNNYNNNNNNNNNNNNNNNNNNNNNNNNNNYNN", "NNNNNNNYNYNNNNNYNNNNNNNNNNNYNNNNNNNYNNNNN", "NNNNNNNNNNNNNNNYNNNYNNNNNNNNNNYYNNNNNNNNN", "NYNNNNYNNYNNNNNNNNNNNNNYNNNNNNYNNNNNNNNNN", "NNNYNNNNNNNNYNNNYNNNNNNNNYNNNNNNNNNYNNNNN", "NNNNNNYYNNNYNNNNYNNNNYYNYNNNNNYNNNNNNNNNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNYYNNNNNNNNNNYNN", "NNNNNNNNNNNNNYNNNNNNNNNYNNNNNNYNNNNNNNNNN", "NYNNNYNNNNNNNYNNNNYNNNNYYNNNNNYYNNNNNNYNN", "NNNNYNNNNNNNYNNNYNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNYNNNNNNNNNNNNNNNNNYNYNNNNNNNYNNNNN", "NNNNNNNYNNNNNNNYNNNNNNNNYNNNYNNNNNNNNNNNN", "NNNNNNNNNYNNNNNNYNYYNNNNNNNNNNYYNNNNNNNNN", "NNYNNNNNYNYNYNNNNNNNNNNNNNYNNNYNNNNNNNNYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNYNNNYNNNNN", "NNYYYNNNYNNNNNNNYNNNNYNNYNYNNYYNNNNNNNNNN", "NNNNYNNNNNNYYNNNNNYNNNNNNNNYYNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNYNNNNN", "YNNNNNNYNYNNYNNYNNNNYNYNNNNNNNNNNNNNNNNYN", "NNNNYNNNNNNNNNNNYNNNNNNYNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNYNNNNNNNNNNNYNNNNNNNYNNNNN", "NNNNNYNYNYNNNNNNNYNNNNNNNNNNNNNNNNNNNNNYN", "NYNNYNNNNNNNYNNNNYNNNNYNYNNNNNNNNNNYNNNNN", "NNYNNNNYNNYNNNNYNNNNNNNYNYYNNNNYNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNN", "NNNNNYNNNNYNYNNNNYNNNNYYNNNYYNYNNNNNNNNNN", "YNNNYNNNNNYNYNNYNNNYNNNNNNYNNNYNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNYNYNNYNNNNNNNNNNNNN", "NNNNNNNNNYNNNNNYNNNYNNNNYNYYNNYNNNNYNNNNN", "NNNYYNNYNNNNNNNNNNNNNNNNNNNYNNNYNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<int> time = {29, 993, 991, 901, 962, 997, 350, 13, 799, 906, 158, 332, 621, 921, 986, 727, 941, 360, 339, 42, 564, 31, 972, 34, 1000, 688, 979, 302, 497, 120, 926, 344, 910, 973, 52, 719, 772, 127, 759, 319, 29, 21, 845, 974, 126, 52, 792, 443};
    vector<string> prec = {"NNNNNNNNNNNNNNNNYNNNNYNNNYNYNNNNYYYNNNNNNYNNNYNN", "NNNNNNYNNNYNNYNNNNYNNNYNNNNNNNYYNYNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNYNNNN", "NNNNNNNNYNNNNNNNNNNYNYNYNNNNNNNNNNNYNNNYNNNYNNYN", "NNNNNNNNNNYNNNNNNNNNYNNYNYNNYYNNNNNYNNNNNNNNNYNN", "NNNNNNNYNNYYNYNNYNNNNYNNYNYNNNNNNYNNNNNNNNYNNNNN", "NNYYNNNNYNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNYNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNYNNNNNNNYNNNNNNNNNNNNNNNNN", "YNNNNNNNYNYNNNNNNNNNNNNNNNYNNNYNNNNNNNNNNYNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNYNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNYNNNN", "YNNNNNNNNNNNNNNNNYNNYNNYNNNNNNNNYNNNNNNNNNNNNYNN", "NNNNNNNNNNNNNNYNNNNNNYNNNNNNNNNNNNNNNNNNYNNYNNNN", "NNYNYNNNNNNNNNNNNNYNNNNNYNYNNNNNNNYYNNNNNNNNNNNN", "NNNNNNNNYNNNNNNNNNNNNNNNNYYNNNNNNNNNNNNNNNYNNYNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNN", "YNNNYNYNYNYYNYYNNNNNYNNNNNNNNNNNNNNNNNNNNNNNYNNN", "NNNNNNNNYNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNYNNNN", "NNNYNNNNYNYNNYNNYNYNNNYNYNNNNNNYNYNNNNNNNNNNNNNN", "NNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNYNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNN", "NNYNNNNNNNNNNNNNYNYNNNNNYNNNNYYNNNNNNNNNNNNYNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNYNNNNNNNYNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNYNNNNNNNYNNNNNNYNNNNNNNNNNNNNNNNNNNNNYNNYNNNN", "NNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNYNNNNNNNYNNNNNNNYNNNNNNNNY", "NNNNNNNNNNNNNNNNNNNNNYYNYNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNN", "NNYNNNNNNNNYNNNNNNNNNNNNNNNNNNNNYNNNNNNYNNNNNNNN", "NNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNN", "NNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNYNNNYYYNNNNYNNNYNNNNNNNYNNYNNY", "NNYNNNNYNNYNNNNNYNYNNNNNNNNNNNNNNYNNNNNNYNNNNNNN", "NNYNNNYNNNNYNNNYNNYNNNNNYNNNNNNNYNNYNNNYNNNNNNYN", "NYNNNNNNYNNNNNNYYNNYYNNYNNYNNNNNNYYNNNNNNNNNNNNN", "YNNNYNNNNNNNNNNYNNYNNNYNNNNNNNNNNNNNNNNNNNNNYNNN", "NNNNNNNYNNNYNNNNNNNNNYNNNNNNNYNYNNYNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNN", "NNNNNNNYNNNNNNNNNNYYYYNNNNYNNYNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNYNNNN", "NNNNNNNNNNNNNYNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYNNNNNNNNNNNNYNNNNNNNNNYYNNNYNNNNNNNNNNNNYNNNN", "NNNNNNNNNNNYNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNYNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<int> time = {979, 866, 987, 84, 31, 13, 490, 6, 159, 864, 34, 49, 898, 15, 835, 956, 187, 19, 2, 39, 750, 931, 812, 950, 958, 960, 894, 835, 19, 20, 215, 111, 890, 965, 8, 946, 632, 921, 25, 807, 13, 999, 998, 50, 290, 94, 43, 970};
    vector<string> prec = {"NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNYNNYNNNNNNNNNYNNNNNNNYNNNNNNNNNNNNNNNNNNN", "NNNNNNNYNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNYNNNNNNYNNNNN", "NNNNNNNNNNNNNNNNNNYNNNNYNYNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNYNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNYN", "NNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNYNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNYNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNN", "NNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNN", "NNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNN", "NNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNYNNNYNNNNNNNNNNYNNNNNNNNNNN", "NNNNNYNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNYNNYNNN", "NNNNNNNNNNNNNNNNNNNYNNNNNNYNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNYNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<int> time = {908, 46, 990, 917, 981, 145, 460, 929};
    vector<string> prec = {"NNNNNNNN", "NNYNNNNN", "YNNYNNYN", "NNNNNNNN", "NNNNNNNY", "NNNNNNYY", "YNNYNNNY", "NNYNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<int> time = {152, 77, 750, 7, 45, 913, 6, 989, 723, 671, 1, 863, 71, 819, 44, 946, 312, 47, 269, 887, 6, 109, 160, 13, 1000, 3, 3, 86, 3, 891, 918, 310, 13, 686, 983, 31, 937};
    vector<string> prec = {"NNNNNYYNNNNNNNNYNNNNNNNNNNNNNYNNNNNNN", "YNNYNYNNYNNNYNNNYNYNNNYNYNNYYYYNNNYNN", "NNNNNYNNYYNNNYYNNNYYNNYNYNNNNNNYNNNNN", "NNYNYYNNYYNNNNNNNNYNNNYYYNNNYYNNYNYNN", "NNNNNNNNYNNYNNNNNNYYYNYNYNNNYNNNYNNYN", "NNNNNNNNYNNNNNNNNNNNNNNNYNNNNYNNNNNNN", "NYNNNNNNNNNNNNNNNNNNNNYNNNNNNYNNNNNNN", "YNYYNNYNNYNYNYNNYNYYNNYYYNNNNYYYNNNYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYN", "YNYNNYNNNNNYNYYNNNNNYNYYYNNNNNNNYNNYY", "NNNYNYNNNNNNYYYNNNNNNNYNYNYYYYNNNNYYN", "NNNNNYYNYNNNNNYNNNYYNNYNNNNNNYNYNNNYY", "YNNNYNYNYNNYNYNYNNNYNNYYNNNNYNYNNYYYY", "NNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNYN", "YNYNNYYYNYNNNNNNNNNYNYYNNYNNYYYNYYYNN", "YNYNYNYNNYNYNNYNNNYYNNYNYNNNNYNYNYYNY", "YNYYYYNNNNNNNYNNNNYYNNNYYNYYNNNYNYNYN", "YNNNNNYNNNNNNNNNNNNYYNNNNNNNNNYNNNYYY", "NNNNNYYNYNNNNNNNNNNNNNYNNNNNNNNNNNNYN", "YNNNNNYNNNNNNYNNNNNYNNNNNNNNNYNNNNNYN", "NNNNYNYNNNYYYYYNNNNNNNNYNNYNNYNYYNYNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNYNNYYNNNNNNYYNNNYNYNYNNNNNYNNNNNYYY", "YNNNNYYNYNNNNNYNNNNNYNNNNNNNYNNNNNYYN", "NNYNNNNYNYYNNNYNYYYNYNNYYNYYYNNYYNNNY", "YNNYNNNNNYNYNYNNNNYYNYNYNNNNYNYNNYYNN", "NNNNYYYYYNNYNNYNYNYNYYYYYNYNYNNYYYNYY", "NNNNNNNNNNNNNNNNNNNYYNNNNYNNNYYNNNNNN", "NNNNNNNNYNNNNNNNNNNNNNYNNNNNNNNNNNNNN", "NNNNNNNNYNNYNNNNNNYYYNYNNNNNNNNNNNNNY", "NNNNNYNNNNNNNNYNNNYYYNNNNNNNYYNNNNNYY", "NNNNNNNNYNNNNNNNNNYYYNYNYNNNYNNNNNYYY", "YNYNYYYNYNNYNNNNNNNNNNNNYNNNYNYYYNNYY", "NNNNNYNYYNNNNYNNNNNNNNYNNNNNNNNNNNNNN", "NNNNNYYNNNNNNNNNNNYNNNNNNNNNNYNNNNNNN", "YNNNNNYNNNNNNYNNNNNNNNYNYNNNYNNNNNYNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<int> time = {8, 991, 277, 788, 212, 992, 236, 1000, 1, 239, 6, 11, 80, 129, 945, 796, 24, 48, 316, 37, 640, 667, 140, 927, 5, 924, 328, 245, 931, 1, 388, 991, 663, 523, 463, 81, 997, 998, 211, 774, 12, 32, 930, 6, 193, 981, 985, 959, 332, 603};
    vector<string> prec = {};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 2010;
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    vector<int> time = {986, 972, 277, 49, 62, 598, 93, 2, 26, 30, 936, 597, 946, 122, 27, 66, 58, 418, 871, 629, 989, 875, 1, 997, 793, 7, 507, 943, 104, 323, 70, 971};
    vector<string> prec = {"NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNYNNNNNNNNNNNNNNYNNNNNNNNYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNYNNNNNNNNNYNNYNNNNNNNNNNNN", "NNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNYNYNNNNNYNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNN", "NNNNNNYNNNNNNNNNYNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNYNNNNNNNNNNNYNN", "NNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 1960;
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    vector<int> time = {17, 36, 834, 646, 995, 167, 983, 32, 44, 886, 999, 224, 29, 1000, 935, 105, 999, 500, 949, 981, 245};
    vector<string> prec = {};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 1801;
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    vector<int> time = {15, 355, 888, 1, 506, 837, 13, 886, 68, 112, 58, 944, 977, 920, 254, 1, 617, 792, 987, 19, 358, 11, 20, 580, 92, 907, 964, 3, 229, 902, 74, 9, 789, 995, 879, 857, 316, 14, 22, 1, 686, 137, 999};
    vector<string> prec = {};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 1851;
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    vector<int> time = {866, 346, 863, 8, 2, 47, 753, 990, 987};
    vector<string> prec = {"NNNNNNNNN", "NNNNYNNNN", "NNNNNNNNN", "NNNNNYNNN", "NNNNNNNNN", "NNYNNNNYN", "NNYNNYNNN", "NNNNNNNNN", "NNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 1790;
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    vector<int> time = {29, 972, 23, 184, 17, 23, 921, 1000, 692, 60, 412, 55, 60, 949, 203, 455, 983, 819, 407, 820, 946, 994, 22, 926, 361, 993, 923, 984, 2, 994, 987, 108, 855, 991, 867, 86, 264, 1000, 407, 397, 40};
    vector<string> prec = {"NNNNYYNNNNNNNNNNYNNYNNNNYNNNNNNNNNNNNNNNN", "NNNNNNNYNNNYNNNYNNNNNNNNNNNNNNNNYNNNNNNNN", "NNNYNNNNNYNNNNNNNNNNYNNNNNNYNYNNNNNNNYYNN", "NNNNNYYNNNNYNNNNNNNNNNYNNNNYNNNNYNNNNNNNN", "NNNNNYNNNNNNNYNNNYNNNNNNNNNNNNNNNNNYNNNNN", "NNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNN", "NNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNYNNNNNNNNNNNNNNNYNNNNNNNNNNNNNN", "NNYNYNNNNNNNNNNNYNNNNYNNYNNNNNNNNNNNNNNYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNYYNNNYNNNYNNNNNYNNYNNNNN", "NNNNNNYNNNNNNYNNNNNNNNNNNNNNNNNNYNNNNNNNN", "NNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNYNNNNNNNNYNNNNNNNNNNNNN", "NNNNNYNYNNNNYNNNNNNNNNNNNNNNNNNNNNNNYNNNN", "NNNNNNNNNYYYNNNNNNNNNNNNNYYNYNNNNNNNNNNNY", "NNYNNYNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNYNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNYNNNNNNNN", "NNNNYNYNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNY", "NNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNYNNNNNNNN", "NNNNYNNNNNNNNNNNNNNNYNYNNNNNNNNNNNNNNNYNN", "NNNNNNNNNNNNNNNNNNNNYNNNNNNYYNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNYNNYNNNNNNNYNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNYNYNNNNNYNNNNNNNNYNNNNNYNNNNNYYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNN", "NNNNNNNNNNNNNYNNNNNNNNNNNNNNNYNNNNYYYNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYNNNNNNNNYNNNNNNNNYNNNNNYNNNNYNNNNNNNNN", "NNNNNNNNNNNNNYNNNNNNNNNNYNNNNNNNNNNNNNYNN", "NNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNN", "NNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 5880;
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    vector<int> time = {999, 8, 206, 121, 287, 987, 49, 34, 894, 968, 969, 859, 17, 143, 911, 813, 75, 322, 25, 912, 192, 820, 819, 833, 990, 34, 193, 51, 99, 398, 990, 92, 937, 985, 952, 880, 757, 971};
    vector<string> prec = {"NNNNYNNNNYNNNNNNYNNNNNNNNNYNNNYNNNNNNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNYNNNNNNYNNNYNNNNNYNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNN", "NNNNNNNNNNYNNNNNNNNNNYYNNNNNNNNNNNNNYN", "NNNNNYNNNNNNNNYNNNNNNNNNYYYNNNNNNYNNNN", "NNYNNNNNNNNNNYNNYNNNNYNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNYNNNNNN", "NNNNYNNNNNNNNNYNNNNNNNNNNNNNNNNNNNYNYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNNNNNNNNNNNNNNNNYNNYNYNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNN", "NNNNNNNNNNNNYYNNNNYNNNYYNYYNNNNNYNNYNN", "NNNYNNNNNNNYNNNNNNNNNNNNNYNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNN", "NYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYYNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNN", "NNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNYNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNYNNNNNNNNYNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNYYNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNYNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNNNNNNNNYNNNNNNNNNYYNNNNNNNNNNNNNNNN", "NNNNYNNNNNNNNNNNNNYNNNNNNYNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNN", "NNNNYNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNN", "NNYNYNNNNNNYNNNNNNNNNNNNNNNNNNNNNYNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNYNYNNYN", "NNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNYNNNNNYNNNNNNNNNYNYNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 4225;
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    vector<int> time = {959, 940, 9, 10, 844, 167, 498};
    vector<string> prec = {"NNNNYNN", "NNNNNNN", "NNNNNNN", "NNNNNNN", "NNNNNNN", "NNNNNNN", "NNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 1803;
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    vector<int> time = {983, 3, 136, 961, 156, 980, 930, 888, 760, 678, 4, 769, 10, 82, 9, 938, 17, 33, 86, 988, 984, 18, 11, 461, 930, 128, 54, 870, 23, 264, 837, 178};
    vector<string> prec = {"NNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNN", "NYNNNNYNNNNYYNNNNNYNNNYYNYNYNNNN", "NYNNNNNYNNNYNNNYNNNNNNYNNNNNNNNN", "YYNNNNNNYNNNNNYNNNNNNNYNYNNNYYNN", "YYNNNNYNNYNNNYNYNNNNNNNNNNYNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNYNNYNNNNYNNYNNYYNNYNY", "YNNNNNNNNNNNNYNNNNNNNNNNNNYNNNNY", "NNNNNYNYNYNNNYNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNNNNYYYYNNNNYYNNNNNNNNYNYNNNNN", "NNNNNNNYNNNYNNNYNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNY", "NNNNYNYNYYNYNYYNNNYNYNNNNNNNNNNN", "NNNNNNNNYYNNNNNNNNNNNNYNNNNNNYNN", "YNNNNNNNNNNNNNNNNNNNNNYNNYNNYNNY", "NNNNNNNNNYNYNYNNNNNNNNNNNNYNNNNY", "NNNNNYNNNNNNNNNYNYNYNYNNNYNNNNNY", "NYNNNNNNNNNYNYNYNNNNNNNNNNYNNNNN", "NNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNN", "YNNNNNNYNNNNNYNNNYNNNNNNYNYNYNNN", "NNNYNNNYNYNNNNYNNNNNNYNNNNYNNNNY", "YYNNNNNYNNNYNNNNNNNNNNYNNNYNNYNN", "YNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNN", "NNNNNNNYNNYNNNYYNYNNNYNYYYYNYNYN", "NNNNNNNYNNNYNNNNNNNNNNNNNNNNNNNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNN", "NNNNYYNNYNNNYNNYNNNNNYNNNNNNNYNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 6660;
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    vector<int> time = {134, 1, 54, 76, 1, 939, 959, 2, 158, 261, 723, 859, 54, 1000, 846, 6, 912, 265, 993, 917, 993, 431, 836, 921, 51, 1000, 629};
    vector<string> prec = {"NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNNNNNNNNNNNNNNNNNNNNNNNNY", "NNNNNNNNNYNNNNNNYNNNNNNYNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNYNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNYNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNYNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNYNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 1898;
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    vector<int> time = {762, 112, 868, 114, 115, 918, 416, 937, 38, 5, 32, 646, 2, 667, 9, 975, 995, 505, 3, 742, 356, 456, 954, 891, 5, 999, 7, 985, 610, 960, 781, 685, 678, 250, 981, 888, 38, 225, 531, 937};
    vector<string> prec = {"NNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYNNNNYNNNNNNNNNNNNNNNNNNNNNNYNNNNNNYNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNYNNYYNNYNNNNNYNNNYNYNNNYNNYYNNNNYNN", "NNNYNNNNNNNYNNNNNNNNNNNNNNNNNNNNNYNNNNNN", "YNNNNNNNYYNNNNNNNNNYNNNNNYNNYNYNNYNNNNNN", "YNNYNNNNNYNYNNNNNNYNNNNNNYNNNNNYNNNYNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNYYYNNNYYNNNNYNNNNYNNNYYNNNNNNNNNNNY", "YNNNNNNNYNNNNNNNNNYNNNNNNNNNYNNYNNNNNNNN", "NYNNNNYYNNNNNNNNNNNYNNYNNNNYNNNNNNNNNYNN", "NNNNNYNNNNNNNNNYYYYYNNNNNYYNNNYNYNNYNYNN", "NNYNNNYYNYNNYNNYNYNNYNNNNNYNNNNYNNNNNYNN", "NNYYNYNNNNNNNNNNNNNNNNNNNNYNNNYNNNNNNYNN", "NNYYNNNYNNNYNNNNNNYNYNNNNYNNYNYNNNNYNYNN", "NNNYNNNNNNNNNNNYNNNNYNNNNYYNYNYNNNNYNNNN", "NNNYNNNNYNNNNNNNNNNNNNNNNYNNNNNNNNNYNYNN", "YNNNNNNNYNNYNNNNNNYNNNNNNNNNNNNYNNNNNNNN", "NNNNNYNNNYNNNNNNNNNNNNNNNYYNYNNNNNNYNNNN", "YNNNNYNNYYNYNNNNNYNNNNNNNNNNNNNYNNNNNNNN", "NNNNNNYYYNNNNNNNNNNYNNNNNNNNYNNNNYNNNNNN", "NYNNNNNYYNNYNNNNNNNNNNNNNNNYNNNNNNNNNNNN", "YYNYNNYNNNNNNNNNNNYNNNNYNYNNNNNNNNNYNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNYNNNNNNNNNYNNNNNNNNNYNNYNYNNNNNN", "YNNYNNYNNYNYNNNNNNYNYNNNNNNNNNYNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNN", "NYNYNYNYNNYNNNYNNNNNNNNYNNNYNNYYNYYYNNYN", "NNNNNNNNNYNNNNNNNNNNNNNNNYNNYNNNNYNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNNNNNNYNNNNYNNNNYNNNNNNNNYNYNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNYNNNN", "NNYYNYNYYYNNNNNNYNYNNNNNYYNYNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNYNNNNYYNYNNNNNNNYYNNNN", "NNNYNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNN", "NYNNNNNNNYNYNYNNNNYYNNNNNNYNYNNYNYNNNNNN", "NYNNNNYYYNNYNYYNNNYNNNNNNNNNYNNNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 9065;
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    vector<int> time = {207, 273, 23, 993, 18, 974, 995, 20, 995, 3, 982, 22, 123, 41, 889, 23, 82, 266, 988, 969, 937, 574, 980, 70, 50, 58, 32, 986, 969, 996, 26, 672, 40, 996, 63, 993, 995, 131, 827, 74, 15, 7, 989, 33, 69, 963, 55, 31, 940, 13};
    vector<string> prec = {};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 1949;
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    vector<int> time = {8, 382, 857, 879, 958, 439, 933, 128, 1000, 1000, 983, 19, 723, 961, 962, 136, 237, 316, 900, 971, 981, 152, 194, 873, 951, 935, 659, 203, 67, 22, 856, 975, 30, 37, 12, 148, 27};
    vector<string> prec = {};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 2796;
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    vector<int> time = {1000, 345, 42, 56, 127, 574, 73, 112, 964, 886, 987, 209, 1, 949, 190, 47, 55, 661, 37, 1, 5, 87, 25, 918, 916, 825, 892, 6, 644};
    vector<string> prec = {};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 1661;
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    vector<int> time = {986, 116, 951, 35, 811, 865, 57, 32, 1, 153, 2, 2, 444, 72, 14, 161, 707, 770, 77, 79, 320, 88, 917, 82, 631, 209, 811, 4, 33, 145, 501, 959, 6, 830, 996, 35, 90, 385, 869, 974, 249, 332, 103, 96, 894, 964, 980, 992, 1000};
    vector<string> prec = {};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 2893;
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    vector<int> time = {943, 969, 992, 1000, 848, 50, 970, 140, 104, 831, 297, 969, 920, 72, 949, 83, 975, 799, 47, 375, 77, 818, 141, 853, 7, 1000, 856, 986, 70, 794, 930, 922, 709, 234, 11, 3, 968, 30, 29, 943, 798, 902, 251, 969, 48, 871, 625, 226, 993, 994};
    vector<string> prec = {};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 1801;
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    vector<int> time = {1000, 56, 10, 163, 68, 994, 241};
    vector<string> prec = {"NNYNNNN", "NNNNNNN", "NNNYYNN", "NNNNNNN", "NNNNNNN", "NNNNNNN", "NNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 1173;
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    vector<int> time = {977, 122, 955, 132, 466, 224, 963, 971, 950, 958, 883, 128, 968, 932, 991, 4, 829, 717, 995, 26, 48, 82, 774, 406, 931, 788, 994, 976, 454, 251, 943};
    vector<string> prec = {"NNNNNNNNNNNNNNNYNNYNNYNNYYNYNNN", "YNYNNNNNNYNNNYYYYNNYNYNNYYNNNNY", "YNNNNNNNYYNNNNNYYNYYNNYNYYYYYNN", "NNNNNNNNYYNNNNYYNNNNNYYYYYNNNNN", "NNYYNNNNYNNYYYYYYNNYYYYYYYYNNNY", "YYYYYNNYNNYYNYNYYNYYYYNYYNYYYYY", "YNYYYYNYNNYYYNYNNNYYNYNYYNNYNNY", "YNNNNNNNNNNNNNYYYNNNNYYYYYNNYNN", "NNNNNNNNNNNNNNYNNNNNNYNNNYNYYNN", "YNNNNNNNYNNNNNYYNNNNNYNNYYNYYNN", "YYYNNNNYNYNNYYYYNNYYNYYYYYYNYYY", "NNNYNNNYNNNNNYYYNNNYNYYYYYYNNYN", "YNNNNNNNNYNYNNYNYNYYNYYYNNNYNYY", "NNYYNNNYYYNNNNYNNNYNNNYNYYYNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNYNNNNNNNNNYNNNNNN", "YNNNNNNNNYNNNNNYNNYNNNYYYNNYYNN", "NYNNNNNYYNNYYYNYYNYNNYYNYYYYYYY", "NNNNNNNNNNNNNNYNNNNNNYNNNNNNNNN", "NNNNNNNNYNNNNNNYNNYNNNNYYYNYYNN", "NYYYNNNYYYNNNNYNNNYYNYNYNYYNNYY", "NNNNNNNNNNNNNNYYNNNNNNNNNYNYYNN", "YNNNNNNNNNNNNNYYNNYNNNNYNNNYYNN", "NNNNNNNNYNNNNNYYNNYNNNNNNYNYYNN", "NNNNNNNNNNNNNNYNNNNNNNNNNNNYNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNYYNN", "NNNYNNNNNNNNNNYNYNYYNYYYNYNYNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNYYNNNNNNNNYNNYNNN", "NNYYNNNYNYNNNYYNNNNYNYYNYYYNNNN", "YNNNNNNYYNNNNYNYYNNYNNYNYYNNYNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 13871;
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    vector<int> time = {950, 3, 905, 27, 20, 895, 259, 990, 996, 997, 592, 436, 997, 968, 739, 886, 996, 159, 944, 86, 20};
    vector<string> prec = {"NNNNYYNYYNNNNYYYNYNNN", "NNNNNYYYYNNNYYNNNYNNN", "NNNNYYYNNNNYYYYNNYNYN", "YNNNYYYNYNYYYYNYYYYNY", "NNNNNNNNNNNNNYNNNNNNN", "NNNNYNNNYYYNNNYNNYYYN", "NNNNNNNYNNNNNNNNNNNNN", "NNNNNNNNNNYNNNNYNNNNN", "NNNNYNYYNNNNNYYNYYYNN", "NNNNYNNYNNNNNYYYYNNNN", "NNNNNNNNNNNNNNNNNNNNN", "NNNNNNYNNNYNNNNNYNNNN", "NNNNNNYNNNYNNYYYNNNNN", "NNNNNNNYNNYYNNYNNNNNN", "NNNNNNNNNNNNNNNNYNNNN", "NNNNNNNNNNNNNNYNYNNNN", "NNNNNNNNNNYNNNNNNNNNN", "NNNNNNYYNNYYNYNNYNNNN", "NNNNYNYYNYYYNYNYNNNNN", "NNNNYNNYYYYNYYNNYNNNN", "YNYNNNYYNNYYNYYNNYYYN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 10801;
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    vector<int> time = {64, 961, 245, 24, 752, 907, 852, 961, 1, 1, 654, 968, 422, 946, 990, 999, 961, 962, 7, 53, 224, 35, 276, 23, 918, 460, 871, 31, 896, 794, 111, 77, 228, 973};
    vector<string> prec = {"NNYNYYYNNNNNNNNYYYNNYNYNNNYYYYYNNY", "YNYNYNNYNYNNNYYNNYNYYNYNYNYYYNNNNY", "NNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNYYYNNYNYNNYNNYYNNYYNYNNYNNY", "NNNNNNYNYNNNYYNYNYNNNYYNNNNNNNNNNN", "NNYNNNNNNNNNNYNYYYYNYNYNYNNNNNNNNY", "NNNNNNNNNNNNNNNYYNNNNNNNNNNNNNYNNY", "NNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNN", "NNNNNYNNNNNNNYNNNYNNYNNNNNNNNNNNNN", "NNYNNYNYYNNNYNYNNNNNYNYNNNNYNYNNNN", "YNNNNNNYNYNNNNYNNYYYNNYNYYNNNNYNNY", "YNNYYNYNYNNNNNYNYNNNNYYYYYNNYYYNNN", "NNYNNNYYYNNNNNYNYYNNNNYNYNNNYNNNNN", "NNNNNNNNNNNNNNNNYNYNNNNNYNNNNNNNNN", "NNNNNYNNNNNNNYNNNNNNYNNNNNNNNNNNNY", "NNNNNNNYNNNNNNNNNYNNNNYNYNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNYNNNYNNNNNNNNN", "NNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYNNNNNNNNNNNNNNNNNYNNNYNNNNNNNNN", "NNNNNNNNYNNNYYYYNYNNYYYNYNNNYYYNNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNYNNYNNNYNYNYNNNNNNNNY", "NNNNNNNNNNNNNNNNYNNNNNNNYNNNNNYNNN", "YNYNYYYNYYNNNYYYNYNNNNYNNNNNNYYNNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNYNNYNNYNNNYYNYNNYNNYNNNNNYNNYNNY", "NNYNNNYNNYNNNNNYNNYNNYNNYNNYNYNNNY", "NNYNNNYNYNNNYYYNNYNNNYYNNNNNYYYNNN", "NNNNNNNNNNNNNNNNYNNNNNYNNNNNNNNNNN", "NNNNNYNNYNNNNYYNYNNNYYNNYNNNYNNNNY", "NNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNN", "YNNNYYNNNYNNYNYNYNYYYNYNNNNNNNYNNN", "NNNNNYYNNYYYNYYNNYYYYNYYYNYNNYYNNY", "NNNNNNNYNNNNNNNNYYNNNNYNYNNNNNYNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 8729;
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    vector<int> time = {921, 17, 969, 1, 143, 957, 862, 50, 4, 763, 934, 900, 770, 19};
    vector<string> prec = {"NNNYNNYNYNNNNN", "NNNNNNYNNNNNNY", "NNNYYYYNNNNYNY", "NNNNNNNNYNNYNN", "NNNNNNNNNNNNNN", "NNNNNNNNNNNNNN", "NNNNYYNNYNNYNN", "NNNNYNNNNNYNNN", "NNNNNNNNNNNNNN", "NYNYNYNNNNNYNN", "NNNNNYNNYNNYNN", "NNNNNYNNYNNNNY", "NNNYNNNNYNNYNN", "NNNNNNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 3688;
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    vector<int> time = {1000, 943, 30, 954, 14, 602, 99, 952, 741, 20, 955, 599, 73, 11, 228, 988, 747, 736, 358, 929, 910, 153, 1000, 392, 399, 972, 232, 55, 840, 782, 53, 983, 23, 917, 932, 742, 38, 12, 155, 10, 929, 999, 60, 608, 974, 38, 740, 5, 57};
    vector<string> prec = {"NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYNYNNYNYYYNNNNYNNNNNNYNNYYYNYYYNNYYNNNNNNNYYNNN", "NNNYNNNNNYYNNYNNNYNNYNYYYNNYNYNNYYNNNYNNNNNNYYNNN", "YNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNN", "YNYNNNNNNYYNNYNNYNYNYYNNYNNYNNYNYYNYNYYNYNNYYNNNY", "YNNNNNYNNYNNNNYNYNYYYYNYYNYYNYNYNNYNNYYNYNNYYNNYY", "YNNYNNNYNNYNNNNNNNNNYYNNYNNNNNYNNNNNNNNNNNNNNNNYN", "YNNNNNNNNNYNNNNNNYNNNNNNNNNNNNYNNNNNNNNNNNNYNNNNN", "NYNYNYNYNYNNYNNYYNYYYNYYYNYYYYNYYYNYNNYYYNNNYYYNN", "YNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNYNNNNNNYNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNN", "NNNNYNNYNYNNNNNYYYYNYYNNNNNYNYNYYNNNNNNNNNNYYYYNN", "NNNYNNNNNYNNNNYNYNNNNYYNYNNYNNNNYYNNNYNNYNNNYYYYN", "YNNNNNNNNNYYNNNNNYNNNNYNYNNNNNNNNNNNNNNNNNNYNNNYN", "YNYNNNNNNNNYNNYNYYYNYYNYYNNNNYYNNYNYNNYNNNNNYNYNY", "NNNYNNNNNYNYNNYNNNNNNNYNNNNYNNNNNYNNNNNNNNNNNNYYN", "NNNNNNNNNNYNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNYNNNNN", "YNNNNNYYNYNNNNNNYNNNYNNYYNNYNNNNYNNNNYNNYNNNYYNNN", "NNNNNNYYNNYNNNYNYNNNYYYNYNNYNNYYYYYNNYNNYNNNNNYNN", "YNNYNNNNNNNYNNNNNNNNNYNNYNNNNNYNYNNNNNNNNNNYNNNYN", "YNNYNNNNNYYNNNNNNYNNNNNNYNNNNNYNNNNNNNNNNNNYNNNNN", "YNNYNNNNNNYNNNNNNYNNNNNNYNNYNNYNYNNNNNNNNNNYNNNYN", "NNNYNNNYNYNYNNNNYYNNNNNNYNNYNNNNNYYNNYNNNNNYNNNNN", "NNNNNNNYNNNNNNNNNYNNNNNNNNNYNNNNNNNNNNNNNNNNNNNYN", "NNNYYNNNNNYNNYYNNNNYNNYNNNYNYYYNYYYNYNNYNNNYNNYYY", "NNNNNNNNNYYNNYNNYNNYNYYYNNNYNYYYNYNNNYNNYNNNNYYNN", "NNNNNNNNNNYNNNNNNNNNNNNNNNNNNNYNNYNNNNNNNNNNNNNNN", "NNNNNYNNNNYYNYYNNYYNYNNNYNYNNNNNNNYYNNNNNNNYNYYYY", "NNNNNNNYNNNYNNNNNYNNYNNNYNNNNNYNNNNNNNNNYNNNNNYYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNYNNNNNNNNNYNNNYNNNNNNYNYNNNYYNNNNNNNNNYYYNN", "NNNNNNNNNYYYNNNNNNNNNNNNYNNYNNYNNNNNNNNNNNNNNNNNN", "NNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNYNNNNNNNYNNNYNNYNNNNNYNNNNNNNNNNNNNNNNNN", "YNNNNNYNNYYNNNYNNYNNNNNNNNNYNYNNNNYNNNYNNNNYNYNYY", "YNYNNYNNNNYYNYYNNNYNNNNYNNNNYYYYYNNYNNYNNNNYYYYYN", "NNNNNNYYNNNNNNYNNYNNYYYNYNNYNYYNNNNNNNNNNNNYNNYNN", "YNNNNNNNNYYNNNNNNYNYYYNYYNNNNYYNNYYNNNNNNNNNYYNYN", "YYYYNYYYNNYYNNNNNYYNNYYNNNYYYNNNNYNNNNYNNNNYNYYYN", "YNNNNNYNNYNYNNNNNNNNNNNNYNNYNNYNYNNNNNNNNNNYNNYYN", "NNYNYNNNNYYYNNYYNNYNNYYNYNNYNYNNYNNYYYNNYNNNYNYYN", "YNNNYNYYYYNYYNNYNNNNNNNNNNYNYYNNYYNNNNNNNYNYYYYNN", "YNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNNNNNYNNNNNNNYNYYNNNYYNNNNYNYNNYNYNNNNNYNNNNNYYN", "YNNYNNNNNYYYNNYNNNNNYYNNNNNNNYYNNNNNNYNNYNNYNNYNN", "YNNYNNNNNNYYNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNN", "NNNNNNNYNNYNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNYNNNNN", "NNNYNNYYNNNYNYYNYNNNNYNYNNYYNYNNYNNNNYYNYNNNNYYNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 14312;
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    vector<int> time = {986, 40, 9, 118, 910, 781, 989, 998, 929, 949, 978, 979, 11, 250, 24, 82, 934, 1, 809, 92, 22, 995, 76, 992, 51, 999, 824, 989, 948, 481, 994, 983};
    vector<string> prec = {"NNYNNNNNNNNNNNNNNYNNNNNNNNNNNYNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNNNNNNNNNNNNNNNNNNYNNNNNNNNYNN", "YYNNNNNNNNYNNNNNYNNNNNNNNNNNYYNN", "NNYYNNNYYYYNNNYNNNNNYYNNNNYYNYNY", "NNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNN", "NNNNNYNYNNNNNNNNNNNNYNNNNYYNNNNN", "NNYNNYNNYNNNNNNNYNYNYNNYNNNYNYNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNY", "NNNNNNNNNNNNNNNNYNYNYNNNNNNYNYNN", "NYNNNNNNNNNNNNNNNYYNNNNNNNNNNNNN", "NNNNNYYNYNNNNNNNNYNNNNNNNNNNYYNY", "NYYNNYYYYYNNNNNNNYNNYNNNNNYNNYNN", "NNYNNNNNYYNNYNYNYYNYNNNNYNNNNNNY", "YYYNNNNYNNNNNNNNYNYNYNNYNNNYNYNY", "NNNNNNNYYNNNNNNNNNNNNNNYNYYNNYNY", "NNYNNNNNNNNNNNNNNYNNNNNNNNNNNYNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNNNYNNNNNNNNNNNNNNNNNNNNNNNYNN", "NYNNNNNNNYNNNNNNYNNNYNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNNNYNYYNNNNNYNNNNYNNNYNNNNNNNN", "YNYNNYNNNYNNNNNNNNYNNNNYNNYYYNNN", "NNNNNYNNNNNNNNNNYNNNYNNNNNNNNYNN", "YNNNNYNNNYNNNNNNYNYYNNNYNNNNNYNN", "NNYNNNNNNNNNNNNNNNNNNNNNNNNNNYNN", "YYYNNNNYNNNNNNNNYNYNNNNNNYNNNYNN", "NYNNNYNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNNNNYNYYYNNNNNNNNNYYNNYNYNYNNNN", "NYNNNNNNNNNNNNNNNNNNYNNNNNNNNNNY", "NYNNNNYYNYNNNNNNNYYNNNNYNNYNNNNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 7204;
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    vector<int> time = {809, 892, 111, 998, 42, 722, 54, 935, 18, 231, 16, 4, 62, 125, 990, 669, 773, 404};
    vector<string> prec = {"NYYYNNYNNYNYYYYYNY", "NNYNNNNNNYNNNNNNNY", "NNNNNYNNNYNNNNNNNY", "NYNNNYNNNYNNNNNNNN", "YYYYNNNYNNNNYYYNNY", "NNNNNNNNNNNNNNNNNN", "NYYYNYNNNNNNNYNNNY", "NYYYNNYNNYNNYYYYNY", "YYNYYYYYNNYYYYYNNY", "NNNNNYNNNNNNNNNNNN", "YYYYYYYYNYNNNNYYNY", "NYYYNYNNNYNNNYNNNY", "NYNYNYNNNYNYNYYYNY", "NYYNNNNNNNNNNNNNNY", "NYYYNYNNNNNYNYNYNY", "NYYNNNNNNYNNNNNNNY", "YYYYNYNYYYYYYNNYNY", "NNNNNYNNNYNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 6198;
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    vector<int> time = {143, 54, 741, 999, 24, 989, 923, 1000, 936, 36, 243, 22, 578, 44, 964, 49, 840, 987, 133, 6, 69, 996, 282, 62, 989, 111, 480, 14, 795, 56, 10, 754, 448, 260, 105, 26, 897, 979, 992, 35, 262, 234, 977, 56, 132, 806, 5, 983, 27, 1000};
    vector<string> prec = {"NYYNYYNNYNYNNNYYYYYYNNYNNNNYYYNNNYNYYNYNYNNYNNYYNN", "NNNNNNNNNNNYYNNYYNYNNYYNNNNYYNYNYNNNYYYYNNNYYNNYYN", "NNNNNNNNYNNNYNNYNYNNNNNNYNNYNNYNYYNYYNYNNNNYNNYNNN", "NNYNNNNNNNNYYNNYNNNNNNNNNNNYNYNNYYNYYNNYNNNNYNNNNN", "NYYNNYNNYNNNYNNYYYYNNYYNNYYYNYNNYYNNNYNNYNNNNNYNNN", "NNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNN", "NYYNNYNNYNYYNNNYNNNNNNYNNNYYNNYYNYNNNYYNYNYNNYYYNN", "NNYNNNYNNYYYYNNNYYNYYNYYNYYYYYYYYYYYYNNYYYNNNNNYNY", "NNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YYYNNNYNNNYNNNNYYNYYNYYNNNYNNNNNYYYYNYYNYNYNYYYYYY", "NYYYNNNNYNNYNNNNYNYYNNNNYYYNYNYNYNNYYNNYYNYYYNNNYN", "NNNNNYNNYNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNYNNYNNYNNNYNYNNNNNNYNYYNNNNNYNNNNNYNNYNNNNNYN", "YNYYYNNNYNNNNNYNNYYYYYYYYYNYNYNNYYYNYYYYYNNNYNYYNY", "NNNNNNNNNNNNNNNNNYNNNNNNYNYYNNNNNNNNYNYNNNNYNNNNYN", "NNNNNYNNYNNYNNNNNNNNNNNNYNYYYNNNNNNYNNYNNNNNNNNNYN", "NNNYNNNNNNNYNNNNNYYYNNNNYYYNYNNNNYNYYYNYNNYNYNNNNN", "NNNNNYNNYNNYNNNNNNNNNNNNYNYNNNNNNNNYNNYNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNYNNNNNNYNNNNNYNYYNYNNNYNNYYYNYNNN", "NNNNNNNNYNNYNNNNNNYNNNYNNYNYYYYNYYNYNYYYNNNYYNYNNN", "NNYNNYYNNNYNNNNNYNNYNYYNYYYNYYYYYNNYNYNNNNNYNNNNYN", "NNNNNYNNYNNYNNYNNYYNNNNNYYYYYYYNNNNYYNYNNNYYYNNNYN", "NNNNNYNNYNNYYNYYNNNNNNNNYNNNYNYNNYNYNNNYNNNNYNNNYN", "YYNNNYYNYNNYYNYYNYYNYNYNNNYYNNNYNYNYNNYNYNYYYYNNYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYNNNNNYNNNYNYNNNYNNNYNYNNNNNNNYYNYNNYYNNNYYNYNNN", "NNNNNYNNYNNYNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNYNNYNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNN", "NNNNNYNNYNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYNNYNNYNNNNNYYNYYNNNYNYNNYYNNNNNNNYNNYNNNNNNYNNN", "NNNNNYNNYNNNNNYYNYNNNNNNYNNNNNNNNNNYYNYNNNYNNNNNNN", "NNYYNNNNYNNNYNYNYYYNNNNNYYYNNYNNNYYYYNNYYNNYYNYYYN", "NNNNNYNNYNNYYNYNNYNNNNNNYNNNYNNNNYNYYNYYNNYYNNNNNN", "NNNNNNNNNNNNNNYNNYNNNNNNYNYYNNNNNNNNNNYYNNYNNNNNNN", "NYNYNYNNYNNYYNYYYNYYNNNNNNNYYYNNNYNNYYNNNNNYYYYNNN", "NNNNNYNNYNNYNNNNNNNNNNNNYNYYYNNNNNNNNNNNNNNNNNNNNN", "NNNNNYNNYNNYNNNNNYNNNNNNNNYNYNNNNNNNNNYNNNNNNNNNNN", "NNNYNNNNNNNNYNYYNNNNNNNNYNNYYYNNYYNYYNYNNNNYNNYNYN", "NNNNNYNNYNNNNNNNNNNNNNNNYNNNYNNNNNNNNNNNNNNNNNNNNN", "NNNNNYNNYNNNNNYYNNNNNNNNYNNYNNNNNNNYYNYNNNNYNNNNYN", "NNYYNNNNNNNYNNNYNNYNNYYNYYNNYYNNYNNYNYNYNNNNYNYNYN", "YYYYNNNNNNNYYNYYYYYNYYYYYYYYYYYYYYYNYNNNYNNYYNNNNN", "NNNNNNNNNNNNNNYYNYNNNNNNNNYYNNNNNNNNYNYYNNNNNNNNNN", "NNNNNYNNYNNYNNNNNYNNNNNNNNNYNNNNNNNNYNYNNNNNNNNNYN", "NNNNNYNNYNNNYNYNNYNNNNNNNNYYNNYNNNNNYNYNNNNNNNNNYN", "NNNYNNNNYNNYYNYNNNYNNNNNYNNYYNYNNYNYYNYNNNYYYNNNYN", "NNNNNYNNNNNYYNYNNNNNNNNNYNYNYNYNNNNYYNYYNNYYNNNNYN", "NNNNNNNNYNNNYNYNYNYYNNNNYNYNYYNNNYNYYNYYNNYNNYYNYN", "NNNNNYNNNNNNNNNNNYNNNNNNYNYYYNNNNNNYYNNNNNNNNNNNNN", "YYYNYYYNYNNYYNYYYYYYNYNYYYYYYYYNYYNYNNNNYNYYNNYYYN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 18559;
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    vector<int> time = {355, 37, 614, 971, 398, 993, 35, 918, 136, 106, 822, 275, 162, 978, 999, 967, 947, 107, 980, 996, 110, 1000, 944, 1, 186, 29, 288, 982, 197, 45, 8, 906, 889, 3, 897, 162, 860, 131, 52, 265, 1000, 24, 909, 133, 30, 184, 19, 972, 339, 382};
    vector<string> prec = {"NNYYYNNNNYYNNYNYYNNYNNYYYNYYNNYYNYNNYYYNYYYNYYYYNN", "YNYYNYYYYYYYNYNYYYYYNNYYNYYYYYYYNYNNYYNYYYYYYYYNNN", "NNNNNNNNNNYNNYNNNNNNNNNNNNNNNNYNNNNNNNNNNNYNYNNYNN", "NNYNYNNNNYYNNYNYYNNYNNYNYNNYNNYYNNNNNYYNYNYYYYYYNN", "NNYNNNNNNYYNNYNYYNNYNNYYYNNYNNYYNNNNNYYNNYYNNYNYNN", "NNYYNNNNNYYNNYNYYNNYNNYYYNYYNNYYNYNNYNYNYYYYYYYYNN", "YNYYYYNYYNYNNYYYYNYYNNNYYYYYNNYYNYNNYNYYYNYNYNYNNN", "NNYYYYNNNYYNNYNNYNNNNNYYYNYYNNYYNYNNYYYNYYYYYYYYNN", "YNYYYYNYNYYNNYNYYNYYNNYYNNYYYNNYNYNNYYYNYYYYNNYYNN", "NNYNNNNNNNNNNYNNYNNNNNNYNNNNNNYNNNNNNNNNYNYNNNYYNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNN", "YNYYYYNYYNYNNYYYYNYYNNYYYYNYYYYYNNNNYYYYNYYYYYYNNY", "YYYYYYYYNYNYNYYYYYYYNNYYYYYYYNYYNYNNYYYYYNYYNNYNNY", "NNNNNNNNNNNNNNNNYNNNNNNNNNNNNNYNNNNNNNNNNNYNYNNYNN", "YNYYNYNYYNYNNYNYYNYNNNYYYNNYYNYYNYNNYYYYYYYYYYYYNN", "NNYNNNNNNYYNNYNNNNNNNNYNNNNNNNYYNNNNNYNNYNYYYNNYNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYNYYYYYYYYNYYYNNYYNNYYYYYYYYNYNYNNYYNYNYYYYNNYNY", "YNYYYYNYNYYNNYNYNNNYNNYYYNYYNNYYNYNNYYYNYYYYNYNNNN", "NNYNNNNNNYYNNYNYYNNNNNYYNNNNNNYYNNNNNYNNYNYYYYYYNN", "YNYYYYYYYYYYYYYYYYNYNNYYYYYYYNYYNYNYYYYYYYYYYYYYNY", "NNNYYYYYYYYYYYYNNNYYYNYYYNYYYYYNNYYNYYNYYYYYYYYYYY", "NNYNNNNNNNYNNYNNYNNNNNNYNNNNNNYYNNNNNNNNNNYNYNYYNN", "NNNNNNNNNNNNNYNNNNNNNNNNNNNNNNYNNNNNNNNNYNYNYNNNNN", "NNYNNNNNNYNNNYNYNNNNNNYYNNNNNNYYNNNNNYNNYNYYYYYYNN", "YNYYYYNYNYYNNYNYNNYYNNYNYNYYYNYYNNNNYNYNYYYYYYNYNN", "NNYYYNNNNYYNNYNYNNNYNNYYYNNYNNYYNNNNNYYNNNYYYNYYNN", "NNYNNNNNNYYNNYNNYNNYNNYNYNNNNNYYNNNNNYYNNYNYYYYYNN", "YNYYYNNYNNYNNYNYNNYYNNYYYNYYNNNYNYNNYNYYYYYYYYNYNN", "YNYYYYYYYYYNNYYYYNYYNNYNYYYYYNYYNYNNYNYYYYYYYYYNNN", "NNNNNNNNNNYNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNYNN", "NNYNNNNNNNYNNYNNNNNNNNNYNNNNNNYNNNNNNNNNYNYNNNNNNN", "YYYYYYYYYYYYNYYYYNYNYYYYNYYYNYYNNYYYYYYYYYYYNNNYNY", "NNYYYNNNNYYNNYNYYNNYNNYYYNNYNNYNNNNNNYYNYYYYNYYYNN", "YNNNYNNNYYYYYYYYYYYYNNNYYYYYYNYYNYNYYYYYYYYYYYYYYY", "NYYYYYNYYYYNNYYYYYYYNNYYNYYNYYNYNYNNYYYYYYYYYYNNNY", "NNYYYNNNNNNNNYNYYNNYNNYNYNYYNNYYNYNNNYYNYYYYNYYYNN", "NNYNNNNNNYYNNNNNYNNNNNYYNNNNNNNYNNNNNNNNYNYNYYYNNN", "NNYNNNNNNYYNNYNNYNNYNNYYNNNNNNYYNNNNNYNNNNNYYYYYNN", "YNNYYYNYNYYNNYNYYNNYNNNYNNYYNNYYNYNNYYYNYYYYYYYYNN", "NNYNNNNNNNNNNYNNYNNNNNNNNNNNNNYNNNNNNNNNNNNNYNNYNN", "NNYNNNNNNYNNNYNYYNNYNNYYYNNNNNYYNNNNNNNNYNYNNYYYNN", "NNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNN", "NNYNNNNNNYYNNYNNYNNNNNYYNNNNNNYYNNNNNYNNNNYNYYYYNN", "NNNNNNNNNNYNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNYNN", "NNYNNNNNNYYNNYNNNNNNNNYYNNNNNNYYNNNNNNNNYNYNYNYYNN", "NNYNNNNNNNYNNYNNYNNNNNNYNNNNNNYYNNNNNNNNYNYNYNNYNN", "NNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YYYNNYYYYYYYYNYYYYNYYNYYYYYYYYYYNYNYYYYYYNYYNYYYNY", "YNNNNYYYYYYNNYYYYNYYNNYYYYYNYYNYNYNNYYYYNYYYNYYYNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 22605;
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    vector<int> time = {254, 18, 41, 18, 149, 980, 941, 19, 825, 95, 47, 83, 109, 41, 915, 721, 301, 31, 727, 115, 78, 2, 989, 14, 994, 2, 140, 4, 1000, 983, 975, 31};
    vector<string> prec = {"NYNYNNNNYNNNNYYYYYYYNNNYYYYYNYYY", "NNNNNNNNNNNNNNNNNYNNNNNNNNNYNNNN", "YYNYNNYYYYYYYYYYYYYYNNYYYYYYNYYY", "NYNNNNNNYNNNNNNYNYNNNNNNNNYYNYNN", "YYNYNNNNYNYNNNYYYYYYNNNYYYYYYYYY", "YYYYYNYYYNYYYYYYYYYYNYYNYYYYYYYY", "YYNYYNNYYNYNYYYYYYYYNNNYYYYYYYYY", "YYNYYNNNYNYNYYYYYYYYNNNYYYYYYYYY", "NYNNNNNNNNNNNNNNNYNNNNNNNNNYNNNN", "YYNYYNNYYNYNYYYYYYYYNNNYYYYYYYYY", "YYNYNNNNYNNNNYYYYYYYNNNYYYYYNYYY", "YYNYYNYYYYYNYYYYYYYYNNYYYYYYYYYY", "YYNYYNNNYNYNNYYYYYYYNNNYYYYYYYYN", "NYNYNNNNYNNNNNYYNYNNNNNNNNYYNYYN", "NYNYNNNNYNNNNNNYNYNNNNNNNNYYNYYN", "NYNNNNNNYNNNNNNNNYNNNNNNNNNYNNNN", "NYNYNNNNYNNNNYYYNYYYNNNYNYYYNYYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNYNNNNYNNNNYYYNYNNNNNNNYYYNYYN", "NYNYNNNNYNNNNYYYNYYNNNNYNYYYNNYN", "YYYYYYYYYYYYYYYYYYYYNYYNYYYYYYYY", "YYYYYNYYYYYYYYYYYYYYNNYYYYYYYYYY", "YYNYYNYYYYYNYYYYYYNYNNNYYYYYYYYY", "NYNYNNNNYNNNNYYYNYYNNNNNNYYNNYYN", "NYNYNNNNYNNNNYYYYYYYNNNYNYYYNYYY", "NYNYNNNNYNNNNYYYNYNNNNNNNNYYNYYN", "NYNNNNNNYNNNNNNYNYNNNNNNNNNYNYNN", "NNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNN", "YYNYNNNNYNYNNYYYYYYYNNNYYYYYNYYY", "NYNNNNNNYNNNNNNYNYNNNNNNNNNYNNNN", "NYNYNNNNYNNNNNNYNYNNNNNNNNNYNYNN", "NYNYNNNNYNNNNYYYNYYYNNNYNYYYNYYN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 11547;
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    vector<int> time = {61, 999, 857, 936, 178, 966, 889, 22, 21, 982, 996, 997, 10, 848, 636, 647, 887, 986, 584};
    vector<string> prec = {"NNYNNNNNNYYYNYYYYNY", "NNNYNNNNYNYNNNNNNNN", "NYNYNNYNYNYNNNYNYNN", "NNNNNNNNNNNNNNNNYNN", "YYYYNYYYYNYYYYYNNYY", "YYYYNNYYNYYYYYYNYYN", "NYNYNNNNYNYNNNNNYNN", "NYYYNNYNYYYYNYYYYNY", "NNNYNNNNNNNNNNNNYNN", "NYNYNNNNYNNNNNNNYNN", "NNNYNNNNNNNNNNNNYNN", "NYYYNNYNNYYNNYYNYNN", "YYNYNNYNYYYYNYYYYNY", "NYYYNNYNYYYNNNYNYNN", "NYNYNNYNYNNNNNNNYNN", "NYYYNNYNYYYYNYYNYNN", "NNNNNNNNNNNNNNNNNNN", "YYYNNNYYYYNYNYYNYNY", "NYYNNNYNYYYYNYYYYNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 11467;
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    vector<int> time = {930, 861, 270, 363, 437, 851, 952, 128, 901, 7, 927, 228, 989, 46, 70, 868, 586, 153, 567, 129, 12, 866, 983, 147, 10, 30, 140, 228, 58, 982, 47, 71, 716, 96, 3, 20, 27, 2, 47};
    vector<string> prec = {"NYYYNNNNYYNNYNYYYNNYNYNNNNYNNYYYNYNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNYNNNNNYNYNNNYYNNNNNYNNN", "NNNNYNNYNNNYNYNNNNNYNNNYNNNNNYYNNYYNNNN", "NYYNNNNYNNNNNYNNYNNNNNYNYNYNYNYYNNNYNNN", "YYNNNNNNNNNNNNNNYNNNNNNYYYYYYNNYNYNNYNY", "NNNNYNNNYYNNNNYNNNNNNNYNYNNNYYNYNYYNNNN", "NNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNNNNNNNYNYNNNYYNNNNNNYNNNNYNNNNNNYNNN", "NYNNNNNYNNNNNNNNYNNNNNYYYNNNNYNNNNNYNNN", "NYNYNNYYYNNNNYYNYNNYNNYNNNNNYNYYYNYYNYN", "NYNNNNNNNNNNYYNNNNNNNNNNYNNNNNNNNNNNNNN", "NNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNYNNYNNNYYNNNNNNNNNNNYYYYNNNYNNN", "NNNNNNNYNNNNNYNNYNNNNNYNNNNNYNNNNNNNNNN", "NYNNNNNNNNNNYNNNNNNNNNNNYNNNNNNNNNNNNNN", "NYYYYNYYNNYNYYNNYNNYNNYYYNNNYNNNNNNYNYN", "YYNYNNYNYNNYNNNYNNNYNYYNNYYNNYNNYNYYYNN", "NYYNNNNYNYNNNNNNYNNNNNNNYNYNNYNYNNNYNNN", "YYNYNNYNYNNYYNNNYNYYNNYYNYYNNNNNYNYNYNN", "NNNNYNNYNNNNYYNNYNNYNNYYNNYNNYNYNNYYNNN", "NYNNNNNYNNNYYNNNNNNNNNNNYNNNNNNNNNNNNNN", "NYNNNNNNNNNYNNNNNNNNNNNNYNNNNYNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YYNNNNNNYYNYNYNYYNNYNNNYNNYNYNYYNNNYNNN", "NNNNNNNNYYNYNNNNYNNNNNYNNNNNNYYYNNNNNNN", "NNYNNNNNNYYNYYNNNNYYNYNYYNNNNNYNNYNYYNN", "NYNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNYNYNNNNNNNNNNNNNN", "NYNNNNNYNNNYNYNYYNNNNNYNNNNNNYNNNNNYNNN", "NNNNNNNNNNNNYNNNNNNNNNNYNNNNNNNNNNNNNNN", "YNNNNNYYYYNNNNNYYNNYNNYNNNYNNYNNNNYYYNN", "NNNNNNNNYNNNYNYYNNNNNNYYNNYNNNNNNNYNNNN", "NYYNNNNYNNNYYNNNNNNYNNYYYNNNNNNYNNNNNNN", "NNNNNNNNNNNNYYNYNNNNNNNYYNNNYNNNNNNNNNN", "NNNYNNNNNNNYNNYNNNNYNNYNYNYNYNNYNNNNNNN", "NNNNYNNNNYNNNNNNNNNYNYYYYNNNNNYNYNYYYNN", "YNNYYNYNYNNNYYYYNNNNYNNNYYNNNNNYYYNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 9400;
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    vector<int> time = {60, 969, 958, 64, 976, 792, 129, 6, 977, 102, 10, 995, 839, 45, 109, 185, 994, 821, 124, 54, 875, 998, 851, 59, 339, 997, 35, 93, 182};
    vector<string> prec = {"NNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNNYNYNYNYNYYYNNYNYYYYYNNYYYN", "YYNYYYYYNYNYYYNNNNYYYYYNNYYYN", "YNNNNNNNNNNNYYNNNNYYNNNNNYNNN", "YYNYNYYYNYNYYYNNYNYYYYYNNYYYN", "YNNYNNNYNYNNYYNNNNYYNYYNNNYYN", "YYNYNYNYNYNYYYNNYNYYYYYNNYYYN", "NNNYNNNNNYNNYYNNNNYYNYYNNYYYN", "YYYYYYYYNYYYYYYNYYYYYYYYYYYYN", "YNNYNNNNNNNNYYNNNNYYNYYNNYNYN", "YYYYYYYYNYNYYYYNYYYYYYYNYYYYN", "NNNYNYNYNYNNYYNNNNYYNYYNNYYYN", "YNNNNNNNNNNNNYNNNNNYNNNNNNNNN", "YNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YYYYYYYYNYNYYYNNYYYYYYYNYYYYN", "YYYYYYNYYYYYYYYNYYYYYYYYYYYYN", "YNNYNYNYNYNYYYNNNNYYNYYNNYYYN", "YYYYYYYYNYNYYYNNYNYYYYYNNNYYN", "NNNNNNNNNNNNYYNNNNNYNNNNNNNNN", "YNNNNNNNNNNNNYNNNNNNNNNNNNNNN", "YNNYNYNYNYNNYYNNYNYYNYYNNYYYN", "YNNYNNNNNNNNYNNNNNYYNNYNNYNYN", "YNNYNNNNNNNNYYNNNNYYNNNNNYNNN", "YNYYYYYYNYYYYYYNYYYNYYYNYYYYN", "YYYYYYYNNYNYYYNNYYYYYYYNNYYYN", "YNNNNNNNNNNNYNNNNNYYNNNNNNNNN", "YNNYNNNNNYNNYYNNNNYYNYYNNYNYN", "YNNYNNNNNNNNYYNNNNYYNNYNNYNNN", "YYYYYYYYYYYYNYYYYYYYYYYYYYYYN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 13638;
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    vector<int> time = {158, 66, 815, 991, 972, 594, 406, 731, 712, 66, 706, 41, 1, 999, 992, 678, 920, 950, 130, 149, 63, 32, 486, 782, 21, 297, 511, 1, 369, 251, 101, 4, 80, 969, 930, 982, 80, 174, 965, 970, 1, 917, 71, 23, 205, 978, 219, 898, 21, 209};
    vector<string> prec = {"NYYNNYYYYNNYNNYYYYYNNYYNYNYYYYNYYNNYNYNYYYYNYNYNNN", "NNNNNYNNNNNNNNNNNYNNNNNNNNYNNNNNNNNNNNNNNYNNYNNNNN", "NYNNNYYNYNNYNNYYYYYNNNYNYNYYYYNYYNNYNYNYYYYNYNNNNN", "YYYNNYYYYNNYNNYYYYYYNYYNYNYYYYNYYNNYNYNYYYYNYNYNNN", "YYYYNYYYYNNYNNYYYYYNYYYNYYYYYYNYYNNYYYYYYYYNYNYYYN", "NNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNYNNYNNNNN", "NYNNNYNNNNNNNNNYYYYNNNYNYNYYYYNNYNNYNNNNYYYNYNNNNN", "NYYNNYYNYNNYNNYYYYYNNNYNYNYYYYNYYNNYNYNYNYYNYNNNNN", "NYNNNYYNNNNYNNYYYYYNNNYNYNYYYYNYYNNYNYNYYYYNYNNNNN", "YYYYYYYYYNNYNYYYYYYYYYYYYYYYYYYYYNYYYYYYYYYYYNYYYN", "YYYYYYYYYYNNNYYNYYYYYYYYYYYYYYYYYYYYYYYYYYYYYNYYYY", "NYNNNYYNNNNNNNNYYYYNNNYNYNYYYYNNYNNYNNNNYYYNYNNNNN", "YYYYYYYYYYYYNYYYYYYYYYYYYYYYYNYYYYYYYYYYYNYYYNYYYN", "YYYYYYYYYNNYNNYYYYYYYYYYYYYYYYYYNNYYYYYYYYYYYNYYYN", "NYNNNYYNNNNYNNNYYYYNNNYNYNYYYNNNYNNYNYNNYYYNYNNNNN", "NYNNNNNNNNNNNNNNYYYNNNYNYNYNYYNNYNNYNNNNYYYNYNNNNN", "NYNNNYNNNNNNNNNNNYNNNNNNNNYNNNNNNNNNNNNNNYNNYNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNN", "NYNNNYNNNNNNNNNNYYNNNNYNYNYNNYNNNNNYNNNNNYYNYNNNNN", "YYYNNYYYYNNYNNNYYYYNNYYNNNYYYYNYYNNYNYNYYYYNYNYNNN", "YYYYNYYYYNNYNNYNYYYYNYYNNYYYYYNYYNNYNYYYYYYNYNYNYN", "NYYNNYYYYNNYNNYYYYYNNNYNYNYYYYNYYNNYNYNYYNYNYNYNNN", "NYNNNYNNNNNNNNNNYYNNNNNNYNYNNYNNNNNYNNNNNYNNYNNNNN", "YYYYYYYYYNNYNNYYYYYYYYYNYYYYYYYYYNYYYYYYYYYYYNYYYN", "NYNNNYNNNNNNNNNNYYNNNNNNNNYNNYNNNNNYNNNNNYNNYNNNNN", "YYYYNYYYYNNYNNYYYYYYNYYNYNYYYYNYYNNYNYYYYYYNYNYNYN", "NNNNNYNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNYNNYNNNNN", "NYNNNYNNNNNNNNNYYYYNNNYNYNYNYYNNYNNYNNNNYYYNYNNNNN", "NYNNNYNNNNNNNNNNYYYNNNYNYNYNNYNNYNNYNNNNYYYNYNNNNN", "NYNNNYNNNNNNNNNNYYNNNNNNNNYNNNNNNNNYNNNNNYNNYNNNNN", "YYYYYYYYYNNYNNYYYYYYYYYNYYYYYYNYYNYYYYYYYYYNYNNYYN", "NYNNNYYNNNNYNNYYYYYNNNYNYNYYYYNNYNNYNYNYNYYNYNNNNN", "NYNNNYNNNNNNNNNNYYYNNNYNYNYNNYNNNNNYNNNNNYYNYNNNNN", "YYYYYYYYYYNYNYYYYYYYYYYYYYYYYYYYYNYYYYYYYYYYYNYYYN", "YYYYYYYYYNNYNNYYYYYYYYYNYYYYYYNYYNNYYYYYYYNNYNYYYN", "NYNNNYNNNNNNNNNNYYNNNNNNNNYNNNNNNNNNNNNNNYNNYNNNNN", "YYYYNYYYYNNYNNYYYYYYYYYNYYYYYYNYYNNYNYYYYYYNYNYNYN", "NYNNNYYNNNNYNNNYYYYNNNYNNNYYYYNNYNNYNNNNYYYNYNNNNN", "YYYYNYYYYNNYNNYYYYYYNYYNYNYYYYNYYNNYNYNYYYYNYNYNNN", "NYNNNYYNNNNYNNYYYYYNNNYNYNYYYYNNYNNYNYNNYYYNYNNNNN", "NYNNNYNNNNNNNNNNYYYNNNYNYNYNNYNNYNNYNNNNNYYNYNNNNN", "NNNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNN", "NYNNNYNNNNNNNNNNYYNNNNYNYNYNNYNNNNNYNNNNNYNNYNNNNN", "YYNYYYYNYNNYNNYYYYYYYYYNYYNYYYYYYNYYYYYYYYYNYNYYYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYNYYNYYYY", "NYYNNYYYYNNYNNYYYYYNNNYNYNYYYYNYYNNYNYNNYYYNYNNNNN", "YYYYNYYYYNNYNNYYYYYYYYYNNYYYYYNYYNNYYYYYYYYNYNYNYN", "NYYYNYYYYNNYNNYYYYYYNYYNYNYYYYNYYNNYNYYYYYYNYNYNNN", "YYYYYYYYYYNYNYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYNYYNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 22687;
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    vector<int> time = {597, 44, 30, 776, 20, 958, 346, 184, 924, 923, 169, 41, 23, 527, 997, 978, 800, 4, 898, 883, 76, 966, 807, 83, 181, 83, 134, 140, 121, 5, 509, 994};
    vector<string> prec = {"NYYNYYYYYYYNNYYYYYYYYYYNNYYYYYYY", "NNYNYNNNNYNNNNNNNNNNNNNNNYYNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNN", "YYYNYYYYYYYYNYYYYYYYYYYNNYYYYYYY", "NNYNNNNNNNNNNNNNNNNNNNNNNYYNNNNN", "NYYNYNNNYYNNNYNNNNNNNYNNNYYNYNNN", "NYYNYYNNYYNNNYNYNYYYNYYNNYYNYYYN", "NYYNYYYNYYNNNYYYNYYYYYYNNYYYYYYN", "NYYNNNNNNYNNNYNNNNNNNYNNNYYNNNNN", "NNYNYNNNNNNNNNNNNNNNNNNNNYYNNNNN", "NYYNYYYYYYNNNYYYYYYYYYYNNYYYYYYY", "YYYNYYYYYYYNNYYYYYYYYYYNNYYYYYYY", "YYYYYYYYYYYYNYYYNYYYYYYNNYYYYYYY", "NYYNYNNNNYNNNNNNNNNNNNNNNYYNNNNN", "NYYNYYYNYYNNNYNYNYYYYYYNNYYNYYYN", "NYYNYYNNYYNNNYNNNYYNNYYNNYYNYNYN", "NYYNYYYYYYNNNYYYNYYYYYYNNNYYYYYN", "NYYNYYNNYYNNNYNNNNYNNYYNNYYNYNNN", "NYYNYYNNYYNNNYNNNNNNNYYNNYYNYNNN", "NYYNYYNNYYNNNYNYNYYNNYYNNYYNYYYN", "NYYNYYYNYYNNNYNYNYYYNYYNNYYNYYYN", "NYYNYNNNNYNNNYNNNNNNNNNNNYYNNNNN", "NYYNYYNNYYNNNYNNNNNNNYNNNYYNYNNN", "YYYYYYYYYYYYYYYYYYYYYYYNNYYYYYYY", "YYYYYYYYYYYYYYYYYYYYYYYYNYYYYYYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNYNNNNNNNNNNNNNNNNNNNNNNYNNNNNN", "NYYNYYYNYYNNNYYYNYYYYYYNNYYNYYYN", "NYYNYNNNYYNNNYNNNNNNNYNNNYYNNNNN", "NYYNYYNNYYNNNYNYNYYNNYYNNYYNYNYN", "NYYNYYNNYYNNNNNNNYYNNYYNNYYNYNNN", "NYYNYYYYYNNNNYYYYYYYYYYNNYYYYYYN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 14221;
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    vector<int> time = {858, 54, 589, 401, 959, 862, 962, 996, 996, 981, 993, 90, 957, 1, 861, 9, 21, 981, 252, 942, 823, 8, 46, 32, 922, 948, 777, 16, 21, 42, 912, 562, 826, 645};
    vector<string> prec = {"NNNYYYNYYNYNNNNYYNNNYNNNNNYYYYNYYY", "NNNNNNNNNNNNNNNYNNNNNNNNNNNNNNYNNN", "YNNYYNNNYNNNNNNYYNNYNNYYNYYYYYNYYY", "NYNNNNNNYNNNNNNYNNNNNNNNNNNYNYYYNN", "NYNYNNNNYNNNNNNNNNYNYNNNNNNYNYYNYY", "NNNYYNNYYNNNNNNYNNNYYNNNNYYYNYNYYY", "YYYYYNNYNNYNNNNYYNYNYNYNNNYNYYYYYY", "NYNYYNNNNNNNNNNYNNYNYNNNNNNYNYYNNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNYYNNYYNNNNNYYNNYYYNNNNNNYNYNNYY", "NNNYYYNNYNNNNNYNNNNYYNYNNYYYNYNYYN", "NYNYYYYYYYYNNNYNNYYNYYYYNYYYNYYNYY", "NYNYYYYYYYNNNNYYYYYYYYYNNYYNYYNYYY", "YNYNYYYYYYYYYNNYYYYYYYYYNNYYNNNYNY", "NYNYYNNYYNNNNNNNNNNYYNNNNYNYNYYYYY", "NNNNNNNNYNNNNNNNNNNNNNNNNNNNNNYNNN", "NNNYYNNYYNYNNNNYNNYYNNYNNNYYNNNYYN", "NYYYNYYYNYYNNNNNYNYYYYYYNYYYYNYNNY", "NNNYNNNNYNNNNNNYNNNNYNNNNNNYNYYYNY", "NNNYNNNNNNNNNNNYNNYNYNNNNNNNNNYYNY", "NNNNNNNNYNNNNNNYNNNNNNNNNNNYNYYNNN", "YYYNYYNNYYNNNNYYYNYYYNYYNYYYYYNYYN", "NYNNNYNYNNNNNNYYNNYYYNNNNYNYNYYYYY", "NYNYYNNYYNNNNNYNYNYYYNYNNYYYYNYYYY", "YYYNYNYYYYYNNNYYNNYNYNYYNNYNNYYYNY", "NNNYYNNYYNNNNNNYNNNNYNNNNNNYNNNYYY", "NNNYNNNYYYNNNNYYNNNYYNNNNNNNNNNYNY", "NYNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNYNNNYNNNNNNNYYNYYYNNNNNNNNNYNNN", "NYNNNNNNYNNNNNNYNNNNNNNNNNNNNNYYNN", "NNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNN", "NYNNNNNNYNNNNNNYNNNNNNNNNNNYNNYNNN", "NNNYNNNNYNNNNNNYNNYYYNNNNNNYNYYNNY", "NNNYNNNNYNNNNNNNNNNNNNNNNNNYNYYYNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 17470;
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    vector<int> time = {841, 892, 837, 567, 974, 30, 796, 902, 905, 261, 903, 784, 966, 22, 81, 836, 935, 15, 800, 837, 122, 103, 690, 144, 12, 999};
    vector<string> prec = {"NYYNYYYYYYNYNYYYNYNYYNYYNN", "NNYNYYYYYYNYNYYYNYNYYNYYNN", "NNNNNNNNNNNNNNNNNNNNNNNNNN", "YYYNYNYYYYNYNYYYYYYYYYNYYY", "NNYNNNYNNYNYNNNNNYNNYNYYNN", "NNYNYNYYYYNYNYYYNYNYYNYYNN", "NNYNNNNNNYNYNYNNNYNNYNYYNN", "NNYNYNYNYYNYNYNNNYNNYNYYNN", "NNYNYNYNNYNYNYNNNYNNYNYYNN", "NNYNNNNNNNNYNYNNNYNNYNYYNN", "YYYYYYYYYYNYYYYYYYYYYYYYYY", "NNYNNNNNNNNNNNNNNNNNNNYNNN", "YYYYNYYYYYNYNYYYYYYYYYYYYY", "NNYNNNNNNNNYNNNNNNNNNNYYNN", "NNYNYNYYYYNYNYNYNYNYYNYYNN", "NNYNYNYYYYNYNYNNNYNNYNYYNN", "YYYNYYYYYYNYNYYYNYNYYNYYNN", "NNYNNNNNNNNYNNNNNNNNYNYYNN", "YYYNYYYYYYNYNYYYYYNYYYYYNN", "NNNNYNYYYYNYNYNNNYNNYNYYNN", "NNYNNNNNNNNYNNNNNNNNNNYYNN", "YYYNYYYNYYNYNYYYNYNYYNYYNN", "NNYNNNNNNNNNNNNNNNNNNNNNNN", "NNYNNNNNNNNYNNNNNNNNNNYNNN", "YYYNYYYYNYNYNYYYYYYYYYYYNY", "YYYNYYYYYYNYNYYYYYYYYYNYNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 14293;
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    vector<int> time = {3, 6, 585, 10, 855, 892, 953, 197, 63, 198, 959, 4};
    vector<string> prec = {"NYYYYNYNNNYY", "NNNYNNNYNNNY", "NNNNNNNNNNNY", "NNNNYNNYNNNN", "NNYNNNNYNNNY", "NNYYNNNYNNNN", "NNYYYNNNNNNN", "NNYNNNNNNNNN", "YNYYYNNNNYYN", "NYYNYYNNNNYN", "NNYYNNNNNNNN", "NNNNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 2871;
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    vector<int> time = {1, 1000};
    vector<string> prec = {"NY", "YN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test67() {
    vector<int> time = {1000, 1};
    vector<string> prec = {"NN", "YN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 1001;
    if(result == expected) {
        cout << "Test Case 67: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 67: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test68() {
    vector<int> time = {1000, 1};
    vector<string> prec = {"NY", "NN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 1001;
    if(result == expected) {
        cout << "Test Case 68: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 68: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test69() {
    vector<int> time = {1, 1000};
    vector<string> prec = {"NN", "NN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 1000;
    if(result == expected) {
        cout << "Test Case 69: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 69: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test70() {
    vector<int> time = {1, 101, 220, 940, 181, 286, 18, 127, 993, 895, 406, 28, 672, 78, 832, 58, 25, 158, 43, 955, 991, 225, 195, 216, 958, 980, 111, 974, 98, 997, 913, 865, 70, 881, 975, 22, 662, 501, 85, 60, 557, 25, 20, 206, 1, 13, 423, 927, 681, 408};
    vector<string> prec = {"NNNYYNNNNNYNYNNNNNNNNNYNYYNNNNNYYYYNNNNNNNNNNNNNNY", "YNNYYNNNNYYNYNNNNNNNNNYNYYNNNNNYYYYNNNNNNNNNNNNNNY", "YYNYYYNNNYYNYNYYNYYYNYYNYYNYNNNYYYYYNYNYYNNYYNYNNY", "NNNNNNNNNNNNYNNNNNNNNNYNYYNNNNNNYNYNNNNNNNNNNNNNNY", "NNNYNNNNNNYNYNNNNNNNNNYNYYNNNNNYYYYNNNNNNNNNNNNNNY", "YYNYYNNNNYYNYNYYNYYNNNYNYYNYNNNYYYYNNYNNNNNYYNYNNY", "YYYYYYNNYYYNYNYYNYYYYYYNYYNYNNNYYYYYNYNYYNNYYNYNNY", "YYYYYYYNYYYYYYYYYYYYYYYNYYYYYYYYYYYYYYYYYYNYYYYYNY", "YYYYYYNNNYYNYNYYNYYYYYYNYYNYNNNYYYYYNYNYYNNYYNYNNY", "YNNYYNNNNNYNYNNNNNNNNNYNYYNNNNNYYYYNNNNNNNNNNNNNNY", "NNNYNNNNNNNNYNNNNNNNNNYNYYNNNNNYYYYNNNNNNNNNNNNNNY", "YYYYYYYNYYYNYNYYNYYYYYYNYYNYNNNYYYYYNYNYYNNYYNYNNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YYYYYYYNYYYYYNYYYYYYYYYNYYYYYNYYYYYYYYYYYYNYYYYYNY", "YYNYYNNNNYYNYNNYNNYNNNYNYYNYNNNYYYYNNNNNNNNNNNNNNY", "YYNYYNNNNYYNYNNNNNNNNNYNYYNYNNNYYYYNNNNNNNNNNNNNNY", "YYYYYYYNYYYYYNYYNYYYYYYNYYNYNNNYYYYYNYNYYNNYYYYNNY", "YYNYYNNNNYYNYNYYNNYNNNYNYYNYNNNYYYYNNYNNNNNNNNYNNY", "YYNYYNNNNYYNYNNYNNNNNNYNYYNYNNNYYYYNNNNNNNNNNNNNNY", "YYNYYYNNNYYNYNYYNYYNNNYNYYNYNNNYYYYYNYNYNNNYYNYNNY", "YYYYYYNNNYYNYNYYNYYYNYYNYYNYNNNYYYYYNYNYYNNYYNYNNY", "YYNYYYNNNYYNYNYYNYYYNNYNYYNYNNNYYYYYNYNYYNNYYNYNNY", "NNNNNNNNNNNNYNNNNNNNNNNNYNNNNNNNYNNNNNNNNNNNNNNNNY", "YYYYYYYYYYYYYYYYYYYYYYYNYYYYYYYYYYYYYYYYYYYYYYYYYY", "NNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNYNNNNNNNNNYNYNNNNNNNYNNNNNNNNNNNNNNNNY", "YYYYYYYNYYYYYNYYYYYYYYYNYYNYYNNYYYYYYYYYYYNYYYYNNY", "YYNYYNNNNYYNYNNNNNNNNNYNYYNNNNNYYYYNNNNNNNNNNNNNNY", "YYYYYYYNYYYYYNYYYYYYYYYNYYNYNNNYYYYYNYYYYYNYYYYNNY", "YYYYYYYNYYYYYYYYYYYYYYYNYYYYYNYYYYYYYYYYYYNYYYYYNY", "YYYYYYYNYYYYYNYYYYYYYYYNYYYYYNNYYYYYYYYYYYNYYYYYNY", "NNNYNNNNNNNNYNNNNNNNNNYNYYNNNNNNYYYNNNNNNNNNNNNNNY", "NNNNNNNNNNNNYNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNYNNNNNNNNYNNNNNNNNNYNYYNNNNNNYNYNNNNNNNNNNNNNNY", "NNNNNNNNNNNNYNNNNNNNNNYNYYNNNNNNYNNNNNNNNNNNNNNNNY", "YYNYYYNNNYYNYNYYNYYNNNYNYYNYNNNYYYYNNYNYNNNYYNYNNY", "YYYYYYYNYYYYYNYYYYYYYYYNYYNYYNNYYYYYNYYYYYNYYYYNNY", "YYNYYNNNNYYNYNYYNNYNNNYNYYNYNNNYYYYNNNNNNNNNNNNNNY", "YYYYYYYNYYYYYNYYYYYYYYYNYYNYNNNYYYYYNYNYYNNYYYYNNY", "YYNYYYNNNYYNYNYYNYYNNNYNYYNYNNNYYYYNNYNNNNNYYNYNNY", "YYNYYYNNNYYNYNYYNYYYNNYNYYNYNNNYYYYYNYNYNNNYYNYNNY", "YYYYYYYNYYYYYNYYYYYYYYYNYYNYNNNYYYYYNYYYYNNYYYYNNY", "YYYYYYYYYYYYYYYYYYYYYYYNYYYYYYYYYYYYYYYYYYNYYYYYYY", "YYNYYNNNNYYNYNYYNYYNNNYNYYNYNNNYYYYNNYNNNNNNYNYNNY", "YYNYYNNNNYYNYNYYNYYNNNYNYYNYNNNYYYYNNYNNNNNNNNYNNY", "YYYYYYYNYYYYYNYYNYYYYYYNYYNYNNNYYYYYNYNYYNNYYNYNNY", "YYNYYNNNNYYNYNYYNNYNNNYNYYNYNNNYYYYNNYNNNNNNNNNNNY", "YYYYYYYNYYYYYNYYYYYYYYYNYYYYYNNYYYYYYYYYYYNYYYYNNY", "YYYYYYYYYYYYYYYYYYYYYYYNYYYYYYYYYYYYYYYYYYNYYYYYNY", "NNNNNNNNNNNNYNNNNNNNNNNNYNNNNNNNYNNNNNNNNNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 21057;
    if(result == expected) {
        cout << "Test Case 70: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 70: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test71() {
    vector<int> time = {927, 22, 279, 37, 23, 944, 803, 942, 426, 90, 999, 978, 21, 863, 985, 477, 989, 1, 46, 948, 129, 140, 993, 1000, 986, 17, 402, 115, 3, 32};
    vector<string> prec = {"NYYYYYYYYYYYYNYYYYYYNYNYYYNYYY", "NNYNNNNNYYYNNNYYYNYNNNNNYNNNYY", "NNNNNNNNNNYNNNNNNNYNNNNNNNNNYY", "NYYNNNNNYYYNNNYYYNYNNNNNYNNNYY", "NYYYNYYYYYYNYNYYYYYYNYNYYYNYYY", "NYYYNNNNYYYNYNYYYNYYNYNNYNNNYY", "NYYYNYNYYYYNYNYYYYYYNYNYYNNYYY", "NYYYNYNNYYYNYNYYYYYYNYNYYNNYYY", "NNYNNNNNNNYNNNNNYNYNNNNNNNNNYY", "NNYNNNNNYNYNNNNYYNYNNNNNNNNNYY", "NNNNNNNNNNNNNNNNNNYNNNNNNNNNNN", "NYYYYYYYYYYNYNYYYYYYNYNYYYNYYY", "NYYYNNNNYYYNNNYYYNYNNNNNYNNNYY", "YYYYYYYYYYYYYNYYYYYYYYYYYYYYYY", "NNYNNNNNYYYNNNNYYNYNNNNNYNNNYY", "NNYNNNNNYNYNNNNNYNYNNNNNNNNNYY", "NNYNNNNNNNYNNNNNNNYNNNNNNNNNYY", "NYYYNYNNYYYNYNYYYNYYNYNYYNNYYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYYYNNNNYYYNYNYYYNYNNNNNYNNNYY", "YYYYYYYYYYYYYNYYYYYYNYNYYYYYYY", "NYYYNNNNYYYNYNYYYNYYNNNNYNNNYY", "YYYYYYYYYYYYYNYYYYYYYYNYYYYYYY", "NYYYNYNNYYYNYNYYYNYYNYNNYNNYYY", "NNYNNNNNYYYNNNNYYNYNNNNNNNNNYY", "NYYYNYYYYYYNYNYYYYYYNYNYYNNYYY", "YYYYYYYYYYYYYNYYYYYYNYNYYYNYYY", "NYYYNYNNYYYNYNYYYNYYNYNNYNNNYY", "NNNNNNNNNNYNNNNNNNYNNNNNNNNNNY", "NNNNNNNNNNYNNNNNNNYNNNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 14617;
    if(result == expected) {
        cout << "Test Case 71: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 71: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test72() {
    vector<int> time = {71, 936, 551, 982, 997};
    vector<string> prec = {"NYNNN", "NNNNN", "YYNNN", "YYYNY", "YYYNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 3537;
    if(result == expected) {
        cout << "Test Case 72: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 72: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test73() {
    vector<int> time = {854, 2, 926, 921, 49, 1, 697, 830, 999, 974};
    vector<string> prec = {"NNYNNNNNYN", "YNYYNYYYYY", "NNNNNNNNYN", "YNYNNNYNYY", "YYYYNYYYYY", "YNYYNNYNYY", "YNYNNNNNYN", "YNYYNYYNYY", "NNNNNNNNNN", "YNYNNNYNYN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 6253;
    if(result == expected) {
        cout << "Test Case 73: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 73: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test74() {
    vector<int> time = {999, 42, 941, 125, 1, 85, 29, 157, 17, 1000, 404, 998, 39, 931, 943, 600, 19, 805, 28, 770, 968, 638, 155, 9, 644, 903, 122, 940, 984};
    vector<string> prec = {"NYYYYYYYYYYYYYYYYYYYYYYYYYYYY", "NNNNNNNNNNNNNNNNNYNNNNNNNNNNY", "NYNNNNNNNNNYNNNYNYYNNNNNNNNNY", "NYYNYYYYYNYYNNNYYYYNNNNNYYNYY", "NYYNNYYNYNYYNNNYNYYNNNNNNYNNY", "NYYNNNNNNNNYNNNYNYYNNNNNNNNNY", "NYYNNYNNNNNYNNNYNYYNNNNNNNNNY", "NYYNYYYNYNYYNNNYNYYNNNNNYYNYY", "NYYNNYYNNNNYNNNYNYYNNNNNNNNNY", "NYYYYYYYYNYYNNYYYYYNYNNNYYYYY", "NYYNNYYNYNNYNNNYNYYNNNNNNNNNY", "NYNNNNNNNNNNNNNYNYYNNNNNNNNNY", "NYYYYYYYYYYYNNYYYYYNYYYNYYYYY", "NYYYYYYYYYYYYNYYYYYYYYYYYYYYY", "NYYYYYYYYNYYNNNYYYYNNNNNYYYYY", "NYNNNNNNNNNNNNNNNYYNNNNNNNNNY", "NYYNYYYYYNYYNNNYNYYNNNNNYYNYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNY", "NYNNNNNNNNNNNNNNNYNNNNNNNNNNY", "NYYYYYYYYYYYYNYYYYYNYYYNYYYYY", "NYYYYYYYYNYYNNYYYYYNNNNNYYYYY", "NYYYYYYYYYYYNNYYYYYNYNYNYYYYY", "NYYYYYYYYYYYNNYYYYYNYNNNYYYYY", "NYYYYYYYYYYYYNYYYYYYYYYNYYYYY", "NYYNYYYNYNYYNNNYNYYNNNNNNYNYY", "NYYNNYYNYNYYNNNYNYYNNNNNNNNNY", "NYYYYYYYYNYYNNNYYYYNNNNNYYNYY", "NYYNYYYNYNYYNNNYNYYNNNNNNYNNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 14296;
    if(result == expected) {
        cout << "Test Case 74: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 74: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test75() {
    vector<int> time = {1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000};
    vector<string> prec = {"NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YNYYNYNYYYYYYYYYYYNYYYYYYYNYNYYNNYYYNYYYYNNYYYYNYN", "YNNNNYNYNYYYYNNYNNNNNYNYNNNNNYNNNNNNNNNYYNNYNYYNYN", "YNYNNYNYNYYYYYNYYNNYNYNYYNNYNYNNNYNYNYYYYNNYNYYNYN", "YYYYNYNYYYYYYYYYYYYYYYYYYYNYYYYYYYYYYYYYYYYYYYYYYY", "YNNNNNNNNYNNNNNYNNNNNNNYNNNNNNNNNNNNNNNNYNNYNYYNNN", "YYYYYYNYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY", "YNNNNYNNNYNYNNNYNNNNNNNYNNNNNNNNNNNNNNNNYNNYNYYNNN", "YNYYNYNYNYYYYYYYYNNYNYNYYNNYNYNNNYYYNYYYYNNYYYYNYN", "YNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNYNNYNYYNNN", "YNNNNYNYNYNYNNNYNNNNNNNYNNNNNNNNNNNNNNNNYNNYNYYNNN", "YNNNNYNNNYNNNNNYNNNNNNNYNNNNNNNNNNNNNNNNYNNYNYYNNN", "YNNNNYNYNYYYNNNYNNNNNNNYNNNNNNNNNNNNNNNYYNNYNYYNNN", "YNYNNYNYNYYYYNNYYNNYNYNYYNNYNYNNNYNYNYYYYNNYNYYNYN", "YNYYNYNYNYYYYYNYYNNYNYNYYNNYNYNNNYNYNYYYYNNYNYYNYN", "YNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNYNYYNNN", "YNYNNYNYNYYYYNNYNNNYNYNYYNNYNYNNNNNNNYYYYNNYNYYNYN", "YNYYNYNYYYYYYYYYYNNYYYYYYNNYNYYNNYYYNYYYYNNYYYYNYN", "YYYYNYNYYYYYYYYYYYNYYYYYYYNYNYYNNYYYNYYYYNNYYYYYYN", "YNYNNYNYNYYYYNNYNNNNNYNYYNNYNYNNNNNNNYYYYNNYNYYNYN", "YNYYNYNYYYYYYYYYYNNYNYYYYNNYNYYNNYYYNYYYYNNYYYYNYN", "YNNNNYNYNYYYYNNYNNNNNNNYNNNNNNNNNNNNNNNYYNNYNYYNNN", "YNYYNYNYYYYYYYYYYNNYNYNYYNNYNYYNNYYYNYYYYNNYYYYNYN", "YNNNNNNNNYNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNYNNYNYYNNN", "YNYNNYNYNYYYYNNYNNNNNYNYNNNNNYNNNNNNNNNYYNNYNYYNYN", "YNYYNYNYYYYYYYYYYYNYYYYYYNNYNYYNNYYYNYYYYNNYYYYNYN", "YYYYYYNYYYYYYYYYYYYYYYYYYYNYYYYYYYYYYYYYYYYYYYYYYY", "YNYNNYNYNYYYYNNYNNNNNYNYYNNNNYNNNNNNNNNYYNNYNYYNYN", "YYYYNYNYYYYYYYYYYYYYYYYYYYNYNYYYYYYYYYYYYYYYYYYYYY", "YNNNNYNYNYYYYNNYNNNNNYNYNNNNNNNNNNNNNNNYYNNYNYYNNN", "YNYYNYNYYYYYYYYYYNNYNYNYYNNYNYNNNYYYNYYYYNNYYYYNYN", "YYYYNYNYYYYYYYYYYYYYYYYYYYNYNYYNYYYYYYYYYYYYYYYYYY", "YYYYNYNYYYYYYYYYYYYYYYYYYYNYNYYNNYYYNYYYYYYYYYYYYY", "YNYNNYNYNYYYYNNYYNNYNYNYYNNYNYNNNNNYNYYYYNNYNYYNYN", "YNYYNYNYNYYYYYYYYNNYNYNYYNNYNYNNNYNYNYYYYNNYNYYNYN", "YNYNNYNYNYYYYNNYYNNYNYNYYNNYNYNNNNNNNYYYYNNYNYYNYN", "YYYYNYNYYYYYYYYYYYYYYYYYYYNYNYYNYYYYNYYYYYYYYYYYYY", "YNYNNYNYNYYYYNNYNNNNNYNYYNNYNYNNNNNNNNNYYNNYNYYNYN", "YNYNNYNYNYYYYNNYNNNNNYNYYNNYNYNNNNNNNYNYYNNYNYYNYN", "YNNNNYNYNYYYNNNYNNNNNNNYNNNNNNNNNNNNNNNNYNNYNYYNNN", "YNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "YYYYNYNYYYYYYYYYYYYYYYYYYYNYNYYNNYYYNYYYYNYYYYYYYY", "YYYYNYNYYYYYYYYYYYYYYYYYYYNYNYYNNYYYNYYYYNNYYYYYYY", "YNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNN", "YNYYNYNYNYYYYYYYYNNYNYNYYNNYNYNNNYYYNYYYYNNYNYYNYN", "YNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNYNNYNNN", "YNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNYNNNNNN", "YYYYNYNYYYYYYYYYYYNYYYYYYYNYNYYNNYYYNYYYYNNYYYYNYN", "YNNNNYNYNYYYYNNYNNNNNYNYNNNNNYNNNNNNNNNYYNNYNYYNNN", "YYYYNYNYYYYYYYYYYYYYYYYYYYNYNYYNNYYYNYYYYNNYYYYYYN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 50000;
    if(result == expected) {
        cout << "Test Case 75: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 75: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test76() {
    vector<int> time = {1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000};
    vector<string> prec = {"NYYYYYYYYYYYNYYYYYYYYYYYYYYYYY", "NNNNYNNNNNNNNNNNNYNNNNNNNNNNNN", "NYNNYNYYYNNNNNNNYYNYYNYYYNYNNY", "NYYNYNYYYNNYNNNYYYNYYYYYYYYNNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NYYYYNYYYYYYNYYYYYYYYYYYYYYYYY", "NYNNYNNNNNNNNNNNNYNYNNNNYNNNNN", "NYNNYNYNNNNNNNNNYYNYNNNNYNNNNN", "NYNNYNYYNNNNNNNNYYNYNNNNYNNNNN", "NYYYYNYYYNNYNYYYYYYYYYYYYYYYNY", "NYYYYNYYYYNYNYYYYYYYYYYYYYYYNY", "NYYNYNYYYNNNNNNNYYNYYNYYYNYNNY", "YYYYYYYYYYYYNYYYYYYYYYYYYYYYYY", "NYYYYNYYYNNYNNNYYYNYYYYYYYYYNY", "NYYYYNYYYNNYNYNYYYNYYYYYYYYYNY", "NYYNYNYYYNNYNNNNYYNYYYYYYYYNNY", "NYNNYNYNNNNNNNNNNYNYNNNNYNNNNN", "NNNNYNNNNNNNNNNNNNNNNNNNNNNNNN", "NYYYYNYYYNNYNYYYYYNYYYYYYYYYNY", "NYNNYNNNNNNNNNNNNYNNNNNNNNNNNN", "NYNNYNYYYNNNNNNNYYNYNNNNYNNNNN", "NYYNYNYYYNNYNNNNYYNYYNYYYNYNNY", "NYNNYNYYYNNNNNNNYYNYYNNNYNNNNY", "NYNNYNYYYNNNNNNNYYNYYNYNYNNNNY", "NYNNYNNNNNNNNNNNNYNYNNNNNNNNNN", "NYYNYNYYYNNYNNNNYYNYYYYYYNYNNY", "NYNNYNYYYNNNNNNNYYNYYNYYYNNNNY", "NYYYYNYYYNNYNNNYYYNYYYYYYYYNNY", "NYYYYNYYYYYYNYYYYYYYYYYYYYYYNY", "NYNNYNYYYNNNNNNNYYNYYNNNYNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 30000;
    if(result == expected) {
        cout << "Test Case 76: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 76: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test77() {
    vector<int> time = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1};
    vector<string> prec = {};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 77: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 77: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test78() {
    vector<int> time = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1};
    vector<string> prec = {};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 78: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 78: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test79() {
    vector<int> time = {46, 949, 158, 187, 944, 67, 999, 981, 641, 728, 986, 989, 985, 767, 837, 242, 66, 269, 873, 167, 934, 851, 783, 973, 611, 913, 397, 958, 1, 24, 876, 958, 2, 133, 999, 925, 996, 983, 10, 35, 928, 645, 71, 956, 961, 980, 919, 176, 12, 273};
    vector<string> prec = {};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 999;
    if(result == expected) {
        cout << "Test Case 79: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 79: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test80() {
    vector<int> time = {953, 912, 948, 983, 953, 280, 1000, 42, 22, 274, 822, 967, 998, 79, 992, 611, 964, 5, 1000, 209, 68, 996, 21, 897, 984, 73, 231, 11, 730, 999, 970, 876, 164, 29, 896, 767, 45, 1, 48, 995, 33, 31, 957, 14, 41};
    vector<string> prec = {};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 1000;
    if(result == expected) {
        cout << "Test Case 80: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 80: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test81() {
    vector<int> time = {936, 762, 257, 169, 569, 904, 198, 877, 438, 901, 931, 992, 442, 9, 835, 54, 940, 64, 990, 969, 880, 973, 3, 292};
    vector<string> prec = {"NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 992;
    if(result == expected) {
        cout << "Test Case 81: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 81: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test82() {
    vector<int> time = {15, 893, 28, 932, 80, 846, 975, 986, 879, 29, 623, 243, 976, 946, 740, 325, 996, 877, 2, 20, 881, 639, 941, 996, 973, 654, 978, 42, 274, 38, 2, 14, 23, 174, 969, 995, 989, 1, 50, 949, 894, 821, 354, 23, 963, 244, 962, 128, 84, 988};
    vector<string> prec = {};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 82: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 82: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test83() {
    vector<int> time = {836, 1, 22, 268, 970, 29};
    vector<string> prec = {"NNNNYN", "NNNNNY", "NYNNNN", "YNNNNN", "NNYNNN", "NNNYNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 83: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 83: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test84() {
    vector<int> time = {994, 2, 980, 139, 945, 584, 983, 1, 40, 1, 99};
    vector<string> prec = {"NYNNNNNNNNN", "NNNNNNNNNYN", "NNNNNNNNYNN", "NNYNNNNNNNN", "NNNNNNYNNNN", "NNNYNNNNNNN", "YNNNNNNNNNN", "NNNNNYNNNNN", "NNNNNNNNNNY", "NNNNNNNYNNN", "NNNNYNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 84: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 84: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test85() {
    vector<int> time = {240, 2, 756, 994, 745, 213, 825, 98, 7, 78, 999, 995, 2, 493, 329, 83, 455, 1, 324, 776, 340, 820, 234, 906, 772, 983, 648, 171, 6, 277, 706, 849, 748, 952, 976, 968, 40, 158, 375, 961, 674, 388, 909, 999, 998, 70, 853, 17, 21, 586};
    vector<string> prec = {};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 25820;
    if(result == expected) {
        cout << "Test Case 85: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 85: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test86() {
    vector<int> time = {60, 984, 944, 561, 959, 256, 291, 947, 994, 61, 751, 930, 990, 893, 910};
    vector<string> prec = {"NNNNYNNNNNNNNNN", "NNYNNNNNNNNNNNN", "NNNNNNNNNNNNNNY", "NNNNNNNNNNYNNNN", "NNNNNNNNNNNYNNN", "NYNNNNNNNNNNNNN", "NNNNNNNNNYNNNNN", "NNNNNNYNNNNNNNN", "NNNYNNNNNNNNNNN", "NNNNNYNNNNNNNNN", "NNNNNNNNNNNNNYN", "NNNNNNNNNNNNYNN", "NNNNNNNNNNNNNNN", "NNNNNNNYNNNNNNN", "YNNNNNNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 10531;
    if(result == expected) {
        cout << "Test Case 86: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 86: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test87() {
    vector<int> time = {963, 880, 13, 178, 999, 1000, 8, 577, 525, 835, 102, 909, 875, 121, 924, 1, 627, 2, 1, 832, 937, 573, 976};
    vector<string> prec = {"NYNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNYNNNNNNNNNNNN", "NNNNNNNNNNNNNYNNNNNNNNN", "NNNNNNNYNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNYNNNNN", "NNNNNNNNNNNNNNNYNNNNNNN", "NNNNNNNNNNNNYNNNNNNNNNN", "NNNNNNNNNYNNNNNNNNNNNNN", "YNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNYNNNN", "NNYNNNNNNNNNNNNNNNNNNNN", "NNNNNYNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNYNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNY", "NNNNNNNNNNNNNNNNYNNNNNN", "NNNYNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNYN", "NNNNNNNNNNNNNNNNNNNNYNN", "NNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNYNNNNNNNNNNNNNNNN", "NNNNNNNNYNNNNNNNNNNNNNN", "NNNNYNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNYNNNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 12858;
    if(result == expected) {
        cout << "Test Case 87: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 87: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test88() {
    vector<int> time = {150, 200, 250};
    vector<string> prec = {"NYN", "YNN", "NNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 88: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 88: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test89() {
    vector<int> time = {345, 335, 325, 350, 321, 620};
    vector<string> prec = {"NNNNNN", "NNYYYY", "YNNNNN", "NNYNYN", "NNNNNN", "NNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 1355;
    if(result == expected) {
        cout << "Test Case 89: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 89: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test90() {
    vector<int> time = {345, 335, 325, 350, 321, 620};
    vector<string> prec = {"NYNNNN", "YNYNNN", "NNNNNN", "NNNNNN", "NNNNNN", "NNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 90: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 90: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test91() {
    vector<int> time = {150, 200, 250};
    vector<string> prec = {"NYN", "NNY", "YNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 91: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 91: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test92() {
    vector<int> time = {1, 2, 3, 4, 5, 6, 7};
    vector<string> prec = {"NNNNYNN", "NNNNYNN", "NNNYNYN", "NNNNNYN", "NNNNNNY", "NNNNNNY", "NNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 20;
    if(result == expected) {
        cout << "Test Case 92: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 92: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test93() {
    vector<int> time = {117, 538, 995, 901, 30, 735, 529, 568, 513, 131, 304, 159, 188, 178, 862, 52, 985, 739, 167, 217, 37, 218, 564, 418, 482, 591, 999, 442, 181, 1, 934, 352, 506, 254, 446, 220, 414, 287, 49, 909, 630, 48, 315, 701, 110, 718, 986, 567, 245, 692};
    vector<string> prec = {"NNYNNYNNYNNYNYYYYNNNNNYYYYNNYNNYYYYYYYNNNYYNNYYYNN", "NNYYNNNYNYNYNNNYNYYYYNNYNYNNYNYYYNYNNNYYNNNYNNNYNN", "NNNYYNYNYYYYNNNYNYYNYNNNNNYNNYYYYYYNNNNYYNYNNNNYNY", "NNNNYYYYNNYNNNNNYYNNNNYNYYNNNYYYNNNNYNYNNNYYNNYNYN", "NNNNNYNNYYYNNYYNNNNYYNNYYNYNNNNNNYYNNYNYNYNNYYNYYN", "NNNNNNNYNYYYNYYNNYYNNYNNYYNYYYYYYYNYNYYNYYYYYYNYNN", "NNNNNNNYNNNNYYYNNNNNNNNYNYYNNNYNYYYYYYNYYYYYYNNYYN", "NNNNNNNNYYNNYNNYNNYYNNNYNYYNYYNNNNNYYNNNYNYNYNNYNY", "NNNNNNNNNNYNNNNYNNYYNYNNNYYNNNNYYYNNYNYNNYYNYNNNYN", "NNNNNNNNNNNNNYYNYNYYYNNNNNNYNYYYNYYNNNYNYYYYNNYYYY", "NNNNNNNNNNNYYYNYYYNNYYNNYYNYYYYYNNNYNYNYNYYNYNYYNN", "NNNNNNNNNNNNYYYYYNYYYYYNYYYYNNYYYYYNNNYNNNNYYNNYNY", "NNNNNNNNNNNNNYYNNYNNNNYYNNYYYYYNYYYNNYNYYYYNYYNYYN", "NNNNNNNNNNNNNNNYNYNNNNNNNNYYNNYNNYYYNYNNYYYYNYYNYY", "NNNNNNNNNNNNNNNNYNYNYYYNNYNNNYYYYYNYNNNYNYYNNYNNNY", "NNNNNNNNNNNNNNNNYYNNNNYNNNYNNYYYYNYNNNYNNYYYYYYYNY", "NNNNNNNNNNNNNNNNNNYNNNYYNYNNNYNYYYYNNNNYNNNNNNNYNN", "NNNNNNNNNNNNNNNNNNNNYNYNYNNYNYNYYNYNNNYNNYNNNYYNNN", "NNNNNNNNNNNNNNNNNNNYNYYYNNNYNYYNNYNYYYYYYNNYNYNNNY", "NNNNNNNNNNNNNNNNNNNNNYNYYYYYYNYNNYYNYNNYYYYNYYYYNN", "NNNNNNNNNNNNNNNNNNNNNYYNYYNNYNNYNYNNYYYYNNYNNYYNNN", "NNNNNNNNNNNNNNNNNNNNNNYYYNNNYYNNYYNNYYYNNYNNYNNNNY", "NNNNNNNNNNNNNNNNNNNNNNNYNYYNYYNNYYYNNNYNNYNNYYNYNY", "NNNNNNNNNNNNNNNNNNNNNNNNYNNYYYYYYNNYNYYNNYYNNNNYYN", "NNNNNNNNNNNNNNNNNNNNNNNNNYNNYNYNNYNNNNNNNNYYYYNYYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNYYYNYYYNYNYNYYNYYYNYNNYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNYYYYYYNYNNYYNNNYYNYYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNYNNYYNNNNNYNYNNYNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNYNNNNNNNYYNYNNYYYYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNYNNYYYYNNNYNNNYNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYYYYNYNYNNNNNYNYYYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNYNNNNNNYYYYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNYNYNNNNYYNYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYYNNYNNNYYYYNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYYYNNNYYYNNYYYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNYYNYNYNYYNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNYNNNNYYYYNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNYNYNYNYNYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYYNYNYNNNY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNYYYYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNYYYYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNYYYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNYYYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNYN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYY", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 16914;
    if(result == expected) {
        cout << "Test Case 93: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 93: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test94() {
    vector<int> time = {345, 335, 325, 350, 321, 620};
    vector<string> prec = {"NYNNNN", "YNNNNN", "YYNNNN", "NNYNNN", "NNNYNN", "NNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 94: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 94: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test95() {
    vector<int> time = {150, 200, 250};
    vector<string> prec = {"NYN", "NNY", "NNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 600;
    if(result == expected) {
        cout << "Test Case 95: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 95: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test96() {
    vector<int> time = {345, 335, 270, 350, 270, 620};
    vector<string> prec = {"NNNNNN", "NNYYYY", "YNNNNN", "NNYNYN", "NNNNNN", "NNNNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = 1300;
    if(result == expected) {
        cout << "Test Case 96: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 96: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test97() {
    vector<int> time = {10, 10, 10, 10};
    vector<string> prec = {"NNNN", "NNYN", "NYNN", "NNNN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 97: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 97: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test98() {
    vector<int> time = {150, 200, 250};
    vector<string> prec = {"NNN", "NNY", "NYN"};
    ParallelProgramming* pObj = new ParallelProgramming();
    clock_t start = clock();
    int result = pObj->minTime(time, prec);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 98: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 98: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    test67() == 0 ? ++passed : ++failed;
    test68() == 0 ? ++passed : ++failed;
    test69() == 0 ? ++passed : ++failed;
    test70() == 0 ? ++passed : ++failed;
    test71() == 0 ? ++passed : ++failed;
    test72() == 0 ? ++passed : ++failed;
    test73() == 0 ? ++passed : ++failed;
    test74() == 0 ? ++passed : ++failed;
    test75() == 0 ? ++passed : ++failed;
    test76() == 0 ? ++passed : ++failed;
    test77() == 0 ? ++passed : ++failed;
    test78() == 0 ? ++passed : ++failed;
    test79() == 0 ? ++passed : ++failed;
    test80() == 0 ? ++passed : ++failed;
    test81() == 0 ? ++passed : ++failed;
    test82() == 0 ? ++passed : ++failed;
    test83() == 0 ? ++passed : ++failed;
    test84() == 0 ? ++passed : ++failed;
    test85() == 0 ? ++passed : ++failed;
    test86() == 0 ? ++passed : ++failed;
    test87() == 0 ? ++passed : ++failed;
    test88() == 0 ? ++passed : ++failed;
    test89() == 0 ? ++passed : ++failed;
    test90() == 0 ? ++passed : ++failed;
    test91() == 0 ? ++passed : ++failed;
    test92() == 0 ? ++passed : ++failed;
    test93() == 0 ? ++passed : ++failed;
    test94() == 0 ? ++passed : ++failed;
    test95() == 0 ? ++passed : ++failed;
    test96() == 0 ? ++passed : ++failed;
    test97() == 0 ? ++passed : ++failed;
    test98() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=16096823&rd=9993&pm=6517
********************************************************************************
#include <cstdio> 
#include <cstring> 
#include <cstdlib> 
#include <cctype> 
#include <cmath> 
#include <iostream> 
#include <algorithm> 
#include <vector> 
#include <string> 
#include <sstream> 
using namespace std; 
 
int    cost  [100]; 
bool    mat  [100][100]; 
int    n; 
 
int    f  [100]; 
int    mark  [100]; 
bool    flag ; 
 
int  dfs( int u ) 
{ 
  if( mark[u] == 0 ){ flag = 1; return 0; } 
  if( mark[u] == 1 ) return f[u]; 
 
  mark[u] = 0; 
  f[u] = cost[u]; 
  for(int v = 0; v < n; v ++) 
    if( mat[v][u] ) 
      f[u] >?= dfs( v ) + cost[u]; 
 
  mark[u] = 1; 
  return  f[u]; 
} 
 
class  ParallelProgramming 
{ 
  public  : 
     
  int minTime(vector <int> time, vector <string> prec) 
  { 
    n = time.size(); 
     
    int  i , j; 
    for(i = 0; i < n; i ++) 
      for(j = 0; j < n; j ++) 
        mat[i][j] = (prec[i][j] == 'Y'); 
    for(i = 0; i < n; i ++) 
      cost[i] = time[i]; 
 
 
    int  ret = 0; 
    flag = 0; 
 
    memset(mark , 0xff , sizeof(mark)); 
    for(i = 0; i < n; i ++) 
    { 
      ret >?= dfs( i ); 
    } 
 
    if( flag ) return -1; 
 
    return  ret; 
  } 
};

********************************************************************************
*******************************************************************************/