/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=8160
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class MatchString {
public:
    int placeWords(string matchString, vector<string> matchWords);
};

int MatchString::placeWords(string matchString, vector<string> matchWords) {
    int ret;
    return ret;
}


int test0() {
    string matchString = "TOP";
    vector<string> matchWords = {"TIK", "PPPO", "OP"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    string matchString = "MUTO";
    vector<string> matchWords = {"MAMA", "DUDU", "TIT", "EGO"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    string matchString = "BAKAR";
    vector<string> matchWords = {"BATA", "TATA", "OSKAR", "KRAJ", "RAJ"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    string matchString = "EEA";
    vector<string> matchWords = {"GEGA", "TOPCODER", "TEST"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    string matchString = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    vector<string> matchWords = {"ABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBABBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBABBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBABBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBABBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBABBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBABBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBABBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBABBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBABBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBABBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBABBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBABBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBABBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBABBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBABBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBABBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBABBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBABBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBABBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBABBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBABBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBABBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBABBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBABBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBABBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBABBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBABBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBABBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBABB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBAB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBA"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 1225;
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    string matchString = "BETI";
    vector<string> matchWords = {"BABA", "VETARE", "TORO", "IMEI"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    string matchString = "AB";
    vector<string> matchWords = {"ABA", "ABAB"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    string matchString = "UHJPFMKNNUWYAIGHFYQSJPFNYQOAVPPOPPKRZFQVSXCMGENSAD";
    vector<string> matchWords = {"LUVDKETPLTSUNTMIXUVMULUMQHOLCBI", "PNH", "RPDSFCLCRGQWGXCKLBOJJEVJCSCEIQFCSUHOSRTNQ", "UWZAEFESEKXLZGRQZBJCJVXRZLFQMTAXUSPAXFWKWCWUAHXK", "DJFGQLLZQHRBMWIFAIMWSLIQBSYEBWFVDYMQKPTIWYS", "ZMFURIKSPQFVUIFYAUQZMSANYH", "KV", "GNDZNFXEPMWDKYTOYUXHNWLOAAJELDXZNLHZXJEEZTE", "MFJWAPSSLCMOGNOVLSHKSGQXKBGASHYSVSUEKV", "PUMVTWCGJULCLUTWBBYUVEVVRDQAOAYQYUWBQMMKNFTJ", "VTVDMFMMGUARITYKCJWCGMPKSZ", "QIAIYUQGY", "YIMJZITZUYCMHAGXMFXEXCEKPAYEDKWGHAEITC", "NCORVIFMXAUNVQVYRFBXNQHCSKWNAOKBEYBWDIE", "VXKVFDKSAZQXGYIIPBTWAQYGFZRLNDKRTSTEZGUL", "BDMKYFYHOFEHDTGPIPCYEIFKSXRASEIZWUHTGMXAVMCM", "UFDLO", "IYEIUCVHLGFWMYMMQWSSCQCYBETSMTPPWATJOGTSY", "RHSFJQIL", "S", "JMRGYXD", "PEQCUXRPMLOEF", "BSZLJFCKAMWHZFAUNMFNZYNMZGUBSLBVYNIOF", "YLHMVLYNRNCNQULR", "ZSY", "VIADNROAARHQHOTZERTQ", "OOXLFXCWP", "JLUCSABDZTQCZQOLSGWVHAHVGUO", "VIVJYIKFSNKAQBNJPPPCVRKTFJZI", "ZKZCPCNDAXSPBHYTAUTCGOPDQ", "SPSFWVTCNAURNKYIGSOMEVQUFQAVPTG", "CFLLGWZTWAWQEOALGKICQDEAHIKUXV", "IRZRAWTLHPRYTAVCNFOTHOCLTGKQXO", "QUJIYPHSJR", "WUPFQBPGUJMUFVKALPWZFFMA", "EWFEMHRAHEELGWYIFRITHEIOZBPWQUDJTK", "DANZVDLBDAPAINSEKR", "BLYXKIEGAJYWCQUIEQHFSINMWXGHKKMBZPKUOQ", "SNWJCQCHTPRCUZWMQYCDKZSGBPTM", "CFIHCQDRTQZAGXHDIWTOUEVROUUQSICADZZV", "YZRLRHSSAMZHCOCOZLPBZTZ", "VQKIFOXYPKSANAFBOVLZWEWXFIMPVYWVTKZGJMH", "EXRRIICGEEZSI", "IZQVOVCOMWNMQVEDIMSGGQ", "ERANAAKRBREUPIVTXWSJGFAVU", "KWQBAYEQYZX", "KOTBGZTPJLWAZVSBKTWYBQNQFGVDXPNTRIYXF", "CSPFRUABHFQNH", "HCGMBFISWMHTQJGZPIBAELCCYHERJIMVPNR", "DHWVFNVMLGAHXPSPZDTBWRYMYFD"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 919;
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    string matchString = "AAMHXMABOGIPLQPELLCAUMZDCM";
    vector<string> matchWords = {"UANZFKZUGPOJOMZSXSGUXKFLKRCIRAZLVWAUZFSLGX", "BGBBFWZIMEHDYVLOUPOBAWAG", "DWVQHREM", "FMFNBHBVOBKUSHRMVO", "RFZTWNJIKYWMZWVCTLXPLJLSTFNYFLECB", "PNCAAPGNRKEZWMJNWT", "AD", "QMZSKSJGBANJENSYUZXODZRVJILBBAVRVODNCVZVPLNUFRD", "ADXDKOW", "PCMRDGHJGPX", "RAYWSNBIYSJERXBOAFBFNKTNYBTNJEHCFJFRRQKR", "HHP", "RDTJVAL", "ZXYKXHOTNMSQPRSELLDAMTZGJHGTQUHDSYBXIRUGIESL", "SRZRXLVCHPOA", "XAECOX", "EJFLEOWFCVWRTJEFVLSDBBI", "ZLCIHCFTL", "ZUEWKYOICSECDCZKOOCDNREPNCOUZAQCZAFRBOGGUS", "LKPAACGZ", "OU", "EVWMNQMDVEQHFKDIVASZSAQCYGJQXTFNIUFSUSP", "LRQVPXXUZTZEYDCKDUSKTZRGXBJMMCKGLREZTCKCDBJBY", "LIDSPMTYYVZJQBRXSOBBSURDNIVNVBYKCFYD", "IMHFFLDXC", "GUYCECMUWYGMJCTFHSCSYVLLYIMTWSGDBRQVQKUNKLP"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 305;
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    string matchString = "NIEBXEYQETUPRZRZDBIKPVOCM";
    vector<string> matchWords = {"RDWTTEEWBFGJWPXANQYLDXVCKBUIYAJVBWYLYLKPNVDZXJEF", "ABQQUAKBWICUCXVKZBOXDLKISJALTOLILJMYWOVTZYMKON", "EE", "GKWMFZMDHJRDVQNBAECJFZXS", "QRWLTJWXOZEACTUW", "E", "YNS", "JSTQ", "FOTXJYEIZWKAVFKQH", "YYHSVJBSSGGDTROB", "EHTDTQKDDYJHIHWXSUSFURAVMDAOWAWXAQVXFW", "ZCYCAGMHXZFPAQSJRJDYWPDAOATXHIJ", "NEADOQXIZFPDDFZHUBVBIURBMRCBGMZQNUZTJRQZWISFO", "ZZGDERBQVSDDCA", "QERBGOXPYDQJOYP", "BRYFHMSBYMYHHYVDHZXAFBBWL", "USRXCJZYOFPPBQAGJCWPDOJXRAMURMPRXNETDYPLWJRG", "EQBZBWAOTUNOSU", "XHDBVTKJWXINSIQAZMVCIHL", "XECJOQVPLIJKSOLZSQUVBMCIVACCFIZORXKWBVYOA", "QHTPVEPOCGBESI", "EWGFWCMYILFYNNKTLRWXILTBACQNUJPHDTDZRAVYJTSS", "WUSMPZBGYFEBYUVIFFYSODONAKJ", "JNWWSLZCJLKGBLKRQHY", "WQXWMPFKFSECMMDBPUTMVXDUWY"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 575;
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    string matchString = "YULRQAHWPAVAW";
    vector<string> matchWords = {"YAZAAKHFECWJXWQFYQNHOYLKZHGC", "AGTPMUCTDAQLISWQEHVLVYGPGHCUVYWSWT", "CHLCIULXGX", "TJKVOTMMVLZHXOJNDRKCWUX", "YTUSPSSTVPSQQHU", "EA", "JAXVWHKUNJNVBRHVPGAIAP", "PTGYLRLMBXQSWCEACYTGWGGLNOMAI", "PF", "ABCFITCVQOZHTZEDIJIV", "GMVMMXCSWZMLNUSSF", "SEDCADYIALSOBSVXD", "BWPRLDC"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 127;
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    string matchString = "CJPXSKBUBIMSUUBZDEHWTESG";
    vector<string> matchWords = {"CUEEBHFPXPDJUYZLXBEGAFZATKUKRKQGSFYVV", "HUZVJLNQATMJ", "HJPPSKBQDUTBXLDJDA", "SRDVXILBMEGXBNPGNTIDNKBTJ", "PSPKQOEISHAVE", "WYWSNSDIDNCCNKZVKASYUKHJKVTHWCZCADLYAARRBUYDMYJU", "LDGUUXJCXHDDCEKCB", "KAXRQVQWNSWHDIEFWUPDXAOFY", "DLAAHENGYRYQEZFYMBZAHGREGUQDAHWLOIUVIMDNL", "I", "ZIXMYLGIZGKJCIPVBYLJCASQUDUGPY", "PPMUQTTGHGMNYWVIOVNRAESSQHHHJRFLCMMXFYHA", "FJYWCJWQXRU", "YJWPYWNRPZIEWEZVKZOMDDVQQHEJFXGFRLOZUTFIBRA", "ZBNATFZOXIGP", "ZIPHSJLODGDDNTXSJKYNJHOATCCZDGCGYSDZDRES", "GCAJROMTIIHRXDBTFBUSTKZJZGPSVJVMKZI", "HTSJQXOYSPPRQTVTERHFPIIUDS", "HVORNXJDLLAZMLGHDWACVLSMLNHBUUELJSEM", "WB", "JIZQAUCDMYTLZUTLRDYKJJFKOZMJYKJJIUINOPQZDNFF", "AOOQYQSUWTTNDKOUHBKGVEATKSDUTQWAIWZGMXFUCGXNDZCJTG", "USPZSWSODNGVNY", "GYZPVKKWVMFPGTOYHMOYNTGAYUSYOBFGDDECMJHHC"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 522;
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    string matchString = "CEEJUXABUDOJCAGKCARKKMHMFCZIBI";
    vector<string> matchWords = {"DLRKYYPYPQPRBIKYTCGDHYGLCKVBUDMNZMUAAFOLT", "AVIIQBCHNZEZAP", "DETKJXCTVGSDPVWFUPKWEPPCKUOTCJHRRVGMWREYO", "CRSDVEVDJWCPPNTPZJVXULERCIAZVVDH", "BFJFNCSIDLMUPJFFNNHUGMLUNAB", "HTYVNJISXHUYURQECMDOWK", "TXUTGAWKTANTYDGWNPGSPDZNYLUWJXTXZXOJFPNJONLYGDSQE", "LGYTHZOWVDISPHTDSFXDBCD", "JRQZHEKZTUPJ", "NIOHZVDDZNNQ", "ZTLWCEGSTDIPWHLLAOH", "JFHAIYYMOJRLLHAKKPOGTKOVBLFQTEPASSLLXHUGZ", "PKCCTUMBLEVHWSYVRDFXZDQQGMVPHXKMBAYTC", "SALONPUSHQBHDDFCLXWJTERLPZJAKQJJDAEZM", "HIURIVLWERRHCDZLQUAWJWZYJACSWMNQWSAYAAGAUZBUT", "MLK", "KASICAIKCTPAPMGEUTEOVR", "TCDIIPAMPCMZMQTCJOTADG", "GLSNUJHAPFFEOSEVERLI", "UK", "MUOGTJAPTPMRWDQMRKVRMMPWKZVMVNAQEYIBYMDK", "MERPWVJPXR", "XQDKSFHEVTRWIKYXDDKBDPHCVFOHRCRSZMVVS", "PNMMEIJSKXMNPQRHWBQVZDVWQMXPOU", "FWIKMIQWMFST", "FAONQAHGJBDUUHVDPOKMRXBXMCYBQ", "CBIQIXEYIBYZSKCOIWKEPKYBYTTCSJKHEBPAKZTCVEOGOC", "DYIXQIYSIKMKUUSGUGDMHDEDEDGGYGCIGMRXKBDU", "RMJKNOCGWWBYYLBRJ", "PRAGRJCFZSTHCJSOOCIFEEODVL"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 585;
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    string matchString = "RQKDKBHYJNQYGZJAJPOHEWTXAS";
    vector<string> matchWords = {"YLR", "JCZNSBKYRWHXZRXMNMJAIVMYGWPJXMGFKHHZZSKRQ", "JEAXFLOKV", "QUJCDSNEIYGVVIMSWWJYMDPIFKIWUOLGOX", "LSOOVZLKBJPQGSCGZAJNTQUREHCXJTHISCNXEGLIMIEPVFNKM", "EBZZIDBCAKXWEFQEFTZBBBUPTNN", "MHYBAUUULWHFZEVRNDZGHGXDT", "IBTRHOPHGJCYQDWPRLVIYCIIDBVMEPAXHNKEWZJTACFZCKLWY", "LSFRZYGWSEJREMJFPJMBTBQZGG", "OIDQQNDJPHCWITDUIJATYSCWNSTBVBRJEXCGNHNUUZB", "AEPRPCSLBYXKPSOAHFGAUQWXWUNOQLYYKIDTOOSLNVIBGLFFA", "XYKHGQJ", "OATCYGZCRSWAETIQKVNGDQME", "FZHTCRUHEXOPT", "PLLGVSBNHUOAAKTHCNHJN", "YETBUCLHFANVAWSUNEGVQIDSMXO", "GXYEWBDBWCJJSDZPTFBRRISRFCO", "WMOQQP", "GWUDZGOQAODBAXLGFQXXDEQHOKVYMNYDZYSIUGAZECOVT", "MH", "MDEVSVWXTRCVEBLPDGMMULEOAZHEPVXB", "ZTPTRQAKBWGUZZOAETBMWXMPYLJGS", "TLJRH", "UXSMQTOSGNHKVNZBOVIGBUGUOLIFTDXHMMBVWPCKIBMJOM", "XHBLOYOZYYIBGAHAFCQFPENBPCYSOZPAQYBKGZORGLF", "ZLGFYLYLXSVY"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 609;
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    string matchString = "HQHPXVWEDJFWJTCGHLZZJ";
    vector<string> matchWords = {"OJETEBGTBZNDTOHUWIFOZSHL", "DWHHQEZWSRSZVTOQJALWXNWOY", "IJARKQQWHXWTFEHDOOFTTJFEQHJEZSUDVFXZEZKCLYFYZW", "OQZHRHTQVSHDCUKGMWUSAGTJYPDRHROPZM", "X", "KZTTGGODZIMHKVVWEVFGMZDR", "MQWUYNYEOXSQPEDABPUBCXGYCXEXTCAOSKWMWHJARJUOVXPOZR", "AWYTGSKJKXYEUTXJUXXTMFKQUCRIOIVEFI", "QDLB", "WNCUPSVSZDVGXFJHYBCMJDGGFVCPSJJMDBFUWWNWAEBHR", "JNCGJUIUDVUNDYLEJJVAUF", "FNUWTVQUVKWUAGVFZLCVBYFHTPGLWSSYPJLFIPDFCFBRRLMV", "JDXGXXBVJZMECNYVUEOVUABHDKMSNQYSDNUTWMFAYUSEPJ", "GQATEDBTOBEUOONVOVEBHVKGKAEHOWL", "DTCBIPBI", "FGWJNYZZQVGEMNJUOKRNIY", "ELDKRHKGSEAMFNVFBSNFHTHIYBQZHAN", "LGFOPUVXJQMZDYPPAHEKYDEYJLXGNJ", "AVQIQCEUBKJNUPSIQEJEVNUAZOQOMGDVJMPQYXMRZWOEBU", "Z", "DOUJZKFEKJHAUKIVFQNHWJSMKPSHSHAYIRFCMZEB"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 237;
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    string matchString = "EPYMHKMQBOTKTEXDNTWXAKHYMZEW";
    vector<string> matchWords = {"JTJFEEHWHGRKMGZPHIRUMTZIKCEHKTLWMXQEWAIMV", "EWHFPRJKXOQJBTOCORJFMEWR", "RHFEDAMMAXEMYGFIQHEBFEDLXEPYCONCYSPWMKN", "CMUEWUIUAFXGORCATKMWN", "PESRFNXCXTGDIJCGOBHCVTEAGMFMAWHLHEARDSN", "PMLXTWDAQCNDVOKYWFLDP", "WYYCXKQRJOFJQVAODZJZUBLQDMWHYTEXZLCXKHYNSCMLNQZ", "BMHNMTQZUISUH", "ZWFNCGTAEXDNPQZMXBCWIKIHVABTUYELAEY", "GAKMROYB", "CVYDXYYAURDTSLQWJTPVIU", "JVMNUAOPZKZFBYIAGSIULYFASELWDV", "TSCQ", "SZHAUXKELIPQEOBXYEQKZOQRDEABFRCXQGXPZJCNECLS", "AHQIYFGTKDMFYUHMWLZYXGXKLHTIKDVCFVIP", "D", "KRWESLMZCZCZZVOAFTCEHGJAWDVNYILJRTHPLM", "ZCWALTGTJDYEBBTDHJ", "SWFMGICKED", "YPXHUK", "OTQKPGLVFGMAJZWPKEUTAOANEFPHHTKGHQYKQLXQP", "PAEUMFYVQQXKZYGOQPUOKLJPSCYHHTZRUSSHVUJIQFJZUFF", "DQSSJOPRUEIQYAZERZSFHLESV", "YCRTBGYTSBOXTBTBNYOAJISXXF", "BLOTFGMMXVCXLWHGMUZOHXAJLKZDRVIJHXYH", "Z", "JFBZPECAEYEIGQINSVYPDYCUINMIWGJZWZDWTUVZ", "NWYUJFLJNRCOWOQVVGBCEXDFWKENEAJFNUFM"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 341;
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    string matchString = "AJADNRGFYQCE";
    vector<string> matchWords = {"RYDMHDJIA", "UQHXIGUGOCSKXHKEJLYS", "TDCFZTVAVSSGAMV", "PDVXCTZKCDIDEJJPFMFDALDPGYDVRBCSRZ", "QEZJDRFBDUYNPDINUPVPYFSQWXCDMNBRCXUMPAN", "LMPTKCNJRUXZCVEZPVXUXRS", "LTFKPPKUKCBGPJGA", "JKQXMRSYKQKPLNCZFDFQLKWAUCUJCCFOMMR", "YYXIQZKWKWHTDEMJW", "XAKRAYXBKQBO", "ZQWPEZXGWXGCMLYOBHOFKFGDZRKXAVXSBTFCTSYOGPE", "JICWKFVFKIUTWEKSDTDSIWIYKYKNXQXNWTJYK"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 58;
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    string matchString = "ADSJIU";
    vector<string> matchWords = {"CRAGUKGBYEGKXFZAXP", "VSBDCJDEBSXGQKJTDYAGIYGTP", "HSRRPOKVZFMPCVCSHNWYRZUIHSRMGMYTLK", "VPXKGZMAGDCRJRFTYBZA", "JHOFDBTFXSHELFKXNBPHUQMWZLIPGHNTMDMOFM", "BUNKAXHHUJIYEKVYQCXPWTPJUT"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 38;
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    string matchString = "ZJBNMKVOCPEZWHDZRDBGRILFPIYEZYMHIHNKDLYOE";
    vector<string> matchWords = {"DIVIWBJCPUFATTVLFSZUB", "VZFXLCAPXJHY", "OVEVCPHYLVXKCUNXYXNSWVZHNDBBE", "TDMFKKNLNJDVZYHXKQHTPGTKBKTM", "SMNVJHYPDBSLBTZMGMFJRNFXLC", "VIRSEKBLKOU", "PUSKVXLPIEZUDPIEOY", "FELAFYHGNQEXDBTPSWUICMNCKVIWLFGYCORKHEHDQNJUHRO", "LWPRLEZOYKSBMEWMQXMBRMIFQDCYHVEHXHCYWRC", "SJWULUGVLAVQBHDVQLHEFRIPVNRGEGSYUXT", "CHANNVBSWSGPBCETRSXLEOE", "IAGOKHZCK", "XXFUWIINMTOMEEOG", "FTFXHMAVVJEKAQZCXGISZMGMG", "GTOBEDNPNMEVFWUFMMGAEECSVIJNMCGOMHEKJFQYOBVOMIDDJV", "JFAJZCPCZJTOKDLQLXXNX", "IIGRDDNUVVFBPGE", "PIRKKOVPASOKOCCLUQWDITSLMDG", "JNRSSTOTZJB", "LSNBNOWLDGFTLIZGIAZSWMGYJVLCONZIVYZGQ", "TXGOKZTHSQBSUATKMAKGSUHZRXKD", "IFNHXLTTJBCYJM", "CFCDYAAYMUPPEBKBTSIBILMLCTBQMFWSD", "MUAFJKKXLXDFHSFXRLYITPDYVENBBLRNFKZQZKDHMFPQJXQH", "ATTQGEQPEERWMP", "BOWACKGRJXAPMQBOUIOVCWMWHCPFISUZ", "PYQCR", "XEAP", "DPZEGDFDP", "YTR", "M", "PQWQTCTIYRHCAGDHEBGUTGUJKCDZTKZA", "ABTKUXXVFLGDWZFRVFETIMWLHGURANRVICKHNKNWPR", "AVEMVDUKHZJLBPG", "ZVPNEOYTQTIXXTDPVJLGYNDQZTFNUHIJLTSSN", "QUKOPMMF", "DJWMEWCSDOAUN", "GKGOGTXLMUZGHROIALSEUQCONSQXVECX", "XPJLQYZ", "FEHOHSPWWFSRWSGWKWKYNHJR", "LXNRPDIZMEFHHZYPYTIJAYZO"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 821;
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    string matchString = "MAUWHJOSJFNUDAOXLBBRTUZSYDPKKYSWXZSXX";
    vector<string> matchWords = {"FVEOKDYTHNTTVHMNMORFHPSMMLQCKFSUDT", "LGJIRENTQFTVCTJGPVAUALMSDOEOAZVDVNAQYNFUV", "BGWHUSGRX", "GVJQOKWVCZSINVJNDQFZLYDAKDSMBFZFCXNBMMVPZ", "MHEXLJWIKPAKWYFMSUEKDI", "JJYOYAUAZTA", "DWYMOEJXWQFONK", "KVBQSLINXWMSLFBCMAWEDMZBGCZQCMDF", "NVJTZRMRBAKPMLMFYNSQAOISQXCPZXJYBHBZLAJUY", "MIKMBJLAXITVCTIUFMDTTYRULLIAZOCVFFAHYKSEXTVNEQF", "CNOOHZQBHOSQGMPJYXBZRAD", "VLUGXO", "RMJD", "ACVJINRY", "OOLSZELDPAHARPUAZNDAGGMBLYQVYTYGYXITJZSKFMD", "JGTXKCLHFLHXSLBSWNHVBAKXTVBZWEUQNOLZYAJNJPLM", "LP", "LFESUISPWNBIMMDDHAFQRWRBUSBEKSMFQRDCPJ", "QVSTCGMMMFAQOOVUBYYCGHOALEQKI", "NGRWMFFMXZBPGXHTUIJYZCPVQWXFGTHKK", "NMZNBKTKSHRDDD", "CRJVCHEXEJQTSXUNSARNLUOMPPQYLJHJUMBNQIESHWAXUH", "ZQGZCHBEG", "MRJVOIAXACXPSUTEGR", "TYKBAXNEJDXENFYTCJHRMEMIEDYQFTTYXSZNR", "BQHTLXSEWBOKIYLAXLD", "YZMLWITDDEPHXAOTTCREKMCAPLPPECN", "XHUITWICWNNTHIBQZBTWYSSVKQKBVCDTUXGM", "LCWKKLDDBZFBMCOOLNETKCHGLNXUWJTI", "QIBXANJIIPXCKMYKNGQT", "QTRMRWUSUJIVYEYQW", "FXGAPYTXOZWAMHSXIEHQZBQIWEKPSIXNQMSLIJOCNGBEL", "LCFYRXJGVXKBZSQFDHSATIINVLCXBMR", "GHNVZLZZA", "TPQBDUZCYDVRAHDXJWKVQBSOS", "TPMDBTYUALTTYKXDRSPRCLTALIPVXOPST", "USPHIZNXXIBMKPGXOGNXMXCXSUXIUOIYMD"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 457;
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    string matchString = "QDTPVQYTQKJL";
    vector<string> matchWords = {"OXUQIOMPWCMVMPUVEQHLHFXUQOGJXMKBSHQIMBPHDYLSWVQ", "KRUSBDXAAWSNFMGAVVGC", "QEWILHDLEERMSETGXNIMBNRCUCDCMM", "FUCRIMZXEVRWBSVGHLVOTEPALHABEZNIQ", "GHPXFHLWKV", "RIBLKDJBASOQQDWI", "Y", "VNXIWZTETPRHZPVYYAJACNCOYDPXHS", "QQWGO", "WXMVVXK", "J", "HIXEINFIQAVCHPHIDLEOTSBZPGBPKFREQPQXONJQBAS"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 153;
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    string matchString = "LAYHAEAKADDBUKTLKVOLIWAWFFNAARP";
    vector<string> matchWords = {"NDUOFYLBFZVJGHSTQFVLNRWIHJOEWJ", "YLHMWXAWHNJVYLKOCTYVDDTKUGATCWOQTSYIO", "SDIYLMBXBLUFHYFBEUWKNGMQLNIQDQRCHFIYYEPKYGJDAHEC", "TXJUTUHCR", "UBFITXHNTKGQOHQAWYNKDTNN", "YJDEPSN", "HTNORWMXAZ", "UEKGM", "OSAJIVLTPHTUBHFGUBXDVXXZYNWALRZEAGBIJGSKPSTNZ", "DVGOHPQZUZVKYVDADTQJLXGMRCCMZDMJLPCYEZFYVT", "GUHCBFPDOMXMEQKCYJ", "YJEKABHDIOXECNJMZKLHXUWNTXXKUNFSLHTTZKYRZNUP", "OUFQHUGWSKGYYMFPXTQNGZFPJMYOCBAXNJLFNVWZVQL", "NFLTLHISGFEUKEPGHDTNWXGCSZBLP", "RQVEYQIUYKZVKMBCXDBKRPXUWJMMXPUIYANBTANRLU", "WNEKOLSWTPXOEDHKN", "UZDRDTUKWMGVDWFYGAKIEO", "EPHXAIYNGTNRGJHPLQOWNVTTGMVBXYLWMQENRT", "O", "NYQKZZZOLHDWZOXZLZOJKPIBLVPEQWVOFMRDCWM", "VBSIQRRYUSTEGPQMYLHTYHHZRZCJEITBTDCUVR", "CTNREWPSIERXTKCEKVRBKGWF", "NAUMPODUXVV", "DIDMZGBYEVVKUGXCSSNLELLIUW", "KTTTKUAJJZUAJIGTKSVGSZXLFGFFISLXGKUZLW", "HSIGBLFAWHJHHEFPZZFMUVCTLCFUOXLJLVHWEQTFNFDANXOGR", "MUN", "UFHVXRBIPHUXAHTAJMABUSFLJMGCOUS", "NEWCHDETJGGLKBGJVKYCSCWGSQQAJA", "MLAOLCTHNOGRVGW", "WQMJMQGUVLZNKWUYAILBEELFFLEWQZHIPKMO"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 580;
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    string matchString = "MQQQXGJUJDXIQDMSVRUNBLCBCLKI";
    vector<string> matchWords = {"MSBPOZDYEAGMIDIXLHQVDYHHE", "RRRAARMPIWAIRBDGVCCAWCZQQEGQXSWXSKSEDBUQFPLLIUM", "QFSW", "PBTRJVYNGZQAZR", "OAIXGHNOQAUJILRBMCFKZYKG", "ROGABGAVL", "WYQIWYVCJSIPDPQWEQIHTMYCGEOTEILTBQHIPBOKU", "SCLKPYJWZCZDXRQTTKOEFTEXUEVZIUHUWRPSNXZO", "QFQRJOUDTKXWLDWJSLATFVDBCFPJAKKIUAYMLAGPG", "OLLVBNDSKNBVUKJVOLCNQXZDTZAEZGGGR", "EVXPQZXDUKJUNKHIGZLJQ", "RILSUMBYQBZZSLWZJBBPNKTKJRRRBA", "QUDOFFLXQDTVKKWZSTFLZV", "RFQJMJCKMJDEHNEXJFTJVUKQHZYCJVAKFXAFGJZWHMPOXGCGD", "ZXVVLFDIUMKFKFEKMD", "ZSX", "WNCGJMAJMPKAZTJVSBAENTOMJQDKPCVGFVGNDVN", "RFHFYBRNBPHBCXGRJWQTYQCFHKOKOO", "UC", "FLDNGONRHXAUQIFUWEZZUOSAASNNMKGKIJFDQPQOVZAFZBVY", "OOCWSQBVJRYXDUOLFDKYVHVBXBCCOFKLRNVPEFCBXABMHSINQV", "ELBFNSLYGIROSSCLYWAONBPIJRW", "ZBBYCCASGUGTTCOIAEZVIFCXNF", "WJBSQFEVFRBBGBBPFOPPMGYW", "LYZSTIOKLLAOMHJAYJGERLRGCPLOACEZIFSKFRKVATSFTLFHW", "VLGHDTFIQWRRZJURULTTXEWISTRUBHECBUPF", "VGDZDZHXTYVXKTMP", "VOPGDJPIVMQGWBLUYEQE"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 337;
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    string matchString = "TUKRJIQOYTCDVMNFZXHE";
    vector<string> matchWords = {"MTSKTP", "GVEUIMWVIEGDJQHOEACM", "ZQWOANJJCOKFICQXWJYSIBWNBEZPZZVHRGXDWRNWKECEG", "ABMRPC", "FDOYSCHISESMVHEDZTJFWPEXJVQDECRHAVOC", "GIMXSOXHCNIHZIIPWVHCPZ", "RUCYAOPEQWIUEM", "GMYWOLYNHIHWOX", "LBXQHNRJSYIEPZOTPBCRDF", "TLKSHIQXZPSJJWFQTXHVNEDTVNDKWLAHBLUMUBYH", "WNMEEPYQZTGFKCKI", "FWHCDEFKQPCOVKAEDMZSTOPIVHUUNDUYFJVIHHHGTNBYUC", "UEXFEQOELBXDWXVVVNQIHAGONVJZRCSJLHKVMTSXAUOLLJVSJ", "FOPWJBMKOMABFZAUIYQOTGNKQDYV", "IVVWHKSYPCKAZWCBOWCTZYZFJFPEDNTYBMHJLPJFFEDN", "QTMHNFFTJULAUGTSAMGJC", "UPVEGAHZFS", "XXAMUK", "HC", "TOTSJXGXZCTMIXJIFCOCBGE"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 329;
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    string matchString = "KCEQRRUPKLIICJPBKREDYXAOMRXKJR";
    vector<string> matchWords = {"CWLHANKXJAYTVWHCOPCAYKSIGPFMDKFAATXWVZLV", "RAJCSVXXPVQKKCBZWETZJBZPLLLNZKEGBRDEAFPDWE", "LGDMTEISRAQFOUEIDSMXI", "SHSOJHTMLYTJAISECKRKQJ", "NSDFLRVREQMSKXKRBCYOUMDXNVFOLATILUHVQSBW", "ANLVBGHYFFPITAGEQQDRWFGPNLLIRY", "ACBBURMSLBJJWWUUUJBOHTJHBKSUIJZON", "MGRDXGPGBWWU", "WNJDRKZNSCAXQMEQLISRHBHWELIKGPENDWUY", "XJFQZKNSCYRLIZTDVLPMRWGYYKSFHEXBNFTRXZPLN", "HJKPQYVFGJEHGNI", "KZFI", "AKNPYYGYZLJCHGYEICMRDKOJDXRTJQENJHAYYUTVCD", "EGQFUBLTKFBPBTCPQBQGJXUYCIHWTQAHFVGIUOZ", "BLJXLTLRERYGEEXCXQHPPQJASLGIAUUDDRHEMSIILXRKEV", "RTFXTNTJWSICSTBWGWICEMOBJXBGE", "DBLSFFUPKKZMREVWGTQDHKKKGMQSKJPOPHIOZDSVTTPSPRGSX", "FFHRSWPQYCNUIYYHLEAKTRNLXFXBPZJK", "KRKUDQXLWKEHSWBWENH", "DWJHVYJY", "NKYG", "DNPZUYVWSBFOVTJRSXXHOPSMQEXGXNGANYMNIGEXSR", "QYRTTTCTEQCAU", "KDDOGLZTWDWAWFEDX", "OCGWKLMNBZDQSXSHJOVAXBQIESBVEKLMSNNAYMROC", "QRXPA", "UFUPXSOXQCAPGNVWZ", "SYYJINHMJVYCOXMSHTECMGNRJRJCXPHWQLTOMENQVKL", "GHTUWAQZVMLINYNJUSRXKUOVYJUYDTLUWFRIFBFILV", "OKRENORJLGBCYHNDZMYI"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 652;
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    string matchString = "JAYKYGWABQUQKLFGDOFTUNWWIDJLLLBULXXQYESYSAMTODFK";
    vector<string> matchWords = {"FLDPCKXJAJXE", "BCQRBLGBGAUSFCUKVIOMAIQICTOHYCBFMAWUIDFBSMA", "AWKAWVTEZQRJSAYFWBRHGBOAUYYOUJLOCYHGNDDZZMCS", "SLUWHRJYBEKMWMTCYDGYLJOBCEUDIC", "YSMTNNJWUXLQZ", "VBQKFGDLWHQIZBBPESRB", "DAIVZTDPUQPUJHLOIGFTNGJUWXYYGJPNB", "YDQYQOTLTCSGKIOTUQINUXYOUUKBWGMZHHLOGHA", "BAIQVTRGZKPHTSNXBLSQCPAJVJJDOPPSBAHTOMTUA", "YMHILKBUYWJYHHQYETDAZERCWBBUFZTNXXCGB", "FYOAEQJYMSJQYJDKTDHALWIWSRIUGYTWE", "OMUVIIQYPBJBWHTFKH", "ZTRVCJKINUTH", "JHKLYIYMWEKNFP", "LIMVRARISMNRGCYXODSOYZHPIGOOJBDMFE", "GXWPVDK", "YGGOQRMZRTNCTEZUARZBPDRVIGRRDALTARFFK", "SFENXDPRZXLTUCLHYZWURYKCOIQPWHMTEXENTLO", "EFKMORPUHFYAALAKRLTYNNZZCCCVGAYIEYDCP", "WMXAUMCAPBQODORXXNUQTKLIYHSQJTBBSIGFYAFPAFBUI", "SISKGUKPOYDORNHSDOPJMFAEKPZCBEJKJ", "HSNOQEQSUPBGSCHJLMXUYJHLTANQZDBMWFOK", "HOQZOYTTMAVHCIWCJUSRUBPTPVZQGEHHEHF", "AWNCWVNVMVULVTBMSLGEDWYWQRKYBJWNYQHPHPGNYEVVEUR", "WWYNHMSBZXNTPGCKRQRWTJFMCCEYJYHBQIILYICJGUPTJ", "CRNIDPTZBMCEFZVTJXZDIBXMLUA", "BEEQCHBJPTXZPMJLJYQGOAUMIZJYTBWFO", "SWSOLXINWYFXANOBNBOLHL", "OQGLKEOB", "VLLUAL", "LBYTBYCCWWJYDAPVEFFHCYZRWSXPBHDQLOXEGLJONQIRLXRI", "FSUJFIBSWGOTXHDKVQPOVDGWKJLCAIHKJBIJWOZDJNNRULI", "VHZCFALOLYWOTAJPQBWWXHPWDBFXYKV", "XEIFBDWVKCDPIZUOLPNQLEY", "WXCWMINDPBUAOVTRAY", "UURSDJMBXPKIDAQNNECQ", "QYYIQIZRDWDTYZYGHUVLENXVLIXAMCXVVQBZ", "MWYKVDKHHLPSRSEQQSBOLHLSKQXVXQZLGDYM", "QOPXJMDYEAGXOHYAUAVIWUSGRZDIDZH", "UEYDQRZTTYCZUGR", "IERSIUVKVHWQZVTEENZKSI", "RUIAJFIWCOXZL", "XZCTMEECMYSOHRBNBGX", "NXSAWQCEGRISYAYIZJRFPNOQIXJRZEMTNDNUW", "MUVJKJXOHYBAPEYVLEJFPKGMCOULOHUMOYGFROQYJON", "EFEKYZUUXJEMLSNDYHQJAMJPF", "JQFLDHBJKUNOJ", "UMADIBRPISAROVUDQKKJNRJEJFPNIUFUWJVNVZL"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 1011;
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    string matchString = "RNOWPQWNUJZNFDRCJDYJKDQCOH";
    vector<string> matchWords = {"PPEINDYJBUTKVXMSMREWSMENTTPNSEH", "QLOYNMNMFYMORMWXUSWJRBNRLFSDWYBOEPTAAFGNUHW", "O", "TVJEFWOECWRNKNTXQAYGQUDUWQMWWKVRCLRFND", "BVDWXDHPODCPCBIWLJH", "QUJY", "IXSXTQFJJEQWAIFBPYUGQNAKRBDITBXOJNJHTEWPJYITUUO", "EBFLKBEPLTBUNCZXXKYY", "CSJFXTOGRVYDYUIEEEDOUZIRUTLKMIV", "NSLBPKUMAWPGJNTXEMFQZPBPVZQIXSCROLVG", "MXZAZIKNOYPIZMHEKZZFEONLI", "CUSGPYEEIRJQFZZQIUVXKPJPFCMYNBWIJIMQTRMMDBBQHHROO", "JFI", "QRD", "RRS", "HZWFVZFAZCOPLGOLEKERLCUXIJUSXRFAGSGNMIFE", "VUCJLR", "TDDNGW", "LKHJWVORHBWOYXOCAEDLHGIMMSDCRJGDJKFBHUUIHXZZ", "WHXVDMLCZOUJSINKOJGVKEFUVEMIFKNAG", "MTLRFCKCIXXKYHMIXR", "NCKMKMUYRTTVMZHGJGIETUUBFGDPOXWGJ", "NFGHKJPBTMWQECUKJRKHHH", "QNRFDLTICOAOLXFKANMPJZLZRMITOHMKF", "IJSSBREQUGRPFOWKBKLYKSSTNPNBEYLDLYEUGJKZPFXAW", "EKSQVCUHYPAXOUNHYWCPKERKB"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 402;
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    string matchString = "ZGRNZJGMKOSILQPMVJCFZYQJDBUYKPAEXOOPIRFJT";
    vector<string> matchWords = {"ODNIZRZUWCLOXSXGETMQMWMXJIGAOBLIWNEPGPOWDUFIZN", "IMVXYKEIGQTSDGMJDTMXZMPST", "VYVTRBBIWXVUXOIYMJPNJEIDWXCTKPHERZOOSFRQTQRJN", "SXAOQLGQEGMEOZOYHHYWWBNL", "UTVSYDIXYASYHPDOZD", "ZKCNAEJVIFOWMNEMKSKOECZXIJJUYKXOERXPYXID", "BXLNUGMMLAIQYZAILOIKIPV", "GALMABIDCEJAYLCZCLFGFWMVB", "XOVMJOHZPISCGFFCWCKFUGIPXDYHDEFZ", "YOITXORQX", "FNSYDCBRUKDDPYXCXONWXTDWKBSCRKXSMJZ", "KKIP", "PGIYVQLQPBNIOIRWMFEBWMMYFMVYEYLYKWU", "WZKFBPKQHYFOWTXXTHAEZBQFPQJWRRD", "FUIPQUXP", "CVMSWOFPMVHEMYFW", "DTDDCVMZVKVWB", "IIJZSNETESQNONYEWFBNYIVFKXDWGJPJBDC", "TCQIPTQLSIODVIUXTFBCEVKOIBLJOGVLEFGHFWRRSNAGFUWZLF", "TUVLFHUFXS", "MXZNRLOCYFEUIMHYQKP", "OVZYWMERUDBVLWXQEKXNQUYVPHYHRDWBCAQUGWYGDSXE", "CIOQFRXKCENJPAOLNWYBQEDCPNSWWMRUWEJUCMFSPJ", "EEAPBFSUYLACFZDBYPJBJNZF", "RXDJZUFVGV", "TFBUOPOHUJJTEEMWOPHYVNUIWBWNOFAWIS", "HBXKAEQRWIRIPYGQVCDFNICZXNXZTXUUOOQLEWVBCRQOF", "KRCEZYBQGWLNIRUKIGEDT", "AQHYYTODDXBZXBGVIWBUWKTPKZTFIYATCHCAXQFEZW", "XMCXKNNSSPZHBLYKKB", "QLPDHWFNOIJAALO", "YE", "LCXK", "OXVQZCDWUVZOTRMBPALISVPTTAS", "KFNTDDSGGGTGWARRKWHEOEFEEPNSWVIAANYUDKIXJN", "AQMBJZKDITGTMXOPNQVSDTKPM", "I", "RDDQGJTWHYLJGXUSVRHXBVCIRGSTBTWORLJLUXMEPHVZQCHBS", "SBXSWJHFESCOPJFAISDFQOYMMEANPIVTWNMXDZ", "NBXKCCJDUHZKRWDTHQJEVIKBNQJ", "MTNJXTWZUZ"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 620;
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    string matchString = "UYNMXMEKJHABQWQIPOSJLRLLFZVBMVWNLYMPBM";
    vector<string> matchWords = {"LNWMYWBXEINUXARTQOZAQETIQIGVFUOJUXKLFB", "JUEVOQOBSPIYMVSPDAPWLYYUOGOZZBURGFLELTFOARPBD", "LYAFGLSCYHRIXYPWNZAFXCWQ", "UHCRHPUWJEQVIPENMLMMHQLWOXMNJSRISANWJFLLWTDZA", "APQUNBPRREWTXXXVOJGUCRMH", "DZEXMRGDCEBJYSYLPTCMCEYIGTBPEMXZAAIBURPYI", "ZYDCUYAXEOGZBWKJMMQZTEPRCJIWQPVOE", "MKC", "EIVXQJBBJRZU", "VBHXKHO", "QHPAOXZWQEJNEAULOMSS", "BAILXOFNXIQMBGRHITCU", "XEMVYPQTGDVTQSGMRMJO", "RMDSVPUXGGYQOYQWWSNWUR", "FZDYLRSOUQOZXEDBLKIEWCWPVWUYPQAVBSPUGOYUVZWDT", "YYOMDPTI", "MTAGANNFTWDTWCUXMPGFOZHEFQXHWOBXEFYCCQPAXB", "OO", "MSMWBH", "RNGJOPVVGZWINOMKXKUPH", "GDXLIOZWBNBUDODBOBHLT", "WKVQPAREYCPBSSYDUGRNMIGDIWXOTG", "PJDL", "UFJYUPESMJVGETLDSA", "KWYLDWGMIXOMXFBYIXJDCRFFXZFR", "LFYPFZP", "OVITELZKDRBNWSFWUWRSXWPEZWLROLWQWVSQASEVLLRUKSSI", "ZIDUBNTWKAIKPIHDZTXNBHHILGCPMZTMPMIYA", "RCEAMPHWFBDQDLC", "QMQTXXACREXWCCVQM", "WCPQPENOSSIQCDNJCFQXZWQHIHAWWCDOD", "TENFEGHECL", "CTSL", "EHIYWGXJL", "DJGYDEBSGKYMEIEYXQBAXXIYAZU", "UGLHLOWQRWJUAYRRRPWIVYVAZTJYGOBAVYBAHBQQSKUYLKLD", "B", "SKGQMXTBRBQ"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 354;
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    string matchString = "OUQXNKAYGFADTCEQZXUIAIZVRMYSVVPRVSKEWIOL";
    vector<string> matchWords = {"KYRBIBHQMYTLOMPG", "QMYUTRMQRTZFTBIEQIYAMAPILGMCNKCJOHFXAJVJEUNSHED", "ALZDJRTCXRGYIOKOWLVPMEANKQMQHLQHNSFKWZ", "LYOYEMZRYCRIXRXOQWXGJGKSSJIOSOH", "TJILRSXJIVPNZDCVAPBNXQICAWJOJXCTYYTJWPK", "ACZGOHUHBBVTKMKIAOSKQMGSDPILGRNEZLYMFBA", "PUDTUFOADF", "KTWGQFWIULKYSFYZRLLLHGBH", "TAIEKRCXG", "XJXKCAZXFZK", "KZZEPHXMEAYKJPSLD", "CXYDLPP", "TAEBOSKGNUPWD", "CU", "UAGCQKYVRPRVVBIGRUSSTUEURSNPORENLDWEUGRXFMNCQBAD", "LCEOUTPGLXBUGAYAGNEKFLIWWINQHCRBGNZDTHDKVHXNMZLQ", "TOIJXOONFXDZ", "TMRTOOMGSXPJRWKOJ", "BSGZVJUVAZEOOITMTWWPFJUXJPIABAHCGSQWORRFQTIDL", "BRPFTQGHIIJTVSQHMVGNBPOUEMDCC", "HCVYTJXZIDAXR", "LQFFZQPWIEIXRBYJUKYNBZUNJTXZSPUQSEYLDWTAIQIRJFJQ", "UCUYGNWIZYOPZODUZYHVKQUUGC", "QTUUBVFAMRNDV", "IEWHGRSXXNYRYDTCUOAFKSLUTULMAURKEYEXGTXNWLHOWUX", "UMPKQENAMICBSE", "DFJJAYWQQYFKTCFKZBIEWEUXFBRXWIJIKYLXJQKT", "WVXBTFEWKQCSXUANFBMDKFILBGZSMVKTXMWPWEMW", "TXFYTVJUFCAOABPNNIMOCXWPRUDXLVRXIJEZMD", "CUTEFVYAZGTIV", "IKXPXMKTOIZ", "EZWUPJWJKDJBCCXRWKFIUZEKYJPXSIHT", "AKLWVDCCU", "EWOQLYBSO", "K", "UTYLOMTOEEKVFHBAYKUXAFW", "JCMWRBXTEWIKUAWXLJIFEM", "ACTXCZNTAOHBIPQVJXETCS", "MFLIVTVKKGULTHMBIJAXAO", "LTYLNYGMITMCAJQ"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 625;
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    string matchString = "ZOCSBYYMQPBRWKFJEYPHSDG";
    vector<string> matchWords = {"Z", "LCZSMXKLJEBHZUMQACGSUPFMTAPRJO", "OOCOSQZYCTKCQGNQNXCTTBIUKSWTCUPHBQSRZRGJQXLNYJLPA", "QVWJMSITUGFZJATOYVIDOSYRNHLUSLPPPCFOUX", "B", "WCXCWYPRKAWMQNQCGVDRYFECYVVEJMBUVOVPMQKZCKGLS", "COKYS", "M", "FWPRYHDIMPRDBQWYKJJOHUKQGRGKLHN", "IQQOIWVQZRPYEGEQKULMQKAYDBLGRJWQJLCALLYFOEJTJZIZ", "QAGIDCCHGIJSEBLOASGDYCBLN", "HWNUBLQUFDINRGGK", "XOSOPBIIWSKRWLZDVEDIZUL", "KX", "MWNFV", "NYQGGROSCQUCUIMPEWKJVEIRJCREYPK", "THKFVTWESGSLNNMIQCKZCYMNWF", "RBCQYXKGJLVRIQSBYECIODKKYKONBZSIRFPFDIDUWCI", "KPDXDPCSELLLO", "YHDPGEMPSSVLNCZSRUICRQXNII", "QSNQDR", "GWTPJGMSODQRUWWDNHCRAHFDXRHDHJJKJVKKV", "IXPCSPUSEJZNQKMRGBONZZVH"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 368;
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    string matchString = "DL";
    vector<string> matchWords = {"AZDKRONKDCVOSMGDDDNTMWVHV", "YRZTTCQKUKXPOQFEZORLRPBIMAKHFSLRANYHHCAYGSSEAR"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    string matchString = "LFIBSNFXPF";
    vector<string> matchWords = {"NHOAWYDNVWQKSOTGCLVTSXHIRYCWYLBVHHZONS", "CEOGKQZHANKDFDUCFKT", "OVOOYTJVSPWZZITIJ", "ZGRNVEQAYWTKTSJKNCVDBIPDUSHNWMZWKOQFAYWUSD", "HNHFEIYWAZKSMNRWHMDQYWSPF", "VXTSRRARNKYDMGMALRCZSZYZT", "OOJFURPKASOZRUFKKIBAQRDERGSJRMJNYZVCMCIZRXODTF", "NEUOVUHFAIZFDWENOMRXCO", "KXTRCULSPZRRLKDQNBMYZPPFNOBJQTLSNQ", "FYPWZYWUFYOKIINFUQJ"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 52;
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    string matchString = "EIL";
    vector<string> matchWords = {"RLECSLLSOLZJBGLLKH", "WICDZQNNHOMRFAYECGWTLQECQIUIJPAL", "IGJOLOWGSGVLCTWEOPDAKJMWLQ"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    string matchString = "WCCRAODXC";
    vector<string> matchWords = {"PGW", "DSMFEXQEBCPAELHKETOF", "ESVOWVBYVKPNISNECMXRYXEUUAOYNKWHEQYIHXRLQCBO", "DMHCVTKYWYLGIVEXHLNBEJGRAGPRBRZZYZYBZUVRNBKUS", "UPAUFBZJDUFJJHDLGRKP", "BFWAFEKOZOSQVAAGYTTQUMAZHBCJJTZPNLBFVUSPOX", "RNKFLQDOCBMHECJZMPCENWOMRUU", "GZGWSFKSVRCKHPHWBXLKHRRMRONOREUW", "IFOPC"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 119;
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    string matchString = "BHLBBGOV";
    vector<string> matchWords = {"HIWTZPUUFEKACVWPVTOWLEMWPCDIBNVQZMVKYVFMI", "UDMTCJDHTHSP", "WTWRDJVKZUGJMXAOQADROSAFLS", "RIBQRQIO", "DDXEICXTRTBAAIBPPB", "BATSLPGRYHMDSKTQGLTSPMQPFCR", "FXXNDKCLEWUVZWDAOSXITW", "NCERDBFJOZJCRAVFVQNYEPFNBBRUGXOLXT"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 96;
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    string matchString = "UHNVOEKAEKBWXPQJLWU";
    vector<string> matchWords = {"SGEQESELJFZNJXVKJOYTTAGCUQV", "RWUBBMLHVVCKBDFZCMBBF", "NJMTLJLGIWCFBRGKBIJIBPNMFNSODBXRKVKUUERYHT", "OVAATUVRXTDSWBTMLMUKYLLYDNUUHRBQWY", "WULRBLTHLSILTLPEOZRZHHKLVXTFLACFLR", "EEAPVDZFXG", "OYDDYGSPJUDGOFKGLHLIVY", "RJLGQPEEOTZARJBAMYV", "YAAZAGQLPYEORCLEOZLFWUJPRTXLLZRYACBCEBVROFJHLYOF", "YYDPJSEMIERNTHERPCZGHKQUTXJZHZHLGFJYGAZWFFGDZLO", "SFJLKFGAQWGFDDBJCBCKNTLVMYCFAQIKJDBXIOBQPPFFIDO", "BHXHGDKXUIUDYSPGESHQRKLLRNDBGMHXGRHVNUYHXIWGW", "WHISWPOVTCIJJQHXSLDNJBHOQYIPMSXIFWMZNHTLQIFXGAV", "PJQKEQMLBDPCFUBEIWKGLWEBVOZCF", "IMFEGKBXWQXPZATJF", "ZJUJQHHFJKPCVJCZRJMMTPEISMWTNJAONXZCDCOXJAAQGK", "UQPTQBKFOQBCRMSNGGLTUT", "DVXCXYBW", "MKPVFWLWUBH"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 431;
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    string matchString = "ZIKJIEJWRNYMBGTFJMRGIYUCTFSCUV";
    vector<string> matchWords = {"MHENFUPBDUDMZBGGMHZNGDQGVAQKJZKUHWIYYJZODWVSCIDMEH", "LVVBDXDDWXFRUWGVVBJCAMMKWFTEVRFAFSIYTUPGRONSYQLSFD", "LUGKSEHFMDXVRCIR", "PRYGDBDEXADPFDONRRGSLJN", "RMUQOQMUBTWDGLFNVNTISDPQNQSVEMBCGBXCJXJAECDKR", "IVXEVMDZAN", "MSELKMJAHIOCSZWSTMRJELBOZNQHIBVQJCLBPILSRMXETHYMI", "XEEQWXP", "MYQZNIXURXGIHHDWWWCUALVCFMJGXNGNSST", "TFZCFTNGKOCPMKZIOLHREDE", "YSAXQVQKOIZPMLEX", "CFMOUWDVEGRWJSEYMQ", "TNVWBZXDYLDMGTNYQLBFVCEUJBTTOYTDFSQ", "JSGXYGUW", "TTJBWXIHJSDRETRPJENBNONWFYIOQFHUCK", "TFIXWCDNFUUFNSWQRWLQLZOLWTMLU", "GKIGXCUJFFEJJGNEPYXFENAKTJV", "ANNZMU", "DLQNRZYC", "ORGKJOYKBSDWKCRNAN", "SPEI", "CLPUOTEYZGQEJSRJFOMKCUBVBKZYCDU", "JURWCLIQYUFLQJDJBCZYEFSMUPUENOXKQVGQVRDRYURY", "HACJJYBTTKDTXBUDUOBEZXCO", "UDGFSDABMRUNLJTUWEKFBDMVNJOSBKHV", "JFFPVRPBWHWZFGEGJHXYCAWVGNFV", "YAZZLFDXAHPRKQOTBZAVUFJZAIJUBBSLAVKGBYFJUIBKLZZ", "KWAJUCN", "HMUJSZLHCXDASULUMRFENIEAUECGGPHHD", "VYRGG"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 579;
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    string matchString = "YISXMOPBXBNRSGQTJTITZXDTMFEGYX";
    vector<string> matchWords = {"GKYUPTZMEOZZPMWAWQVNDPCFAIJOPRMYYFB", "ZAPXIHCWQNWKVFPKWSBBZYJIMXOFQGPWYRRJIV", "UVCJFOISGUWYZJYJGNXDFGMBYARKJQPUDHDWWYCQTTQNQRFYJP", "YOUIWUBYOATBDJCQYOTIMWXBXXFXZKVLMRT", "NNDJM", "USTAKZKRBQNXYOV", "RPE", "YFGIOMMTORTOPCZEOVJDWBFTBRABAUJOXAMWXBJBIVOY", "DKAXQGLK", "YDRUFGPKPDXIQHCKQCIXBDUMHIWVHOCV", "QXRCEQXZCNYHJHHTNORYG", "CUYZJGROPY", "HUYTSFTORUNAFLSUEOEYOICVZIGRTYKKKPSURQNIDMC", "JQFHQFJUAGLOBTNEMTT", "QOAJQTPQMMCDFFNSLTIZQGOVXTUKSBECNMKZRQJQWXHW", "YDXONZEDJEZMNLCQMDVTDJEDIUWEBQTZ", "GLDQTFKAOAPZJZVVNTFHHDIZRPBRWNUTXFEVRKHKPOPWKJPC", "WDGVMTANVY", "QDJWICVMJMMTFJJZDIM", "NFJSMOZRPRVOHDHFWSVZCGTJGJDDGDQVIHJ", "MQISDKESNLMNZLHHKGBE", "WMFONCUAXOGMUGAOMZSOGPNKPTLVTXTAHYPFPVVXQTJPAF", "QODJX", "WJZYNT", "RWBCBBYUHRFTSZLWOYUDJUJULVRMFLJHZWRJ", "RJAOKLWNBBBNGFIVECRS", "YLJEFLRAVHNQVYNDUVCQYEX", "SGC", "AXQJYAJKDKGLH", "UIWGVYMNBVFWHLCSXSYJUKALDDQDDUBUGVDQYTOUPDRDEQ"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 434;
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    string matchString = "GOWC";
    vector<string> matchWords = {"UBCG", "UTWDOBO", "VXLUQLNMENVKMPRQISDOPWABRQMARVUGUWTS", "CGCFLFLAIBIWLBHDXQMFEFRNKKWBZQZOSDUAOKKEDFXPQ"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 52;
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    string matchString = "CDZNFFNNBJX";
    vector<string> matchWords = {"GOVIOKWRQAKQCQARFDCWJRPJE", "FBOWXHDKRPYSYN", "DPWVFKBRZJBZZUMKEDZFVYOKE", "JZGCTFVUNSQEBDVGQDNOLZBR", "ICJYTWPIAHFI", "WMCIFTACWNKEUHRNVPUXUFLGUKVSGQSWHGHOVCBPAAKTYE", "KLYSFWJZQJOUMAVACNMYNEYYPWAHSC", "LWTQTBUSNLZWNYJXRXYHPLMFHVRPDRNB", "ZKNEBEKPLSNUBMGCL", "AVWXQYHENLGZLEENMWJVRO", "DZNNVOPBHZRZFAXFBCSWYKK"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 51;
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    string matchString = "KWOV";
    vector<string> matchWords = {"KMT", "MHYAYSXUVOLVHVZUXWJSHNIXICLPDFXGJHDNDR", "MQQDZISWUOLZUAKUEJYNSIR", "BVHPMUVILGULCJR"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 36;
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    string matchString = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    vector<string> matchWords = {};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 2401;
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    string matchString = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    vector<string> matchWords = {};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 49;
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    string matchString = "ZXZXZXZXZXZXZXZXZXZXZXZXZXZXZXZXZXZXZXZXZXZXZXZXZX";
    vector<string> matchWords = {};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    string matchString = "FIND";
    vector<string> matchWords = {"VERYFAST", "OPINION", "SPENDING", "ODD"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    string matchString = "TOP";
    vector<string> matchWords = {"OUTTHERE", "FROM", "NOPQRSTU"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    string matchString = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    vector<string> matchWords = {};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    string matchString = "A";
    vector<string> matchWords = {"A"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    string matchString = "H";
    vector<string> matchWords = {"UYTUYWTEUYTWUERTWUETRUWYRYUWETRUHWRUTWUYWERT"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    string matchString = "K";
    vector<string> matchWords = {"KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    string matchString = "A";
    vector<string> matchWords = {"B"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    string matchString = "OPOPPP";
    vector<string> matchWords = {"OPOPP", "PPPOP", "POOPO", "POOP", "OOOPP", "OPOOP"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    string matchString = "OMLO";
    vector<string> matchWords = {"MNMOLNLOLL", "NMNOLOMML", "OMMMNLOLLM", "MNLOLOMOO"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    string matchString = "WWVVWVWV";
    vector<string> matchWords = {"VVWWVVWWVV", "VWVVVVWVVW", "VVWWVWWVWW", "WWVWVWVWVW", "WWVWVWWWVV", "VWWWWWVWVV", "VVWVVVWVWV", "VVVVWVVVWV"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    string matchString = "UTUTUUTTTT";
    vector<string> matchWords = {"UUUTTTUU", "TUUTUUUT", "TTTUTTTU", "UUUUUUTT", "TTUTTTTU", "UTTUTUTU", "UTTUTUUU", "UUTTUUUT", "TUTUUUUT", "TTUUUUUU"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    string matchString = "VUUUVUUUVU";
    vector<string> matchWords = {"VUVUUUV", "UVUUVVU", "VVVUVVU", "UVUUVUU", "UUUVVUV", "VUVVUUU", "VVVVVUU", "UVVVVVU", "VUVUVVVU", "UVVVVVU"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    string matchString = "EEA";
    vector<string> matchWords = {"TOPCODER", "TEST", "GEGA"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    string matchString = "TOP";
    vector<string> matchWords = {"TIK", "PPPO", "OP"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    string matchString = "FIND";
    vector<string> matchWords = {"VERYFAST", "OPINION", "SPENDING", "ODD"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    string matchString = "TOU";
    vector<string> matchWords = {"STATE", "SDOU", "GIMMEU"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    string matchString = "BBBBBBB";
    vector<string> matchWords = {"ABCD", "DABC", "CDAB", "BCDA", "CDAB", "DABC", "ABCD"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    string matchString = "TOP";
    vector<string> matchWords = {"OOOOOT", "OPPPPPPPOOP", "OOPOOOOP"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    string matchString = "AC";
    vector<string> matchWords = {"ABA", "BCC"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    string matchString = "FOREVER";
    vector<string> matchWords = {"ORF", "OPAQUE", "RESET", "SOME", "VI", "EAST", "ARC"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 15;
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    string matchString = "TOP";
    vector<string> matchWords = {"TT", "ZZZZOO", "PAAAAP"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    string matchString = "AB";
    vector<string> matchWords = {"ABAAA", "ABABB"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test67() {
    string matchString = "TTTT";
    vector<string> matchWords = {"T", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOT", "T", "T"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 129;
    if(result == expected) {
        cout << "Test Case 67: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 67: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test68() {
    string matchString = "PHQGHUMEAYLNLFDXFIRCVSCXGGBWKFNQDUXWFNFOZVSRTKJPRA";
    vector<string> matchWords = {"PGGXRPNRVP", "STMWCYSYYCQPEVIKEFFMZNIMKKASVWSRENZKYCXFXTLSH", "YPSFADPOOEFXZBCOEJQ", "VPVABOYGPOEYLFPBNG", "LJVRVIPYAMYEHWQNQRQPMXUJJLOOVAOWUXWHMSH", "CU", "XCOKSM", "ZKVATXDKNLYJYHFIXJSWNKKUFNUXXZRZBMNMGQOOKETLYHNE", "OAUGZQRCDDIUTEIOJWAYYZPVSCMPSAJLFVGUBFAAA", "VLZYLNTRKDCPY", "SRTESJWHDIZCOBZCNFWLQIJTVDWVXHRCBLDVGYLWGL", "USBMBORXTLN", "CSMPXOHGMGNKEL", "FDXOTOGBGXPEYANFETCUKEPZSHKLJUGGGEKF", "DQZJENPEVQGXIEPJSRDZJD", "ZUJLLCHHBFQMKIX", "WZOBIWYBXDUUNFSKSRSRTEKMQDCYZJEF", "UHMSRQCOZIJIPFIONEEDDPSZRNAVYMMTATBDZQSI", "EMUVNPPPSUACBAZUXMHECTHLEGRPUR", "KDMC", "PPWEQTGJOPARMOWZDQYOXYTJBBHAWDYDCPRJBXPHOOHPV", "WQYUHRQZHS", "BNFUVQNQQLRZJPXIOGVLIEXDZUZOSRKRUSC", "OJBRZMX", "ZPOWKJILEFRAAMDIGPNPUUHGXPQNJWJMWAXXMNSNHHLQQRG", "UDLTFZOTG", "JTNZXUGLSDSMZCNOCKVFB", "JFRMXOTHOWKBJZWUCWLJW", "RIMPMYHCHZRIWKBARXBGFK", "BCEYHJUGIXWTBVTREHBF", "CPXIFBXVFBCGKCFQCKCOTZGKUBMJRN", "BSZTSSHFROEFWSJRXJHGUZYUPZWWEIQURPQ", "XIQFLDUUVEOOWQCUD", "HNEFNJHAIMUCZFSKUIDUBURISWTBRECUYU", "ABFX", "VKDZEZTOIDUKUHJZEFCZZZBFKQW", "PQZF", "KFOBUCDHTHXDJGKJELRLPAXAMCEROSWIN", "DPTPCCLIFKELJYTIHRCQAYBNF", "FXNXVGZEDYYHNGYCDRUDMPHO", "ECKOTRWZ", "SPOFGHFOZQVLQFXWWKV", "FXDYYGMDCASZSGOVSS", "DKJGR", "CWMBMXRMHUYFYQGAJQKCKLZNAT", "XQKQOYZWMYUBZAZCPKHKTKYDZIVCUYPURFMBIK", "GEKYRGZVXDHPOAMVAFYRARXSVKHTQDIHEJ", "SIGBHZJZUJXMMYSPNARAEWKEGJCCVHHRJVBJTSQDJOOTGPP", "NFPFYCGFIEOWQRWWWPZR", "QMETOGEPSPXNVJIUPALYYNMKMNUVKLAHS"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 1107;
    if(result == expected) {
        cout << "Test Case 68: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 68: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test69() {
    string matchString = "TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT";
    vector<string> matchWords = {};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 69: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 69: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test70() {
    string matchString = "TOP";
    vector<string> matchWords = {"PPPTXYT", "OXYTXYO", "PAAAAPA"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 70: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 70: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test71() {
    string matchString = "EEA";
    vector<string> matchWords = {"GEGA", "TOPCODER", "TEST"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 71: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 71: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test72() {
    string matchString = "TOC";
    vector<string> matchWords = {"POT", "POPOR", "DOC"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 72: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 72: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test73() {
    string matchString = "AAAAAAAAAAAAAAA";
    vector<string> matchWords = {"AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 73: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 73: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test74() {
    string matchString = "IJMX";
    vector<string> matchWords = {"ABCDEFGHIJ", "IJKLMOPQMN", "MNABCDEFGH", "GHXXXXJJJJ"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 18;
    if(result == expected) {
        cout << "Test Case 74: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 74: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test75() {
    string matchString = "AAB";
    vector<string> matchWords = {"AAA", "AAA", "AAB"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 75: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 75: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test76() {
    string matchString = "AA";
    vector<string> matchWords = {"AXA", "XAA"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 76: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 76: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test77() {
    string matchString = "AB";
    vector<string> matchWords = {"AAA", "ABA"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 77: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 77: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test78() {
    string matchString = "FIND";
    vector<string> matchWords = {"VERYFASF", "OPINIONI", "SPENDINN", "ODDDDDDD"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 78: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 78: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test79() {
    string matchString = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    vector<string> matchWords = {};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 1225;
    if(result == expected) {
        cout << "Test Case 79: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 79: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test80() {
    string matchString = "FINDLMNOPQRSTUVWXYZLMNOP";
    vector<string> matchWords = {"VERYFAST", "OPINION", "SPENDING", "ODD", "TALHJHJL", "MIOOOMHSJAKM", "YUIYIUNJIOJNJIN", "YUIYIUOPPPWE", "YUIYUIPHUIYPUIP", "QRRRERQUYUTQTUYTQTYUTQ", "TUYTRQYUTUYQRTUYTRTYUR", "FTSRTYRSYIUYUISUIOS", "IOUTUIOUOITUIOUIOUTI", "YUHJKHKJHU", "HVIOPIOPIOV", "UIOUIUIWJLKJWJKW", "YUIYXUIOUX", "YUIOUOINYNHKY", "ZUIIYHIZHUIOUYOZ", "FHGLGHAFGSHFLASVGL", "GSAMHSAMGHSJDAGM", "GSHJGSNHGAJNHGSHNKAJSHN", "OGASJAOHJAGSJOJAGSJO", "GHSGAPHJKHP"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 55;
    if(result == expected) {
        cout << "Test Case 80: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 80: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test81() {
    string matchString = "BAK";
    vector<string> matchWords = {"ABCB", "ADBA", "KDAK"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 81: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 81: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test82() {
    string matchString = "XX";
    vector<string> matchWords = {"XXX", "XXX"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 82: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 82: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test83() {
    string matchString = "AAAAAAAAAAAAAAA";
    vector<string> matchWords = {};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 83: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 83: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test84() {
    string matchString = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    vector<string> matchWords = {};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 84: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 84: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test85() {
    string matchString = "ABC";
    vector<string> matchWords = {"CABBBBA", "BACCCCB", "CDCCCCC"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 85: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 85: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test86() {
    string matchString = "DFCFBG";
    vector<string> matchWords = {"ABCDEF", "DFE", "ABC", "FDC", "BCD", "AG"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 11;
    if(result == expected) {
        cout << "Test Case 86: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 86: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test87() {
    string matchString = "AB";
    vector<string> matchWords = {"XXXAXXXA", "XXBXXXXB"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 87: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 87: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test88() {
    string matchString = "ABC";
    vector<string> matchWords = {"AABBA", "CCAB", "CCCCC"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 88: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 88: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test89() {
    string matchString = "TOP";
    vector<string> matchWords = {"AATTT", "AOAOAO", "PAAPAAP"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 89: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 89: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test90() {
    string matchString = "ABCDEFGHIJKL";
    vector<string> matchWords = {"HDJKFJKDJFBBHHSDHBA", "NMASKDHDASDDASDADASDASB", "ASDASYAHDASJDKASJDKYYC", "KJSASPJJKSAIIIKD", "ASKHBVFJSJAKSLDLASDASSSSSSSSSSSSSSSSE", "ASDASJDHASLAHHHHHHFFASDASSSSSSSSSSSSSSSSSSSSSSSSF", "ASDABFJJAKKAHJJAKKKGGGGGGJAJSDJGGG", "ASDKAIFGABBGBSGHHHHHHHHHHHHHHH", "ASDAKSDAJSDASNBAJIIIIIIIIIIIIIIIIIIIIIIIII", "SDASDJJJJJJJJJJJJJJJJJJJJJJASDSDJJJJJJJ", "BBFASDADKJJJJJJJKKKKKKKKKKK", "ASDNNDASDLLLLLLLLLLLLL"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 120;
    if(result == expected) {
        cout << "Test Case 90: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 90: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test91() {
    string matchString = "ABCDEFG";
    vector<string> matchWords = {"BBBBBABBBAAAABABA", "CCCCCCBSBSBDB", "DDDYYYCYSYSHDNCHCHDC", "ABCBABSBDBDBDDBFBD", "YHGEEFSREEGGDDDDSF", "UUGHHSJJAGGGFFFFRFD", "EUSHDNFHAHGUHGHGHGGG"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 91: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 91: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test92() {
    string matchString = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    vector<string> matchWords = {};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 1176;
    if(result == expected) {
        cout << "Test Case 92: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 92: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test93() {
    string matchString = "AB";
    vector<string> matchWords = {"AXXA", "XBXB"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 93: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 93: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test94() {
    string matchString = "AAAA";
    vector<string> matchWords = {"ABBBA", "BABBA", "BBABA", "BBBAA"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 94: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 94: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test95() {
    string matchString = "PP";
    vector<string> matchWords = {"PAAAAAAAAAAAAAAAAAAAP", "AAAAAAAAAAAAAAAAAAPP"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 95: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 95: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test96() {
    string matchString = "AAAAA";
    vector<string> matchWords = {"AOOOOOA", "OOOOOA", "AOOOOOOOOOOOA", "AOOOOO", "AOOOOOOOA"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 19;
    if(result == expected) {
        cout << "Test Case 96: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 96: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test97() {
    string matchString = "EEA";
    vector<string> matchWords = {"AAAE", "ABCDE", "BBBBA"};
    MatchString* pObj = new MatchString();
    clock_t start = clock();
    int result = pObj->placeWords(matchString, matchWords);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 97: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 97: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    test67() == 0 ? ++passed : ++failed;
    test68() == 0 ? ++passed : ++failed;
    test69() == 0 ? ++passed : ++failed;
    test70() == 0 ? ++passed : ++failed;
    test71() == 0 ? ++passed : ++failed;
    test72() == 0 ? ++passed : ++failed;
    test73() == 0 ? ++passed : ++failed;
    test74() == 0 ? ++passed : ++failed;
    test75() == 0 ? ++passed : ++failed;
    test76() == 0 ? ++passed : ++failed;
    test77() == 0 ? ++passed : ++failed;
    test78() == 0 ? ++passed : ++failed;
    test79() == 0 ? ++passed : ++failed;
    test80() == 0 ? ++passed : ++failed;
    test81() == 0 ? ++passed : ++failed;
    test82() == 0 ? ++passed : ++failed;
    test83() == 0 ? ++passed : ++failed;
    test84() == 0 ? ++passed : ++failed;
    test85() == 0 ? ++passed : ++failed;
    test86() == 0 ? ++passed : ++failed;
    test87() == 0 ? ++passed : ++failed;
    test88() == 0 ? ++passed : ++failed;
    test89() == 0 ? ++passed : ++failed;
    test90() == 0 ? ++passed : ++failed;
    test91() == 0 ? ++passed : ++failed;
    test92() == 0 ? ++passed : ++failed;
    test93() == 0 ? ++passed : ++failed;
    test94() == 0 ? ++passed : ++failed;
    test95() == 0 ? ++passed : ++failed;
    test96() == 0 ? ++passed : ++failed;
    test97() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=22721196&rd=12170&pm=8160
********************************************************************************
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
 
using namespace std;
 
class MatchString {
public:
  int placeWords(string, vector <string>);
};
 
int MatchString::placeWords(string matchString, vector <string> matchWords) {
  int i, j, k, res=0x7fffffff;
  
  for(i=0; i<=100; i++)
  {
    int p=1, val=0;
    for(j=0; j<matchWords.size(); j++)
    {
      int st=i;
      if(st>matchWords[j].size()) st=matchWords[j].size();
      for(k=st; k>=0; k--) if(matchWords[j][k]==matchString[j]) break;
      if(k==-1) {p=0; break; }
      else val+=i-k;
    }
    
    if(p && res>val) res=val;
  }
  
  if(res==0x7fffffff) return -1;
  return res;
}
 
 
//Powered by [KawigiEdit] 2.0!

********************************************************************************
*******************************************************************************/