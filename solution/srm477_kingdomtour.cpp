/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=11003
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class KingdomTour {
public:
    int minTime(int N, vector<string> roads, int K, int L);
};

int KingdomTour::minTime(int N, vector<string> roads, int K, int L) {
    int ret;
    return ret;
}


int test0() {
    int N = 8;
    vector<string> roads = {"5 0 3,5 1 2,1 7 4,0 3 8,", "6 3 2,5 4 9,7 2 3"};
    int K = 2;
    int L = 9;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 49;
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    int N = 3;
    vector<string> roads = {"2 1 9,0 1 3"};
    int K = 8;
    int L = 4;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 16;
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    int N = 9;
    vector<string> roads = {"5 7 1,1 7 6,3 0 7,5 8 9,", "4 8 1,1 3 10,8 2 8,6 5 10"};
    int K = 3;
    int L = 5;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 63;
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    int N = 2;
    vector<string> roads = {"0 1 4"};
    int K = 2;
    int L = 3;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    int N = 6;
    vector<string> roads = {"4 0 4,2 0 4,2 5 4,4 3 1", "0,1 2 10"};
    int K = 2;
    int L = 5;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 41;
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    int N = 2;
    vector<string> roads = {"0 1 5"};
    int K = 3;
    int L = 6;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 10;
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    int N = 10;
    vector<string> roads = {"1 2 2,4 1 9,2 5 5,6 5 4,", "1 7 7,7 3 1,2 0 2", ",5 8 5,9 5 6"};
    int K = 2;
    int L = 4;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 59;
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    int N = 5;
    vector<string> roads = {"0 1 2,1 2 1", "0,3 4 2,4 2 4"};
    int K = 7;
    int L = 10;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 28;
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    int N = 7;
    vector<string> roads = {"4 1 4,4 6 3,0 4 5,3 5 1,", "2 1 6,2 5 2"};
    int K = 3;
    int L = 1;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 23;
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    int N = 2;
    vector<string> roads = {"0 1 2"};
    int K = 10;
    int L = 8;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    int N = 141;
    vector<string> roads = {"29 95 2963,106 100 5715,96 57 2063,16 73 167,", "38 29 4805,95 140 5198,32 126 7138,139 2 7657,", "70 47 137,114 17 6047,134 131 395,39 13 5661,", "69 96 7736,96 20 3719,5 129 5175,135 101 3472,", "97 49 1075,76 112 8879,86 9 1074,21 116 4803,", "126 18 1110,93 139 8658,136 98 5268,39 3 9871,", "54 2 1414,7 106 851,16 13 7769,43 36 9576,", "85 61 8148,38 59 8024,89 25 2801,92 56 4832,", "92 17 1643,87 33 7210,15 66 3142,118 140 1682,", "111 110 4323,2 6 8931,88 136 8553,20 114 6871,", "135 19 6931,7 63 3056,133 61 5399,106 33 4429,", "74 28 5519,128 110 170,137 40 4370,140 58 5662,", "1 58 5174,67 112 9655,51 35 1492,103 122 1208,", "78 124 8965,59 39 8152,84 92 4081,128 57 3495,", "77 114 1395,68 76 8795,57 123 1418,103 131 4871,", "128 89 584,7 67 5765,68 17 631,119 111 7727,", "95 37 1527,69 60 4859,98 66 2168,84 52 7240,", "39 12 9619,13 64 5411,7 62 6524,16 122 8016,", "102 41 7601,22 2 3929,92 120 8123,78 47 4214,", "11 43 3600,18 88 3204,0 17 5153,124 67 7940,", "140 23 685,1 43 3205,11 120 875,113 38 3549,", "47 21 864,68 6 370,18 86 2509,109 100 2188,", "8 9 3174,76 130 5862,75 91 4997,87 31 7869,", "36 19 5346,30 18 6012,36 8 6035,107 118 6149,", "72 97 465,120 105 7783,65 11 2101,55 114 7018,", "68 44 8802,14 39 5087,47 10 8707,114 132 7682,", "24 72 4147,20 104 3147,140 45 5946,139 81 3353,", "40 88 8300,135 61 5134,105 48 6063,78 102 6174,", "13 99 3831,12 75 8345,24 88 4620,135 71 217,", "127 55 4024,131 115 7049,67 50 1005,109 74 9523,", "5 37 6635,130 35 3432,37 94 6156,46 66 7626,", "4 81 7188,93 138 3110,30 26 3995,139 82 2776,", "76 80 3458,98 90 9151,134 42 6881,125 35 4077,", "6 34 7838,126 53 9638,24 83 5388,32 117 9909,", "100 108 9203,55 27 6515,24 121 6683,114 79 1257"};
    int K = 61;
    int L = 1734;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 773812;
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    int N = 123;
    vector<string> roads = {"60 45 6718,99 43 4775,99 53 5532,27 2 4183,", "92 117 1731,46 44 5186,7 77 945,85 18 5945,", "64 26 429,118 65 5982,115 96 5609,55 87 4558,", "80 16 3145,117 5 1666,6 65 6405,68 28 9161,", "32 101 1426,83 23 3010,73 83 400,97 21 7560,", "9 22 40,43 41 2910,69 71 819,101 50 5436,", "9 122 2961,33 32 871,40 97 8559,66 99 8574,", "104 22 8885,69 23 7927,92 99 973,93 14 1704,", "58 105 2739,86 59 3222,47 15 8628,71 87 9718,", "21 69 8436,4 122 3311,78 21 8235,116 120 6848,", "101 15 2358,119 67 9504,85 101 9008,9 11 8608,", "52 48 6013,39 115 3540,34 63 4090,67 77 7582,", "34 31 1243,51 6 5012,26 105 9625,13 25 6659,", "87 77 7376,103 63 6489,34 81 6432,5 15 6442,", "54 27 6254,106 44 6185,60 24 2368,64 68 7141,", "29 11 802,24 115 4973,110 12 9292,8 20 5978,", "122 13 4483,2 25 8340,71 4 7865,93 84 662,", "19 51 102,78 43 3651,110 51 9245,102 10 9656,", "91 115 9960,115 25 2383,26 34 5886,44 87 4088,", "58 19 2363,17 122 9650,105 39 3716,96 98 2237,", "121 11 5447,93 45 3056,45 100 2173,95 23 3008,", "25 116 752,116 57 4917,34 59 9727,101 94 563,", "59 1 7230,36 30 5650,44 8 4605,111 65 5084,", "19 80 8240,86 82 6141,106 30 5856,27 62 2766,", "86 76 8615,15 35 6366,36 114 6420,79 93 5044,", "41 102 1937,113 86 893,72 120 7149,36 48 3568,", "101 89 765,21 0 3905,63 75 9280,66 107 5662,", "43 38 4194,106 74 1396,103 49 3688,50 112 1897,", "66 37 5357,15 108 6176,112 42 3704,27 90 1279,", "100 61 1494,26 109 5561,59 3 6082,65 88 4063,", "23 56 8269,97 70 4021"};
    int K = 44;
    int L = 827;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 635091;
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    int N = 142;
    vector<string> roads = {"115 135 6455,72 139 9565,52 106 4392,26 96 547,", "133 30 2021,42 7 2941,26 116 4130,71 24 953,", "121 111 6131,36 75 215,107 122 480,128 93 4809,", "91 130 3294,1 30 2820,61 59 6512,61 97 4825,", "35 101 1721,64 87 5676,116 82 7583,14 101 8482,", "62 109 2523,71 133 4709,70 44 4158,8 14 3641,", "55 79 1422,62 59 4416,60 66 813,35 95 969,", "51 5 1445,73 108 9606,116 127 4421,41 12 4651,", "90 82 4352,11 93 188,91 84 8689,14 55 8842,", "55 19 2779,49 13 30,138 109 5819,72 118 8897,", "114 22 1602,113 119 5952,4 72 2010,115 103 4741,", "135 43 8073,21 4 1398,26 5 1300,7 22 8640,", "89 87 3151,44 24 7317,5 62 9174,84 106 113,", "5 113 261,43 81 6648,136 79 386,51 140 4191,", "83 111 3850,105 9 6203,118 31 6687,34 8 1851,", "123 106 1689,58 121 8157,20 89 7590,39 56 7796,", "32 92 5922,100 16 2653,124 7 2497,125 10 3723,", "69 107 7594,51 44 2945,74 25 2270,96 65 4226,", "40 115 8201,40 73 9561,40 68 8805,42 94 4874,", "73 5 5115,127 139 9142,117 66 8293,48 92 4328,", "132 61 5300,104 16 4191,78 11 4790,67 88 3404,", "40 11 8491,117 27 1736,68 28 273,78 32 9973,", "133 33 6969,131 53 4972,46 132 8153,54 57 4671,", "110 106 7387,6 83 5337,79 121 2972,65 47 1604,", "6 118 3817,67 9 3980,12 48 7369,17 52 9200,", "34 0 5143,20 137 9082,78 69 4662,102 42 2451,", "109 57 1209,13 40 5756,134 139 2127,114 137 9154,", "93 2 6524,67 35 7132,42 67 8346,88 91 4075,", "96 37 6544,8 27 7698,39 14 6636,118 15 15,", "17 112 2734,52 53 8340,82 25 5385,55 38 3928,", "136 36 5857,91 29 9214,63 12 755,125 132 6098,", "133 80 493,48 98 9561,4 50 5830,135 77 4430,", "15 23 1671,36 129 7358,134 86 228,35 45 3081,", "28 76 9095,91 85 6164,31 104 2032,64 141 9073,", "139 126 8404,110 18 6125,90 99 6435,141 3 2436,", "80 120 669"};
    int K = 32;
    int L = 9160;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 945481;
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    int N = 162;
    vector<string> roads = {"103 105 9511,67 118 4970,91 47 7831,5 114 2696,", "101 42 4987,144 61 6795,152 146 8865,146 138 9016,", "90 18 9966,7 23 1466,84 6 3332,3 76 9810,", "142 122 3253,131 115 2134,120 47 4718,127 43 5618,", "124 150 8857,4 54 703,88 132 454,113 31 1228,", "2 8 9926,83 136 5296,47 76 3777,104 130 9030,", "56 151 9001,15 44 4799,103 85 1009,146 31 1191,", "152 147 444,7 67 5822,15 136 8355,52 161 6423,", "147 67 3457,108 87 8942,126 115 3404,127 31 6425,", "105 61 5225,146 65 4839,97 56 6017,69 90 8739,", "161 103 2092,82 4 2162,135 14 32,158 160 1842,", "3 127 8750,74 27 6800,22 83 2273,70 92 3133,", "69 8 3697,6 31 6908,147 87 2371,86 15 8347,", "61 98 4827,38 161 6737,157 38 4053,30 121 2520,", "91 103 4536,75 154 8187,59 54 1260,145 79 9056,", "90 100 5064,9 140 9672,15 55 2607,59 20 5858,", "132 151 9079,42 7 8022,71 130 3181,56 66 2618,", "14 21 4611,24 67 3166,130 113 1838,132 41 5889,", "80 112 2062,54 19 4865,135 128 3177,150 75 8880,", "60 36 9907,32 128 9321,58 63 2885,74 54 1097,", "70 37 1808,46 61 6803,114 98 4779,16 95 4832,", "101 109 6194,19 73 3148,28 142 8778,39 44 4145,", "37 23 6343,157 149 2302,60 133 4067,131 8 2303,", "161 30 8702,83 64 5789,96 119 593,146 94 1592,", "99 55 7538,122 146 8819,14 75 3050,119 88 6310,", "141 158 5584,58 51 6062,130 81 9465,103 11 1073,", "55 122 1828,23 54 5620,158 71 5948,86 40 2949,", "6 89 4431,16 81 7189,77 69 9108,42 17 2729,", "148 160 3852,74 33 9531,106 52 2883,18 74 527,", "161 123 3248,142 41 2116,51 158 8315,145 99 6314,", "120 45 7395,88 57 6983,106 125 8397,113 135 5814,", "48 31 4531,77 139 1697,72 121 9827,10 128 6085,", "44 50 1038,103 112 7074,33 111 6977,47 133 1993,", "34 74 6910,124 93 1351,139 140 8726,108 102 5768,", "112 137 3947,90 134 9956,98 35 4635,146 68 5860,", "148 26 5040,124 116 3536,161 110 7618,10 49 7514,", "158 143 933,34 159 6284,49 129 68,24 78 1988,", "74 117 8937,127 12 2131,18 0 6699,55 153 7792,", "109 13 2068,54 25 5330,118 53 4239,85 1 7612,", "139 62 1693,21 107 4297,93 29 5233,129 155 2195,", "77 156 1130"};
    int K = 36;
    int L = 466;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 851705;
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    int N = 134;
    vector<string> roads = {"76 116 1248,36 86 862,116 110 9568,76 88 2267,", "17 55 6997,100 9 3885,44 63 8060,98 117 1383,", "65 115 3683,27 99 8691,68 110 3219,123 0 1365,", "81 123 2491,42 65 9240,83 133 8525,47 63 7615,", "2 61 3597,2 46 32,82 35 9977,79 64 9975,", "118 51 6590,5 89 8606,122 42 1058,57 22 5910,", "1 85 8531,68 124 1308,44 104 9716,19 85 5927,", "16 133 1201,26 120 9624,129 6 5731,30 44 5993,", "79 111 1945,113 58 1607,79 57 6680,94 4 6261,", "5 65 908,12 74 7479,113 129 2144,74 84 256,", "30 7 7941,107 113 8581,107 40 6929,38 74 7174,", "36 71 4520,117 22 7337,88 61 3302,119 31 5402,", "96 117 556,44 89 3844,13 9 9469,82 112 1330,", "101 8 6731,94 13 8840,115 41 9608,70 18 7946,", "5 29 5295,103 44 9350,3 46 2536,93 75 8796,", "116 7 7267,79 60 4172,126 116 6064,14 11 3139,", "124 64 5427,39 26 7069,109 44 7465,51 124 3840,", "47 21 9299,76 24 4521,124 131 4169,66 54 479,", "98 91 3280,48 79 2146,18 50 5528,90 129 9965,", "50 95 696,6 96 3462,93 112 9682,66 37 7140,", "53 94 3764,121 130 5408,121 109 382,12 91 379,", "63 10 4029,36 100 6922,47 85 6537,122 31 9253,", "107 77 6088,100 67 1639,96 70 5066,10 13 1207,", "104 0 8068,111 101 5434,90 108 2423,45 111 2755,", "95 82 4524,55 115 7843,108 43 4823,93 73 8426,", "114 119 404,2 11 6714,92 114 5898,130 49 5510,", "53 128 7202,108 66 5364,58 23 9411,36 106 4039,", "43 105 3701,0 27 596,121 39 8744,9 28 8112,", "79 87 4119,37 62 3129,51 97 67,114 69 1349,", "110 72 4458,73 83 5412,87 102 8065,12 125 3216,", "14 33 4224,112 52 9213,93 34 3478,18 15 8249,", "7 25 4443,122 59 1659,88 56 9879,33 132 9216,", "49 20 7811,89 80 9499,76 78 9607,112 32 5973,", "23 127 8227"};
    int K = 37;
    int L = 720;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 742665;
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    int N = 194;
    vector<string> roads = {"37 149 7306,41 9 9844,158 81 1526,120 156 9806,", "192 81 3873,135 110 5388,1 6 6867,47 98 9662,", "123 51 8649,51 176 8779,115 79 6913,106 116 997,", "172 33 9,31 88 5448,11 8 9333,24 59 5844,", "137 173 408,138 85 488,182 169 6484,120 190 2849,", "23 106 3582,132 69 5480,82 7 4832,166 126 854,", "92 36 4248,10 150 9305,133 143 2681,127 134 7376,", "11 166 1813,103 92 9251,32 103 8742,41 104 5024,", "115 110 2535,100 52 4491,75 151 5336,90 78 609,", "184 28 2488,185 117 6198,135 156 1183,60 67 2039,", "156 65 3130,66 87 2219,67 82 7865,151 185 6424,", "36 173 2357,40 135 809,155 27 976,98 193 7133,", "41 152 9555,122 147 3578,150 0 5690,184 69 3804,", "189 179 4934,6 177 739,98 2 1805,44 172 80,", "159 38 8852,115 152 1060,142 25 7669,164 0 8584,", "28 180 8755,50 22 7344,25 34 6863,143 23 4463,", "140 3 6189,23 76 8874,40 2 2488,87 88 468,", "1 15 143,175 147 3068,38 174 5727,12 89 816,", "8 7 6061,138 154 1891,44 101 4382,193 103 690,", "135 84 8913,30 28 9994,133 61 7754,74 11 7706,", "91 48 8864,119 15 8837,62 118 978,94 20 4472,", "147 108 5707,32 163 9599,47 8 9347,141 13 8704,", "52 155 9228,73 172 1440,185 155 4897,89 132 6862,", "96 191 2751,176 154 7477,8 164 5056,14 21 7175,", "94 78 6339,17 100 8125,147 79 983,30 144 6982,", "63 84 3411,33 104 4218,151 4 3848,193 54 5509,", "50 48 647,61 83 1466,159 26 1461,118 146 7514,", "68 180 7515,165 21 6228,45 100 3145,63 118 8042,", "132 123 2216,28 162 9658,67 144 4613,109 52 2398,", "22 74 7981,59 111 8247,178 184 761,187 161 2356,", "127 40 4298,143 193 1067,82 188 8454,102 139 4417,", "86 54 6155,64 57 1466,141 179 7190,45 160 6708,", "80 47 8496,30 161 9416,37 102 9877,61 181 875,", "68 97 8658,175 189 6753,70 76 8440,166 95 9994,", "104 185 1915,71 191 8429,75 191 9422,43 137 6443,", "155 29 5442,14 94 7655,46 73 3707,145 55 4678,", "45 5 2615,193 72 8169,177 97 1135,135 167 3512,", "80 170 8137,43 49 5082,27 77 298,165 17 8074,", "93 128 3709,154 124 4949,2 81 9732,47 88 3924,", "63 125 3296,179 128 9803,135 157 3685,19 174 5803,", "47 145 9213,102 14 2505,161 57 5879,137 26 5462,", "182 61 3103,125 24 290,86 39 2063,172 142 5812,", "106 130 8482,6 148 832,128 58 5190,108 171 6014,", "109 42 6983,115 168 5190,5 183 7143,170 112 6120,", "86 99 1722,12 53 3023,165 105 7550,15 121 9425,", "43 153 5497,188 18 9454,170 3 9159,69 113 8194,", "154 107 3254,7 186 7890,110 114 316,139 56 5653,", "121 16 9564,66 136 6632,151 131 5271,141 35 6871,", "124 129 3691"};
    int K = 11;
    int L = 5311;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1413376;
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    int N = 119;
    vector<string> roads = {"81 103 2375,73 42 5299,30 6 6497,33 46 3329,", "25 36 3589,90 14 6525,104 39 7921,62 41 6608,", "101 110 2604,60 45 3346,49 22 3442,55 84 4445,", "4 105 4954,88 78 6143,107 63 5249,81 56 4285,", "34 29 5328,74 98 9521,94 22 9661,106 44 9869,", "30 65 7619,91 18 1369,72 28 1074,75 96 965,", "93 42 9766,7 40 9824,49 113 4614,60 116 3109,", "91 2 6025,18 11 4600,7 109 492,84 117 742,", "79 49 2215,73 10 9600,110 17 5647,76 103 2187,", "41 109 706,112 88 2211,46 15 8269,25 111 3248,", "52 12 9389,65 10 3638,60 117 6767,59 55 4946,", "42 111 8817,118 40 7184,62 70 5919,55 91 2666,", "78 48 8223,45 65 9837,114 23 9035,115 92 6689,", "30 57 7929,23 109 2901,74 13 2317,63 94 2002,", "31 63 4390,9 32 4710,57 49 3349,113 103 6932,", "99 107 758,35 31 5434,95 11 6864,118 66 9531,", "61 30 5294,15 85 1723,108 104 474,35 1 2490,", "36 14 9700,57 5 4254,73 112 6827,73 44 7561,", "108 38 9287,87 70 306,105 73 141,39 1 5374,", "113 64 2272,19 102 5840,50 56 9019,56 13 647,", "86 34 6791,89 59 7833,91 96 8103,52 45 2890,", "97 72 6841,111 19 1601,58 117 1590,107 92 137,", "3 109 4075,90 0 8080,81 29 725,56 51 7826,", "75 24 2797,115 85 1488,103 118 8040,104 77 7507,", "4 80 4543,13 37 3248,80 32 4671,104 54 8162,", "102 8 4546,70 17 917,2 27 5730,74 97 9205,", "16 75 5558,70 67 4731,10 68 4127,16 47 8110,", "75 71 6586,106 20 1430,71 69 3391,5 26 8679,", "2 100 8445,76 21 5749,117 82 5959,112 43 8172,", "60 83 3610,56 53 1888"};
    int K = 48;
    int L = 2892;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 685142;
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    int N = 108;
    vector<string> roads = {"61 0 3996,61 60 5163,84 8 9329,22 86 396,", "61 83 1977,49 48 6204,26 12 9836,76 7 7033,", "87 68 5150,85 82 1088,77 74 143,41 76 1090,", "84 57 336,82 35 4014,32 26 700,87 54 490,", "7 59 3247,79 75 7858,31 74 6480,47 4 6691,", "22 87 8051,1 24 9866,33 91 3912,4 64 1974,", "51 97 7529,60 45 7615,67 36 9204,105 45 75,", "20 56 6984,9 38 8594,15 73 7924,89 10 3263,", "21 7 7864,8 65 9719,42 7 6711,99 100 9547,", "81 71 9693,57 7 9289,6 74 4200,69 88 4132,", "19 33 8398,46 13 8404,34 23 9437,12 88 3258,", "82 49 2742,13 77 7811,5 86 1525,1 49 4421,", "81 66 3345,106 35 4942,58 64 590,36 41 8528,", "61 44 78,94 43 4694,49 59 1087,31 85 8606,", "72 33 4608,11 87 5024,77 95 438,96 53 7489,", "84 100 5223,107 70 9325,56 18 24,66 68 3134,", "46 102 2805,8 47 6528,5 55 6544,31 50 3210,", "66 70 2884,73 43 7128,69 78 4299,32 65 3639,", "88 10 3891,5 37 9717,9 21 266,92 6 5907,", "97 69 2427,107 31 9611,101 56 5470,79 52 3429,", "5 61 2982,82 34 8524,97 56 8828,17 46 2978,", "2 95 2419,32 98 6052,25 61 6308,107 15 1906,", "84 91 5687,49 80 7423,16 72 7249,58 39 1075,", "29 36 6212,93 66 2627,0 90 6784,55 30 7955,", "90 63 9231,105 52 5528,74 96 8745,82 3 8604,", "78 14 9120,12 104 3250,61 103 1492,40 45 639,", "21 62 6451,90 28 1343,26 27 4297"};
    int K = 87;
    int L = 5938;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 702040;
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    int N = 134;
    vector<string> roads = {"109 75 7159,43 9 9078,84 5 4322,90 66 3690,", "22 117 8711,27 68 2493,35 71 3228,109 45 4236,", "123 98 9028,73 113 3989,8 90 4154,94 59 7165,", "106 64 858,132 28 2498,40 46 4853,78 93 2438,", "42 35 4712,5 14 5283,36 33 4963,77 0 803,", "103 110 5004,90 109 8450,123 96 614,95 89 1441,", "36 59 9776,14 96 2560,11 87 2231,129 2 6245,", "59 133 5492,10 106 8641,92 115 2487,35 43 4026,", "27 25 5180,50 14 5378,123 93 6632,36 119 3869,", "86 53 2908,127 51 7059,78 85 5224,12 13 4811,", "38 48 7452,49 56 1211,24 20 1525,59 41 5897,", "11 35 5428,20 120 2539,48 81 7212,128 33 8766,", "48 43 2804,99 132 4194,23 2 4545,110 72 5679,", "55 40 9042,80 127 9185,84 124 409,60 94 8622,", "120 128 2400,3 133 3939,13 112 9036,128 1 4979,", "71 66 9628,100 118 2586,1 49 1136,6 61 4550,", "88 35 7165,104 16 8378,123 68 4604,108 78 416,", "99 68 6489,99 117 5892,68 65 3363,23 108 2624,", "6 64 1274,54 10 653,26 76 9781,1 100 6071,", "120 77 4298,42 5 2301,69 105 4001,98 34 1483,", "74 115 4330,130 20 9628,131 99 6308,55 89 3565,", "127 70 4559,66 64 8045,80 10 7307,121 76 9963,", "50 69 2132,63 114 235,71 18 2975,119 124 5233,", "0 114 4709,3 102 6146,93 73 1350,5 67 6515,", "118 92 8949,119 12 512,36 95 9794,85 111 6956,", "12 15 9247,104 32 4368,90 97 5376,77 103 4715,", "130 79 6507,121 51 7493,122 50 2348,75 4 3512,", "71 62 6475,27 31 2490,97 91 2035,3 29 9710,", "103 53 7236,6 44 6272,103 57 8575,40 107 1980,", "66 16 9574,38 52 8017,73 39 7563,116 34 840,", "13 47 8018,60 17 1765,49 30 4069,54 83 2283,", "80 7 491,104 19 2643,41 101 4770,99 58 8514,", "10 125 7202,13 21 7602,77 126 4312,131 37 8092,", "82 70 1256"};
    int K = 65;
    int L = 3607;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 789756;
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    int N = 179;
    vector<string> roads = {"132 165 5183,136 89 4951,98 59 7246,141 81 3128,", "127 139 8310,62 133 5413,143 7 7784,0 83 4733,", "50 115 1517,139 152 4731,30 75 431,71 92 9220,", "117 76 7639,130 81 1121,50 34 8745,53 2 1782,", "70 140 5478,113 14 2641,121 5 8447,41 29 6543,", "14 15 4001,107 138 9981,101 118 8674,156 102 6218,", "135 102 9955,161 2 5516,176 71 5723,143 58 4082,", "102 13 6981,149 81 7556,35 139 3718,14 32 138,", "130 28 5589,0 68 1923,49 147 125,65 26 8881,", "29 168 3070,39 136 2642,161 71 1624,143 81 941,", "145 122 7918,32 178 7963,141 129 6805,141 45 990,", "24 18 6221,32 21 5097,144 45 542,175 24 6682,", "52 168 4842,168 149 2906,95 115 1805,145 141 6254,", "53 74 8484,146 117 1875,65 77 6382,170 117 6044,", "33 119 8431,68 158 3779,60 96 9582,63 68 4029,", "35 106 2408,147 46 6533,66 31 4343,18 20 4692,", "27 17 9165,149 162 1267,58 172 5125,79 29 4882,", "1 101 4271,136 94 2080,165 129 9996,164 152 806,", "49 2 9877,41 35 4004,166 161 2305,131 53 6776,", "14 175 3303,138 132 7862,164 135 4738,71 174 32,", "44 78 564,167 41 9077,177 84 6919,168 174 2987,", "27 25 3784,102 105 1560,85 143 2930,90 66 7736,", "47 26 511,54 57 2637,97 0 7584,119 161 5074,", "33 116 1023,12 137 7903,118 63 3537,123 62 6225,", "106 94 9751,14 75 69,67 94 4956,158 93 2505,", "46 37 3317,170 15 2281,17 157 361,66 108 7716,", "49 22 8566,30 16 3761,116 32 332,128 91 1515,", "130 125 5688,80 66 263,154 110 9844,60 111 6677,", "29 99 4815,83 73 709,119 17 1904,44 155 4107,", "9 101 2020,170 19 4688,135 140 6460,46 9 2613,", "106 8 6160,137 32 8055,96 164 3018,129 26 2266,", "25 120 991,147 54 4262,130 163 9730,93 114 5694,", "39 62 9391,13 40 4618,141 80 2108,37 6 3531,", "51 120 8704,156 55 6241,57 159 9246,137 160 2443,", "111 169 2267,145 177 2360,54 86 9768,35 34 9898,", "45 43 1264,92 142 6047,58 110 209,9 121 479,", "152 88 5373,2 98 3181,54 87 5968,80 4 163,", "41 134 5706,132 171 7898,55 150 2522,57 112 5707,", "48 117 9959,15 78 743,115 36 3887,62 128 3835,", "43 64 2780,12 103 5524,161 11 7387,157 100 9799,", "125 42 5444,17 124 1944,80 82 5964,97 10 2466,", "175 56 5493,177 153 176,25 109 7535,59 72 8035,", "46 151 6800,161 173 7999,81 126 2212,53 61 2059,", "24 38 2583,90 148 9687,121 69 6457,152 23 3689,", "171 104 8559,6 3 3747"};
    int K = 95;
    int L = 9242;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1245110;
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    int N = 157;
    vector<string> roads = {"137 32 1662,28 70 186,29 101 9987,116 64 9170,", "46 34 2967,73 126 7896,104 39 4637,111 90 3138,", "79 81 8253,8 34 9865,102 79 9606,16 63 4908,", "139 106 4382,152 36 6381,36 47 2764,21 137 8958,", "10 77 9970,109 126 3603,93 130 8062,1 148 1949,", "57 3 2579,71 6 6051,133 2 1848,105 114 5019,", "117 106 1566,68 121 2427,145 88 7658,61 154 6304,", "9 45 2539,89 139 5899,80 148 423,30 106 7342,", "131 69 1005,133 100 7523,42 154 3248,32 70 3742,", "154 90 6576,116 60 7402,20 137 4575,129 133 6349,", "11 123 900,84 22 4091,127 65 2654,98 74 8501,", "119 138 9325,85 112 4195,106 7 2648,72 26 593,", "25 134 9839,15 111 9222,151 41 3148,70 1 4718,", "59 96 2738,15 37 6168,117 34 7129,132 36 9031,", "95 147 986,129 96 2427,149 56 7124,85 8 1928,", "21 133 8786,116 49 6026,76 143 6177,149 125 3039,", "115 119 2422,18 20 6908,123 44 6173,88 85 4496,", "127 138 3459,80 115 6497,48 8 8448,135 51 2006,", "90 76 7535,86 88 9094,20 151 7860,76 94 6499,", "105 29 1344,14 103 8521,78 74 5906,1 62 3893,", "58 78 1737,90 65 6252,41 108 8017,127 22 3111,", "28 71 4513,71 118 5490,62 47 1565,40 82 8972,", "9 48 3463,41 11 3339,24 8 7735,47 60 7280,", "133 66 163,71 122 6415,133 106 5083,65 98 9943,", "86 13 9420,13 27 9020,10 32 538,101 4 4347,", "92 148 5688,85 91 3593,21 35 9577,69 39 5264,", "112 150 2795,82 22 7990,114 26 2691,122 26 9143,", "5 112 8561,41 23 8645,143 149 3136,37 156 1926,", "52 21 4608,22 51 2962,1 79 8280,92 141 4712,", "33 38 3467,143 124 8351,73 52 6872,139 130 9962,", "72 16 4406,78 95 4315,132 128 611,68 34 6377,", "14 130 8547,85 113 3970,27 50 1803,7 140 7222,", "14 134 2187,36 17 5897,70 3 1015,150 87 9088,", "111 104 1916,100 97 2254,19 36 6758,63 83 7857,", "139 33 7616,154 142 6993,102 67 7443,28 107 8841,", "95 0 9691,48 146 5072,43 111 7514,155 8 5301,", "20 136 7363,105 55 2149,55 75 769,15 53 7802,", "89 110 4569,46 54 1108,108 12 6929,30 144 8117,", "70 153 9329,140 120 5887,150 99 8677,29 31 7424"};
    int K = 57;
    int L = 3211;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 988229;
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    int N = 122;
    vector<string> roads = {"3 66 1915,88 57 955,110 75 2318,81 98 4965,", "49 69 7712,72 74 1561,33 52 6994,4 68 7475,", "91 45 7210,51 82 8339,21 47 7301,50 115 692,", "71 64 4303,21 66 9012,6 107 5685,23 21 3618,", "79 95 7685,22 77 2806,57 27 2118,67 30 8915,", "43 51 4219,2 120 3325,55 39 3779,45 47 1894,", "7 35 7085,58 79 8221,86 27 6548,11 14 7002,", "86 47 3365,109 24 147,107 81 2298,98 31 3222,", "76 77 9646,28 88 4918,90 45 5974,58 74 7092,", "109 82 9433,86 63 4519,5 23 103,11 63 5073,", "81 115 7063,79 23 1402,106 36 4184,115 5 6203,", "93 53 9682,24 95 4677,12 91 1905,115 26 3848,", "80 70 3006,20 60 506,67 113 3390,22 121 3138,", "16 88 2408,42 60 9368,76 16 7564,94 54 9056,", "57 102 6184,41 64 1839,51 85 2954,45 48 8799,", "45 108 8880,26 117 9224,99 35 6126,101 91 6192,", "99 116 9775,16 0 875,118 50 8209,28 33 7506,", "104 36 9735,88 9 5807,0 97 1776,62 50 9381,", "3 71 1701,44 5 1984,53 28 2625,0 42 7205,", "66 119 6212,50 113 1284,114 81 9760,18 5 4540,", "25 8 9927,49 68 3447,92 18 1685,85 104 407,", "3 65 8412,53 55 8482,69 3 9727,47 29 8898,", "36 10 6767,98 83 3282,27 110 741,14 13 3795,", "100 103 2689,52 34 5883,117 120 4351,30 80 7709,", "65 73 1118,81 35 6322,46 44 458,14 32 234,", "57 1 5235,91 25 9163,50 111 9346,60 89 9463,", "0 112 1252,27 37 504,51 40 3702,101 105 3393,", "84 111 6523,87 44 2696,15 18 4415,67 78 7977,", "114 56 9492,115 61 5547,65 54 8586,108 19 3596,", "95 17 6045,105 103 5279,7 38 9723,76 96 3025,", "70 59 1640"};
    int K = 22;
    int L = 695;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 677786;
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    int N = 129;
    vector<string> roads = {"85 28 9747,75 97 7559,62 29 7521,0 115 4965,", "43 72 56,120 82 4420,110 77 5694,118 71 7273,", "108 118 2378,40 123 4163,88 60 9454,118 35 8975,", "17 77 4533,35 101 5589,75 90 3342,82 83 184,", "51 92 4106,72 33 8433,1 123 1487,57 95 4728,", "3 63 6679,117 123 5397,49 82 1478,91 54 6101,", "34 73 5145,98 9 7214,92 72 3662,20 106 6779,", "30 16 6493,74 4 2818,60 30 7623,127 84 1027,", "92 18 4175,53 33 4828,79 77 7676,52 44 5470,", "48 72 3719,27 23 538,102 125 3720,115 77 9586,", "52 48 6676,64 52 4302,32 40 1025,100 117 7549,", "68 94 2107,63 62 9369,50 41 4595,58 17 3510,", "112 69 7681,23 70 5206,50 57 5647,103 116 9350,", "94 65 2472,48 0 7912,31 64 2221,65 75 5641,", "91 4 1491,90 93 3318,44 108 5369,120 30 2687,", "100 11 1623,38 72 5059,41 100 3945,115 98 5430,", "110 14 6575,6 128 8898,8 2 3864,49 64 8727,", "46 16 1888,111 78 7858,77 111 4401,110 28 6833,", "49 27 4467,45 116 7218,9 13 7479,128 85 5788,", "22 90 5860,125 25 8320,20 52 744,93 59 2573,", "73 38 5961,35 100 4978,22 77 2333,46 122 9654,", "31 5 3829,51 119 2826,29 33 6038,77 15 5936,", "1 25 4947,67 18 2337,78 86 1931,54 101 5084,", "17 81 7384,61 85 6573,23 96 9086,72 47 1654,", "124 86 796,44 36 2576,87 107 7039,93 56 2565,", "36 104 2634,88 76 9881,60 126 5966,60 112 4506,", "45 113 5588,62 26 7713,64 87 1616,35 2 7535,", "118 55 4290,128 113 2299,15 19 1927,27 127 9284,", "35 105 4176,107 114 3104,102 12 2960,74 37 4171,", "69 7 9459,119 39 5698,27 80 4148,112 89 1552,", "19 42 3927,29 121 7416,47 109 7706,54 99 5958,", "103 66 7391,125 10 295,8 24 2058,28 21 7440"};
    int K = 78;
    int L = 9552;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 900444;
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    int N = 128;
    vector<string> roads = {"91 8 3703,59 69 1398,100 53 2476,43 113 5094,", "14 96 8260,112 126 2648,100 62 3216,73 118 6291,", "24 76 5830,69 108 671,108 66 8903,108 35 7454,", "33 77 1670,67 23 2696,24 48 245,15 82 2118,", "99 3 9116,78 24 8275,5 3 9658,91 93 1960,", "53 7 1947,33 65 4077,106 26 6039,110 76 2375,", "117 94 5790,102 72 8757,69 113 290,71 81 1287,", "96 10 3390,30 68 4534,103 99 3359,16 106 9214,", "56 25 7445,60 105 4297,104 49 2387,102 26 9356,", "89 113 9579,116 83 6144,116 98 5591,78 54 3555,", "62 60 2451,46 5 3079,115 93 1923,25 54 79,", "96 27 6475,108 28 1261,9 92 4978,70 67 2022,", "7 29 1986,11 41 730,76 1 1080,54 98 2005,", "119 11 1311,42 72 2677,108 87 5073,13 22 2987,", "61 105 423,36 85 4546,35 32 3916,8 58 7556,", "12 81 166,64 58 633,77 60 3194,125 74 2076,", "50 65 4247,32 48 5051,66 79 8752,21 118 6608,", "41 67 3671,3 40 356,34 93 8013,78 45 6293,", "12 10 2595,6 89 1310,61 122 7323,4 112 8617,", "122 89 3240,67 46 2792,90 34 5718,94 6 3398,", "32 97 8322,77 80 1127,51 47 7777,101 57 5271,", "77 101 4449,31 80 1189,118 72 4727,73 110 1306,", "57 67 160,97 96 995,26 4 7679,116 22 4863,", "120 118 6864,28 18 8129,5 63 2430,118 2 8823,", "81 36 5271,102 90 9810,58 124 6746,44 49 1966,", "123 20 3885,125 68 8239,109 95 2571,97 51 9097,", "87 30 8795,122 107 8513,83 17 1158,105 75 9615,", "24 44 5625,84 21 4585,59 39 9732,64 123 8207,", "84 37 5314,81 111 9491,72 38 6109,69 9 9459,", "88 49 646,46 109 1285,91 82 5677,37 127 6750,", "109 52 7711,92 114 1835,86 90 4334,82 19 6252,", "24 55 8186,80 121 6416,114 0 4898"};
    int K = 33;
    int L = 645;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 619512;
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    int N = 141;
    vector<string> roads = {"104 120 4958,6 126 7373,27 54 9414,4 53 4238,", "116 60 6089,34 93 6313,14 41 1039,125 14 8104,", "106 34 6348,97 36 5126,19 22 2345,91 130 4343,", "95 122 7430,30 14 9724,129 81 3700,75 101 2351,", "85 89 9237,87 114 9558,105 18 5676,44 102 7385,", "93 14 2043,38 58 6603,41 9 6079,70 25 7334,", "121 73 5748,45 98 6747,34 51 9950,60 74 710,", "122 31 4107,13 113 4423,19 106 3294,39 31 1664,", "18 37 8186,89 51 8258,121 2 7939,123 72 2714,", "80 103 9537,40 103 1484,92 63 12,47 60 4649,", "58 6 2969,76 108 1808,105 85 1538,37 61 6282,", "83 28 9408,113 34 1753,114 48 4246,61 122 6277,", "107 4 2968,139 132 6084,16 71 7715,86 40 1308,", "96 38 3569,38 64 2239,108 138 5298,81 24 2816,", "15 24 4244,108 102 8784,79 83 4690,106 123 9776,", "95 58 4129,117 123 6184,22 70 8599,34 133 7329,", "20 68 7812,72 53 9889,129 96 8964,123 115 5767,", "52 85 5459,131 123 4566,33 7 8690,90 122 7234,", "0 50 6157,92 15 7213,1 69 9777,137 55 6597,", "24 74 2823,54 8 5283,107 132 3565,45 112 6534,", "50 90 7388,30 49 2408,29 96 7873,78 117 4486,", "10 15 3732,40 13 6606,126 94 6086,58 135 9702,", "87 64 2554,69 75 49,4 102 158,116 136 9064,", "138 26 7778,120 56 5942,100 123 58,110 131 4656,", "83 11 8591,125 127 5973,112 32 2904,45 25 7083,", "13 68 6184,42 88 9158,77 53 2936,0 128 1131,", "59 137 4596,118 87 9381,129 42 4287,29 120 5878,", "2 10 4507,46 61 4341,62 23 2934,123 62 8472,", "96 16 831,98 55 167,69 96 4688,112 84 9211,", "135 54 3425,59 91 6516,70 43 3880,27 66 270,", "12 138 75,112 140 31,82 41 7431,132 57 8038,", "27 97 7145,125 79 2297,35 26 8422,98 134 1771,", "112 124 202,29 119 4087,12 7 5887,21 79 4728,", "69 99 1325,10 109 3976,79 17 253,39 3 5425,", "126 111 5157,82 67 2025,46 65 620,74 5 2937"};
    int K = 15;
    int L = 7175;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 949009;
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    int N = 166;
    vector<string> roads = {"7 54 8645,53 113 4923,10 102 1722,8 131 5036,", "6 89 6384,55 14 3331,154 38 9811,32 78 1243,", "27 42 6182,102 51 2600,22 132 5780,19 101 7375,", "94 32 9937,149 96 7391,68 85 9935,47 136 4365,", "77 54 2075,127 155 7687,114 94 2073,150 96 9492,", "165 52 4166,20 96 6137,88 49 3892,92 81 4006,", "113 149 1930,118 19 9262,73 119 3659,156 84 7386,", "98 81 2929,12 150 7968,51 72 4443,35 87 9166,", "144 87 6771,99 88 5866,124 31 9371,110 59 6718,", "47 63 5764,155 100 5254,5 160 6062,19 84 2486,", "64 108 4870,5 161 609,103 30 7903,153 84 6296,", "155 128 1127,46 70 8766,115 154 5512,11 25 6670,", "41 61 3571,157 84 1343,39 98 673,88 7 9658,", "135 121 4502,128 0 2403,41 122 5391,88 41 1973,", "61 15 5946,84 81 5576,134 104 3690,20 18 9236,", "165 24 3474,118 75 4114,36 58 1529,143 8 5825,", "58 52 3321,148 5 9950,8 43 1060,106 158 4305,", "89 74 8522,48 120 6772,42 37 5167,16 132 1494,", "24 17 9034,51 9 6609,100 99 9125,108 7 2676,", "96 69 4070,18 116 7025,129 144 8846,115 15 348,", "110 64 6548,155 164 1566,10 115 9982,127 80 6088,", "18 50 773,53 70 7423,29 66 5770,32 52 7287,", "14 142 136,5 3 2578,88 53 5252,6 143 3632,", "109 132 7182,22 81 327,106 47 8659,149 148 2477,", "51 109 4223,43 105 9527,144 67 6519,151 108 6144,", "88 159 5865,43 113 9398,48 152 6171,108 152 593,", "145 53 1302,108 135 2826,127 130 2441,147 84 3348,", "41 68 1706,149 125 4440,156 14 4816,29 30 6965,", "108 114 6505,97 118 1918,25 66 9576,7 42 5144,", "153 2 614,89 111 5945,17 82 2471,126 117 9379,", "127 158 903,71 116 8124,94 129 8535,98 163 6310,", "105 56 9847,160 33 4171,100 117 2734,20 23 7581,", "67 91 6898,87 146 375,116 34 1777,58 62 3423,", "41 162 3280,59 29 8704,133 120 6744,34 124 9923,", "43 138 4381,13 132 7271,149 1 4813,48 90 919,", "51 140 4398,60 140 5395,51 44 9450,76 6 1612,", "48 134 1159,76 95 1291,136 4 840,85 86 2690,", "82 40 3271,86 21 7493,11 65 9137,59 119 2179,", "142 57 8046,161 45 2027,6 26 8717,64 137 8962,", "7 112 9909,0 79 3057,119 139 6777,36 123 9611,", "57 83 582,16 93 2445,31 141 6596,77 28 6824,", "81 107 3300"};
    int K = 62;
    int L = 7584;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1154571;
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    int N = 169;
    vector<string> roads = {"20 5 4495,72 19 8043,110 135 3495,111 168 9933,", "50 72 7169,33 84 9523,115 83 272,89 20 5879,", "141 124 9679,61 5 8143,113 10 6315,119 162 7987,", "13 114 549,152 68 889,56 117 2790,30 96 9511,", "4 105 1182,146 115 5556,82 56 9140,114 75 9785,", "140 24 7102,87 116 281,119 40 9765,82 75 7847,", "23 96 9349,84 154 9232,97 21 2189,104 74 9002,", "147 20 1265,164 158 7824,80 108 7101,147 151 4405,", "9 14 1069,9 45 1109,8 108 641,140 84 4556,", "154 93 3702,113 93 2874,158 61 8110,23 132 7082,", "159 28 2981,28 154 7609,135 109 7377,70 11 7535,", "148 85 4422,5 128 7507,71 55 2527,50 6 5281,", "27 108 2741,155 115 4605,128 17 6070,78 18 5385,", "162 76 5133,34 142 611,147 115 641,40 141 4480,", "125 95 4099,147 161 2761,37 128 5924,153 35 2023,", "23 111 4238,74 0 9782,153 137 1220,155 74 9955,", "82 18 292,9 68 5929,36 104 3701,41 8 1219,", "120 46 4896,40 165 4811,13 133 2289,78 73 8681,", "44 125 4675,98 31 6921,62 24 1349,125 113 922,", "35 121 4605,98 138 174,65 142 8987,36 139 5126,", "31 44 5184,3 95 4588,65 150 5944,143 44 3450,", "143 46 45,55 11 2807,12 101 5562,154 22 1906,", "32 162 7656,167 49 5076,152 79 6891,160 166 8484,", "149 112 9966,63 106 4194,100 52 4448,59 44 5480,", "131 56 8880,116 97 9311,86 126 3815,149 73 2455,", "9 105 4133,49 71 5960,103 72 7863,132 121 5883,", "81 157 1806,159 161 287,114 67 2318,7 12 4948,", "49 1 886,1 117 7254,36 90 6617,33 134 5005,", "5 165 5304,9 158 397,28 96 2860,168 122 483,", "123 109 55,22 156 8765,78 134 3040,10 39 969,", "61 69 13,95 47 3704,124 72 1370,109 114 8113,", "50 97 6483,164 85 3446,13 145 6342,159 86 3877,", "137 64 8400,137 38 4518,107 120 3126,67 144 3261,", "49 118 6195,154 52 4808,2 31 2260,163 147 8834,", "49 92 9824,77 35 7355,151 127 538,131 57 1640,", "157 100 7414,69 99 4841,77 102 2040,123 160 5582,", "48 102 2267,101 35 90,145 130 9224,55 16 1935,", "135 108 8282,33 136 9057,73 91 6799,89 54 5333,", "10 94 3773,105 106 8609,148 29 738,131 51 2815,", "117 65 2787,154 66 9339,98 58 6655,34 15 1878,", "27 129 3716,83 88 3418,131 53 9221,112 60 9678,", "65 25 984,122 43 2994,128 42 4855,103 26 6299"};
    int K = 11;
    int L = 959;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1119033;
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    int N = 154;
    vector<string> roads = {"51 31 8106,153 110 1272,102 94 4445,2 120 9968,", "4 24 9223,120 48 6177,89 67 9544,138 25 7026,", "150 68 3318,82 104 3546,47 150 6168,144 15 442,", "84 47 6541,138 86 3393,125 118 3960,44 99 7107,", "101 21 6193,95 89 3938,86 57 4718,30 15 8338,", "86 129 6486,17 64 2133,134 90 7300,108 61 3002,", "146 61 5077,139 21 5997,71 107 3139,99 66 4930,", "3 105 2661,124 52 9462,130 95 5616,147 67 3740,", "8 130 8352,144 88 6621,102 66 3852,3 131 3071,", "30 12 1403,43 19 7535,78 11 8906,105 85 9542,", "82 137 5404,138 24 5239,80 46 2084,55 87 2034,", "89 104 9362,105 118 9983,137 80 8905,126 113 5563,", "104 129 1546,117 79 8634,101 122 5579,35 55 3542,", "63 55 3734,31 28 6498,77 150 6245,23 111 7177,", "57 109 1010,18 19 2646,28 146 3391,7 117 7942,", "125 136 5903,125 92 6012,72 22 1165,7 76 2772,", "59 145 9383,27 35 3376,95 53 7737,67 42 8215,", "49 27 3654,46 60 1003,56 78 9018,150 62 280,", "38 42 2066,21 138 7825,38 87 6971,23 87 1845,", "51 18 6858,138 146 4058,60 81 9934,88 18 1103,", "111 20 4323,11 45 4500,144 48 6467,118 69 5383,", "135 45 6031,142 59 8992,127 39 3579,27 34 5913,", "1 127 7396,141 89 4440,23 131 6067,36 1 5898,", "106 82 9862,137 77 2257,146 83 2830,100 17 4593,", "131 102 4263,48 70 572,53 13 114,19 116 7450,", "107 44 1540,22 18 4551,83 126 9250,151 90 943,", "125 65 7717,92 79 3083,121 59 5097,125 153 449,", "144 127 9982,68 124 5426,45 26 4648,145 55 5230,", "127 135 9419,21 41 7004,29 107 7261,3 16 3957,", "40 53 7104,0 136 9580,4 151 3773,95 152 8365,", "70 33 4344,63 103 3915,135 74 7843,44 73 8513,", "63 143 4686,117 115 2035,145 140 402,10 137 6988,", "55 133 2807,97 106 1048,31 58 4621,43 100 152,", "77 128 8092,32 108 452,56 93 3733,128 50 1684,", "31 6 5025,121 96 2505,48 9 7857,3 123 6546,", "137 119 3703,36 5 3946,146 91 9452,59 98 2432,", "27 54 6665,110 37 4895,103 112 7152,109 14 4689,", "17 114 2083,86 132 7761,12 75 81,9 148 1361,", "82 149 9255"};
    int K = 43;
    int L = 917;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 829006;
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    int N = 114;
    vector<string> roads = {"102 93 8713,86 30 9134,88 30 2406,21 19 5094,", "25 45 1980,109 15 8568,107 42 5692,62 113 2348,", "73 64 3877,51 15 8040,55 90 5843,32 107 618,", "34 75 7258,43 20 8554,21 71 4672,47 89 970,", "19 61 773,98 76 6343,78 23 3464,63 97 237,", "13 9 610,55 94 3848,92 50 3902,89 35 8111,", "67 55 8979,68 102 7188,20 72 3434,64 99 1017,", "85 80 2666,20 24 3409,18 72 698,60 36 5953,", "72 90 2303,49 66 2034,27 104 6627,70 65 4085,", "70 81 4093,47 92 8946,111 77 5528,27 82 4791,", "110 0 9946,15 71 7049,83 80 6709,10 21 9301,", "41 24 589,102 41 2234,29 69 4540,31 13 7431,", "5 35 1632,23 3 772,89 74 4318,14 107 4876,", "43 40 4758,64 62 1685,112 45 4935,1 80 1974,", "51 20 2731,46 34 9326,88 103 8194,6 35 4382,", "2 99 7053,89 30 3926,44 85 9125,65 97 3958,", "94 78 3495,98 108 7791,84 101 4327,57 56 1238,", "111 100 2503,31 16 3146,8 110 7769,3 34 1444,", "100 53 6385,85 3 8823,38 93 9477,83 100 3616,", "12 111 3205,108 22 4464,83 59 2064,32 91 3370,", "28 98 6991,12 66 932,94 16 8540,22 37 8490,", "93 76 5836,21 87 4806,84 112 6238,111 62 5071,", "90 70 6990,26 71 6075,86 2 3922,98 39 4914,", "17 51 5382,106 3 6038,55 110 6594,87 27 7421,", "94 69 8710,57 80 5971,28 33 3501,101 110 7423,", "72 96 4710,30 95 6206,3 48 2736,79 22 8661,", "46 36 6172,62 4 8302,84 105 1397,83 11 1785,", "71 42 2439,40 7 8049,0 54 7061,43 58 9096,", "95 52 2759"};
    int K = 73;
    int L = 4054;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 691177;
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    int N = 195;
    vector<string> roads = {"22 141 9517,30 166 9765,13 93 4247,133 74 1958,", "175 190 1377,140 193 5332,3 169 2396,9 121 3757,", "24 173 8097,140 111 764,6 11 3996,6 114 1389,", "188 60 7701,141 151 664,81 65 2337,114 135 2355,", "73 115 4785,148 128 2499,68 185 2128,47 113 9967,", "72 148 4998,11 147 4376,193 178 6997,66 29 6340,", "98 48 8428,70 0 8316,104 188 8197,32 44 2878,", "188 35 1947,156 44 8323,75 94 3041,8 126 2286,", "192 16 1514,183 27 6022,132 92 48,178 63 9072,", "76 58 6224,133 117 1462,75 41 3590,59 153 5481,", "114 36 4685,9 52 9851,53 160 2351,131 15 9791,", "189 177 3817,93 87 7026,42 96 1781,8 38 6171,", "59 40 635,12 180 8203,5 80 8201,141 56 8888,", "101 10 65,134 7 8101,113 30 6196,127 147 2083,", "64 166 9440,100 186 8642,25 67 2632,146 98 4200,", "23 29 7760,57 80 461,182 21 9938,139 34 1936,", "90 60 258,67 55 5783,120 64 1760,19 69 6401,", "49 66 1017,21 64 3382,8 101 5754,169 65 1017,", "107 63 6926,170 71 8036,88 50 3969,155 117 2463,", "191 39 9047,5 179 2937,151 50 9864,60 79 3216,", "173 155 9809,155 67 4155,89 176 9975,31 161 1939,", "181 122 3777,137 9 1278,53 95 9742,18 15 885,", "32 188 3945,181 96 3238,127 73 2570,156 172 7855,", "74 53 5152,110 16 2626,142 154 6793,82 81 9911,", "13 34 7718,154 191 1702,21 61 5428,119 156 146,", "184 78 4240,127 105 2515,46 19 4383,116 118 3319,", "35 83 8836,127 77 6553,44 38 8926,40 89 8832,", "154 10 7491,55 137 4931,70 104 9127,52 140 6451,", "82 25 3978,121 123 2851,0 11 250,101 117 8371,", "179 170 5196,81 28 6902,62 80 7859,158 128 3658,", "79 136 6137,156 72 9504,52 177 6428,13 66 3708,", "93 189 3679,189 91 8966,65 50 1772,12 95 6883,", "8 40 1917,43 65 114,8 124 4850,23 71 6395,", "192 168 4271,128 30 2541,99 147 2825,47 94 2306,", "45 191 7901,92 73 1586,36 183 44,85 96 877,", "128 18 825,103 113 4073,190 109 8982,114 100 2416,", "59 152 3329,1 161 2956,64 134 5745,88 162 1928,", "79 143 3758,192 18 847,19 75 9556,62 51 2074,", "15 78 2314,84 112 512,168 146 348,119 171 9215,", "193 96 6305,188 33 3924,182 1 2307,117 129 5152,", "168 159 3599,176 37 1027,18 125 3649,137 17 1274,", "173 4 225,160 112 5380,35 174 4414,171 54 3288,", "12 58 1412,186 187 7759,105 116 1722,69 150 7370,", "101 194 1179,125 14 7606,194 175 6489,52 167 5812,", "138 102 2188,182 149 2254,160 144 7268,81 106 759,", "73 2 4496,173 86 946,108 131 1904,129 164 7457,", "103 145 808,135 102 6175,187 68 7858,141 157 7545,", "25 20 3993,122 97 8274,176 163 8436,140 130 8505,", "52 165 4226,78 26 7130"};
    int K = 56;
    int L = 9065;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1247894;
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    int N = 142;
    vector<string> roads = {"90 64 4417,35 45 2750,13 25 1669,2 81 8905,", "61 49 1960,11 35 2241,38 112 3161,48 86 1423,", "130 91 4253,118 19 9523,39 128 2857,53 34 5905,", "53 93 5147,30 31 5313,40 131 5239,111 48 1487,", "101 23 9902,8 128 2678,60 44 753,127 56 1376,", "120 57 6914,105 78 5989,39 11 1542,81 52 1593,", "2 125 4425,34 116 5659,139 128 3432,97 105 8895,", "30 107 8447,30 78 4317,85 84 6581,64 120 3933,", "121 133 5625,0 127 8580,42 57 2107,63 27 6109,", "81 0 4970,69 129 792,69 42 375,112 21 9919,", "40 12 218,136 85 8087,66 104 1197,138 76 447,", "66 129 351,74 29 9118,108 140 5146,60 43 182,", "94 85 2077,131 28 8923,28 122 4341,96 60 8809,", "136 109 4220,49 27 3750,65 129 7207,46 97 1618,", "63 109 8227,43 28 573,141 36 2449,9 130 5909,", "44 31 1189,139 21 3188,133 43 7572,98 125 4776,", "59 22 6567,6 18 7634,16 5 9892,98 65 1436,", "90 30 2109,8 122 8396,59 100 6500,130 115 2292,", "49 60 7176,51 26 2233,9 30 9011,1 8 8136,", "40 88 7294,141 74 8322,43 25 5613,73 131 8126,", "46 16 9801,66 80 5453,115 118 5824,15 60 7742,", "79 65 7620,97 59 1649,91 126 5353,116 83 4514,", "104 75 1049,106 22 1395,94 74 5313,29 93 5099,", "83 14 9606,3 33 4040,38 72 3209,42 123 8705,", "107 110 5962,134 90 6215,69 67 469,103 15 8931,", "51 17 1632,54 65 1872,53 86 4014,78 138 4091,", "19 47 5855,13 132 4274,51 16 6836,100 119 7048,", "72 18 7148,120 92 7151,79 99 8783,133 101 7409,", "29 62 1840,12 7 384,137 32 1789,17 89 4609,", "46 114 1306,54 135 4458,60 20 4046,81 41 7763,", "84 82 4266,39 3 59,114 71 6067,132 58 1343,", "79 87 2893,43 108 7730,52 37 3133,112 117 9474,", "39 68 6915,64 50 6556,24 94 9415,39 102 5368,", "89 4 6641,75 77 2394,110 32 3094,37 113 1368,", "19 10 862,140 95 7998,41 70 8390,1 55 2520,", "86 124 1356"};
    int K = 56;
    int L = 653;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 705635;
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    int N = 118;
    vector<string> roads = {"75 55 6386,92 14 9528,61 113 4098,57 77 4058,", "114 44 3920,27 98 1693,66 51 4792,55 84 1962,", "42 11 4202,4 67 5925,107 87 7074,79 116 2398,", "2 102 3345,24 83 9732,111 7 2549,85 24 8095,", "84 64 7342,41 52 4736,115 40 9045,101 10 1482,", "0 74 3434,78 87 3011,13 39 5254,48 104 8735,", "46 81 3452,0 107 6305,113 51 7714,70 94 1712,", "21 111 4271,70 72 7166,62 59 9649,88 37 2088,", "39 1 4838,32 64 9942,3 104 925,22 45 3149,", "81 34 7323,10 72 478,63 0 3414,79 66 7836,", "44 81 2022,69 38 4580,108 110 6789,112 41 3623,", "46 13 6159,34 110 12,63 76 4745,112 37 6460,", "14 65 7214,68 71 7809,12 6 8219,32 37 737,", "1 89 136,76 15 1051,103 115 2948,112 80 1444,", "32 53 3320,9 39 8511,13 74 5529,105 92 7619,", "114 49 7168,0 88 5099,11 55 4397,25 68 4353,", "12 97 854,43 102 5611,82 22 5032,64 72 3615,", "69 32 4555,116 39 2000,20 0 4792,98 81 3234,", "46 68 5520,4 42 4933,18 73 7921,28 27 496,", "80 6 5416,60 108 5079,11 19 3825,110 102 3680,", "62 49 8824,104 80 278,108 86 1688,44 73 4734,", "96 75 5474,85 33 9129,50 75 9124,77 100 4002,", "68 90 7042,97 33 2898,49 21 6229,68 29 8638,", "80 26 7373,71 30 1991,87 8 2125,78 95 9565,", "6 36 1010,42 92 1192,112 93 1207,63 45 8166,", "75 5 7794,56 26 3993,110 99 4546,40 22 9783,", "61 54 5782,92 91 7783,16 34 4164,66 17 3984,", "26 109 1829,54 100 6610,115 31 8950,12 58 1091,", "89 47 4897,36 106 2213,99 117 2413,92 35 2982,", "41 23 3703"};
    int K = 76;
    int L = 5255;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 715474;
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    int N = 137;
    vector<string> roads = {"97 57 3643,95 54 7593,3 47 2184,20 48 1060,", "90 89 4005,98 33 2003,44 131 4148,105 40 6054,", "27 134 2907,71 131 1536,85 102 7554,83 37 1769,", "45 132 6426,120 61 5259,15 35 9731,41 39 884,", "135 106 4589,57 46 9984,52 6 5090,79 67 7088,", "13 39 9973,13 108 1840,94 1 3566,76 40 1901,", "129 133 5157,78 71 9941,95 103 2813,10 136 235,", "48 36 6774,5 55 2202,11 32 2680,114 52 5593,", "67 41 2050,73 58 3506,88 130 7076,93 2 140,", "60 41 4193,62 117 3093,86 22 309,92 128 4688,", "13 57 9972,21 80 8853,110 30 4353,134 131 1530,", "106 35 3553,32 124 1285,62 53 5079,66 70 9946,", "20 71 3428,53 32 6408,0 62 1464,118 126 3465,", "55 103 7644,97 19 1459,41 23 5819,126 69 8340,", "99 94 375,114 85 7570,115 23 5758,25 116 4421,", "8 133 1085,5 82 2712,23 73 4021,121 120 9881,", "30 45 5773,70 40 7760,113 14 3150,125 25 6037,", "12 88 796,64 134 4559,106 71 6436,113 60 3682,", "72 11 6653,116 48 6860,17 47 1022,59 78 2749,", "85 64 850,116 58 304,87 71 1591,54 123 1585,", "41 51 7975,135 133 1746,21 6 2829,127 97 793,", "48 2 7117,4 103 4017,91 92 4193,47 53 2894,", "27 50 7511,104 33 1814,100 21 3139,20 82 2843,", "131 38 2553,111 117 2413,4 90 4808,86 44 4545,", "98 21 8121,37 94 4382,34 37 9106,20 124 3756,", "72 105 1,131 84 6672,66 99 1724,65 27 8372,", "81 109 562,125 68 8982,135 16 9244,108 88 4353,", "12 31 1852,21 91 933,17 120 8448,80 126 6169,", "39 26 8375,55 9 5058,116 77 5745,91 45 921,", "41 7 1582,84 24 8069,132 74 136,60 112 5400,", "36 109 3088,57 29 6698,102 63 4881,50 43 5193,", "100 101 7461,8 56 4240,122 36 1801,16 119 4119,", "72 10 6655,19 42 9453,3 96 6823,38 28 8693,", "0 107 8200,33 49 9072,67 18 3821,75 134 7512"};
    int K = 52;
    int L = 6160;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 824462;
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    int N = 123;
    vector<string> roads = {"96 86 1263,68 83 4125,69 71 740,106 71 4021,", "61 21 4155,12 115 383,19 56 9339,56 44 4734,", "85 118 4746,95 60 9070,62 94 6588,92 91 2652,", "39 55 3693,78 95 8280,76 80 7484,120 29 7383,", "91 9 3023,94 2 3841,49 48 1473,62 14 4129,", "101 61 5929,114 24 4290,22 55 6696,55 118 9024,", "117 19 4693,44 120 514,42 41 7638,101 106 4226,", "101 41 9852,28 50 5723,88 9 2579,122 5 4184,", "85 72 3507,25 104 3489,4 29 2143,101 50 4066,", "82 114 5449,46 7 6698,51 7 793,77 71 1229,", "62 58 2847,45 36 6874,112 38 528,114 0 3820,", "80 4 8455,1 42 6341,18 80 2675,4 79 7498,", "8 57 9164,101 113 4507,118 83 3212,41 91 7367,", "53 28 8610,41 27 2294,50 112 3293,108 35 5309,", "44 2 5518,122 75 2605,42 117 5258,110 86 6933,", "117 51 6206,86 88 946,31 42 5015,100 39 3740,", "25 10 3458,75 86 5293,114 36 9553,27 100 8669,", "32 59 4654,76 87 5382,94 105 2543,58 45 561,", "92 60 9236,24 52 6859,90 44 1753,44 116 7788,", "10 16 578,38 16 5097,57 83 3844,55 84 1373,", "22 103 7639,35 41 5241,16 121 2034,105 43 6125,", "84 98 3981,35 12 915,35 89 5492,66 61 3270,", "37 64 8925,118 37 9017,90 26 4017,89 63 2542,", "62 34 7422,60 23 9938,99 8 4198,49 18 6316,", "65 52 4279,36 40 4995,45 20 3400,82 33 6649,", "94 54 4,75 81 7174,50 109 8454,115 3 2705,", "104 102 3861,11 118 1781,27 73 3997,85 13 361,", "50 6 4843,105 67 9683,33 59 6707,58 107 8219,", "88 119 4337,0 93 2595,21 30 5050,10 97 2251,", "36 111 7010,111 47 6540,53 15 8502,118 17 3544,", "111 70 9688,57 74 1422"};
    int K = 92;
    int L = 157;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 600589;
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    int N = 187;
    vector<string> roads = {"148 154 8926,182 104 7030,175 164 7110,98 43 882,", "34 110 8268,143 177 5511,28 111 8255,15 181 9916,", "154 99 5038,58 81 5332,28 4 4644,163 139 2691,", "28 115 5246,24 36 3019,170 102 4507,139 38 6114,", "174 43 391,165 147 8200,11 71 5374,70 172 8009,", "110 15 2013,12 182 6736,120 12 5214,78 84 6527,", "34 93 7460,148 48 4641,74 123 9570,4 146 4043,", "169 146 4166,81 105 3468,9 14 2051,95 144 9523,", "138 76 7095,117 49 884,120 127 7989,13 153 3233,", "99 114 2163,76 178 4302,33 162 4979,97 165 5752,", "61 150 3030,146 22 685,155 148 9643,176 108 7254,", "103 168 8750,84 127 5764,133 15 6638,64 23 1814,", "46 106 3571,20 60 4512,39 0 7820,145 29 1551,", "116 127 3696,0 69 381,54 162 2892,39 42 1379,", "176 131 9198,4 118 2748,44 173 6203,62 163 4027,", "32 180 8627,79 123 1489,52 121 2958,10 105 750,", "149 133 104,78 43 5741,41 76 5568,150 66 4322,", "20 42 3858,105 177 1393,174 171 982,29 55 2750,", "42 158 5821,55 139 3127,40 63 3714,169 70 5123,", "78 139 2470,159 66 1747,160 22 3079,11 19 6198,", "160 5 4052,107 145 1462,61 92 4057,96 136 4464,", "85 54 8508,22 35 1849,76 128 978,157 91 915,", "162 164 9117,181 90 1927,55 82 8929,46 162 4604,", "114 43 6649,163 39 1859,132 6 1665,111 15 5259,", "91 50 9873,32 7 9496,56 49 5396,25 180 2645,", "85 53 5846,151 21 6143,132 40 4409,45 80 3974,", "18 126 910,174 111 4791,3 131 7845,48 106 1958,", "34 135 8624,175 81 4050,156 182 521,28 108 2563,", "107 45 5731,163 144 6776,162 87 3533,168 28 8043,", "104 16 7305,112 70 212,68 15 5604,67 0 8060,", "76 175 3531,140 51 4640,176 173 6853,33 89 8090,", "86 163 9534,3 167 5436,67 159 4843,108 32 4011,", "48 19 4316,160 102 7087,55 117 7890,1 152 450,", "83 65 8035,156 30 7545,72 102 2289,83 178 1014,", "5 94 1517,22 21 5465,123 28 8809,112 37 6933,", "61 161 3047,160 130 2234,103 166 356,37 140 1664,", "124 164 7018,104 17 9413,13 63 342,101 22 4969,", "59 131 4361,100 10 9743,151 64 5623,90 75 6806,", "94 141 990,145 125 8254,166 126 4618,108 77 3732,", "103 119 8414,124 186 3127,26 78 3762,114 9 7457,", "76 6 9068,90 50 4958,35 97 9355,55 57 3145,", "165 129 6781,53 1 9396,120 36 5836,143 88 5235,", "67 96 6296,58 52 2701,50 31 2617,122 69 8260,", "3 142 583,175 134 2632,37 184 5984,58 109 498,", "111 47 5729,11 113 515,110 179 7384,113 183 5623,", "123 137 8382,48 185 4497,100 73 7188,15 8 2484,", "129 2 3181,183 27 854"};
    int K = 37;
    int L = 6890;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1221840;
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    int N = 121;
    vector<string> roads = {"105 2 7772,100 34 9444,26 120 6948,119 17 6836,", "82 81 1492,89 26 1248,16 96 3879,104 90 2560,", "96 75 4960,95 119 5446,17 21 4536,99 95 2995,", "11 9 8155,93 105 2954,102 75 1575,100 55 8744,", "93 54 5884,24 90 8204,24 7 8100,52 40 4178,", "3 113 1436,15 26 3770,31 77 5044,95 66 5860,", "78 80 2026,70 6 5225,5 8 1983,50 113 6814,", "69 43 2722,109 110 6360,107 88 5419,49 114 6149,", "9 91 8226,102 8 9063,116 62 7676,97 117 2670,", "0 113 752,3 93 2195,74 101 1573,47 11 6612,", "1 41 3772,80 7 3770,47 56 4082,115 46 8234,", "79 87 8620,89 79 568,102 25 3716,110 78 7346,", "120 78 6140,50 43 9263,86 33 3908,52 78 4753,", "29 64 3259,17 92 9077,110 29 2598,102 23 9637,", "95 51 7579,7 96 6961,17 68 5926,53 62 6980,", "22 71 6284,56 3 1523,11 117 3613,96 71 784,", "27 77 2715,42 38 7407,53 8 663,118 75 1811,", "9 31 3253,28 5 12,59 113 3134,4 77 8256,", "25 63 6005,67 92 8219,76 85 5186,64 105 8159,", "16 100 8330,103 75 5924,38 101 1085,104 30 5672,", "67 27 3029,5 83 8841,85 78 9995,117 35 4755,", "59 94 5553,70 7 3691,48 89 7096,13 77 1270,", "98 52 5064,95 1 7066,0 88 9346,11 82 926,", "119 108 9372,4 46 7235,76 10 5646,60 71 9048,", "110 39 3120,1 61 519,33 84 4019,105 106 3990,", "78 72 5060,13 58 1529,58 65 279,63 42 482,", "26 20 6638,78 114 1898,7 37 9654,102 84 3519,", "64 57 6087,31 18 5407,25 111 8910,110 32 342,", "40 12 4451,18 36 3064,65 112 9143,32 45 9254,", "28 44 4125,1 73 6263,88 14 7644,56 19 7725"};
    int K = 28;
    int L = 4685;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 771918;
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    int N = 139;
    vector<string> roads = {"41 99 9363,125 81 1357,69 91 6025,120 29 3109,", "107 46 7962,100 114 9211,118 108 7404,42 60 7897,", "52 121 2953,105 36 9689,123 6 9386,24 38 6001,", "16 55 6653,121 79 4578,24 37 4991,133 58 1119,", "51 134 8975,138 73 1899,109 41 9659,109 46 230,", "88 98 8246,124 18 6738,50 62 8712,9 120 4320,", "48 88 9418,95 34 5266,17 80 3133,37 49 1599,", "5 116 6566,28 111 4655,61 125 9273,47 106 6301,", "133 10 6969,69 30 509,73 93 46,67 45 7593,", "123 33 780,70 35 8290,80 32 8390,36 88 1530,", "14 125 388,19 109 3724,89 91 8815,98 94 6100,", "92 30 675,90 130 6194,20 137 8732,41 50 4929,", "77 52 6076,20 0 281,6 14 1408,59 114 5592,", "93 137 5930,81 19 7129,122 9 4758,47 57 7802,", "99 122 7171,124 94 4558,46 43 2433,87 65 9868,", "135 0 1915,37 98 1196,126 20 1561,3 98 6623,", "36 75 6948,76 95 2466,132 89 6123,89 100 1230,", "94 52 1957,1 130 6529,38 81 9576,82 105 3110,", "3 44 1956,102 36 996,62 115 2233,60 4 3467,", "4 129 2971,36 22 2339,3 128 5017,10 103 7843,", "68 126 7579,75 1 3728,97 110 4803,48 11 2519,", "75 76 5475,42 29 4243,9 20 6232,118 26 7112,", "1 100 5868,71 31 8578,7 117 6240,75 40 8208,", "50 8 6549,5 115 5636,103 129 3152,7 56 2756,", "77 64 4847,25 73 4665,56 34 6152,138 119 9904,", "64 127 6440,131 128 1856,67 115 1224,70 40 3472,", "46 26 3940,47 94 3981,38 104 2285,108 2 3862,", "69 66 7673,110 49 4295,39 105 7679,8 16 6081,", "58 23 2304,131 53 7744,132 65 5391,78 64 6442,", "105 28 670,97 101 8692,131 83 5849,95 112 9797,", "14 27 6969,105 136 348,37 80 4482,118 72 9587,", "26 134 4142,53 86 139,56 15 7311,85 37 6693,", "49 21 1631,38 31 8204,103 113 4712,123 84 5823,", "99 54 9407,61 63 6899,37 74 7372,81 12 7059,", "10 96 8807,56 13 8577"};
    int K = 0;
    int L = 7604;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1454998;
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    int N = 152;
    vector<string> roads = {"123 110 8539,148 38 7909,5 30 7142,148 1 1730,", "101 72 7435,66 85 3933,136 97 4336,48 31 5746,", "73 22 664,94 47 4865,15 68 1353,107 29 6848,", "139 130 7226,95 19 4017,116 50 7624,4 97 7418,", "118 110 3557,44 85 6190,30 22 4381,94 0 8357,", "8 116 2808,29 106 533,0 8 4917,127 25 5588,", "9 62 5816,42 130 9419,146 5 3850,108 21 9678,", "122 104 8478,15 23 7873,59 23 8325,73 16 7898,", "25 125 6428,87 70 7147,67 1 9501,142 94 4600,", "36 29 8971,145 130 7517,53 120 8832,100 92 5164,", "129 68 170,128 17 5972,4 65 6123,117 133 1756,", "11 90 8039,96 121 1396,105 125 3842,46 27 7122,", "44 39 9568,118 132 45,102 136 3802,127 37 1743,", "53 39 4069,93 9 8644,66 93 2902,114 147 6037,", "43 46 8894,97 32 8002,137 119 3103,0 96 5158,", "122 132 6405,129 107 8070,52 5 564,18 58 4203,", "48 107 5508,79 128 9476,0 147 3327,45 139 8148,", "23 105 3823,20 94 1159,3 29 2150,6 5 6123,", "118 114 8614,98 86 3132,87 111 1820,17 110 6797,", "80 14 4614,76 114 167,33 63 2120,94 69 2868,", "122 54 8206,31 91 9526,111 18 1525,89 111 6193,", "129 46 58,80 63 4369,18 135 1485,90 119 8830,", "103 125 4847,121 61 2103,11 118 4389,38 97 8821,", "7 73 7246,18 46 6819,26 108 4356,117 130 7413,", "118 13 2281,63 75 8938,125 85 8698,145 38 4086,", "7 98 356,88 138 5753,9 116 5810,49 50 7109,", "61 126 991,9 38 3456,100 30 177,40 10 2748,", "74 0 1568,91 150 4735,15 21 724,36 5 2503,", "29 113 6406,81 104 6879,144 42 4699,93 51 1486,", "142 141 4027,98 138 4806,87 2 4719,0 84 2536,", "40 123 6944,96 41 7810,80 25 3004,45 124 4393,", "66 112 5004,109 53 2655,130 72 4931,61 131 4597,", "15 71 672,29 19 231,70 99 1219,33 78 623,", "5 35 6394,108 34 3990,58 56 4205,6 140 2192,", "58 134 4962,86 83 3598,146 82 1483,141 115 4771,", "13 60 6830,123 57 6998,132 28 6781,105 24 7811,", "87 12 7624,10 143 5437,29 64 7765,6 149 182,", "135 55 8593,54 77 8100,22 151 9433"};
    int K = 88;
    int L = 2491;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 866059;
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    int N = 192;
    vector<string> roads = {"34 90 5777,127 65 9760,133 158 2874,142 44 6073,", "81 52 1987,58 93 5961,112 55 7659,31 76 3904,", "146 98 4334,62 49 1110,53 158 5433,39 140 4411,", "102 173 6308,108 73 8401,175 64 1022,75 145 3327,", "8 18 4297,53 89 2425,128 45 4332,69 128 5382,", "147 0 2095,109 66 4042,74 178 7028,146 169 8533,", "4 60 9060,12 107 1605,172 155 9212,185 139 6376,", "77 141 3078,190 118 9510,66 108 2183,73 169 612,", "56 51 8442,64 156 5016,41 120 2376,79 52 2653,", "1 64 2370,60 126 5068,109 20 4528,25 133 9015,", "53 41 5035,13 46 1226,112 152 2048,83 21 141,", "59 168 7070,25 137 9426,138 32 6312,122 181 5054,", "168 108 5367,52 118 8254,187 178 8143,42 48 5031,", "97 136 8252,3 73 7473,165 157 9277,89 111 8625,", "18 40 46,184 144 2320,144 191 6431,168 45 1415,", "138 8 4109,92 62 7627,84 144 9223,19 96 6639,", "48 100 7202,93 78 578,26 147 8367,33 137 7900,", "132 109 2267,161 20 5536,17 57 1822,33 122 5550,", "52 191 232,127 51 3026,153 176 5718,176 142 7137,", "136 160 7948,93 69 8708,173 139 7562,123 51 8103,", "2 53 6704,7 91 8387,126 0 9567,8 178 2495,", "5 93 7761,130 60 6064,170 3 4904,53 96 7708,", "55 166 8282,51 105 2141,16 176 5977,41 46 1166,", "60 169 710,78 139 5497,148 32 3933,149 40 863,", "31 186 8752,15 85 6429,38 126 7721,101 114 8514,", "29 165 3393,90 134 8142,31 5 1392,13 124 4503,", "79 75 4998,68 168 2723,165 54 7615,154 28 5398,", "114 65 8995,168 181 6259,96 74 4557,181 16 9711,", "149 48 3566,18 23 5289,158 164 1314,51 98 5950,", "17 64 5758,179 160 8480,98 71 7983,187 167 7981,", "65 80 5386,34 22 4468,166 132 7497,125 186 8801,", "104 39 9184,78 177 4073,172 78 5383,145 141 231,", "19 191 6951,121 78 2918,42 67 4057,73 72 3574,", "37 130 4437,7 171 4133,139 136 794,64 23 2889,", "11 180 5517,49 137 6397,65 12 1274,14 12 4812,", "108 61 230,146 99 4480,63 177 8600,117 33 5663,", "41 103 2483,153 43 1566,36 2 8167,24 133 2186,", "161 90 201,116 17 6692,53 21 8601,105 180 9186,", "18 110 5312,134 159 482,159 6 5434,177 115 8111,", "174 89 168,105 154 315,169 162 5702,11 9 5326,", "139 27 8453,50 127 4448,24 15 183,20 95 5596,", "114 7 2771,18 113 5924,144 106 7810,125 10 8309,", "176 163 6862,10 30 7370,127 94 9333,170 131 9352,", "39 9 1967,178 82 1366,167 165 48,175 189 5123,", "57 87 8491,82 150 9077,102 188 1957,172 88 705,", "133 183 1756,149 135 9218,151 90 2216,65 143 1900,", "106 47 6661,17 129 2610,139 119 2890,132 70 4364,", "73 182 4853,44 86 3861,0 35 2513"};
    int K = 5;
    int L = 3183;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1565532;
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    int N = 166;
    vector<string> roads = {"34 28 5379,61 104 8825,66 6 9735,158 90 4020,", "85 66 7472,155 29 202,101 80 1388,5 69 7747,", "10 120 8611,25 133 6174,55 60 1600,147 133 2471,", "7 131 213,66 55 6596,78 7 9036,161 154 9997,", "34 40 997,153 54 3833,13 117 6861,27 41 5304,", "157 138 8078,145 58 8464,42 113 8544,19 75 6890,", "32 134 7293,12 157 9331,137 160 8543,107 143 8897,", "125 76 7474,82 165 5132,24 70 4253,79 135 1831,", "111 25 6772,47 124 4542,45 103 6643,158 143 8611,", "20 75 2286,111 163 6221,144 48 1587,13 16 725,", "38 23 7251,47 98 8875,107 108 9127,115 12 8750,", "50 7 1695,143 142 3414,5 22 7805,120 122 1121,", "73 120 2788,118 21 2725,55 23 7577,75 9 1520,", "47 81 2266,43 72 4261,37 155 3954,136 42 867,", "155 73 213,26 81 8676,93 70 5228,152 7 7182,", "57 47 3860,4 26 4485,123 2 9648,148 162 3911,", "124 37 6119,5 56 3745,126 117 2591,29 114 9212,", "18 94 5585,162 76 1675,104 157 1995,48 87 5451,", "27 17 1512,6 67 3243,127 53 6960,9 133 4687,", "32 40 9637,2 156 4595,64 3 1967,7 13 4652,", "124 96 968,134 115 626,138 127 3627,31 55 4019,", "81 34 6584,97 165 7381,117 118 5911,6 134 8446,", "49 51 7770,67 87 3642,161 61 8443,142 102 9713,", "78 124 3223,55 30 8759,59 104 6785,100 142 5187,", "139 57 1798,104 77 824,73 159 7161,132 82 1092,", "162 90 3856,155 153 256,78 45 8790,24 120 1436,", "19 4 2032,71 86 6726,4 156 2619,26 110 313,", "110 43 3041,145 135 5221,101 115 8563,7 132 9552,", "40 65 564,123 145 5432,139 113 1034,100 89 934,", "114 91 5444,47 52 3466,11 73 8561,72 158 3661,", "138 86 9020,111 62 6584,101 92 2529,11 64 8041,", "32 128 8626,37 105 4182,76 33 1539,77 94 2017,", "13 84 7025,101 5 4605,38 112 6703,142 35 4633,", "11 160 3735,99 141 219,21 151 1491,61 95 6108,", "142 27 6072,41 8 4057,90 36 8886,153 14 9613,", "156 121 816,110 68 5895,165 130 7471,90 99 9570,", "6 83 2393,154 46 6093,162 44 1218,71 0 9398,", "27 15 8914,152 74 9846,24 49 6469,122 88 7426,", "149 102 1102,129 65 702,149 150 4914,133 164 7630,", "90 116 9758,119 116 8548,161 39 4443,106 163 141,", "99 109 3967,39 63 8234,82 146 8035,119 140 5904,", "157 1 7330"};
    int K = 13;
    int L = 6905;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1205050;
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    int N = 122;
    vector<string> roads = {"118 120 3177,93 90 4871,37 85 5486,12 115 566,", "38 23 4091,69 96 3996,95 113 7272,75 55 414,", "75 84 2793,100 46 6003,8 6 5824,106 38 7301,", "71 90 9738,36 61 3432,119 114 4938,2 11 898,", "47 111 7226,99 5 3152,1 69 4733,69 67 955,", "108 77 2177,87 63 8742,28 119 8377,62 1 2499,", "25 40 1641,78 80 1460,95 45 3153,60 58 3608,", "16 58 7094,66 11 4076,28 80 2583,37 104 9125,", "98 69 6571,79 1 3299,26 82 4581,11 42 7259,", "10 87 7981,63 62 9101,17 100 6247,57 118 1614,", "18 32 1834,113 42 8341,33 4 6183,53 42 8154,", "64 86 609,58 37 7545,10 82 8020,34 8 7609,", "79 55 5319,52 63 9789,59 117 9836,18 77 142,", "50 11 2933,63 111 8539,48 81 1764,98 9 5059,", "90 116 9477,7 81 8829,115 118 8464,15 90 5596,", "115 15 5097,30 2 5824,25 47 5065,43 56 9800,", "66 87 2502,113 88 1534,5 89 4520,37 118 941,", "39 106 827,57 51 2915,39 0 4080,76 61 3405,", "95 43 562,31 107 9432,42 15 5942,90 6 3945,", "30 76 8708,37 46 8947,85 21 8742,50 92 3972,", "0 57 5749,60 89 552,34 108 1496,95 105 6539,", "3 69 5111,22 39 2405,68 56 1576,37 54 9305,", "86 72 6596,41 105 5679,35 57 5033,3 48 7630,", "118 86 7341,43 59 7980,108 103 5651,27 97 327,", "36 102 7783,43 107 9355,29 24 7835,57 28 2947,", "97 102 6987,39 91 8751,86 94 9753,10 109 2007,", "65 44 9602,82 73 5696,79 20 6399,44 28 6894,", "61 110 2721,107 112 9231,104 29 5729,114 101 9102,", "83 15 7612,57 33 6666,24 14 1050,101 13 1784,", "21 49 3776,45 70 1315,109 74 8466,113 19 9131,", "102 121 5270"};
    int K = 59;
    int L = 848;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 670542;
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    int N = 160;
    vector<string> roads = {"97 125 2367,143 121 965,30 116 4975,66 91 3024,", "144 31 5039,112 4 4785,3 119 7862,11 97 9868,", "56 150 5655,29 109 9878,125 55 4387,148 90 7697,", "21 25 9626,27 125 9011,37 81 4018,79 98 4957,", "16 132 9711,143 12 1508,42 156 1158,120 141 3280,", "94 10 502,106 102 2888,106 104 2036,113 64 5169,", "70 110 7490,87 79 9843,133 37 7463,35 53 7288,", "99 20 3409,148 116 1488,67 23 7144,54 13 8108,", "30 126 5513,120 70 6528,31 67 1239,52 87 1371,", "33 52 6894,143 74 2265,104 57 7801,150 117 4697,", "67 54 2998,49 137 941,105 106 9281,50 110 8687,", "103 66 3977,50 89 8475,70 46 7664,45 62 5747,", "45 100 9732,24 107 9853,111 32 6205,122 14 9347,", "119 94 4126,65 151 4433,32 80 5138,132 69 6650,", "88 37 8703,138 132 6310,64 123 8107,134 2 259,", "107 125 3660,69 4 198,32 60 3203,137 133 7491,", "95 100 6487,136 113 2955,36 147 2811,108 44 4641,", "37 67 8300,61 25 2627,47 83 2371,119 109 8814,", "157 34 7465,63 148 5781,25 69 7472,138 56 4574,", "30 119 7483,79 104 592,69 42 5258,16 134 33,", "159 29 6870,158 3 6802,126 66 2215,150 109 5319,", "30 73 6001,79 117 5892,145 25 4497,19 139 8669,", "119 31 1782,65 85 989,123 20 9633,71 80 3658,", "85 4 8315,149 40 3928,71 98 4384,145 130 4894,", "142 98 2656,34 64 7928,140 153 8043,43 0 5449,", "65 38 4082,126 99 8382,139 154 4880,114 4 177,", "117 110 2164,108 116 536,55 145 2350,105 26 1755,", "57 83 9880,91 75 116,127 129 9711,144 15 7079,", "94 74 2870,111 95 9049,73 5 8763,108 40 4365,", "35 95 5518,23 115 1203,70 140 145,86 30 6144,", "124 0 4791,79 48 1974,81 92 4408,134 146 2067,", "8 114 9197,110 7 2746,38 28 6446,134 39 6165,", "148 1 7268,159 127 4691,43 130 7964,127 58 4403,", "145 82 1080,7 76 7915,34 122 3876,92 128 1460,", "149 6 2886,81 68 7502,45 84 6753,112 139 9357,", "19 78 2457,67 118 8886,6 72 2844,100 41 1394,", "108 135 299,54 22 6588,9 10 9547,28 51 7598,", "141 155 3960,107 36 3687,77 102 4568,133 131 9012,", "22 96 6948,124 93 7944,124 152 6630,109 101 4179,", "25 18 314,22 59 8477,66 17 232"};
    int K = 93;
    int L = 5200;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1036305;
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    int N = 136;
    vector<string> roads = {"14 125 4571,94 101 5705,19 14 8439,45 130 1820,", "19 113 8622,40 0 5354,44 1 6649,76 93 1530,", "98 91 3208,67 65 9836,7 39 1184,83 131 505,", "134 30 6089,71 132 1459,134 111 4541,86 46 8202,", "70 84 4697,45 36 9262,17 88 7416,63 55 590,", "43 92 5041,104 107 7494,2 89 8702,100 24 1152,", "28 128 673,26 37 8395,51 4 7996,132 106 585,", "99 58 4714,113 124 1221,71 14 3792,42 126 6738,", "14 43 2093,75 37 1588,78 55 284,71 28 11,", "11 80 1234,53 90 8498,36 107 8796,130 54 9862,", "90 92 937,89 122 700,118 40 1223,107 53 5627,", "98 2 1889,119 134 20,75 114 8831,11 17 1572,", "73 117 7195,18 82 4845,125 4 3342,50 91 7423,", "72 67 9590,113 89 2684,121 47 5805,129 118 3989,", "119 79 4038,127 49 7552,18 35 3564,24 119 2738,", "78 59 6750,99 7 8631,9 126 4842,53 110 7087,", "93 90 1800,73 113 8781,49 40 7205,92 112 1476,", "17 60 221,20 5 3544,104 52 1570,24 115 9808,", "42 89 524,60 25 5615,17 37 793,10 67 1085,", "4 34 9240,102 55 8973,63 101 9345,85 64 4177,", "78 71 2120,62 30 7365,46 120 129,9 109 9317,", "112 30 6865,96 72 7624,92 84 6894,131 68 2955,", "91 127 6084,48 50 5099,48 105 496,89 135 2790,", "112 31 6166,68 54 2863,38 53 6026,76 65 6955,", "77 129 6479,27 93 7689,94 44 7192,117 60 6003,", "18 49 6449,1 74 8604,110 69 1894,17 61 7037,", "24 103 1896,91 108 4177,98 81 5958,99 113 5143,", "98 87 5497,101 20 6132,14 33 4131,69 23 2940,", "49 6 8408,123 81 3368,27 133 6566,60 46 3920,", "21 26 6616,128 22 8093,86 29 6398,128 41 8712,", "39 97 6594,58 13 695,38 57 694,104 47 8045,", "70 116 7802,104 95 9565,132 85 6710,29 16 4513,", "11 56 5387,65 3 7096,70 8 4750,32 131 2532,", "57 66 1488,79 15 3806,115 12 1217"};
    int K = 80;
    int L = 2780;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 755279;
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    int N = 101;
    vector<string> roads = {"86 72 3984,52 38 7354,98 96 7453,11 30 5965,", "88 75 2517,45 64 9217,68 30 7622,43 24 6101,", "100 74 8414,81 56 5716,24 45 7756,86 30 5240,", "43 92 7524,100 89 5670,59 57 9380,46 57 2648,", "97 6 7189,78 60 6536,13 57 7578,3 27 9867,", "64 14 5281,62 43 7586,83 80 8839,0 92 2147,", "56 95 2139,31 94 4353,81 71 7221,98 77 1898,", "57 6 1482,16 32 840,51 99 7418,58 91 7744,", "89 11 1013,80 67 7322,25 18 9625,27 99 8473,", "74 64 1013,28 60 9422,6 29 1516,26 89 7974,", "83 72 9100,23 27 4438,5 18 9973,35 76 9573,", "63 36 5619,26 79 1966,59 62 2807,79 85 975,", "4 9 4210,71 60 9740,11 15 4926,57 37 1529,", "39 16 612,94 8 1599,23 93 7262,77 79 335,", "54 31 8988,86 73 6557,98 3 3470,92 16 2454,", "64 5 3272,31 62 5458,9 29 3354,96 21 4364,", "90 49 2488,24 55 2392,48 58 3397,19 99 7394,", "58 14 7884,67 65 9196,51 49 2234,66 60 9710,", "50 12 6626,59 35 6787,82 93 9074,93 53 6133,", "97 1 2733,24 84 8054,20 48 4853,18 88 4229,", "23 2 7520,31 78 4602,47 68 5555,9 38 9939,", "23 44 8898,44 69 755,14 7 7097,34 52 2090,", "4 63 4138,100 61 5266,75 70 2805,60 42 1472,", "78 87 7815,58 10 6690,85 50 8156,47 33 6357,", "19 40 9174,13 17 1139,100 41 6153,100 22 628"};
    int K = 61;
    int L = 9288;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 757481;
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    int N = 120;
    vector<string> roads = {"13 21 1663,110 70 8888,58 6 1321,25 63 6681,", "95 63 3492,18 88 2793,37 21 748,12 102 3939,", "111 55 1929,27 109 1163,35 9 9072,62 5 5747,", "75 61 527,100 39 6064,96 83 9691,33 82 6610,", "70 57 1853,38 64 8246,33 109 372,71 8 5213,", "107 23 3154,10 110 2056,38 91 981,37 114 4835,", "93 117 925,88 19 9162,2 52 5535,23 19 263,", "16 21 8597,98 87 760,6 109 4357,68 62 4441,", "118 15 7181,70 58 452,17 53 891,7 53 575,", "70 91 9039,12 91 6981,60 31 1453,23 53 2171,", "38 19 610,18 32 4303,6 37 1966,87 115 6988,", "102 25 5532,113 11 8211,69 72 5255,119 92 4645,", "46 75 3073,38 90 3138,35 111 1753,75 51 5602,", "17 36 2020,85 29 8231,94 48 5155,13 113 5620,", "23 35 1076,107 51 2218,74 63 5666,49 116 1085,", "114 116 4754,70 119 4119,11 3 824,91 104 5365,", "80 58 3960,71 1 2683,85 62 573,91 103 5523,", "71 2 8999,69 45 6149,91 40 4302,75 100 2786,", "60 114 2511,101 97 7667,75 97 626,71 64 3783,", "70 48 5484,8 77 525,25 105 2405,3 43 1191,", "20 89 7304,14 98 3154,99 44 9013,104 96 8870,", "93 44 6888,68 2 6669,57 30 552,17 112 7085,", "105 14 2352,19 73 6290,80 65 3539,52 66 9440,", "72 10 8168,78 37 9819,49 54 1351,49 15 1003,", "78 76 4004,94 89 5541,77 86 1696,0 61 4834,", "98 84 6657,83 24 4139,13 117 2401,116 28 1532,", "19 22 2903,87 81 2847,71 47 5466,32 26 1506,", "38 59 5661,21 106 3726,14 67 9669,112 41 5131,", "119 79 4616,43 50 8751,105 56 429,88 34 8613,", "1 4 571,49 42 9737,74 108 1985"};
    int K = 84;
    int L = 5873;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 667638;
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    int N = 155;
    vector<string> roads = {"154 0 2852,57 38 1592,59 145 1405,101 0 2148,", "47 33 1812,13 85 2845,137 106 1677,32 40 2674,", "31 62 8611,136 41 8228,70 14 8053,132 89 1044,", "73 128 4304,56 2 6387,110 56 7110,43 36 2674,", "132 101 8700,103 50 4942,95 71 7647,90 50 1814,", "3 9 6725,12 115 1450,91 80 5109,38 43 7314,", "67 24 5519,70 57 610,14 23 4723,12 77 9909,", "10 31 5170,63 58 387,56 128 8307,19 3 4471,", "147 25 1686,95 19 5410,97 88 7435,147 30 3366,", "31 97 2435,130 114 5769,38 2 3994,36 53 9365,", "119 102 154,98 83 1952,131 97 9338,89 68 7664,", "63 97 667,133 128 2933,128 147 6743,73 65 5493,", "16 65 8510,8 137 9211,92 20 1441,82 107 7668,", "131 18 7144,113 146 7523,25 152 2302,143 23 7057,", "79 115 9941,34 129 5577,110 8 4986,10 73 6136,", "111 78 1108,88 39 3399,96 60 8452,31 80 108,", "46 3 3506,33 121 8135,125 66 2599,31 136 1179,", "50 39 6033,98 43 4456,4 72 6172,83 17 4342,", "142 4 3916,90 117 2118,1 144 621,86 77 6347,", "91 93 3866,85 60 6414,149 43 6544,79 93 8688,", "17 32 3375,113 84 4573,10 19 1623,99 80 211,", "73 125 2760,73 129 4096,52 73 4661,91 74 2144,", "23 112 9768,99 4 3421,145 60 1757,56 6 4914,", "97 85 273,149 47 9272,104 43 7280,29 136 9364,", "58 153 5379,12 146 7493,133 144 8651,117 61 3505,", "144 116 4507,108 144 8963,128 44 1888,52 0 9083,", "0 55 1473,18 67 710,97 114 2519,32 5 6805,", "30 105 3764,62 92 5281,139 73 9695,85 123 715,", "107 95 6136,39 126 6836,154 78 7297,100 11 2086,", "100 46 3619,40 42 1231,67 122 3498,46 54 5396,", "91 120 5573,19 22 3602,115 45 6339,36 141 8547,", "91 119 5113,23 49 4653,27 13 5702,8 21 7451,", "79 124 9196,147 76 5089,8 35 9736,33 138 2883,", "37 13 9794,101 127 8776,53 87 2224,139 51 7030,", "12 150 8400,16 64 5443,146 26 8426,144 15 9642,", "27 151 7526,8 140 6881,139 134 6988,54 81 3259,", "124 94 4590,144 28 9744,93 109 3490,84 148 7625,", "150 69 672,91 135 4046,138 7 5509,11 75 5472,", "71 48 3984,81 118 2901"};
    int K = 42;
    int L = 3892;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 951847;
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    int N = 145;
    vector<string> roads = {"70 115 2120,0 81 7718,17 3 8558,33 110 4160,", "108 133 4493,87 42 9197,81 126 5837,1 110 9661,", "98 71 8304,135 29 3396,21 103 720,0 69 7176,", "29 84 1665,21 139 4602,85 111 8821,16 39 6094,", "94 138 2492,30 138 1879,52 7 9019,89 83 200,", "110 144 3688,139 27 4635,13 134 1453,45 8 7229,", "48 32 1450,77 100 9724,74 15 8559,131 74 4970,", "98 12 2194,29 134 7764,132 54 7835,41 118 3056,", "89 128 17,99 113 5204,56 115 6984,33 48 7581,", "9 22 8666,6 40 7110,25 79 1312,21 67 8706,", "37 119 7220,4 50 2642,90 137 3644,38 39 7324,", "36 104 5895,116 54 5220,36 47 9483,30 22 2596,", "88 140 1471,123 95 9798,108 35 2705,141 35 4053,", "94 62 5342,23 68 5693,51 54 5382,87 81 7586,", "65 117 8108,73 111 4778,112 38 565,40 17 5102,", "50 144 8165,92 121 2560,142 74 3514,45 20 7604,", "11 92 8743,134 121 6904,71 64 8144,52 108 1788,", "124 123 1843,99 111 1059,32 120 7631,13 35 8978,", "14 125 3881,45 127 9600,83 144 7545,77 7 3846,", "19 75 2154,143 90 8664,68 115 9366,66 121 8598,", "121 74 9082,34 32 6470,130 22 7098,22 131 7888,", "5 140 5496,96 94 4368,5 92 1852,3 59 5377,", "83 3 5547,94 20 161,104 126 8654,125 82 5997,", "43 75 6149,98 67 3646,135 107 2481,34 95 4745,", "96 51 5876,77 42 6972,142 101 7598,102 108 5398,", "6 142 70,47 53 1962,104 93 8675,131 65 3076,", "74 18 9692,10 13 8529,77 23 1599,73 37 4064,", "134 63 2323,74 60 7730,30 19 6247,39 9 3600,", "10 129 3523,101 49 5621,13 67 6314,49 73 6378,", "0 2 2629,105 9 3135,88 57 8846,80 12 5479,", "48 24 6465,116 114 7029,31 2 1443,112 26 5488,", "104 72 9944,109 124 1293,51 79 4904,57 118 8822,", "41 55 8042,56 82 7426,62 136 911,74 91 3412,", "35 61 4958,83 46 1265,95 78 1593,33 122 8578,", "138 137 9942,121 86 6875,135 106 8867,47 28 2659,", "101 58 4135,76 100 172,106 97 8688,104 44 671"};
    int K = 29;
    int L = 2811;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 891427;
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    int N = 137;
    vector<string> roads = {"135 37 1889,20 114 9514,87 24 1870,79 58 8852,", "81 24 1259,116 14 1599,58 93 8244,111 29 6957,", "90 97 7250,136 83 2337,35 120 9877,91 2 6280,", "118 33 2058,107 135 6537,15 19 3845,91 6 1191,", "9 97 9356,133 18 6862,118 119 2370,133 8 6628,", "76 44 5203,132 3 3003,41 115 145,0 56 2211,", "9 119 3869,117 126 6308,30 122 5544,61 103 9936,", "70 80 6999,61 4 2620,97 71 6180,82 97 3113,", "133 42 5140,8 21 93,86 55 5982,55 123 5983,", "80 81 5011,12 83 711,37 51 15,97 17 8384,", "71 76 9206,121 11 4718,52 124 9631,48 38 3617,", "85 64 5302,123 81 3537,51 32 5764,99 59 6450,", "19 58 3575,71 126 8262,0 16 9459,114 100 2421,", "129 34 4784,99 48 5298,62 38 9731,47 112 8089,", "96 30 4011,120 70 6642,7 136 4342,19 27 5537,", "50 103 9419,11 122 2166,104 125 5987,122 20 3128,", "67 58 904,124 89 884,83 100 9192,129 13 26,", "105 95 5018,39 7 8110,42 63 2005,27 70 7260,", "132 92 3657,69 31 1367,39 133 4887,50 91 3074,", "109 86 1609,121 98 4675,60 77 7912,47 123 4468,", "37 16 5567,63 70 8501,68 108 540,98 52 7885,", "136 92 5194,102 70 7729,102 107 1197,9 100 4046,", "101 43 5677,16 59 2641,53 5 4636,90 108 768,", "89 95 6711,71 36 3191,9 78 3778,76 61 8315,", "95 69 6609,121 43 7160,132 127 4850,109 73 7370,", "31 22 9246,54 18 4989,125 42 3512,28 49 9147,", "24 116 4982,42 26 200,17 129 1424,19 74 6109,", "16 49 4787,42 65 1981,39 115 4710,51 94 9971,", "0 84 9239,68 60 1027,15 45 188,6 85 4771,", "123 131 8582,94 88 1254,4 5 3483,115 110 9919,", "102 113 5420,93 72 801,101 66 353,44 29 3188,", "14 23 9591,22 10 2242,50 1 8165,78 57 7680,", "2 130 2718,61 40 3455,123 134 9934,70 106 2064,", "35 75 3924,100 25 7566,65 46 5706,69 128 7468"};
    int K = 32;
    int L = 7549;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 880734;
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    int N = 109;
    vector<string> roads = {"21 49 4073,15 67 2879,70 81 3215,71 40 2741,", "29 97 1989,38 52 1299,16 1 2708,108 36 1958,", "101 33 5796,32 98 8899,18 61 9410,83 102 46,", "28 15 2151,65 107 6145,13 74 1268,67 61 8807,", "46 55 3442,19 58 1062,29 67 5083,89 29 9358,", "50 76 3755,48 26 1,107 43 9783,34 75 8221,", "26 67 290,81 90 5695,96 88 6423,104 72 9522,", "64 38 8297,37 27 9131,84 78 7138,76 57 8257,", "36 27 3470,40 27 5190,76 68 7440,13 49 6687,", "54 89 3272,11 49 3547,69 8 488,104 95 7277,", "28 83 5929,17 40 9541,55 18 5061,65 25 9080,", "107 28 8507,9 74 8386,14 106 1027,59 63 4191,", "69 104 3275,38 35 2278,83 19 1076,71 2 4359,", "18 0 8419,65 21 1397,82 5 4175,80 16 3574,", "107 42 1505,36 9 3815,39 43 5961,30 95 3594,", "90 84 1574,74 10 7394,34 82 91,101 81 6440,", "54 87 5016,69 96 4355,40 81 741,15 98 8557,", "86 21 5385,59 34 6517,104 9 5541,64 37 6421,", "56 74 7550,44 63 4325,81 91 5076,4 56 6745,", "48 59 3944,97 62 5078,31 95 7388,71 94 8659,", "5 50 4635,35 7 5801,94 41 1104,8 51 5842,", "38 23 5457,75 22 8945,16 48 5749,93 31 7807,", "63 20 2709,58 85 4495,47 77 2473,62 47 2576,", "51 6 8921,50 106 3706,42 100 4825,73 99 2415,", "98 24 1302,50 99 594,83 60 4569,31 105 2155,", "13 79 173,101 66 7363,71 3 2255,61 12 3797,", "38 103 1016,26 53 1832,9 92 8009,98 45 6977"};
    int K = 45;
    int L = 488;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 532916;
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    int N = 182;
    vector<string> roads = {"33 139 8477,149 57 6468,130 127 8338,165 66 6957,", "52 74 6202,160 168 7327,4 139 9528,19 178 7773,", "105 145 5912,64 87 6308,83 46 5220,114 46 3172,", "57 21 6118,88 137 551,59 132 3620,111 125 1065,", "108 94 4897,170 146 7468,103 158 459,171 157 1229,", "87 35 1489,93 4 6652,174 49 8114,138 119 1592,", "53 45 6816,69 36 2316,140 141 5254,17 82 5765,", "115 65 9235,6 137 8870,142 133 5118,168 181 8909,", "181 163 3401,169 25 8619,176 49 7504,90 153 3716,", "82 146 5382,178 131 2271,39 94 5623,14 86 6809,", "105 37 3032,115 80 9876,91 78 4646,78 32 7377,", "115 41 5542,168 42 5352,155 67 7241,38 6 2004,", "48 101 7479,61 170 1214,135 80 6643,77 169 4608,", "90 16 1869,175 4 9474,46 22 8217,93 41 3825,", "168 78 3653,73 143 4848,130 85 4152,23 144 8155,", "79 173 2028,172 38 7204,126 70 8051,135 45 9082,", "83 112 1452,6 159 537,75 155 6161,107 80 6340,", "147 119 1026,142 50 9258,157 56 7927,63 93 7392,", "179 127 5179,170 38 8836,178 122 8060,70 73 4147,", "19 22 7139,140 115 3599,172 67 3186,154 137 9997,", "66 122 8542,18 28 8333,45 150 3289,29 50 9074,", "165 162 168,78 173 5080,38 166 6708,32 175 9660,", "17 73 6439,179 120 3142,113 88 6784,86 133 5778,", "107 77 4417,68 76 6311,58 97 2203,24 9 5083,", "28 2 728,161 125 7890,104 66 6372,139 10 8895,", "30 40 6134,32 149 3681,106 86 2839,131 100 9525,", "19 61 7143,3 95 5371,26 0 818,156 107 9872,", "165 158 5227,80 179 5057,102 61 5731,94 149 740,", "90 159 4268,158 176 5382,109 10 3087,134 138 7026,", "67 139 1205,151 59 107,29 72 4163,120 133 4489,", "59 97 9115,174 84 6503,71 150 7171,50 5 8715,", "152 68 899,10 76 9486,124 32 8518,177 35 4874,", "3 151 3766,115 54 4303,27 6 6254,6 26 2591,", "76 35 4933,68 97 4470,142 148 9397,132 74 6922,", "148 92 8903,146 43 1721,103 47 409,161 63 14,", "11 70 9968,28 159 2858,42 147 3723,139 23 1334,", "125 44 1913,158 7 9561,89 177 424,23 8 8759,", "140 116 7388,66 9 2765,40 9 3690,141 12 6836,", "43 69 7350,82 13 4744,156 101 6713,91 37 1327,", "148 117 8771,160 34 4182,94 136 8285,23 129 7536,", "6 60 953,127 164 3341,141 15 2457,116 20 2826,", "125 99 1204,42 123 3012,31 106 4086,47 157 1546,", "6 81 5150,68 128 5795,91 55 2993,1 80 167,", "73 62 461,162 118 7911,29 121 9167,107 98 3763,", "66 51 4644,123 96 3741,53 180 3523,4 110 9549,", "36 167 7923"};
    int K = 21;
    int L = 2298;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1212702;
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    int N = 129;
    vector<string> roads = {"44 6 7243,39 9 7949,51 61 3021,81 3 1785,", "42 82 8673,122 2 3124,40 101 8611,87 4 6431,", "87 79 4080,91 114 4644,110 29 2621,36 128 3031,", "81 61 7948,16 54 1002,50 76 3167,104 70 4377,", "26 66 5669,74 9 2957,22 44 1228,74 19 6941,", "118 71 5527,41 108 118,63 28 9695,71 1 729,", "36 111 1761,1 93 1002,7 24 4209,51 50 6754,", "84 10 869,42 109 2855,3 22 5617,0 54 8912,", "107 35 9500,52 111 7541,73 10 5910,4 122 3948,", "58 49 9343,128 19 6060,39 125 9618,91 6 9620,", "64 99 8759,85 49 9085,110 112 9281,99 102 9932,", "92 101 7883,32 39 6482,62 103 3277,63 1 4809,", "128 62 1012,4 115 3973,115 31 1553,39 126 7957,", "76 55 4656,54 3 2942,2 109 696,59 57 7052,", "31 55 6906,110 55 4462,72 61 3115,22 88 5405,", "100 120 8540,47 65 6142,81 70 2791,35 46 7008,", "52 105 849,51 78 3866,69 119 1968,13 46 5031,", "19 28 2917,7 29 4085,126 119 241,75 11 281,", "48 114 5289,72 100 550,45 26 230,77 48 5086,", "97 50 8973,113 118 1,77 63 5802,43 75 5469,", "53 81 550,51 86 7920,94 53 6632,33 94 4311,", "96 27 8392,90 32 3901,6 23 1799,95 0 1745,", "12 56 5841,11 32 6845,126 65 8665,109 84 691,", "115 18 5607,3 21 6014,54 80 1825,109 25 7021,", "43 26 8419,55 13 1361,73 30 3441,26 60 5633,", "119 83 448,25 59 3680,57 99 3484,106 79 9805,", "16 117 2124,9 127 2549,88 56 4246,59 116 9904,", "100 108 8353,69 98 9467,114 14 820,22 27 5550,", "99 121 6707,12 17 7317,25 67 5001,11 68 3202,", "99 20 6703,104 58 8963,57 123 4269,94 8 8044,", "75 89 9503,9 37 2369,32 5 7221,14 92 6440,", "89 124 1807,88 15 7826,120 34 5368,20 38 9957"};
    int K = 55;
    int L = 46;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 647796;
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    int N = 169;
    vector<string> roads = {"5 71 6077,145 128 1305,168 11 7902,68 168 2939,", "104 101 4664,98 119 8665,48 123 2055,53 7 7541,", "7 125 6787,155 33 6003,88 27 2378,58 156 2020,", "162 64 6944,104 64 6804,72 79 7964,55 162 4766,", "153 160 4965,118 102 4439,68 94 3614,165 34 496,", "26 0 1054,19 10 7309,35 53 6350,8 146 9637,", "102 49 7096,22 82 5558,9 89 1825,77 160 1031,", "161 27 5578,144 114 8398,66 107 2842,70 2 5448,", "39 40 4959,148 38 4323,128 74 3182,118 138 1499,", "140 102 2725,39 61 7944,117 159 4314,82 29 5428,", "61 76 3504,46 121 8708,101 69 1011,50 111 2992,", "112 42 9124,17 56 5911,119 56 2392,26 102 1892,", "31 13 1171,138 24 3293,115 42 4723,108 125 6604,", "146 3 6243,19 160 7124,106 50 3349,89 18 7612,", "147 112 8553,41 7 1766,100 64 48,115 134 2368,", "41 58 3491,141 129 647,14 148 7228,84 103 289,", "166 85 3047,59 76 629,35 54 5104,6 128 5739,", "76 12 89,71 29 8466,125 147 9519,35 28 4846,", "106 103 1958,18 97 2552,5 60 878,56 104 1408,", "28 82 5346,167 106 9047,142 116 6793,111 120 2571,", "121 140 3125,135 45 8211,78 11 2632,135 58 4336,", "12 15 74,86 146 3091,110 20 4484,27 163 6647,", "70 136 1021,116 139 2369,58 142 3529,43 71 6316,", "145 79 3347,140 4 7234,18 98 1268,137 93 5364,", "139 94 9974,114 145 6047,68 4 4344,135 74 1072,", "19 98 2089,97 165 5520,22 36 3146,31 151 9523,", "111 153 6006,39 113 3749,83 74 278,45 9 1654,", "73 143 6829,24 161 8991,163 21 3667,34 14 5552,", "142 12 7764,67 55 2822,45 110 5126,37 113 5144,", "155 137 8442,159 77 9679,10 126 2150,78 8 9446,", "109 104 9079,99 127 4261,162 95 7741,54 1 5044,", "93 56 5569,134 80 4475,73 141 2999,61 23 1782,", "68 151 5957,98 149 3998,54 164 2052,12 132 9284,", "153 105 9611,24 92 9108,9 44 1361,91 1 7166,", "67 65 9048,33 57 3271,133 66 7795,87 142 8395,", "149 124 181,107 131 4087,78 90 2784,130 8 3692,", "146 131 2030,153 75 8012,77 73 7300,46 16 7326,", "157 53 448,112 51 5463,137 154 6544,94 81 6819,", "6 96 6160,164 123 6921,64 47 1701,30 86 616,", "35 99 1922,136 76 4909,59 150 173,135 152 4156,", "26 25 8123,69 166 3188,112 32 5358,59 158 1433,", "131 52 8117,20 122 3242,122 62 840,143 63 9918"};
    int K = 91;
    int L = 7604;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1045613;
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    int N = 138;
    vector<string> roads = {"136 39 7459,68 95 5770,84 4 767,4 67 8383,", "62 128 718,78 125 5994,112 7 7573,128 117 3474,", "4 41 4677,0 120 1758,92 128 6670,125 97 3785,", "134 90 8643,114 31 357,72 74 5918,119 136 8215,", "119 111 7973,78 67 6592,48 124 724,90 5 4055,", "5 119 5492,73 86 3041,23 21 5592,20 66 1465,", "134 31 3580,34 74 2241,108 40 1057,117 34 3941,", "25 91 9990,92 17 1410,90 3 8398,28 73 5390,", "104 108 4267,69 92 1080,4 80 1267,42 66 6336,", "111 49 6182,20 59 5363,61 80 6457,4 11 9845,", "6 106 8784,27 84 9346,105 52 6797,74 82 266,", "8 66 5799,74 15 689,83 99 4507,123 40 5279,", "137 63 538,84 19 4362,43 118 2189,90 61 209,", "12 117 9244,81 106 7677,21 9 435,134 103 1487,", "45 76 8528,112 38 3962,103 38 4124,132 68 2260,", "87 32 3667,47 66 1805,99 120 7490,52 97 7207,", "96 57 8955,135 64 3249,62 94 2706,44 123 3406,", "132 93 5091,103 20 7145,108 131 1859,44 32 9934,", "118 71 7774,56 8 9186,65 132 3030,78 65 7550,", "132 115 4744,61 118 8456,83 101 7300,37 132 2585,", "45 94 2585,16 71 1111,98 5 4072,124 96 2617,", "74 123 4354,96 65 6808,89 15 5550,68 30 2341,", "95 99 3385,37 35 5991,76 52 2536,45 10 9050,", "125 116 421,71 25 9454,33 79 145,34 86 5365,", "62 54 7130,123 133 2121,78 79 2795,21 75 8847,", "9 111 8029,58 68 4897,18 9 9260,98 106 4319,", "35 14 6983,117 107 9072,58 137 8319,49 109 9582,", "47 60 9363,76 29 1518,5 121 3271,16 1 5279,", "59 53 3298,30 135 3607,47 36 7207,114 24 9393,", "70 28 8432,103 26 4363,95 50 7101,39 113 4033,", "11 102 6804,137 51 4321,78 100 49,64 77 1965,", "114 46 753,20 129 8972,16 22 7900,107 110 7980,", "103 13 9243,30 85 8139,94 127 9185,35 122 1678,", "51 2 1327,0 130 2939,80 55 5892,101 88 9605,", "78 126 513"};
    int K = 58;
    int L = 2675;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 799031;
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    int N = 151;
    vector<string> roads = {"121 145 8685,124 34 5818,29 72 4962,55 111 2065,", "137 51 5178,16 23 9040,21 111 5648,54 51 8540,", "77 136 7956,103 45 3224,80 109 8483,80 81 7806,", "129 46 742,3 95 5689,16 108 9839,84 78 3345,", "73 137 6163,43 58 7986,62 66 3499,39 94 8817,", "129 122 5664,78 109 8533,8 117 970,16 141 2644,", "11 77 2738,55 102 3697,38 144 2378,65 21 4100,", "98 51 5677,115 50 5774,40 37 9246,126 6 991,", "8 65 7029,37 35 6356,64 10 2241,103 140 9763,", "87 24 7008,121 35 4988,50 77 9827,123 133 3417,", "133 5 9467,18 37 7470,82 21 9065,12 3 5044,", "107 31 5280,79 10 6925,55 135 4830,85 93 9634,", "55 64 3266,113 44 8019,30 138 745,94 34 8644,", "147 95 1059,93 65 6764,39 49 582,105 126 3622,", "150 104 8855,138 58 3134,2 133 9246,111 42 2680,", "66 100 2860,85 14 2299,64 97 8407,116 62 4816,", "127 39 873,53 130 2995,32 0 8088,87 110 8473,", "125 19 286,73 125 1822,86 123 4318,55 4 8633,", "81 0 6688,94 116 9651,97 112 8274,76 86 5529,", "80 132 5,150 116 5321,0 13 368,141 25 910,", "132 70 6763,25 29 5816,9 127 5334,127 52 1815,", "65 54 4128,149 125 9700,88 134 3015,84 63 1358,", "134 46 7783,51 17 5093,111 25 7623,122 5 5425,", "75 46 3226,91 110 1910,9 132 4898,28 54 226,", "25 43 495,78 96 2337,68 75 7027,141 35 8686,", "110 112 872,65 69 2064,69 60 3380,62 92 4254,", "97 148 508,128 31 5443,89 30 2542,72 146 1853,", "133 59 2297,53 82 6419,57 101 6722,94 138 1669,", "137 140 8308,127 71 5799,109 101 2421,29 143 6776,", "89 86 2405,84 44 9337,26 79 3206,68 15 2652,", "127 136 7436,26 74 821,134 99 6285,37 27 5746,", "14 20 8276,40 22 6255,139 116 6853,33 134 6778,", "4 114 4646,85 147 6606,44 107 8823,95 118 4669,", "18 61 7562,85 47 2198,101 90 9376,6 17 9426,", "7 112 3627,132 41 9939,103 36 4436,54 120 1170,", "74 119 2300,75 1 9958,90 106 1041,126 48 7804,", "45 142 570,13 67 5721,118 56 1857,77 38 3969,", "43 131 5653,25 83 5350"};
    int K = 70;
    int L = 9361;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1072965;
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    int N = 127;
    vector<string> roads = {"21 48 1433,47 14 3538,3 95 9565,44 33 8745,", "112 66 9997,63 88 1596,55 49 9766,54 114 6577,", "3 8 352,0 8 20,38 1 2180,17 16 2051,", "115 92 1206,69 46 1427,99 30 4249,27 31 2778,", "112 6 8265,89 61 5899,37 48 521,18 114 3601,", "80 122 5100,88 111 9304,57 74 2980,13 10 8994,", "2 113 8355,56 16 6941,68 88 6692,26 45 2806,", "9 103 9441,100 47 7171,49 25 7317,34 11 2853,", "53 32 9090,62 42 5553,1 68 5684,49 7 1130,", "20 126 8025,82 17 5007,114 15 9317,2 63 8798,", "73 117 7692,82 61 733,11 64 9886,67 126 2221,", "22 114 2340,119 0 5755,96 28 4851,120 16 3654,", "13 91 4709,110 19 7276,37 31 4048,104 50 6466,", "14 95 2909,88 93 4639,92 72 2193,84 89 7866,", "65 38 308,108 46 3917,102 84 6282,45 83 8623,", "99 114 1848,5 42 6260,34 1 1269,67 120 2540,", "114 69 2892,85 111 5266,114 50 7602,24 67 8056,", "21 60 3107,39 36 9778,40 15 4443,25 70 8754,", "22 12 7114,62 49 8566,77 63 2774,28 64 1706,", "54 21 448,34 50 7680,23 32 7783,120 65 1143,", "55 54 6843,42 117 4023,48 100 2662,31 105 4723,", "39 15 1579,90 49 6875,27 23 4165,31 118 7365,", "28 52 9487,14 29 327,45 111 1713,24 71 5456,", "31 97 2212,80 45 1984,126 109 3506,52 101 425,", "22 4 8081,63 51 9785,111 107 398,80 81 4422,", "58 95 8031,93 79 2482,73 44 6911,41 27 2329,", "35 79 2077,2 66 4488,34 121 4194,70 13 7748,", "1 19 1565,106 68 5800,112 124 7222,100 75 3404,", "28 125 2767,114 59 6036,49 43 982,104 57 6746,", "113 9 4948,5 92 3082,99 123 2447,95 78 687,", "118 98 5869,58 86 5861,81 116 578,124 87 1743,", "32 94 7266,60 76 6824"};
    int K = 2;
    int L = 971;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1029816;
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    int N = 165;
    vector<string> roads = {"127 139 7678,79 156 6225,162 151 7542,79 163 6089,", "30 55 7584,97 24 5606,41 17 1115,80 156 7798,", "1 128 779,41 164 8049,45 160 1433,122 149 2013,", "17 73 1636,33 148 8508,72 115 3831,55 39 2981,", "9 128 2601,91 70 9613,144 108 3027,71 7 8839,", "99 75 1782,159 164 6583,10 161 5557,154 120 9235,", "114 89 749,57 162 5459,124 139 6853,60 121 6157,", "85 112 5800,94 28 938,115 22 5667,51 108 2271,", "1 52 2841,90 54 7167,62 24 6858,145 35 4466,", "95 47 7475,3 25 4176,150 3 8747,38 0 3036,", "119 54 8126,121 75 6002,37 122 5895,47 130 2809,", "114 10 1023,6 142 7022,7 108 8904,112 27 4133,", "81 77 9546,38 63 2440,63 134 3798,42 48 3897,", "104 111 486,84 11 5542,10 122 6831,23 54 2492,", "10 34 722,111 11 2322,8 1 21,138 109 3115,", "163 131 316,6 14 8681,55 93 3319,154 125 6672,", "153 40 2335,61 105 1766,126 103 1928,8 21 7606,", "48 161 4304,156 70 425,94 53 3521,62 64 2504,", "111 90 2241,155 53 6736,4 27 5639,5 32 3886,", "80 119 4628,37 22 4213,117 145 4541,87 102 321,", "143 68 6245,66 69 2686,163 21 7246,83 79 2995,", "101 72 9609,157 156 7292,109 76 3014,37 163 7980,", "27 17 9908,69 11 9416,59 117 3383,69 74 9282,", "36 7 3743,65 44 5680,66 12 234,54 162 7628,", "73 83 3169,4 140 2831,141 133 3555,128 2 9160,", "59 19 4039,43 138 4290,148 11 8279,44 134 9602,", "73 123 109,54 96 4820,31 146 2872,139 135 5533,", "18 21 2835,43 6 215,124 141 1007,110 116 3060,", "67 39 3412,91 56 888,14 52 9310,138 87 198,", "117 153 4345,115 82 3210,7 86 2581,162 143 4938,", "139 66 5651,20 62 4005,81 115 6162,129 39 7222,", "8 88 1590,118 51 9857,87 154 9070,131 46 4327,", "62 38 5115,113 21 9180,129 132 4045,38 17 3423,", "139 7 9160,80 15 9083,91 94 1859,112 67 462,", "57 95 9543,111 35 5905,70 26 2096,32 104 9050,", "131 61 6154,123 152 4722,17 137 5335,39 106 5324,", "91 121 6924,162 98 1607,28 92 9328,130 13 2126,", "1 16 552,52 147 225,88 110 8365,54 146 2969,", "136 70 7444,12 103 6157,131 29 2513,46 107 6828,", "161 3 2949,34 45 1720,107 78 1079,59 58 5312,", "107 50 7232,99 158 1803,96 49 2670,0 100 3251"};
    int K = 74;
    int L = 7883;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1065545;
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    int N = 127;
    vector<string> roads = {"97 90 9618,126 81 1026,3 54 6524,75 25 2153,", "51 65 3007,65 98 315,45 65 790,90 13 9753,", "74 106 6740,113 12 2045,40 5 3191,6 34 3837,", "55 26 188,8 57 2228,55 112 5319,71 114 2281,", "17 74 9914,24 120 9025,71 35 2028,99 111 6550,", "124 38 5108,69 102 6885,17 3 2402,55 54 5559,", "14 82 9632,58 68 8418,1 60 7825,18 115 9585,", "62 92 7108,38 110 3311,4 27 8145,79 59 2479,", "114 94 1733,48 51 9818,51 16 8746,115 73 2301,", "38 88 9060,11 100 4546,122 18 8121,105 82 9187,", "110 117 2567,40 43 2678,16 62 3737,96 29 2268,", "123 68 4769,54 121 4139,93 96 1230,122 84 6180,", "103 23 2096,60 59 6548,119 22 9144,56 2 1025,", "67 107 374,108 96 1397,80 78 1000,95 119 5042,", "31 59 5188,1 80 9413,118 27 4700,122 86 8737,", "109 107 7437,101 38 635,73 103 7519,1 107 1778,", "102 46 7046,44 31 6472,2 74 3594,44 88 5595,", "10 90 7802,38 7 105,61 76 2553,68 43 7603,", "22 54 3745,30 31 9652,78 39 1724,46 45 8868,", "25 77 5287,31 14 7597,106 87 4468,26 72 3498,", "109 65 1353,96 59 3090,16 53 9776,36 40 6351,", "104 24 4772,75 5 6809,124 18 341,114 63 4174,", "31 90 3159,49 105 9770,21 42 9432,111 61 7942,", "18 27 7620,81 31 9828,87 60 8743,96 85 2681,", "94 120 5734,113 45 8460,119 40 2711,10 71 3902,", "108 21 7911,110 61 4278,41 58 9174,5 91 851,", "19 83 9353,58 116 927,70 120 1511,104 47 3160,", "29 6 2137,38 52 7290,64 11 8181,117 66 637,", "95 0 2506,124 57 8231,91 19 9506,77 20 6170,", "48 89 3121,49 11 9406,113 37 9291,38 33 8104,", "16 32 15,12 28 9135,68 9 9348,59 125 3156,", "24 50 3755,55 15 5260"};
    int K = 11;
    int L = 3357;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 848500;
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    int N = 172;
    vector<string> roads = {"82 166 1168,45 71 2015,92 141 6354,131 65 1035,", "112 43 6192,156 93 2713,54 167 8019,112 53 6791,", "80 6 3581,71 169 6607,91 144 6374,78 86 4081,", "124 113 5586,127 140 1013,67 101 6316,6 81 1558,", "77 145 9613,33 152 6302,79 32 1287,89 37 5043,", "90 4 123,7 35 7176,13 9 6843,122 38 2695,", "4 46 4099,70 141 4495,126 32 9091,72 46 9037,", "62 160 2875,150 54 7289,72 153 230,97 72 1205,", "97 35 8853,105 161 3728,157 144 7239,74 113 1957,", "56 33 3629,120 48 2529,8 7 1724,67 132 2397,", "37 97 5684,73 150 8411,100 114 6967,131 26 6324,", "23 134 713,35 112 5131,41 112 2429,17 49 6651,", "153 103 8670,10 105 8489,39 68 3347,87 168 1352,", "33 47 338,47 115 3410,127 40 6420,150 44 4258,", "135 30 4111,167 103 4652,103 26 5292,6 108 6709,", "167 61 4788,34 61 3114,134 167 7510,42 142 8104,", "137 119 1091,118 14 2658,83 126 9638,100 111 8900,", "27 15 4319,118 158 9909,138 48 6265,99 132 7486,", "81 1 5040,27 78 3571,152 150 4294,119 14 8782,", "117 75 2567,65 148 5176,158 124 9020,80 164 2099,", "42 140 5620,132 153 2237,40 171 8474,3 150 947,", "33 126 5389,66 119 7582,94 141 8831,158 115 1342,", "132 68 7257,77 4 7686,32 156 5069,97 166 6611,", "125 93 7282,38 132 437,15 121 1802,39 110 3913,", "47 111 3966,103 169 5298,88 23 1590,129 12 2039,", "127 163 7622,48 151 5737,2 65 7910,25 62 9968,", "50 160 7225,13 170 6138,0 43 5583,147 67 6744,", "0 59 8381,61 27 6304,72 12 6995,61 98 720,", "141 158 4430,132 62 740,7 18 4142,88 48 129,", "143 6 3526,89 105 7639,142 132 6765,38 36 242,", "111 57 1690,6 49 6312,155 163 4553,35 85 581,", "131 159 9318,137 107 4089,40 30 5283,124 63 4151,", "75 151 9298,106 85 9791,99 29 9642,132 133 9331,", "140 130 5418,114 96 1201,114 116 9167,9 45 4588,", "81 117 2141,164 16 2219,134 84 1047,53 60 1491,", "81 58 9661,13 157 2128,102 89 6161,165 171 8506,", "165 104 9741,123 93 4673,136 88 2081,57 19 4609,", "114 154 8177,60 22 3585,95 26 7478,73 5 5900,", "84 52 1075,106 128 533,39 76 4737,132 149 6344,", "57 139 4263,69 99 9701,78 11 9494,115 21 5553,", "165 146 2433,4 28 6916,50 64 6919,88 55 8767,", "151 162 4670,0 87 1993,170 20 7838,147 109 8747,", "145 51 2483,159 31 1536,47 24 6118"};
    int K = 70;
    int L = 2079;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 973385;
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    int N = 161;
    vector<string> roads = {"106 79 9996,149 50 7471,140 99 7561,8 136 1488,", "160 128 7341,71 0 471,85 132 9600,113 62 3381,", "65 114 8167,120 159 8026,36 78 518,18 50 5688,", "15 27 404,5 104 5921,54 70 1616,15 151 4880,", "13 105 3401,44 4 4656,141 138 7660,82 10 6290,", "124 61 2623,37 147 1622,15 111 3063,116 129 8397,", "89 135 7795,16 7 683,75 145 2521,14 78 6090,", "36 106 7597,139 42 59,22 10 9449,146 23 3118,", "88 108 645,32 39 6161,113 115 808,74 72 923,", "45 57 9219,82 109 3537,160 1 2468,140 11 4184,", "146 17 9040,79 69 1824,39 3 167,67 143 2117,", "119 90 1386,135 124 1899,85 134 357,118 132 873,", "130 17 6256,108 125 2282,26 71 8288,78 150 2244,", "3 109 908,32 28 9430,96 102 8311,74 77 8543,", "68 98 337,51 98 9271,63 24 562,43 0 6601,", "9 48 7245,47 11 3624,77 33 887,74 0 1338,", "145 95 3379,127 51 3381,55 91 4931,85 89 9193,", "12 69 4220,56 151 4145,56 50 6203,49 69 4801,", "53 152 3209,55 131 1294,115 153 6591,6 135 8771,", "49 40 8358,63 83 387,4 118 4012,73 125 8940,", "158 20 2674,48 72 4785,147 102 8791,104 95 2708,", "95 51 3704,44 119 5266,42 144 366,31 96 73,", "47 139 4026,73 111 1071,111 138 5528,62 38 2247,", "8 109 7250,4 22 9495,136 15 5971,101 37 1785,", "28 140 5095,74 131 5903,83 138 4683,138 81 9403,", "154 129 2610,45 73 6877,25 140 2793,64 72 2689,", "64 38 6846,127 9 4604,118 96 9203,14 64 8188,", "149 137 2529,118 40 4738,122 36 3460,5 65 6023,", "129 17 8745,64 160 9481,152 4 3065,102 2 9535,", "86 109 2315,7 79 7578,87 61 2469,147 148 3264,", "64 13 9095,81 143 711,41 10 7684,111 107 7341,", "155 148 4939,120 85 3887,98 59 9510,151 29 5759,", "20 132 8936,103 132 3117,25 35 3785,73 58 3305,", "43 19 724,123 160 4370,50 52 586,114 146 7916,", "60 100 3907,122 80 3401,13 121 5216,23 133 5160,", "71 76 6430,3 100 6832,132 94 9826,127 66 6498,", "119 126 4580,5 84 2656,115 92 3007,57 70 1316,", "37 97 8005,65 156 7375,75 142 9101,125 117 7989,", "64 46 5309,62 110 6583,93 130 5228,101 112 8157,", "141 30 5330,42 157 8372,92 34 6913,83 21 4677"};
    int K = 93;
    int L = 7025;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1030380;
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    int N = 188;
    vector<string> roads = {"43 156 9592,53 128 974,58 127 411,57 29 1533,", "165 93 4654,144 184 1630,98 21 4423,123 94 6958,", "4 177 7270,45 152 1207,129 17 660,24 135 5320,", "144 15 1751,110 86 9336,178 2 1736,136 10 6674,", "91 68 4989,169 136 9478,55 84 2348,150 120 2834,", "70 67 7113,159 99 2418,128 66 6289,160 30 9285,", "118 82 4120,32 17 6254,159 78 5712,123 182 9504,", "153 0 1669,0 53 3643,93 187 5767,23 36 4983,", "1 156 451,168 123 6013,146 91 3605,29 34 1993,", "130 81 4056,30 140 2277,125 51 138,39 14 5536,", "26 78 6076,79 21 9699,132 165 677,140 5 4112,", "44 105 5325,170 40 4020,28 42 4024,37 179 8079,", "72 71 962,112 67 1401,20 137 974,164 169 5372,", "105 142 7326,31 158 8878,117 34 2144,184 85 3068,", "28 186 6759,167 136 2503,165 178 5246,62 23 5147,", "117 30 3398,107 183 1670,52 20 549,169 187 5006,", "23 43 1621,87 58 3183,67 128 8394,134 68 1827,", "55 44 9688,5 152 3108,111 140 6440,172 56 86,", "123 95 5497,75 138 1716,36 83 8015,180 125 6048,", "92 175 69,125 119 1641,27 47 7101,161 112 2080,", "96 91 3796,133 104 408,119 145 4548,64 173 5297,", "101 105 3446,65 24 5668,130 114 2307,147 111 4983,", "144 131 1646,170 68 6798,168 28 7903,183 164 9786,", "147 118 9869,11 173 859,114 49 5597,42 37 1704,", "183 87 8163,164 55 533,148 101 44,109 139 2454,", "155 106 5653,64 181 7214,90 40 8296,166 59 9820,", "16 166 698,1 132 1915,88 149 7633,71 28 7848,", "104 170 4925,184 142 8608,97 51 6162,186 84 299,", "146 14 8360,105 118 7221,129 21 8328,76 166 30,", "68 99 2177,130 166 1816,155 69 1540,29 74 1334,", "166 39 598,81 168 8285,140 153 1684,102 12 2795,", "59 155 8463,155 47 8543,7 98 9482,170 31 1194,", "93 20 9843,47 46 9150,129 122 1197,31 119 1115,", "66 157 932,77 118 9692,87 35 5818,94 33 9819,", "37 12 8764,72 86 4649,15 177 4469,9 19 6498,", "149 57 1732,100 72 4514,2 139 9257,60 148 8121,", "125 120 2493,9 11 7968,164 7 1677,11 103 1012,", "5 56 5993,81 135 5415,15 185 680,24 80 2790,", "38 48 5865,144 181 4479,39 151 5641,40 50 8926,", "120 41 195,72 108 4589,0 54 4931,39 162 9935,", "132 22 3014,145 38 8588,21 75 8943,15 171 5680,", "5 163 8368,137 6 4149,185 143 1894,67 126 3282,", "137 3 6798,49 175 8887,76 154 3193,62 13 1802,", "35 8 1724,128 174 3173,60 113 8896,102 115 792,", "43 18 5072,3 73 5957,62 63 1336,13 61 7040,", "142 89 1002,172 176 9119,163 116 8558,81 121 9520,", "96 25 3771,32 141 1117,59 124 532"};
    int K = 65;
    int L = 2507;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 983843;
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    int N = 117;
    vector<string> roads = {"35 49 7446,48 75 7668,95 26 384,45 79 2041,", "38 76 674,21 55 8464,3 14 4046,33 10 9320,", "80 66 2870,73 29 8141,4 2 5165,43 90 1258,", "97 85 80,8 20 1837,62 34 5438,39 99 1015,", "32 65 2110,101 64 7371,22 107 3805,87 116 5446,", "21 91 1379,83 91 6273,27 68 704,97 106 1122,", "22 45 502,23 111 7306,7 34 2437,31 4 7838,", "73 8 912,108 54 2057,103 51 3469,105 83 5963,", "72 110 1776,31 106 5216,91 95 9706,111 40 7691,", "72 22 6562,44 116 4760,40 39 6223,13 57 52,", "88 107 1320,108 43 9623,76 80 8113,66 41 9095,", "70 29 7302,112 22 320,50 19 4911,9 78 3262,", "26 38 7298,77 94 4111,72 0 633,47 33 1357,", "71 22 9298,88 111 7033,45 24 11,67 25 8408,", "41 5 1549,65 107 2658,12 67 7550,94 56 6063,", "102 93 6101,84 62 5842,47 68 8937,7 22 4900,", "29 87 6054,96 106 8215,9 24 6385,45 56 9519,", "69 48 3850,46 78 989,31 86 140,81 20 5996,", "66 10 8580,49 30 1248,111 61 2034,42 60 59,", "57 79 7398,105 77 296,50 64 1003,113 91 7289,", "87 35 6910,45 48 9110,16 103 3510,96 52 1984,", "6 26 4870,91 17 8242,52 13 9209,85 114 2441,", "10 12 7064,5 74 5323,4 63 2061,110 81 6632,", "31 59 7741,92 105 8402,104 84 9578,98 58 9443,", "18 0 3133,10 42 1264,58 103 503,44 102 3964,", "83 82 7248,37 94 2994,89 71 9411,6 43 7667,", "81 11 1343,13 53 9337,36 95 1888,42 3 8127,", "76 109 8956,52 100 7048,114 51 6163,86 15 323,", "90 64 9363,28 59 5111,85 1 4327,30 115 1910"};
    int K = 1;
    int L = 96;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 976295;
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    int N = 170;
    vector<string> roads = {"81 103 6478,105 44 3439,59 57 7225,155 120 8265,", "151 104 2258,8 140 8125,111 62 8408,10 92 6097,", "93 78 9185,106 104 8871,117 24 1768,154 14 9534,", "128 151 6383,24 50 8155,85 59 667,115 130 2478,", "57 21 9553,161 54 5096,80 150 3697,96 3 5236,", "33 31 7138,152 169 8076,124 169 8476,69 160 1502,", "167 104 2576,134 31 4922,70 63 8091,9 132 4889,", "14 119 1652,111 85 7581,89 46 9831,3 21 6606,", "50 65 7226,17 94 9342,58 145 3868,103 50 1898,", "94 16 7992,49 0 6911,162 68 5417,45 167 1445,", "111 64 2057,46 7 4751,108 57 3970,81 6 8551,", "119 133 9155,128 93 3470,44 7 977,132 95 6575,", "59 156 5391,74 84 6410,44 142 2251,147 14 5475,", "167 7 5382,133 5 5896,91 146 7904,70 96 7976,", "94 66 4331,51 36 2614,114 31 5982,96 40 4780,", "85 1 2041,92 67 6503,70 139 4826,83 92 3757,", "98 74 947,30 137 7207,91 68 8691,132 162 6141,", "132 139 9263,133 20 3515,74 14 4374,150 27 7962,", "165 128 4779,57 114 7141,125 22 427,148 134 796,", "104 72 5837,6 158 6368,110 155 7201,39 140 6290,", "83 136 2693,23 165 1051,54 71 2092,49 66 2382,", "12 3 6811,54 82 5970,9 7 1198,88 36 3058,", "125 81 7656,69 164 6326,88 132 3555,43 121 7690,", "44 30 2729,91 149 7414,70 168 8842,5 156 1519,", "120 38 2566,51 120 3272,4 111 6346,4 25 21,", "144 162 8176,89 61 8576,40 153 3991,24 70 8566,", "82 67 2709,2 102 3874,20 26 1852,41 25 3917,", "32 88 2521,30 140 904,77 74 7136,16 140 6062,", "153 118 459,43 111 7674,12 92 79,37 72 5926,", "121 86 9672,55 140 3546,125 164 9622,111 27 9941,", "107 159 4249,116 92 3543,84 143 357,115 114 3162,", "115 52 4391,64 29 7006,15 16 785,151 135 1503,", "66 157 4647,124 136 9985,45 34 1447,131 102 5406,", "35 44 4545,100 144 3165,31 101 1718,81 11 2776,", "116 19 3382,36 102 2775,143 129 8881,9 145 6283,", "131 47 1390,146 97 1191,2 126 6599,8 127 2193,", "10 99 2053,139 90 5834,16 13 7112,9 18 3430,", "70 107 1742,58 42 5794,156 112 6573,51 56 3989,", "89 48 7271,147 138 2634,25 76 1517,66 123 4582,", "166 64 3882,120 60 9825,10 28 1152,10 122 4357,", "115 79 2423,52 141 2414,85 113 5388,111 109 4777,", "48 53 7126,136 75 1588,133 73 1859,46 163 2479,", "148 87 8257"};
    int K = 1;
    int L = 727;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1532336;
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    int N = 179;
    vector<string> roads = {"49 99 1296,121 131 6252,153 34 9227,152 103 8234,", "102 138 1244,155 25 5057,119 78 9712,82 56 8316,", "173 0 597,109 25 5000,125 23 5235,123 166 7757,", "134 123 8006,147 117 1242,28 71 9128,130 114 4756,", "22 67 3472,147 112 7348,138 127 8167,30 159 573,", "126 47 6982,30 61 3885,151 71 8690,130 132 4237,", "64 110 2134,148 66 2992,36 161 4219,11 83 7723,", "129 60 8610,25 154 6519,61 11 4180,73 101 3596,", "165 107 2801,73 53 6554,17 75 6525,98 171 1787,", "178 129 4045,6 154 5473,10 85 6083,11 42 6505,", "170 74 6882,111 110 966,20 102 3778,15 84 5649,", "158 119 5151,13 98 7739,117 150 2892,99 17 9776,", "58 69 353,103 12 7253,42 157 225,18 148 2010,", "163 57 2571,52 110 5680,130 134 881,96 102 3249,", "125 5 9801,93 65 9680,131 135 5352,63 98 7207,", "64 138 3892,143 122 4802,33 69 8427,47 85 6881,", "22 164 2626,63 82 7284,89 98 480,83 154 4639,", "28 54 8030,78 115 8021,87 14 4660,142 118 3002,", "133 105 3280,104 57 9794,178 81 2694,166 124 5291,", "111 73 705,36 25 7823,132 107 8993,157 69 2526,", "178 69 1108,82 173 8930,13 104 6810,32 116 7147,", "133 65 9781,19 7 3968,55 42 5204,61 101 3567,", "85 56 1402,91 65 6588,177 100 7397,168 1 5131,", "83 15 1130,23 128 9674,133 59 9108,26 1 4809,", "64 17 7696,48 92 2216,65 27 6860,36 140 9394,", "2 62 1748,55 82 7451,120 138 5201,128 17 7722,", "135 5 948,86 7 9031,171 134 7792,105 117 4005,", "171 143 8505,171 97 1978,169 108 658,51 111 5067,", "95 159 4891,58 142 9543,82 26 5350,7 95 6195,", "30 45 4296,69 167 8869,119 16 7824,26 112 8906,", "42 162 6400,145 119 4529,96 175 992,71 143 2998,", "134 144 4600,62 18 9542,96 92 8565,24 81 9699,", "140 72 7779,163 2 8464,63 43 1643,53 80 6631,", "72 160 7124,156 73 4297,78 28 8462,45 170 7222,", "161 67 4280,13 108 3486,4 155 1300,158 176 2734,", "172 114 5915,38 9 2326,137 33 4600,39 171 6984,", "26 46 6833,82 136 5153,126 68 5351,90 144 7079,", "46 174 2072,97 40 9784,158 21 4957,59 32 872,", "41 152 2299,173 77 1898,94 149 8963,15 29 2213,", "2 152 7036,12 141 6412,75 177 5927,114 44 3226,", "175 37 2814,46 34 7031,117 106 5721,115 35 8921,", "164 3 3543,51 76 5601,80 146 1048,153 113 8983,", "57 88 544,51 14 6080,164 9 6524,171 139 4884,", "38 8 1343,114 149 3892,32 70 7732,67 31 4417,", "46 50 9905,77 79 4223"};
    int K = 1;
    int L = 5001;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1744923;
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    int N = 136;
    vector<string> roads = {"7 126 3746,77 78 670,103 11 117,122 14 7116,", "8 39 4161,95 17 510,50 63 3985,116 106 9934,", "55 96 5866,58 117 5577,132 111 7072,91 132 4786,", "63 11 4412,72 94 2542,19 132 5106,92 34 5487,", "80 99 4602,126 46 2723,79 45 4944,4 33 3070,", "82 30 7678,60 110 2000,100 10 4042,68 4 75,", "6 80 3749,73 76 6727,15 36 9457,46 110 5830,", "45 33 5759,132 110 8037,76 33 336,3 37 2543,", "23 64 7133,35 52 3105,53 116 7287,51 128 6162,", "41 100 4325,36 22 5400,101 18 5306,93 68 8793,", "11 105 4242,36 102 5056,4 85 1631,41 38 9531,", "29 82 3448,117 131 9290,112 115 5681,16 36 3662,", "76 66 2682,9 127 9539,80 71 6731,55 6 8266,", "123 106 8502,89 2 4708,106 65 218,8 0 1804,", "98 86 3893,133 73 8689,72 33 9480,12 124 3648,", "61 0 5476,46 74 1291,90 73 543,101 105 6460,", "90 50 4153,43 90 7949,87 44 9388,18 24 7725,", "21 26 5212,27 101 5334,37 29 1601,92 112 3336,", "7 92 9728,86 127 6215,112 119 6762,73 38 1046,", "91 1 5951,131 9 1200,73 57 8074,64 79 3829,", "87 79 1850,132 47 8284,44 53 1576,17 124 34,", "50 25 2871,40 20 2196,127 11 4279,109 58 9617,", "67 1 3839,122 133 2169,59 71 4463,133 114 5405,", "91 17 5259,81 120 7760,122 48 7578,15 29 3744,", "132 26 8919,131 69 6577,24 89 2065,131 59 7800,", "58 36 5870,18 54 5333,6 49 7345,95 10 4260,", "48 35 5331,70 80 274,59 121 3263,74 135 1734,", "106 125 9931,38 8 8469,119 75 3858,18 113 3626,", "15 62 1633,88 42 4331,114 120 3919,107 46 2102,", "127 31 5257,33 118 7227,21 28 2821,2 104 1864,", "91 128 7427,124 40 7629,63 88 2830,42 83 4953,", "61 134 2634,104 84 2622,4 56 480,102 130 3586,", "109 97 1754,24 32 5706,22 78 5948,93 13 3351,", "40 108 5586,102 5 2719,23 129 7438"};
    int K = 1;
    int L = 6977;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1159103;
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    int N = 154;
    vector<string> roads = {"135 66 3346,117 145 6565,77 132 111,44 34 7152,", "143 69 9824,23 50 1781,102 135 1677,62 11 8685,", "5 0 4341,39 84 3118,118 11 1855,113 8 1142,", "112 116 5682,68 15 7245,126 123 2790,13 51 2353,", "41 13 8059,7 72 6231,52 131 1710,12 137 5000,", "69 138 3106,48 29 4300,135 115 150,4 3 8032,", "124 30 8724,130 2 1852,27 94 2945,68 8 6354,", "121 118 5819,128 3 9128,46 17 1756,54 60 6906,", "91 72 8990,50 114 3835,95 88 9612,98 102 1268,", "101 56 6023,54 110 1521,130 149 7392,72 149 6568,", "131 55 9844,107 56 4027,10 78 1173,136 66 4644,", "39 90 8331,3 51 8285,6 151 9753,58 21 7893,", "91 147 2983,1 30 554,126 145 5426,35 0 8564,", "41 83 4896,93 118 9827,9 14 3898,133 141 9752,", "86 143 1360,110 148 1768,7 24 4076,89 28 154,", "62 100 3711,22 69 8720,48 121 5351,13 132 5218,", "115 122 4291,103 30 5189,35 39 4208,150 66 8186,", "47 12 8582,65 98 9001,27 135 3127,113 36 482,", "30 121 4467,153 144 8003,89 17 1934,82 117 8587,", "104 47 3480,70 26 3478,151 125 6820,94 1 5423,", "92 127 6659,131 124 9529,60 43 7141,104 144 3504,", "146 118 6830,139 132 5098,137 99 3334,68 135 1433,", "28 106 9133,22 88 6674,40 32 2681,120 111 1942,", "18 85 7570,56 115 4553,64 101 8401,85 23 3035,", "136 12 4564,124 45 7404,126 83 9452,38 56 364,", "38 19 2149,52 91 7659,62 40 6380,25 76 2490,", "78 114 3896,5 45 4137,11 53 760,28 69 1887,", "28 45 7234,80 55 4868,125 61 6369,145 45 6089,", "145 14 3151,100 148 9463,128 73 3129,148 76 6039,", "151 64 2625,65 75 1505,2 120 1310,51 20 5773,", "87 39 125,3 142 4406,87 96 5379,50 60 5519,", "114 129 2621,103 67 9874,100 58 8797,30 133 2570,", "38 34 5873,101 127 9261,131 152 9146,48 63 5457,", "27 49 5864,13 116 9578,40 57 3022,97 33 5932,", "82 16 1634,138 70 4895,49 71 3229,108 125 4050,", "89 31 6124,98 134 3070,47 105 1212,20 42 8,", "7 59 8544,23 97 9041,36 140 1479,101 81 9383,", "17 37 9343,50 119 7108,61 74 3760,80 109 7292,", "96 79 4797"};
    int K = 1;
    int L = 1736;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1428365;
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    int N = 141;
    vector<string> roads = {"77 97 10,139 90 6,19 43 2,86 1 6,", "23 106 3,138 49 8,125 129 5,10 31 9,", "106 104 9,124 127 4,124 51 5,121 56 9,", "131 26 5,51 46 6,26 21 9,118 117 7,", "113 109 9,46 98 5,114 109 5,40 6 5,", "106 135 4,132 75 8,109 10 3,75 61 10,", "13 2 10,97 71 6,131 23 4,24 136 10,", "5 112 2,72 77 10,35 119 9,64 36 9,", "40 73 9,89 122 5,87 50 9,54 49 5,", "91 78 9,89 72 9,56 114 6,21 101 5,", "102 78 7,12 11 2,60 96 10,89 69 4,", "28 37 10,82 87 3,132 39 5,65 49 10,", "113 140 2,113 9 3,12 57 2,128 127 10,", "89 3 2,72 75 1,95 123 3,5 113 2,", "50 73 9,90 31 1,95 82 4,53 97 8,", "40 7 7,42 7 4,60 75 6,87 86 8,", "140 111 1,110 122 8,103 14 2,23 120 9,", "20 77 4,139 47 9,99 1 2,114 15 2,", "70 92 4,64 127 7,75 85 7,115 131 6,", "128 129 1,136 8 7,26 5 10,20 126 6,", "72 36 7,61 65 3,26 97 10,29 58 4,", "41 134 2,91 118 7,0 78 3,133 68 2,", "31 1 8,93 53 8,3 11 8,55 87 1,", "120 78 5,60 41 2,9 19 1,18 121 10,", "83 123 3,91 29 5,111 130 6,14 119 10,", "35 62 10,122 80 2,126 35 3,140 81 1,", "62 88 6,33 18 6,61 107 1,0 45 6,", "101 68 8,84 105 9,119 8 9,103 76 5,", "107 108 4,101 70 9,60 25 5,23 2 3,", "60 94 1,10 63 5,7 27 6,99 105 3,", "101 32 3,103 34 9,114 66 5,110 4 10,", "79 13 4,63 28 1,51 74 7,107 52 9,", "121 22 3,26 67 5,130 17 8,79 48 10,", "48 16 4,140 116 4,132 59 4,16 44 7,", "118 100 7,36 137 5,128 30 3,25 38 7"};
    int K = 95;
    int L = 9947;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1598;
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    int N = 137;
    vector<string> roads = {"28 23 3,4 72 5,11 94 6,129 75 9,", "19 122 9,129 92 2,55 25 1,80 63 9,", "124 48 2,17 3 2,103 100 10,44 110 2,", "30 14 2,9 130 9,80 52 9,102 65 1,", "13 31 9,8 135 3,59 5 10,2 7 8,", "125 29 9,123 32 2,23 103 7,99 31 4,", "30 7 1,32 90 4,69 37 2,98 133 3,", "26 0 4,66 44 10,117 27 2,105 85 5,", "107 56 1,60 115 2,59 112 4,109 119 7,", "64 53 4,9 86 9,6 128 4,70 89 8,", "46 20 7,41 122 5,61 13 9,22 26 2,", "101 119 8,85 132 7,40 77 3,38 52 7,", "91 36 2,57 70 9,66 70 5,54 4 7,", "98 70 10,93 31 9,5 79 10,53 77 5,", "81 44 8,45 48 1,51 94 1,16 40 6,", "111 107 4,91 121 1,133 128 4,105 112 6,", "103 57 7,7 85 5,78 46 5,119 104 1,", "46 93 8,61 136 7,90 18 7,3 81 5,", "111 77 3,84 129 10,133 97 10,95 22 7,", "16 88 9,110 56 10,41 16 4,82 68 3,", "121 99 6,74 122 9,113 41 2,64 25 8,", "12 115 5,1 112 2,46 133 5,54 65 9,", "26 88 8,50 74 10,21 101 1,89 71 4,", "90 100 5,60 41 2,133 114 7,37 107 7,", "15 22 7,27 136 3,69 104 1,126 96 8,", "98 2 7,113 63 6,118 99 3,2 108 4,", "8 131 6,61 11 4,27 68 9,45 108 10,", "76 101 3,113 47 10,50 9 9,68 73 2,", "70 42 3,96 44 9,92 98 3,3 62 7,", "97 4 5,107 135 6,84 43 1,116 78 5,", "113 87 5,99 106 4,83 3 9,25 134 9,", "23 39 1,5 29 2,70 49 3,46 127 9,", "10 105 9,132 24 9,14 67 5,120 22 10,", "74 58 7,11 35 10,83 33 8,15 34 10"};
    int K = 69;
    int L = 9733;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1542;
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test67() {
    int N = 141;
    vector<string> roads = {"43 118 1,8 112 7,36 35 7,77 37 5,", "16 41 7,91 2 6,15 50 8,83 20 3,", "41 82 8,36 69 4,78 40 2,38 21 8,", "70 128 6,61 65 9,89 83 4,49 53 6,", "36 129 10,1 120 2,140 7 3,30 12 3,", "5 3 2,75 123 9,63 112 8,127 55 10,", "106 48 6,83 82 1,9 10 1,112 47 2,", "7 57 7,87 39 1,1 76 3,106 9 7,", "25 68 6,72 76 8,49 68 10,126 129 6,", "74 11 9,101 61 5,106 53 10,108 137 1,", "57 97 10,55 65 9,13 125 7,3 104 4,", "3 1 4,60 80 6,32 9 8,2 110 1,", "95 136 5,57 9 7,57 54 6,59 102 6,", "73 92 10,126 91 8,113 137 2,88 34 1,", "3 20 3,53 98 2,6 139 4,74 30 1,", "119 30 3,49 50 3,90 19 5,117 109 7,", "16 96 2,26 98 7,58 126 6,53 100 9,", "13 60 5,7 131 3,62 85 8,118 57 3,", "123 79 1,31 12 9,102 140 10,51 61 7,", "107 52 1,64 101 8,75 77 9,54 128 7,", "48 5 9,131 116 7,4 133 1,63 123 3,", "139 18 3,137 14 6,88 125 5,127 28 2,", "49 34 3,38 115 1,94 93 1,41 58 10,", "57 105 9,99 19 1,130 24 10,117 130 7,", "108 126 4,28 78 10,26 136 8,29 30 1,", "66 124 2,96 61 10,122 93 8,42 22 2,", "78 94 8,34 19 4,55 138 6,11 95 8,", "33 116 3,16 130 9,3 22 6,118 124 8,", "103 9 9,45 40 2,139 97 7,78 4 5,", "96 8 4,90 52 1,40 0 1,30 85 3,", "113 44 9,17 28 3,104 132 4,81 98 6,", "3 84 7,110 86 3,64 39 8,82 21 5,", "125 111 6,54 67 9,48 135 10,32 121 7,", "34 46 4,51 27 4,9 23 2,128 92 4,", "26 134 9,108 114 7,138 56 9,26 71 8"};
    int K = 62;
    int L = 9821;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1538;
    if(result == expected) {
        cout << "Test Case 67: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 67: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test68() {
    int N = 190;
    vector<string> roads = {"82 76 8,121 140 4,160 187 8,167 182 1,", "10 77 9,172 103 7,12 86 8,129 135 7,", "179 117 7,111 107 5,117 18 8,44 178 3,", "69 188 6,121 90 4,177 149 4,91 19 6,", "72 76 2,4 183 7,29 70 4,46 15 2,", "187 165 6,164 6 3,176 35 2,179 55 9,", "52 62 5,179 22 1,54 80 6,53 146 10,", "49 158 6,110 78 1,159 129 5,7 31 9,", "20 90 2,35 48 9,65 4 4,66 42 10,", "142 171 4,11 88 6,141 160 5,6 123 9,", "34 37 5,173 114 7,44 88 8,44 92 8,", "89 20 4,83 101 2,131 62 6,168 10 4,", "134 87 2,147 98 5,125 145 1,103 31 1,", "44 132 1,22 26 3,185 108 6,181 135 3,", "36 184 2,25 143 5,34 133 3,45 31 7,", "102 21 2,108 111 8,89 116 2,90 169 4,", "139 48 5,175 140 6,26 19 6,69 46 6,", "19 85 10,86 63 10,26 94 1,142 120 8,", "48 127 9,160 176 7,93 139 2,20 113 7,", "62 44 4,80 168 4,173 122 8,133 31 9,", "178 39 7,93 77 9,3 61 4,144 188 4,", "42 68 7,65 176 10,84 70 1,69 59 8,", "77 120 9,29 54 2,171 79 1,120 172 9,", "113 48 7,101 173 3,173 158 10,146 13 3,", "16 33 2,185 70 7,162 98 4,152 4 3,", "142 3 9,0 9 1,11 81 9,171 76 6,", "154 27 8,140 147 9,158 36 6,87 8 10,", "9 27 3,89 11 5,79 143 5,150 134 7,", "44 101 10,106 53 3,74 53 10,114 58 5,", "151 12 4,58 85 9,144 28 8,29 96 6,", "135 136 2,143 68 10,39 104 1,57 34 2,", "11 130 8,14 72 9,42 99 9,140 112 1,", "81 163 2,65 86 2,185 46 5,15 47 6,", "3 5 9,6 12 4,102 0 4,88 27 10,", "67 123 7,63 174 2,100 91 2,23 106 3,", "153 28 6,176 145 9,37 129 7,83 161 2,", "94 1 7,25 180 10,76 40 5,33 151 9,", "164 64 5,19 138 1,115 105 6,183 148 9,", "175 97 9,35 13 6,39 105 1,20 157 1,", "132 38 2,75 94 9,151 8 10,36 128 6,", "74 43 9,177 50 10,3 126 8,36 167 8,", "2 28 2,14 78 5,133 155 7,29 119 6,", "38 56 4,139 118 5,122 17 1,83 189 5,", "75 60 6,57 95 10,81 177 10,68 109 7,", "131 186 10,1 156 4,89 71 6,160 124 4,", "21 166 1,130 32 3,43 24 2,94 30 6,", "10 73 7,75 51 4,27 170 6,99 41 10,", "46 137 4"};
    int K = 34;
    int L = 9640;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 2108;
    if(result == expected) {
        cout << "Test Case 68: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 68: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test69() {
    int N = 195;
    vector<string> roads = {"172 86 10,25 126 3,101 94 6,140 126 9,", "125 71 9,164 86 10,71 131 4,72 53 8,", "99 111 2,187 71 4,67 37 8,66 161 10,", "94 166 5,188 22 4,105 83 8,107 98 6,", "55 83 7,123 34 4,47 155 6,7 88 8,", "96 13 6,12 48 9,70 21 9,65 25 10,", "78 58 2,85 131 2,135 142 7,102 113 2,", "136 167 4,114 139 7,142 125 4,0 182 2,", "138 66 2,169 102 4,107 75 9,117 182 10,", "179 134 6,185 149 6,71 2 5,77 72 10,", "39 75 3,98 132 6,45 125 6,44 179 9,", "112 163 6,84 42 5,162 182 6,66 27 2,", "80 40 10,147 54 6,158 16 3,153 173 4,", "142 164 3,74 46 1,29 101 6,146 131 3,", "149 121 3,11 177 3,186 17 6,123 3 3,", "135 175 9,142 193 3,27 23 2,17 121 10,", "114 29 2,104 150 5,69 130 7,174 139 7,", "41 31 4,117 123 2,166 168 1,186 49 2,", "58 60 7,119 153 10,124 177 7,17 66 9,", "132 50 7,134 64 3,70 124 10,101 128 2,", "13 105 2,137 151 10,123 191 6,66 165 7,", "168 15 2,156 66 2,39 9 1,172 159 7,", "183 86 9,81 41 4,45 166 2,182 130 1,", "181 175 5,104 192 9,94 55 1,74 43 7,", "108 175 2,17 182 5,134 62 9,3 140 7,", "171 96 5,187 60 7,180 122 9,177 142 2,", "137 31 8,73 186 8,93 22 8,47 110 10,", "193 69 1,115 29 2,100 93 4,141 157 1,", "89 142 10,84 153 2,67 51 4,194 136 6,", "177 132 1,142 67 5,111 41 8,20 168 8,", "52 107 5,54 64 9,125 81 7,125 155 3,", "26 89 2,114 87 7,108 158 7,96 42 10,", "146 76 3,8 14 6,185 68 9,137 10 7,", "117 100 4,187 6 3,159 18 3,139 176 6,", "22 44 9,26 113 10,99 12 10,16 170 6,", "11 43 9,190 188 10,158 178 10,166 106 5,", "121 152 9,156 77 5,25 184 7,27 122 4,", "105 118 7,21 79 4,142 30 6,151 19 7,", "92 22 10,17 80 5,130 163 10,12 59 2,", "173 90 4,6 97 8,18 35 5,159 167 2,", "92 1 4,98 104 5,48 189 5,167 14 6,", "177 61 9,19 95 9,193 63 6,173 33 4,", "71 143 9,41 116 7,97 57 3,45 109 6,", "172 145 2,134 4 8,13 133 10,66 144 9,", "39 127 4,98 148 2,71 36 3,115 129 1,", "17 157 10,36 91 4,5 60 4,81 88 1,", "42 28 9,58 154 4,188 103 4,79 56 9,", "171 120 4,75 160 8,7 38 3,55 32 10,", "58 82 7,89 24 5"};
    int K = 66;
    int L = 9851;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 2212;
    if(result == expected) {
        cout << "Test Case 69: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 69: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test70() {
    int N = 139;
    vector<string> roads = {"13 39 620,102 14 2060,72 118 6551,59 42 2360,", "102 55 1269,87 107 1802,85 112 4968,136 69 8779,", "117 9 744,122 108 5427,108 44 6390,6 117 1417,", "107 99 3549,129 93 189,115 123 569,124 135 5285,", "112 111 4669,37 8 2538,1 18 6046,87 55 5940,", "107 64 6168,133 136 9509,43 135 1345,69 35 1847,", "106 102 9283,96 88 7771,119 43 4430,131 112 4956,", "119 60 9578,38 52 8690,92 43 6341,23 4 7564,", "84 7 3756,82 123 2075,84 46 8548,110 5 1257,", "106 48 6418,118 111 2480,11 105 149,80 59 6123,", "7 132 3533,60 113 8669,68 16 1977,52 27 1247,", "37 118 7654,133 59 3698,41 10 2414,38 91 4912,", "25 3 5820,51 128 4792,66 98 18,75 134 3190,", "36 122 7954,7 101 3301,35 49 7273,76 34 360,", "21 65 3413,10 61 8729,129 59 8302,69 24 1775,", "52 67 3487,136 77 7681,126 129 8767,7 50 7493,", "44 1 6781,109 101 5156,5 134 5611,55 66 1294,", "56 78 7781,56 77 2606,128 36 1897,64 49 8304,", "121 88 3923,86 103 2423,25 117 6586,120 4 936,", "76 19 2274,43 7 7340,30 56 5523,61 65 1588,", "99 60 8126,74 61 9202,120 88 8085,4 22 9888,", "27 59 4098,97 58 2514,35 117 4697,40 115 5948,", "104 7 161,25 34 5857,18 41 5939,88 124 7426,", "137 112 9093,108 7 5108,129 115 1193,56 28 9241,", "133 37 3621,116 9 4352,8 62 8459,17 11 5182,", "77 125 42,42 114 9473,115 13 38,82 12 3911,", "93 47 854,124 71 1801,11 63 4804,43 86 2186,", "132 130 4862,54 123 9539,87 5 3165,10 16 9954,", "50 29 5379,64 105 6903,59 53 7228,56 58 5167,", "66 81 7648,23 95 2699,134 138 9007,45 13 5845,", "85 20 832,43 83 4580,61 90 1946,51 32 8660,", "86 94 9932,99 89 7167,116 100 980,13 2 1612,", "83 0 4756,22 57 885,63 79 8135,135 31 2125,", "45 33 7447,118 70 8378,21 127 4773,4 26 4694,", "12 15 2687,17 73 3357"};
    int K = 76;
    int L = 1590;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 731977;
    if(result == expected) {
        cout << "Test Case 70: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 70: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test71() {
    int N = 122;
    vector<string> roads = {"23 28 8678,20 46 1522,80 67 9176,28 98 3342,", "42 40 3274,113 117 2515,87 48 794,70 11 5033,", "33 10 4424,83 92 6010,7 20 941,52 6 7340,", "59 110 536,99 32 513,30 23 6744,42 44 4835,", "58 82 6261,54 34 3330,59 83 9529,66 81 9731,", "101 85 6476,64 60 2428,70 71 3512,76 50 5836,", "10 9 6287,66 55 1394,60 95 8257,84 36 7528,", "32 103 6360,101 119 9613,72 105 9844,111 83 6334,", "64 83 7840,100 46 9020,65 47 8166,49 74 2872,", "112 31 8974,91 105 1572,72 49 9774,64 69 2314,", "55 48 465,48 70 6942,75 82 5046,12 15 9154,", "68 5 9219,39 69 1986,86 11 1556,31 13 928,", "84 8 199,60 121 1898,66 42 3683,115 35 431,", "120 3 9593,67 37 7053,51 46 6439,7 39 5393,", "39 63 2354,34 41 6186,120 72 2768,30 91 5389,", "32 40 3252,34 12 1915,32 108 1760,36 88 7331,", "58 116 200,33 40 7921,2 72 8543,117 62 2964,", "63 40 4208,105 81 1521,84 78 1701,16 91 5383,", "7 18 8326,5 41 4005,94 95 195,2 14 2967,", "10 45 4515,55 5 7515,82 63 3154,108 37 9803,", "81 101 5975,67 107 7380,106 74 6458,9 62 8805,", "119 50 3742,32 43 5183,25 60 5721,28 38 3130,", "62 24 6547,61 78 1999,120 118 9114,69 8 4423,", "89 100 9301,9 31 293,25 115 7207,45 77 1837,", "65 121 445,121 96 6100,18 17 4507,32 22 8659,", "57 111 7902,20 0 7642,69 6 4406,63 56 3754,", "108 73 2719,87 90 5833,69 19 1264,61 26 4969,", "95 1 2229,89 29 7380,68 97 960,82 53 9190,", "65 27 8940,104 88 1540,74 93 9269,117 114 4003,", "62 21 746,18 4 8179,81 109 1357,116 102 3070,", "23 79 8962"};
    int K = 0;
    int L = 6938;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1207860;
    if(result == expected) {
        cout << "Test Case 71: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 71: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test72() {
    int N = 143;
    vector<string> roads = {"96 61 5186,88 49 7156,20 54 6192,130 125 2697,", "106 17 1869,72 26 7214,57 115 7232,110 39 3476,", "48 97 2625,135 6 7421,103 4 9782,44 54 6366,", "128 26 3623,114 16 2879,77 64 2330,11 30 4956,", "112 50 662,59 119 5342,61 58 1115,139 12 9053,", "47 98 2002,33 40 6387,92 50 4717,31 80 7764,", "36 48 3970,10 23 607,99 56 8890,138 61 4144,", "78 109 3671,44 49 9446,93 6 6343,51 16 1108,", "69 23 6968,32 5 4828,71 22 2006,37 123 4824,", "16 93 872,132 82 5783,17 23 8525,133 69 4930,", "66 116 8204,7 73 660,121 72 5513,10 142 2484,", "58 30 5028,102 134 153,86 95 359,112 81 8260,", "81 86 6139,142 111 786,7 39 9070,6 136 2241,", "121 28 2826,8 5 7199,60 32 3499,68 37 3401,", "7 26 7468,120 134 4910,26 31 2030,120 14 8607,", "26 79 2376,3 69 8947,10 135 2706,64 44 3831,", "52 61 7871,14 44 9913,128 1 9907,43 88 3283,", "70 90 7531,142 19 4461,131 6 2689,30 26 695,", "126 71 8666,115 71 9205,133 12 9105,59 63 6780,", "96 130 6807,120 92 5579,95 70 7035,73 19 6689,", "0 125 9241,54 96 4085,78 60 4601,99 100 4220,", "98 128 6874,142 13 4066,120 33 431,89 23 614,", "84 22 2689,92 103 7392,127 9 862,82 134 8167,", "65 132 8727,95 117 5466,112 78 5175,64 137 9522,", "21 18 2240,28 74 3889,54 55 7185,93 46 3049,", "78 107 6982,89 104 3163,138 75 1902,87 116 4750,", "73 67 958,43 66 7141,113 75 3036,51 99 3790,", "84 46 6633,36 117 6727,85 106 4919,38 107 9204,", "102 124 6248,53 134 7747,5 35 5923,49 62 8025,", "15 102 491,105 43 5091,8 25 1653,63 34 5312,", "80 123 1594,121 42 7430,140 7 5925,96 27 2423,", "142 127 642,67 21 5155,89 29 3754,91 125 584,", "49 45 1106,36 101 7930,128 2 1780,135 59 3752,", "60 76 7608,106 129 2133,92 94 9691,131 83 3839,", "68 141 4715,24 128 4851,81 41 3351,116 122 2037,", "55 108 2309,7 118 5683"};
    int K = 0;
    int L = 5965;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1388712;
    if(result == expected) {
        cout << "Test Case 72: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 72: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test73() {
    int N = 148;
    vector<string> roads = {"66 5 7626,110 34 6825,49 39 1082,95 146 4194,", "129 94 8835,133 131 9856,70 46 675,143 10 428,", "145 30 4889,95 135 5973,100 73 9435,128 86 4043,", "101 6 3692,78 84 7550,48 15 984,104 46 8882,", "80 87 2188,64 1 1057,124 103 2482,118 79 855,", "116 118 7712,100 72 1146,81 8 6156,1 44 9589,", "92 97 6470,64 146 5020,45 46 5598,16 74 290,", "129 75 3667,41 144 8294,131 15 5468,90 67 943,", "52 124 9027,13 32 4828,14 88 4033,81 63 161,", "26 47 7170,135 60 6535,27 64 9291,41 34 5455,", "129 117 897,96 63 736,27 48 8026,55 116 498,", "54 26 7620,124 55 2917,57 53 1632,139 89 5672,", "139 107 2814,141 104 9458,97 51 3988,86 10 378,", "139 91 4829,38 72 2100,54 52 7449,2 61 5883,", "139 69 9839,136 97 498,10 93 8648,101 1 9023,", "2 17 2097,147 140 7997,80 65 9742,24 41 5394,", "71 26 1723,45 116 7100,16 143 5279,105 74 1392,", "9 111 6200,2 87 6750,49 64 6592,49 105 3775,", "49 13 6309,33 87 5401,82 125 3790,24 102 7734,", "96 108 4572,53 136 1164,128 104 5830,59 105 3473,", "143 73 5452,146 120 7521,81 2 382,49 33 9373,", "36 137 5908,119 144 7958,103 66 801,101 84 6427,", "81 98 2382,93 97 6286,70 113 3018,2 123 9165,", "72 147 7556,86 43 8722,89 73 3476,141 82 3542,", "111 20 5100,90 46 1189,67 35 7295,132 54 4037,", "118 68 1063,62 69 5149,106 51 6330,116 121 3093,", "82 109 2148,4 107 9467,134 70 5764,126 95 447,", "45 129 7875,122 77 7434,47 25 7238,21 76 3948,", "93 119 1776,145 128 1825,119 36 3404,34 50 2602,", "143 130 3551,28 69 7014,146 112 9888,93 111 6235,", "46 142 7829,141 122 1711,145 21 1419,78 18 7126,", "61 31 1571,87 42 6089,22 133 5745,70 3 420,", "146 7 1109,9 23 5329,135 58 4064,131 14 6130,", "24 127 5381,66 11 1167,97 12 3267,130 114 74,", "120 138 5267,117 19 6780,36 115 3633,5 0 5868,", "39 99 6931,78 56 5641,147 29 7896,28 37 3014,", "74 83 6981,65 40 4049,34 85 5464"};
    int K = 0;
    int L = 2935;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1430838;
    if(result == expected) {
        cout << "Test Case 73: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 73: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test74() {
    int N = 109;
    vector<string> roads = {"90 79 5807,46 60 5865,12 45 4105,18 30 3143,", "45 103 2204,72 64 6653,88 20 5512,86 1 5510,", "35 94 3068,26 23 4313,53 45 4353,88 35 4279,", "26 36 8328,89 108 2629,50 1 9755,74 68 3523,", "8 32 9844,47 42 4578,94 45 9486,37 9 9441,", "16 0 7598,98 62 4012,56 19 4631,106 53 2038,", "79 99 6082,24 98 9319,84 17 200,69 38 5099,", "11 31 3987,89 100 2785,4 3 1083,81 12 512,", "48 71 2755,17 83 5441,50 32 2730,61 74 5658,", "95 98 839,100 47 5415,58 88 8177,94 30 8993,", "21 24 3290,70 12 4354,108 53 4018,71 7 6821,", "30 107 2685,83 71 5122,38 75 5039,46 69 6163,", "40 76 502,97 87 5987,34 14 5477,12 49 4518,", "46 65 1429,16 81 3851,63 28 6978,105 40 6346,", "106 79 1403,1 6 5243,81 50 4376,98 86 6212,", "36 70 7338,108 56 6412,57 7 9274,20 52 9746,", "20 93 8155,24 76 527,46 56 2216,89 78 3171,", "53 66 3828,66 91 358,105 83 5994,11 92 6140,", "53 55 3023,106 13 7420,28 104 9566,24 15 2452,", "68 23 2604,19 28 525,60 41 7290,24 43 1405,", "3 58 3697,19 2 9030,48 33 6226,32 54 8819,", "102 66 8454,36 64 9572,61 80 582,100 101 2472,", "89 87 7368,20 14 9132,7 37 5798,60 39 191,", "74 11 5730,101 29 3667,20 77 3628,48 59 145,", "21 73 8263,75 85 1090,78 5 989,65 10 9561,", "74 27 6868,55 82 2604,65 22 4687,34 44 2288,", "3 67 8423,57 96 1485,68 51 3683,88 25 5031"};
    int K = 0;
    int L = 8118;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1052982;
    if(result == expected) {
        cout << "Test Case 74: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 74: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test75() {
    int N = 147;
    vector<string> roads = {"54 109 8608,57 131 1911,0 127 5432,27 138 9850,", "115 53 9868,87 11 4135,135 92 1274,66 15 2932,", "73 85 9341,14 68 8496,39 48 2818,2 11 5287,", "41 138 789,134 140 175,59 7 266,20 128 5248,", "128 41 793,38 5 9019,3 23 8253,14 26 9007,", "141 41 2829,84 103 5885,51 32 9819,70 112 4230,", "130 137 9990,55 116 941,104 49 136,11 67 380,", "144 32 7525,0 80 1058,44 47 9525,4 61 4594,", "8 3 4213,111 133 1876,93 50 4486,14 145 4728,", "145 124 3699,130 128 7706,74 33 9724,55 115 4858,", "55 31 9496,67 95 4178,126 14 5490,125 108 8323,", "65 8 8317,138 111 5884,135 11 415,142 104 3328,", "84 11 3689,30 97 7762,146 91 8667,71 54 9819,", "132 48 4967,82 59 5150,129 57 3805,60 123 6854,", "51 66 836,13 69 4749,38 54 2021,80 107 3065,", "29 23 1594,103 7 3230,14 0 8050,96 67 8055,", "141 72 4215,73 65 9915,130 18 2755,48 135 5074,", "95 100 5959,70 65 9801,110 103 9790,129 11 6202,", "114 119 1428,116 140 6340,70 12 5424,26 108 5451,", "47 68 9786,100 85 7242,55 128 9371,135 91 5288,", "102 140 2871,88 115 1937,102 25 4069,145 66 3780,", "39 31 3854,97 24 5287,60 108 3743,120 8 7766,", "90 106 3559,143 47 5927,59 127 6425,60 83 9757,", "105 44 4809,144 106 87,43 128 624,48 30 750,", "117 111 5947,72 64 7366,65 13 9361,126 35 5308,", "2 104 5028,7 113 380,105 62 3201,88 6 9980,", "79 41 2061,57 94 621,109 65 9875,99 116 1183,", "65 136 5500,126 63 8617,91 86 7358,59 75 2374,", "54 78 9814,82 61 6063,138 139 8501,125 77 9743,", "86 1 2357,137 9 3661,21 81 4074,20 93 9064,", "34 113 2028,35 22 1438,115 19 5210,114 5 9884,", "104 52 8020,33 50 562,130 81 8791,73 42 2928,", "9 118 7520,133 89 3050,63 46 5573,76 118 1321,", "140 122 6739,30 56 8446,97 40 81,15 121 7351,", "55 45 6760,32 58 7723,101 38 7637,143 17 8836,", "143 28 5701,125 36 3736,51 98 8892,136 37 4222,", "79 10 8358,44 16 2895"};
    int K = 100;
    int L = 3262;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 913970;
    if(result == expected) {
        cout << "Test Case 75: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 75: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test76() {
    int N = 148;
    vector<string> roads = {"2 22 3610,25 136 2507,5 53 7890,118 59 9322,", "69 107 4432,25 65 1611,100 63 6520,65 83 622,", "66 20 8275,48 132 1591,105 114 2968,106 87 8515,", "75 140 9470,53 66 261,55 0 7095,62 85 5666,", "53 75 3164,119 107 1924,40 147 3980,63 55 2943,", "141 34 3987,132 87 8229,109 11 5739,125 13 7660,", "78 132 4806,20 21 524,44 80 4002,13 82 5405,", "50 76 8636,88 129 8335,87 113 153,106 81 5843,", "66 132 4079,105 140 482,12 70 8576,106 64 4114,", "107 133 809,144 14 4344,54 95 5665,62 65 2367,", "69 6 3237,77 145 2639,93 133 7938,76 80 2750,", "122 35 5579,131 84 9571,8 48 853,72 71 6256,", "15 12 9147,136 7 2039,28 82 4627,143 32 4481,", "45 11 6380,102 91 9672,92 118 2704,44 78 8889,", "141 45 6676,57 135 7400,53 19 7633,144 124 1540,", "24 99 668,43 25 9967,53 26 1137,10 79 3864,", "125 107 5469,113 82 8827,24 71 9346,98 0 60,", "116 13 9065,145 27 8682,33 125 600,29 34 367,", "118 26 6634,106 34 3597,115 49 549,99 107 6207,", "28 12 2188,73 82 6503,77 107 1874,49 44 2694,", "82 147 8745,141 96 7858,77 36 6137,29 1 1355,", "30 54 7750,130 24 483,104 74 6500,13 2 4502,", "19 16 1630,119 104 5111,49 41 6122,71 32 9969,", "113 31 630,17 63 9298,62 80 3137,88 76 5247,", "56 4 9584,107 97 6383,143 126 2325,18 32 8052,", "41 86 6863,76 37 6557,64 103 7152,15 4 1798,", "88 135 6760,48 98 2369,66 121 7139,146 90 1270,", "147 111 7921,25 127 3710,7 90 7463,110 35 8036,", "106 139 8604,5 42 8639,87 94 9046,125 134 1648,", "71 3 559,93 102 3451,68 132 6375,0 23 3137,", "90 131 8452,59 123 938,28 79 6540,96 47 1561,", "76 52 5586,97 101 8393,112 51 9412,41 112 6924,", "54 32 5350,14 135 2075,89 143 1902,65 128 1848,", "84 138 1874,140 67 5368,105 39 8196,24 122 8317,", "125 108 144,127 117 4699,67 142 4859,141 120 7040,", "107 9 7086,118 46 635,64 58 5474,52 61 9074,", "108 38 3099,147 60 5392,76 137 7187"};
    int K = 100;
    int L = 9166;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1046418;
    if(result == expected) {
        cout << "Test Case 76: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 76: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test77() {
    int N = 133;
    vector<string> roads = {"63 60 3277,87 54 5106,130 71 1990,46 6 4988,", "3 67 4831,32 9 4558,46 20 1516,45 78 6323,", "118 2 857,86 61 8481,114 120 3490,49 89 9927,", "15 118 3913,6 17 4639,40 4 4336,17 11 773,", "14 23 1547,128 127 8301,92 69 4530,109 41 1789,", "125 52 2004,110 52 243,30 111 39,109 33 4416,", "17 15 6392,96 119 8986,9 24 5637,131 3 9351,", "83 13 3024,29 36 6874,93 44 9496,131 89 3720,", "120 104 2159,122 100 5117,11 42 3608,50 30 7616,", "112 102 7332,123 92 3351,92 119 2847,114 39 9434,", "63 40 9188,60 51 7665,46 90 337,57 101 346,", "33 107 3966,46 40 986,60 25 5971,20 74 3840,", "74 114 9082,57 112 7637,49 41 9857,31 25 8999,", "41 37 7983,127 120 7090,62 60 4424,38 13 9224,", "119 73 2885,41 87 4222,102 83 6221,59 103 2217,", "70 132 8421,52 3 5987,7 120 9793,107 63 3128,", "73 55 428,117 121 128,8 16 9750,117 79 7307,", "95 14 939,61 13 221,64 89 648,111 54 3168,", "74 47 7081,49 98 473,76 99 1982,50 130 1306,", "98 44 4975,126 52 2971,112 5 4422,46 81 5610,", "103 26 9619,104 77 9525,3 68 1071,103 6 8542,", "10 86 7561,30 108 155,47 82 6873,82 13 6064,", "65 44 2265,119 64 5003,87 122 9192,123 35 4128,", "17 97 4689,74 129 4769,129 22 9346,99 127 3142,", "122 105 6626,18 29 2376,77 66 6350,32 86 4715,", "10 106 5545,117 97 2677,71 78 7625,12 37 1244,", "50 21 9709,113 58 3068,130 94 9338,46 1 7376,", "15 8 1922,70 1 5829,14 96 9822,89 124 4942,", "116 104 6698,56 1 142,77 18 8014,60 72 3249,", "22 84 9919,76 85 9582,27 83 5871,36 48 3418,", "48 75 4151,60 80 4899,108 0 4004,121 115 8349,", "101 28 2626,35 113 921,118 43 1882,68 88 3453,", "56 91 4445,17 53 5277,25 19 8233,129 34 843"};
    int K = 100;
    int L = 5490;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 842203;
    if(result == expected) {
        cout << "Test Case 77: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 77: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test78() {
    int N = 151;
    vector<string> roads = {"134 121 1078,87 119 2850,140 147 3739,113 97 9274,", "38 4 8686,144 58 2978,38 98 323,119 34 5595,", "94 135 9449,10 32 6520,126 22 2770,47 27 4039,", "111 139 5985,49 78 8276,12 86 566,22 51 5759,", "141 135 9542,26 130 3384,149 116 2053,47 35 9196,", "101 134 4792,31 78 2451,77 38 6344,13 33 7607,", "58 139 2805,79 100 7448,32 77 1170,59 119 8682,", "50 30 4038,130 113 7154,100 74 9583,107 69 7795,", "63 50 8614,148 71 1649,63 29 726,113 56 8366,", "43 109 4685,43 144 3503,66 96 5773,123 148 5339,", "42 2 7050,58 51 1132,113 80 7052,42 150 1631,", "80 123 1742,59 69 6124,136 133 8671,42 38 355,", "116 108 9783,28 107 2022,147 150 6786,7 137 9555,", "109 35 6876,111 19 5627,78 63 5390,32 5 6354,", "132 136 2091,64 140 444,54 139 5277,9 81 3319,", "108 123 8001,91 41 5675,141 109 6202,141 120 2993,", "82 148 89,61 7 4640,115 94 8058,34 123 703,", "133 128 5275,144 40 647,5 126 3378,49 9 6022,", "6 130 8203,57 58 6034,125 70 3888,54 90 7938,", "136 13 2972,67 57 7927,17 50 5142,37 1 3973,", "25 137 3127,11 49 5002,146 56 8659,20 96 2578,", "140 78 2216,5 34 2270,115 106 2963,74 101 6553,", "132 14 5879,3 11 128,2 129 4776,95 42 4621,", "48 103 6277,32 110 1281,33 25 3263,99 59 2220,", "67 61 8018,140 15 6736,76 102 1872,72 50 1407,", "53 131 8243,12 32 387,35 125 5944,149 114 7477,", "134 76 1186,92 39 7806,6 112 5765,101 107 5619,", "148 117 9025,64 18 8797,148 92 1110,107 46 9972,", "97 44 5074,11 138 8728,46 118 8990,59 73 7503,", "81 60 8754,5 105 6691,57 122 8009,100 37 8121,", "62 92 2900,73 23 2673,150 85 9445,124 99 7994,", "140 48 2013,114 127 7466,76 24 4033,36 62 513,", "17 104 6395,113 83 7265,53 16 9240,88 107 5171,", "7 143 9811,89 5 5736,33 41 3191,66 83 9270,", "96 145 1488,27 84 5148,20 68 1074,128 21 417,", "27 53 2555,138 93 8131,20 142 9353,142 55 1577,", "76 75 7044,121 8 4072,87 65 5787,150 52 2303,", "121 45 1654,122 0 292"};
    int K = 100;
    int L = 454;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 782878;
    if(result == expected) {
        cout << "Test Case 78: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 78: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test79() {
    int N = 146;
    vector<string> roads = {"124 34 1348,97 105 9755,135 123 2828,76 114 4620,", "121 39 1796,10 139 3015,87 4 8542,84 144 5502,", "69 13 4162,145 10 1979,49 116 50,50 34 977,", "120 57 4137,1 21 1012,61 80 6199,1 7 5154,", "49 53 5976,34 141 583,87 9 4364,0 72 9792,", "131 76 2295,32 0 7922,104 31 6949,107 91 3842,", "52 67 8074,98 31 6770,140 91 9108,19 142 7172,", "21 73 2967,134 108 5997,57 29 1476,65 90 9102,", "83 23 8259,69 73 6537,20 113 4138,13 22 4236,", "127 4 5898,54 57 6712,45 126 9354,79 139 6700,", "129 141 2805,121 125 8578,29 117 6652,143 44 1278,", "35 17 1845,132 40 6624,114 5 6338,103 29 9757,", "34 90 979,36 103 9165,50 115 7317,15 31 9049,", "109 28 8186,10 93 4818,31 117 9200,115 49 1086,", "101 87 1325,95 22 609,122 142 6448,111 45 6437,", "47 66 7813,46 54 6274,136 45 9102,127 1 8575,", "48 79 6042,80 119 7380,141 33 2968,17 66 1586,", "37 12 1529,90 93 6047,44 5 124,53 32 7763,", "105 53 3660,130 88 6382,22 66 7348,53 134 6894,", "48 26 4971,48 123 8735,112 60 443,104 32 9333,", "91 128 1932,57 128 1041,60 80 4636,44 110 8711,", "13 116 3281,108 24 2716,31 67 8428,78 117 4389,", "4 30 3631,86 128 6735,56 62 4912,115 37 1815,", "18 114 7403,101 89 8277,45 82 7283,122 106 1195,", "68 107 732,135 82 5938,97 131 7167,66 119 5588,", "16 86 2864,17 55 247,76 94 1130,136 14 6615,", "93 3 3420,4 75 5177,91 84 1385,19 107 1167,", "80 102 8290,43 25 2035,37 118 3895,7 88 3226,", "13 41 8322,28 87 5988,135 2 7521,10 96 1524,", "3 23 8161,56 112 8361,31 133 9637,93 63 6808,", "55 74 1427,81 70 2927,27 26 4475,84 113 6281,", "136 137 1154,104 51 7293,49 40 4389,21 138 4071,", "84 38 2273,130 42 371,131 39 9794,43 27 4151,", "12 100 468,28 8 1659,18 11 7203,92 43 7616,", "61 70 9184,77 51 9425,67 64 5869,55 59 2220,", "136 71 4599,118 99 5894,82 6 7583,102 85 2183,", "10 58 4974"};
    int K = 100;
    int L = 6715;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 955084;
    if(result == expected) {
        cout << "Test Case 79: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 79: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test80() {
    int N = 200;
    vector<string> roads = {"178 169 5384,139 113 2582,98 106 3863,182 21 6666,", "65 60 3471,19 81 6218,127 16 203,121 167 5202,", "186 116 3041,93 71 7501,37 28 3292,43 137 1087,", "189 74 7925,170 121 7278,63 86 1848,110 182 4056,", "82 95 6858,37 36 200,147 93 7865,148 61 8119,", "158 67 1326,61 170 2868,107 16 9307,80 56 7981,", "87 183 1916,58 104 2466,180 138 5424,174 14 3784,", "46 75 5279,92 23 6858,187 138 8566,181 144 21,", "123 84 7919,163 8 7370,112 130 7448,37 152 4137,", "194 163 8354,8 159 6584,97 4 9055,100 153 5351,", "117 166 618,188 116 7419,85 13 4882,89 79 2054,", "160 136 8596,42 184 8072,93 45 6670,113 169 2244,", "88 130 2595,10 153 7078,195 75 604,16 47 1313,", "38 45 254,128 178 7070,105 8 9601,85 158 3,", "165 122 3491,31 168 4908,181 11 8029,54 95 1174,", "181 191 5127,46 95 5411,197 185 9157,41 46 2076,", "44 115 6790,94 18 9080,60 124 8883,124 174 9033,", "184 194 1350,61 99 72,169 56 6710,193 169 3501,", "47 108 9450,107 137 5505,144 183 7534,165 68 9658,", "5 174 2299,181 195 9674,88 40 9760,14 101 4560,", "147 193 9537,126 37 2540,76 135 2320,24 118 4350,", "165 107 5462,117 168 896,35 151 2478,115 144 6542,", "127 49 2483,58 0 285,44 14 5998,113 20 1958,", "115 178 1549,182 101 6527,32 8 9758,133 196 4253,", "75 50 3884,155 36 5946,33 6 3668,61 125 7744,", "108 159 7679,181 91 4591,118 180 7258,119 64 5817,", "150 168 275,76 30 5519,30 67 1678,181 76 2645,", "186 47 3035,49 139 2982,68 40 3711,146 84 8695,", "133 4 1807,28 160 9479,110 24 2799,66 98 5011,", "112 29 24,135 7 4092,70 8 7329,43 164 1207,", "90 111 9048,17 18 2553,94 165 1826,199 147 6193,", "68 142 8770,111 197 4490,87 149 8979,20 36 1092,", "13 26 7232,140 78 5893,81 164 5173,74 3 4021,", "118 156 26,171 118 9887,149 98 4381,130 2 7036,", "161 0 2103,61 162 6994,166 175 2411,48 157 2898,", "11 57 4278,42 148 1242,131 174 5093,38 55 8791,", "74 134 5371,93 151 5243,176 34 1128,87 53 9346,", "182 0 1993,111 82 7900,73 159 5693,61 198 9550,", "75 192 7178,163 52 7718,32 9 2984,199 97 1368,", "189 142 5450,47 33 6283,3 114 8436,191 177 235,", "155 78 5889,82 145 8292,40 102 8441,8 132 2593,", "107 175 4484,123 89 5241,79 185 5576,114 48 8938,", "3 51 5181,37 62 6685,31 86 3120,96 195 2404,", "12 53 9859,59 37 9848,127 100 6189,20 141 8596,", "76 92 6750,194 27 3233,4 83 6681,111 69 2766,", "133 154 1422,11 176 7922,102 77 4604,48 172 9881,", "22 31 7486,184 143 9080,124 103 6027,192 64 3700,", "25 3 6002,105 129 25,22 15 5805,105 190 6651,", "127 1 5900,12 173 3123,81 120 9826,144 109 4685,", "20 72 6104,153 179 7098,113 39 7838"};
    int K = 100;
    int L = 8350;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1386751;
    if(result == expected) {
        cout << "Test Case 80: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 80: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test81() {
    int N = 200;
    vector<string> roads = {"119 10 1000,115 196 5727,120 64 338,167 131 5823,", "199 78 7151,90 17 4047,136 54 5369,137 127 6998,", "112 166 5575,97 8 3420,146 113 9224,105 107 3526,", "41 64 4275,57 178 6755,156 178 1556,81 185 6583,", "194 113 1476,118 61 174,88 102 2586,143 193 8629,", "140 182 5154,1 159 35,145 37 199,170 133 586,", "169 164 3051,167 18 7755,150 195 9960,106 43 4252,", "153 182 9728,0 11 2973,165 184 715,134 186 4963,", "91 9 4092,145 137 839,1 117 1497,41 166 4025,", "76 92 4107,105 182 9801,50 166 5100,119 161 4529,", "156 114 4715,118 165 9797,170 58 7232,77 163 6244,", "168 67 3333,75 66 9443,49 105 1277,112 88 2057,", "129 188 5216,155 65 1394,192 162 8712,148 8 9901,", "109 48 5709,155 132 1101,70 120 6854,77 168 4398,", "179 139 5356,147 34 8068,196 60 4531,139 174 3558,", "76 140 7598,118 12 2336,96 187 7729,65 148 7549,", "58 187 973,10 183 4662,124 5 3618,103 128 9685,", "94 28 3027,20 73 5164,83 34 3265,166 82 9085,", "173 94 939,91 118 744,141 133 9483,169 138 8454,", "156 190 7992,105 126 1571,39 95 7290,60 91 17,", "42 185 3093,115 77 8893,38 20 5578,42 36 2253,", "163 123 537,46 134 6670,37 126 2562,46 143 1396,", "133 49 9301,78 62 7643,136 153 1281,58 172 935,", "102 114 2511,48 29 3489,106 71 382,163 177 7869,", "105 60 8907,36 7 4260,161 105 4624,93 181 692,", "102 92 4829,168 89 4818,143 199 1876,70 8 5710,", "145 42 2885,165 144 7730,50 55 3881,143 45 4745,", "62 136 4001,28 168 3103,103 172 9013,36 93 8646,", "37 159 2327,175 24 5719,69 11 1378,71 11 2040,", "37 150 7723,83 99 260,50 6 97,65 95 5956,", "6 146 4148,113 47 4015,160 167 1114,111 136 436,", "138 45 1693,189 158 9417,167 161 1498,72 120 1437,", "116 7 2511,5 113 2199,53 134 6521,187 20 7771,", "149 176 2860,1 59 6077,144 104 6460,143 198 5595,", "172 158 2862,138 34 4707,193 71 445,153 26 572,", "50 52 7941,74 9 9291,136 188 139,14 137 6684,", "161 33 3730,67 100 3123,156 149 1543,172 130 5263,", "82 44 8199,72 98 8290,76 108 5571,55 48 4701,", "159 63 1386,58 79 8107,20 142 1626,100 25 9392,", "26 122 3244,109 101 5485,178 17 7263,63 139 9362,", "120 27 3814,166 31 756,96 68 5427,151 78 4779,", "187 30 8940,185 13 4909,1 4 8776,87 19 7095,", "131 66 9483,85 26 8107,40 156 2687,26 192 7088,", "28 191 4674,113 180 6398,182 32 3718,3 190 7470,", "57 87 5249,187 23 8369,148 171 1013,73 125 4118,", "148 86 7311,38 197 7026,81 157 2942,43 121 7255,", "54 35 6344,13 16 1390,131 154 3874,181 15 3890,", "187 56 8104,91 80 3872,123 135 5953,170 84 5822,", "45 152 2932,72 24 6271,0 110 2186,9 22 4905,", "47 21 9153,33 2 4331,115 51 201"};
    int K = 100;
    int L = 4289;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1160941;
    if(result == expected) {
        cout << "Test Case 81: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 81: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test82() {
    int N = 200;
    vector<string> roads = {"69 93 8113,96 163 2667,19 179 2099,49 116 9846,", "42 157 3048,108 9 6798,54 194 5323,112 125 6752,", "175 26 3834,110 48 7471,195 64 4047,59 14 9555,", "31 100 3985,102 169 9187,40 199 8529,198 164 8580,", "128 88 1658,97 79 3459,148 91 3047,107 127 4622,", "22 98 8009,20 129 4665,53 129 6317,155 121 4789,", "186 45 3174,158 195 9307,118 184 3067,51 146 1824,", "127 51 525,160 4 7666,93 31 9446,146 197 2236,", "102 97 4468,41 114 5620,97 120 3432,51 192 3655,", "175 105 9585,69 172 74,198 54 6594,161 62 2967,", "197 112 9260,54 184 5130,85 20 618,133 17 6346,", "66 63 6310,139 113 9372,8 162 2502,155 22 9273,", "172 130 3282,120 37 1619,86 169 192,11 166 6099,", "68 28 3299,175 196 3926,111 121 2786,172 2 2696,", "189 125 2085,192 64 248,36 7 1973,99 6 66,", "76 1 8976,97 40 2266,154 92 8442,61 172 8228,", "99 56 9743,149 22 7388,85 67 6583,56 34 9064,", "131 86 3472,96 11 1496,18 141 1452,34 150 1299,", "130 193 3023,174 119 783,54 100 5633,97 21 8251,", "129 11 9007,170 144 2525,147 94 7202,146 41 3521,", "145 140 4001,78 27 2634,102 161 4045,195 164 7260,", "92 173 8272,33 158 7343,198 57 2798,2 9 8795,", "42 127 1324,48 21 7297,26 25 2875,135 54 6225,", "45 29 4292,158 29 9436,34 147 1715,24 89 6970,", "170 65 2904,39 165 1687,177 193 4118,183 50 3587,", "176 41 591,71 159 6221,147 29 8019,14 24 5926,", "184 80 495,61 156 5267,184 62 5206,128 79 6023,", "89 49 4242,68 67 781,180 56 7459,159 135 5598,", "57 104 3621,181 76 9879,109 125 3820,62 196 6838,", "74 156 7986,165 155 9454,153 86 1629,19 122 1049,", "188 38 8281,123 111 8881,55 168 7918,79 39 645,", "188 53 6490,109 191 1594,60 119 5821,43 100 6072,", "119 198 5275,80 151 6132,7 98 5396,168 163 1082,", "119 23 5898,96 25 5642,39 14 9615,134 146 3472,", "136 39 2873,189 140 2146,93 95 248,105 152 2677,", "53 72 2418,40 183 5899,84 99 114,165 182 4023,", "181 191 4839,121 30 2748,106 184 9539,34 124 5331,", "64 171 901,188 70 365,151 32 1020,66 34 6105,", "39 15 7343,126 158 2430,77 10 1498,76 27 8997,", "33 133 495,150 178 3944,110 5 8907,69 115 3118,", "156 162 4207,73 6 4827,27 92 4996,70 179 2498,", "171 138 3565,191 148 4422,173 3 5884,130 141 1284,", "66 143 6384,160 162 8713,156 65 7930,72 142 494,", "164 117 1338,136 167 4609,136 82 221,110 47 6555,", "48 52 7475,146 101 3479,189 46 1972,7 77 6558,", "160 44 5274,151 13 5449,39 81 9508,23 58 6009,", "118 103 2838,103 187 2529,113 65 7234,40 137 3512,", "82 90 7209,31 185 48,80 87 2557,41 83 5970,", "166 75 6853,198 35 9003,12 134 6954,38 132 1275,", "188 0 5260,56 16 56,76 190 2509"};
    int K = 100;
    int L = 541;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 981239;
    if(result == expected) {
        cout << "Test Case 82: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 82: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test83() {
    int N = 200;
    vector<string> roads = {"93 57 7639,43 62 914,160 7 4335,169 86 8393,", "129 57 4298,51 135 4655,57 112 9590,8 83 8225,", "66 21 4137,90 118 3059,148 20 6585,191 91 4137,", "160 52 5614,145 49 2399,88 135 6974,172 78 6867,", "111 26 5364,136 14 2465,12 2 810,187 35 8193,", "103 12 4658,103 111 5570,7 114 5528,184 95 4806,", "137 58 1052,150 141 7049,57 15 5922,125 9 428,", "178 31 1018,134 153 4945,30 120 8542,104 121 9419,", "196 176 1843,68 21 2860,75 51 6892,127 73 2682,", "60 29 169,150 170 9090,189 74 3744,114 78 714,", "92 127 8533,124 193 1721,19 134 2289,80 111 9499,", "195 47 5648,151 120 1533,12 104 7369,72 134 2581,", "166 57 6894,186 77 7480,9 67 4506,188 139 9212,", "50 173 3804,87 181 7960,28 138 8691,189 2 3605,", "14 98 8732,80 19 8472,5 46 3834,33 44 8821,", "161 88 7819,137 198 2147,39 145 6671,56 125 7121,", "188 197 647,35 79 6336,37 70 3472,57 7 2129,", "146 39 5021,80 167 1359,66 63 1267,69 22 9550,", "44 52 9577,69 94 8323,122 194 3477,85 50 391,", "99 68 661,190 4 5018,159 120 4577,116 117 4390,", "31 93 8676,189 184 8467,161 47 4564,72 81 7473,", "9 169 5231,128 189 9082,77 87 1748,72 21 4446,", "196 163 5652,1 27 3799,142 145 6375,32 137 2559,", "80 182 6368,166 165 1250,54 78 8721,169 66 9152,", "184 170 991,147 133 45,31 74 2050,45 115 715,", "195 183 1193,19 176 9527,178 118 7716,127 90 2590,", "193 163 194,181 174 5613,125 84 9388,181 135 4501,", "41 54 7255,106 88 5594,124 61 5020,152 64 9346,", "2 83 7130,168 173 9565,155 106 1926,132 46 8565,", "70 45 6736,166 138 3767,112 3 1931,169 16 614,", "104 87 9328,45 101 3980,43 154 4443,120 63 8886,", "53 2 3549,195 100 3333,37 104 849,191 26 2930,", "93 179 4811,19 147 4740,119 97 6909,59 155 8738,", "46 114 8262,183 131 5103,136 159 4072,76 15 7843,", "158 117 9242,168 138 5741,19 146 1639,199 13 8208,", "158 76 9063,76 55 1775,97 84 5381,55 58 3111,", "14 105 4045,161 107 3935,113 63 9702,103 177 3878,", "11 66 570,167 35 3760,122 170 3456,169 140 3231,", "192 152 7729,41 108 305,74 20 1974,46 40 5763,", "30 34 387,17 83 4244,93 22 5841,64 176 1655,", "109 129 3653,5 10 2977,154 168 1051,127 164 7300,", "114 42 4058,138 102 8615,50 110 1462,165 89 2773,", "75 188 3714,26 162 2891,81 29 3867,81 6 3508,", "62 23 3974,13 12 6567,32 18 8033,158 24 8226,", "16 38 2664,108 144 4748,187 65 7510,39 149 8054,", "159 0 2660,61 130 3899,42 185 2521,199 175 3615,", "83 82 9473,132 36 287,97 27 4503,196 25 4665,", "48 52 7868,138 180 9735,20 190 9750,191 143 6162,", "176 126 7975,50 71 9425,199 123 7313,108 96 2591,", "105 171 9767,59 157 1763,182 156 4399"};
    int K = 92;
    int L = 6423;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1325076;
    if(result == expected) {
        cout << "Test Case 83: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 83: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test84() {
    int N = 200;
    vector<string> roads = {"79 70 9071,189 76 1429,137 172 9010,0 195 2521,", "71 12 7838,123 196 3143,12 141 3762,115 93 2287,", "79 62 995,110 153 50,3 191 3750,169 95 1451,", "30 11 745,28 36 9364,164 140 175,21 75 6473,", "163 37 4779,70 132 9078,40 46 207,111 115 8266,", "38 9 3513,16 29 6727,85 123 5629,134 56 4686,", "24 4 1728,188 77 4871,47 169 6091,189 72 7403,", "79 169 1546,185 39 4709,127 108 3694,90 56 3295,", "94 180 948,96 135 8383,183 81 6044,14 58 5138,", "186 102 4289,39 171 9900,31 59 5608,96 158 5078,", "145 129 8416,9 126 9895,15 156 2321,47 159 7290,", "59 66 6946,127 45 4015,31 21 9387,193 25 5593,", "116 30 31,53 3 5639,106 99 1647,85 63 2451,", "152 138 9613,85 52 1477,128 66 5961,59 182 3930,", "126 3 2343,49 149 1645,42 97 8878,190 156 3443,", "56 46 8941,80 128 2468,180 181 5640,151 98 5201,", "77 99 8024,71 192 7538,78 55 4622,111 5 315,", "33 92 5740,177 160 4937,74 193 59,177 152 7899,", "20 109 3820,63 184 1815,29 105 2920,34 45 6668,", "12 49 9014,22 110 1104,177 14 7606,51 190 3250,", "127 151 7017,149 66 596,44 155 1037,13 186 1882,", "65 75 8861,86 123 3600,185 137 63,66 125 199,", "28 99 4223,12 152 1548,189 144 7012,96 132 9833,", "45 83 2776,171 173 4228,25 198 5318,55 142 7018,", "3 49 384,154 68 7344,60 9 8398,199 136 6854,", "167 54 4895,109 188 2870,130 152 4705,109 40 6304,", "56 166 8901,107 191 5502,10 20 1388,92 107 5445,", "186 162 94,46 132 4303,119 174 5137,180 71 310,", "10 117 7206,22 122 3652,104 94 7687,60 103 302,", "25 40 3930,138 40 6898,166 176 3739,37 193 6694,", "86 181 4665,116 172 810,85 136 8290,181 175 6006,", "98 62 3732,108 185 3921,1 176 3638,33 7 6161,", "196 22 2595,168 54 7036,55 120 8085,45 119 7652,", "21 82 6962,160 118 41,127 145 8694,153 81 1964,", "189 39 6462,122 112 230,96 178 3567,53 157 423,", "6 175 7674,52 150 3073,80 54 6579,114 181 4253,", "183 69 1583,52 154 961,74 8 3070,4 46 5614,", "96 42 8209,57 147 7384,28 57 878,166 139 330,", "109 156 497,83 93 1488,0 188 9907,147 32 8436,", "74 148 7706,186 51 780,29 181 7034,79 197 3881,", "33 64 5966,149 73 8345,183 140 3007,147 143 1807,", "12 61 8517,8 101 1714,183 155 7629,78 32 5666,", "132 91 7459,131 48 6922,17 72 4699,7 67 2037,", "54 165 317,88 16 2009,55 194 4695,125 27 111,", "101 50 1933,168 131 9273,108 2 3369,166 187 8859,", "162 100 3718,102 170 7428,178 18 8375,131 19 156,", "56 121 8700,132 41 3229,146 112 6345,21 179 9017,", "59 26 5407,65 89 5161,165 43 5124,135 87 5764,", "130 161 6786,189 35 783,148 133 9715,87 124 1007,", "57 23 6333,134 84 6315,109 113 5511"};
    int K = 0;
    int L = 1732;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1879616;
    if(result == expected) {
        cout << "Test Case 84: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 84: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test85() {
    int N = 200;
    vector<string> roads = {"0 172 6685,172 139 1360,139 188 2120,188 85 6590,8", "5 13 2114,13 96 8919,96 62 3085,62 154 9800,154", " 138 8144,138 150 1091,150 37 3774,37 195 1026,19", "5 24 8120,24 38 7253,38 107 8253,107 4 1963,4 153", " 9109,153 60 6482,60 61 5377,61 125 8088,125 132 ", "6005,132 86 4810,86 23 7067,23 31 1399,31 57 75", "44,57 117 732,117 39 2669,39 51 5213,51 158 2328,1", "58 75 4843,75 184 1265,184 84 3152,84 102 2408,102", " 22 4512,22 144 1432,144 1 234,1 16 7998,16 130 ", "1635,130 41 5703,41 166 3507,166 9 1522,9 97 89", "55,97 77 8344,77 14 8202,14 83 7133,83 70 5785,70 ", "59 8752,59 129 1634,129 177 81,177 143 946,143 99 ", "9848,99 113 4646,113 54 9480,54 167 4869,167 128 ", "6614,128 45 8876,45 127 2293,127 30 1509,30 69 2", "402,69 103 9143,103 116 812,116 135 247,135 141 6", "517,141 80 2244,80 42 4671,42 36 6251,36 111 9102,", "111 17 1828,17 115 3778,115 181 211,181 7 4577,7", " 162 5350,162 136 4496,136 94 8145,94 183 5652,18", "3 169 497,169 34 7967,34 178 5980,178 163 5048,1", "63 47 2514,47 63 7064,63 142 323,142 199 6016,1", "99 2 396,2 88 8423,88 131 3636,131 133 141,133 2", "9 1899,29 25 325,25 49 4985,49 187 3262,187 93 ", "929,93 56 3973,56 105 8695,105 90 5210,90 33 192", ",33 79 9378,79 28 8566,28 48 7971,48 91 6773,91", " 20 1556,20 194 8963,194 196 126,196 164 3287,164 ", "155 7303,155 26 1895,26 100 3670,100 55 6685,55 1", "1 4580,11 106 3581,106 191 3057,191 193 3563,193 1", "74 6272,174 168 2532,168 189 5712,189 120 4124,1", "20 109 8910,109 104 2524,104 50 8667,50 160 270", "3,160 192 1402,192 66 651,66 87 3080,87 151 6252", ",151 15 8446,15 161 9532,161 122 6481,122 5 721", "1,5 73 6876,73 176 1626,176 186 9069,186 146 6876,", "146 198 6352,198 32 8600,32 140 7611,140 175 6794,", "175 35 7133,35 152 2396,152 173 9465,173 145 45", "82,145 119 8967,119 123 733,123 10 8324,10 44 559", "4,44 137 2438,137 82 8121,82 165 5153,165 121 7", "799,121 148 2937,148 12 5686,12 58 7085,58 170 67", "0,170 52 7411,52 157 1337,157 64 3754,64 72 4114", ",72 53 9337,53 92 5448,92 76 2058,43 142 9917,101", " 63 8074,81 145 2925,74 85 786,180 49 6218,78 8", "5 8596,95 161 8157,190 66 696,98 56 6261,197 1 8", "155,159 60 4723,65 121 3783,21 88 41,6 117 9305", ",71 17 9429,149 16 3782,182 75 2148,18 106 4799,11", "4 139 1107,3 105 9716,19 132 9404,126 87 3348,110 ", "199 5918,147 50 9130,118 142 8227,156 183 6188,67 ", "103 8773,108 137 8716,179 70 1886,40 41 4978,46", " 75 9582,89 38 6032,27 161 5283,124 184 3967,134 ", "90 3254,8 162 7217,185 161 986,112 51 2817,68 12", "0 6654,171 94 7830"};
    int K = 12;
    int L = 1675;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1135991;
    if(result == expected) {
        cout << "Test Case 85: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 85: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test86() {
    int N = 200;
    vector<string> roads = {"0 142 2249,142 192 4011,192 193 7145,193 153 124", "3,153 101 3834,101 123 2459,123 105 9650,105 42 2", "456,42 43 5010,43 1 9344,1 40 5292,40 17 3696,17 ", "160 2593,160 143 8776,143 45 1472,45 53 7198,53 77", " 4520,77 96 835,96 154 355,154 44 4700,44 159 28", "55,159 71 1301,71 135 2858,135 32 3397,32 6 5530,", "6 70 676,70 62 5737,62 84 9862,84 198 4413,198 73", " 125,73 156 2144,156 79 3284,79 69 8188,69 180 94", "25,180 113 4438,113 103 5859,103 36 5835,36 16 ", "9680,16 163 3795,163 47 2203,47 134 6572,134 185 ", "1466,185 30 5221,30 74 9864,74 161 3785,161 136 8", "744,136 121 6116,121 34 539,34 109 2759,109 167", " 7347,167 120 7137,120 78 7286,78 55 9288,55 107 5", "372,107 4 1181,4 29 3761,29 67 9712,67 3 8445,3", " 22 846,22 169 5458,169 54 5945,54 89 919,89 87 20", "97,87 66 6516,66 165 9977,165 46 8075,46 50 7841,5", "0 118 536,118 31 3295,31 147 8726,147 111 5330,", "111 149 415,149 85 5955,85 150 9444,150 39 6347", ",39 181 5983,181 27 305,27 19 7533,19 199 5866,", "199 130 6049,130 14 9211,14 176 6732,176 48 4337,", "48 115 6156,115 9 5488,9 157 7920,157 146 1990,1", "46 86 6918,86 116 4516,116 110 1661,110 151 323,15", "1 80 313,80 75 9706,75 184 554,184 93 9106,93 41", " 5590,41 12 8694,12 141 789,141 26 5296,26 117 ", "7934,117 171 2665,171 128 1958,128 60 246,60 64 39", "70,64 11 8003,11 196 2570,196 24 698,24 162 141", "7,162 68 6337,68 7 3662,7 137 7772,137 182 3101,", "182 119 6610,119 52 8432,52 25 7127,25 18 1117,18 ", "65 4910,65 21 1722,21 131 4878,131 15 5568,15 1", "32 3774,132 190 7371,190 112 6307,112 155 8490,155", " 140 1875,140 195 5222,195 61 8011,61 94 2414,94 2", "0 9996,20 33 286,33 158 3397,158 183 9897,183 1", "25 4381,125 189 2940,189 139 3800,139 186 8420,", "186 58 9146,58 5 3474,5 145 6172,145 173 2448,17", "3 97 3633,97 95 1170,95 133 3201,133 100 2171,1", "00 170 9889,170 178 934,178 23 4325,23 164 144,16", "4 90 324,90 83 3186,83 124 2556,124 13 7359,13 5", "1 1447,51 8 1680,8 126 7698,126 114 1273,114 98 ", "5745,98 56 1536,56 127 1491,127 194 8498,194 15", "2 2611,152 57 3084,57 99 3507,99 59 545,59 88 813", "1,88 104 4045,104 179 6626,179 188 8590,188 108 1", "643,82 41 5872,2 101 7977,166 53 3810,72 188 9018,", "102 47 793,37 86 5382,28 149 3642,174 50 5521,197", " 176 2414,148 153 8806,122 99 5024,187 20 7631,", "10 132 2319,172 195 5347,91 39 3573,129 119 9600", ",138 33 8007,191 161 850,38 7 7047,175 5 9735,35", " 184 9364,63 56 3438,92 71 795,168 34 4357,144 10", "7 1826,76 145 7896,106 3 448,177 99 8622,49 123 1", "80,81 196 6438"};
    int K = 14;
    int L = 1432;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1007344;
    if(result == expected) {
        cout << "Test Case 86: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 86: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test87() {
    int N = 200;
    vector<string> roads = {"0 169 5231,169 56 8715,56 139 4406,139 140 2963", ",140 91 1096,91 77 3741,77 18 2330,18 42 8687,42", " 62 1099,62 95 2519,95 137 9542,137 156 746,156 2", "9 7730,29 188 3310,188 102 9424,102 10 1003,10 ", "96 7427,96 89 8622,89 5 5200,5 11 3851,11 19 86", "72,19 57 9646,57 58 9924,58 127 9827,127 83 7703", ",83 123 9619,123 116 8120,116 68 2101,68 104 1519", ",104 81 9530,81 51 4852,51 151 1840,151 40 7323,40", " 45 213,45 93 7788,93 50 7277,50 111 2235,111 181", " 9803,181 69 8460,69 134 2256,134 9 2949,9 80 5", "527,80 179 3349,179 22 2499,22 36 3461,36 28 82", "24,28 113 8226,113 98 6333,98 74 3538,74 110 2763", ",110 27 4379,27 84 9542,84 142 1114,142 26 2580,2", "6 125 9033,125 149 4741,149 145 7281,145 61 5596", ",61 109 6210,109 37 6586,37 198 7560,198 13 6021,1", "3 92 9431,92 30 4847,30 71 4982,71 73 7760,73 18", "6 8156,186 52 8099,52 173 6297,173 128 7636,128 13", "0 8251,130 25 8662,25 78 665,78 185 2394,185 4 ", "1434,4 31 8465,31 133 9338,133 192 523,192 103 ", "8981,103 76 6731,76 60 1293,60 120 8624,120 153 2", "007,153 199 1594,199 100 2398,100 35 1394,35 12 22", "99,12 85 1797,85 38 1689,38 171 5552,171 115 2266,", "115 147 5240,147 15 6132,15 34 3126,34 82 67,82 2", "0 2246,20 177 3928,177 172 3001,172 88 8754,88 66 ", "8210,66 106 8712,106 118 5558,118 121 6081,121 122", " 1599,122 21 4931,21 117 750,117 47 6558,47 144 ", "3429,144 24 2091,24 138 2753,138 126 2186,126 174", " 4934,174 183 5470,183 189 7031,189 63 8904,63 1", "7 4246,17 159 5695,159 75 9345,75 70 4462,70 16 ", "2298,16 119 3562,119 53 2251,53 64 7688,64 152 2", "947,152 190 7640,190 168 7972,168 155 4179,155 39", " 9974,39 184 7166,184 49 5730,49 101 5802,101 1", "29 6169,129 182 6300,182 135 9095,135 187 2004,", "187 46 239,46 14 8672,14 99 269,99 8 927,8 141 1", "422,141 67 1805,67 6 8102,6 1 4331,1 87 9253,87 1", "58 8235,158 162 6675,162 124 1176,124 197 5927,1", "97 196 2993,196 65 7032,65 175 4231,175 161 8037", ",161 150 4164,150 166 5421,166 165 428,165 32 9610", ",32 48 6912,48 72 8174,72 170 8439,170 176 4409", ",176 143 5451,143 114 3893,114 7 9557,7 154 2465", ",154 107 4254,107 167 965,167 146 269,146 180 7627", ",180 132 1587,132 195 3217,195 191 5154,191 44 85", "02,44 193 3159,193 2 4206,2 194 9166,194 43 889,4", "3 131 6247,131 59 8206,59 160 3561,97 145 6193,", "178 128 9224,163 82 4967,23 72 7064,41 5 2907,148 ", "179 3747,94 38 9672,164 146 7697,33 91 3414,79 128", " 8782,157 78 8016,86 18 7377,54 184 2111,90 40 ", "7481,136 11 9131,3 117 9772,55 133 6170,105 129 9", "43,112 146 4873,108 91 662"};
    int K = 6;
    int L = 1771;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1120782;
    if(result == expected) {
        cout << "Test Case 87: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 87: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test88() {
    int N = 200;
    vector<string> roads = {"0 183 3858,183 189 4090,189 128 5383,128 165 9686", ",165 190 7051,190 49 7081,49 2 1082,2 154 258,154", " 15 9953,15 13 5604,13 135 627,135 16 3553,16 1", "51 7618,151 20 2023,20 121 5840,121 22 2017,22 45 ", "5460,45 24 1702,24 21 4183,21 57 7392,57 12 819", "5,12 54 7083,54 10 7729,10 86 1185,86 91 6506,9", "1 192 3629,192 173 6809,173 171 9425,171 41 229", "7,41 18 6545,18 61 4075,61 94 1114,94 87 4493,87 ", "160 5795,160 90 8388,90 198 4470,198 70 1457,70 9", "3 8243,93 147 1848,147 64 6536,64 36 654,36 51 ", "8256,51 72 7113,72 85 6481,85 37 3000,37 199 5013,", "199 75 4172,75 84 8015,84 5 7040,5 52 3750,52 17", "0 9074,170 187 9202,187 193 1499,193 96 8905,96 ", "100 3316,100 115 7812,115 1 2384,1 197 1325,197 ", "159 4340,159 33 430,33 25 6658,25 107 7991,107 7", "8 4279,78 23 2706,23 178 7919,178 111 2103,111 59 ", "5619,59 99 9328,99 89 89,89 157 5038,157 129 509", "5,129 79 9648,79 71 4095,71 82 8992,82 156 4895,1", "56 133 986,133 31 2264,31 148 6568,148 114 3907,", "114 46 7406,46 158 478,158 27 7387,27 3 131,3 77 1", "541,77 122 4570,122 112 2262,112 123 1497,123 11", "8 1219,118 132 5251,132 48 9746,48 69 6591,69 127", " 3519,127 174 7198,174 131 4264,131 167 8735,167 ", "169 2154,169 150 9106,150 140 5883,140 113 1595,", "113 143 237,143 60 9272,60 58 4918,58 126 349,126 ", "137 7014,137 67 1195,67 53 4350,53 6 2520,6 106 ", "1585,106 43 3019,43 38 1948,38 7 5584,7 9 3981,9 1", "05 7419,105 109 1037,109 32 4006,32 28 7912,28 14", "5 2495,145 186 6522,186 142 5513,142 136 9817,13", "6 117 1107,117 130 4422,130 141 8897,141 95 3836", ",95 179 6310,179 138 1732,138 110 406,110 155 2209", ",155 35 3671,35 108 1962,108 81 9404,81 40 1092", ",40 175 2477,175 161 8783,161 76 9058,76 153 959", "5,153 92 456,92 101 9430,101 47 6692,47 176 737", ",176 144 8468,144 177 7438,177 34 4571,34 188 46", "21,188 63 2483,63 8 2766,8 195 8686,195 182 1441", ",182 17 9662,17 166 7485,166 162 5350,162 152 50", "35,152 4 3015,4 66 591,66 88 2815,88 30 8766,30 1", "49 7826,149 97 4982,97 181 1030,181 163 5334,163 ", "194 2221,194 44 3815,44 172 7944,172 164 2798,16", "4 103 3673,103 39 9689,39 50 8669,50 56 5593,56 12", "5 6350,125 73 382,73 139 3575,139 68 3936,68 65 ", "9173,65 191 8728,191 124 3710,124 14 84,14 116 4", "137,116 74 9944,74 104 5267,104 185 809,185 26 ", "7471,26 119 8039,119 168 8200,168 120 3027,120 ", "98 9874,98 62 1552,62 80 3253,80 55 5180,55 196 ", "7352,29 7 4789,11 179 3592,134 92 5890,102 26 36", "87,146 135 5511,180 53 34,184 1 7895,19 129 6350", ",83 92 580,42 74 6019"};
    int K = 11;
    int L = 1956;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 992541;
    if(result == expected) {
        cout << "Test Case 88: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 88: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test89() {
    int N = 200;
    vector<string> roads = {"0 89 4166,89 162 7995,162 133 5980,133 148 3741,", "148 186 1437,186 47 7627,47 93 2710,93 139 6889", ",139 68 1067,68 66 1488,66 105 9620,105 65 6174,", "65 193 5885,193 96 9241,96 78 3830,78 15 4025,15", " 80 6484,80 197 6414,197 157 1806,157 115 2160,1", "15 90 7530,90 16 3335,16 146 3618,146 168 4424,1", "68 29 1762,29 172 2638,172 62 4188,62 75 3108,75", " 4 4774,4 130 978,130 183 1036,183 19 7491,19 12", "3 7795,123 8 7012,8 107 8567,107 27 9628,27 156 ", "3652,156 55 2937,55 144 3717,144 143 2700,143 177 ", "7353,177 69 1296,69 192 2000,192 87 9958,87 54 ", "7323,54 166 5648,166 136 9444,136 73 4034,73 70 8", "84,70 58 7143,58 154 1369,154 185 4592,185 59 12", "49,59 67 1150,67 49 8297,49 21 7903,21 72 2466,7", "2 20 7433,20 190 6367,190 3 5238,3 81 6694,81 11", "1 8983,111 187 3471,187 191 4196,191 196 1238,196 ", "71 3770,71 95 2235,95 33 44,33 112 901,112 77 4584", ",77 163 4241,163 180 1160,180 145 8705,145 37 24", "9,37 137 1929,137 30 9781,30 38 6651,38 97 6430,9", "7 84 8964,84 119 9502,119 140 2276,140 138 7444,13", "8 188 2753,188 159 5619,159 110 909,110 48 8118,4", "8 164 4512,164 39 1734,39 109 7836,109 22 7970,22", " 31 276,31 99 4157,99 147 2793,147 60 7004,60 2", "8 2253,28 173 3033,173 121 9829,121 74 5265,74 8", "6 2036,86 122 9891,122 194 6070,194 56 8739,56 149", " 8120,149 118 5675,118 23 5655,23 106 2190,106 64", " 1243,64 117 3739,117 126 3259,126 9 3501,9 41 9", "5,41 150 9453,150 127 7340,127 113 3041,113 44 3", "765,44 6 9161,6 141 7653,141 40 4277,40 53 165,53 ", "82 8783,82 131 5722,131 45 6289,45 135 2284,135", " 76 8812,76 34 4909,34 165 2491,165 12 2283,12 ", "50 9607,50 35 9171,35 98 2815,98 14 4458,14 160", " 1335,160 189 1362,189 5 4855,5 184 1745,184 175 ", "443,175 174 6607,174 125 7161,125 25 9508,25 167 ", "9813,167 151 1325,151 171 1988,171 153 8985,153", " 128 5235,128 85 308,85 102 2841,102 18 2246,18", " 94 9614,94 181 7426,181 158 2170,158 10 152,10", " 46 1874,46 26 2580,26 195 837,195 42 1154,42 17", "0 4988,170 36 3962,36 198 5344,198 124 6614,124 1", " 1771,1 91 2470,91 32 3550,32 178 6035,178 161 97", "70,161 88 7272,88 51 8584,51 120 7757,120 43 502,4", "3 2 5189,2 114 5171,114 7 6876,7 61 2120,61 142", " 8136,142 24 2608,24 129 1491,129 176 3956,176 92 ", "5821,92 155 7684,155 103 8735,103 100 1609,100 79", " 3317,79 13 2231,13 11 4475,11 104 7107,104 63 742", "1,63 57 3523,57 182 6784,182 199 6543,199 169 3096", ",169 132 2980,132 83 7746,83 152 4560,152 17 5736", ",17 108 3212,108 52 4365,52 179 9763,179 101 7428,", "101 134 6872,134 116 7350"};
    int K = 6;
    int L = 1533;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 966598;
    if(result == expected) {
        cout << "Test Case 89: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 89: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test90() {
    int N = 200;
    vector<string> roads = {"111 0 6216,9 0 823,31 9 5218,192 9 6521,80 31 368,", "63 9 9619,76 80 9496,126 31 1140,154 63 2402,82 0", " 8488,13 0 9917,153 9 7695,37 31 849,168 31 1946,", "29 80 6739,89 0 6184,38 80 9193,3 80 2178,190 9", " 89,60 111 6957,23 111 5539,175 192 6881,24 111 ", "8082,173 31 564,170 9 4642,47 31 9064,182 31 55", "22,119 63 5614,131 80 2266,101 0 9272,19 63 720", "0,107 63 4522,44 0 866,15 0 9878,116 0 591,194 9 4", "892,42 0 7534,11 31 2589,167 31 3684,54 192 879", "3,106 31 4540,28 192 5144,61 31 6788,95 80 3218,", "53 31 9289,30 63 2365,6 0 6025,164 63 1212,108 63", " 6519,112 0 7626,5 80 1127,92 9 3452,144 0 1690,14", "6 192 6100,94 63 76,85 111 2668,77 9 28,59 192 ", "2493,129 192 2721,86 9 4813,133 111 2987,150 19", "2 8946,26 80 2381,124 9 6182,64 0 237,122 111 6", "122,127 31 7108,130 0 1687,78 192 7294,163 31 4956", ",187 63 7426,41 192 2479,166 9 2313,148 63 1332,", "57 80 5600,147 63 5118,161 192 4155,18 111 8634,97", " 31 9308,81 80 4992,62 31 9503,65 31 6860,14 0 721", "6,27 9 3710,84 0 920,138 31 4722,71 31 9204,87 1", "92 3896,12 63 8442,117 63 8772,88 111 4698,172 9", " 6749,189 0 2628,135 9 3795,195 9 2727,7 192 8176,", "199 192 4793,156 63 6133,99 31 4430,90 9 6311,19", "3 0 387,48 111 8513,36 9 2498,33 63 3564,137 31 9", "096,134 0 9948,1 9 8577,143 31 9200,176 111 9595,5", "8 0 435,70 80 3382,180 9 2451,155 31 6734,115 63", " 4446,120 9 7843,136 9 5269,169 111 4214,96 80 7", "484,128 31 1482,110 0 2409,105 31 10,179 9 8253,", "160 31 8158,152 0 7140,83 9 1508,74 0 9953,145 ", "31 2140,184 192 3458,100 31 2295,8 0 9733,46 9 42", "45,174 63 4504,10 0 6283,186 0 1161,181 111 5308", ",39 80 4741,2 192 3450,158 31 4369,104 111 8506,1", "57 31 7763,196 0 7943,4 111 5579,49 80 5178,51 1", "92 7981,98 9 5032,165 192 7164,118 80 5265,132 31", " 222,142 0 3831,91 80 9794,139 80 5669,198 111 94", "01,16 9 3722,67 63 554,162 111 4181,55 9 5139,7", "2 0 6599,178 111 3883,20 0 4704,151 31 2622,43 6", "3 7133,52 63 2402,56 0 226,114 192 6894,103 111 7", "045,73 31 779,183 9 9286,21 31 4037,123 192 9881,5", "0 111 1439,17 9 5758,197 192 9605,177 192 281,19", "1 63 6662,93 63 6477,121 111 7863,79 31 8321,18", "5 0 2887,141 192 6298,102 80 2128,140 9 2297,40", " 111 2242,22 0 3541,66 0 4266,35 80 6524,113 192", " 9306,69 80 7415,125 31 313,45 111 4953,68 80 304,", "171 63 6476,109 63 2645,75 31 9077,34 192 7423,", "149 0 9195,32 192 6620,188 192 455,159 0 9993,25 3", "1 7005"};
    int K = 9;
    int L = 1757;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1857258;
    if(result == expected) {
        cout << "Test Case 90: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 90: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test91() {
    int N = 200;
    vector<string> roads = {"103 0 7684,41 103 211,42 41 1904,72 0 6421,38 42", " 4378,108 41 8145,162 38 1656,54 72 4237,159 108 ", "6406,21 72 1705,104 42 251,80 0 8675,17 103 869", "1,153 72 2009,185 41 1302,11 0 9240,91 103 8830,5", "1 41 8154,128 38 2841,178 38 7404,199 42 9738,3", "3 42 3847,53 108 9224,191 38 7034,164 72 706,180", " 103 9424,112 38 7249,39 41 576,35 42 8192,62 72", " 8456,13 0 488,151 72 5547,65 0 186,48 38 7224,1", "92 42 3974,88 41 524,102 42 1323,118 42 8680,85 ", "41 569,97 0 7993,47 0 9920,193 72 6254,55 42 7796", ",1 108 5517,129 108 7569,156 103 2090,15 41 8798,1", "26 41 3329,189 0 4670,142 0 7968,5 38 1533,174 72 ", "3765,75 103 7325,166 0 49,170 38 8462,175 42 7808,", "176 108 4755,149 108 4424,165 108 8457,109 103 6", "171,141 38 9709,136 72 6928,123 72 3724,57 0 9854", ",76 41 1595,36 103 2522,58 42 5287,133 103 6828", ",20 41 9716,168 41 2686,99 0 7279,29 41 5497,92 0", " 9023,19 0 1286,56 0 2491,146 103 9125,43 41 418", "1,190 72 6058,161 41 8506,147 0 3693,82 72 9407", ",32 42 8211,89 42 4012,23 0 8275,87 42 2611,90 38 ", "8395,34 38 68,60 72 444,78 108 3148,171 108 183", "7,196 42 141,194 103 4050,152 72 1513,132 72 1305", ",117 42 9057,31 72 8607,10 108 7846,137 42 2965", ",74 42 9759,100 103 7170,98 38 7008,49 108 9507,1", "24 41 4999,158 103 287,172 108 127,125 108 798,", "173 41 9453,105 0 6634,167 72 4010,70 42 7992,73", " 103 6361,69 41 7518,116 108 9431,9 103 2807,177 1", "03 662,169 108 1109,86 72 8746,150 108 571,77 72 3", "406,93 42 374,160 42 6652,182 108 5736,6 108 6934,", "120 108 5077,46 41 3636,25 103 3651,135 103 6504", ",52 38 9671,12 0 5099,197 38 7322,121 72 9275,140 ", "41 2481,3 41 4673,119 42 8663,18 41 464,157 42 ", "234,83 0 6958,96 0 5749,115 0 6473,143 103 2758,", "106 42 1987,187 0 9756,188 0 2924,183 38 8084,4 1", "03 6118,28 72 3610,45 108 11,154 108 2286,8 42 3", "825,14 0 6852,95 41 1959,138 72 7376,163 41 4287", ",127 108 4559,179 0 7564,16 38 9414,67 103 8094,9", "4 72 5614,198 103 9286,30 72 8912,134 108 5256,1", "11 108 8312,50 103 5188,44 108 1327,24 0 97,155 41", " 4089,2 103 6849,84 41 3287,181 42 8097,145 72 6", "752,81 38 8697,107 42 2732,184 108 1437,26 0 720,", "101 72 7089,79 108 7328,122 42 7212,7 0 2607,19", "5 38 6556,27 42 3961,22 108 6633,131 41 3184,61 41", " 3724,110 38 3477,66 72 9617,37 108 2132,71 72 ", "4375,59 103 2324,144 0 9080,64 0 7287,40 42 3404,1", "86 108 2388,148 41 3412,113 41 5263,114 41 9846,", "139 0 3383,68 42 9506,130 41 6024,63 103 3747"};
    int K = 13;
    int L = 1303;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1824916;
    if(result == expected) {
        cout << "Test Case 91: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 91: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test92() {
    int N = 200;
    vector<string> roads = {"19 0 9013,42 0 1415,87 19 3906,78 19 2396,35 87 ", "5447,27 0 8827,145 87 7316,117 19 4226,136 0 89", "8,4 87 3838,137 87 1895,192 78 1982,138 78 4569,13", "0 35 249,187 35 1376,84 35 6283,67 78 6298,162 4", "2 1253,66 87 6892,186 19 7647,11 0 928,96 19 733", "3,52 35 627,150 87 5252,90 78 2656,93 78 9701,12 4", "2 7788,122 0 1667,167 87 4158,71 35 9887,135 35 97", "16,37 78 2118,102 42 7098,163 19 4546,70 87 6557,1", "41 87 5358,81 42 5963,14 87 505,57 78 79,191 78 17", "63,105 19 1487,106 19 3336,45 78 3954,147 78 7915", ",109 78 1492,13 35 2151,116 42 7268,164 42 7659,7", "9 19 1798,113 19 7352,53 19 674,94 35 9283,165 35 ", "253,24 0 3119,43 87 9192,140 19 9995,111 42 7983", ",182 19 2128,47 0 3810,174 0 5589,142 19 2320,26 0", " 6809,169 19 3789,118 42 8325,86 35 6693,158 35 80", "53,104 42 235,61 87 2414,83 42 6290,193 0 5150,7", "4 42 9447,60 78 3250,38 78 8731,18 78 7023,108 35", " 2799,65 0 196,127 35 5060,77 35 9748,177 42 1968,", "64 42 3432,133 87 2574,190 87 3431,155 0 1545,82", " 35 5208,144 42 2892,23 87 5152,8 42 9992,176 19 9", "895,149 0 8730,119 42 4763,152 78 3740,99 87 3687", ",25 19 4445,97 78 4316,112 42 4469,131 42 4106,", "173 19 4861,62 19 3448,148 35 9315,181 19 6477,17", "8 87 4090,179 87 7015,63 42 6915,172 42 4268,22 1", "9 8181,7 87 5859,1 78 629,3 19 5742,68 42 6984,1", "6 87 693,143 19 5860,115 42 1453,92 87 5637,189 19", " 101,123 87 7985,5 35 1246,171 0 6417,30 0 8202", ",153 19 9584,88 87 1863,17 87 7600,166 87 568,12", "5 42 1852,195 19 6221,6 87 4909,101 0 5626,160 4", "2 7414,41 42 1040,21 0 8003,132 19 4145,76 19 6", "988,129 35 6489,59 0 7400,32 42 2863,157 0 1878,7", "2 0 8369,9 19 5115,161 78 7510,151 19 6982,2 35 84", "54,51 78 5117,33 35 7117,188 35 4784,50 42 411,12", "6 87 3721,28 19 638,198 42 3722,175 42 1872,194 42", " 1420,80 35 5064,55 0 2533,31 19 1669,58 42 4136,", "134 42 5733,124 42 2878,36 0 6417,146 35 5768,1", "21 19 5133,159 35 161,44 0 102,110 78 6588,15 35 ", "5354,128 35 8710,100 0 8264,75 87 5151,54 87 7530", ",46 0 9839,73 42 737,184 35 7683,139 42 5753,95 1", "9 2838,156 42 4053,10 78 981,103 35 7974,120 35 ", "3401,170 42 3542,197 35 9154,98 0 8948,69 87 830", "1,168 87 1619,154 42 7851,91 78 1230,85 0 6624,", "114 87 7851,49 35 3672,199 42 8306,89 35 6741,20 ", "19 6929,48 78 1629,196 19 5528,185 0 7198,39 0 370", "0,40 35 9877,29 42 1410,107 0 3905,56 19 9847,183 ", "78 537,34 87 3589,180 19 2147"};
    int K = 8;
    int L = 1259;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1779284;
    if(result == expected) {
        cout << "Test Case 92: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 92: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test93() {
    int N = 200;
    vector<string> roads = {"20 0 9531,51 20 1161,11 51 3233,164 51 9259,10 5", "1 7440,34 164 2435,22 20 9366,197 22 9152,136 22 ", "6821,135 20 1251,152 22 8589,80 51 4005,104 34 550", "1,82 51 5522,124 10 6695,36 197 6954,68 20 7170,4", "2 34 3634,28 51 7531,67 51 5130,66 164 1780,102", " 51 8776,177 164 6081,145 20 3248,115 10 8107,5", "8 11 5103,188 164 5,161 197 5376,9 197 3578,29 19", "7 6704,142 20 9002,100 164 7986,6 51 663,50 164 9", "654,132 10 1006,26 164 7196,120 20 586,70 11 807", "2,110 34 9821,55 51 8415,74 10 9240,88 0 6954,13", "7 51 625,77 164 8776,18 164 4191,53 11 6116,19 3", "4 1216,93 34 5494,147 164 4603,47 164 4772,24 22 7", "604,72 164 5529,105 11 9630,194 20 3869,69 22 201", "6,101 11 3478,49 34 3659,109 22 9441,84 197 1911,", "96 51 7162,179 197 224,62 197 9893,25 34 5142,1", "60 10 6468,189 0 3178,35 0 113,143 11 8495,38 2", "2 1737,129 197 960,86 11 6266,151 197 8440,91 20", " 1269,64 164 566,134 11 191,75 34 2417,141 34 1", "162,13 20 713,196 0 6492,131 197 9874,23 20 5135,1", "28 34 455,30 11 6808,158 51 6713,182 164 4564,98 2", "2 6789,106 20 4538,127 11 7227,21 164 6445,2 10 8", "128,78 0 9996,48 197 9382,165 164 245,31 51 620", "4,153 34 800,144 164 443,156 22 2134,1 197 2533,8", "3 11 9882,5 197 6227,92 197 2497,87 197 2585,11", "3 51 9136,65 22 7403,178 11 7492,39 197 3067,162", " 10 2497,130 51 4565,45 10 7122,46 22 6239,192 51 ", "9465,61 22 1040,139 0 6640,108 0 660,186 0 6656,", "159 34 9163,167 22 1865,168 197 4677,174 20 8489,", "199 22 6321,99 22 7307,15 0 9665,191 11 5020,71", " 197 6784,125 20 9720,76 197 7431,41 11 4256,193 ", "164 3047,148 22 5324,170 0 6826,119 22 8977,43 11 ", "8246,163 10 7890,171 164 3457,172 10 7014,184 0", " 9771,40 11 1744,81 10 1146,169 11 1281,90 0 630,", "149 51 2274,37 34 2132,95 197 518,63 11 249,123", " 22 5026,97 164 901,118 164 2972,116 34 3529,14", " 0 8363,183 0 9110,103 10 3602,180 197 287,155 11 ", "8608,33 164 4552,117 0 7853,59 22 8971,166 51 1122", ",114 10 5745,111 22 2684,32 51 420,176 164 7173,15", "0 22 1907,79 11 2853,187 22 522,54 10 7742,56 10 ", "2730,7 51 6084,73 20 8335,17 197 9310,185 34 5620", ",122 197 5587,4 34 859,138 0 3525,140 164 1897,8", " 0 4732,3 34 4734,89 164 1524,57 51 1567,175 20 10", "97,126 11 9299,44 20 7407,27 34 103,133 20 1029,", "94 22 3633,154 164 6916,195 0 9659,16 34 1217,173 ", "11 5434,190 20 1105,181 164 3654,157 197 898,198 ", "197 7345,52 197 4562,112 22 8341,60 11 8472,85 10", " 519,146 11 6706,12 11 1231,107 34 397,121 197 6", "019"};
    int K = 7;
    int L = 1408;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1803037;
    if(result == expected) {
        cout << "Test Case 93: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 93: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test94() {
    int N = 200;
    vector<string> roads = {"128 0 2659,88 128 3834,102 88 8929,27 88 6189,12", "5 128 4793,3 102 5902,94 0 1125,126 88 2882,64 12", "8 7914,186 88 1281,152 102 3311,121 3 8729,50 1", "25 1932,124 128 9975,85 128 7945,120 88 8744,73 ", "27 9905,74 125 4153,67 102 8235,86 125 2230,97 ", "125 1131,108 125 9279,87 128 4189,104 102 8189,17 ", "128 738,44 27 3868,168 27 4538,77 3 7026,80 125 ", "2194,173 27 763,187 125 7110,16 125 6955,156 0 1", "176,109 27 4100,133 0 9049,8 125 4171,147 125 3", "65,39 27 1801,163 27 7521,169 102 61,34 102 2189", ",118 128 5542,45 125 4177,40 125 4836,15 102 907,", "150 27 7340,52 102 38,62 102 5725,35 102 4000,17", "1 125 227,57 88 1710,58 125 1910,83 27 3498,60 0", " 3159,92 3 2159,130 125 9611,49 0 8440,47 3 5545,1", "3 0 2020,99 27 6748,170 27 977,182 88 3764,162 128", " 126,194 3 9405,24 3 6612,28 3 1908,139 88 5604,1", "29 27 2353,131 128 9379,172 0 6780,149 125 2151,", "37 102 4799,184 88 7705,93 0 4439,26 128 9399,148 ", "102 305,22 88 7079,116 125 7070,111 125 4725,161 8", "8 4999,189 27 5161,2 125 1368,100 0 8354,166 27", " 8482,197 128 5366,78 88 6766,41 128 175,107 128", " 9849,141 128 3239,165 88 4887,142 27 7183,191 125", " 4875,136 128 9424,134 0 8120,7 0 9783,90 128 84", "43,183 0 8667,25 125 7609,68 102 4497,196 125 67", "96,180 88 6008,14 125 3575,23 27 5225,56 102 9857,", "144 88 7307,179 128 8912,79 102 2543,65 27 84,20", " 3 2908,188 88 9888,146 27 6563,127 27 2096,71 125", " 1063,159 125 4408,175 3 6399,84 125 1318,192 88 7", "766,154 3 8714,96 27 2353,98 102 2612,63 125 31", "81,46 88 1296,76 0 7758,61 3 8337,36 125 654,143", " 3 181,198 102 7760,89 125 9519,103 0 7249,18 2", "7 2127,55 27 2576,91 88 5912,140 3 3856,75 3 70", "80,42 88 1981,5 0 6745,33 0 8421,176 27 9417,11", "9 102 2906,153 3 5830,66 0 6943,117 128 4158,138 ", "0 9948,6 0 2817,11 102 6262,178 102 1582,155 3 9", "777,114 128 6330,54 128 5915,70 27 7372,51 88 715", "9,110 102 8570,115 27 7992,199 125 8900,195 102", " 4681,181 0 135,53 125 5755,123 102 3901,185 3 ", "3220,167 3 6380,95 3 7857,21 88 466,31 3 4933,145", " 27 3326,72 128 950,43 102 8288,38 3 3542,157 12", "5 1417,9 0 2772,122 88 9655,135 88 1338,30 27 863", "2,59 102 6415,158 3 4688,19 88 4500,193 27 5528", ",137 27 6215,151 27 9303,160 0 5445,4 128 7348,8", "1 27 2009,1 125 6662,174 0 9567,190 88 8782,106 1", "02 9757,29 27 5700,105 27 6898,69 27 6068,113 0 6", "471,132 27 7321,177 27 785,112 125 1551,12 125 ", "7146,82 125 2188,101 3 442,32 88 3873,10 102 61", "08,48 88 1772,164 102 8005"};
    int K = 7;
    int L = 1849;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1898898;
    if(result == expected) {
        cout << "Test Case 94: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 94: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test95() {
    int N = 200;
    vector<string> roads = {"63 15 2773,63 28 2816,63 193 6398,63 73 4278,63", " 143 2844,63 166 2561,63 179 9395,63 118 2782,63 ", "50 1660,63 151 2253,63 65 3177,63 54 9898,63 27 9", "198,63 164 8963,63 24 4140,63 106 1640,63 160 3059", ",63 89 3001,63 51 1802,63 128 9560,63 98 7179,63", " 8 572,63 23 9799,63 81 7386,63 184 5916,63 99 660", "1,63 83 251,63 93 2291,63 16 3740,63 59 8008,63", " 34 7876,63 181 9310,63 40 674,63 37 9919,63 167 ", "8806,63 87 4496,63 111 1895,63 133 9016,63 180 3", "254,63 95 5291,63 11 7925,63 25 7944,63 168 4047,", "63 136 8626,63 71 5991,63 82 5223,63 186 7766,63 1", "50 5901,63 77 8572,63 18 7730,63 38 1028,63 17 ", "1030,63 10 7527,63 90 9864,63 109 3075,63 57 80", "12,63 194 9661,63 182 3310,63 191 7058,63 112 40", "56,63 127 7391,63 171 5788,63 5 5730,63 45 2077,", "63 64 9582,63 12 8243,63 56 5278,63 62 2902,63 6", "6 9841,63 123 2343,63 14 283,63 110 5085,63 197 35", "3,63 119 1325,63 199 9392,63 74 5049,63 69 1603", ",63 115 9269,63 189 3358,63 75 2859,63 6 6418,63 ", "29 5703,63 36 9839,63 195 8570,63 86 1024,63 162 5", "943,63 177 499,63 42 9030,63 35 6767,63 20 1157,6", "3 183 7111,63 61 3880,63 30 8850,63 145 9983,63", " 4 9721,63 21 4734,63 7 4369,63 79 3928,63 9 9711,", "63 192 293,63 101 2159,63 125 1675,63 41 138,63 1", "21 3582,63 146 4358,63 120 9708,63 113 468,63 18", "7 1635,63 169 5854,63 70 5791,63 72 3956,63 173 9", "72,63 122 4712,63 170 2193,63 52 4867,63 158 984,", "63 76 1232,63 154 2680,63 149 1201,63 188 6688,63", " 117 8566,63 2 543,63 107 5443,63 3 3239,63 88 9", "331,63 144 8569,63 31 3739,63 129 7221,63 140 289", "6,63 132 6801,63 159 4561,63 39 7563,63 185 990", "7,63 60 9344,63 33 2841,63 13 7295,63 165 7774,6", "3 157 732,63 48 1793,63 116 1256,63 196 4452,63", " 47 9471,63 92 3637,63 156 1832,63 126 2598,63 ", "0 4747,63 155 3072,63 147 7813,63 163 1817,63 53", " 3080,63 172 9693,63 148 6240,63 78 4504,63 96 557", "9,63 130 4284,63 175 4445,63 55 4022,63 49 977,6", "3 97 3761,32 164 1599,198 2 3690,43 21 6759,178 1", "60 1738,105 14 1202,174 36 5681,44 69 1973,91 19", "4 8350,176 60 6724,58 92 125,134 59 509,102 40 ", "2233,103 83 8498,100 99 1644,114 184 3555,161 111 ", "7058,124 95 7587,26 29 7662,141 79 4274,67 21 68", "4,108 149 6670,80 107 139,139 143 2480,190 32 90", "4,135 40 7274,153 99 2654,22 81 885,131 17 6767,1", "37 162 4630,152 184 1499,46 12 6508,19 44 3719,94", " 136 1324,1 8 2396,104 118 3201,68 48 8158,138 6", "6 7826,85 89 4344,142 117 8422,84 190 9659"};
    int K = 11;
    int L = 1680;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1692430;
    if(result == expected) {
        cout << "Test Case 95: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 95: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test96() {
    int N = 200;
    vector<string> roads = {"55 1 7755,55 116 756,55 96 62,55 150 2335,55 70", " 3044,55 118 9700,55 184 3818,55 26 1735,55 199 5", "980,55 135 4876,55 42 2433,55 168 9265,55 23 8900,", "55 154 1217,55 91 5652,55 10 7731,55 41 602,55 2", "8 9781,55 22 9441,55 92 6888,55 6 6378,55 52 17", "46,55 71 294,55 179 796,55 171 5170,55 27 6970,55 ", "101 8179,55 104 5242,55 8 2718,55 37 6508,55 18", "2 9985,55 75 3575,55 145 7679,55 127 8588,55 170 2", "679,55 5 2744,55 39 217,55 181 1109,55 73 9737,5", "5 107 3092,55 25 9323,55 153 2445,55 33 8476,55", " 165 4493,55 95 7573,55 65 9649,55 86 5991,55 194", " 5576,55 60 2498,55 148 9809,55 77 1258,55 80 2", "110,55 166 7584,55 121 1791,55 149 9971,55 193 58", "33,55 108 1228,55 175 2179,55 190 8678,55 131 759", "7,55 147 8659,55 195 810,55 18 5761,55 29 9338,55 ", "99 8427,55 115 7522,55 152 6644,55 132 4718,55 167", " 6607,55 106 6082,55 136 4232,55 9 2412,55 53 1", "677,55 35 7509,55 177 9910,55 98 3868,55 100 1833", ",55 67 7427,55 157 236,55 34 278,55 140 2644,55 ", "3 4627,55 169 3526,55 113 4841,55 83 5593,55 11 ", "1156,55 191 3312,55 186 3696,55 14 4093,55 155 7", "281,55 50 5197,55 124 6303,55 141 3674,55 126 2683", ",55 174 1754,55 97 7854,55 139 756,55 76 3504,55 1", "19 3104,55 129 2760,55 12 8377,55 176 7549,55 2 36", "92,55 31 122,55 44 2122,55 62 5814,55 111 4185,", "55 38 5802,55 30 9894,55 187 3937,55 172 2133,55 1", "14 5148,55 143 6464,55 63 5332,55 7 7558,55 133", " 6079,55 79 313,55 49 4666,55 189 2812,55 93 8323", ",55 51 612,55 58 187,55 163 5477,55 123 9753,55 0", " 8136,55 159 2140,55 90 127,55 122 7971,55 158 50", "73,55 56 7545,55 137 8553,55 134 7136,55 4 7408", ",55 125 7565,55 146 9652,55 78 5358,55 57 522,55 ", "198 6675,55 142 5561,55 72 2539,55 66 1341,55 84 ", "5042,55 64 1672,55 178 1027,55 17 2826,55 15 8922", ",55 24 5941,55 105 4638,55 156 9656,55 162 728,5", "5 103 2255,55 117 3766,55 192 1010,55 48 3929,5", "5 85 3973,55 40 1939,55 59 5325,55 46 7599,55 16 ", "5902,55 173 6469,55 61 7660,55 188 7071,55 160 ", "9122,55 47 1941,55 82 8119,55 161 3695,55 36 668", "5,55 180 3279,55 13 6405,88 50 4059,112 47 7492,18", "5 86 3920,81 50 7334,151 72 8808,94 116 6048,21 ", "52 6850,130 75 5850,89 10 189,45 9 9274,69 184 82", "36,183 2 6566,19 2 3101,87 98 3633,120 150 3657,7", "4 163 6898,197 21 3162,164 129 2265,68 199 432,1", "02 131 4909,32 112 6669,109 199 5928,54 68 5866", ",144 2 7206,110 52 7284,138 10 6441,20 170 5601,1", "96 103 7657,128 114 8521,43 138 9830"};
    int K = 9;
    int L = 1106;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1812529;
    if(result == expected) {
        cout << "Test Case 96: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 96: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test97() {
    int N = 200;
    vector<string> roads = {"36 39 1543,36 45 6458,36 184 2556,36 18 9616,36 ", "41 8407,36 78 1918,36 104 2950,36 165 1732,36 2", "8 9204,36 146 6187,36 168 7719,36 82 6072,36 62", " 5596,36 135 3371,36 59 6718,36 38 4540,36 16 5", "378,36 5 1133,36 108 4998,36 84 1601,36 71 3708,3", "6 185 7709,36 46 9849,36 73 5610,36 106 3796,36 ", "51 3997,36 144 3935,36 43 2648,36 96 4962,36 42 57", "84,36 91 6232,36 164 9117,36 181 1424,36 49 442", "5,36 199 8165,36 74 9977,36 123 6168,36 94 5566,", "36 17 6122,36 187 7767,36 152 6202,36 183 1130,36", " 34 3647,36 171 5941,36 4 8539,36 29 7053,36 11", "6 3321,36 169 6816,36 52 2504,36 27 3808,36 137", " 1645,36 191 5985,36 101 3085,36 132 91,36 13 3173", ",36 120 9338,36 158 978,36 173 4398,36 161 911,3", "6 24 8108,36 140 3127,36 63 8739,36 193 4512,36 18", "6 9154,36 194 7900,36 0 1920,36 72 2079,36 86 89", "59,36 80 3,36 95 8952,36 130 3368,36 68 5147,36 5", "5 1868,36 159 2674,36 47 8127,36 197 9708,36 92", " 8807,36 125 8706,36 65 8256,36 124 4975,36 35 967", "2,36 127 2448,36 174 9861,36 111 3143,36 93 7334,3", "6 40 6215,36 179 5170,36 110 5472,36 70 5489,36 21", " 2318,36 134 5869,36 48 6990,36 162 8179,36 19 9", "629,36 87 341,36 105 9244,36 136 2557,36 121 16", "08,36 172 7911,36 142 4298,36 66 5908,36 192 2019,", "36 177 4697,36 180 430,36 155 6148,36 156 3704,3", "6 100 1856,36 20 9701,36 149 1486,36 154 4871,36 ", "126 9576,36 44 5805,36 10 5282,36 143 612,36 139 ", "9412,36 31 3541,36 14 6305,36 85 4452,36 145 7345,", "36 175 2649,36 8 3433,36 54 9364,36 99 6691,36 1", "53 204,36 67 6702,36 88 4763,36 103 9255,36 176 12", "36,36 129 8509,36 190 6070,36 178 4658,36 167 859", "4,36 79 9535,36 23 1996,36 147 6756,36 157 3560,36", " 89 9574,36 50 5508,36 114 3621,36 98 1033,36 11", "2 6970,36 189 5594,36 22 8929,36 3 3601,36 33 9", "713,36 60 4532,36 182 9273,36 76 4633,36 90 385", "4,36 57 6827,36 83 960,36 131 6633,36 163 1168,36 ", "133 4473,36 150 3252,36 195 7496,36 58 1644,36 15", " 8864,36 9 3616,36 61 1827,36 196 4605,36 198 7", "454,36 118 3558,36 113 7459,36 37 7563,36 188 9723", ",36 77 8081,36 166 6513,36 1 5159,36 6 1974,36 14", "1 1199,36 102 4299,36 97 4988,36 122 1122,36 119", " 5883,36 53 8192,36 30 4365,36 75 2649,36 138 730", "1,32 110 6206,11 144 1421,7 80 7829,128 41 6737,69", " 188 5105,148 175 1982,81 29 1899,115 50 3312,56 ", "43 6841,109 74 6937,117 21 4491,25 174 7048,12 16", "9 632,170 148 5584,64 34 7374,2 147 1192,107 150 1", "164,151 122 4713,160 69 3529,26 176 3521"};
    int K = 10;
    int L = 1393;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1853622;
    if(result == expected) {
        cout << "Test Case 97: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 97: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test98() {
    int N = 200;
    vector<string> roads = {"41 183 6363,41 73 1331,41 12 7422,41 37 6824,41 ", "57 5178,41 13 3952,41 51 5117,41 135 7447,41 194 5", "416,41 94 1560,41 60 4462,41 173 9385,41 198 98", "80,41 70 5047,41 182 4674,41 127 5089,41 160 3296", ",41 112 6883,41 20 6728,41 7 4621,41 64 366,41 86", " 7786,41 139 4390,41 197 4548,41 82 142,41 99 1", "275,41 46 3668,41 159 5032,41 96 6776,41 85 989", "3,41 158 7784,41 145 4398,41 148 1964,41 36 7379,4", "1 42 9006,41 22 8262,41 5 5743,41 44 330,41 120 3", "330,41 121 5164,41 150 787,41 103 6833,41 90 1831,", "41 157 6467,41 47 6427,41 161 4145,41 109 6600,41", " 167 4554,41 89 1903,41 9 3704,41 97 8030,41 10", "4 3654,41 171 2274,41 26 583,41 124 931,41 62 9876", ",41 111 6325,41 75 9076,41 187 3526,41 185 7559,4", "1 179 5846,41 169 148,41 189 7728,41 178 1795,41 4", " 1819,41 142 1009,41 45 6424,41 125 6785,41 29 ", "7636,41 149 3520,41 0 406,41 16 829,41 33 2958,4", "1 108 108,41 166 6003,41 100 7326,41 58 2981,41 ", "181 6975,41 170 2065,41 199 3426,41 107 4315,41 15", "4 7458,41 14 1767,41 84 1333,41 80 6937,41 131 10", "000,41 67 8589,41 28 2386,41 63 5635,41 164 3743", ",41 137 6906,41 74 3393,41 76 2353,41 136 8500,", "41 110 4646,41 68 440,41 165 5339,41 65 222,41 188", " 9717,41 38 3263,41 129 9404,41 48 3633,41 56 6", "90,41 59 4202,41 168 5397,41 24 9427,41 43 3443,", "41 6 1541,41 141 3522,41 117 7206,41 156 8642,4", "1 32 8939,41 81 8736,41 106 522,41 193 5500,41 93", " 5498,41 155 1909,41 50 3876,41 34 1900,41 132 ", "2450,41 134 3942,41 114 3065,41 102 6835,41 31 734", "7,41 78 3490,41 190 6372,41 15 8484,41 177 9151,", "41 98 2499,41 49 9271,41 52 1788,41 176 7376,41 ", "147 4031,41 77 5871,41 122 2489,41 83 9425,41 162", " 8204,41 172 5503,41 2 7652,41 72 3550,41 92 130", "5,41 79 9952,41 18 3022,41 123 2302,41 10 714,41 ", "153 1514,41 196 4423,41 140 7476,41 105 5013,41 25", " 1048,41 19 5305,41 95 6393,41 126 8108,41 54 9427", ",41 30 8257,41 53 1994,41 35 754,41 151 7222,41", " 184 7201,41 128 3878,41 180 5429,41 39 7459,41 ", "115 6454,41 146 3176,41 152 4905,41 174 9604,41 ", "17 586,41 113 3118,41 23 5923,41 21 7702,41 27 ", "3881,41 61 3798,41 116 6081,41 66 6819,41 101 891", "6,41 3 18,41 55 6273,41 91 1567,41 133 155,41 1", "18 1758,41 88 6200,41 71 6875,41 195 2311,41 13", "0 2160,41 143 4091,41 138 9188,41 40 791,41 11 4", "746,41 1 8421,192 63 8491,69 134 6035,144 159 7464", ",175 66 2776,119 192 9382,186 64 336,8 126 4823,1", "91 55 9262,163 81 6297,87 153 117"};
    int K = 13;
    int L = 1925;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1700819;
    if(result == expected) {
        cout << "Test Case 98: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 98: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test99() {
    int N = 200;
    vector<string> roads = {"89 0 5126,8 0 6040,173 89 9903,29 89 8304,111 8 3", "516,36 8 8588,10 173 6977,43 173 5159,6 29 7068,4", "6 29 2536,14 111 5324,59 111 6861,163 36 6118,19", "2 36 4038,33 10 4407,129 10 7656,133 43 9825,107 4", "3 4351,98 6 7708,183 6 5471,90 46 6229,66 46 8613", ",161 14 3803,93 14 3085,159 59 6758,60 59 8541,", "97 163 4219,21 163 5157,139 192 7625,162 192 5100,", "50 33 6203,15 33 2506,177 129 3737,120 129 6953", ",184 133 7183,180 133 3875,39 107 5698,20 107 3557", ",155 98 4603,146 98 2513,74 183 9134,164 183 5203", ",84 90 9162,174 90 5507,108 66 4346,49 66 5831,18", "7 161 7220,71 161 2652,2 93 9474,88 93 8944,103 15", "9 6440,117 159 5383,28 60 7164,176 60 8574,31 97", " 8077,165 97 3059,48 21 9260,197 21 8769,188 139", " 7574,4 139 6138,63 162 6018,1 162 6318,175 50 ", "9691,199 50 3743,25 15 4965,41 15 8952,52 177 6", "180,53 177 4441,195 120 6080,24 120 9470,91 184", " 8982,32 184 4156,193 180 7726,78 180 7635,148 39", " 2907,51 39 3150,95 20 3847,116 20 4444,131 155 49", "07,17 155 7418,118 146 5373,102 146 8688,61 74 55", "89,158 74 3654,44 164 4594,35 164 8288,38 84 3315", ",170 84 8610,23 174 7836,191 174 4316,114 108 6751", ",3 108 5703,144 49 6370,171 49 8445,9 187 3284,12", " 187 7723,145 71 6822,72 71 4040,198 2 8241,153 ", "2 7524,54 88 3826,106 88 4762,70 103 6520,57 103", " 7584,189 117 9414,190 117 2612,128 28 3318,68 28 ", "2852,22 176 7776,178 176 3959,19 31 3155,134 31 26", "88,27 165 3107,86 165 2877,64 48 6476,179 48 4484", ",157 197 8295,112 197 7385,127 188 7101,11 188 405", "7,137 4 6157,79 4 5123,13 63 3786,156 63 5074,26 ", "1 7340,130 1 4355,47 175 6042,152 175 7339,100 ", "199 9610,122 199 6007,143 25 3392,7 25 3835,40 41", " 6388,76 41 4245,101 52 4057,18 52 7618,92 53 9", "031,151 53 5711,75 195 6165,186 195 7194,113 24 87", "73,30 24 9509,81 91 4286,80 91 5681,168 32 8785,1", "32 32 4973,45 193 2900,109 193 7994,167 78 8082,6", "7 78 3839,94 148 9280,65 148 4542,194 51 7305,42 5", "1 2883,142 95 7724,154 95 9887,83 116 2674,77 1", "16 4093,150 131 4992,69 131 5079,147 17 5563,5 17 ", "2525,125 118 5173,140 118 4430,141 102 4550,160", " 102 7726,110 61 4476,166 61 3724,126 158 3080,18", "2 158 3374,149 44 9390,123 44 2801,73 35 8283,13", "8 35 8919,105 38 7411,55 38 5113,196 170 7861,13", "5 170 6743,121 23 9360,169 23 8599,62 191 5296,", "82 191 3080,34 114 4829,96 114 3796,115 3 4829,8", "5 3 7180,37 144 8403,56 144 8203,181 171 5356,10", "4 171 2867,172 9 4145,16 9 4574,99 12 5145,58 12 ", "5983,185 145 5984,136 145 5007,119 72 6449,124 72 ", "3954,87 198 3466"};
    int K = 70;
    int L = 1823;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1394010;
    if(result == expected) {
        cout << "Test Case 99: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 99: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test100() {
    int N = 200;
    vector<string> roads = {"72 0 9905,117 0 9263,88 72 8918,96 72 9517,42 117 ", "4606,91 117 3372,123 88 5328,161 88 5333,84 96 72", "87,79 96 4514,148 42 6948,24 42 5345,107 91 581", "9,86 91 7233,15 123 9337,53 123 8312,115 161 3493,", "43 161 3360,122 84 5816,13 84 3037,111 79 5538,80", " 79 5374,121 148 9372,166 148 3626,149 24 6610,12", "5 24 8327,190 107 6002,186 107 5227,29 86 6784,5", "1 86 7296,54 15 9299,75 15 7872,150 53 5701,142 53", " 8843,177 115 6132,33 115 7102,87 43 3412,63 43 ", "4432,5 122 5308,81 122 7290,151 13 8096,22 13 926", "1,25 111 8400,3 111 8774,139 80 9059,187 80 4891,", "44 121 7956,82 121 2510,113 166 6343,127 166 7107,", "64 149 5480,31 149 5521,196 125 3578,6 125 5817,9 ", "190 5616,26 190 5669,8 186 9864,67 186 8681,99 2", "9 8815,73 29 3878,137 0 4621,124 137 3870,21 137", " 8122,174 124 6846,147 124 5592,118 21 6822,94 21 ", "4651,175 174 5180,101 174 3209,2 147 5005,77 147 2", "662,69 118 2734,74 118 6217,65 94 8639,119 94 755", "4,168 175 7754,92 175 5194,158 101 6737,178 101 78", "32,195 2 4825,184 2 3079,159 77 9888,171 77 991", "4,50 69 3190,71 69 7334,97 74 6502,27 74 3380,1", "31 65 8791,61 65 2686,188 119 6406,165 119 5471", ",39 168 9953,198 168 7414,90 92 5016,36 92 2946,7", "0 158 7408,153 158 3325,68 178 4284,47 178 5688,1", "30 195 9435,104 195 8096,37 184 9372,20 184 9896,", "169 159 5146,162 159 9012,182 171 9658,48 171 61", "57,199 50 5051,105 50 3391,28 71 9960,157 71 839", "2,62 97 5725,129 97 7370,120 27 8745,19 27 5535,13", "6 131 6675,145 131 9731,192 61 7252,134 61 2976", ",143 188 3210,112 188 4118,16 165 8392,191 165 ", "7072,12 39 4692,154 39 9400,17 198 3020,32 198 ", "8741,126 90 2803,160 90 6784,152 36 7164,89 36 37", "29,189 70 5130,128 70 4086,133 153 6246,35 153 ", "6580,194 68 9069,57 68 4413,138 47 4095,38 47 50", "08,18 130 3067,52 130 9170,114 104 4453,141 104", " 8148,193 37 7497,66 37 6189,167 20 7700,78 20 ", "3018,132 169 5180,23 169 4522,170 162 4541,1 16", "2 4767,98 182 8679,14 182 2802,144 48 5040,109 48 ", "3236,55 199 6779,180 199 7339,164 105 4548,103 105", " 8638,49 28 5850,76 28 4277,93 157 7883,197 157 90", "16,60 62 3344,58 62 3787,40 129 5636,181 129 8283,", "156 120 6432,179 120 6424,83 19 8676,59 19 9985,", "173 136 6358,10 136 7917,102 145 5663,116 145 35", "49,106 192 3587,110 192 8962,183 134 8146,135 134", " 8162,163 143 6022,4 143 6463,176 112 5125,172 ", "112 5022,140 16 9692,34 16 8504,7 191 4961,95 191 ", "8466,185 12 4271,155 12 2970,11 154 7410,45 154 6", "114,85 17 9721,146 17 8258,46 32 2639,108 32 55", "35,100 126 4009,56 126 7160,41 160 3276,30 160 ", "2985"};
    int K = 53;
    int L = 1751;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1512253;
    if(result == expected) {
        cout << "Test Case 100: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 100: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test101() {
    int N = 200;
    vector<string> roads = {"90 0 3957,15 0 8199,101 90 8806,189 90 7729,73 15", " 8990,163 15 6585,175 101 2659,169 101 4803,123", " 189 8364,66 189 7204,22 73 7322,44 73 4469,27 163", " 7381,127 163 5233,95 175 5595,43 175 5396,140 1", "69 3569,142 169 4981,49 123 5295,150 123 9511,26", " 66 7186,128 66 7538,194 22 3867,148 22 7230,28 44", " 3257,197 44 8585,35 27 9253,12 27 9880,103 127", " 4932,36 127 8207,9 95 5301,166 95 9254,149 43 5", "049,108 43 5361,124 140 3334,107 140 9061,111 1", "42 4344,69 142 8204,161 49 9893,174 49 7953,113 ", "150 3349,198 0 9476,196 198 8422,83 198 6243,97", " 196 3841,41 196 7861,177 83 4954,154 83 3298,112 ", "97 3362,64 97 9890,170 41 5425,74 41 7173,137 17", "7 7328,176 177 9821,19 154 4640,92 154 2534,110", " 112 7178,156 112 5312,99 64 4157,185 64 8508,31", " 170 6826,180 170 3630,191 74 6710,59 74 8831,114 ", "137 9993,23 137 9895,79 176 7720,89 176 7266,71", " 19 6274,16 19 4608,88 92 2941,183 92 3997,120 110", " 3408,55 110 4150,146 156 9936,193 156 9556,24 99", " 8258,82 99 9339,143 185 4946,61 185 4622,190 3", "1 3824,8 31 8487,84 180 3827,14 180 8782,47 191 69", "67,199 191 9110,119 59 9397,116 59 9993,138 114", " 8304,63 114 6965,62 23 6094,94 23 7021,188 79 83", "27,29 79 5935,115 89 3642,75 89 8241,168 71 9786", ",181 71 6927,129 16 9175,187 16 9006,38 88 9030,1", "00 88 8248,68 183 2698,21 183 6706,132 120 7900", ",125 120 6922,182 55 8968,46 55 4011,37 146 7728", ",91 146 2750,153 193 4913,77 193 9858,56 24 316", "1,131 24 9636,11 82 9587,65 82 6632,159 143 9958", ",45 143 4084,130 61 9443,160 61 2943,105 190 308", "8,40 190 7946,171 8 3587,167 8 7077,135 84 6818", ",98 84 8966,178 14 5059,192 14 8596,39 47 2762,", "48 47 5007,186 199 7466,7 199 9959,30 119 3505,6", "7 119 4659,54 116 3737,53 116 5196,106 138 5170", ",18 138 7772,158 63 7084,144 63 4437,20 62 8791,", "78 62 4473,117 94 3384,141 94 3005,121 188 3697", ",164 188 3311,33 29 5708,6 29 2938,145 115 7637,", "139 115 7003,52 75 3600,17 75 8362,70 168 7695,58 ", "168 2932,162 181 8068,2 181 4587,118 129 3669,1 1", "29 5681,10 187 2736,80 187 5890,50 198 4106,4 50", " 5625,51 50 7994,60 4 5925,57 4 4367,184 51 8578,", "109 51 7462,179 60 8028,134 60 8871,152 57 8111", ",122 57 8623,86 184 8606,87 184 6687,136 109 8401", ",102 109 9513,157 179 3879,34 179 5122,5 134 26", "24,133 134 6487,42 152 9443,195 152 2851,72 122 51", "06,126 122 6960,155 86 9637,3 86 8903,13 87 511", "4,25 87 8655,173 136 3260,104 136 6913,165 102 ", "4063,85 102 4482,147 157 7076,172 157 8941,76 34 ", "8139,81 34 6540,96 5 9759,32 5 5207,151 133 4699,", "93 133 9504"};
    int K = 83;
    int L = 1088;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1426222;
    if(result == expected) {
        cout << "Test Case 101: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 101: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test102() {
    int N = 200;
    vector<string> roads = {"127 0 6306,95 0 4112,140 127 6123,99 127 6957,1", "19 95 9503,142 95 5845,147 140 6337,39 140 5772,4 ", "99 3695,42 99 5199,110 119 9800,139 119 3723,16", "2 142 7431,45 142 4910,129 147 6739,85 147 9482,", "1 39 9742,48 39 6772,54 4 2602,120 4 8484,47 42 67", "50,77 42 6443,158 110 2556,22 110 3856,137 139 852", "5,23 139 6886,133 162 7811,66 162 8773,195 45 7", "661,149 45 5869,32 0 6173,33 32 6023,16 32 8850,67", " 33 2964,197 32 2666,132 197 3358,176 197 8674,", "143 132 4389,185 132 8791,8 176 3613,198 176 447", "4,84 143 6176,187 143 8422,191 185 7626,196 185", " 5019,145 8 7208,53 8 9932,11 198 4024,69 198 89", "41,104 84 3323,91 84 5292,13 187 3330,78 187 929", "9,37 191 8260,74 191 2726,111 196 3632,29 196 2", "999,134 145 6231,136 145 9479,102 53 2716,144 53 ", "9473,121 11 7397,96 11 7779,131 69 6551,64 69 3403", ",106 104 8550,157 104 9708,179 91 9863,94 91 730", "9,164 13 3706,130 13 3033,30 78 4684,100 78 5871,", "89 37 4280,138 37 3626,49 74 3459,87 74 2860,50", " 111 6789,126 111 2820,20 29 4209,9 29 7988,28 13", "4 4477,103 134 4503,160 136 2822,188 136 9166,72 ", "102 9838,107 102 4194,165 144 3789,148 144 2988", ",153 121 8399,199 121 3419,21 96 8909,114 96 5472", ",55 131 9496,105 131 9469,86 64 7239,141 64 3230,3", " 106 7322,182 106 4152,123 157 5877,70 157 8678,1", "84 179 9554,163 179 5068,60 94 2644,41 94 8202,128", " 164 8052,168 164 7163,73 130 6351,83 130 8967,35", " 30 8430,183 30 4431,62 100 5233,58 100 6289,113 8", "9 2898,178 89 2884,172 138 3463,51 138 8624,146 4", "9 6236,81 49 5457,173 87 9948,36 87 2758,10 50 837", "9,75 50 5325,59 126 2809,19 126 6264,5 20 4455,161", " 20 2619,14 9 5734,108 9 6282,193 28 4012,31 28 7", "920,26 103 3341,79 103 4971,117 160 9873,151 160 8", "998,156 188 5009,56 188 8139,97 72 6755,24 72 5", "098,76 107 8568,154 107 8070,6 165 5928,122 165 2", "764,175 148 9221,181 148 4680,152 153 3942,17 153 ", "3068,63 199 4774,118 199 9812,167 21 5440,46 21 2", "529,186 114 4639,109 114 4685,194 55 7926,190 55 ", "4445,27 105 9074,98 105 5205,61 86 4022,7 86 767", "5,15 141 5170,180 141 6871,189 3 6343,170 3 655", "1,80 182 4984,112 182 9759,18 123 8822,65 123 611", "7,115 70 3665,38 70 5645,43 184 4980,52 184 7632", ",177 163 6904,2 163 7274,101 60 9892,169 60 9342,1", "2 41 5162,93 41 6633,116 128 3082,68 128 4608,40 1", "68 5666,155 168 6693,90 73 6214,71 73 7281,159 83 ", "5349,44 83 8477,57 35 6611,150 35 9726,124 183 45", "17,25 183 7224,92 62 5998,88 62 3802,192 58 7160,1", "35 58 3695,171 0 6951,82 171 9616,34 171 9930,12", "5 82 2637,174 82 8354,166 34 4447"};
    int K = 92;
    int L = 1726;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1395336;
    if(result == expected) {
        cout << "Test Case 102: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 102: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test103() {
    int N = 200;
    vector<string> roads = {"111 0 7475,51 0 4703,17 111 2709,12 111 3339,64 51", " 9285,141 51 9242,78 17 2753,114 17 8991,63 12 ", "9599,26 12 9374,191 64 7651,37 64 8975,93 141 441", "4,76 141 4031,87 78 4849,131 78 4043,110 114 4600,", "57 114 8839,95 63 3521,166 63 9002,40 26 5421,7", "9 26 9464,91 191 2733,39 191 8853,4 37 9478,88 37 ", "4684,151 93 3783,2 93 8688,104 76 3087,163 76 4423", ",1 87 3697,35 87 9951,152 131 8892,137 131 9775,", "165 110 3949,59 110 7440,177 57 6296,13 57 2714,7", "5 95 6596,92 95 8289,155 166 4427,47 166 8264,107 ", "40 9498,158 40 7703,180 79 5130,70 79 3645,97 9", "1 4238,121 91 5615,153 39 9481,10 39 6871,154 4 89", "85,190 4 3748,103 88 3048,62 88 3265,140 151 856", "6,124 151 3913,197 2 5069,171 2 9572,194 104 971", "2,7 104 4449,185 0 5677,144 185 5605,145 185 6932,", "20 144 8243,116 144 8486,46 145 6174,96 145 3554", ",19 20 6226,105 20 3311,25 116 8433,68 116 9708,13", "4 46 4229,183 46 5684,101 96 5667,86 96 3269,54 ", "19 8995,60 19 7220,90 105 9891,80 105 8961,170 ", "25 7822,128 25 5397,157 68 3619,186 68 8497,49 1", "34 8917,142 134 7818,55 183 4665,15 183 5493,130", " 101 6310,147 0 8396,50 147 3311,82 147 2856,173 5", "0 5444,117 50 5065,100 82 9713,11 82 3940,72 173 7", "526,94 173 5397,23 117 7171,28 117 9661,148 100 41", "26,149 100 8574,179 11 4094,77 11 3292,143 72 8", "583,89 72 6886,102 94 6905,118 94 6467,108 23 3682", ",14 23 5912,123 28 3227,18 28 5204,45 148 6530,1", "92 148 8420,175 149 2755,81 149 7611,182 179 63", "46,9 179 3096,122 77 5598,109 77 9106,21 143 8046", ",74 143 9788,5 89 7843,126 89 5460,139 102 8117,15", "9 102 2887,132 118 5972,193 118 6263,189 108 6251", ",162 108 5169,52 14 4396,106 14 7424,161 123 863", "9,187 185 7584,176 187 4020,29 187 3496,172 176 81", "08,198 176 8766,73 29 4384,164 29 7578,174 172 64", "64,33 172 7292,48 198 9477,120 198 8583,150 73 38", "26,178 73 7646,181 164 6307,6 164 5483,115 174 756", "2,43 0 8571,136 43 7397,127 43 7133,119 136 796", "2,195 136 8173,160 127 2895,84 127 7831,69 119 6", "451,66 119 5193,167 195 3687,71 195 8795,184 160 8", "047,199 160 5843,135 84 7880,129 84 3556,42 69 561", "9,30 69 2707,58 66 9113,41 66 6417,133 167 2676,8", "3 167 5259,44 71 4038,98 71 4840,85 184 5633,16 18", "4 7746,8 199 4542,61 199 9908,38 135 3058,168 135", " 6732,67 129 3156,196 129 5282,112 42 8099,3 42 ", "2642,34 30 5091,188 30 5328,36 58 7356,53 58 63", "99,22 41 7079,169 41 9634,27 133 3514,125 133 6770", ",24 83 9955,156 83 6314,146 44 2906,99 44 2978,", "65 98 9401,56 98 2852,32 85 5539,31 85 9662,113 1", "6 7988,138 16 3967"};
    int K = 52;
    int L = 1471;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1498491;
    if(result == expected) {
        cout << "Test Case 103: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 103: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test104() {
    int N = 200;
    vector<string> roads = {"100 0 9993,46 0 6652,65 100 8869,94 100 4321,82 ", "46 3613,8 46 5948,187 65 9277,47 65 7301,69 94 598", "2,25 94 8105,167 82 8521,56 82 9740,13 8 6159,186", " 8 8218,72 187 5589,193 187 7324,30 47 6522,44 4", "7 7170,101 69 9959,35 69 3301,42 25 5058,16 25 669", "1,48 167 9179,117 167 4118,98 56 4108,61 56 5668,", "157 13 6203,27 13 9092,160 186 7770,87 186 9413", ",169 72 3586,55 72 5855,14 193 6095,131 193 6037", ",59 30 3841,23 30 3069,179 44 9967,123 44 7442,40", " 101 6735,96 101 8328,52 35 5707,49 35 2777,191 42", " 5243,124 42 6003,161 16 8042,58 16 3167,198 48 ", "6352,118 48 9904,189 117 4162,143 117 8472,182 ", "98 6244,38 98 4419,105 61 3599,144 61 5906,26 1", "57 8545,4 157 9471,119 27 7224,36 27 9992,12 160", " 9833,171 0 5935,111 171 9122,151 171 5567,91 11", "1 4516,127 111 8426,150 151 9361,60 151 4952,73", " 91 9040,164 91 4070,125 127 2652,29 127 6221,1", "47 150 7334,78 150 3555,97 60 9073,79 60 2508,1", "90 73 6198,177 73 6241,53 164 5874,107 164 5324,", "24 125 8723,132 125 4307,196 29 8125,92 29 6073,9", "3 147 4003,66 147 5816,142 78 8919,115 78 2547,41 ", "97 2627,89 97 3216,113 79 4567,130 79 4921,2 190", " 9936,70 190 4394,185 0 5450,178 185 2836,50 185 ", "3343,116 178 7385,102 178 9728,81 50 5045,137 50", " 6337,20 116 9192,197 116 2863,173 102 5089,168 ", "102 8268,103 81 4177,199 81 6009,15 137 8353,12", "8 137 7434,57 20 3063,80 20 6076,176 197 8144,10", "6 0 9586,140 106 9248,112 106 5293,83 140 5287,1", "55 185 3486,34 155 3751,84 155 5205,22 34 3794,7", "5 34 4918,129 84 7668,28 84 7196,54 22 2623,120 2", "2 4152,139 75 8581,1 75 7579,156 129 6817,148 12", "9 8638,5 28 9383,126 28 9183,152 54 5749,77 54 400", "4,31 120 4123,51 120 4824,17 139 4165,175 139 5757", ",76 1 4573,174 1 6758,108 156 7758,3 156 6021,162", " 148 9043,180 148 2719,158 5 5688,166 5 9528,183 ", "126 9682,135 126 9781,184 152 6370,37 152 3791,7", "1 77 6755,170 77 9151,99 31 7841,11 31 5521,136 51", " 6498,68 51 7185,149 17 4203,64 17 8130,95 175 ", "6805,188 175 8431,104 76 7828,88 76 5731,21 174 ", "5993,85 174 4739,194 108 8117,7 108 2564,165 3 95", "69,141 3 8519,192 162 9994,9 162 9334,172 180 76", "34,114 180 3564,133 158 3126,6 158 7337,195 166 ", "8673,18 185 9586,33 18 4391,145 18 7965,181 33 4", "608,19 33 3055,153 145 3796,43 145 7440,121 181", " 5924,63 181 3584,90 19 4713,122 19 3870,163 153", " 2514,110 153 5627,62 43 3447,32 43 2670,109 12", "1 9934,154 121 9443,146 63 3707,86 63 5385,74 9", "0 9337,67 90 7213,138 122 9402,45 122 4660,39 163 ", "9054,10 163 6999,134 110 6021,159 110 5790"};
    int K = 97;
    int L = 1438;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1406909;
    if(result == expected) {
        cout << "Test Case 104: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 104: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test105() {
    int N = 200;
    vector<string> roads = {"195 0 4695,45 0 6330,157 195 8169,59 195 2634,97", " 45 6642,54 45 7358,151 157 6746,18 157 8652,12", "8 59 6502,194 59 9792,152 97 3015,90 97 9199,21 54", " 4754,47 54 4045,186 151 6735,111 151 6589,25 18 ", "7506,67 18 6589,131 128 7548,36 128 7793,20 194 57", "24,62 194 8150,6 152 3307,96 152 9949,164 90 660", "1,78 90 8338,100 21 3752,41 21 7525,108 0 5455,12", " 108 8751,146 108 4969,153 0 8278,165 153 6414,8", "5 153 4029,5 165 2820,27 165 9756,35 85 4739,83", " 85 9558,57 5 3230,75 5 7657,112 27 6561,163 27 2", "787,196 35 7544,29 35 7097,174 83 7114,94 83 7190", ",22 57 8177,177 57 4668,2 75 4036,161 75 5376,8", "8 112 9271,182 112 5631,42 163 3522,138 163 352", "2,49 196 2941,124 196 5267,169 29 3568,33 29 65", "72,113 174 3583,84 174 8572,150 94 5127,11 94 4", "805,16 22 4029,172 22 9918,139 177 5595,55 177 37", "60,17 153 3354,30 17 9624,188 30 6166,149 30 9013", ",91 188 7517,82 188 9882,167 149 4599,87 149 6995", ",98 91 8685,175 91 5956,72 82 9887,65 82 6319,13", "6 167 6251,104 167 4125,192 87 3017,102 87 3576,", "68 98 6414,184 98 5368,185 175 8135,14 175 6588,11", "4 72 7571,168 72 9063,32 65 2510,79 65 6155,23 1", "36 7895,48 136 2595,7 104 7305,134 104 9686,181 ", "192 3237,127 192 2660,197 102 9195,155 102 5467,1", "05 68 4262,31 68 6624,125 184 3495,115 184 9801,6", "3 185 8023,93 185 9237,73 14 6251,8 14 7935,135 1", "14 6536,193 114 9447,141 168 7257,142 168 5825,1", " 32 9348,179 32 4462,56 79 5701,46 79 7276,148 2", "3 5857,144 0 6738,51 144 9380,158 144 6090,10 51", " 4122,147 51 3662,116 158 7608,122 158 2902,180 10", " 3421,133 10 8112,4 147 5009,40 147 7605,199 116 7", "779,95 116 4010,64 122 4974,173 17 8144,187 173", " 9137,101 173 8242,71 187 6189,162 187 3369,143 10", "1 6504,44 101 4241,92 71 7642,3 71 9988,70 162 88", "39,110 162 5268,37 143 9739,190 143 9590,119 44 6", "709,183 44 8203,130 92 3759,38 92 2910,121 3 77", "32,170 3 4597,156 70 7594,58 70 4345,77 110 405", "6,117 110 6645,69 37 4322,160 37 8946,34 190 6713", ",178 190 2704,13 119 7938,60 119 4272,99 183 336", "0,50 183 2538,103 130 8027,154 130 5543,76 38 604", "8,61 38 2563,52 121 9577,137 121 7331,176 170 79", "21,86 170 9902,171 156 8317,106 156 7612,43 58 4", "678,39 58 8107,123 77 8016,132 77 9050,118 117 32", "17,19 117 9897,129 69 8618,9 69 3348,81 160 532", "0,191 160 3425,145 34 2704,140 34 5948,28 178 5", "146,74 178 4046,26 13 3943,120 13 4963,189 60 6218", ",107 60 5021,80 99 7517,53 99 5008,198 50 7592,", "109 50 2655,166 103 4773,159 103 9795,24 154 816", "1,66 154 7680,126 76 7862,89 76 8858,15 61 4897"};
    int K = 87;
    int L = 1598;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1422455;
    if(result == expected) {
        cout << "Test Case 105: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 105: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test106() {
    int N = 200;
    vector<string> roads = {"39 0 7361,61 0 2541,24 39 4951,11 39 9948,99 61 7", "217,60 61 5413,19 24 5342,43 24 9249,70 11 9615,", "7 11 7845,185 99 5738,166 99 8760,169 60 8009,1", "58 60 8255,126 19 7527,41 19 3938,153 43 6793,25", " 43 2987,48 70 3854,86 70 6777,35 7 6810,9 7 9334", ",160 185 8564,26 185 5365,74 166 4066,174 166 5749", ",27 169 7283,18 0 4080,81 18 7211,93 18 5233,29 81", " 3336,102 81 8001,178 93 5641,149 93 8779,47 29 65", "90,1 29 8404,14 102 9733,42 102 5002,163 178 4686", ",89 178 6977,40 149 9296,51 149 9335,67 47 7320,13", "3 47 5331,115 1 5835,62 1 9704,50 14 3099,31 14 9", "909,193 42 7957,66 42 9149,136 163 8966,123 163 ", "8432,152 89 7058,90 89 8513,94 18 6331,87 94 89", "19,77 94 4407,109 87 5529,118 87 8430,44 77 9427,", "37 77 2690,96 109 2970,34 109 4802,10 118 2701,12", "8 118 5115,186 44 7248,8 44 9701,92 37 6315,189 3", "7 9077,97 96 9057,83 96 5487,132 34 8395,125 34 6", "154,198 10 3820,32 10 3726,154 128 5912,79 128 90", "66,122 186 7776,131 186 4476,58 8 6227,114 8 566", "4,179 92 8042,140 92 6688,116 189 4198,119 189 ", "8957,54 97 6102,95 97 6339,108 83 9987,135 83 88", "30,148 132 6043,80 132 9380,156 125 8638,13 125 35", "24,182 198 8332,192 198 4340,101 32 4614,88 32 ", "7399,188 154 5064,4 154 4415,184 79 7297,23 79 555", "7,72 122 9579,107 122 3874,170 131 8789,65 131 25", "54,190 18 8401,194 190 8401,21 190 5040,71 194 94", "49,68 194 2832,165 21 9394,180 21 5822,127 71 61", "98,63 71 3683,16 68 5509,120 68 6777,15 165 2996,", "5 165 8098,171 180 2583,117 180 7458,177 127 653", "7,155 18 8345,104 155 8392,173 0 5635,146 173 2969", ",121 173 8021,33 146 3280,176 146 4095,129 121 ", "5553,137 121 4848,134 33 3776,106 33 9005,159 176", " 7116,49 176 7268,46 129 7519,69 129 8193,84 137 ", "6964,76 137 5666,36 134 9509,168 134 2986,157 10", "6 3650,64 106 4611,191 159 4065,181 159 6565,139 4", "9 6753,2 49 5604,3 46 7467,82 46 4851,55 69 787", "5,141 69 2885,138 84 4850,197 84 4134,172 76 696", "3,124 76 7305,175 36 7302,187 36 6519,150 168 43", "77,53 168 2676,164 157 4306,144 157 6756,167 18", " 3871,110 167 5142,57 167 4515,195 110 5867,130 18", " 7194,45 130 6716,147 130 5326,151 45 6808,103 4", "5 9278,145 147 4992,38 147 3430,100 151 6594,73 ", "151 9720,111 103 6975,17 103 7651,20 145 7102,28 ", "145 5421,162 38 7756,91 38 3226,78 100 8603,183", " 100 3552,6 73 6102,85 73 5296,199 111 5768,105 ", "111 9409,161 17 3294,52 17 2868,113 20 4185,12 20", " 8005,59 28 2785,196 28 4655,30 162 3766,56 162 49", "19,22 91 5676,75 91 6866,143 78 7495,142 78 372", "9,98 183 9916,112 183 7726"};
    int K = 86;
    int L = 1276;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1401112;
    if(result == expected) {
        cout << "Test Case 106: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 106: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test107() {
    int N = 200;
    vector<string> roads = {"60 0 5355,56 0 4025,145 60 9078,166 60 4041,83 ", "56 9049,29 56 3683,117 145 4214,55 145 9503,42 1", "66 7219,163 166 5252,91 83 2607,95 83 7362,36 29", " 4092,90 29 8036,22 117 4900,15 117 6867,101 55 6", "512,18 55 4474,33 42 4091,25 42 5378,184 163 4893", ",176 163 3830,110 91 8469,173 91 5063,1 95 8045", ",17 95 4955,43 36 7674,3 36 6283,162 90 6419,85 ", "90 5415,143 22 6567,62 22 6316,197 15 7236,131 ", "15 8373,53 101 9923,194 101 7716,51 18 2850,109 18", " 8904,130 0 4551,75 130 5103,48 130 9828,49 75 3", "844,87 75 5156,77 48 3500,199 48 2967,158 0 8648,", "94 158 7921,79 158 5470,35 94 9965,63 94 8653,1", "78 79 5099,68 79 6219,156 35 9336,122 35 9969,61", " 63 3509,93 63 9458,182 178 6914,114 178 3305,19", "1 68 9094,10 68 8332,161 156 8651,92 156 9722,1", "68 122 3617,195 122 7335,76 61 8099,136 61 5918", ",126 93 3648,98 93 6534,115 182 3637,47 182 9767", ",113 114 8282,180 114 9485,190 191 6959,160 191", " 2945,127 10 8655,103 10 6635,105 161 2721,175 1", "61 4675,58 92 6796,140 92 5971,124 168 8645,72 ", "168 6956,14 195 6717,144 195 2660,183 76 3938,9 ", "76 6610,13 136 4044,71 136 7725,8 126 9810,106 ", "126 5847,32 98 7562,50 98 5279,7 115 4929,11 115 9", "564,146 47 7250,45 47 9483,78 113 3489,39 113 377", "7,171 180 9448,41 180 9433,149 190 4322,118 190 75", "89,40 160 7874,132 160 5419,96 127 3175,97 127 9", "440,134 103 3951,153 130 4999,81 153 6454,100 153", " 3234,167 81 5667,119 81 6866,89 100 8654,116 100", " 8362,147 167 2956,26 167 6771,80 119 2932,137 119", " 6277,59 89 4136,46 89 6970,181 116 3397,141 116 ", "4052,125 147 3227,111 147 6191,165 26 3083,54 2", "6 4593,6 80 8478,57 80 9802,170 137 4168,172 137 ", "7724,133 59 2779,148 59 4353,107 46 9790,64 46 566", "8,169 181 9262,174 181 5418,73 141 7189,152 141 9", "534,187 125 4046,70 125 5517,44 111 7904,82 111", " 7742,104 165 8739,108 165 8845,66 54 9428,52 5", "4 2813,198 6 8192,34 6 9991,2 57 9294,74 130 582", "5,88 74 6349,189 74 4231,67 88 7284,196 88 9333,18", "6 189 7828,155 189 8585,157 67 5463,164 67 4131,13", "5 196 5830,65 196 8766,99 186 3136,12 186 9768,", "21 155 5634,151 155 5473,38 157 6655,177 157 3151", ",185 164 7244,142 164 6203,37 135 6427,19 135 943", "0,30 65 6175,24 65 9055,139 99 8664,128 99 9978,", "121 12 6226,159 12 8629,150 21 4747,138 21 6615,", "188 151 8984,84 151 8608,102 38 3185,28 158 7852,5", " 28 4749,23 28 6572,4 5 6684,192 5 7649,179 23 ", "8110,20 23 8802,123 4 9056,112 4 8523,193 28 87", "92,31 193 9286,129 130 4756,27 129 6519,69 129 283", "1,154 27 7853,120 0 3135,16 120 5507,86 120 8556"};
    int K = 98;
    int L = 1053;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1395927;
    if(result == expected) {
        cout << "Test Case 107: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 107: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test108() {
    int N = 200;
    vector<string> roads = {"128 0 2889,72 0 3595,112 128 7462,181 128 3804,74 ", "72 4928,29 72 5136,156 112 4062,154 112 8109,64 18", "1 5531,69 181 2989,195 74 9619,152 74 5786,52 29", " 4210,198 29 6663,105 156 8675,27 156 2811,28 1", "54 2547,41 154 3662,183 64 3843,8 64 3796,57 69 5", "351,55 69 8608,118 195 6448,153 195 5024,135 15", "2 9899,150 152 9796,159 52 3005,144 52 9710,25 19", "8 7498,51 198 7225,126 105 3101,66 105 3466,130 27", " 4028,84 27 4215,190 28 8564,184 28 7023,44 0 434", "6,99 44 3501,15 44 3392,6 44 4516,86 6 9588,96 6", " 9068,134 86 3673,188 86 6404,142 96 6770,42 96", " 5300,178 134 2690,165 134 4722,169 188 9666,35", " 188 8838,123 142 2562,24 142 4466,108 42 5952,8", "1 42 8671,14 178 8205,17 178 4927,85 165 4869,71", " 165 5198,114 169 9734,100 169 9258,83 35 7749,5", "0 35 2600,197 123 8080,3 123 3482,21 24 8971,98", " 24 8702,59 6 6999,45 59 9674,102 59 3589,187 45", " 4186,151 45 4041,62 102 9648,48 102 2719,166 187", " 7413,136 187 5358,26 151 4726,32 151 6729,20 6 ", "3372,61 20 7299,167 20 6325,11 61 4790,119 61 4740", ",180 167 8259,199 167 6156,160 11 2803,46 11 724", "9,168 119 7811,196 119 5568,107 180 4514,87 180", " 5810,103 199 7986,63 199 7585,106 160 4779,189 1", "60 6504,176 46 5951,110 46 5240,43 168 4482,67 168", " 3645,31 196 6910,92 196 5928,93 107 8907,12 107 7", "531,4 87 6258,174 87 3664,76 103 3615,91 103 3246,", "192 63 4953,80 20 9347,56 80 7876,132 80 7920,1", "45 56 6065,115 56 5720,131 132 3687,147 132 2835,", "94 145 4138,5 145 9823,23 115 5608,65 115 3442,1", "75 131 8253,36 131 3538,104 147 6413,77 147 7154", ",95 94 7357,157 94 9154,179 80 3176,161 44 6680,39", " 161 3836,40 161 6078,141 39 7781,149 39 5206,137", " 40 6262,97 40 6081,113 141 8022,193 141 4386,14", "8 149 3554,133 149 8571,89 137 8551,127 137 8848", ",162 97 9032,37 97 4081,140 113 5683,121 113 930", "3,122 193 6425,158 193 3301,170 148 3608,120 14", "8 7444,143 133 9906,70 133 6115,146 89 6026,9 8", "9 6827,75 127 8866,34 179 4267,186 34 5764,109 34", " 5507,18 186 2992,13 186 3439,2 109 3965,163 109 3", "391,82 18 8668,101 18 4377,138 13 3040,79 13 995", "6,60 2 9563,10 2 6436,53 163 8373,185 163 8035,", "111 82 6481,194 82 3350,177 101 9881,30 101 7542", ",124 138 3080,155 138 7733,173 79 6634,125 79 5", "192,1 60 2732,164 60 2897,22 80 3758,191 22 868", "4,171 22 3188,19 191 6304,16 191 2570,78 171 5024", ",73 171 8828,129 19 8011,172 19 8132,49 16 7385", ",88 16 9801,116 78 6419,7 78 3470,117 73 2851,68 ", "73 4634,54 129 6800,90 129 9111,47 172 9382,38 172", " 9378,182 49 9309,33 49 9421,139 88 6958,58 88 93", "00"};
    int K = 74;
    int L = 1661;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1403892;
    if(result == expected) {
        cout << "Test Case 108: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 108: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test109() {
    int N = 200;
    vector<string> roads = {"72 0 9905,117 0 9263,88 72 8918,96 72 9517,42 117 ", "4606,91 117 3372,123 88 5328,161 88 5333,84 96 72", "87,79 96 4514,148 42 6948,24 42 5345,107 91 581", "9,86 91 7233,15 123 9337,53 123 8312,115 161 3493,", "43 161 3360,122 84 5816,13 84 3037,111 79 5538,80", " 79 5374,121 148 9372,166 148 3626,149 24 6610,12", "5 24 8327,190 107 6002,186 107 5227,29 86 6784,5", "1 86 7296,54 15 9299,75 15 7872,150 53 5701,142 53", " 8843,177 115 6132,33 115 7102,87 43 3412,63 43 ", "4432,5 122 5308,81 122 7290,151 13 8096,22 13 926", "1,25 111 8400,3 111 8774,139 80 9059,187 80 4891,", "44 121 7956,82 121 2510,113 166 6343,127 166 7107,", "64 149 5480,31 149 5521,196 125 3578,6 125 5817,9 ", "190 5616,26 190 5669,8 186 9864,67 186 8681,99 2", "9 8815,73 29 3878,137 0 4621,124 137 3870,21 137", " 8122,174 124 6846,147 124 5592,118 21 6822,94 21 ", "4651,175 174 5180,101 174 3209,2 147 5005,77 147 2", "662,69 118 2734,74 118 6217,65 94 8639,119 94 755", "4,168 175 7754,92 175 5194,158 101 6737,178 101 78", "32,195 2 4825,184 2 3079,159 77 9888,171 77 991", "4,50 69 3190,71 69 7334,97 74 6502,27 74 3380,1", "31 65 8791,61 65 2686,188 119 6406,165 119 5471", ",39 168 9953,198 168 7414,90 92 5016,36 92 2946,7", "0 158 7408,153 158 3325,68 178 4284,47 178 5688,1", "30 195 9435,104 195 8096,37 184 9372,20 184 9896,", "169 159 5146,162 159 9012,182 171 9658,48 171 61", "57,199 50 5051,105 50 3391,28 71 9960,157 71 839", "2,62 97 5725,129 97 7370,120 27 8745,19 27 5535,13", "6 131 6675,145 131 9731,192 61 7252,134 61 2976", ",143 188 3210,112 188 4118,16 165 8392,191 165 ", "7072,12 39 4692,154 39 9400,17 198 3020,32 198 ", "8741,126 90 2803,160 90 6784,152 36 7164,89 36 37", "29,189 70 5130,128 70 4086,133 153 6246,35 153 ", "6580,194 68 9069,57 68 4413,138 47 4095,38 47 50", "08,18 130 3067,52 130 9170,114 104 4453,141 104", " 8148,193 37 7497,66 37 6189,167 20 7700,78 20 ", "3018,132 169 5180,23 169 4522,170 162 4541,1 16", "2 4767,98 182 8679,14 182 2802,144 48 5040,109 48 ", "3236,55 199 6779,180 199 7339,164 105 4548,103 105", " 8638,49 28 5850,76 28 4277,93 157 7883,197 157 90", "16,60 62 3344,58 62 3787,40 129 5636,181 129 8283,", "156 120 6432,179 120 6424,83 19 8676,59 19 9985,", "173 136 6358,10 136 7917,102 145 5663,116 145 35", "49,106 192 3587,110 192 8962,183 134 8146,135 134", " 8162,163 143 6022,4 143 6463,176 112 5125,172 ", "112 5022,140 16 9692,34 16 8504,7 191 4961,95 191 ", "8466,185 12 4271,155 12 2970,11 154 7410,45 154 6", "114,85 17 9721,146 17 8258,46 32 2639,108 32 55", "35,100 126 4009,56 126 7160,41 160 3276,30 160 ", "2985"};
    int K = 100;
    int L = 1751;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1420627;
    if(result == expected) {
        cout << "Test Case 109: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 109: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test110() {
    int N = 200;
    vector<string> roads = {"3 150 3039,3 75 147,3 100 6736,3 76 5477,3 159 1", "609,3 123 1249,3 63 7149,3 115 2794,3 70 5097,3", " 153 9960,3 163 201,3 79 7708,3 80 4915,3 8 9419", ",3 114 5533,3 171 9999,3 26 7393,3 45 3265,3 22 57", "60,3 195 2558,3 168 9095,3 92 8324,3 130 8937,3 ", "108 1265,3 23 7223,3 71 6852,3 18 2559,3 37 2497", ",3 16 5322,3 184 5664,3 151 2971,3 38 5383,3 29 ", "1166,3 17 353,3 54 4135,3 7 704,3 82 6214,3 143 7", "541,3 161 286,3 98 8848,3 19 2417,3 175 5368,3 61", " 163,3 11 3084,3 140 1231,3 32 3090,3 78 6627,3 ", "95 1544,3 160 8690,3 154 5499,3 72 5895,3 189 6147", ",3 113 6481,3 2 494,3 176 7205,3 185 2178,3 64 10", "71,3 4 7186,3 128 8007,3 144 6131,3 20 2062,3 69 2", "155,3 173 9381,3 120 3603,3 178 5671,3 182 3657", ",3 138 1343,3 104 3498,3 181 3599,3 31 9167,3 1", "01 3276,3 127 9470,3 77 6698,3 102 3247,3 135 394", "2,3 5 6531,3 164 4645,3 105 3707,3 106 7394,3 18", "0 4623,3 147 8363,3 57 3127,3 198 6293,3 167 9257", ",3 48 4991,3 43 1796,3 97 8491,3 33 6978,3 124 155", "5,3 117 5559,3 15 3695,3 137 5866,3 162 5452,3 14", "8 8281,3 81 9291,3 131 8119,3 134 3402,3 146 72", "48,3 126 1361,3 24 9551,3 10 442,3 133 1137,3 19", "3 2677,3 40 3559,3 90 1324,3 66 5199,3 109 8229,", "3 25 8033,3 46 7004,3 49 7670,3 199 4737,3 94 887", "5,3 50 4252,3 139 2916,3 142 89,3 35 267,3 165 164", "1,3 136 2043,3 34 1820,3 99 5786,3 155 4249,3 56 8", "134,3 110 7403,3 84 8986,3 59 7078,3 141 6500,3 51", " 7277,3 85 1661,3 187 6506,3 170 9405,3 53 4461,3 ", "1 7244,3 36 7133,3 166 5465,3 55 6712,3 39 9837,3", " 158 5135,3 152 8191,3 65 5877,3 44 7410,3 188 3", "168,3 118 2795,3 58 953,3 87 3145,3 179 6617,3 12 ", "1559,3 103 1422,3 192 3150,3 73 7607,3 86 8926,3 8", "3 9675,3 177 9857,3 89 4103,3 156 9049,3 27 4316,3", " 52 1409,3 157 5276,3 30 7054,3 6 5,3 129 4556,3", " 47 3682,3 21 1418,3 107 1812,3 169 2314,3 149 2", "072,3 68 9696,3 190 1941,3 174 6611,3 122 3159,3 ", "112 6131,3 145 2149,3 125 1560,3 41 308,3 191 40", "96,3 119 6193,3 132 3614,3 88 1894,3 194 4202,3 96", " 4414,3 62 296,3 116 7201,3 74 9006,3 186 6733,", "3 121 3154,3 13 255,3 28 5421,3 14 9533,3 196 751", "9,3 67 8562,3 0 3152,3 42 632,3 183 6476,3 93 781", "4,3 197 2665,3 60 5189,3 111 7080,3 9 8347,3 172", " 4094,3 91 2951"};
    int K = 6;
    int L = 1377;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1853583;
    if(result == expected) {
        cout << "Test Case 110: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 110: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test111() {
    int N = 200;
    vector<string> roads = {"0 89 4166,89 162 7995,162 133 5980,133 148 3741,", "148 186 1437,186 47 7627,47 93 2710,93 139 6889", ",139 68 1067,68 66 1488,66 105 9620,105 65 6174,", "65 193 5885,193 96 9241,96 78 3830,78 15 4025,15", " 80 6484,80 197 6414,197 157 1806,157 115 2160,1", "15 90 7530,90 16 3335,16 146 3618,146 168 4424,1", "68 29 1762,29 172 2638,172 62 4188,62 75 3108,75", " 4 4774,4 130 978,130 183 1036,183 19 7491,19 12", "3 7795,123 8 7012,8 107 8567,107 27 9628,27 156 ", "3652,156 55 2937,55 144 3717,144 143 2700,143 177 ", "7353,177 69 1296,69 192 2000,192 87 9958,87 54 ", "7323,54 166 5648,166 136 9444,136 73 4034,73 70 8", "84,70 58 7143,58 154 1369,154 185 4592,185 59 12", "49,59 67 1150,67 49 8297,49 21 7903,21 72 2466,7", "2 20 7433,20 190 6367,190 3 5238,3 81 6694,81 11", "1 8983,111 187 3471,187 191 4196,191 196 1238,196 ", "71 3770,71 95 2235,95 33 44,33 112 901,112 77 4584", ",77 163 4241,163 180 1160,180 145 8705,145 37 24", "9,37 137 1929,137 30 9781,30 38 6651,38 97 6430,9", "7 84 8964,84 119 9502,119 140 2276,140 138 7444,13", "8 188 2753,188 159 5619,159 110 909,110 48 8118,4", "8 164 4512,164 39 1734,39 109 7836,109 22 7970,22", " 31 276,31 99 4157,99 147 2793,147 60 7004,60 2", "8 2253,28 173 3033,173 121 9829,121 74 5265,74 8", "6 2036,86 122 9891,122 194 6070,194 56 8739,56 149", " 8120,149 118 5675,118 23 5655,23 106 2190,106 64", " 1243,64 117 3739,117 126 3259,126 9 3501,9 41 9", "5,41 150 9453,150 127 7340,127 113 3041,113 44 3", "765,44 6 9161,6 141 7653,141 40 4277,40 53 165,53 ", "82 8783,82 131 5722,131 45 6289,45 135 2284,135", " 76 8812,76 34 4909,34 165 2491,165 12 2283,12 ", "50 9607,50 35 9171,35 98 2815,98 14 4458,14 160", " 1335,160 189 1362,189 5 4855,5 184 1745,184 175 ", "443,175 174 6607,174 125 7161,125 25 9508,25 167 ", "9813,167 151 1325,151 171 1988,171 153 8985,153", " 128 5235,128 85 308,85 102 2841,102 18 2246,18", " 94 9614,94 181 7426,181 158 2170,158 10 152,10", " 46 1874,46 26 2580,26 195 837,195 42 1154,42 17", "0 4988,170 36 3962,36 198 5344,198 124 6614,124 1", " 1771,1 91 2470,91 32 3550,32 178 6035,178 161 97", "70,161 88 7272,88 51 8584,51 120 7757,120 43 502,4", "3 2 5189,2 114 5171,114 7 6876,7 61 2120,61 142", " 8136,142 24 2608,24 129 1491,129 176 3956,176 92 ", "5821,92 155 7684,155 103 8735,103 100 1609,100 79", " 3317,79 13 2231,13 11 4475,11 104 7107,104 63 742", "1,63 57 3523,57 182 6784,182 199 6543,199 169 3096", ",169 132 2980,132 83 7746,83 152 4560,152 17 5736", ",17 108 3212,108 52 4365,52 179 9763,179 101 7428,", "101 134 6872,134 116 7350"};
    int K = 100;
    int L = 1353;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 966418;
    if(result == expected) {
        cout << "Test Case 111: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 111: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test112() {
    int N = 200;
    vector<string> roads = {"19 0 9013,42 0 1415,87 19 3906,78 19 2396,35 87 ", "5447,27 0 8827,145 87 7316,117 19 4226,136 0 89", "8,4 87 3838,137 87 1895,192 78 1982,138 78 4569,13", "0 35 249,187 35 1376,84 35 6283,67 78 6298,162 4", "2 1253,66 87 6892,186 19 7647,11 0 928,96 19 733", "3,52 35 627,150 87 5252,90 78 2656,93 78 9701,12 4", "2 7788,122 0 1667,167 87 4158,71 35 9887,135 35 97", "16,37 78 2118,102 42 7098,163 19 4546,70 87 6557,1", "41 87 5358,81 42 5963,14 87 505,57 78 79,191 78 17", "63,105 19 1487,106 19 3336,45 78 3954,147 78 7915", ",109 78 1492,13 35 2151,116 42 7268,164 42 7659,7", "9 19 1798,113 19 7352,53 19 674,94 35 9283,165 35 ", "253,24 0 3119,43 87 9192,140 19 9995,111 42 7983", ",182 19 2128,47 0 3810,174 0 5589,142 19 2320,26 0", " 6809,169 19 3789,118 42 8325,86 35 6693,158 35 80", "53,104 42 235,61 87 2414,83 42 6290,193 0 5150,7", "4 42 9447,60 78 3250,38 78 8731,18 78 7023,108 35", " 2799,65 0 196,127 35 5060,77 35 9748,177 42 1968,", "64 42 3432,133 87 2574,190 87 3431,155 0 1545,82", " 35 5208,144 42 2892,23 87 5152,8 42 9992,176 19 9", "895,149 0 8730,119 42 4763,152 78 3740,99 87 3687", ",25 19 4445,97 78 4316,112 42 4469,131 42 4106,", "173 19 4861,62 19 3448,148 35 9315,181 19 6477,17", "8 87 4090,179 87 7015,63 42 6915,172 42 4268,22 1", "9 8181,7 87 5859,1 78 629,3 19 5742,68 42 6984,1", "6 87 693,143 19 5860,115 42 1453,92 87 5637,189 19", " 101,123 87 7985,5 35 1246,171 0 6417,30 0 8202", ",153 19 9584,88 87 1863,17 87 7600,166 87 568,12", "5 42 1852,195 19 6221,6 87 4909,101 0 5626,160 4", "2 7414,41 42 1040,21 0 8003,132 19 4145,76 19 6", "988,129 35 6489,59 0 7400,32 42 2863,157 0 1878,7", "2 0 8369,9 19 5115,161 78 7510,151 19 6982,2 35 84", "54,51 78 5117,33 35 7117,188 35 4784,50 42 411,12", "6 87 3721,28 19 638,198 42 3722,175 42 1872,194 42", " 1420,80 35 5064,55 0 2533,31 19 1669,58 42 4136,", "134 42 5733,124 42 2878,36 0 6417,146 35 5768,1", "21 19 5133,159 35 161,44 0 102,110 78 6588,15 35 ", "5354,128 35 8710,100 0 8264,75 87 5151,54 87 7530", ",46 0 9839,73 42 737,184 35 7683,139 42 5753,95 1", "9 2838,156 42 4053,10 78 981,103 35 7974,120 35 ", "3401,170 42 3542,197 35 9154,98 0 8948,69 87 830", "1,168 87 1619,154 42 7851,91 78 1230,85 0 6624,", "114 87 7851,49 35 3672,199 42 8306,89 35 6741,20 ", "19 6929,48 78 1629,196 19 5528,185 0 7198,39 0 370", "0,40 35 9877,29 42 1410,107 0 3905,56 19 9847,183 ", "78 537,34 87 3589,180 19 2147"};
    int K = 100;
    int L = 1259;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1090518;
    if(result == expected) {
        cout << "Test Case 112: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 112: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test113() {
    int N = 200;
    vector<string> roads = {"41 183 6363,41 73 1331,41 12 7422,41 37 6824,41 ", "57 5178,41 13 3952,41 51 5117,41 135 7447,41 194 5", "416,41 94 1560,41 60 4462,41 173 9385,41 198 98", "80,41 70 5047,41 182 4674,41 127 5089,41 160 3296", ",41 112 6883,41 20 6728,41 7 4621,41 64 366,41 86", " 7786,41 139 4390,41 197 4548,41 82 142,41 99 1", "275,41 46 3668,41 159 5032,41 96 6776,41 85 989", "3,41 158 7784,41 145 4398,41 148 1964,41 36 7379,4", "1 42 9006,41 22 8262,41 5 5743,41 44 330,41 120 3", "330,41 121 5164,41 150 787,41 103 6833,41 90 1831,", "41 157 6467,41 47 6427,41 161 4145,41 109 6600,41", " 167 4554,41 89 1903,41 9 3704,41 97 8030,41 10", "4 3654,41 171 2274,41 26 583,41 124 931,41 62 9876", ",41 111 6325,41 75 9076,41 187 3526,41 185 7559,4", "1 179 5846,41 169 148,41 189 7728,41 178 1795,41 4", " 1819,41 142 1009,41 45 6424,41 125 6785,41 29 ", "7636,41 149 3520,41 0 406,41 16 829,41 33 2958,4", "1 108 108,41 166 6003,41 100 7326,41 58 2981,41 ", "181 6975,41 170 2065,41 199 3426,41 107 4315,41 15", "4 7458,41 14 1767,41 84 1333,41 80 6937,41 131 10", "000,41 67 8589,41 28 2386,41 63 5635,41 164 3743", ",41 137 6906,41 74 3393,41 76 2353,41 136 8500,", "41 110 4646,41 68 440,41 165 5339,41 65 222,41 188", " 9717,41 38 3263,41 129 9404,41 48 3633,41 56 6", "90,41 59 4202,41 168 5397,41 24 9427,41 43 3443,", "41 6 1541,41 141 3522,41 117 7206,41 156 8642,4", "1 32 8939,41 81 8736,41 106 522,41 193 5500,41 93", " 5498,41 155 1909,41 50 3876,41 34 1900,41 132 ", "2450,41 134 3942,41 114 3065,41 102 6835,41 31 734", "7,41 78 3490,41 190 6372,41 15 8484,41 177 9151,", "41 98 2499,41 49 9271,41 52 1788,41 176 7376,41 ", "147 4031,41 77 5871,41 122 2489,41 83 9425,41 162", " 8204,41 172 5503,41 2 7652,41 72 3550,41 92 130", "5,41 79 9952,41 18 3022,41 123 2302,41 10 714,41 ", "153 1514,41 196 4423,41 140 7476,41 105 5013,41 25", " 1048,41 19 5305,41 95 6393,41 126 8108,41 54 9427", ",41 30 8257,41 53 1994,41 35 754,41 151 7222,41", " 184 7201,41 128 3878,41 180 5429,41 39 7459,41 ", "115 6454,41 146 3176,41 152 4905,41 174 9604,41 ", "17 586,41 113 3118,41 23 5923,41 21 7702,41 27 ", "3881,41 61 3798,41 116 6081,41 66 6819,41 101 891", "6,41 3 18,41 55 6273,41 91 1567,41 133 155,41 1", "18 1758,41 88 6200,41 71 6875,41 195 2311,41 13", "0 2160,41 143 4091,41 138 9188,41 40 791,41 11 4", "746,41 1 8421,192 63 8491,69 134 6035,144 159 7464", ",175 66 2776,119 192 9382,186 64 336,8 126 4823,1", "91 55 9262,163 81 6297,87 153 117"};
    int K = 100;
    int L = 1925;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1149755;
    if(result == expected) {
        cout << "Test Case 113: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 113: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test114() {
    int N = 200;
    vector<string> roads = {"3 150 3039,3 75 147,3 100 6736,3 76 5477,3 159 1", "609,3 123 1249,3 63 7149,3 115 2794,3 70 5097,3", " 153 9960,3 163 201,3 79 7708,3 80 4915,3 8 9419", ",3 114 5533,3 171 9999,3 26 7393,3 45 3265,3 22 57", "60,3 195 2558,3 168 9095,3 92 8324,3 130 8937,3 ", "108 1265,3 23 7223,3 71 6852,3 18 2559,3 37 2497", ",3 16 5322,3 184 5664,3 151 2971,3 38 5383,3 29 ", "1166,3 17 353,3 54 4135,3 7 704,3 82 6214,3 143 7", "541,3 161 286,3 98 8848,3 19 2417,3 175 5368,3 61", " 163,3 11 3084,3 140 1231,3 32 3090,3 78 6627,3 ", "95 1544,3 160 8690,3 154 5499,3 72 5895,3 189 6147", ",3 113 6481,3 2 494,3 176 7205,3 185 2178,3 64 10", "71,3 4 7186,3 128 8007,3 144 6131,3 20 2062,3 69 2", "155,3 173 9381,3 120 3603,3 178 5671,3 182 3657", ",3 138 1343,3 104 3498,3 181 3599,3 31 9167,3 1", "01 3276,3 127 9470,3 77 6698,3 102 3247,3 135 394", "2,3 5 6531,3 164 4645,3 105 3707,3 106 7394,3 18", "0 4623,3 147 8363,3 57 3127,3 198 6293,3 167 9257", ",3 48 4991,3 43 1796,3 97 8491,3 33 6978,3 124 155", "5,3 117 5559,3 15 3695,3 137 5866,3 162 5452,3 14", "8 8281,3 81 9291,3 131 8119,3 134 3402,3 146 72", "48,3 126 1361,3 24 9551,3 10 442,3 133 1137,3 19", "3 2677,3 40 3559,3 90 1324,3 66 5199,3 109 8229,", "3 25 8033,3 46 7004,3 49 7670,3 199 4737,3 94 887", "5,3 50 4252,3 139 2916,3 142 89,3 35 267,3 165 164", "1,3 136 2043,3 34 1820,3 99 5786,3 155 4249,3 56 8", "134,3 110 7403,3 84 8986,3 59 7078,3 141 6500,3 51", " 7277,3 85 1661,3 187 6506,3 170 9405,3 53 4461,3 ", "1 7244,3 36 7133,3 166 5465,3 55 6712,3 39 9837,3", " 158 5135,3 152 8191,3 65 5877,3 44 7410,3 188 3", "168,3 118 2795,3 58 953,3 87 3145,3 179 6617,3 12 ", "1559,3 103 1422,3 192 3150,3 73 7607,3 86 8926,3 8", "3 9675,3 177 9857,3 89 4103,3 156 9049,3 27 4316,3", " 52 1409,3 157 5276,3 30 7054,3 6 5,3 129 4556,3", " 47 3682,3 21 1418,3 107 1812,3 169 2314,3 149 2", "072,3 68 9696,3 190 1941,3 174 6611,3 122 3159,3 ", "112 6131,3 145 2149,3 125 1560,3 41 308,3 191 40", "96,3 119 6193,3 132 3614,3 88 1894,3 194 4202,3 96", " 4414,3 62 296,3 116 7201,3 74 9006,3 186 6733,", "3 121 3154,3 13 255,3 28 5421,3 14 9533,3 196 751", "9,3 67 8562,3 0 3152,3 42 632,3 183 6476,3 93 781", "4,3 197 2665,3 60 5189,3 111 7080,3 9 8347,3 172", " 4094,3 91 2951"};
    int K = 100;
    int L = 1377;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1111878;
    if(result == expected) {
        cout << "Test Case 114: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 114: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test115() {
    int N = 200;
    vector<string> roads = {"156 96 686,158 7 3581,114 124 4330,169 105 1908,13", "9 104 3119,190 148 5099,119 108 5264,160 65 6635,7", "0 131 7927,22 26 5590,13 106 7917,24 144 4264,186 ", "26 3606,48 54 5262,155 166 2699,174 49 1769,95 1 1", "388,49 102 5856,116 138 198,78 55 7318,56 131 4153", ",48 192 7565,136 194 8274,148 13 6085,15 152 2084,", "164 102 8639,20 188 1179,50 189 2209,113 29 1273,7", "1 90 356,199 31 6197,189 168 1958,169 156 289,177 ", "183 527,170 76 217,129 35 3407,0 21 5625,33 130 54", "81,7 68 6393,74 37 9904,151 145 7422,166 29 4310,3", "5 38 519,82 111 1028,179 112 5923,10 37 3217,90 11", "0 9148,182 197 7310,139 101 5425,47 74 9345,165 43", " 4628,50 143 9577,63 89 6909,123 112 2901,73 38 20", "13,25 30 5344,181 164 7891,117 158 3192,171 81 755", "2,184 30 5515,61 186 9899,17 79 3749,92 64 7472,95", " 182 187,107 119 4275,195 62 4041,145 183 9945,108", " 12 6251,16 14 5873,116 192 6338,18 0 6154,91 24 9", "646,98 147 647,197 162 6673,41 106 673,165 100 292", "1,120 126 6241,140 57 6172,151 176 230,176 44 1665", ",31 40 5516,78 82 1209,121 3 7594,18 107 8777,80 1", "44 462,185 47 9606,175 146 4120,71 167 4704,101 84", " 9149,30 132 1672,52 196 219,85 59 9048,175 133 17", "72,67 22 4042,124 62 9234,96 134 2398,127 32 8082,", "12 172 5531,0 143 8648,99 149 306,130 86 1868,48 7", "6 1154,98 24 9952,17 46 8866,64 23 7826,9 23 6976,", "157 153 1786,198 172 4066,165 19 3148,135 161 2015", ",153 15 2083,115 159 8663,187 60 9576,44 36 9676,1", "27 128 3791,154 141 37,16 150 9281,75 76 7911,68 9", "7 1092,70 4 8430,166 196 5934,140 182 1310,193 5 3", "829,124 5 7705,125 20 1704,84 134 9414,87 178 6454", ",88 173 9785,188 102 4944,4 194 5101,140 109 6443,", "16 66 6811,55 81 6254,73 85 6394,193 58 5676,14 15", "5 431,2 92 3369,28 99 7461,53 10 849,118 81 2868,6", "9 92 5828,34 137 2931,60 135 1531,162 180 5403,43 ", "135 8958,163 105 1673,45 146 1791,142 159 8238,37 ", "51 9583,157 6 2882,199 56 3019,129 180 1868,32 36 ", "544,87 185 6847,69 59 5924,75 100 2247,122 152 261", "3,124 29 2377,93 94 8383,98 115 7556,42 193 7478,4", "1 83 4825,34 86 4367,139 94 83,110 173 1218,128 11", " 6394,117 40 514,103 138 939,130 198 3855,161 27 1", "362,136 61 3806,118 133 6034,191 56 644,63 3 1688,", "149 11 1436,83 178 9601,177 120 3361,72 9 3226,72 ", "103 4190,154 125 9295,17 179 2459,122 111 7209,179", " 80 1163,131 8 3002,13 39 407,174 10 7086,45 77 52", "48,140 141 3019,167 93 9463,34 22 3631,66 121 6927", ",65 150 3292,78 25 8455,28 163 1293,6 120 3374,148", " 97 6025,168 159 4038,77 79 239,89 88 6963"};
    int K = 20;
    int L = 5000;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 1058010;
    if(result == expected) {
        cout << "Test Case 115: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 115: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test116() {
    int N = 10;
    vector<string> roads = {"1 2 2,4 1 9,2 5 5,6 5 4,", "1 7 7,7 3 1,2 0 2", ",5 8 5,9 5 6"};
    int K = 2;
    int L = 4;
    KingdomTour* pObj = new KingdomTour();
    clock_t start = clock();
    int result = pObj->minTime(N, roads, K, L);
    clock_t end = clock();
    delete pObj;
    int expected = 59;
    if(result == expected) {
        cout << "Test Case 116: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 116: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    test67() == 0 ? ++passed : ++failed;
    test68() == 0 ? ++passed : ++failed;
    test69() == 0 ? ++passed : ++failed;
    test70() == 0 ? ++passed : ++failed;
    test71() == 0 ? ++passed : ++failed;
    test72() == 0 ? ++passed : ++failed;
    test73() == 0 ? ++passed : ++failed;
    test74() == 0 ? ++passed : ++failed;
    test75() == 0 ? ++passed : ++failed;
    test76() == 0 ? ++passed : ++failed;
    test77() == 0 ? ++passed : ++failed;
    test78() == 0 ? ++passed : ++failed;
    test79() == 0 ? ++passed : ++failed;
    test80() == 0 ? ++passed : ++failed;
    test81() == 0 ? ++passed : ++failed;
    test82() == 0 ? ++passed : ++failed;
    test83() == 0 ? ++passed : ++failed;
    test84() == 0 ? ++passed : ++failed;
    test85() == 0 ? ++passed : ++failed;
    test86() == 0 ? ++passed : ++failed;
    test87() == 0 ? ++passed : ++failed;
    test88() == 0 ? ++passed : ++failed;
    test89() == 0 ? ++passed : ++failed;
    test90() == 0 ? ++passed : ++failed;
    test91() == 0 ? ++passed : ++failed;
    test92() == 0 ? ++passed : ++failed;
    test93() == 0 ? ++passed : ++failed;
    test94() == 0 ? ++passed : ++failed;
    test95() == 0 ? ++passed : ++failed;
    test96() == 0 ? ++passed : ++failed;
    test97() == 0 ? ++passed : ++failed;
    test98() == 0 ? ++passed : ++failed;
    test99() == 0 ? ++passed : ++failed;
    test100() == 0 ? ++passed : ++failed;
    test101() == 0 ? ++passed : ++failed;
    test102() == 0 ? ++passed : ++failed;
    test103() == 0 ? ++passed : ++failed;
    test104() == 0 ? ++passed : ++failed;
    test105() == 0 ? ++passed : ++failed;
    test106() == 0 ? ++passed : ++failed;
    test107() == 0 ? ++passed : ++failed;
    test108() == 0 ? ++passed : ++failed;
    test109() == 0 ? ++passed : ++failed;
    test110() == 0 ? ++passed : ++failed;
    test111() == 0 ? ++passed : ++failed;
    test112() == 0 ? ++passed : ++failed;
    test113() == 0 ? ++passed : ++failed;
    test114() == 0 ? ++passed : ++failed;
    test115() == 0 ? ++passed : ++failed;
    test116() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=22686851&rd=14157&pm=11003
********************************************************************************
#include<string> 
#include<vector> 
#include<cmath> 
#include<sstream> 
#include<iostream> 
#include<algorithm> 
#define L 300 
using namespace std; 
 
vector<int> lj[L]; 
bool bt[L]; 
int best,besti; 
int map[L][L]; 
 
void dfs(int x,int v){ 
  if (bt[x]) return; 
  if (v>best) {best=v;besti=x;} 
  bt[x]=1; 
  for (int i=0;i<lj[x].size();++i) 
      dfs(lj[x][i],v+map[x][lj[x][i]]); 
} 
 
bool change(int x,int y){ 
  if (bt[x]) return false; 
  bt[x]=1; 
  if (x==y) return true; 
  for (int i=0;i<lj[x].size();++i) 
    if (change(lj[x][i],y)){ 
        map[x][lj[x][i]]=map[lj[x][i]][x]=-map[lj[x][i]][x]; 
        return true; 
    } 
  return false; 
} 
 
#undef L 
 
class KingdomTour{ 
public: 
  int minTime(int N, vector <string> roads, int K, int L){ 
    string s; 
    int i,a,b,c,ans=0; 
    for (i=0;i<roads.size();++i) s+=roads[i]; 
    istringstream in(s); 
    memset(map,0,sizeof map); 
    for (i=0;i<N;++i) lj[i].clear(); 
    while (in >> a >> b >> c){ 
      lj[a].push_back(b); 
      lj[b].push_back(a); 
      map[a][b]=map[b][a]=c; 
      ans+=c*2; 
      char ch; 
      in >> ch; 
    } 
    int j,x,y; 
    for (int t=0;t<K;++t){ 
      int tmp=0; 
      for (i=0;i<N;++i){ 
        for (j=0;j<N;++j) bt[j]=0; 
        best=0;besti=-1; 
        dfs(i,0); 
        if (best>tmp){ 
          tmp=best; 
          x=i; 
          y=besti; 
        } 
      } 
      if (tmp<=L) break; 
      ans-=tmp-L; 
      for (j=0;j<N;++j) bt[j]=0; 
      change(x,y); 
    } 
    return ans; 
  } 
 
}; 
 
 
// Powered by FileEdit
// Powered by TZTester 1.01 [25-Feb-2003]
// Powered by CodeProcessor

********************************************************************************
*******************************************************************************/