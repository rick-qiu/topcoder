/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=10516
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class AntOnGraph {
public:
    string maximumBonus(vector<string> p0, vector<string> p1, vector<string> p2, int stepsPerSecond, int timeLimit);
};

string AntOnGraph::maximumBonus(vector<string> p0, vector<string> p1, vector<string> p2, int stepsPerSecond, int timeLimit) {
    string ret;
    return ret;
}


int test0() {
    vector<string> p0 = {"05", "50"};
    vector<string> p1 = {"00", "00"};
    vector<string> p2 = {"01", "10"};
    int stepsPerSecond = 3;
    int timeLimit = 2;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "3";
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<string> p0 = {"05", "50"};
    vector<string> p1 = {"00", "00"};
    vector<string> p2 = {"01", "10"};
    int stepsPerSecond = 2;
    int timeLimit = 3;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "IMPOSSIBLE";
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<string> p0 = {"0550", "0000", "0005", "5000"};
    vector<string> p1 = {"0000", "0000", "0000", "0000"};
    vector<string> p2 = {"0110", "0000", "0001", "1000"};
    int stepsPerSecond = 7;
    int timeLimit = 9;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "49";
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<string> p0 = {"0540", "0000", "0004", "4000"};
    vector<string> p1 = {"0090", "0000", "0009", "9000"};
    vector<string> p2 = {"0190", "0000", "0009", "9000"};
    int stepsPerSecond = 7;
    int timeLimit = 9;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-5";
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<string> p0 = {"079269665406", "506042219642", "720809987956", "315099331918", "952306192584", "406390344278", "999241035142", "370785209189", "728363760165", "019367419000", "279718007804", "610188263490"};
    vector<string> p1 = {"038604914953", "804585763146", "350629473403", "028096403898", "575205051686", "427800322647", "655168017864", "582553303278", "980402170192", "620737714031", "686142310509", "092421645460"};
    vector<string> p2 = {"063231394554", "109852259379", "740182746422", "853015982521", "476805512496", "898530717993", "430534005863", "440162807186", "132879980431", "685312177072", "780267345400", "959947501200"};
    int stepsPerSecond = 37;
    int timeLimit = 1221;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "20992235";
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<string> p0 = {"00", "00"};
    vector<string> p1 = {"00", "00"};
    vector<string> p2 = {"01", "20"};
    int stepsPerSecond = 99;
    int timeLimit = 10000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-49352";
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<string> p0 = {"000", "000", "000"};
    vector<string> p1 = {"000", "000", "000"};
    vector<string> p2 = {"000", "000", "000"};
    int stepsPerSecond = 100;
    int timeLimit = 1000000000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "IMPOSSIBLE";
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<string> p0 = {};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 100;
    int timeLimit = 1000000000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "49900000000000";
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<string> p0 = {};
    vector<string> p1 = {"01111111111111111111111111111111111111111111111111", "10111111111111111111111111111111111111111111111111", "11011111111111111111111111111111111111111111111111", "11101111111111111111111111111111111111111111111111", "11110111111111111111111111111111111111111111111111", "11111011111111111111111111111111111111111111111111", "11111101111111111111111111111111111111111111111111", "11111110111111111111111111111111111111111111111111", "11111111011111111111111111111111111111111111111111", "11111111101111111111111111111111111111111111111111", "11111111110111111111111111111111111111111111111111", "11111111111011111111111111111111111111111111111111", "11111111111101111111111111111111111111111111111111", "11111111111110111111111111111111111111111111111111", "11111111111111011111111111111111111111111111111111", "11111111111111101111111111111111111111111111111111", "11111111111111110111111111111111111111111111111111", "11111111111111111011111111111111111111111111111111", "11111111111111111101111111111111111111111111111111", "11111111111111111110111111111111111111111111111111", "11111111111111111111011111111111111111111111111111", "11111111111111111111101111111111111111111111111111", "11111111111111111111110111111111111111111111111111", "11111111111111111111111011111111111111111111111111", "11111111111111111111111101111111111111111111111111", "11111111111111111111111110111111111111111111111111", "11111111111111111111111111011111111111111111111111", "11111111111111111111111111101111111111111111111111", "11111111111111111111111111110111111111111111111111", "11111111111111111111111111111011111111111111111111", "11111111111111111111111111111101111111111111111111", "11111111111111111111111111111110111111111111111111", "11111111111111111111111111111111011111111111111111", "11111111111111111111111111111111101111111111111111", "11111111111111111111111111111111110111111111111111", "11111111111111111111111111111111111011111111111111", "11111111111111111111111111111111111101111111111111", "11111111111111111111111111111111111110111111111111", "11111111111111111111111111111111111111011111111111", "11111111111111111111111111111111111111101111111111", "11111111111111111111111111111111111111110111111111", "11111111111111111111111111111111111111111011111111", "11111111111111111111111111111111111111111101111111", "11111111111111111111111111111111111111111110111111", "11111111111111111111111111111111111111111111011111", "11111111111111111111111111111111111111111111101111", "11111111111111111111111111111111111111111111110111", "11111111111111111111111111111111111111111111111011", "11111111111111111111111111111111111111111111111101", "11111111111111111111111111111111111111111111111110"};
    vector<string> p2 = {};
    int stepsPerSecond = 100;
    int timeLimit = 1000000000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-38900";
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<string> p0 = {};
    vector<string> p1 = {};
    vector<string> p2 = {"06000000000000000000000000000000000000000200001", "00000000000000000000000000000000000000000000000", "00040000000000000000000000000000000000000000000", "00007000000000000000000000000000000000000000000", "00000900000000000000000000000000000000000000000", "00000010000000000000000000000000000000000000000", "00000005000000000000000000000000000000000000000", "00000000600000000000000000000000000000000000000", "00000000050000000000000000000000000000000000000", "00000000003000000000000000000000000000000000000", "00000000000600000000000000000000000000000000000", "00000000000030000000000000000000000000000000000", "00000000000008000000000000000000000000000000000", "00000000000000400000000000000000000000000000000", "00000000000000030000000000000000000000000000000", "00000000000000008000000000000000000000000000000", "00000000000000000800000000000000000000000000000", "00000000000000000080000000000000000000000000000", "00000000000000000007000000000000000000000000000", "00000000000000000000000000000000000000000000000", "00000000000000000000050000000000000000000000000", "00000000000000000000007000000000000000000000000", "00000000000000000000000500000000000000000000000", "00000000000000000000000050000000000000000000000", "00000000000000000000000002000000000000000000000", "00000000000000000000000000800000000000000000000", "00000000000000000000000000040000000000000000000", "00000000000000000000000000008000000000000000000", "00000000000000000000000000000500000000000000000", "00000000000000000000000000000080000000000000000", "00000000000000000000000000000005000000000000000", "00000000000000000000000000000000100000000000000", "00000000000000000000000000000000080000000000000", "00000000000000000000000000000000003000000000000", "00000000000000000000000000000000000300000000000", "00000000000000000000000000000000000030000000000", "00000000000000000000000000000000000008000000000", "00000000000000000000000000000000000000500000000", "00000000000000000000000000000000000000010000000", "00000000000000000000000000000000000000005000000", "30000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000030000", "00000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000400", "00000000000000000000000000000000000000000000040", "40000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000"};
    int stepsPerSecond = 65;
    int timeLimit = 290729814;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "4072397855708";
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<string> p0 = {};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 86;
    int timeLimit = 330528635;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "IMPOSSIBLE";
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<string> p0 = {"04400005000000000040000000002000000000000050", "00000000000000000000000000000000000000000000", "00080000000000000000000000000000000000000000", "00002000000000000000000000000000000000000000", "00000500000000000000000000000000000000000000", "00000050000000000000000000000000000000000000", "40000000000000000000000000000000000000000000", "00000000600000000000000000000000000000000000", "00000000070000000000000000000000000000000000", "00000000009000000000000000000000000000000000", "00000000000600000000000000000000000000000000", "00000000000030000000000000000000000000000000", "00000000000001000000000000000000000000000000", "00000000000000600000000000000000000000000000", "00000000000000080000000000000000000000000000", "00000000000000002000000000000000000000000000", "00000000000000000400000000000000000000000000", "20000000000000000000000000000000000000000000", "00000000000000000005000000000000000000000000", "00000000000000000000800000000000000000000000", "00000000000000000000050000000000000000000000", "00000000000000000000001000000000000000000000", "00000000000000000000000400000000000000000000", "00000000000000000000000050000000000000000000", "00000000000000000000000000000000000000000000", "00000000000000000000000000900000000000000000", "00000000000000000000000000070000000000000000", "60000000000000000000000000000000000000000000", "00000000000000000000000000000400000000000000", "00000000000000000000000000000060000000000000", "00000000000000000000000000000001000000000000", "00000000000000000000000000000000600000000000", "00000000000000000000000000000000030000000000", "00000000000000000000000000000000001000000000", "00000000000000000000000000000000000500000000", "00000000000000000000000000000000000090000000", "00000000000000000000000000000000000005000000", "00000000000000000000000000000000000000400000", "00000000000000000000000000000000000000030000", "00000000000000000000000000000000000000001000", "00000000000000000000000000000000000000000700", "20000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000001", "10000000000000000000000000000000000000000000"};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 90;
    int timeLimit = 346187105;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "1373497338767";
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<string> p0 = {};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 98;
    int timeLimit = 227226514;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "4282916812439";
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<string> p0 = {};
    vector<string> p1 = {"07000000000000000000700000000000000000000000000", "00000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000", "00004000000000000000000000000000000000000000000", "00000700000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000", "00000007000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000", "00000000010000000000000000000000000000000000000", "00000000002000000000000000000000000000000000000", "00000000000100000000000000000000000000000000000", "00000000000060000000000000000000000000000000000", "00000000000007000000000000000000000000000000000", "00000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000", "00000000000000001000000000000000000000000000000", "00000000000000000900000000000000000000000000000", "00000000000000000080000000000000000000000000000", "00000000000000000009000000000000000000000000000", "20000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000", "00000000000000000000007000000000000000000000000", "00000000000000000000000600000000000000000000000", "00000000000000000000000030000000000000000000000", "00000000000000000000000003000000000000000000000", "00000000000000000000000000000000000000000000000", "00000000000000000000000000020000000000000000000", "00000000000000000000000000000000000000000000000", "00000000000000000000000000000100000000000000000", "00000000000000000000000000000010000000000000000", "00000000000000000000000000000007000000000000000", "00000000000000000000000000000000500000000000000", "10000000000000000000000000000000000000000000000", "00000000000000000000000000000000003000000000000", "00000000000000000000000000000000000600000000000", "00000000000000000000000000000000000040000000000", "00000000000000000000000000000000000006000000000", "00000000000000000000000000000000000000500000000", "00000000000000000000000000000000000000090000000", "00000000000000000000000000000000000000006000000", "00000000000000000000000000000000000000000700000", "00000000000000000000000000000000000000000060000", "00000000000000000000000000000000000000000004000", "00000000000000000000000000000000000000000000400", "00000000000000000000000000000000000000000000050", "00000000000000000000000000000000000000000000003", "90000000000000000000000000000000000000000000000"};
    vector<string> p2 = {};
    int stepsPerSecond = 57;
    int timeLimit = 712693765;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-2734";
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<string> p0 = {"017070000000000000000000000000000849000000000", "000000000000000000000000000000000000000000000", "000800000000000000000000000000000000000000000", "700000000000000000000000000000000000000000000", "000005000000000000000000000000000000000000000", "000000900000000000000000000000000000000000000", "000000040000000000000000000000000000000000000", "000000005000000000000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000050000000000000000000000000000000000", "000000000005000000000000000000000000000000000", "000000000000900000000000000000000000000000000", "000000000000080000000000000000000000000000000", "000000000000006000000000000000000000000000000", "000000000000000400000000000000000000000000000", "000000000000000050000000000000000000000000000", "000000000000000003000000000000000000000000000", "000000000000000000900000000000000000000000000", "000000000000000000080000000000000000000000000", "000000000000000000008000000000000000000000000", "000000000000000000000400000000000000000000000", "000000000000000000000060000000000000000000000", "000000000000000000000004000000000000000000000", "000000000000000000000000200000000000000000000", "000000000000000000000000010000000000000000000", "000000000000000000000000003000000000000000000", "000000000000000000000000000100000000000000000", "000000000000000000000000000060000000000000000", "000000000000000000000000000006000000000000000", "000000000000000000000000000000800000000000000", "000000000000000000000000000000020000000000000", "000000000000000000000000000000009000000000000", "900000000000000000000000000000000000000000000", "800000000000000000000000000000000000000000000", "600000000000000000000000000000000000000000000", "000000000000000000000000000000000000200000000", "000000000000000000000000000000000000020000000", "000000000000000000000000000000000000003000000", "000000000000000000000000000000000000000300000", "000000000000000000000000000000000000000020000", "000000000000000000000000000000000000000001000", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000000000000004", "600000000000000000000000000000000000000000000"};
    vector<string> p1 = {"040080000000000000000000000000000506000000000", "000000000000000000000000000000000000000000000", "000400000000000000000000000000000000000000000", "300000000000000000000000000000000000000000000", "000005000000000000000000000000000000000000000", "000000700000000000000000000000000000000000000", "000000070000000000000000000000000000000000000", "000000007000000000000000000000000000000000000", "000000000200000000000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000001000000000000000000000000000000000", "000000000000300000000000000000000000000000000", "000000000000090000000000000000000000000000000", "000000000000003000000000000000000000000000000", "000000000000000500000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000003000000000000000000000000000", "000000000000000000500000000000000000000000000", "000000000000000000070000000000000000000000000", "000000000000000000005000000000000000000000000", "000000000000000000000600000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000000000400000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000000000004000000000000000000", "000000000000000000000000000300000000000000000", "000000000000000000000000000050000000000000000", "000000000000000000000000000005000000000000000", "000000000000000000000000000000700000000000000", "000000000000000000000000000000010000000000000", "000000000000000000000000000000002000000000000", "100000000000000000000000000000000000000000000", "400000000000000000000000000000000000000000000", "700000000000000000000000000000000000000000000", "000000000000000000000000000000000000300000000", "000000000000000000000000000000000000080000000", "000000000000000000000000000000000000003000000", "000000000000000000000000000000000000000200000", "000000000000000000000000000000000000000030000", "000000000000000000000000000000000000000003000", "000000000000000000000000000000000000000000900", "000000000000000000000000000000000000000000080", "000000000000000000000000000000000000000000006", "300000000000000000000000000000000000000000000"};
    vector<string> p2 = {"019090000000000000000000000000000484000000000", "000000000000000000000000000000000000000000000", "000400000000000000000000000000000000000000000", "900000000000000000000000000000000000000000000", "000008000000000000000000000000000000000000000", "000000800000000000000000000000000000000000000", "000000090000000000000000000000000000000000000", "000000009000000000000000000000000000000000000", "000000000800000000000000000000000000000000000", "000000000060000000000000000000000000000000000", "000000000008000000000000000000000000000000000", "000000000000600000000000000000000000000000000", "000000000000080000000000000000000000000000000", "000000000000003000000000000000000000000000000", "000000000000000300000000000000000000000000000", "000000000000000010000000000000000000000000000", "000000000000000001000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000030000000000000000000000000", "000000000000000000009000000000000000000000000", "000000000000000000000700000000000000000000000", "000000000000000000000020000000000000000000000", "000000000000000000000003000000000000000000000", "000000000000000000000000500000000000000000000", "000000000000000000000000060000000000000000000", "000000000000000000000000001000000000000000000", "000000000000000000000000000900000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000000000000008000000000000000", "000000000000000000000000000000600000000000000", "000000000000000000000000000000010000000000000", "000000000000000000000000000000009000000000000", "000000000000000000000000000000000000000000000", "400000000000000000000000000000000000000000000", "300000000000000000000000000000000000000000000", "000000000000000000000000000000000000300000000", "000000000000000000000000000000000000090000000", "000000000000000000000000000000000000009000000", "000000000000000000000000000000000000000500000", "000000000000000000000000000000000000000070000", "000000000000000000000000000000000000000004000", "000000000000000000000000000000000000000000900", "000000000000000000000000000000000000000000060", "000000000000000000000000000000000000000000001", "200000000000000000000000000000000000000000000"};
    int stepsPerSecond = 67;
    int timeLimit = 529732578;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "12386736870411";
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<string> p0 = {"0810000000008000000000000000000001008000200", "0000000000000000000000000000000000000000000", "0005000000000000000000000000000000000000000", "0000100000000000000000000000000000000000000", "0000090000000000000000000000000000000000000", "0000006000000000000000000000000000000000000", "0000000900000000000000000000000000000000000", "0000000090000000000000000000000000000000000", "0000000001000000000000000000000000000000000", "0000000000700000000000000000000000000000000", "0000000000060000000000000000000000000000000", "6000000000000000000000000000000000000000000", "0000000000000400000000000000000000000000000", "0000000000000010000000000000000000000000000", "0000000000000007000000000000000000000000000", "0000000000000000300000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000005000000000000000000000000", "0000000000000000000600000000000000000000000", "0000000000000000000070000000000000000000000", "0000000000000000000009000000000000000000000", "0000000000000000000000100000000000000000000", "0000000000000000000000010000000000000000000", "0000000000000000000000009000000000000000000", "0000000000000000000000000900000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000009000000000000000", "0000000000000000000000000000100000000000000", "0000000000000000000000000000050000000000000", "0000000000000000000000000000006000000000000", "0000000000000000000000000000000500000000000", "1000000000000000000000000000000000000000000", "7000000000000000000000000000000000000000000", "0000000000000000000000000000000000200000000", "0000000000000000000000000000000000030000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000000000700000", "0000000000000000000000000000000000000050000", "0000000000000000000000000000000000000007000", "8000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000010", "0000000000000000000000000000000000000000002", "9000000000000000000000000000000000000000000"};
    vector<string> p1 = {"0670000000007000000000000000000080007000200", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000700000000000000000000000000000000000000", "0000070000000000000000000000000000000000000", "0000004000000000000000000000000000000000000", "0000000900000000000000000000000000000000000", "0000000020000000000000000000000000000000000", "0000000005000000000000000000000000000000000", "0000000000700000000000000000000000000000000", "0000000000010000000000000000000000000000000", "9000000000000000000000000000000000000000000", "0000000000000800000000000000000000000000000", "0000000000000090000000000000000000000000000", "0000000000000002000000000000000000000000000", "0000000000000000700000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000009000000000000000000000000", "0000000000000000000100000000000000000000000", "0000000000000000000020000000000000000000000", "0000000000000000000009000000000000000000000", "0000000000000000000000400000000000000000000", "0000000000000000000000060000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000900000000000000000", "0000000000000000000000000050000000000000000", "0000000000000000000000000001000000000000000", "0000000000000000000000000000200000000000000", "0000000000000000000000000000080000000000000", "0000000000000000000000000000008000000000000", "0000000000000000000000000000000400000000000", "4000000000000000000000000000000000000000000", "6000000000000000000000000000000000000000000", "0000000000000000000000000000000000500000000", "0000000000000000000000000000000000000000000", "8000000000000000000000000000000000000000000", "0000000000000000000000000000000000000500000", "0000000000000000000000000000000000000040000", "0000000000000000000000000000000000000006000", "2000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000020", "0000000000000000000000000000000000000000009", "3000000000000000000000000000000000000000000"};
    vector<string> p2 = {"0300000000005000000000000000000076006000800", "0000000000000000000000000000000000000000000", "0001000000000000000000000000000000000000000", "0000400000000000000000000000000000000000000", "0000050000000000000000000000000000000000000", "0000009000000000000000000000000000000000000", "0000000900000000000000000000000000000000000", "0000000020000000000000000000000000000000000", "0000000005000000000000000000000000000000000", "0000000000400000000000000000000000000000000", "0000000000090000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000800000000000000000000000000000", "0000000000000030000000000000000000000000000", "0000000000000003000000000000000000000000000", "0000000000000000900000000000000000000000000", "0000000000000000090000000000000000000000000", "0000000000000000009000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000060000000000000000000000", "0000000000000000000008000000000000000000000", "0000000000000000000000400000000000000000000", "0000000000000000000000040000000000000000000", "0000000000000000000000009000000000000000000", "0000000000000000000000000500000000000000000", "0000000000000000000000000070000000000000000", "0000000000000000000000000008000000000000000", "0000000000000000000000000000600000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000300000000000", "3000000000000000000000000000000000000000000", "7000000000000000000000000000000000000000000", "0000000000000000000000000000000000500000000", "0000000000000000000000000000000000010000000", "6000000000000000000000000000000000000000000", "0000000000000000000000000000000000000800000", "0000000000000000000000000000000000000090000", "0000000000000000000000000000000000000004000", "5000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000040", "0000000000000000000000000000000000000000001", "9000000000000000000000000000000000000000000"};
    int stepsPerSecond = 88;
    int timeLimit = 631366775;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "14134534264079";
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<string> p0 = {"025000005001000000030000000060000000000000000", "000000000000000000000000000000000000000000000", "000500000000000000000000000000000000000000000", "000090000000000000000000000000000000000000000", "000004000000000000000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000090000000000000000000000000000000000000", "300000000000000000000000000000000000000000000", "000000000200000000000000000000000000000000000", "000000000080000000000000000000000000000000000", "400000000000000000000000000000000000000000000", "000000000000700000000000000000000000000000000", "000000000000060000000000000000000000000000000", "000000000000005000000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000005000000000000000000000000000", "000000000000000000100000000000000000000000000", "700000000000000000000000000000000000000000000", "000000000000000000003000000000000000000000000", "000000000000000000000400000000000000000000000", "000000000000000000000060000000000000000000000", "000000000000000000000005000000000000000000000", "000000000000000000000000100000000000000000000", "000000000000000000000000020000000000000000000", "000000000000000000000000005000000000000000000", "000000000000000000000000000400000000000000000", "200000000000000000000000000000000000000000000", "000000000000000000000000000008000000000000000", "000000000000000000000000000000700000000000000", "000000000000000000000000000000010000000000000", "000000000000000000000000000000006000000000000", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000030000000000", "000000000000000000000000000000000004000000000", "000000000000000000000000000000000000200000000", "000000000000000000000000000000000000010000000", "000000000000000000000000000000000000006000000", "000000000000000000000000000000000000000800000", "000000000000000000000000000000000000000090000", "000000000000000000000000000000000000000006000", "000000000000000000000000000000000000000000800", "000000000000000000000000000000000000000000050", "000000000000000000000000000000000000000000008", "400000000000000000000000000000000000000000000"};
    vector<string> p1 = {"013000006001000000060000000070000000000000000", "000000000000000000000000000000000000000000000", "000100000000000000000000000000000000000000000", "000070000000000000000000000000000000000000000", "000002000000000000000000000000000000000000000", "000000400000000000000000000000000000000000000", "000000060000000000000000000000000000000000000", "800000000000000000000000000000000000000000000", "000000000200000000000000000000000000000000000", "000000000030000000000000000000000000000000000", "500000000000000000000000000000000000000000000", "000000000000500000000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000001000000000000000000000000000000", "000000000000000900000000000000000000000000000", "000000000000000020000000000000000000000000000", "000000000000000004000000000000000000000000000", "000000000000000000700000000000000000000000000", "700000000000000000000000000000000000000000000", "000000000000000000001000000000000000000000000", "000000000000000000000100000000000000000000000", "000000000000000000000010000000000000000000000", "000000000000000000000001000000000000000000000", "000000000000000000000000300000000000000000000", "000000000000000000000000070000000000000000000", "000000000000000000000000004000000000000000000", "000000000000000000000000000300000000000000000", "500000000000000000000000000000000000000000000", "000000000000000000000000000008000000000000000", "000000000000000000000000000000800000000000000", "000000000000000000000000000000050000000000000", "000000000000000000000000000000007000000000000", "000000000000000000000000000000000200000000000", "000000000000000000000000000000000010000000000", "000000000000000000000000000000000006000000000", "000000000000000000000000000000000000300000000", "000000000000000000000000000000000000090000000", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000000000300000", "000000000000000000000000000000000000000090000", "000000000000000000000000000000000000000005000", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000000000000060", "000000000000000000000000000000000000000000008", "600000000000000000000000000000000000000000000"};
    vector<string> p2 = {"004000000007000000050000000020000000000000000", "000000000000000000000000000000000000000000000", "000700000000000000000000000000000000000000000", "000080000000000000000000000000000000000000000", "000004000000000000000000000000000000000000000", "000000500000000000000000000000000000000000000", "000000070000000000000000000000000000000000000", "200000000000000000000000000000000000000000000", "000000000100000000000000000000000000000000000", "000000000050000000000000000000000000000000000", "500000000000000000000000000000000000000000000", "000000000000300000000000000000000000000000000", "000000000000070000000000000000000000000000000", "000000000000004000000000000000000000000000000", "000000000000000100000000000000000000000000000", "000000000000000050000000000000000000000000000", "000000000000000005000000000000000000000000000", "000000000000000000300000000000000000000000000", "900000000000000000000000000000000000000000000", "000000000000000000009000000000000000000000000", "000000000000000000000400000000000000000000000", "000000000000000000000070000000000000000000000", "000000000000000000000002000000000000000000000", "000000000000000000000000400000000000000000000", "000000000000000000000000040000000000000000000", "000000000000000000000000008000000000000000000", "000000000000000000000000000300000000000000000", "700000000000000000000000000000000000000000000", "000000000000000000000000000003000000000000000", "000000000000000000000000000000200000000000000", "000000000000000000000000000000030000000000000", "000000000000000000000000000000003000000000000", "000000000000000000000000000000000500000000000", "000000000000000000000000000000000090000000000", "000000000000000000000000000000000003000000000", "000000000000000000000000000000000000100000000", "000000000000000000000000000000000000070000000", "000000000000000000000000000000000000003000000", "000000000000000000000000000000000000000800000", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000000000007000", "000000000000000000000000000000000000000000100", "000000000000000000000000000000000000000000050", "000000000000000000000000000000000000000000006", "600000000000000000000000000000000000000000000"};
    int stepsPerSecond = 56;
    int timeLimit = 180700156;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "676862627718";
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<string> p0 = {"00200009000000000000000000004000000000000200", "00000000000000000000000000000000000000000000", "00050000000000000000000000000000000000000000", "00006000000000000000000000000000000000000000", "00000800000000000000000000000000000000000000", "00000020000000000000000000000000000000000000", "50000000000000000000000000000000000000000000", "00000000700000000000000000000000000000000000", "00000000050000000000000000000000000000000000", "00000000002000000000000000000000000000000000", "00000000000200000000000000000000000000000000", "00000000000080000000000000000000000000000000", "00000000000008000000000000000000000000000000", "00000000000000100000000000000000000000000000", "00000000000000050000000000000000000000000000", "00000000000000002000000000000000000000000000", "00000000000000000300000000000000000000000000", "00000000000000000020000000000000000000000000", "00000000000000000006000000000000000000000000", "00000000000000000000200000000000000000000000", "00000000000000000000090000000000000000000000", "00000000000000000000006000000000000000000000", "00000000000000000000000500000000000000000000", "00000000000000000000000010000000000000000000", "00000000000000000000000005000000000000000000", "00000000000000000000000000100000000000000000", "00000000000000000000000000060000000000000000", "10000000000000000000000000000000000000000000", "00000000000000000000000000000800000000000000", "00000000000000000000000000000000000000000000", "00000000000000000000000000000009000000000000", "00000000000000000000000000000000200000000000", "00000000000000000000000000000000080000000000", "00000000000000000000000000000000002000000000", "00000000000000000000000000000000000100000000", "00000000000000000000000000000000000030000000", "00000000000000000000000000000000000003000000", "00000000000000000000000000000000000000700000", "00000000000000000000000000000000000000060000", "50000000000000000000000000000000000000000000", "90000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000030", "00000000000000000000000000000000000000000007", "10000000000000000000000000000000000000000000"};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 75;
    int timeLimit = 64929159;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "24348434110";
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<string> p0 = {};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 87;
    int timeLimit = 713783328;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "7638195390919";
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<string> p0 = {};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 84;
    int timeLimit = 991964687;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "2555301032554";
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<string> p0 = {"045050300000700500000000000001000000050000", "000000000000000000000000000000000000000000", "000100000000000000000000000000000000000000", "400000000000000000000000000000000000000000", "000005000000000000000000000000000000000000", "000000000000000000000000000000000000000000", "000000030000000000000000000000000000000000", "000000000000000000000000000000000000000000", "000000000800000000000000000000000000000000", "000000000080000000000000000000000000000000", "000000000007000000000000000000000000000000", "300000000000000000000000000000000000000000", "000000000000060000000000000000000000000000", "000000000000004000000000000000000000000000", "000000000000000000000000000000000000000000", "000000000000000090000000000000000000000000", "000000000000000001000000000000000000000000", "000000000000000000800000000000000000000000", "000000000000000000060000000000000000000000", "000000000000000000005000000000000000000000", "000000000000000000000100000000000000000000", "000000000000000000000000000000000000000000", "000000000000000000000000000000000000000000", "000000000000000000000000300000000000000000", "000000000000000000000000010000000000000000", "000000000000000000000000002000000000000000", "000000000000000000000000000600000000000000", "000000000000000000000000000010000000000000", "400000000000000000000000000000000000000000", "000000000000000000000000000000400000000000", "000000000000000000000000000000080000000000", "000000000000000000000000000000001000000000", "000000000000000000000000000000000200000000", "000000000000000000000000000000000010000000", "000000000000000000000000000000000006000000", "000000000000000000000000000000000000700000", "400000000000000000000000000000000000000000", "000000000000000000000000000000000000000000", "000000000000000000000000000000000000000800", "000000000000000000000000000000000000000050", "000000000000000000000000000000000000000005", "800000000000000000000000000000000000000000"};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 95;
    int timeLimit = 807906450;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "6114505314600";
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<string> p0 = {};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 51;
    int timeLimit = 565513902;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "4172361564848";
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<string> p0 = {"0290000000000000640000000000000000200000000", "0000000000000000000000000000000000000000000", "0007000000000000000000000000000000000000000", "0000800000000000000000000000000000000000000", "0000060000000000000000000000000000000000000", "0000009000000000000000000000000000000000000", "0000000500000000000000000000000000000000000", "0000000050000000000000000000000000000000000", "0000000006000000000000000000000000000000000", "0000000000200000000000000000000000000000000", "0000000000050000000000000000000000000000000", "0000000000004000000000000000000000000000000", "0000000000000200000000000000000000000000000", "0000000000000010000000000000000000000000000", "0000000000000003000000000000000000000000000", "4000000000000000000000000000000000000000000", "1000000000000000000000000000000000000000000", "0000000000000000001000000000000000000000000", "0000000000000000000700000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000200000000000000000000", "0000000000000000000000030000000000000000000", "0000000000000000000000005000000000000000000", "0000000000000000000000000800000000000000000", "0000000000000000000000000010000000000000000", "0000000000000000000000000001000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000008000000000000", "0000000000000000000000000000000200000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000006000000000", "8000000000000000000000000000000000000000000", "0000000000000000000000000000000000070000000", "0000000000000000000000000000000000006000000", "0000000000000000000000000000000000000200000", "0000000000000000000000000000000000000060000", "0000000000000000000000000000000000000005000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000020", "0000000000000000000000000000000000000000005", "9000000000000000000000000000000000000000000"};
    vector<string> p1 = {"0800000000000000360000000000000000300000000", "0000000000000000000000000000000000000000000", "0009000000000000000000000000000000000000000", "0000400000000000000000000000000000000000000", "0000010000000000000000000000000000000000000", "0000007000000000000000000000000000000000000", "0000000300000000000000000000000000000000000", "0000000050000000000000000000000000000000000", "0000000007000000000000000000000000000000000", "0000000000100000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000004000000000000000000000000000000", "0000000000000500000000000000000000000000000", "0000000000000090000000000000000000000000000", "0000000000000001000000000000000000000000000", "1000000000000000000000000000000000000000000", "4000000000000000000000000000000000000000000", "0000000000000000003000000000000000000000000", "0000000000000000000900000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000002000000000000000000000", "0000000000000000000000700000000000000000000", "0000000000000000000000020000000000000000000", "0000000000000000000000005000000000000000000", "0000000000000000000000000400000000000000000", "0000000000000000000000000060000000000000000", "0000000000000000000000000008000000000000000", "0000000000000000000000000000900000000000000", "0000000000000000000000000000040000000000000", "0000000000000000000000000000006000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000090000000000", "0000000000000000000000000000000003000000000", "7000000000000000000000000000000000000000000", "0000000000000000000000000000000000050000000", "0000000000000000000000000000000000008000000", "0000000000000000000000000000000000000300000", "0000000000000000000000000000000000000020000", "0000000000000000000000000000000000000009000", "0000000000000000000000000000000000000000600", "0000000000000000000000000000000000000000090", "0000000000000000000000000000000000000000008", "4000000000000000000000000000000000000000000"};
    vector<string> p2 = {"0580000000000000350000000000000000400000000", "0000000000000000000000000000000000000000000", "0009000000000000000000000000000000000000000", "0000100000000000000000000000000000000000000", "0000020000000000000000000000000000000000000", "0000001000000000000000000000000000000000000", "0000000500000000000000000000000000000000000", "0000000040000000000000000000000000000000000", "0000000002000000000000000000000000000000000", "0000000000400000000000000000000000000000000", "0000000000040000000000000000000000000000000", "0000000000007000000000000000000000000000000", "0000000000000500000000000000000000000000000", "0000000000000050000000000000000000000000000", "0000000000000003000000000000000000000000000", "1000000000000000000000000000000000000000000", "8000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000800000000000000000000000", "0000000000000000000050000000000000000000000", "0000000000000000000001000000000000000000000", "0000000000000000000000500000000000000000000", "0000000000000000000000090000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000800000000000000000", "0000000000000000000000000070000000000000000", "0000000000000000000000000008000000000000000", "0000000000000000000000000000600000000000000", "0000000000000000000000000000030000000000000", "0000000000000000000000000000006000000000000", "0000000000000000000000000000000900000000000", "0000000000000000000000000000000010000000000", "0000000000000000000000000000000002000000000", "1000000000000000000000000000000000000000000", "0000000000000000000000000000000000040000000", "0000000000000000000000000000000000008000000", "0000000000000000000000000000000000000100000", "0000000000000000000000000000000000000080000", "0000000000000000000000000000000000000009000", "0000000000000000000000000000000000000000600", "0000000000000000000000000000000000000000040", "0000000000000000000000000000000000000000008", "4000000000000000000000000000000000000000000"};
    int stepsPerSecond = 59;
    int timeLimit = 811837927;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "2334250528736";
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<string> p0 = {"040000000000000002000000080000000000000000000", "000000000000000000000000000000000000000000000", "000300000000000000000000000000000000000000000", "000090000000000000000000000000000000000000000", "000005000000000000000000000000000000000000000", "000000800000000000000000000000000000000000000", "000000050000000000000000000000000000000000000", "000000004000000000000000000000000000000000000", "000000000400000000000000000000000000000000000", "000000000020000000000000000000000000000000000", "000000000004000000000000000000000000000000000", "000000000000900000000000000000000000000000000", "000000000000020000000000000000000000000000000", "000000000000005000000000000000000000000000000", "000000000000000600000000000000000000000000000", "000000000000000030000000000000000000000000000", "600000000000000000000000000000000000000000000", "000000000000000000300000000000000000000000000", "000000000000000000050000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000000400000000000000000000000", "000000000000000000000070000000000000000000000", "000000000000000000000001000000000000000000000", "000000000000000000000000300000000000000000000", "900000000000000000000000000000000000000000000", "000000000000000000000000009000000000000000000", "000000000000000000000000000300000000000000000", "000000000000000000000000000060000000000000000", "000000000000000000000000000005000000000000000", "000000000000000000000000000000500000000000000", "000000000000000000000000000000040000000000000", "000000000000000000000000000000001000000000000", "000000000000000000000000000000000100000000000", "000000000000000000000000000000000060000000000", "000000000000000000000000000000000002000000000", "000000000000000000000000000000000000700000000", "000000000000000000000000000000000000080000000", "800000000000000000000000000000000000000000000", "000000000000000000000000000000000000000100000", "000000000000000000000000000000000000000010000", "000000000000000000000000000000000000000004000", "000000000000000000000000000000000000000000700", "000000000000000000000000000000000000000000070", "000000000000000000000000000000000000000000005", "900000000000000000000000000000000000000000000"};
    vector<string> p1 = {"015000000000000004000000010000000000003000000", "000000000000000000000000000000000000000000000", "000600000000000000000000000000000000000000000", "000090000000000000000000000000000000000000000", "000008000000000000000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000080000000000000000000000000000000000000", "000000004000000000000000000000000000000000000", "000000000400000000000000000000000000000000000", "000000000090000000000000000000000000000000000", "000000000001000000000000000000000000000000000", "000000000000500000000000000000000000000000000", "000000000000070000000000000000000000000000000", "000000000000004000000000000000000000000000000", "000000000000000800000000000000000000000000000", "000000000000000090000000000000000000000000000", "500000000000000000000000000000000000000000000", "000000000000000000400000000000000000000000000", "000000000000000000030000000000000000000000000", "000000000000000000005000000000000000000000000", "000000000000000000000200000000000000000000000", "000000000000000000000050000000000000000000000", "000000000000000000000009000000000000000000000", "000000000000000000000000100000000000000000000", "300000000000000000000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000000000000200000000000000000", "000000000000000000000000000040000000000000000", "000000000000000000000000000004000000000000000", "000000000000000000000000000000200000000000000", "000000000000000000000000000000080000000000000", "000000000000000000000000000000004000000000000", "000000000000000000000000000000000700000000000", "000000000000000000000000000000000030000000000", "000000000000000000000000000000000001000000000", "000000000000000000000000000000000000700000000", "000000000000000000000000000000000000050000000", "800000000000000000000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000000000090000", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000000000000100", "000000000000000000000000000000000000000000050", "000000000000000000000000000000000000000000008", "500000000000000000000000000000000000000000000"};
    vector<string> p2 = {"058000000000000008000000070000000000001000000", "000000000000000000000000000000000000000000000", "000800000000000000000000000000000000000000000", "000070000000000000000000000000000000000000000", "000009000000000000000000000000000000000000000", "000000500000000000000000000000000000000000000", "000000080000000000000000000000000000000000000", "000000007000000000000000000000000000000000000", "000000000900000000000000000000000000000000000", "000000000090000000000000000000000000000000000", "000000000007000000000000000000000000000000000", "000000000000600000000000000000000000000000000", "000000000000040000000000000000000000000000000", "000000000000009000000000000000000000000000000", "000000000000000800000000000000000000000000000", "000000000000000090000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000600000000000000000000000000", "000000000000000000030000000000000000000000000", "000000000000000000007000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000000030000000000000000000000", "000000000000000000000007000000000000000000000", "000000000000000000000000200000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000000000006000000000000000000", "000000000000000000000000000300000000000000000", "000000000000000000000000000070000000000000000", "000000000000000000000000000002000000000000000", "000000000000000000000000000000600000000000000", "000000000000000000000000000000060000000000000", "000000000000000000000000000000008000000000000", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000030000000000", "000000000000000000000000000000000005000000000", "000000000000000000000000000000000000300000000", "000000000000000000000000000000000000030000000", "200000000000000000000000000000000000000000000", "000000000000000000000000000000000000000300000", "000000000000000000000000000000000000000020000", "000000000000000000000000000000000000000007000", "000000000000000000000000000000000000000000300", "000000000000000000000000000000000000000000020", "000000000000000000000000000000000000000000008", "500000000000000000000000000000000000000000000"};
    int stepsPerSecond = 53;
    int timeLimit = 763100105;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "2660657528408";
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<string> p0 = {};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 67;
    int timeLimit = 32038791;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "364531533740";
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<string> p0 = {};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 76;
    int timeLimit = 8685582;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "52412274158";
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<string> p0 = {};
    vector<string> p1 = {"0840000000000000700900005000000000000000000000", "0000000000000000000000000000000000000000000000", "0006000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000000", "0000080000000000000000000000000000000000000000", "0000001000000000000000000000000000000000000000", "0000000600000000000000000000000000000000000000", "0000000020000000000000000000000000000000000000", "0000000003000000000000000000000000000000000000", "0000000000400000000000000000000000000000000000", "0000000000040000000000000000000000000000000000", "0000000000003000000000000000000000000000000000", "0000000000000700000000000000000000000000000000", "0000000000000050000000000000000000000000000000", "0000000000000002000000000000000000000000000000", "7000000000000000000000000000000000000000000000", "0000000000000000080000000000000000000000000000", "0000000000000000002000000000000000000000000000", "6000000000000000000000000000000000000000000000", "0000000000000000000080000000000000000000000000", "0000000000000000000006000000000000000000000000", "0000000000000000000000600000000000000000000000", "0000000000000000000000000000000000000000000000", "8000000000000000000000000000000000000000000000", "0000000000000000000000000300000000000000000000", "0000000000000000000000000070000000000000000000", "0000000000000000000000000003000000000000000000", "0000000000000000000000000000400000000000000000", "0000000000000000000000000000060000000000000000", "0000000000000000000000000000002000000000000000", "0000000000000000000000000000000600000000000000", "0000000000000000000000000000000050000000000000", "0000000000000000000000000000000000000000000000", "0000000000000000000000000000000000600000000000", "0000000000000000000000000000000000090000000000", "0000000000000000000000000000000000002000000000", "0000000000000000000000000000000000000400000000", "0000000000000000000000000000000000000000000000", "0000000000000000000000000000000000000009000000", "0000000000000000000000000000000000000000400000", "0000000000000000000000000000000000000000040000", "0000000000000000000000000000000000000000005000", "0000000000000000000000000000000000000000000200", "0000000000000000000000000000000000000000000030", "0000000000000000000000000000000000000000000008", "9000000000000000000000000000000000000000000000"};
    vector<string> p2 = {};
    int stepsPerSecond = 93;
    int timeLimit = 999176168;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "2363486059136";
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<string> p0 = {};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 89;
    int timeLimit = 280441258;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "1921863941283";
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<string> p0 = {};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 51;
    int timeLimit = 103869310;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "1079994131993";
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<string> p0 = {};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 81;
    int timeLimit = 152139676;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-1444";
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<string> p0 = {"0430000000000000000000000027006000000003000", "0000000000000000000000000000000000000000000", "0007000000000000000000000000000000000000000", "0000400000000000000000000000000000000000000", "0000030000000000000000000000000000000000000", "0000004000000000000000000000000000000000000", "0000000300000000000000000000000000000000000", "0000000080000000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000100000000000000000000000000000000", "0000000000080000000000000000000000000000000", "0000000000006000000000000000000000000000000", "0000000000000900000000000000000000000000000", "0000000000000030000000000000000000000000000", "0000000000000008000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000010000000000000000000000000", "0000000000000000001000000000000000000000000", "0000000000000000000100000000000000000000000", "0000000000000000000060000000000000000000000", "0000000000000000000008000000000000000000000", "0000000000000000000000800000000000000000000", "0000000000000000000000010000000000000000000", "0000000000000000000000006000000000000000000", "0000000000000000000000000100000000000000000", "2000000000000000000000000000000000000000000", "3000000000000000000000000000000000000000000", "0000000000000000000000000000200000000000000", "0000000000000000000000000000070000000000000", "8000000000000000000000000000000000000000000", "0000000000000000000000000000000800000000000", "0000000000000000000000000000000090000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000000700000000", "0000000000000000000000000000000000020000000", "0000000000000000000000000000000000002000000", "0000000000000000000000000000000000000700000", "0000000000000000000000000000000000000020000", "2000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000070", "0000000000000000000000000000000000000000008", "4000000000000000000000000000000000000000000"};
    vector<string> p1 = {"0060000000000000000000000053002000000008200", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000700000000000000000000000000000000000000", "0000030000000000000000000000000000000000000", "0000006000000000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000090000000000000000000000000000000000", "0000000005000000000000000000000000000000000", "0000000000900000000000000000000000000000000", "0000000000050000000000000000000000000000000", "0000000000002000000000000000000000000000000", "0000000000000800000000000000000000000000000", "0000000000000050000000000000000000000000000", "0000000000000005000000000000000000000000000", "0000000000000000500000000000000000000000000", "0000000000000000080000000000000000000000000", "0000000000000000006000000000000000000000000", "0000000000000000000100000000000000000000000", "0000000000000000000080000000000000000000000", "0000000000000000000007000000000000000000000", "0000000000000000000000700000000000000000000", "0000000000000000000000090000000000000000000", "0000000000000000000000001000000000000000000", "0000000000000000000000000600000000000000000", "6000000000000000000000000000000000000000000", "5000000000000000000000000000000000000000000", "0000000000000000000000000000100000000000000", "0000000000000000000000000000020000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000800000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000001000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000000070000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000000000900000", "0000000000000000000000000000000000000070000", "6000000000000000000000000000000000000000000", "2000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000020", "0000000000000000000000000000000000000000001", "0000000000000000000000000000000000000000000"};
    vector<string> p2 = {"0140000000000000000000000030006000000004900", "0000000000000000000000000000000000000000000", "0009000000000000000000000000000000000000000", "0000400000000000000000000000000000000000000", "0000050000000000000000000000000000000000000", "0000001000000000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000070000000000000000000000000000000000", "0000000005000000000000000000000000000000000", "0000000000300000000000000000000000000000000", "0000000000070000000000000000000000000000000", "0000000000002000000000000000000000000000000", "0000000000000200000000000000000000000000000", "0000000000000060000000000000000000000000000", "0000000000000009000000000000000000000000000", "0000000000000000600000000000000000000000000", "0000000000000000060000000000000000000000000", "0000000000000000006000000000000000000000000", "0000000000000000000900000000000000000000000", "0000000000000000000030000000000000000000000", "0000000000000000000005000000000000000000000", "0000000000000000000000600000000000000000000", "0000000000000000000000040000000000000000000", "0000000000000000000000001000000000000000000", "0000000000000000000000000100000000000000000", "6000000000000000000000000000000000000000000", "1000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000050000000000000", "7000000000000000000000000000000000000000000", "0000000000000000000000000000000700000000000", "0000000000000000000000000000000070000000000", "0000000000000000000000000000000003000000000", "0000000000000000000000000000000000800000000", "0000000000000000000000000000000000060000000", "0000000000000000000000000000000000001000000", "0000000000000000000000000000000000000600000", "0000000000000000000000000000000000000010000", "2000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000001", "2000000000000000000000000000000000000000000"};
    int stepsPerSecond = 91;
    int timeLimit = 695971964;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "7473346944790";
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<string> p0 = {};
    vector<string> p1 = {"0230000000000000000000000000000000000030000000", "0000000000000000000000000000000000000000000000", "0002000000000000000000000000000000000000000000", "0000200000000000000000000000000000000000000000", "0000020000000000000000000000000000000000000000", "0000008000000000000000000000000000000000000000", "0000000900000000000000000000000000000000000000", "0000000080000000000000000000000000000000000000", "0000000001000000000000000000000000000000000000", "0000000000100000000000000000000000000000000000", "0000000000050000000000000000000000000000000000", "0000000000008000000000000000000000000000000000", "0000000000000400000000000000000000000000000000", "0000000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000000", "0000000000000000500000000000000000000000000000", "0000000000000000070000000000000000000000000000", "0000000000000000001000000000000000000000000000", "0000000000000000000600000000000000000000000000", "0000000000000000000050000000000000000000000000", "0000000000000000000004000000000000000000000000", "0000000000000000000000900000000000000000000000", "0000000000000000000000060000000000000000000000", "0000000000000000000000007000000000000000000000", "0000000000000000000000000100000000000000000000", "4000000000000000000000000000000000000000000000", "0000000000000000000000000008000000000000000000", "0000000000000000000000000000300000000000000000", "0000000000000000000000000000000000000000000000", "0000000000000000000000000000003000000000000000", "0000000000000000000000000000000600000000000000", "0000000000000000000000000000000060000000000000", "0000000000000000000000000000000006000000000000", "0000000000000000000000000000000000200000000000", "0000000000000000000000000000000000090000000000", "0000000000000000000000000000000000008000000000", "0000000000000000000000000000000000000400000000", "3000000000000000000000000000000000000000000000", "0000000000000000000000000000000000000003000000", "0000000000000000000000000000000000000000000000", "9000000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000005000", "0000000000000000000000000000000000000000000700", "0000000000000000000000000000000000000000000040", "0000000000000000000000000000000000000000000009", "0000000000000000000000000000000000000000000000"};
    vector<string> p2 = {};
    int stepsPerSecond = 72;
    int timeLimit = 796270708;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "5317495786872";
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    vector<string> p0 = {};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 74;
    int timeLimit = 909807192;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-10956";
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    vector<string> p0 = {"042060000050000000000000000500000000000000040", "000000000000000000000000000000000000000000000", "000200000000000000000000000000000000000000000", "800000000000000000000000000000000000000000000", "000002000000000000000000000000000000000000000", "000000500000000000000000000000000000000000000", "000000010000000000000000000000000000000000000", "000000001000000000000000000000000000000000000", "000000000000000000000000000000000000000000000", "600000000000000000000000000000000000000000000", "000000000003000000000000000000000000000000000", "000000000000400000000000000000000000000000000", "000000000000060000000000000000000000000000000", "000000000000003000000000000000000000000000000", "000000000000000100000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000003000000000000000000000000000", "000000000000000000700000000000000000000000000", "000000000000000000070000000000000000000000000", "000000000000000000004000000000000000000000000", "000000000000000000000400000000000000000000000", "000000000000000000000080000000000000000000000", "000000000000000000000006000000000000000000000", "000000000000000000000000600000000000000000000", "000000000000000000000000040000000000000000000", "000000000000000000000000005000000000000000000", "200000000000000000000000000000000000000000000", "000000000000000000000000000090000000000000000", "000000000000000000000000000004000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000000000000000070000000000000", "000000000000000000000000000000009000000000000", "000000000000000000000000000000000800000000000", "000000000000000000000000000000000040000000000", "000000000000000000000000000000000006000000000", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000000080000000", "000000000000000000000000000000000000004000000", "000000000000000000000000000000000000000600000", "000000000000000000000000000000000000000080000", "000000000000000000000000000000000000000002000", "000000000000000000000000000000000000000000200", "500000000000000000000000000000000000000000000", "000000000000000000000000000000000000000000008", "300000000000000000000000000000000000000000000"};
    vector<string> p1 = {"084040000060000000000000000600000000000000060", "000000000000000000000000000000000000000000000", "000500000000000000000000000000000000000000000", "500000000000000000000000000000000000000000000", "000005000000000000000000000000000000000000000", "000000100000000000000000000000000000000000000", "000000090000000000000000000000000000000000000", "000000001000000000000000000000000000000000000", "000000000100000000000000000000000000000000000", "800000000000000000000000000000000000000000000", "000000000003000000000000000000000000000000000", "000000000000600000000000000000000000000000000", "000000000000060000000000000000000000000000000", "000000000000004000000000000000000000000000000", "000000000000000700000000000000000000000000000", "000000000000000020000000000000000000000000000", "000000000000000003000000000000000000000000000", "000000000000000000500000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000008000000000000000000000000", "000000000000000000000500000000000000000000000", "000000000000000000000010000000000000000000000", "000000000000000000000009000000000000000000000", "000000000000000000000000600000000000000000000", "000000000000000000000000070000000000000000000", "000000000000000000000000002000000000000000000", "100000000000000000000000000000000000000000000", "000000000000000000000000000080000000000000000", "000000000000000000000000000005000000000000000", "000000000000000000000000000000500000000000000", "000000000000000000000000000000010000000000000", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000100000000000", "000000000000000000000000000000000060000000000", "000000000000000000000000000000000005000000000", "000000000000000000000000000000000000100000000", "000000000000000000000000000000000000080000000", "000000000000000000000000000000000000005000000", "000000000000000000000000000000000000000100000", "000000000000000000000000000000000000000080000", "000000000000000000000000000000000000000007000", "000000000000000000000000000000000000000000000", "400000000000000000000000000000000000000000000", "000000000000000000000000000000000000000000001", "900000000000000000000000000000000000000000000"};
    vector<string> p2 = {"028080000090000000000000000500000000000000000", "000000000000000000000000000000000000000000000", "000800000000000000000000000000000000000000000", "900000000000000000000000000000000000000000000", "000004000000000000000000000000000000000000000", "000000700000000000000000000000000000000000000", "000000040000000000000000000000000000000000000", "000000008000000000000000000000000000000000000", "000000000600000000000000000000000000000000000", "800000000000000000000000000000000000000000000", "000000000008000000000000000000000000000000000", "000000000000500000000000000000000000000000000", "000000000000060000000000000000000000000000000", "000000000000002000000000000000000000000000000", "000000000000000600000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000001000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000050000000000000000000000000", "000000000000000000003000000000000000000000000", "000000000000000000000700000000000000000000000", "000000000000000000000080000000000000000000000", "000000000000000000000002000000000000000000000", "000000000000000000000000200000000000000000000", "000000000000000000000000020000000000000000000", "000000000000000000000000001000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000000000000050000000000000000", "000000000000000000000000000003000000000000000", "000000000000000000000000000000400000000000000", "000000000000000000000000000000070000000000000", "000000000000000000000000000000007000000000000", "000000000000000000000000000000000800000000000", "000000000000000000000000000000000080000000000", "000000000000000000000000000000000001000000000", "000000000000000000000000000000000000100000000", "000000000000000000000000000000000000020000000", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000000000700000", "000000000000000000000000000000000000000050000", "000000000000000000000000000000000000000001000", "000000000000000000000000000000000000000000600", "800000000000000000000000000000000000000000000", "000000000000000000000000000000000000000000007", "500000000000000000000000000000000000000000000"};
    int stepsPerSecond = 60;
    int timeLimit = 511320322;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "1783004040378";
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    vector<string> p0 = {"015000000000000000000000000000000000000620000", "000000000000000000000000000000000000000000000", "000100000000000000000000000000000000000000000", "000080000000000000000000000000000000000000000", "000008000000000000000000000000000000000000000", "000000200000000000000000000000000000000000000", "000000090000000000000000000000000000000000000", "000000001000000000000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000010000000000000000000000000000000000", "000000000007000000000000000000000000000000000", "000000000000400000000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000009000000000000000000000000000000", "000000000000000900000000000000000000000000000", "000000000000000090000000000000000000000000000", "000000000000000004000000000000000000000000000", "000000000000000000100000000000000000000000000", "000000000000000000060000000000000000000000000", "000000000000000000002000000000000000000000000", "000000000000000000000300000000000000000000000", "000000000000000000000050000000000000000000000", "000000000000000000000004000000000000000000000", "000000000000000000000000700000000000000000000", "000000000000000000000000090000000000000000000", "000000000000000000000000008000000000000000000", "000000000000000000000000000500000000000000000", "000000000000000000000000000060000000000000000", "000000000000000000000000000003000000000000000", "000000000000000000000000000000800000000000000", "000000000000000000000000000000030000000000000", "000000000000000000000000000000005000000000000", "000000000000000000000000000000000600000000000", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000007000000000", "000000000000000000000000000000000000900000000", "000000000000000000000000000000000000030000000", "000000000000000000000000000000000000006000000", "800000000000000000000000000000000000000000000", "700000000000000000000000000000000000000000000", "000000000000000000000000000000000000000004000", "000000000000000000000000000000000000000000200", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000000000000004", "200000000000000000000000000000000000000000000"};
    vector<string> p1 = {"035000000000000000000000000000000000000050000", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000000000000000", "000030000000000000000000000000000000000000000", "000002000000000000000000000000000000000000000", "000000800000000000000000000000000000000000000", "000000060000000000000000000000000000000000000", "000000006000000000000000000000000000000000000", "000000000200000000000000000000000000000000000", "000000000080000000000000000000000000000000000", "000000000002000000000000000000000000000000000", "000000000000400000000000000000000000000000000", "000000000000040000000000000000000000000000000", "000000000000001000000000000000000000000000000", "000000000000000900000000000000000000000000000", "000000000000000020000000000000000000000000000", "000000000000000006000000000000000000000000000", "000000000000000000300000000000000000000000000", "000000000000000000080000000000000000000000000", "000000000000000000005000000000000000000000000", "000000000000000000000100000000000000000000000", "000000000000000000000020000000000000000000000", "000000000000000000000008000000000000000000000", "000000000000000000000000300000000000000000000", "000000000000000000000000080000000000000000000", "000000000000000000000000005000000000000000000", "000000000000000000000000000300000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000000000000006000000000000000", "000000000000000000000000000000300000000000000", "000000000000000000000000000000060000000000000", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000300000000000", "000000000000000000000000000000000060000000000", "000000000000000000000000000000000008000000000", "000000000000000000000000000000000000400000000", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000000001000000", "300000000000000000000000000000000000000000000", "600000000000000000000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000000000000700", "000000000000000000000000000000000000000000000", "000000000000000000000000000000000000000000004", "900000000000000000000000000000000000000000000"};
    vector<string> p2 = {"051000000000000000000000000000000000000060000", "000000000000000000000000000000000000000000000", "000400000000000000000000000000000000000000000", "000020000000000000000000000000000000000000000", "000004000000000000000000000000000000000000000", "000000400000000000000000000000000000000000000", "000000080000000000000000000000000000000000000", "000000007000000000000000000000000000000000000", "000000000900000000000000000000000000000000000", "000000000040000000000000000000000000000000000", "000000000005000000000000000000000000000000000", "000000000000200000000000000000000000000000000", "000000000000070000000000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000800000000000000000000000000000", "000000000000000090000000000000000000000000000", "000000000000000001000000000000000000000000000", "000000000000000000900000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000007000000000000000000000000", "000000000000000000000000000000000000000000000", "000000000000000000000080000000000000000000000", "000000000000000000000002000000000000000000000", "000000000000000000000000200000000000000000000", "000000000000000000000000080000000000000000000", "000000000000000000000000008000000000000000000", "000000000000000000000000000300000000000000000", "000000000000000000000000000010000000000000000", "000000000000000000000000000006000000000000000", "000000000000000000000000000000300000000000000", "000000000000000000000000000000020000000000000", "000000000000000000000000000000006000000000000", "000000000000000000000000000000000700000000000", "000000000000000000000000000000000010000000000", "000000000000000000000000000000000002000000000", "000000000000000000000000000000000000800000000", "000000000000000000000000000000000000060000000", "000000000000000000000000000000000000005000000", "500000000000000000000000000000000000000000000", "200000000000000000000000000000000000000000000", "000000000000000000000000000000000000000009000", "000000000000000000000000000000000000000000100", "000000000000000000000000000000000000000000050", "000000000000000000000000000000000000000000001", "600000000000000000000000000000000000000000000"};
    int stepsPerSecond = 63;
    int timeLimit = 678205406;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "7733576232669";
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    vector<string> p0 = {"04000000000000000000000090000000000000000000060", "00000000000000000000000000000000000000000000000", "00020000000000000000000000000000000000000000000", "00003000000000000000000000000000000000000000000", "00000300000000000000000000000000000000000000000", "00000090000000000000000000000000000000000000000", "00000002000000000000000000000000000000000000000", "00000000100000000000000000000000000000000000000", "00000000010000000000000000000000000000000000000", "00000000008000000000000000000000000000000000000", "00000000000200000000000000000000000000000000000", "00000000000010000000000000000000000000000000000", "00000000000009000000000000000000000000000000000", "00000000000000100000000000000000000000000000000", "00000000000000010000000000000000000000000000000", "00000000000000004000000000000000000000000000000", "00000000000000000500000000000000000000000000000", "00000000000000000060000000000000000000000000000", "00000000000000000005000000000000000000000000000", "00000000000000000000400000000000000000000000000", "00000000000000000000070000000000000000000000000", "00000000000000000000008000000000000000000000000", "00000000000000000000000800000000000000000000000", "90000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000", "00000000000000000000000000700000000000000000000", "00000000000000000000000000040000000000000000000", "00000000000000000000000000007000000000000000000", "00000000000000000000000000000700000000000000000", "00000000000000000000000000000030000000000000000", "00000000000000000000000000000002000000000000000", "00000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000", "00000000000000000000000000000000002000000000000", "00000000000000000000000000000000000100000000000", "00000000000000000000000000000000000050000000000", "00000000000000000000000000000000000003000000000", "00000000000000000000000000000000000000600000000", "00000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000008000000", "00000000000000000000000000000000000000000800000", "00000000000000000000000000000000000000000060000", "00000000000000000000000000000000000000000004000", "00000000000000000000000000000000000000000000600", "70000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000006", "80000000000000000000000000000000000000000000000"};
    vector<string> p1 = {"00700000000000000000000070000000000000000000080", "00000000000000000000000000000000000000000000000", "00060000000000000000000000000000000000000000000", "00001000000000000000000000000000000000000000000", "00000400000000000000000000000000000000000000000", "00000030000000000000000000000000000000000000000", "00000005000000000000000000000000000000000000000", "00000000100000000000000000000000000000000000000", "00000000080000000000000000000000000000000000000", "00000000003000000000000000000000000000000000000", "00000000000600000000000000000000000000000000000", "00000000000090000000000000000000000000000000000", "00000000000009000000000000000000000000000000000", "00000000000000700000000000000000000000000000000", "00000000000000020000000000000000000000000000000", "00000000000000006000000000000000000000000000000", "00000000000000000300000000000000000000000000000", "00000000000000000050000000000000000000000000000", "00000000000000000009000000000000000000000000000", "00000000000000000000300000000000000000000000000", "00000000000000000000060000000000000000000000000", "00000000000000000000003000000000000000000000000", "00000000000000000000000700000000000000000000000", "60000000000000000000000000000000000000000000000", "00000000000000000000000003000000000000000000000", "00000000000000000000000000900000000000000000000", "00000000000000000000000000020000000000000000000", "00000000000000000000000000000000000000000000000", "00000000000000000000000000000500000000000000000", "00000000000000000000000000000020000000000000000", "00000000000000000000000000000005000000000000000", "00000000000000000000000000000000000000000000000", "00000000000000000000000000000000030000000000000", "00000000000000000000000000000000009000000000000", "00000000000000000000000000000000000700000000000", "00000000000000000000000000000000000010000000000", "00000000000000000000000000000000000001000000000", "00000000000000000000000000000000000000800000000", "00000000000000000000000000000000000000030000000", "00000000000000000000000000000000000000007000000", "00000000000000000000000000000000000000000600000", "00000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000006000", "00000000000000000000000000000000000000000000000", "90000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000005", "60000000000000000000000000000000000000000000000"};
    vector<string> p2 = {};
    int stepsPerSecond = 86;
    int timeLimit = 326931094;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "6551045255653";
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    vector<string> p0 = {"0020200006000000000000700000040180000000000", "0000000000000000000000000000000000000000000", "0001000000000000000000000000000000000000000", "2000000000000000000000000000000000000000000", "0000010000000000000000000000000000000000000", "0000003000000000000000000000000000000000000", "0000000100000000000000000000000000000000000", "0000000000000000000000000000000000000000000", "5000000000000000000000000000000000000000000", "0000000000400000000000000000000000000000000", "0000000000060000000000000000000000000000000", "0000000000007000000000000000000000000000000", "0000000000000700000000000000000000000000000", "0000000000000080000000000000000000000000000", "0000000000000001000000000000000000000000000", "0000000000000000300000000000000000000000000", "0000000000000000010000000000000000000000000", "0000000000000000008000000000000000000000000", "0000000000000000000300000000000000000000000", "0000000000000000000090000000000000000000000", "0000000000000000000004000000000000000000000", "5000000000000000000000000000000000000000000", "0000000000000000000000060000000000000000000", "0000000000000000000000003000000000000000000", "0000000000000000000000000900000000000000000", "0000000000000000000000000020000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000700000000000000", "9000000000000000000000000000000000000000000", "0000000000000000000000000000006000000000000", "4000000000000000000000000000000000000000000", "1000000000000000000000000000000000000000000", "0000000000000000000000000000000009000000000", "0000000000000000000000000000000000100000000", "0000000000000000000000000000000000020000000", "0000000000000000000000000000000000009000000", "0000000000000000000000000000000000000500000", "0000000000000000000000000000000000000040000", "0000000000000000000000000000000000000009000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000040", "0000000000000000000000000000000000000000000", "6000000000000000000000000000000000000000000"};
    vector<string> p1 = {"0150200009000000000000800000040380000000000", "0000000000000000000000000000000000000000000", "0008000000000000000000000000000000000000000", "6000000000000000000000000000000000000000000", "0000050000000000000000000000000000000000000", "0000008000000000000000000000000000000000000", "0000000400000000000000000000000000000000000", "0000000010000000000000000000000000000000000", "3000000000000000000000000000000000000000000", "0000000000800000000000000000000000000000000", "0000000000060000000000000000000000000000000", "0000000000009000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000060000000000000000000000000000", "0000000000000001000000000000000000000000000", "0000000000000000900000000000000000000000000", "0000000000000000080000000000000000000000000", "0000000000000000009000000000000000000000000", "0000000000000000000700000000000000000000000", "0000000000000000000090000000000000000000000", "0000000000000000000004000000000000000000000", "6000000000000000000000000000000000000000000", "0000000000000000000000060000000000000000000", "0000000000000000000000005000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000010000000000000000", "0000000000000000000000000005000000000000000", "0000000000000000000000000000100000000000000", "7000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000", "5000000000000000000000000000000000000000000", "2000000000000000000000000000000000000000000", "0000000000000000000000000000000008000000000", "0000000000000000000000000000000000700000000", "0000000000000000000000000000000000080000000", "0000000000000000000000000000000000005000000", "0000000000000000000000000000000000000200000", "0000000000000000000000000000000000000040000", "0000000000000000000000000000000000000007000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000005", "3000000000000000000000000000000000000000000"};
    vector<string> p2 = {"0150700008000000000000100000040070000000000", "0000000000000000000000000000000000000000000", "0008000000000000000000000000000000000000000", "5000000000000000000000000000000000000000000", "0000010000000000000000000000000000000000000", "0000003000000000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000040000000000000000000000000000000000", "6000000000000000000000000000000000000000000", "0000000000500000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000900000000000000000000000000000", "0000000000000020000000000000000000000000000", "0000000000000008000000000000000000000000000", "0000000000000000100000000000000000000000000", "0000000000000000060000000000000000000000000", "0000000000000000006000000000000000000000000", "0000000000000000000300000000000000000000000", "0000000000000000000080000000000000000000000", "0000000000000000000003000000000000000000000", "7000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000", "0000000000000000000000004000000000000000000", "0000000000000000000000000400000000000000000", "0000000000000000000000000050000000000000000", "0000000000000000000000000004000000000000000", "0000000000000000000000000000200000000000000", "1000000000000000000000000000000000000000000", "0000000000000000000000000000008000000000000", "8000000000000000000000000000000000000000000", "5000000000000000000000000000000000000000000", "0000000000000000000000000000000009000000000", "0000000000000000000000000000000000100000000", "0000000000000000000000000000000000070000000", "0000000000000000000000000000000000004000000", "0000000000000000000000000000000000000600000", "0000000000000000000000000000000000000090000", "0000000000000000000000000000000000000002000", "0000000000000000000000000000000000000000900", "0000000000000000000000000000000000000000050", "0000000000000000000000000000000000000000005", "8000000000000000000000000000000000000000000"};
    int stepsPerSecond = 75;
    int timeLimit = 655974267;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "4132637881422";
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    vector<string> p0 = {};
    vector<string> p1 = {"090060000000005000000000500000000005000037", "000000000000000000000000000000000000000000", "000600000000000000000000000000000000000000", "400000000000000000000000000000000000000000", "000006000000000000000000000000000000000000", "000000100000000000000000000000000000000000", "000000090000000000000000000000000000000000", "000000008000000000000000000000000000000000", "000000000500000000000000000000000000000000", "000000000020000000000000000000000000000000", "000000000006000000000000000000000000000000", "000000000000500000000000000000000000000000", "000000000000000000000000000000000000000000", "200000000000000000000000000000000000000000", "000000000000000200000000000000000000000000", "000000000000000060000000000000000000000000", "000000000000000001000000000000000000000000", "000000000000000000900000000000000000000000", "000000000000000000010000000000000000000000", "000000000000000000009000000000000000000000", "000000000000000000000200000000000000000000", "000000000000000000000030000000000000000000", "000000000000000000000007000000000000000000", "700000000000000000000000000000000000000000", "000000000000000000000000020000000000000000", "000000000000000000000000002000000000000000", "000000000000000000000000000000000000000000", "000000000000000000000000000070000000000000", "000000000000000000000000000007000000000000", "000000000000000000000000000000400000000000", "000000000000000000000000000000060000000000", "000000000000000000000000000000009000000000", "000000000000000000000000000000000500000000", "000000000000000000000000000000000020000000", "400000000000000000000000000000000000000000", "000000000000000000000000000000000000300000", "000000000000000000000000000000000000030000", "000000000000000000000000000000000000004000", "000000000000000000000000000000000000000700", "500000000000000000000000000000000000000000", "600000000000000000000000000000000000000000", "700000000000000000000000000000000000000000"};
    vector<string> p2 = {};
    int stepsPerSecond = 100;
    int timeLimit = 307098561;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "250797157313";
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    vector<string> p0 = {};
    vector<string> p1 = {"04600000000000000000000000050000600000000600", "00000000000000000000000000000000000000000000", "00070000000000000000000000000000000000000000", "00006000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000", "00000080000000000000000000000000000000000000", "00000005000000000000000000000000000000000000", "00000000400000000000000000000000000000000000", "00000000060000000000000000000000000000000000", "00000000008000000000000000000000000000000000", "00000000000000000000000000000000000000000000", "00000000000020000000000000000000000000000000", "00000000000000000000000000000000000000000000", "00000000000000500000000000000000000000000000", "00000000000000080000000000000000000000000000", "00000000000000007000000000000000000000000000", "00000000000000000400000000000000000000000000", "00000000000000000030000000000000000000000000", "00000000000000000005000000000000000000000000", "00000000000000000000800000000000000000000000", "00000000000000000000010000000000000000000000", "00000000000000000000006000000000000000000000", "00000000000000000000000400000000000000000000", "00000000000000000000000080000000000000000000", "00000000000000000000000001000000000000000000", "00000000000000000000000000000000000000000000", "20000000000000000000000000000000000000000000", "00000000000000000000000000004000000000000000", "00000000000000000000000000000800000000000000", "00000000000000000000000000000040000000000000", "00000000000000000000000000000006000000000000", "70000000000000000000000000000000000000000000", "00000000000000000000000000000000080000000000", "00000000000000000000000000000000001000000000", "00000000000000000000000000000000000200000000", "00000000000000000000000000000000000090000000", "00000000000000000000000000000000000008000000", "00000000000000000000000000000000000000100000", "00000000000000000000000000000000000000020000", "00000000000000000000000000000000000000001000", "60000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000020", "00000000000000000000000000000000000000000004", "10000000000000000000000000000000000000000000"};
    vector<string> p2 = {};
    int stepsPerSecond = 63;
    int timeLimit = 952260737;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "18912612431273";
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    vector<string> p0 = {"09269665406560422196427280998795631599", "30319189523619258440639344278999241351", "42037078529189728363761650193674190027", "97108007846101882634938604914953845857", "63140635629473403028964038985752505168", "64278003226476551681786458255333278980", "40217109262073771431686142310590924216", "45466320313945541985225937974182746422", "85315982052147685512496898537179934305", "34058634400162871861328799843168531217", "77278026730454095994750120851081053755", "94240992961002152495266447412477331033", "98259472926107875525159547170133217921", "85301492377540013652953088418339104440", "56425167423244079478088339764106880354", "92836082997699607307083389182436656137", "96815504187379100419891229006235393460", "71470742146234479088184521937507431151", "57496852223105970300177797320593097056", "79093318580892781650408901299467159003", "30821833616290572504061048110323623851", "30776269753457277870907332985039348000", "61934393782552735057830742080303122588", "62744599244403550993916094939429068423", "61508021574667505664051406125848666646", "95369958473030211874044530019777840461", "14780940253227374024331009042605972071", "49512831325360693695233584200694209349", "95211703398115648155371416630904859286", "23232547118465938374926166770076410835", "22952317376862008185065820928409260016", "18106981189574532372412806716870088279", "18319884338922336462191163165078080008", "86444366802266559832218206318317905130", "71995373923975185414922251114634740348", "17950058235849784945270826779152860016", "51088858554611803639301673753018149902", "69835457572102723398264202543761865430"};
    vector<string> p1 = {"02389510984444362792166735821586914986", "10865401774688047982925502438516813463", "75023402479553498190821357290876728161", "52804757447530371748131107857938468053", "99770727018968211348496546005288298160", "87288008110470868417632032450513507599", "62068008767396158302853598197806448238", "12705860836168113703820846395723040019", "81462056040364304153668403446777581424", "18013656702045605008766453157591803039", "70812268230144020474741544347578397419", "32463003319027878314953441940450996526", "87118487382604337070911391489035029135", "12894650920640905518197145394421549605", "10652204271362055610906447188095311146", "38801483149469503592803898222568868872", "73532093740899820792124682471545491721", "87058847766888036017388844445188150638", "02789679625798708204281561711379619405", "31357377076430266070328819628155469254", "13401131599664063179058223914168215426", "76165740725096879038307126531989660410", "03948055056284655832340133996516565957", "62718094871803176525480076764813451633", "59340155421946656535173401714569152755", "20963119787412617245480090363130569290", "51950465292639032325178676029849571075", "84987516678116296882372999600957006891", "17986204410515099909720490670850232014", "25137854864785605016786408729009350758", "41625502128336032531482575274907815280", "21341697721482064732226197449340469095", "08449824188832059446805361952012085886", "12712755026494291683735869827608009256", "92618022523308253222160960254733920794", "93938437710935095277442175214364677042", "33966091108375937025449705375990506101", "52470967895012453171656766292309766750"};
    vector<string> p2 = {"02753454612149206873624056932729916453", "90143584701896610796640689505258194644", "03043359071789529100907187471235261807", "92601142884204314411085232696413651767", "97550970206817014447263778559218385992", "13371046361720083961412842157261504431", "17944104407580914776145318115546637280", "64030050931917054583690266095395948560", "25446736040233043221548833991452738395", "66960410906539077811704488316601283187", "29816406100441377756062886379478889143", "20626150829050213019380960861914311784", "40299791022303745728789694237111635524", "46690947306580367253682715342896574474", "86903708300036018623996004579965926275", "28020189265694507472943008256442822133", "94779485160901530483839491244599437323", "27409503159907491033379960517932339544", "57726643236680591400659712241787485863", "22688460161760379490202100607470998774", "58831513893487618936090362251157655061", "10125812442379574196902740395578990160", "40683074748864703328400448350620127959", "71839613648167661276792012541510438926", "18478635428614509724331405795744048726", "28046853484300664011270630001928228819", "64340660424468858481690194030549304722", "53689267116597209306801594703305033025", "62678487898194117603458429950930859753", "64173467597490041660511031829037708434", "22019602663245978100959526510005427545", "78133578648868919645377343848490523058", "95753722653519808272212600830540021758", "99673184014488691411273915143624808132", "27253832645058421357492216220544280968", "40485433884333737146488942443227265072", "00286522279437025987532759926869097704", "11902540585665297959997756866719000250"};
    int stepsPerSecond = 77;
    int timeLimit = 779150783;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "29137382397870";
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    vector<string> p0 = {"04080502407518305102775995", "10227643623357056584882094", "98018061208861707254221807", "81900252262244442526433689", "13290309610874156300063791", "14494030781381913887163686", "64135206166618390693818817", "99257840299938196934246169", "97970680095799191329645599", "75601718700158164065256795", "35086272000371462542806864", "23095840827022922423887320", "35821267582302437169281706", "71415440484770145379706185", "57849522958590090487724293", "02030789651373202393485074", "01823447679389130242586979", "56575978001440040052977339", "82591667344535538908914966", "05531433134914370810534644", "57845661192747093019038039", "78654201166929133002109610", "54177277041352630582830593", "00361537836123164438290087", "28007409982439367602798404", "88396017114734618258737360"};
    vector<string> p1 = {"00350999758651383978550487", "20501983434355003674989958", "41008992616709135400523300", "58104510611705421323578189", "82420267283895616434075318", "81921000342611016802530994", "16040005117217562393400224", "96405910316331458887449755", "17760156076387615076646526", "19584224908425201509124313", "25177706500372792118531062", "38999216503030082377269309", "03109559440607629279474941", "13063268580050950239079240", "81478581864042072278440889", "85030113511314108832307795", "34712627959083710603133165", "68448992614533403060832667", "71010778236330046709031513", "36512296406294433760392083", "21474721535941467862029597", "09929241815758494635202308", "72943642572935972623330799", "21171945888633327272346097", "94283114287352331984223600", "59431155631767075549972060"};
    vector<string> p2 = {"08581388554689344623442196", "20035313827125879480027642", "20043206453798735173972655", "67204449402820395004831114", "08960344289648362185672708", "73086040457911292052517914", "59649501471132791702125379", "11602050390463937269970884", "12179182098525815371428689", "58168570906104412938745236", "65626704880267274598903841", "80806791539033533711187775", "80876176272908642577131044", "45134814900070727135789577", "82807264598333025555294639", "53900805612076509684931586", "97070233356161990598369945", "17787575655001359043232743", "20436046723228076009734898", "04298710267213156570566385", "04003000410441608013019986", "64395819014234747108901894", "12322097504323457614550386", "19910342967974480923592040", "81810649552096983059659607", "21777959791332014101284340"};
    int stepsPerSecond = 15;
    int timeLimit = 950614000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "6792137029970";
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    vector<string> p0 = {"03", "70"};
    vector<string> p1 = {"09", "80"};
    vector<string> p2 = {"01", "80"};
    int stepsPerSecond = 68;
    int timeLimit = 892634439;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "IMPOSSIBLE";
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    vector<string> p0 = {"049", "503", "000"};
    vector<string> p1 = {"073", "108", "740"};
    vector<string> p2 = {"008", "601", "590"};
    int stepsPerSecond = 48;
    int timeLimit = 25044412;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "7813856518";
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    vector<string> p0 = {"084074351456321420", "705069176227930793", "760647095419869710", "513029746699592478", "949002523382214727", "214600289091461522", "667892082496446650", "473263309991523101", "103140220668249814", "309698825028621926", "088314198700714215", "824679058360774063", "597688615779083729", "690648128978700569", "367974653603990101", "952192080987500017", "014867582693603304", "436618725226516650"};
    vector<string> p1 = {"064512791164618247", "808552196949715350", "580941027848005002", "543060210147599298", "831100970095000863", "478790918637825778", "008700068088073543", "453631100037736736", "636438510925688033", "885187774005333189", "520231407401974051", "158054029360047867", "218727139191083461", "538559112512300441", "368519810865670297", "757081713027531031", "853883640332432102", "203236255986326050"};
    vector<string> p2 = {"040016361504928441", "609985583337052655", "930854581529983574", "529058505750325353", "828803504609384925", "600780728173428468", "514762085681507337", "017390004442012546", "501387110438768875", "385521943027175696", "195219717409536023", "546610903870996011", "423130757117037293", "025948927109203346", "796465502076220748", "896036155381978005", "471095284403183207", "355622105275350260"};
    int stepsPerSecond = 31;
    int timeLimit = 244749674;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "3563157535071";
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    vector<string> p0 = {"0417910024419186307560515039", "6032903716918371389110868011", "7105690010381094053281112391", "3220796287488748068763003244", "6957039209849507693429298710", "0546406219151257139199431682", "6556610327960006121064993059", "1175921060415101101736154543", "1580829401179210742052457262", "6399647620158395236522728285", "1014663739071387438961833005", "0465668055502869918853659754", "0558896372270974272364359736", "8133310391929046833570739166", "3511445986137203939824172445", "5833394659367970289703687114", "5702207558023151007825005385", "2176648091846660007817522222", "0725944709718894570377251225", "4778740456927090001045894840", "1646215209456168069206932634", "1383467281721866494490061876", "3407737203143245423293075293", "6812352048960274728263700407", "1575176303827635854226360483", "5464533042694178051536280001", "8714250803439698138933197903", "7230001646658191253366189410"};
    vector<string> p1 = {"0032506907133612305238763644", "6068764144837760242674297276", "5500916905539014900937394734", "7730320331253906820410633385", "8884056980936271563348309474", "9054003568178383901277834664", "7012040766015042081393443226", "8842556097285807303801163407", "9497292706936654355097690706", "2689630370974667424880501360", "5401869844080207684428806087", "1331893182008878898856218221", "9298443725330555332341429260", "3844975739323085630386610952", "8881385784457500088561891473", "6700700038826280423421399699", "0365155158153058088620074325", "5054082700537352807865858057", "4019514145617860510792498073", "8707338301947401389065134384", "3019011744797091853901387810", "2608222323419981690990720850", "5528900843075329437518070954", "9510364354331858682555400650", "8452423479807462548608870342", "6276133377915015763238010080", "0462081814174065589367680600", "2784720140424051469237165830"};
    vector<string> p2 = {"0509548487808534975501393686", "3046697753612312465864534963", "4402178957854217449807695068", "5560001430228233854690791452", "2800038950203427260557116486", "7431601196902144686415680401", "2410370646757677081451212791", "7530091022186783642541888901", "4025700800912321119495741021", "0433835510551762017320460956", "2713756050080357433634588624", "8324595892601789915670163513", "5950984453150263452555215231", "7040647837292053709364539263", "7868885849644506684976004677", "6031749827324400806766173976", "3430256350254186054744533160", "4502846083638853208394780433", "7497069365163436310386245813", "8583424420358964219016366900", "4849897369703939747409030666", "5775179261117299604700946859", "0388857695733054975838032827", "4245275081862535840430004587", "8815231970598874040726090909", "3592573018307457234951135075", "4853422681202243008744339406", "4039446089469681837337202850"};
    int stepsPerSecond = 78;
    int timeLimit = 767534570;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "28856229693699";
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    vector<string> p0 = {"044095632613384985913", "306278454244806782121", "470441358263556230974", "612087262383977482974", "722208661835470262107", "136920274369193391109", "783688042959087910953", "566612603382268866307", "899899990074751473208", "241141924009419300490", "367973627800041193019", "034449463660925811638", "638071104516087046502", "181531667953405519933", "479442817030860737306", "459026215761485090529", "779536921187897005143", "924502409817524000521", "600498779300566882008", "127841957185290379008", "209777571672041482970"};
    vector<string> p1 = {"030259218316547534208", "008004354561166670954", "120951488906908052719", "550041911875115621620", "782707241160633044252", "114280261194896768279", "007358079243359752573", "413470207428447995889", "334031850770383975260", "466836916070125258225", "921770632403801859766", "677941423700211193928", "376587184761065227652", "575788838013900197291", "154016205920690960700", "933834808742502087602", "624244143143491006124", "168670669605049600004", "367880042205193019060", "787727457691581381902", "317600641468248514000"};
    vector<string> p2 = {"001179429512131754615", "008632405005039023231", "650219163780088304354", "527081725156730823773", "593508852127846663034", "514030226911616194837", "225781053108912946426", "544606707614950643377", "378619080326180918785", "046544107099267806882", "263382471204160936053", "967835815850968241632", "096915477909057904939", "799393920370203140519", "648337586995080012044", "316768183570963025904", "001202344907076805860", "342428697959173390883", "882078948553177554074", "325698907737877786206", "470767543208664664850"};
    int stepsPerSecond = 54;
    int timeLimit = 123081193;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "3217957790920";
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    vector<string> p0 = {"03101965824800756397353831427969391", "60983927949616103588539176058579389", "67023683401604304063132312181463337", "81503554188682668920332635018547453", "72840662277137079523158469926599520", "98832070319608131382973091613133233", "55181407748879383458560173426659330", "14691170188784132622995543315767804", "93787574043795610537391808577691538", "62658285105155903296294881685335953", "43548902650168556760754331786832389", "78870653250092884730181060812311392", "22875338476203574855837969273595815", "78026514750590824982843226013041921", "21835685396745058503942177318352560", "02819307162869802144231662926606847", "96023388277290930326990036835682862", "09807077487332603052389334038092290", "28227705247861506509015245268470853", "23250619792299011180574732304369811", "33842737948159244203054868348171401", "04851009170634839379106376447169119", "74994164901752232615370186247677326", "46722645508832649930915049136652032", "48093693625286137344935209184336716", "87470018494843197044247200288214081", "81391817853962117576879853091304338", "54661434509636104195168192304762200", "03640169997291407565859199730193239", "63244331642241729878997921883039184", "52703348581500591600551636949808406", "46106907628121741595141091077150497", "65672492513487972225318308664550003", "75779205882866001530130914564792406", "14019901987100932282106683685066690"};
    vector<string> p1 = {"09581891721016237759337817346105183", "40846669606055704363191739064349843", "40015811178892378771420484843896219", "92101301394792463003419472260609620", "97200026930395510029601181781523696", "92051038743256405129402313959757697", "40227607233631950382718869736423035", "22314670328290894704573209834881206", "67330734085289986679981937811237802", "32967819803189760843891804031164485", "15547398400701866659673827181698944", "53953351589017786550387580378244776", "41122703070906746045737007244240653", "89214306263840331388308852214067972", "21529912757270007615689895875967392", "88190069350338600442437422689973776", "87759221559285820149564175361247136", "82803484889802218017183464903040088", "04488480582722094804070976136126263", "26916411253257310020998136274657917", "20151514084394535636011106753892294", "82918914400166014155201596509815836", "14828449605841999324500959996943081", "27578395156345889591302027262453740", "62657713271382875378562408613554190", "96921414797782182844253380802294376", "71085902887989834289669811007675305", "46640547637461962741575571502750116", "52399028601583255020793240840110654", "87625257050407457263603647853031309", "86135385813462825531178143577706550", "00306111673421152340495162959650170", "25456051674026568174368410083785024", "30482358395075151432062345043598705", "61030525512786318472739902610488590"};
    vector<string> p2 = {"01565227715349106392294755913874941", "70954661920039523937894827614767652", "23004226457102039943973589466130360", "90408427520851905890599187217809903", "77750297278175985476653092013219986", "63655054749827513399381697826932880", "33572909136859148442239077209002547", "58941200991032776927224443455195696", "01820841038814751977540198305991209", "41904382604137334877267582673804336", "37141904280974861220722307224750243", "65291671431007357092599933685928792", "61954595788205029539574372220213844", "68975653123520103897191412647611292", "97060396039167025817441290103515587", "31149178457935202275685788315022335", "04992559406920690764462979991547588", "42313830770569104074363587246754377", "73703405167291136809388524470857785", "93190367750909914710095477445342395", "21081853982819739605058215579864385", "11594499208159764548601440426723138", "28219637798774433049660312336496899", "98747535409854093959002058844635733", "12077499253449328342140500816561691", "38737183542962424566374450926719108", "69962606798234902298847107021049640", "48645455892714003842961471008968354", "02079861678873637891462644340909121", "93057857640489270865501850862029171", "84951703285677732265236210401302183", "79195570367002287413825426840680971", "82672932054431147962411273072780006", "74808862416565749350533727417694307", "71754262947896149694342059646145310"};
    int stepsPerSecond = 93;
    int timeLimit = 322467240;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "14664842673346";
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    vector<string> p0 = {"08155034650732296613599313045230367", "80632404236442275775380345878157110", "35009966320708575055513301650761231", "23908820628315381096499049020254403", "49750715021504590101440483667162572", "24386089385905206678251930205977242", "02016106713931829003135350339592714", "87546870648687682848398640354078866", "23411097099593531952792176346222659", "08995003004857929743019576790679651", "73306566330655598708276298068631564", "54031379026000320728917997728514076", "60139277490800000937144074509877489", "99367759579880937282276077845246149", "93862362343735055924113978326485513", "23987440177859201054035571059782933", "91853151202412070432026275977103231", "87230452184359801006391460583826819", "11583869110911996800163656693404731", "56037158381408509150782677293024704", "18888389787218666404047650685601701", "78458445676432946532004101714616322", "80847713177235768801830018656170199", "66692989215985908048146082752063659", "87168305282280240588407105888650421", "30438830231683282819187160468009515", "09431672578970789069255035015340356", "76561059929810899246302657007054939", "74923054865876143447014284920623374", "60415492368421060274461307542048873", "94706096618600875456765507988803921", "00317027627722170157657765894020616", "78805442367569619476351165492579055", "12164543205824410763128532004777909", "55409806620232115265798924693589140"};
    vector<string> p1 = {"09229002027241787268270840210145089", "10803843206193673844906126481473553", "16096002217880844750097470065628900", "72209436436373225534915070811933665", "52030751224670104111314147280867389", "85499064636762094300657859616197971", "16752303295281811480539367554625715", "45097150298022602154711478215242602", "87359531075808154877265593745560553", "05048816001055043300023981641294465", "85523533290474994110291854250735702", "94939243904084526739893264991904865", "35791895963102042055319431357432982", "99287160490110368600053600034938031", "10270782015603080633235481540871993", "81275283188904305882494034027932765", "41936235261730760482638655787544186", "64821283133199938031608616372458329", "53156381403533879105723096556895529", "01204807560632709940082750746495409", "66994456000702864701021097484005864", "72821121053919620032102816011907647", "95839984824646891019190052179736817", "40626660409210429631352026255062480", "97657288498140973258610106208908876", "57855576616501959579652840194163831", "41617443946806397249002975080431040", "31476633459846218232400224506626932", "80815594552762927547973539710825824", "17903668342469018901630560818027028", "07465710499408529252932753223403517", "49579960590212494628391744172540641", "33215906248854492094750142608023056", "50878016862565771641784384528093307", "01940922689370012798304822137420710"};
    vector<string> p2 = {"04916497334638829859262775438601024", "90646972522542521085773303024249325", "14024968720464469334957182543970014", "62005145611271815785069532424758398", "81460957350186063052686220978368392", "90074059737890042848168058546931061", "90899106727071830900271719850913031", "92462750266298211692501674589533767", "50604286029050842475041751484163860", "82291681208082659801554158521301236", "34217619730524347091259793096444709", "00519267712018330781696803357276374", "49836548943206028816711089467753444", "70931076249440752494675152018672303", "63469628386802094999244472176479303", "91210596518569407301805971363686790", "01599110899463400167039512490111228", "32964973368869431004918331664002644", "28322782764395366704927801804450953", "19212976361848799960790824496349642", "76342635795487476594095181630394258", "99646332841437124175108168655923039", "40572313742066331515120199232273678", "61376248325668395737621096482252866", "82021548228744493046200004587545397", "70340580224949986388655440189476491", "81662116058136734380741537052343182", "00538786032769071714571015606840045", "35411566237328252745952641240370726", "05173420968110186050693147866022696", "53273154496574825648705781120108560", "51105894588333072999771893188780392", "66270769394586478169252332148284000", "13994208787475536710162400806820302", "97626605000758568832455281203625310"};
    int stepsPerSecond = 58;
    int timeLimit = 974826362;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "27572638706940";
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    vector<string> p0 = {"098790478136189544947441096505974746", "008382653761322716148024075924384435", "610218841270532024287256412466714837", "932007932452617689175391158418987200", "913306064351464119020724025827148292", "810340768309401820290449822224165460", "956788094822136031441864337982803362", "243856308990426945700299037263097525", "208010260287856859851144074141523625", "727578253094904617257208834090349745", "429078688006279771959392217834481873", "689481100200759544688857123132860874", "787701786933039149912163684482151149", "168149675899700021879713766279782596", "982730820844130122379152841986847696", "016436977491648055395904882461323717", "078852780376827502800846450987089767", "414519297473675850952773765554251516", "618884533403920397068514368873959259", "196640982185282053608148078590083252", "673694558570027963760174206058797523", "480165896387916744166089386353590411", "270353124581943823761309996092107820", "374711832280737363452050157327643300", "718243240545379911646578035561588770", "324929374263590967960418707756671810", "026978724645224941238106760384716175", "052318973134846158317148739035607320", "722655993684189250857242922608697933", "684820683407106700321879630320381229", "655689660949963371069472802944082139", "045874265099729513252571142455307205", "979729918114368083827441916738440564", "873964229900940334745124409167564087", "240461580184443094261452047607431607", "974795751191355960602291265503590190"};
    vector<string> p1 = {"019670084331423226427604407129212379", "607922338770156523689872086100126018", "360333245700158967889853956336411165", "491016148949530438989642907228894708", "634602870276787573904176576634632278", "487620521398229260148014671913999988", "330482023415319919067997048157030546", "668929607257479241131513005620086867", "274029980800313830282238758528411353", "574554508009101135612128524757283948", "796796829903259572778217791643020109", "098487724870217119306214647040343247", "215465308019014188346719422076448714", "577570991501403623739179835532698575", "374200426880170401311786225222187041", "066444257219340043038202523525937692", "056748833550853608585930101587620489", "890425945794744240847854851077167061", "431990837571975682016749430302926357", "456741652420463047100033155520094571", "109823259882483707010278678815546846", "298717633660653082860074342030692700", "898124850300321020684808904931150031", "291915940252659419210620583003517437", "706120857561774092442942041437925996", "117882421483307838452616300801995363", "180504339437912660845046260599322348", "303909478715335997471240375050956217", "203110586835921845248196413203417748", "843624183314778470336670931800578126", "467421760644460926648256225348090476", "803600156975434836400653255404000447", "660329073412978906731285426782450848", "259995334236295627684161107601728083", "756299771929128181792789998196791301", "241280471873682710521603680515832970"};
    vector<string> p2 = {"009493276178880622447029734896968908", "405706406532757249639297186967261753", "500617964658067559642433305144799953", "669022634229018452707061420549175789", "242608688965402504318716129878880239", "397390385512557665946137015920413306", "457008026504376957220401805150335805", "809681303893485881891064577947116224", "247526880567595736373274846920272869", "230108857032218052991572876714337838", "818603035805234349189056412780089367", "307878311940717520214431233348911112", "095127898762079315647272852095318281", "671779306438902494212954037331449166", "952936438687000051814117441045804525", "919296088205687001877218868924373467", "548352408490690302132921187011809302", "038033241166590880411281529714854367", "699222888706747886015033173846434527", "747647806587568183609199754099487885", "575530506317145274240166070141116871", "179452744198130748476040251419352248", "885249232759243100147408153696284058", "560088582135338832849220804866443053", "151992446026364758938546018150801332", "467849222061570075448453705680934724", "118558265167832418175636640102365641", "125776576091192871357868016077180339", "314084117258961641243301219207532694", "657739311147560195200524498850722391", "816128515137391518953853636087018809", "284458721858948796224504586386201695", "174603182789674119167142027186810527", "551508617350671265885058036288156041", "639922520253803874454918820384669505", "390704354583349898278492460058517880"};
    int stepsPerSecond = 70;
    int timeLimit = 9118543;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "311914960718";
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    vector<string> p0 = {"069974413423822216678856466267604713", "107661102344623401177931520587811507", "910914372528869538076273342457456749", "307065945562164827562106973460856842", "666101462102397119180134754415151724", "860390153254468469708464615142513438", "365890033637426420366420165211595273", "178463300597790686887659875949690406", "239210100936706793311282679795757161", "285278170074007131967855724495229074", "965682185001842410189333407727667435", "358309715970629714279448646433786571", "788030812785032247945312641626336146", "646885839183007072390916190673242620", "680071023723150216377596258877193995", "835064597248998084967457348299277540", "397569970851567201414807011796119284", "193824539103474150685892976068031189", "326830964835395196058510220732557016", "317285558611697450709276613393479841", "896392610685382431210554698388716690", "738846819955467533994092489567485975", "356457921806135196536500346315299855", "525755716089145432666210884792447894", "362634446092319101301790013583626362", "818290416727762971802370603548188461", "597954144793702757474948060782518689", "130870729966642403083872153011405723", "642033710336398327160821963405573015", "352775050134627225634481140660221948", "821522088353521196909506348734051886", "339132989300282497553150527806703167", "488573706522419241946126203739690964", "901988105407936590954113400406898020", "601977966234353095129445436518500809", "058642987637581005451736133161068020"};
    vector<string> p1 = {"022421060861868449477530893052076419", "502750390096690587815745287251368736", "980798686782682730314206922529089850", "928071997726240504693010200310841249", "630502425840188038133356776391707302", "556050038018321855334117224217443105", "738530069477143486550024198740009386", "802962907621509001444422042057127369", "088752120224239875215758229624316196", "819051596047599768443759102286346637", "164020901809793222713967840408899631", "150161040580285537115539829736359870", "582107927681031209507914399088905846", "045311327667504723198280380330890265", "500877444849450829852756076270855853", "720290684369264073136818518089826248", "146911704463978505952245035497809568", "688642471157844280898143321336934712", "336079569102993820035268750099223783", "401094334274677215200020044272228431", "484948684576821855150959893188494453", "832679560078541267148065640704245561", "559151066678261779234403617065690403", "115771774503207862325050153057309458", "477333467637470823338766061655269133", "689467951781115794550648106419965879", "648177909276411947548381270997883295", "186471135566932345378299070032905799", "701256937452817811701407619201838040", "721116656924263370566960064070006547", "606485858483288077699559262036081845", "614198242255941148630453731117600823", "035470129662049373103414802887100097", "798004636042793749089039101322093011", "357820249299609702295428669590757603", "188782670789921075381179198664103970"};
    vector<string> p2 = {"033424323457442926117405291396589843", "407683378799272366618754811631166046", "470347459284862271719028359011477401", "177021781333242343726338665649852546", "634809911467096471768514922568124784", "688940464338047822182319912379227207", "645098009390711855966292904308394946", "838087007815686278390653837796177457", "429222900363048146804371253149636020", "279305822083851896730361979359753458", "426667152203303608417200718552039425", "197631162430427621821226778282635723", "065701246128033265744626463940273040", "064445940286707013499149573403923569", "110522501314850488875500759906597904", "149162401061078062062571537606849352", "907139849527945101256524703396937900", "218615007460507360975109280659883081", "361337154239046769060966775527330965", "437291581178987075806551727126783375", "482513413285163811100383873628372317", "441595669229530761140042447160466892", "058862059376209825369009833494536234", "875560354545808410495950531093444119", "032588156332538618283583004948248765", "768242599177271016067571301538406208", "926839531343613400135290250089198556", "144479025179382736848569498037598154", "844298901920308993788763634404004446", "625865360371200009855309721180696055", "828741474676777420640853933540004481", "825582461135664284913349961302500407", "242055633475235570289892939172910632", "488942896161863672823114133426867085", "123286125953793947290844035625358807", "848010877708492390960418663163158170"};
    int stepsPerSecond = 2;
    int timeLimit = 837015982;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "817764614288";
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    vector<string> p0 = {"08071810360356609687026333340588", "50876987247795314023249572935615", "12028105564279695810072564691436", "67006803369540357187159716527076", "84660491770510887086338264813089", "05869077949481468456804290004005", "27387207678259639306312523649846", "12011210919169728026359974513589", "82103632072363204320681777412094", "81506330308511717230131831343557", "56584814310145852312466217750228", "00584310931038210545921348118548", "54559171003300762407338898109947", "61322493618110585903453542653710", "44566170980116096791477111984726", "16493765745873905307976097971819", "98301168823899750274370369452371", "45758838861872546048910491973247", "81451499472245991509372783659018", "12463854427694507090093087658976", "29085061408294792914014413361459", "65142323734948862077303147620082", "65539952808057019008550294825129", "97426500429478409728282042289308", "37575095626014746466848207006607", "19406604342579215881721110348967", "08114930293862287360201324072649", "82218149652424803183586902802843", "78787958500146149544030952000343", "05104272704042113657709861064051", "62496668584736969738647720707403", "36842612418164225285842783582930"};
    vector<string> p1 = {"05612005546353007525101589057241", "00242567003588586323625124494867", "88032509725305803127974318714571", "67508370295520424773947277984675", "27210211418030676549408888782489", "85499050388519315957587465369941", "81572200610349757616393779350201", "03806100440782441277680551804125", "38636750016910451828600274088325", "92148000308058601431153537737353", "28468589060956769310464113941224", "62020731890038997320914127078414", "03543275097407756206112230420835", "06252429538100789985190552272219", "39103842381600049037347099273705", "21825669162773406395634855149066", "27444124496269840472226172413479", "85521865354735500022460544159550", "32673461915670192503723280659300", "94688249286856261990834214874294", "34212663849917378268060195961387", "62986749600719080448006901182669", "30036897697509509147200744848430", "93242239849348067204633029387039", "17261490569029396793348705273414", "50611333893814103826386240809433", "03216569374319512550966127031166", "11057537011422954434591918204912", "32382011144767823458069999350047", "39233576610389123793774863235080", "99524090833314659342116191527604", "87922144179404055498726010659290"};
    vector<string> p2 = {"07919343862702317978962765720660", "50635970933767295365448203154016", "59010983048905292778216411785703", "31405258398214606474682214921727", "25170888176382009475278614535474", "62660046142747956543743357085559", "39710407382249117660304873958620", "13753120916167374157773546697437", "67432871094571078125808646463910", "78701574601145135552572348804736", "42365031770334689351933293017944", "36793057920046827278123516644590", "17923970812209066446789328164854", "93346538350840263729411939093977", "02240708358310094926437386699568", "70240048518821709015642048649329", "03165306814867650870444604465794", "04781397324281059097651265922836", "09691100424836887006359837989738", "83476596113049056030282219111859", "80378066109168417461049380691660", "56546513712073412173508651252815", "50006831766739461766460407852887", "40969790456407090756112031083990", "59110921579197189058470700183275", "78689502393482892840232030386571", "45846560054566358390633668065638", "08857417691158608011644434008036", "13580190781151952973739363360485", "74254364258529581676425999573032", "27474930208738431128745654339705", "16002163381331965005950825154030"};
    int stepsPerSecond = 9;
    int timeLimit = 91156580;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "396667857784";
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    vector<string> p0 = {"0816642567896749798", "4008770432711223187", "3505045611501653640", "6830187229539565061", "7529024209575554064", "7966600836545632024", "4674140189598169835", "8396853040745281943", "5616324709354157235", "9911656850892360635", "9920574841008617925", "4161153645209138333", "3717037866790232853", "5099638797242054654", "9238929161914601569", "0669596860414540935", "4280571954614782083", "3432493179224672602", "1947600290684029290"};
    vector<string> p1 = {"0972874033769091469", "6071699431853963140", "6403941041309268548", "7030818406720907491", "6179079897972764045", "1867700060911292909", "0817900166692321910", "1171002021731631931", "1497202602574597400", "6347280030208513615", "7319095503000365967", "9683001716404439749", "8078579056910490442", "4707464093735085260", "1706400012654002678", "4105781286649740930", "1502769482272713028", "3523207373223605807", "3031461632172656990"};
    vector<string> p2 = {"0692346782753793027", "8035357395857718962", "5600838327631335072", "9020587451267413719", "5412006350069359729", "4667802533005179392", "1473750221393252830", "0054251044295400449", "9610026407030052615", "3298583100554653775", "9599529804041996093", "8340005778606362459", "9679030136120917620", "6795751235607057469", "0713527567189907866", "3987567446808890935", "3329059166922210018", "9125735735672224304", "1357941284405539020"};
    int stepsPerSecond = 13;
    int timeLimit = 225396689;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "1369848377275";
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    vector<string> p0 = {"065857073614983026200925657789507084993", "205686436691912398165152152991055715568", "240955179052633356007218797843657142679", "796097943503585884955601174791500672486", "739000981740498519259486692336495908098", "382530248552248125250734614996871796030", "008432056700227793852713622804134410755", "327362004154804950370514878975550943685", "210692000735431579251228927355427556576", "571315494053065466742416791258136879223", "180407253802906165209981441133584491483", "931334060780079103735170134241090434976", "595522434908043777039742876137812869015", "354551948853704092774244382972227095504", "004731333500140767509551923879031070413", "760064452432587089220130761667916536273", "919244232276419408576366631015965159712", "266040346116772330755125776575617479972", "555815560137640147099667744453300178226", "839425029420387383704820021823284770050", "245640713542954158250180927947442098627", "852404145938646650464032852061231985129", "698194751477130548046108129991389380259", "083956372754335359468700965989671431196", "135898243757345553262231039461644192194", "723329996629261506765029406969838361572", "648831768725395891688561310976912503032", "639014062988785511720511083038654267307", "138137994201509839774551279900984465857", "999136325634391903894102550050574797050", "426962803031102329050529198816087876796", "728231285795293614615973762551202306949", "998862098164416263098502965559660844664", "657212376126011332987696290869524026761", "722983216857633817715300565363436702627", "085553001179342570425050337709629170658", "681576122848298813382599782569548697031", "971554754807923830967554033138447602009", "947936367796583055687963331571487293020"};
    vector<string> p1 = {"017905619764563647998762161554678590151", "204989525917814657273931918021553254326", "920982049613565874284691353097378768162", "243089230194930165606791490071894342467", "486809100766945859951682725269036094027", "003990740449178995449260642702073202396", "352560058122824442062014846089265792617", "421603206958899939399303971097381609851", "758737620277170429152325153364903480987", "306043288031354818541280216225018170732", "718863544300942956118599892529068346081", "424631836660951069086297070552399755166", "442067363283082473108923810571257879472", "324165404944705705000944413419132504370", "419068750272470693047150686849565957754", "258973864260975025504119770467911691441", "283885567219650802787668777801543573440", "212529037327285270598723178904306734944", "439703568339302621063418495937301690956", "731044062208749601100405644845322852212", "137344750764936790370782902547880253620", "149009378471469661135001305133557947052", "936860559360610972585003274846687156851", "366262583200271718405280309067893455392", "345659389763735595693494074149062738234", "021870427503639606212149501465907337051", "526573071053284691937437160287722189939", "640174932851445746566468879076492116855", "476182559136891409199058469007683544381", "093353289282392197707467713360176029653", "448483514402498078303140742829047523459", "723960842746089407057341205563603502122", "742222228218783425691227779101380850092", "296306432898720297910043041052492023409", "727806028210512952482128062503485308609", "881206327043886387912049092874785000585", "866416389179499801039979729908586329097", "711405616648137127528523308898799851603", "442843316602097421411518429057393597120"};
    vector<string> p2 = {"007019007440053683004273886575626627737", "609162918950215953810779935222719647039", "050617788236634523077224333703314097777", "510047384834716951201546806875742866816", "290707358093108786764613232802966183831", "840170294283849981421642303363992513255", "873159026730167582847676511855303056748", "543559403083661548786239491158763390117", "415993040081845351484082835736822183035", "733839676073425263531129363305752213609", "598832468903204628253200055183370250884", "684926488410595805376102004504570630096", "902271753580011251229566274775854078885", "340444779913008062739680120828874200967", "878118017200460847247455390591189170250", "545549343087944068365479380094711268851", "503302848807564409561401715613320474494", "004279936082243520608851267023184126035", "498222777159954200002433297667231136555", "426217789701957596208490033391945307797", "586726493455206409750886460659526693878", "704278432651252808063014870730637871578", "094528149329981560755703841788468524817", "200711547374824110488230600968051258395", "088746989093177669658573089182034811291", "103254120739214954862365706818921173645", "042357596037872641222236640692062618283", "365935671115559145507803284000254903471", "484552053600670833775721333807103140763", "219426426753633846175107421790003199373", "842599827291262238665765007056053009297", "482596130627394177349926436555301677530", "137502475349950214780455512497700067383", "237846348495411087103090216944380006689", "196260580354586419570243065726855407172", "997632706814516976745004550597987750292", "282527789666028164889768657377725979086", "772563746504492000775462613601291757004", "380426568565511150586700737409857092850"};
    int stepsPerSecond = 69;
    int timeLimit = 134996197;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "4568878789292";
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    vector<string> p0 = {"0537859456213430716927709628", "3026670585620263636809722492", "5706318098048712758031824898", "0590406269268085058243367441", "0420047989605733653180104432", "3074201638528501086663991004", "6679090862157901854182740031", "4518295011718123825921351725", "9400861600343414426720314679", "7614664640203237598942834887", "3442336794047069314084008283", "6626182625401685602563061493", "4117001610890463523186562860", "1295818738912019357700210866", "2643062765548603186111001053", "3519806302591140512032666786", "8933417397129498072426741909", "5974987520281995005582924598", "6107695293266286490599167561", "2132043724255891619025097123", "0892015231705252931101325054", "7693772995618911456740187430", "9455314881192854947012088618", "6526683136627956254840506394", "1772344104647301218054630890", "7213691845268642592915721010", "6299920281366104988138549002", "3334055947177323935323139180"};
    vector<string> p1 = {"0311564124685377050401866019", "6001464530245833660385548824", "4307390456831156651919169913", "7160351092057862079835948075", "9682050087118334340749944650", "4579404081010923888232428512", "9799240830231652676154999252", "2057936007182338693870587196", "1315610302594225588349838108", "8177438190244495120698424529", "3391430193091415886698657611", "0840391634604626789477038115", "0782768997170354718306365290", "3018289685477048476067000756", "2975276327287903489558154086", "2539938456188020872130287015", "5233487590447278027006449768", "4999632902652818603547468012", "1801493458878134520730186842", "8632733184442221354090863893", "4099854358868424668701640647", "2587187094529527561950094150", "4451601510441915067015032031", "5775112492546792003509402226", "4215984797956413202414980605", "9275816517008714657997350074", "1346485166829749531198888801", "5000146707225127093049368160"};
    vector<string> p2 = {"0914275398978942103394456141", "9022536265994783598830361938", "7402837300946437037307300548", "9310717012943157093716578409", "4834078641563879395296588335", "2973305884661039517466997665", "6211400094874252555529277086", "7434275051662269884042714833", "6522487801446704120001727918", "5039683020100266166570882956", "6686389469076116335061848126", "3130910578601451282137654740", "7726051263430229386636849827", "4114886403659019234384957753", "6355766356919407638773102819", "5869706293130940109964942372", "7566344216046371036757863359", "5099945792233849607673378256", "5837546730412655030910789036", "0546241907593834001052453443", "6682658483795554859407954391", "9674233618578858305900284909", "5507464180651609506356004624", "2361823780210475547699204404", "0887015399790931979723610463", "8264542475906995988205170063", "1014060417854566276766896302", "5399612128381096445382989760"};
    int stepsPerSecond = 11;
    int timeLimit = 287037387;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "1500471993918";
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    vector<string> p0 = {"041732375493075083738011192074690", "806609376216188037327650891559457", "010024788040840225611321457961464", "866045636236650806031455144971511", "195705857116624806422995345070484", "533120805184334618069934385211076", "609002051017565965564000972285171", "381328603250809456227328042193026", "831149660566782565758950373523704", "317913581035150007508132869328383", "552809632107047212303844657832897", "337533975670930275413071562180084", "359810666571071926278914735737772", "391499286194408820811958428715730", "666770541508500060191805083152768", "327333968945171048159331183602405", "778207008762496402335658607621698", "402693902526602950862350527955061", "088237254632663140059764155605228", "120612258776339935800343099052435", "651775475438728098240354267981450", "997862518025507689136076267384003", "972819990165333444724307030072022", "062361585158782150695310854776016", "632257220707631357200515098468645", "189652081159682154172441309937408", "207047878574697369183798610257249", "411001899555438241099287323004711", "031061156723235648750533983605477", "909821300852110797315644690350905", "095408406049347420598134067559025", "871186368863437854755195780275007", "230296996520019756209378103053990"};
    vector<string> p1 = {"080288194844055914133412715780878", "809882822294743086640769016835515", "720410864723486442871461759226495", "659084523979734452169996609875043", "533108778467801532424500611583938", "362330930510625171537733168919502", "146731078276549484754205106291445", "822131206803407266928979164198547", "980292890534526386697509342339728", "620771726019992970878981504894292", "519448611502191020701536707869786", "190506813040545764972439408027088", "096276319883055996810135417608410", "592355645490100278392666944240346", "281759413536650561487349781316778", "707293349707473053256845978057934", "129082671866511803854223115606157", "449285123908036620306658926980676", "268111542542028260094793174971833", "436563180531833644203375116045409", "987628426936394736270570662116308", "194300880143002486334059072365549", "582700504156172145402502005672067", "094011172645666240268660834554254", "315638454832694228904707027561036", "183667427755618009046240009731204", "231825214982183375768360450357309", "839202543466299259852457002076494", "789724380043147635359841191703033", "022396198549118461282813722340565", "008981868360666578317446969347084", "883893588385940855041620524914301", "380215220279797449076281642085110"};
    vector<string> p2 = {"051688808179089648824207949946281", "606266277269057565728709310902738", "350708490010805464863878278215521", "193093415513699458298970854930363", "294503531889785387488118959273805", "943490658467412486380469163993162", "618774074070215280306997748870798", "875835206240314317577476075772852", "830384920917061436123015863701321", "835894288091425918261319146381591", "049013093105584878483894479295407", "029150203780226103941005700874144", "368060398112092223853133131092657", "258863064183602613354607119245810", "518340104140420195834825218688983", "397998030656897057098450538339462", "354464880560435205529246721015860", "405263280885359820194751961240046", "298842850625413642011942764187849", "940668387531889222301758512582981", "509384359687601824910996131152199", "104057765861879020232004546369481", "423100878698309713153700755659666", "099017025909196449987270275793574", "666846097009293683455402019355091", "751321492506642479043286102182021", "834259396452096988312184510204412", "086579655395274167481448698023245", "000918473328071865992580482000852", "881987822125033604822646666940414", "256044475625974042460928717251069", "821276944326168702323701003711601", "683565908181968193341451609727880"};
    int stepsPerSecond = 78;
    int timeLimit = 720140434;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "26891844156620";
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    vector<string> p0 = {"03846784093912246504784858758", "50130988885978082250074961739", "61081234332217397379740726607", "53702473807242671969468100947", "74430037400530794565454815137", "08404013440172624538096640477", "51589108543015107924654660231", "80051730213856083381207871642", "09589533059562531544027454226", "08807389004273957518255374729", "27725555030429802772282737012", "95312060717096316130832317056", "28815350310202710056309133650", "82722769119620116828095506959", "52266980640959089197136433959", "82065221302074104394483849274", "34526601025449610378694397339", "70306143746981332096596480978", "43915432505461453700798305985", "07542658180605376720164172479", "57557299967047854143006670764", "34481138348407475549808496188", "84220622982322750425180696102", "20027467391274598568185026414", "54894031509892268077545604383", "71745650683302397675672310097", "59020086638431046353130703023", "51000343321179702960325656607", "18060282527068339154024540210"};
    vector<string> p1 = {"06087805025509225368293895371", "50121100927252771998476761769", "05005638750887051724932310272", "05102010660541420692638761091", "59570461701362125765359188871", "16485005086980474599264834924", "89517909394582484858679054880", "02401910100406100705785355401", "40143546067767385406311198663", "28478531200809797174700133422", "00738226970049069758832853988", "32052000248032893062810865610", "59801185185505689602767597564", "29491322400500525304027784403", "96817218733153085001435452168", "76264081410265501868889217899", "17885251452884240907965847284", "19528513784138215047446623490", "69698246959755003203890558181", "79458056494465130330568650328", "60931309657061626978030698268", "78831884384141223071004235845", "20690443428002165590660460697", "63585195731251455540131079559", "34999494581414885250891102403", "15349250844347952859020020316", "91008567919775213187136476049", "18809008787619584919296445802", "32352352382261082587606915360"};
    vector<string> p2 = {"00303538876224652952233193786", "40324620480456892467529954067", "05044881731111580372961681655", "61508815918649952454959810493", "26110969096924773648224173184", "79907001682879723699459873967", "26305202435317116132741410213", "47264580102637965293345308720", "95634828062265014199395752061", "90187941808262447674765270953", "11623930990197551911785460741", "89622247377028035607718515185", "04695437894207367503302142859", "13427312761650704262867391635", "48462881116199094999153140531", "16686068062490508944833206348", "09947744904086470617851807023", "67488526380484483005914986883", "83842250076368963605662709785", "79052824376365843730658422441", "14885859995262757790062922567", "90026902983879263910800255177", "93685711835719610073200302757", "14707384298055884696889008413", "28033952339757802809405400751", "38456601654195862886687200371", "24452030632418723887663561077", "66000654685247957670477152601", "35014214899474933800692161430"};
    int stepsPerSecond = 34;
    int timeLimit = 271390303;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "4299907960629";
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    vector<string> p0 = {"097701248037723668660262543908177160284219181", "606744648484013027918632675786703599176034648", "960086162590460547595696458714396094831202260", "214028695771260524586656188100025187048715851", "816406424986769999363253632080520687449160756", "877800312861301206425411812411292990923231561", "603467010931077319438358882317125259021136435", "186359308618451743917637140424078043556620485", "862373040677201643444079545942010853593172822", "289525925010161701809457508459691586968219427", "718990058702887373380360164470857958179658166", "013363620630828626196887775378148274910138410", "472101901880051842226965266541967680909919725", "021243952680305764333242451779149354705341354", "042576012259330846240909052667138575555679492", "779325515530908073371146614608747631888033353", "562991027818290106482011803456104723955323427", "320179472774030850024573227773957258164011953", "372804474896784081092803743882517537702442529", "481493603199497841801458674292508324570701617", "517125361350070420280463380596783854039843545", "369793759099240038315003892447112902839642554", "157532812294660592082209815432205770391445583", "308228170074737957436760602257281283576298135", "434021398178395233351900074265730080515498391", "463799220559977741771922608341477004116331053", "720437348586510857579983720894322628911618473", "673368159906395029281004165090248174977768724", "604196138191952298235624590409487628602103035", "759931200645869709473355585000078567081009657", "274589424999971979735655965943069014808269258", "987677155725586912835417263300301937801578845", "604935209584319323436418597572050264738853617", "900157611018993615353737514075765000396608807", "935208737022163032994943705685590303011613037", "787036177537885840865197450853544470930628996", "044674226112810677034927081801407084050912032", "468151690880600836007872965380548674703571400", "600991181820675793309166615875038049160736955", "834967970557727687087691466153856444143041810", "107179165090653311875248874287217946853607265", "098328092691643417797157803551072804825090535", "981260351149306836566704066130840166123430038", "097374932294055373986567901426327074699038403", "518367124714920303575532642949402439363955570"};
    vector<string> p1 = {"096009895559193242865216779644216846927472302", "902810484561467829289669045961900101342718876", "780992988890259060161196815125182991192171318", "214024258238589932851994835768052216843686454", "657805524465744545079457096050528299941407993", "558070793293353171385475981170115898789108445", "055303004255267980268365156463815580510138776", "675613605918402052407224626125991869995606548", "773235970963247696524115262249738680160858292", "963715356087400819307408226700921578823502344", "556606348306196127632342898813588046029702513", "157013269740875000802464671619062543877664341", "063245403060025317054484160905345097653784518", "241966305731004358730728465203585295870120430", "177962155991540389151202133439950841572242259", "687714157360623072080497320744450449780455151", "501729090922928308353770675338963173485394734", "929877374551286290581415380227589989972619342", "114182425153196874078467105208920283017488021", "109069917840490284400292586488892892603772476", "590357586955513415610608647561546661238227793", "149297457213999345902032714994847339405097339", "242803128590219693348409801994289727788166268", "374529103205325045938620673236111876388530696", "066415813072627430517267022320280044114557275", "479974178940175115132873202014061750423103834", "708959297952355872149113740604162143865857370", "030871485742404810027303108003806334260010454", "692703176427429002635253487404283212466320726", "916034508343319758291537181150595987422735368", "658150167658791441959603176624078279772671158", "072704212463332591318517774002803930194211874", "312327622792462783096207648745480663031289405", "022072954123712186974470628768282078019582819", "130922686684861666493414582765671809507395235", "071757883948797643572624463909508870367116706", "672339076510151368349377008978568993089066187", "802406091761950757356487583224124476009817446", "155940614500552993257129022967804318670104320", "941803694015236024060176188521737937299091063", "324676470151238446925219408506969548385302064", "550019281377683644439812788904561582420770053", "882426835174255420235081200205505759654382072", "947369932746768044293719454391517443636822602", "954316444560303441515271731068273606442820150"};
    vector<string> p2 = {"014177703176838818281009541582655374064574259", "204208039246651770243983539493087609422546323", "590354703631145275263250675259696843213778803", "622034978476448157235687816727873296705554219", "226905263051421699341420586220334726442840182", "263110756951935458727182520241264117284802195", "633637046564986410251654494616892149615381999", "550708906552699057100519864893700527506173543", "448350620152910849864131324150586190618053246", "232318041018569386347445625179533076458890648", "796530277905168174606490979097577652187958685", "592165724810192189057609670356123374122362693", "821957737896082365608349782329459971460758836", "062522679549809294983819618196478325561557977", "116506098179910175850006723414185262542645364", "471278209093336087651288824380944888563773609", "269126264157705709147924652318622233798361038", "008112016774927980943470575188690674894171012", "284390657815345314049187240080123088184762837", "481537767491799724204206143983467295762658565", "685027568194685923870236072569335388783486322", "491629545262630676306010464229743652179721460", "998651915981524490086209516952772650361732557", "714914798841658135390530970297994233672572281", "792247272761901620265824028152181024798437256", "484808556799726134368937909263749708783452362", "523186767256374678568547880434051282271065538", "476184869450493090238657054052767648488304009", "059153750230077265920090040504246750297811331", "026687009900515231838079970100540806609698896", "968598889778501556638418398489009884764772767", "972450045120124124024511190386207673173547050", "211483828052167940827146711418640190929439950", "721449610009435531942065108013297033221542566", "813353875428408752635179325781583802832508882", "081808371086245050181584745745164240629649422", "884487492361918589342014990933121781054399910", "215011551810729072400217946857971482505983090", "402157371540109708414452960461432769600677008", "297494758490024931470066045745896737133027220", "689093995878237905073546898842801920422902976", "457727473043241679680904344763300373032560698", "304020021294751387510542888479401823128269093", "428294319949844530749902106795338179731647604", "121428037270440595098896302970604767882710070"};
    int stepsPerSecond = 95;
    int timeLimit = 988816391;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "46013746741431";
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    vector<string> p0 = {"0573553618868564713301141441", "2003580855419295263836268573", "6209762010215056907623116854", "8030397383714738433223908429", "0244006967796069752516050443", "2053009961577548156021494299", "5558950527415793547574298537", "0671127014466228919483240869", "7144123505826284828820968202", "4985620250480064683385199386", "2386777359050498514904434063", "9047276045709166338189791164", "7611735574370885013846856846", "9526309692349079878391988563", "2600874604583903002182941331", "1006286284846410782002313739", "8842944592411827066936166610", "9850634028497731003390105821", "4026101194598568350365714925", "4098710323732183039088436107", "8125826617659124352905785851", "4812656138990677791140653434", "1112596961594695872751088864", "3297628090696967348826301361", "1407826708818899697342450600", "8569811614206387169248904014", "1061818991174724353381206209", "6832038331342450042509057390"};
    vector<string> p1 = {"0911891313617920457157894086", "5070463763804266180145072051", "4701328586853163809619643273", "6700038162211808134436699766", "1036080685602945027863506386", "3649906454633105599113019362", "0206580267804468990451562983", "0222245001327329787786921009", "4980904404894128050958648243", "6435145150759158563560555632", "6569322136064261376252500787", "5607283217602351997124741212", "2120600320860253400509211988", "0014528588713081929469449380", "7797018663531503583885743797", "6467158071940410356825115609", "0709455383190204044781466109", "8699870837565896903858438696", "4263034931114872670126534379", "1589906221714038715099232105", "7346606796340431936902044987", "3170025605476030273680927343", "7646975287769419232361082096", "9335299908426415576609805725", "1258301822932807468936700890", "3628865805100305785443347013", "7129412490090721953741295804", "1575489520781000002399666910"};
    vector<string> p2 = {"0551968834639059879991145053", "9013260378152517632529431645", "3600872190340275429392566711", "8970524503945079097751802369", "1523051003655071599610308798", "9460501206336814433702873925", "9947100416748671485048319706", "2108024073536330190538064095", "9977188908248513146477643649", "0785675610340286237563221985", "2623692471093429767382341885", "9967421792105156598667427873", "9515733675760618123794863725", "4248491964443091064099598976", "2609035075283802841149669710", "7074536659268900640024460346", "4194823478156292010495609145", "3992621033672680203964003775", "6012313776999278740976283885", "1549440603970782839070569207", "7882157093153473761105624682", "5225903118848275734200343006", "4946660170483597334008073009", "6012628296423471922975509856", "3882485640681223782004390384", "5623902342109387422792092064", "1258730030484716644508707002", "8483628613646887270037617400"};
    int stepsPerSecond = 8;
    int timeLimit = 36929744;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "142007175337";
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    vector<string> p0 = {"01170654", "60180928", "72051081", "55906439", "46150787", "63426022", "54126803", "86463540"};
    vector<string> p1 = {"08834659", "60592934", "55073185", "96908554", "81880122", "89444038", "58233106", "49138230"};
    vector<string> p2 = {"03071380", "40244180", "53081134", "64200636", "48970890", "19271072", "47211304", "46010210"};
    int stepsPerSecond = 47;
    int timeLimit = 840951317;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "13649200508839";
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    vector<string> p0 = {"006194", "202714", "440380", "331046", "602601", "295170"};
    vector<string> p1 = {"043375", "909782", "340893", "826008", "488606", "005530"};
    vector<string> p2 = {"041779", "208016", "340135", "627044", "782806", "808650"};
    int stepsPerSecond = 33;
    int timeLimit = 718078271;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "7393333878115";
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    vector<string> p0 = {"09073004730086805263", "20038138700989182286", "93071159403057187215", "11600252004065558829", "23230096960211691855", "05123087185378813921", "08122200158830542151", "23771780227539561902", "35230597090214703871", "31006972309274917068", "78019689070832164753", "18437849647043554613", "53259665050506101886", "96271648011380754612", "13839649859666083940", "95120996379883804448", "54540229715702030304", "15203253610764237065", "86735966418923149300", "20329093560068995970"};
    vector<string> p1 = {"01381405576198323244", "50927287193276858285", "85011614868303243420", "82300108801651364998", "06630817344752904023", "92679093534514397127", "47124503696947304319", "04477800882158082636", "24239171070370938718", "71288106506111654763", "06353656640941392122", "07131418087041376851", "61778107341704807149", "05979008784040501514", "26853464178275044466", "35498068221667402288", "61776522178824230239", "07335001421414180082", "40138372617836161306", "47053107125477527910"};
    vector<string> p2 = {"00729756919494491711", "60262851479589420278", "38007941871117671443", "81203138352245044108", "97910889723172417747", "21947066117397300389", "32449801060653857514", "94343070321434880863", "84470957082021588085", "63826406708309966971", "86590948760722234875", "54507495013039990904", "87371594294906048790", "51187296388980525606", "32671477378320062781", "53933007569491008446", "29302528919082110711", "79063105049689113085", "27737550952221286600", "18524517677414143610"};
    int stepsPerSecond = 44;
    int timeLimit = 505894488;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "10248208180004";
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    vector<string> p0 = {"0700841601788044332006", "1069798955525632994075", "9901325737464343330903", "6860877386895928613471", "8373060453721501451150", "6546105173556292530824", "1764120547534998535081", "8202752077616357712665", "1869516501734953601362", "9199803590087892257352", "9673596860009910047945", "8460637081107062022824", "7459696753520158540552", "2586539573519047034861", "0868501073553100608463", "7777701795791840494149", "6739657012989680005155", "0634240682455510403463", "4614810967950574550470", "9473528983545048235094", "0199757149296748857300", "3828743458667754489510"};
    vector<string> p1 = {"0820408194334633287865", "4063229035137479409844", "3209647626194636632375", "2130175261813790754595", "9587032969582029747938", "2284905944452355562632", "0549390924766718522960", "3959613045540263357746", "5473996007849335682138", "4749017760330261341045", "9707609767033434521156", "3954218263205611601294", "8372195462850947022884", "4657478985724095449289", "0749061847404205126273", "6221880070264260237913", "1758104377991090022744", "5064321254522432806187", "3972924869477009140679", "9154541740038452938009", "7997123725630196480400", "6441656758479484956620"};
    vector<string> p2 = {"0975051885862570057834", "5058399856265972070888", "0505053036481430547164", "6830982162087713038999", "0343088225883393612030", "8033106325220771523203", "7431060501701134976511", "7000823005909431083354", "6891889502222530783275", "3184368610430560475829", "0743638123044319918253", "4294881601909546029375", "7068176349090067184395", "3691712007906093368078", "9058352669128401961142", "3026505793810740511112", "6977151215817499016975", "2747558862481297503801", "2083991066362218090646", "4605559572970272498024", "6569589157837584651905", "9178337464212281316090"};
    int stepsPerSecond = 70;
    int timeLimit = 421406478;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "14056013073343";
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    vector<string> p0 = {"091142211", "409192150", "580370103", "385047218", "535907633", "745050022", "060272072", "127068901", "341126400"};
    vector<string> p1 = {"001282402", "002705428", "790838971", "504086188", "226606719", "989620149", "155142040", "218028804", "053644550"};
    vector<string> p2 = {"026248861", "301485889", "980938908", "436007461", "085008332", "670160007", "011813087", "668526605", "417271630"};
    int stepsPerSecond = 99;
    int timeLimit = 310563209;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "12590387774457";
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    vector<string> p0 = {"0687401704003893319985260976355025", "9088278691270501710238235180804594", "3403422541723094210065593875446900", "2430717889480012010591070514224470", "7417041882115518577696850292959955", "3404200851305454133010069257442996", "1602460506244677091097224980170796", "9325022038698597827541159288477060", "2217647205595589453570618455271415", "7813859570605542011092049786048628", "9767624441091314534938908512394482", "0504151262808651245057838169708135", "2997013411360553088961090972987527", "6197541897340052151470669960632594", "5811910774949201078255241436805453", "5839826532684670282927262852390970", "2816461829206709063891278630629967", "0436510542312497408968933917803709", "0842018459710469540957461153646556", "9791738601877722891026433897644263", "3907989076061252590003304381727368", "3372299195210490515030151255181916", "8598427241400473106379072492806491", "5987603744913223071155606846607766", "5355722343687215522200240887683436", "9154388878599262682619516039173796", "5313390161399758141292822101790365", "6987223354322336467661082790325886", "9581148590945781460590861396037445", "3569330534304470621628779516005353", "9685660092459624806804777594940702", "8584503048932335215684334740753052", "1902408493956477137583977042317602", "7067138423380095045363089531413120"};
    vector<string> p1 = {"0285781924747827470022829353504924", "4093507093775445649851008359843485", "7605687056710297294594630534875553", "1310038639750499071434407104861197", "2900073141302201376916847325654393", "6901207459702059772357201777326808", "1228600952369256702452721486366370", "5797749022979540985479527176003271", "1508622709255443983067094696925252", "4397688830428938254954515137753128", "0949944562071197714186701698100031", "6431889353607030458240529442667823", "1531569826080663499561607093976201", "6384267865650034100283094303133518", "5512410185111203471970321666139984", "0212322065408070916249527130248671", "7162388848848754091563298413300493", "2160965061037458201461212542702225", "8476172398035076440995449841263879", "5514063068586350345090676725202179", "4310618667204458168705567087426589", "7958947869236042127600589443191060", "8722600533158562242923046678076275", "4115268795742196681949801781628172", "3241233719148809123025020864871025", "6670973887980892304006880075490966", "9878156065064206828616904301447037", "7104013739381064835527978510877560", "6009572530637032706613766533009482", "6776049212137338119488131663006776", "4361402827552396534360638156820257", "0631013970429095641636642356524060", "7701218452472948221118343917577506", "7600656815229144455209702452100080"};
    vector<string> p2 = {"0114895947140707359367583105315248", "8027312348518265201171404147981765", "5208952705752294501662088798066738", "5250996583702174440660669466149114", "7155084856084420616772841677888271", "7293006024689650449943010711738923", "0837080368243489496997280383377695", "2852230067618577369287235794556294", "0163233006153019930965634102731355", "0895191460457541559122555948173893", "7476712160093340272657141179658025", "7828347532809207564408616781584074", "5771424825340483843904572852479927", "8333925552155029812461746994108002", "3337104321041805543619338960961196", "5977329525822370590545551657989558", "3317282086213836059105382070956909", "1731930683166718103344761786578686", "0275253771464290730462730417478070", "0545014473812008460022283920750955", "3077514028228095217409063238253704", "7710412257086707478630198013514903", "2075391229891760525836087940550100", "8530854953329574189786804660672979", "2980397720889417686280140293683632", "6565258458429389127434637053016571", "3468405267325238073668312604831265", "0622149181604624080043227370073579", "7924034126889409415957684659034034", "3766180989821084570558116160109668", "3513513617815274441352988120880833", "0613974656305949096485427407333051", "4821289039525645385027979622195509", "7735840714408936551448422843492180"};
    int stepsPerSecond = 46;
    int timeLimit = 744426370;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "16505421475531";
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    vector<string> p0 = {"01953405418185239271657999139826", "00335950490775106399157066395133", "37090662252939055555602880305531", "02003965140379527192916008305056", "38860971211503120444552550975154", "43202014425220570916468240338402", "93617005423673346272853015373877", "91620680403278734909864079443442", "55877674070849605704580880445087", "55843429304705301107898890235224", "97242781020908401738848638983308", "30092976217049172121969518693021", "52446512921404316639511221934158", "67406910952510780331842283130298", "88406337499126094926988164304712", "81688125834952900136226380804838", "65643880816798890127343646770501", "37772762598588379056212168030753", "03197870670159450201335615648321", "35222304997248818050360978746067", "51205722819077895149076064800060", "69285107938105112273104488401471", "28505624772809112497750173786479", "65491235110119341939602046222612", "26837175485614958017611207360972", "44273368065670738747550030465569", "12195576743313043902683619036615", "83890568202547781815590121608875", "80571151363901804719222343040191", "90783844100221347088400954115013", "71056090112633900189581655873900", "22278290503168261542243909794890"};
    vector<string> p1 = {"06015054007543481547963273362943", "50661617724489060709693988453496", "16054262106886878670285373028437", "71202604912710681481686271210857", "58990493628368169740658820240017", "79876092220789140813661403645854", "87273201762663923058610145981065", "03078280502367381341971219420605", "63553930098375668120313752172990", "52705965006081960082515368652644", "18245320380311273275891371955590", "90455778271048334719722095041763", "66911801072408782513238543716479", "15048850944340238742190845572063", "31471243318750024978280145619875", "10112555985845000690980047869734", "06718295371138430553435683664318", "47775963364694059060516311075515", "18296359815539781508694207202919", "19107576513043024520247476879800", "91219987491734770204099165956757", "88197207698554246740605121379248", "12922129047593039709350378640008", "32066305544157316238703041101101", "54131536003370889019742105536637", "30161829042615426735499840430270", "69340181344961687334933779010102", "99561862118379978222177176407061", "17878642973264133575955041610124", "39229881954211364161016058681004", "69618691556789353434443613416405", "35343954622611986513176989517980"};
    vector<string> p2 = {"02616924586067355028335145298906", "20690714321580868006564609008004", "47044471914606584583347976076273", "66902365489108802505854021019402", "09140200801109924721596539768371", "56400042043265309030848507568831", "41561208463658159480250958418359", "98652830656427576988339389797268", "37489335002129615896125626643823", "49748285402681508594841567122155", "74525722440127845362325803137583", "24841764305087525809324239587082", "54096982509308475486720172759951", "40366448949240321707640822593656", "15173513772127033453003027530286", "55728453325564802865160107937345", "09420093431905940651911238177612", "62802818259376312004325655942676", "40472480931200532609804479343111", "61736218170390154940299880226367", "17565704076388634589069771997575", "87052976964442387088709562770257", "22994063927572071179080460332589", "80077060189973964035032064528320", "33022184293169335381625408266596", "84936012427896142425262740433241", "08056278796504648293577242077440", "62121311029734592008785129801541", "27260871011867569789465506610203", "49721593826695376156743369181033", "73294009837622999267000579673902", "04401602430074265632652344137350"};
    int stepsPerSecond = 30;
    int timeLimit = 709210048;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "10393473253259";
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    vector<string> p0 = {"0900235", "7057519", "1708616", "4600021", "4941004", "5046409", "3160680"};
    vector<string> p1 = {"0207080", "6046658", "0109420", "0820768", "6993098", "3300300", "0259000"};
    vector<string> p2 = {"0901175", "1095561", "3302484", "4170433", "5550047", "2405507", "2868530"};
    int stepsPerSecond = 52;
    int timeLimit = 590922991;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "11072321056766";
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    vector<string> p0 = {"06460997522", "00792476873", "56065260770", "73605374358", "55670004801", "27782014213", "40926202277", "15472690859", "97687013044", "60552306509", "36683844810"};
    vector<string> p1 = {"05983773107", "50972625881", "84074435073", "25302820232", "11110303983", "28793034044", "56908705010", "33164760987", "20521056021", "08710885800", "61590188060"};
    vector<string> p2 = {"05483803686", "70065183143", "32058379259", "03609641909", "78150524050", "59407079915", "02863403453", "55380020427", "48680680059", "77374837408", "29589601230"};
    int stepsPerSecond = 80;
    int timeLimit = 283046860;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "9023533896756";
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test67() {
    vector<string> p0 = {"07733730928494323735985866", "00999828752714654058391349", "23060122033052036760335585", "10904486968191324608654335", "86250776760368337648984583", "35768046582288161459906546", "72143608854723405885956506", "52226190024302458371788786", "65237889033542888180551034", "93361929308646691334132535", "28631026590063901540331787", "03056784318053434698591151", "60530243499109660626250960", "48273546096550295336997735", "00797835230778006752969297", "49414135924961101308226970", "06145906541778800478509827", "25514630788684227010790180", "80994819356186166907139041", "85315305212221897980626225", "55582889295512024278006726", "54508076758639856561501788", "50652307827003073613660914", "07507357020539576570755038", "81605024821100320071550302", "20976767582606439730372350"};
    vector<string> p1 = {"06106640667455413876539604", "80511187285855614360773541", "29009267700889296241156418", "19308551772941862763150413", "58110292332805777631595488", "55817046757971206101099732", "44782505867705475448664986", "08791150585030819735112770", "64752570048353138181100037", "36914270904262500056104485", "78874512740811827381884050", "45603284270070264177995296", "29034291995307155147312409", "62601533787070916646793830", "16287461264717079578687243", "13698825124785905196968658", "25569874682509830353068257", "31796531190984869038813487", "64702433342975088106494343", "47885542354989333220941759", "17673111998552806918026148", "08196315988091900652408169", "18725753961278377380200296", "55481592237902074462761006", "45764311915427684508872206", "70400047713245182501307110"};
    vector<string> p2 = {"05900187329636327753463646", "90766871701180410066485330", "72045606382483387487199157", "76202951396912516992299988", "07830551103257865778406508", "09797069744415711168923913", "32294001580561425853776856", "08991540575176776259895650", "52637237034109876073961341", "13890842609283139440317500", "49193408410925304709149589", "01654813008062613758165064", "12570774358406369121937717", "07205940410100677636995018", "07598597714854038769358084", "17141040758247207103851542", "01120549782942810217954377", "35989300452214196005188315", "58906931032332887009130937", "03747295413344378620163082", "11506430277682096332062154", "41762273990522719493600105", "68795459111506496040950957", "52964522418867070596295025", "53079923987631049938928602", "50322878049262379900962810"};
    int stepsPerSecond = 3;
    int timeLimit = 313739950;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "440255584776";
    if(result == expected) {
        cout << "Test Case 67: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 67: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test68() {
    vector<string> p0 = {"0188883231913", "6005448139359", "2907329957737", "0500363945699", "7246080501533", "4383203258587", "8916600535093", "2533289081734", "1591098101077", "2429612080742", "6309233314073", "6549736200306", "3692536387320"};
    vector<string> p1 = {"0288355712300", "7084987715651", "1206919438273", "7460978168778", "5512019531244", "1871206610410", "2480260093214", "1794968026769", "4206738100742", "5430646930634", "4370151574016", "9209143606807", "3486221650980"};
    vector<string> p2 = {"0503447149150", "7098756682575", "9801680553899", "7230651820807", "6889035443713", "0683609242827", "9321140882678", "1326051001150", "1865682701685", "0633521670559", "1624874150063", "1024709794004", "6325175247640"};
    int stepsPerSecond = 35;
    int timeLimit = 755911284;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "12752223360932";
    if(result == expected) {
        cout << "Test Case 68: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 68: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test69() {
    vector<string> p0 = {"0900235", "7057519", "1708616", "4600021", "4941004", "5046409", "3160680"};
    vector<string> p1 = {"0900235", "7057519", "1708616", "4600021", "4941004", "5046409", "3160680"};
    vector<string> p2 = {"0900235", "7057519", "1708616", "4600021", "4941004", "5046409", "3160680"};
    int stepsPerSecond = 99;
    int timeLimit = 1;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "43629";
    if(result == expected) {
        cout << "Test Case 69: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 69: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test70() {
    vector<string> p0 = {"04214110401010422141422230443240131044", "30314134023114203440134344223444241301", "42032023024134223313211100143124140022", "42103002341101332134433104414403340302", "13140130124423403023414033430202000113", "14223003221421001131231403200333223430", "40212104212023221431131142310040424211", "40411320313440041430220432424132241422", "30310432002142130012441343032124434300", "34003134400112321311323244343113031212", "22223021230404040444200120301031003200", "44240442411002102440211442412422331033", "43204422421102320020104042120133212421", "30301442322040013102403033413334104440", "01420112423244024423033334214101330304", "42331032442144102302033334132431101132", "41310004132324100414341224001230343410", "21420242141234424033134021432002431101", "02441302223100420300122242320043042001", "24043313030342231100403401244412104003", "30321333111240022004011043110323123301", "30221214203402222320402332430034343000", "11434343232002230002330242030303122033", "12244044244403000443411044434424013423", "11003021024112000114001401120343111141", "40314403423030211324044030014222340411", "14230440203222324024331004042100422021", "44012331320310143140233034200144204344", "40211203343110143100321411130404304231", "23232042113410433324421111220021410330", "22402312321312003130010320423404210011", "13101431134024032322412301211320033224", "13314334333422331412141113110023030003", "31444311302211004332213201313312400130", "21440323423420130414422201114134240343", "12400003230344234440220321224102310011", "01033303004111303134301123203013144402", "14330402022102223343214202043211310430"};
    vector<string> p1 = {"02334010434444312242111230321031414431", "10310401224133042432420002433011313413", "20023402424003443140321302240321223111", "02304202442030321243131102302433413003", "44220222013413211343441041000233243110", "32233003110420313412132032400013002044", "12013003212341103302303043142301443233", "12200310331113113203320341340223040014", "31412001040314304103113403441222031424", "13013101202040100003211403102041303034", "20312213230144020424241044342023342414", "32413003314022323314403441440400441021", "32113432332104332020411341434030024130", "12344100420140400013142140344421044100", "10102204221312000110401442133040311141", "33301433144414003042303343222013313322", "23032043240344320242124132421040441221", "32003342211333031012333344440133100133", "02234124120243203204231011211324114400", "31302322021430211020323314123100414204", "13401131044114013124003223414113210421", "21110240220041324033302121031434110410", "03443000001234100332340133441011010402", "12213044321303121020430021214313401133", "04340100421441101030123401214014102200", "20413114232412112240430040313130014240", "01400410242134032320123121024344021020", "34432011123111241332322444100402001341", "12431204410010044404220440120300232014", "20132304314230100011231403224004300203", "41120002123331032031432020224402310230", "21341142221432014232221142444340414040", "03444324133332004441300311402012030331", "12212200021444241133230314322103004201", "42113022023303203222110410204233420244", "43433432210430040222442120214314122042", "33411041103320432020444200320440001101", "02420412340012403121101211242304211200"};
    vector<string> p2 = {"02203404112144201323124001432224411403", "40143034201341110241140134000203144144", "03043304021234024100402132421230211302", "42101142334204314411030232141413101212", "42000420201312014442213223004213330442", "13321041311220033411412342102211004431", "12444104402030414221140313110041132230", "14030000431412004033140211040340443010", "20441231040233043221043333441402233340", "11410410401034022311204433311101233132", "24311401100441322201012331324423334143", "20121100324000213014330410311414311234", "40244241022303240223234144232111130024", "41140442301030312203132210342341024424", "31403203300031013123441004024410421220", "23020134210144002422443003201442322133", "44224430110401030433334441244044432323", "22404003104402441033324410012432334044", "02221143231130041400104212241232430313", "22133410111210324440202100102420443224", "03331013343432113431040312201102100011", "10120312442324024141402240340023440110", "40133024243314203323400443300120122404", "21334113143112111221242012041010433421", "13423130423114004224331400240244043221", "23041303434300114011220130001423223314", "14340110424413303431140144030044304222", "03134212111042204301301044203300033020", "12123432343144112103403424400430304203", "14123412042440041110011031324032203434", "22014102113240423100404021010000422040", "23133023143313414140322343343440023003", "40203222103014303222212100330040021203", "44123134014433141411223410143124303132", "22203332140003421302442211220044230413", "40430433334333232141433442443222210022", "00231022224432020432032204421314042204", "11402040030110242404442201311214000200"};
    int stepsPerSecond = 77;
    int timeLimit = 3;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-4418";
    if(result == expected) {
        cout << "Test Case 70: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 70: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test71() {
    vector<string> p0 = {"04030002402013300102220440", "10222143123302001034332044", "43013011203311202204221302", "31400202212244442021433134", "13240304110324101300013241", "14444030231331413332113131", "14130201111113340143313312", "44202340244433141434241114", "42420130040244141324140044", "20101213200103114010201240", "30031222000321412042301314", "23040340322022422423332320", "30321212032302432114231201", "21410440434220140324201130", "02344022403040040432224243", "02030234101323202343430024", "01323442124334130242031424", "01020423001440040002422334", "32041112344030033403414411", "00031433134414320310034144", "02340111142242043014033034", "23104201111424133002104110", "04122222041302130032330043", "00311032331123114433240032", "23002404432434312102243404", "33341012114234113203232310"};
    vector<string> p1 = {"00300444203101333423000432", "20001433434300003124434403", "41003442111204130400023300", "03104010111200421323023134", "32420212233340111434020313", "31421000342111011302030444", "11040000112212012343400224", "41400410311331403332444200", "12210101021332110021141021", "14034224403420201004124313", "20122201000322242113031012", "33444211003030032322214304", "03104004440102124224424441", "13013213030000400234024240", "31423031314042022223440334", "30030113011314103332302240", "34212122404033210103133110", "13443442114033403010332112", "21010223231330041204031013", "31012241401244433210342033", "21424221030441412312024042", "04424241310203444130202303", "22443142022430422123330244", "21121440333133322222341042", "44233114232302331434223100", "04431100131212020044422010"};
    vector<string> p2 = {"03031333004134344123442141", "20030313322120324430022142", "20043201403243230123422100", "12204444402320340004331114", "03410344234143312130122203", "23031040402411242002012414", "04144001421132241202120324", "11102000340413432214420334", "12124132043020310321423134", "03113020401104412433240231", "10121204330212224043403341", "30301241034033033211132220", "30321121222403142022131044", "40134314400020222130234022", "32302214043333020000244134", "03400300112021004134431031", "42020233301111440043314440", "12232020100001304043232243", "20431041223223021004234343", "04243210212213101020011330", "04003000410441103013014431", "14340314014234242103401344", "12322042004323402114000331", "14410342412424430423042040", "31310144002041433004104102", "21222404241332014101234340"};
    int stepsPerSecond = 15;
    int timeLimit = 10;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-921";
    if(result == expected) {
        cout << "Test Case 71: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 71: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test72() {
    vector<string> p0 = {"03", "20"};
    vector<string> p1 = {"04", "30"};
    vector<string> p2 = {"01", "30"};
    int stepsPerSecond = 68;
    int timeLimit = 9;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "IMPOSSIBLE";
    if(result == expected) {
        cout << "Test Case 72: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 72: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test73() {
    vector<string> p0 = {"044", "003", "000"};
    vector<string> p1 = {"023", "103", "240"};
    vector<string> p2 = {"003", "101", "040"};
    int stepsPerSecond = 48;
    int timeLimit = 2;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-11562";
    if(result == expected) {
        cout << "Test Case 73: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 73: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test74() {
    vector<string> p0 = {"034024301401321420", "200014121222430243", "210142040414314210", "013024241144042423", "444002023332214222", "214100234041411022", "112342032441441100", "423213304441023101", "103140220113244314", "304143320023121421", "033314143200214210", "324124003310224013", "042133110224033224", "140143123423200014", "312424103103440101", "402142030432000012", "014312032143103304", "431113220221011100"};
    vector<string> p1 = {"014012241114113242", "303002141444210300", "030441022343000002", "043010210142044243", "331100420040000313", "423240413132320223", "003200013033023043", "403131100032231231", "131433010420133033", "330132224000333134", "020231402401424001", "103004024310042312", "213222134141033411", "033004112012300441", "313014310310120242", "202031213022031031", "303333140332432102", "203231200431321000"};
    vector<string> p2 = {"040011311004423441", "104430033332002100", "430304031024433024", "024003000200320303", "323303004104334420", "100230223123423413", "014212030131002332", "012340004442012041", "001332110433213320", "330021443022120141", "140214212404031023", "041110403320441011", "423130202112032243", "020443422104203341", "241410002021220243", "341031100331423000", "421040234403133202", "300122100220300210"};
    int stepsPerSecond = 31;
    int timeLimit = 4;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-1949";
    if(result == expected) {
        cout << "Test Case 74: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 74: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test75() {
    vector<string> p0 = {"0412410024414131302010010034", "1032403211413321334110313011", "2100140010331044003231112341", "3220241232433243013213003244", "1402034204344002143424243210", "0041401214101202134144431132", "1001110322410001121014443004", "1120421010410101101231104043", "1030324401124210242002402212", "1344142120103340231022223230", "1014113234021332433411333000", "0410113000002314413303104204", "0003341322220424222314304231", "3133310341424041333020234111", "3011440431132203434324122440", "0333344104312420234203132114", "0202202003023101002320000330", "2121143041341110002312022222", "0220444204213344020322201220", "4223240401422040001040344340", "1141210204401113014201432134", "1333412231221311444440011321", "3402232203143240423243020243", "1312302043410224223213200402", "1020121303322130304221310433", "0414033042144123001031230001", "3214200303434143133433142403", "2230001141103141203311134410"};
    vector<string> p1 = {"0032001402133112300233213144", "1013214144332210242124242221", "0000411400034014400432344234", "2230320331203401320410133330", "3334001430431221013343304424", "4004003013123333401222334114", "2012040211010042031343443221", "3342001042230302303301113402", "4442242201431104300042140201", "2134130320424112424330001310", "0401314344030202134423301032", "1331343132003323343301213221", "4243443220330000332341424210", "3344420234323030130331110402", "3331330234402000033011341423", "1200200033321230423421344144", "0310100103103003033120024320", "0004032200032302302310303002", "4014014140112310010242443023", "3202333301442401334010134334", "3014011244242041303401332310", "2103222323414431140440220300", "0023400343020324432013020404", "4010314304331303132000400100", "3402423424302412043103320342", "1221133322410010213233010030", "0412031314124010034312130100", "2234220140424001414232110330"};
    vector<string> p2 = {"0004043432303034420001343131", "3041142203112312410314034413", "4402123402304212444302140013", "0010001430223233304140241402", "2300033400203422210002111431", "2431101141402144131410130401", "2410320141202122031401212241", "2030041022131233142041333401", "4020200300412321114440241021", "0433330010001212012320410401", "2213201000030302433134033124", "3324040342101234410120113013", "0400434403100213402000210231", "2040142332242003204314034213", "2313330344144001134421004122", "1031244322324400301211123421", "3430201300204131004244033110", "4002341033133303203344230433", "2442014310113431310331240313", "3033424420303414214011311400", "4344342314203434242404030111", "0220124211112244104200441304", "0333302140233004420333032322", "4240220031312030340430004032", "3310231420043324040221040404", "3042023013302402234401130020", "4303422131202243003244334401", "4034441034414131332332202300"};
    int stepsPerSecond = 78;
    int timeLimit = 10;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-4587";
    if(result == expected) {
        cout << "Test Case 75: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 75: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test76() {
    vector<string> p0 = {"044040132113334430413", "301223404244301232121", "420441303213001230424", "112032212333422432424", "222203111330420212102", "131420224314143341104", "233133042404032410403", "011112103332213311302", "344344440024201423203", "241141424004414300440", "312423122300041143014", "034444413110420311133", "133021104011032041002", "131031112403400014433", "424442312030310232301", "404021210211430040024", "224031421132342000143", "424002404312024000021", "100443224300011332003", "122341402130240324003", "204222021122041432420"};
    vector<string> p1 = {"030204213311042034203", "003004304011111120404", "120401433401403002214", "000041411320110121120", "232202241110133044202", "114230211144341213224", "002303024243304202023", "413420202423442440334", "334031300220333420210", "411331411020120203220", "421220132403301304211", "122441423200211143423", "321032134211010222102", "020233333013400142241", "104011200420140410200", "433334303242002032102", "124244143143441001124", "113120114100044100004", "312330042200143014010", "232222402141031331402", "312100141413243014000"};
    vector<string> p2 = {"001124424012131204110", "003132400000034023231", "100214113230033304304", "022031220101230323223", "043003302122341113034", "014030221411111144332", "220231003103412441421", "044101202114400143322", "323114030321130413230", "041044102044212301332", "213332421204110431003", "412330310300413241132", "041410422404002404434", "244343420320203140014", "143332031440030012044", "311213133020413020404", "001202344402021300310", "342423142404123340333", "332023443003122004024", "320143402232322231201", "420212043203114114300"};
    int stepsPerSecond = 54;
    int timeLimit = 3;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-3142";
    if(result == expected) {
        cout << "Test Case 76: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 76: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test77() {
    vector<string> p0 = {"03101410324300201342303331422414341", "10433422444111103033034121003024334", "12023133401104304013132312131413332", "31003004133132113420332130013042403", "22340112222132024023103414421044020", "43332020314103131332423041113133233", "00131402243324333403010123421104330", "14141120133234132122440043310212304", "43232024043240110032341303022141033", "12103230100100403241244331130330403", "43043402100113001210204331231332334", "23320103200042334230131010312311342", "22320333421203024300332414223040310", "23021014200040324432343221013041421", "21330130341240003003442122313302010", "02314302112314302144231112421101342", "41023333222240430321440031330132312", "04302022432332103002334334033042240", "23222200242311001004010240213420303", "23200114242244011130024232304314311", "33342232443104244203004313343121401", "04301004120134334324101321442114114", "24444114401202232110320131242122321", "41222140003332144430410044131102032", "43043143120231132344430204134331211", "32420013444343142044242200233214031", "31341312303412112021324303041304333", "04111434004131104140113142304212200", "03140114442241402010304144230143234", "13244331142241224323442421333034134", "02203343031000041100001131444303401", "41101402123121241040141041022100442", "10122442013432422220313303114000003", "20224200332311001030130414014242401", "14014401432100432232101133130011140"};
    vector<string> p1 = {"04031341221011232204332312341100133", "40341114101000204313141234014344343", "40010311123342323221420434343341214", "42101301344242413003414422210104120", "42200021430340010024101131231023141", "42001033243201400124402313404202142", "40222102233131400332213314231423030", "22314120323240344204023204334331201", "12330234030234431124431432311232302", "32412314303134210343341304031114430", "10042343400201311104123322131143444", "03403301034012231000332030323244221", "41122203020401241040232002244240103", "34214301213340331333303302214012422", "21024412202220002110134340320412342", "33140014300333100442432422134423221", "32204221004230320144014120311242131", "32303434334302213012133414403040033", "04433430032222044304020421131121213", "21411411203202310020443131224102412", "20101014034344030131011101203342244", "32413414400111014100201041004310331", "14323444100341444324000404441443031", "22023340101340334041302022212403240", "12102213221332320323012403113004140", "41421414242232132344203330302244321", "21030402332434334234114311002120300", "41140042132411412241020021002200111", "02344023101033200020243240340110104", "32120202000402402213103142303031304", "31130330313412320031123143022201000", "00301111123421102340440112404100120", "20401001124021013124313410033230024", "30432303340020101432012340043043200", "11030020012231313422234402110433040"};
    vector<string> p2 = {"01010222210344101342244200413324441", "20404111420034023432344322114212102", "23004221402102034443423034411130310", "40403422020301400340044132212304403", "22200242223120430421103042013214431", "13100004244322013344331142321432330", "33022404131304143442234022204002042", "03441200441032221422224443400140141", "01320341033314201422040143300441204", "41404332104132334322212032123304331", "32141404230424311220222302224200243", "10241121431002302042044433130423242", "11404040233200024034024322220213344", "13420103123020103342141412142111242", "42010341034112020312441240103010032", "31144123402430202220130233310022330", "04442004401420140214412424441042033", "42313330220014104024313032241204322", "23203400112241131304333024420302230", "43140312200404414210040422440342340", "21031303432314234100003210024314330", "11044444203104214043101440421223133", "23214132243224433044110312331441344", "43242030404304043404002003344130233", "12022444203444323342140000311011141", "33232133042412424011324400421214103", "14412101243234402243342102021044140", "43140400342214003342411421003413304", "02024311123323132341412144340404121", "43002302140434220310001300312024121", "34401203230122232210231210401302133", "24140020312002232413320421340130421", "32122432004431142412411223022230001", "24303312411010244300033222412144302", "21204212442341144144342004141140310"};
    int stepsPerSecond = 93;
    int timeLimit = 10;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-5523";
    if(result == expected) {
        cout << "Test Case 77: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 77: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test78() {
    vector<string> p0 = {"03100034100232241113044313040230312", "30132404231442220220330340323102110", "30004411320203020000013301100211231", "23403320123310331041444044020204403", "44200210021004040101440433112112022", "24331034330400201123201430200422242", "02011101213431324003130300334042214", "32041320143132132343343140304023311", "23411042044043031402242121341222104", "03440003004302424243014021240124101", "23301011330100043203221243013131014", "04031324021000320223412442223014021", "10134222440300000432144024004322434", "44312204024330432232221022340241144", "43312312343230000424113423321430013", "23432440122304201004030021004232433", "41303101202412020432021220422103231", "32230402134304301001341410033321314", "11033314110411441300113101143404231", "01032103331403004100232122243024204", "13333334232213111404042100130101201", "23403440121432441032004101214111322", "30342213122230213301330013101120144", "11142434210430403043141032202013104", "32113300232230240033402100333100421", "30433330231133232314132110413004010", "04431122023420234014200030010340301", "21011004424310344241302102002004434", "24423004310321143442014234420123324", "10410442313421010224411302042043323", "44201041113100320401210002433303421", "00312022122222120102102210344020111", "23300442312014114421301110442024000", "12114043200324410213123032004222404", "00404301120232110210243424143034140"};
    vector<string> p1 = {"04224002022241232213220340210140034", "10303343201143123344401121431423003", "11041002212330344200042420010123400", "22204431431323220034410020311433110", "02030201224120104111314142230312334", "30444014131212044300102304111142421", "11202303240231311430034312004120210", "40042100243022102104211423210242102", "32304031020303104322210043240010003", "00043311001000043300023431141244410", "30023033240424444110241304200230202", "44434243404034021234343214441404310", "30241340413102042000314431302432432", "44232110440110313100003100034433031", "10220232010103030133230431040321443", "31220233133404300332444034022432210", "41431230211230210432133100232044131", "14321233133144433031103111322403324", "03101331403033324100223041001340024", "01204302010132204440032200241440404", "11444401000202314201021042434000314", "22321121003414120032102311011402142", "40334434324141341014140002124231312", "40121110404210424131302021200012430", "42102233443140423203110101203403321", "02300021111001404024102340144113331", "41112443441301342244002420030431040", "31421133404341213232400224001121432", "30310044002212422042423034210320324", "12403113342414013401130010313022023", "02410210444403024202432203223403012", "44024410040212444123341244122040141", "33210401243304442044200142103023001", "00323011312010221141234334023043302", "01440422134320012243304322132420210"};
    vector<string> p2 = {"04411442334133324304212220433101024", "40141422022042021030223303024244320", "14024413220414414334402132043420014", "12000140111221310230014032424203343", "31410402300131013002131220423313342", "40024004232340042343113003041431011", "40344101222021330400221214300413031", "42412200211243211142001124034033212", "00104231024000342420041201434113310", "32241131203032104301004103021301231", "34212114230024342041204243041444204", "00014212212013330231141303302221324", "44331043443201023311211034412203444", "20431021244440202444120102013122303", "13414123331302044444244422121424303", "41210041013014402301300421313131240", "01044110344413400112034012440111223", "32414423313314431004413331114002144", "23322232214340311204422301304400403", "14212421311343244410240324441344142", "21342130240432421044040131130344203", "44141332341432124120103113100423034", "40022313242011331010120144232223123", "11321243320113340232121041432202311", "32021043223244443041200004032040342", "20340030224444431333100440134421441", "31112111003131234330241032002343132", "00033231032214021214021010101340040", "30411011232323202240402141240320221", "00123420413110131000143142311022141", "03223104441024320143200231120103010", "01100344033333022444221343133230342", "11220214344031423114202332143234000", "13444203232420031210112400301320302", "42121100000203013332400231203120310"};
    int stepsPerSecond = 58;
    int timeLimit = 2;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-3314";
    if(result == expected) {
        cout << "Test Case 78: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 78: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test79() {
    vector<string> p0 = {"043240423131134044442441041000424241", "003332103211322211143024020424334430", "110213341220032024232201412411214332", "432002432402112134120341103413432200", "413301014301414114020224020322143242", "310340213304401320240444322224110410", "401233044322131031441314332432303312", "243301303440421440200244032213042020", "203010210232301304301144024141023120", "222023203044404112202203334040344240", "424023133001224221404342212334431323", "134431100200204044133302123132310324", "232201231433034144412113134432101144", "113144120344200021324213211224232041", "432230320344130122324102341431342141", "011431422441143000340404332411323212", "023302230321322002300341400432034212", "414014242423120300402223210004201011", "113334033403420342013014313323404204", "141140432130232003103143023040033202", "123144003020022413210124201003242023", "430110341332411244111034331303040411", "220303124031443323211304441042102320", "324211332230232313402000102322143300", "213243240040324411141023030011033220", "324424324213040412410413202201121310", "021423224140224441233101210334211120", "002313423134341103312143234030102320", "222100443134134200302242422103142433", "134320133402101200321324130320331224", "100134110444413321014422302444032134", "040324210044224013202021142400302200", "424224413114313033322441411233440014", "323414224400440334240124404112014032", "240411030134443044211402042102431102", "424240201141300410102241210003040140"};
    vector<string> p1 = {"014120034331423221422104402124212324", "102422333220101023134322031100121013", "310333240200103412334303401331411110", "441011143444030433434142402223344203", "134102320221232023404121021134132223", "432120021343224210143014121413444433", "330432023410314414012442043102030041", "113424102202424241131013000120031312", "224024430300313330232233203023411303", "024004003004101130112123024202233443", "241241324403204022223212241143020104", "043432224320212114301214142040343242", "210410303014014133341214422021443214", "022020441001403123234124330032143020", "324200421330120401311231220222132041", "011444202214340043033202023020432142", "001243333000303103030430101032120434", "340420440244244240342304301022112011", "431440332021420132011244430302421302", "401241102420413042100033100020044021", "104323204332433202010223123310041341", "243212133110103032310024342030142200", "343124300300321020134303404431100031", "241410440202104414210120033003012432", "201120302011224042442442041432420441", "112332421433302333402111300301440313", "130004334432412110340041210044322343", "303404423210330442421240320000401212", "203110031330421340243141413203412243", "343124133314223420331120431300023121", "412421210144410421143201220343040421", "303100101420434331400103200404000442", "110324023412423401231230421232400343", "204440334231240122134111102101223033", "201244221424123131242234443141241301", "241230421323132210021103130010332420"};
    vector<string> p2 = {"004443221123330122442024234341413403", "400201401032202244134242131412211203", "000112414103012004142433300144244403", "114022134224013402202011420044120234", "242103133410402004313211124323330234", "342340330012002110441132010420413301", "402003021004321402220401300100330300", "304131303343430331341014022442111224", "242021330012040231323224341420222314", "230103302032213002441022321214332333", "313103030300234344134001412230034312", "302323311440212020214431233343411112", "040122343212024310142222302040313231", "121224301433402444212404032331444111", "402431433132000001314112441040304020", "414241033200132001322213313424323412", "043302403440140302132421132011304302", "033033241111040330411231024214304312", "144222333201242331010033123341434022", "242142301032013133104144204044432330", "020030001312140224240111020141111321", "124402244143130243421040201414302243", "330244232204243100142403103141234003", "010033032130333332344220304311443003", "101442441021314203433041013100301332", "412344222011020020443403200130434224", "113003210112332413120131140102310141", "120221021041142321302313011022130334", "314034112203411141243301214202032144", "102234311142010140200024443300222341", "311123010132341013403303131032013304", "234403221303443241224004031331201140", "124103132234124114112142022131310022", "001003112300121210330003031233101041", "134422020203303324404413320334114000", "340204304033344343223442410003012330"};
    int stepsPerSecond = 70;
    int timeLimit = 3;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-4014";
    if(result == expected) {
        cout << "Test Case 79: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 79: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test80() {
    vector<string> p0 = {};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 1;
    int timeLimit = 978804267;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "978781265";
    if(result == expected) {
        cout << "Test Case 80: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 80: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test81() {
    vector<string> p0 = {"05500000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "50000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000005", "50000000000000000000000000000000000000000000000050"};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 1;
    int timeLimit = 10000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "4999";
    if(result == expected) {
        cout << "Test Case 81: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 81: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test82() {
    vector<string> p0 = {"05500000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "50000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000005", "50000000000000000000000000000000000000000000000050"};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 1;
    int timeLimit = 30000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "14999";
    if(result == expected) {
        cout << "Test Case 82: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 82: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test83() {
    vector<string> p0 = {};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 100;
    int timeLimit = 1000000000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "49900000000000";
    if(result == expected) {
        cout << "Test Case 83: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 83: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test84() {
    vector<string> p0 = {};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 100;
    int timeLimit = 1000000000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-49900";
    if(result == expected) {
        cout << "Test Case 84: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 84: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test85() {
    vector<string> p0 = {};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 1;
    int timeLimit = 999999964;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "124041661715";
    if(result == expected) {
        cout << "Test Case 85: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 85: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test86() {
    vector<string> p0 = {"00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000"};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 100;
    int timeLimit = 987654321;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-1247500";
    if(result == expected) {
        cout << "Test Case 86: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 86: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test87() {
    vector<string> p0 = {};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 100;
    int timeLimit = 987654321;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-2445100";
    if(result == expected) {
        cout << "Test Case 87: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 87: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test88() {
    vector<string> p0 = {"079269665406", "506042219642", "720809987956", "315099331918", "952306192584", "406390344278", "999241035142", "370785209189", "728363760165", "019367419000", "279718007804", "610188263490"};
    vector<string> p1 = {"038604914953", "804585763146", "350629473403", "028096403898", "575205051686", "427800322647", "655168017864", "582553303278", "980402170192", "620737714031", "686142310509", "092421645460"};
    vector<string> p2 = {"063231394554", "109852259379", "740182746422", "853015982521", "476805512496", "898530717993", "430534005863", "440162807186", "132879980431", "685312177072", "780267345400", "959947501200"};
    int stepsPerSecond = 37;
    int timeLimit = 1000000000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "17192666666629";
    if(result == expected) {
        cout << "Test Case 88: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 88: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test89() {
    vector<string> p0 = {"06988987789998789897777978879999797789887979779789", "80998778978889977889889797897779797879899877989897", "79079877779979998779777879799789898788879878977998", "99709898797979897997879989987777788798797989987897", "79880999799898798798978778789977779999988778899899", "97887097977989998777979789978999997897777888988877", "89979909787989889878797888888788978989897789899987", "87999970887888798879899977797997878999897998989779", "79899879089989979989897888997877979989998997998898", "99988998709898988987898798878789897987778878797889", "89987998890888898877978799898997888899778988979988", "97777878788078887977787787998977997789887997987889", "99799897897907887799979887887899978789797878799987", "97978989998780999978987788777879999788787877978897", "98797988987787078888778977998798877979789787987789", "77889999997989909977898787789887779999978777789778", "89999799879787880799797878879887799887988997997997", "89987878887987987078988977977878878877978977899787", "98888978999798798708787979978977987789979979899778", "89877878779777777990989887888889897987878798878987", "88979897998977787977078787977878979987878978978788", "77878987889788799988809979879998997789778988899879", "98789779797787878797880988799798889878997997897978", "77988798799778977777999078877877898799989878799898", "77877797887787888889787707777879887788778897978898", "89778898777779878977977790779899989878788989798977", "99778888879787777897787889098998998878788877987999", "77989899789997778779889797907778999989887797977998", "77987877999888999779897989880889899799997898979988", "77977877899779997878998978887077878888778897988779", "98977979797779897987797997899707779877889987779988", "89787887798787989877978987878770898987877897979787", "79888789787798898997799997977877079987979998789888", "88779788888887979978779898779898908899987778799887", "98998778798799888899999799899777780787799999988888", "87879778889989877799897889978878878098989988787898", "88779887799998997887877778998777898807798797777897", "88787898878978777987897877788899779970788979999789", "79998989888888879877999997879788998899089897878789", "87889779999889797999979879778999978979707799789799", "89998877888989999988897898778788779779780777897778", "78789889799778787999787878787777797777898077797879", "98988777788877798787878978779778998998899907897998", "79897797997779998788778978888979787999897890797989", "87888877777789999798989888788788978997879778089998", "87877999778978778797989798788899879777977778907888", "78799799879879888989799978878979978997989877770998", "79799898979897998979878798987987977778788877788087", "97978889897798999887878789787778999888877788999908", "87779979797987898788789779797799998997888799799970"};
    vector<string> p1 = {"06988987789998789897777978879999797789887979779789", "80998778978889977889889797897779797879899877989897", "79079877779979998779777879799789898788879878977998", "99709898797979897997879989987777788798797989987897", "79880999799898798798978778789977779999988778899899", "97887097977989998777979789978999997897777888988877", "89979909787989889878797888888788978989897789899987", "87999970887888798879899977797997878999897998989779", "79899879089989979989897888997877979989998997998898", "99988998709898988987898798878789897987778878797889", "89987998890888898877978799898997888899778988979988", "97777878788078887977787787998977997789887997987889", "99799897897907887799979887887899978789797878799987", "97978989998780999978987788777879999788787877978897", "98797988987787078888778977998798877979789787987789", "77889999997989909977898787789887779999978777789778", "89999799879787880799797878879887799887988997997997", "89987878887987987078988977977878878877978977899787", "98888978999798798708787979978977987789979979899778", "89877878779777777990989887888889897987878798878987", "88979897998977787977078787977878979987878978978788", "77878987889788799988809979879998997789778988899879", "98789779797787878797880988799798889878997997897978", "77988798799778977777999078877877898799989878799898", "77877797887787888889787707777879887788778897978898", "89778898777779878977977790779899989878788989798977", "99778888879787777897787889098998998878788877987999", "77989899789997778779889797907778999989887797977998", "77987877999888999779897989880889899799997898979988", "77977877899779997878998978887077878888778897988779", "98977979797779897987797997899707779877889987779988", "89787887798787989877978987878770898987877897979787", "79888789787798898997799997977877079987979998789888", "88779788888887979978779898779898908899987778799887", "98998778798799888899999799899777780787799999988888", "87879778889989877799897889978878878098989988787898", "88779887799998997887877778998777898807798797777897", "88787898878978777987897877788899779970788979999789", "79998989888888879877999997879788998899089897878789", "87889779999889797999979879778999978979707799789799", "89998877888989999988897898778788779779780777897778", "78789889799778787999787878787777797777898077797879", "98988777788877798787878978779778998998899907897998", "79897797997779998788778978888979787999897890797989", "87888877777789999798989888788788978997879778089998", "87877999778978778797989798788899879777977778907888", "78799799879879888989799978878979978997989877770998", "79799898979897998979878798987987977778788877788087", "97978889897798999887878789787778999888877788999908", "87779979797987898788789779797799998997888799799970"};
    vector<string> p2 = {"06988987789998789897777978879999797789887979779789", "80998778978889977889889797897779797879899877989897", "79079877779979998779777879799789898788879878977998", "99709898797979897997879989987777788798797989987897", "79880999799898798798978778789977779999988778899899", "97887097977989998777979789978999997897777888988877", "89979909787989889878797888888788978989897789899987", "87999970887888798879899977797997878999897998989779", "79899879089989979989897888997877979989998997998898", "99988998709898988987898798878789897987778878797889", "89987998890888898877978799898997888899778988979988", "97777878788078887977787787998977997789887997987889", "99799897897907887799979887887899978789797878799987", "97978989998780999978987788777879999788787877978897", "98797988987787078888778977998798877979789787987789", "77889999997989909977898787789887779999978777789778", "89999799879787880799797878879887799887988997997997", "89987878887987987078988977977878878877978977899787", "98888978999798798708787979978977987789979979899778", "89877878779777777990989887888889897987878798878987", "88979897998977787977078787977878979987878978978788", "77878987889788799988809979879998997789778988899879", "98789779797787878797880988799798889878997997897978", "77988798799778977777999078877877898799989878799898", "77877797887787888889787707777879887788778897978898", "89778898777779878977977790779899989878788989798977", "99778888879787777897787889098998998878788877987999", "77989899789997778779889797907778999989887797977998", "77987877999888999779897989880889899799997898979988", "77977877899779997878998978887077878888778897988779", "98977979797779897987797997899707779877889987779988", "89787887798787989877978987878770898987877897979787", "79888789787798898997799997977877079987979998789888", "88779788888887979978779898779898908899987778799887", "98998778798799888899999799899777780787799999988888", "87879778889989877799897889978878878098989988787898", "88779887799998997887877778998777898807798797777897", "88787898878978777987897877788899779970788979999789", "79998989888888879877999997879788998899089897878789", "87889779999889797999979879778999978979707799789799", "89998877888989999988897898778788779779780777897778", "78789889799778787999787878787777797777898077797879", "98988777788877798787878978779778998998899907897998", "79897797997779998788778978888979787999897890797989", "87888877777789999798989888788788978997879778089998", "87877999778978778797989798788899879777977778907888", "78799799879879888989799978878979978997989877770998", "79799898979897998979878798987987977778788877788087", "97978889897798999887878789787778999888877788999908", "87779979797987898788789779797799998997888799799970"};
    int stepsPerSecond = 99;
    int timeLimit = 999999999;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "49400999950599";
    if(result == expected) {
        cout << "Test Case 89: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 89: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test90() {
    vector<string> p0 = {"079269665406", "506042219642", "720809987956", "315099331918", "952306192584", "406390344278", "999241035142", "370785209189", "728363760165", "019367419000", "279718007804", "610188263490"};
    vector<string> p1 = {"038604914953", "804585763146", "350629473403", "028096403898", "575205051686", "427800322647", "655168017864", "582553303278", "980402170192", "620737714031", "686142310509", "092421645460"};
    vector<string> p2 = {"063231394554", "109852259379", "740182746422", "853015982521", "476805512496", "898530717993", "430534005863", "440162807186", "132879980431", "685312177072", "780267345400", "959947501200"};
    int stepsPerSecond = 98;
    int timeLimit = 99999987;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "4553732741337";
    if(result == expected) {
        cout << "Test Case 90: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 90: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test91() {
    vector<string> p0 = {"009", "009", "090"};
    vector<string> p1 = {"009", "009", "090"};
    vector<string> p2 = {"009", "009", "090"};
    int stepsPerSecond = 100;
    int timeLimit = 1000000000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "49900000000000";
    if(result == expected) {
        cout << "Test Case 91: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 91: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test92() {
    vector<string> p0 = {"079269665406", "506042219642", "720809987956", "315099331918", "952306192584", "406390344278", "999241035142", "370785209189", "728363760165", "019367419000", "279718007804", "610188263490"};
    vector<string> p1 = {"038604914953", "804585763146", "350629473403", "028096403898", "575205051686", "427800322647", "655168017864", "582553303278", "980402170192", "620737714031", "686142310509", "092421645460"};
    vector<string> p2 = {"063231394554", "109852259379", "740182746422", "853015982521", "476805512496", "898530717993", "430534005863", "440162807186", "132879980431", "685312177072", "780267345400", "959947501200"};
    int stepsPerSecond = 100;
    int timeLimit = 1000000000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "46466666666629";
    if(result == expected) {
        cout << "Test Case 92: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 92: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test93() {
    vector<string> p0 = {"01161", "50556", "54044", "54503", "54540"};
    vector<string> p1 = {"01161", "50556", "54044", "54503", "54540"};
    vector<string> p2 = {"01161", "50556", "54044", "54503", "54540"};
    int stepsPerSecond = 1;
    int timeLimit = 20;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "2099";
    if(result == expected) {
        cout << "Test Case 93: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 93: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test94() {
    vector<string> p0 = {"0000", "0000", "0000", "0000"};
    vector<string> p1 = {"0000", "0000", "0000", "0000"};
    vector<string> p2 = {"0100", "0010", "0001", "1000"};
    int stepsPerSecond = 99;
    int timeLimit = 10000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-148203";
    if(result == expected) {
        cout << "Test Case 94: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 94: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test95() {
    vector<string> p0 = {"099", "909", "990"};
    vector<string> p1 = {"099", "909", "990"};
    vector<string> p2 = {"099", "909", "990"};
    int stepsPerSecond = 99;
    int timeLimit = 1000000000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "49401000000000";
    if(result == expected) {
        cout << "Test Case 95: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 95: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test96() {
    vector<string> p0 = {"079269665406", "506042219642", "720809987956", "315099331918", "952306192584", "406390344278", "999241035142", "370785209189", "728363760165", "019367419000", "279718007804", "610188263490"};
    vector<string> p1 = {"038604914953", "804585763146", "350629473403", "028096403898", "575205051686", "427800322647", "655168017864", "582553303278", "980402170192", "620737714031", "686142310509", "092421645460"};
    vector<string> p2 = {"063231394554", "109852259379", "740182746422", "853015982521", "476805512496", "898530717993", "430534005863", "440162807186", "132879980431", "685312177072", "780267345400", "959947501200"};
    int stepsPerSecond = 97;
    int timeLimit = 999999973;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "45072665449667";
    if(result == expected) {
        cout << "Test Case 96: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 96: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test97() {
    vector<string> p0 = {"07409488245517115276142322168576189279543123341138", "70277931986502860248650900613893446066184963788291", "35084076361542097372601657541200146071777733599818", "26603801250947835120164061898414398808778383710734", "96510996834849925533374380880681989722828907815861", "24258026539246182119762952003918195325258677229419", "69825509125083939679976935766582544161633553282536", "18621460915036492934405963428875812574444429307787", "30382520072975343211325351222640703400531067500454", "95648216801484920706070567384926577457983022367155", "40260611170004830129038857708930747837100834501456", "20356667677091627276513995926532444279237315785832", "41159510645308913474636528103155221748236303528072", "25910850790530104859254139582796177190341753324129", "08745680774313030190429314820559328748143552689295", "94505880132227001337095583783793918280184860930087", "63565839483976450615519645425326826639456253566144", "62682551015176002033628234343684739800880514363921", "98234023198989135102538928701481935979801475550928", "24504405115908387260381033848015413735856908936069", "78941566666714061214052341523168827712604946036245", "88121498245299838698602382627578278020892820552767", "87816095890007255214860689835515584054721499030350", "76783644195574734088152024666290493119955560594634", "90539128818602490221544405042127795540341229822785", "83944698566072726471321630328601260546793478816387", "61723785858733108109249157034220127702410373959720", "28670818303620284183758170408136789555663008823065", "09722829448272584739519028310310407908140795382321", "04075905120989173307660289899042087873076421916033", "62214326054960827407601293851506889870791586394538", "23948513281646779641926315970260762534075531888017", "50590935427267220117591817866992065840378311257621", "61157485649843253832706801195363103403179035291261", "70152290518368861667049894987564860780956900135580", "17746707412183571476823027885971347037127534455141", "26633008138169801393936554050655189602505252067280", "06830643705207561818565926523212288870005995309951", "11233972330484392490574766309080151039089625763859", "30251577941785788423841304177213131515001221553892", "84275840944358410334067556098357904874020541664529", "12499376587897716501326057449061190421970033313569", "59883951362881981334392721761730602560720904325608", "81575792372793638106876512956154138509213350904857", "33030321108187289230282558124988271795034015042329", "49249044985323017198832933283402012107668058805732", "22002316877287959291308192024758100716930373040231", "02771307036319561510973081517179498001850892808014", "73616808657102835561493832337301487898979195896903", "14145763463834278901407349456898997084569362006510"};
    vector<string> p1 = {"09735006518272452258698355058150734156417040610552", "50327852729763159895495252230872837541829689816375", "41012285467734491838797114352915567902319878444358", "02909835043525777440411540286814764987386280980496", "82840940748182214669381364522010387331456121918047", "74119010325032263361582193972132092745032978011474", "39967600962303519679275682463091876840379622730730", "73646740124463450201693791524413468870344671812123", "11108910077451678393139637520717067175481752175310", "00500786401480899799960638036942044369189118635091", "08226897780305639774358333610474271572270360989640", "29032247745013343521698841457302777020086450157327", "91140331583001025104064895622217478600213924154066", "81331058938980399697725232833857881351208655395354", "85035084358126022165017738351321942301486613879443", "54427756690709807320153565468158533287696463210587", "00373462011653490343770915400712377333915888024433", "67661481659687191076371279471824881620485944499453", "21743190738426987708783219374443513280903494439853", "81238985106181877280366965138076160310431589545744", "67752688919805029602092673605217115326681586946628", "81687897905826971751604996155607507956853707523049", "85800977447592322319730437808812749193620720053577", "44338644592442425323402072077617567908574256588285", "27673356944596929561783706910045636467639147500558", "86981560604786403410043610568676789451028670774622", "96564069629126470824100361098029897477539129611498", "69748258256193713206899391104824914394952167251807", "57429184481284673158542664610046675811511907634457", "26562965321634905650653326606000520561049402664072", "66851002138435087053563029937909302511833746719461", "28257784206505607244405066263170554899812779218297", "99006425351978491987969564744865049887345775133796", "53402498042615610504870817280119103232281875626474", "37054373805682681266243020510580130284572389162213", "85668935769577002593037615259535536085210268962588", "66167125249270049081001735695066236702566678645580", "04422865099938715199852310738859693110124680895046", "86733173134277336553609563329963551471099652237097", "69569935818961845346415217548385231320008528871086", "32227084743444605537219088809167865980540764018849", "46409291243997766793945469868267586824356026492429", "66225652957443492133733054512856018927384207630293", "99222949484634283378375914917625228615596260906406", "63541884473243251249506854191923222917509989001806", "84550860546293256357285489286888599429987831306634", "08376605207368794808572429201501400574775283590896", "09019160143479690755494209733770531264246035271049", "65987840290582629698395701207656328558801945677103", "63383596119439192607093873086830685398605638960590"};
    vector<string> p2 = {"07548841170256880534375606109879537117316914270864", "90013119995935614395455037224305803065408848177809", "00020454216846662885276921607600558443963684115542", "92405760447559184465104995875486026273159598974084", "72080602391379331256206177056122610553312572171228", "09493041430487328239850835158371609053142015904260", "52423800532973749888097307612428639835109625485317", "08046960522217859929695062523161022103550080164490", "92514021016308256424521150517237309844950512406019", "93705608509102690959911475139843440174175095812709", "67884851350472464814866609799341407622862389373764", "13032023437020760868943933007072373159181838884721", "26708341922103511081244505530890728059891153790744", "72146271125850468585972197235279652835735979103828", "61569189298842061731497598155226737947249374219679", "94627731297126607422564153232929795942902531904759", "08828544147591490607311860316841526043069563528506", "56422556136030143009252284285827220391015445992690", "35688956914207878103351725158240815335857992441692", "68520128297688785450100618717107793603449659803864", "31431207484939715732059793750198462139072809209420", "66461364589744167540203223989397552958970410382732", "35607296642759607615020784192529302260925165474921", "97164317555290839924425036284126691434684384746466", "38061169058111583490819307470763926989517007126943", "02223331023099265663488880513737406194624301358374", "71239082860781651405790539084388074332086469777925", "56764506253668634915444396707634219596118360690946", "93613630752795331695838711430701786516991129530463", "28950081857047434254024946388019320608803124955298", "29006742634361141292609895207409253582468317872508", "53061951740390830814342646548200821406242066627119", "72513089841667102833126315453447043214078970313610", "83313214962492219009525171316530302436259376391058", "19054884838750250152462455494929690306233905709901", "79341553497548136371511025010734311079059212034700", "18311883359283459062459851876759431004608117445429", "07947056492551214332194935506173162040829681963987", "53005413573784280416583721971211213560053085322679", "29612100800598124302004196539748940877500380949354", "78614739705446584787521776949311495502390988136009", "54874998385215316730522150262836745377884035893170", "93357364940097865223537910509365596199175907503203", "88594037795906876909179859040525807493401140106438", "01045359427082301257518531608487575502480495012479", "02247701717851574372922525040884433522050432608156", "23891156818719920412800460039854544809897098490080", "73025070279006415129706363676633248171906713381091", "30183034673254827936546419876013556868246533948900", "15594750901413298639951107692246932341801689576380"};
    int stepsPerSecond = 47;
    int timeLimit = 1000000000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "22982999999917";
    if(result == expected) {
        cout << "Test Case 97: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 97: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test98() {
    vector<string> p0 = {"0550", "0000", "0005", "5000"};
    vector<string> p1 = {"0000", "0000", "0000", "0000"};
    vector<string> p2 = {"0110", "0000", "0001", "1000"};
    int stepsPerSecond = 7;
    int timeLimit = 999999996;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "6999999958";
    if(result == expected) {
        cout << "Test Case 98: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 98: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test99() {
    vector<string> p0 = {"04251332132564603122305225561550353210221450636221", "30011244132645355430532332402003504402115450014640", "40001506306142660661533434351543551011450344343333", "32404565404120630652433100313024062251020412355341", "66420202420465460061063166421045465106421265115614", "01120013203455220212204153313251443245553602524323", "54324605100412055211046642665223433610405320523154", "33622240102234344456412511022543243265255406024460", "12140130034104334020554454626301513306242630162562", "52016535502525532524021332035654253626500542305335", "04165216500325655141056250224552042661326636314620", "50322622646056203066044435514562624664062640345042", "45660343261105113563460643201626223031355345136213", "54251403411500522133466646041655311531613061223434", "05454642131013036425336051263321146331555054345261", "53441034545060403030365131521316632545023600621024", "56335542035132450611620404622241664440423214430512", "40445562514021604001314266664011543102434634634322", "24446143011010226201501145201501226633322421244040", "10001252045165354510011233401603651050064551366645", "44054106115624243523060061050423001411221063510640", "22500420003233235320306202151661642462562624220562", "40431430044451606504330553556253324440232001156010", "24150666261502134310640036320202016555254443436260", "26404065140105144424351504156556414663456354161333", "14600541310002142564230000613022321305345123316365", "11611615034050263134315522013344336425101515512623", "43201525642415050146134060200252612563250401015522", "51320332512136233665360360440443406410441662465043", "30233636161315252356144566424050663334051112030053", "06024416056555266616406336516304056210113546255144", "99999999999999999999999999999990999999999999999999", "99999999999999999999999999999999099999999999999999", "99999999999999999999999999999999909999999999999999", "99999999999999999999999999999999990999999999999999", "99999999999999999999999999999999999099999999999999", "99999999999999999999999999999999999909999999999999", "99999999999999999999999999999999999990999999999999", "99999999999999999999999999999999999999099999999999", "99999999999999999999999999999999999999909999999999", "99999999999999999999999999999999999999990999999999", "99999999999999999999999999999999999999999099999999", "99999999999999999999999999999999999999999909999999", "99999999999999999999999999999999999999999990999999", "99999999999999999999999999999999999999999999099999", "99999999999999999999999999999999999999999999909999", "99999999999999999999999999999999999999999999990999", "99999999999999999999999999999999999999999999999099", "99999999999999999999999999999999999999999999999909", "99999999999999999999999999999999999999999999999990"};
    vector<string> p1 = {"04251332132564603122305225561550353210221450636221", "30011244132645355430532332402003504402115450014640", "40001506306142660661533434351543551011450344343333", "32404565404120630652433100313024062251020412355341", "66420202420465460061063166421045465106421265115614", "01120013203455220212204153313251443245553602524323", "54324605100412055211046642665223433610405320523154", "33622240102234344456412511022543243265255406024460", "12140130034104334020554454626301513306242630162562", "52016535502525532524021332035654253626500542305335", "04165216500325655141056250224552042661326636314620", "50322622646056203066044435514562624664062640345042", "45660343261105113563460643201626223031355345136213", "54251403411500522133466646041655311531613061223434", "05454642131013036425336051263321146331555054345261", "53441034545060403030365131521316632545023600621024", "56335542035132450611620404622241664440423214430512", "40445562514021604001314266664011543102434634634322", "24446143011010226201501145201501226633322421244040", "10001252045165354510011233401603651050064551366645", "44054106115624243523060061050423001411221063510640", "22500420003233235320306202151661642462562624220562", "40431430044451606504330553556253324440232001156010", "24150666261502134310640036320202016555254443436260", "26404065140105144424351504156556414663456354161333", "14600541310002142564230000613022321305345123316365", "11611615034050263134315522013344336425101515512623", "43201525642415050146134060200252612563250401015522", "51320332512136233665360360440443406410441662465043", "30233636161315252356144566424050663334051112030053", "06024416056555266616406336516304056210113546255144", "99999999999999999999999999999990999999999999999999", "99999999999999999999999999999999099999999999999999", "99999999999999999999999999999999909999999999999999", "99999999999999999999999999999999990999999999999999", "99999999999999999999999999999999999099999999999999", "99999999999999999999999999999999999909999999999999", "99999999999999999999999999999999999990999999999999", "99999999999999999999999999999999999999099999999999", "99999999999999999999999999999999999999909999999999", "99999999999999999999999999999999999999990999999999", "99999999999999999999999999999999999999999099999999", "99999999999999999999999999999999999999999909999999", "99999999999999999999999999999999999999999990999999", "99999999999999999999999999999999999999999999099999", "99999999999999999999999999999999999999999999909999", "99999999999999999999999999999999999999999999990999", "99999999999999999999999999999999999999999999999099", "99999999999999999999999999999999999999999999999909", "99999999999999999999999999999999999999999999999990"};
    vector<string> p2 = {"04251332132564603122305225561550353210221450636221", "30011244132645355430532332402003504402115450014640", "40001506306142660661533434351543551011450344343333", "32404565404120630652433100313024062251020412355341", "66420202420465460061063166421045465106421265115614", "01120013203455220212204153313251443245553602524323", "54324605100412055211046642665223433610405320523154", "33622240102234344456412511022543243265255406024460", "12140130034104334020554454626301513306242630162562", "52016535502525532524021332035654253626500542305335", "04165216500325655141056250224552042661326636314620", "50322622646056203066044435514562624664062640345042", "45660343261105113563460643201626223031355345136213", "54251403411500522133466646041655311531613061223434", "05454642131013036425336051263321146331555054345261", "53441034545060403030365131521316632545023600621024", "56335542035132450611620404622241664440423214430512", "40445562514021604001314266664011543102434634634322", "24446143011010226201501145201501226633322421244040", "10001252045165354510011233401603651050064551366645", "44054106115624243523060061050423001411221063510640", "22500420003233235320306202151661642462562624220562", "40431430044451606504330553556253324440232001156010", "24150666261502134310640036320202016555254443436260", "26404065140105144424351504156556414663456354161333", "14600541310002142564230000613022321305345123316365", "11611615034050263134315522013344336425101515512623", "43201525642415050146134060200252612563250401015522", "51320332512136233665360360440443406410441662465043", "30233636161315252356144566424050663334051112030053", "06024416056555266616406336516304056210113546255144", "66552645511346031121036231011440103245026063645135", "23163414406651613361331001432064003332550445336445", "65206013112031552100663146222651506256340524512000", "65426262216002604241524060161250500406421431406223", "10656360150435431525510115605026562006512335066620", "20130266146315212215230300264446560306201210532043", "44440421263651362135155353451615340210316665602113", "43624351106132542463663320326354436163003416063041", "41552053026363642501635503524036614162404202306456", "32061034054323262666316433200063342253630301400654", "31633245344055500126460214361644035232564052031021", "44040111600335415024544305463606353103243006446246", "62343300014506420251666663136323655005105540415333", "22316050123350641600555021102224433111123250022202", "23653144646611252341361642262212501163341030103151", "22536241161024613526036225456246223225134324510246", "65040224604360400456612156221665462203463200021004", "46550442436314044052462562555532210232255260402605", "15411116065105001211061043043502144243043333131230"};
    int stepsPerSecond = 3;
    int timeLimit = 1000000000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "1487999999670";
    if(result == expected) {
        cout << "Test Case 99: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 99: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test100() {
    vector<string> p0 = {"00", "00"};
    vector<string> p1 = {"00", "00"};
    vector<string> p2 = {"01", "10"};
    int stepsPerSecond = 5;
    int timeLimit = 8;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-2495";
    if(result == expected) {
        cout << "Test Case 100: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 100: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test101() {
    vector<string> p0 = {"09", "90"};
    vector<string> p1 = {"00", "00"};
    vector<string> p2 = {"01", "10"};
    int stepsPerSecond = 1;
    int timeLimit = 1000000000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "400999999599";
    if(result == expected) {
        cout << "Test Case 101: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 101: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test102() {
    vector<string> p0 = {"05000", "00505", "00050", "05000", "05000"};
    vector<string> p1 = {"00000", "00000", "00000", "00000", "00000"};
    vector<string> p2 = {"01000", "00101", "00010", "01000", "01000"};
    int stepsPerSecond = 1;
    int timeLimit = 999999998;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "999999998";
    if(result == expected) {
        cout << "Test Case 102: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 102: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test103() {
    vector<string> p0 = {"0540", "0000", "0004", "4000"};
    vector<string> p1 = {"0090", "0000", "0009", "9000"};
    vector<string> p2 = {"0190", "0000", "0009", "9000"};
    int stepsPerSecond = 7;
    int timeLimit = 9;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-5";
    if(result == expected) {
        cout << "Test Case 103: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 103: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test104() {
    vector<string> p0 = {};
    vector<string> p1 = {};
    vector<string> p2 = {};
    int stepsPerSecond = 100;
    int timeLimit = 1000000000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "5500000000000";
    if(result == expected) {
        cout << "Test Case 104: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 104: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test105() {
    vector<string> p0 = {"0000", "0000", "0000", "0000"};
    vector<string> p1 = {"0000", "0000", "0000", "0000"};
    vector<string> p2 = {"0100", "0010", "0001", "1000"};
    int stepsPerSecond = 97;
    int timeLimit = 1000000000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-48403";
    if(result == expected) {
        cout << "Test Case 105: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 105: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test106() {
    vector<string> p0 = {"0050", "0000", "0005", "5000"};
    vector<string> p1 = {"0000", "0000", "0000", "0000"};
    vector<string> p2 = {"0010", "0000", "0001", "1000"};
    int stepsPerSecond = 7;
    int timeLimit = 99999999;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "IMPOSSIBLE";
    if(result == expected) {
        cout << "Test Case 106: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 106: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test107() {
    vector<string> p0 = {};
    vector<string> p1 = {};
    vector<string> p2 = {"09999999999999999999999999999999999999999999999999", "90999999999999999999999999999999999999999999999999", "99099999999999999999999999999999999999999999999999", "99909999999999999999999999999999999999999999999999", "99990999999999999999999999999999999999999999999999", "99999099999999999999999999999999999999999999999999", "99999909999999999999999999999999999999999999999999", "99999990999999999999999999999999999999999999999999", "99999999099999999999999999999999999999999999999999", "99999999909999999999999999999999999999999999999999", "99999999990999999999999999999999999999999999999999", "99999999999099999999999999999999999999999999999999", "99999999999909999999999999999999999999999999999999", "99999999999990999999999999999999999999999999999999", "99999999999999099999999999999999999999999999999999", "99999999999999909999999999999999999999999999999999", "99999999999999990999999999999999999999999999999999", "99999999999999999099999999999999999999999999999999", "99999999999999999909999999999999999999999999999999", "99999999999999999990999999999999999999999999999999", "99999999999999999999099999999999999999999999999999", "99999999999999999999909999999999999999999999999999", "99999999999999999999990999999999999999999999999999", "99999999999999999999999099999999999999999999999999", "99999999999999999999999909999999999999999999999999", "99999999999999999999999990999999999999999999999999", "99999999999999999999999999099999999999999999999999", "99999999999999999999999999909999999999999999999999", "99999999999999999999999999990999999999999999999999", "99999999999999999999999999999099999999999999999999", "99999999999999999999999999999909999999999999999999", "99999999999999999999999999999990999999999999999999", "99999999999999999999999999999999099999999999999999", "99999999999999999999999999999999909999999999999999", "99999999999999999999999999999999990999999999999999", "99999999999999999999999999999999999099999999999999", "99999999999999999999999999999999999909999999999999", "99999999999999999999999999999999999990999999999999", "99999999999999999999999999999999999999099999999999", "99999999999999999999999999999999999999909999999999", "99999999999999999999999999999999999999990999999999", "99999999999999999999999999999999999999999099999999", "99999999999999999999999999999999999999999909999999", "99999999999999999999999999999999999999999990999999", "99999999999999999999999999999999999999999999099999", "99999999999999999999999999999999999999999999909999", "99999999999999999999999999999999999999999999990999", "99999999999999999999999999999999999999999999999099", "99999999999999999999999999999999999999999999999909", "99999999999999999999999999999999999999999999999990"};
    int stepsPerSecond = 100;
    int timeLimit = 1000000000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "49900000000000";
    if(result == expected) {
        cout << "Test Case 107: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 107: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test108() {
    vector<string> p0 = {"045", "505", "550"};
    vector<string> p1 = {"090", "000", "000"};
    vector<string> p2 = {"090", "001", "000"};
    int stepsPerSecond = 2;
    int timeLimit = 1;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "0";
    if(result == expected) {
        cout << "Test Case 108: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 108: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test109() {
    vector<string> p0 = {"044", "404", "440"};
    vector<string> p1 = {"099", "909", "990"};
    vector<string> p2 = {"055", "505", "550"};
    int stepsPerSecond = 100;
    int timeLimit = 1;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-500";
    if(result == expected) {
        cout << "Test Case 109: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 109: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test110() {
    vector<string> p0 = {"01740948824551711527614232216857618927954312334113", "80742779319865028602486509006138934460661849637882", "91035984076361542097372601657541200146071777733599", "81802660380125094783512016406189841439880877838371", "07340965109968348499255333743808806819897228289078", "15861024258626539246182119762952003918195325258677", "22941906982554912508393967997693576658254416163355", "32825360186214629150364929344059634288758125744444", "29307787030382520372975343211325351222640703400531", "06750045409564821683148492070607056738492657745798", "30223671550402606111730048301290388577089307478371", "00834501456020356667677191627276513995926532444279", "23731578583204115951064530891347463652810315522174", "82363035280720259108507905341048592541395827961771", "90341753324129008745680774313630190429314820559328", "74814355268929509450588013222703133709558378379391", "82801848609300870635658394839764586155196454253268", "26639456253566144062682551015176002433628234343684", "73980088051436392109823402319898913514253892870148", "19359798014755509280245044051159083872693810338480", "15413735856908936069078941566666714061214952341523", "16882771260494603624508812149824529983869866238262", "75782780208928205527670878160958900072552148646898", "35515584054721499030350076783644195574734088152324", "66629049311995556059463409053912881860249022154442", "50421277955403412298227850839446985660727264713216", "38328601260546793478816387061723785858733108109249", "15733422012770241037395972002867081830362028418375", "81704881367895556630088230650097228294482725847395", "19028314310407908140795382321004075905120989173307", "66028989994208787307642191603306221432605496082740", "76012938515668898707915863945380239485132816467796", "41926315970261762534075531888017050590935427267220", "11759181786699266584037831125762106115748564984325", "38327068011953631534031790352912610701522905183688", "61667049894987564868780956900135580017746707412183", "57147682302788597134713712753445514102663300813816", "98013939365540506551896225052520672800068306437052", "07561818565926523212288874005995309951011233972330", "48439249057476630908015103958962576385903025157794", "17857884238413041772131315150512215538920842758409", "44358410334067556098357904874023541664529012499376", "58789771650132605744906119042197093331356905988395", "13628819813343927217617306025607209543256080815757", "92372793638106876512956154138509213352904857033030", "32110818728923028255812498827179503401534232904924", "90449853230171988329332834020121076680588957320220", "02316877287959291308192024758100716930373043231002", "77130703631956151097308151717949800185089280851407", "36168086571028355614938323373014878989791958969330"};
    vector<string> p1 = {"01414576346383427890140734945689899708456936200651", "60197350065182724522586983550581507341564170406105", "52058327852729763159895495252230872837541829689816", "37504101228546773449183879711435291556790231987844", "43580029498350435257774404115402868147649873862809", "80496082847940748182214669381364522010387331456121", "91804707411981032503226336158219397213209274503297", "80114740399676209623035196792756824630918768403796", "22730730073646740124463450201693791524413468870344", "67181212301110891097745167839313963752071706717548", "17521753100005007864914808997999606380369420443691", "89118635091008226897789305639774358333610474271572", "27036098964002903224774531334352169884145730277702", "00864501573270911403315830510251040648956222174786", "00213924154066081331058938984399697725232833857881", "35120865539535408503508435812602216501773835132194", "23014866138794430544277566907098673201535654681585", "33287696463210587000373462011653495343770915400712", "37733391588802443306766148165968719167637127947182", "48816204859444994530217431907384269877487832193744", "43513280903494439853081238985106181877282366965138", "07616031043158954574406775268891980502960229267360", "52171153266815869466280816878979058269717516449961", "55607507956853707523049085800977447592322319730437", "80881274919362072005357704433864459244242532340237", "20776175679085742565882850276733569445969295617837", "26910045636467639147500558086981560604786403410043", "61056867678945102867077462209656406962912647082410", "03617980298974775391296114980697482582561937132068", "99391134824914394952167251807057429184481284673158", "54266461404667581151190763445702656296532163490565", "06533266062005205610494026640720668510021384350870", "53563029937939302511833746719461028257784206505607", "24440506626317555489981277921829709900642535197849", "19879695647448651498873457751337960534024980426156", "10504870817280119103232281875626474037054373805682", "68126624302051058013828457238916221308566893576957", "70025930376152595355366852102689625880661671252492", "70049081001735695066236752566678645580004422865099", "93871519985231073885969311912468089504608673317313", "42773365536095633299635514717996522370970695699358", "18961845346415217548385231320008528871086032227084", "74344460553721908880916786598054676401884904640929", "12439977667939454698682675868243566264924290662256", "52957443492133733054512856018927384267630293099222", "94948463428337837591491762522861559626890640606354", "18844732432512495068541919232229175099898018060845", "50860546293256357285489286888599429987831306634008", "37660520736879480857242920150140057477528359789600", "90191601434796907554942097337705312642460352711490"};
    vector<string> p2 = {"06598784029058262969839570120765632855880194567718", "30633835961194391926070938730868306853986056389605", "99017548841170256880534375606109879537117316914270", "86409701311999593561439545503722430580306540884817", "78090000204542168466628852769216076005584439636841", "15542092405760447559184465104995875486026273159598", "97408407208860239137933125620617705612261055331257", "21712280094931414304873282398508351583716090531420", "15904260052423850532973749888097307612428639835109", "62548531700804696852221785992969506252316102210355", "00801644900925140215163082564245211505172373098449", "50512406019093705608579102690959911475139843440174", "17509581270906788485135147246481486660979934140762", "28623893737640130320234375207608689439330070723731", "59181838884721026708341922113511081244505530890728", "05989115379074407214627112585846858597219723527965", "28357359791038280615691892988428617314975981552267", "37947249374219679094627731297126637422564153232929", "79594290253190475900882854414759149060731186031684", "15260430695635285060564225561360301437092522842858", "27220391015445992690035688956914207878183351725158", "24081533585799244169206852012829768878545910061871", "71077936034496598038640314312074849397157328597937", "50198462139072809209420066461364589744167540233223", "98939755295897041038273203560729664275960761502578", "41925293022609251654749210971643175552908399244255", "36284126691434684384746466038061169058111583490819", "38747076392698951700712694300222333102309926566348", "88835137374061946243013583740712390828607816514057", "90539484388074332086469777925056764506253668634915", "44439674763421959611836069094609361363075279533169", "58387114357017865169911295304630289500818570474342", "54024946388919320608803124955298029006742634361141", "29260989520740925358246831787250805306195174039083", "08143426465482098214062420666271190725130898416671", "02833126315453447343214078970313610083313214962492", "21900952517131653034243625937639105801905488483875", "02501524624554949296913062339057099010793415534975", "48136371511025010734311879059212034700018311883359", "28345906245985187675943105460811744542900794705649", "25512143321949355061731620468296819639870530054135", "73784280416583721971211213560153085322679029612100", "80059812430200419653974894087756038094935407861473", "97054465847875217769493114955023969881360090548749", "98385215316730522150262836745377884035893170093357", "36494009786522353791050936559619917594750320308859", "40377959068769091798590405258074934011471064380010", "45359427082301257518531608487575502480495412479002", "24770171785157437292252504088443352205043268815602", "38911568187199204128004600398545448098970984920800"};
    int stepsPerSecond = 97;
    int timeLimit = 1000000000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "47384499999937";
    if(result == expected) {
        cout << "Test Case 110: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 110: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test111() {
    vector<string> p0 = {"05", "50"};
    vector<string> p1 = {"00", "00"};
    vector<string> p2 = {"00", "00"};
    int stepsPerSecond = 3;
    int timeLimit = 2;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "0";
    if(result == expected) {
        cout << "Test Case 111: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 111: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test112() {
    vector<string> p0 = {"05", "50"};
    vector<string> p1 = {"00", "00"};
    vector<string> p2 = {"01", "10"};
    int stepsPerSecond = 99;
    int timeLimit = 500000000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "49499999901";
    if(result == expected) {
        cout << "Test Case 112: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 112: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test113() {
    vector<string> p0 = {"00", "00"};
    vector<string> p1 = {"00", "00"};
    vector<string> p2 = {"01", "10"};
    int stepsPerSecond = 1;
    int timeLimit = 1000000000;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-499";
    if(result == expected) {
        cout << "Test Case 113: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 113: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test114() {
    vector<string> p0 = {"0540", "0000", "0004", "4000"};
    vector<string> p1 = {"0090", "0000", "0009", "9000"};
    vector<string> p2 = {"0190", "0000", "0009", "9000"};
    int stepsPerSecond = 7;
    int timeLimit = 999999996;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "-5";
    if(result == expected) {
        cout << "Test Case 114: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 114: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test115() {
    vector<string> p0 = {"02195406105699108054815603667741471462474551965826", "30439923218676521781160359214568297480670979912201", "26045569437437542979151957256360897933661719928035", "28509717758643496307172119081100836082748208578520", "44700156924556211758942395599059395239649684645683", "13423014677310133389191165768776139398037955397496", "31546608495032515665403118808829771988638296499136", "16508230539065883686586530790669337575622897798214", "05212261045328381551169707921335328897920782650250", "77089376103580263856324864184646400081303620525328", "00246649100744805849563167801207007267694141833498", "70170171060049639855865388029123990903065817881863", "78352046038605831823907391128949607985356662955897", "31011899436180196051346849601491295212711306651220", "35202600445495023201003677162395580293136821433434", "42580030326802406410654718676767306556988048353229", "80060444628060160512503204468687509528696341060067", "66531735370077699081545408001022931056077847433838", "65057953634564126204919689697592054069607534855588", "98529046855848645800194568824748968786415909932848", "89857306163031310605030016620137740102797015620768", "98497395165111222961804209271743737765477786013132", "33214283417972082291500258511808755069786122891073", "32826439283959235547641042478639391866552614504447", "23713718500311629308865903841721234603382286584524", "58662990805716725534807880584339227684741604052201", "34128074391523650127584533021213966680358913738609", "72017107320465601249883410007884957461783373319362", "73425382826978046930404875670369415160528724929762", "22429068357941736905896533418097130028582675293352", "05537944012485782835605830956403279977156764434601", "78397729687482876577778473478460565683833916601608", "38054786196979820831822100965279023518103859436161", "85812747177936920858363966163342102410573043452730", "20014983606215459439261119368954380815137098690167", "68748559558785302008462241323779789036969198399082", "15407437427364333574080232025083050709814584290398", "04228283981540353639434289024783826110563796104405", "66450149529931241683656759633172184578003545655615", "50249846395433182300817891278399605713102077805602", "84717909967751438002533909156511196765730185337152", "00727424542933068760231496854686477762485003938544", "02136727754460090298711218594857601583505008295646", "71008629541326406873175497535863435835730100569778", "45329741280548119251458128802272536724045637008148", "28411743027671422500479330277458655644031271405260", "50981260590058717615994018947404537274899606850099", "88384802497920511194364173060317448508515652482014", "48230216398755474269468984419080420842853425469802", "89547481119677096940415813020876663756031036832190"};
    vector<string> p1 = {"05830827136662917128608272615639870615594710302167", "60159854725288574552185329038864182925942906799103", "05032864415813404302285426298251103635086095145001", "11306455316380877035366842045294805875737206410598", "49080947660972646744196099763689799034072350368036", "92583060546390743053922118552364169812805074345114", "07540106308957249737951839984235653508311797910638", "88462930103738666670416771262992940896281851139843", "00065927030180643232470966241266971022313972803707", "04955491408562492754482445697657584797409950476547", "77353642140235991598512681725503222187501547391213", "90144987931075442240620852907902805062097439612570", "35842553315008240736124933224708393070712347077102", "05007324460040635225922041561991494840894977772790", "25892113701907073049351003958021311559423198749318", "76245014779856009674414714417963303813570118137752", "95888236158458120298144680539631918364408652810207", "46845667028255724012431041243302109096076770092825", "40130785051901497401378186081854748045978029846855", "34642408631213239200153476288098022359873927099455", "81010445394828445163090917065134161285308932098324", "68530957934672889077303303380173271195725479635719", "04083783433545807481160366339654828944671057349048", "16364958927855515892103013375025135678272565905338", "66510194439799350611567202931177703780333858705083", "84139583332175102499311350054921664336241598465739", "80369962648436109072144955071604020964366716220985", "29525189346476159436288768800218974472524590357264", "52248564742978343331651673850733266642379829637396", "26097623703386868808829788871097064890726228880137", "53205592208983042146268523298307318817245648824089", "45764628768972021184213355899210325259568174379935", "00667731639117284218728015846688061244783414388259", "36678957780345798439071945446542000671920714589007", "75964651142766272024648513987652550337155502180263", "29808408914727160589692910290632166007582533531015", "13445554509593195252349721765927236107622036036233", "59860024151610658222180283617620302160667735285783", "99821331124533220978287216813082118184012096475787", "25303788113196725319501228318816535606705436792847", "68158493775185895332847010735555398411030753478555", "24731648638236091244420720218748644371687089382078", "80444922778215451938692556521696694324842606077595", "37979774944995361836766541895906614939915920900157", "14485824940130874307215037367901106050878082093975", "22699232694430065730811062058320799796555216007669", "33341938075983492371280544267626827890994248080592", "19380664790454361147324529300073926824125180364043", "15433713703708981410744684443479996511374168524008", "01170989761623431161455421047998102867735487062940"};
    vector<string> p2 = {"04970536848291275950167376016457653338633413602401", "60165530143142111862455001098227097160301375277027", "59071385922355502397718206987504157994373525514408", "87603768297349838514474040583563510038580000562867", "07420023827282886545889985779819560583237487763766", "15161035876215177454731454541090163803974845700557", "30297400681489056252270716629433900030213021041847", "66545100199055070931422629861932901536490593908810", "60012913010434546391075902754502464339126573734052", "22891572706733682412269105165426330646391311360243", "72784709590401905160750958877286421847866930182427", "23484027473022583705464581469031882041861342670180", "76921589630309109145948539681249530558188217979352", "54752530322130305939245692643679817726455160577091", "05349417143679014471231198580767841969636630202669", "55883826267440908327867577322465720127262571721027", "06323443970086570004196697800099774090803017641394", "86104840704122372095650763118567431236796867631173", "76053778358919868002140440597596011871551798463227", "02037758486646474830413307214034588578647235329300", "92595013059661290312094834119605815793121412135132", "01568657663108508915106362038537982441464092682292", "90054575709963184221460239867016114664108095432410", "95785476339853831591082081882876395590853092587517", "65083038062280166441895301336117483919975630431582", "85296223499535558259614330863583747194238887161574", "48976537188167913643484028031783402171649243967491", "10095392699679337065378552400163644042266713363839", "91424616115799165789905559570848184245055598744473", "55473672026886996254157075140018013646837325798284", "36843623350213037583359184640101212240266438959846", "94371853992647337887570182641530222809468597879723", "83937030329919060569215826137102087108434874463514", "39371672077512277750591203460913004861354647689224", "36101375156945690211282164211255420891811724473182", "70894434475312398875006712861200797086139529595568", "32996108171539664319596550472264996201375356776701", "52182928939688684117422792752058945780446400488278", "72230216595083102716085446013178624429012891934023", "58562643228358116088865811721949728419306432364043", "71674646094602254258848776611558443303280873793310", "34302772124274792800905934874982278908838047786622", "88616122311822427742844654215501613268292403278981", "03513233848134324572658479839729003459663980545981", "89479979271964666640940182489315774613982156058947", "95950896823684353855126149850411306510540432401556", "54551977430951738998458999305758487835373665740569", "86691897837115142211687148572563967074302499759053", "17560607654645161032469247887036673776904716218300", "56329967353059539271579316109724508475686666388030"};
    int stepsPerSecond = 97;
    int timeLimit = 499999997;
    AntOnGraph* pObj = new AntOnGraph();
    clock_t start = clock();
    string result = pObj->maximumBonus(p0, p1, p2, stepsPerSecond, timeLimit);
    clock_t end = clock();
    delete pObj;
    string expected = "23667999857850";
    if(result == expected) {
        cout << "Test Case 115: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 115: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    test67() == 0 ? ++passed : ++failed;
    test68() == 0 ? ++passed : ++failed;
    test69() == 0 ? ++passed : ++failed;
    test70() == 0 ? ++passed : ++failed;
    test71() == 0 ? ++passed : ++failed;
    test72() == 0 ? ++passed : ++failed;
    test73() == 0 ? ++passed : ++failed;
    test74() == 0 ? ++passed : ++failed;
    test75() == 0 ? ++passed : ++failed;
    test76() == 0 ? ++passed : ++failed;
    test77() == 0 ? ++passed : ++failed;
    test78() == 0 ? ++passed : ++failed;
    test79() == 0 ? ++passed : ++failed;
    test80() == 0 ? ++passed : ++failed;
    test81() == 0 ? ++passed : ++failed;
    test82() == 0 ? ++passed : ++failed;
    test83() == 0 ? ++passed : ++failed;
    test84() == 0 ? ++passed : ++failed;
    test85() == 0 ? ++passed : ++failed;
    test86() == 0 ? ++passed : ++failed;
    test87() == 0 ? ++passed : ++failed;
    test88() == 0 ? ++passed : ++failed;
    test89() == 0 ? ++passed : ++failed;
    test90() == 0 ? ++passed : ++failed;
    test91() == 0 ? ++passed : ++failed;
    test92() == 0 ? ++passed : ++failed;
    test93() == 0 ? ++passed : ++failed;
    test94() == 0 ? ++passed : ++failed;
    test95() == 0 ? ++passed : ++failed;
    test96() == 0 ? ++passed : ++failed;
    test97() == 0 ? ++passed : ++failed;
    test98() == 0 ? ++passed : ++failed;
    test99() == 0 ? ++passed : ++failed;
    test100() == 0 ? ++passed : ++failed;
    test101() == 0 ? ++passed : ++failed;
    test102() == 0 ? ++passed : ++failed;
    test103() == 0 ? ++passed : ++failed;
    test104() == 0 ? ++passed : ++failed;
    test105() == 0 ? ++passed : ++failed;
    test106() == 0 ? ++passed : ++failed;
    test107() == 0 ? ++passed : ++failed;
    test108() == 0 ? ++passed : ++failed;
    test109() == 0 ? ++passed : ++failed;
    test110() == 0 ? ++passed : ++failed;
    test111() == 0 ? ++passed : ++failed;
    test112() == 0 ? ++passed : ++failed;
    test113() == 0 ? ++passed : ++failed;
    test114() == 0 ? ++passed : ++failed;
    test115() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=14946025&rd=13900&pm=10516
********************************************************************************
# include <string> 
# include <vector> 
# include <iostream> 
# include <sstream> 
# include <cstdio> 
# include <cstdlib> 
# include <cmath> 
# include <cctype> 
# include <cstring> 
# include <map> 
# include <queue> 
# include <deque> 
# include <set> 
# include <algorithm> 
# include <utility> 
# include <functional> 
# include <stack> 
# include <bitset> 
# include <complex> 
# include <cassert> 
# include <ctime> 
# include <list> 
# include <valarray> 
 
using namespace std ; 
 
typedef long long ll; 
typedef pair<int, int> pii; 
typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef vector<vvi> vvvi; 
typedef long double ld; 
typedef vector<ld> vd; 
typedef vector<bool> vb; 
 
#define all(v) (v).begin(), (v).end() 
#define MP make_pair 
 
typedef vector< vector<ll> > Matrix; 
const ll MINUS_INF = -ll(1) << 62; 
 
ll max(ll a, ll b) { 
  if (a > b) { 
    return a; 
  } 
  return b; 
} 
 
void multiply1(const Matrix& a, const Matrix& b, Matrix& c) { 
  c = Matrix(a.size(), a.size()); 
  for (int i = 0; i < a.size(); ++i) { 
    for (int j = 0; j < a.size(); ++j) { 
      c[i][j] = MINUS_INF; 
      for (int k = 0; k < a.size(); ++k) { 
        if (a[i][k] > MINUS_INF && b[k][j] > MINUS_INF) { 
          c[i][j] = max(c[i][j], a[i][k] + b[k][j]); 
        } 
      } 
    } 
  } 
} 
 
void multiply2(const Matrix& a, const Matrix& b, Matrix& c) { 
  c = Matrix(a.size(), a.size()); 
  for (int i = 0; i < a.size(); ++i) { 
    for (int j = 0; j < a.size(); ++j) { 
      c[i][j] = max(a[i][j], b[i][j]); 
      for (int k = 0; k < a.size(); ++k) { 
        if (a[i][k] > MINUS_INF && b[k][j] > MINUS_INF) { 
          c[i][j] = max(c[i][j], a[i][k] + b[k][j]); 
        } 
      } 
    } 
  } 
} 
 
void power(const Matrix& a, ll n, void (*mult)(const Matrix&, const Matrix&, Matrix&), Matrix& res) { 
  if (n == 1) { 
    res = a; 
    return; 
  } 
  power(a, n / 2, mult, res); 
  Matrix tmp; 
  mult(res, res, tmp); 
  if (n % 2) { 
    mult(tmp, a, res); 
  } else { 
    res = tmp; 
  } 
} 
 
class AntOnGraph 
{ 
public : 
  string maximumBonus ( vector <string> p0, vector <string> p1, vector <string> p2, int stepsPerSecond, int timeLimit ) 
  { 
    string res ; 
    int n = p0.size(); 
    Matrix A(n, n); 
    for (int i = 0; i < n; ++i) { 
      for (int j = 0; j < n; ++j) { 
        int x = 100 * (p0[i][j] - '0') + 10 * (p1[i][j] - '0') + (p2[i][j] - '0'); 
        if (x == 0) { 
          A[i][j] = -ll(1) << 62; 
        } else { 
          A[i][j] = x - 500; 
        } 
      } 
    } 
    Matrix B; 
    power(A, stepsPerSecond, &multiply1, B); 
    Matrix C; 
    power(B, timeLimit, &multiply2, C); 
    if (C[0][1] > (-ll(1) << 62)) { 
      ostringstream out; 
      out << C[0][1]; 
      res = out.str(); 
    } else { 
      res = "IMPOSSIBLE"; 
    } 
    return res ; 
  } 
   
 
} ; 
 
 
 
// Powered by FileEdit
// Powered by TZTester 1.01 [25-Feb-2003]
// Powered by CodeProcessor

********************************************************************************
*******************************************************************************/