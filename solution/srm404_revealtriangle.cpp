/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=8215
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class RevealTriangle {
public:
    vector<string> calcTriangle(vector<string> questionMarkTriangle);
};

vector<string> RevealTriangle::calcTriangle(vector<string> questionMarkTriangle) {
    vector<string> ret;
    return ret;
}


int test0() {
    vector<string> questionMarkTriangle = {"4??", "?2", "1"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"457", "92", "1"};
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<string> questionMarkTriangle = {"?????1?", "2?????", "??4??", "?8??", "6??", "?2", "4"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1111111", "222222", "44444", "8888", "666", "22", "4"};
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<string> questionMarkTriangle = {"1"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1"};
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<string> questionMarkTriangle = {"1????????", "?2??????", "??3????", "???4??", "????5", "6???", "?7?", "8?", "9"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"184090732", "92499705", "1638675", "791432", "60575", "6522", "174", "81", "9"};
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<string> questionMarkTriangle = {"???2", "??2", "?2", "2"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0002", "002", "02", "2"};
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<string> questionMarkTriangle = {"?5????", "??7??", "1???", "??9", "?3", "4"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"754382", "29710", "1681", "749", "13", "4"};
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<string> questionMarkTriangle = {"????2??", "9?????", "??5??", "5???", "?7?", "9?", "4"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"8135269", "948785", "32553", "5708", "278", "95", "4"};
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<string> questionMarkTriangle = {"????5", "???9", "?2?", "0?", "6"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"56145", "1759", "824", "06", "6"};
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<string> questionMarkTriangle = {"?4??", "9??", "6?", "8"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5432", "975", "62", "8"};
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<string> questionMarkTriangle = {"?9??????", "????0??", "7?????", "???0?", "?4??", "8??", "?5", "1"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"39665541", "2521095", "773194", "40403", "4443", "887", "65", "1"};
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<string> questionMarkTriangle = {"????4??????????????", "?????????7????????", "????0????????????", "???????????4????", "?????????????8?", "??????8???????", "???????6?????", "??????2?????", "???????2???", "???????6??", "?????4???", "?2??????", "0??????", "???6??", "???0?", "??2?", "4??", "?8", "6"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0123456789876543210", "135791357753197531", "48260482428406284", "2086420660246802", "284062626260482", "02468888886420", "2604666664062", "864022220468", "40424442404", "4466886644", "802464208", "82600628", "0860680", "846648", "20202", "2222", "444", "88", "6"};
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<string> questionMarkTriangle = {"???????????????6???", "???????3??????????", "?????????????0???", "???????????8????", "???4???????????", "???????0??????", "???????????0?", "???????????4", "??????????0", "????0?????", "???????6?", "???????4", "????8??", "?????0", "?6???", "0???", "?0?", "?0", "0"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"9876543210123456789", "753197531135791357", "28406284248260482", "0246802662086420", "260482828284062", "86420000002468", "4062000002604", "468200002864", "04020002040", "4422002244", "864202468", "40622604", "4684864", "042240", "46464", "0000", "000", "00", "0"};
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<string> questionMarkTriangle = {"????????1????????", "7???????????????", "???????????0???", "?????????8????", "2????????????", "????2???????", "???4???????", "??????8???", "????6????", "???2????", "????6??", "??0???", "??0??", "?4??", "??0", "8?", "6"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"98765432123456789", "7531975335791357", "284062868260482", "02468044086420", "2604848484062", "864222222468", "40644444604", "4608888064", "068666860", "64422446", "0864680", "840048", "24042", "6446", "080", "88", "6"};
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<string> questionMarkTriangle = {};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"99999999999999999999999999999999999999999999999999", "8888888888888888888888888888888888888888888888888", "666666666666666666666666666666666666666666666666", "22222222222222222222222222222222222222222222222", "4444444444444444444444444444444444444444444444", "888888888888888888888888888888888888888888888", "66666666666666666666666666666666666666666666", "2222222222222222222222222222222222222222222", "444444444444444444444444444444444444444444", "88888888888888888888888888888888888888888", "6666666666666666666666666666666666666666", "222222222222222222222222222222222222222", "44444444444444444444444444444444444444", "8888888888888888888888888888888888888", "666666666666666666666666666666666666", "22222222222222222222222222222222222", "4444444444444444444444444444444444", "888888888888888888888888888888888", "66666666666666666666666666666666", "2222222222222222222222222222222", "444444444444444444444444444444", "88888888888888888888888888888", "6666666666666666666666666666", "222222222222222222222222222", "44444444444444444444444444", "8888888888888888888888888", "666666666666666666666666", "22222222222222222222222", "4444444444444444444444", "888888888888888888888", "66666666666666666666", "2222222222222222222", "444444444444444444", "88888888888888888", "6666666666666666", "222222222222222", "44444444444444", "8888888888888", "666666666666", "22222222222", "4444444444", "888888888", "66666666", "2222222", "444444", "88888", "6666", "222", "44", "8"};
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<string> questionMarkTriangle = {};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"34567345673456734567345673456734567345673456734567", "7913079130791307913079130791307913079130791307913", "604376043760437604376043760437604376043760437604", "64703647036470364703647036470364703647036470364", "0173901739017390173901739017390173901739017390", "180291802918029180291802918029180291802918029", "98210982109821098210982109821098210982109821", "7031970319703197031970319703197031970319703", "734067340673406734067340673406734067340673", "07463074630746307463074630746307463074630", "7109371093710937109371093710937109371093", "819208192081920819208192081920819208192", "90128901289012890128901289012890128901", "9130791307913079130791307913079130791", "043760437604376043760437604376043760", "47036470364703647036470364703647036", "1739017390173901739017390173901739", "802918029180291802918029180291802", "82109821098210982109821098210982", "0319703197031970319703197031970", "340673406734067340673406734067", "74630746307463074630746307463", "1093710937109371093710937109", "192081920819208192081920819", "01289012890128901289012890", "1307913079130791307913079", "437604376043760437604376", "70364703647036470364703", "7390173901739017390173", "029180291802918029180", "21098210982109821098", "3197031970319703197", "406734067340673406", "46307463074630746", "0937109371093710", "920819208192081", "12890128901289", "3079130791307", "376043760437", "03647036470", "3901739017", "291802918", "10982109", "1970319", "067340", "63074", "9371", "208", "28", "0"};
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<string> questionMarkTriangle = {};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1937298155674454923030563646919366231", "020917960131899315333519900500292854", "22908656144978246866860890550211039", "4198411758365060442446879505232132", "507252823191566486680456455755345", "57977005400612024248491090220879", "2664705940673226662230199242856", "820175434630548228453108166031", "02182977093592040298418972634", "2390164792841244217259769897", "529170161025368638974635776", "71087177127894491761098243", "8185884839573830837197067", "993362212420113810806763", "82698433662124191886339", "0857276928336500964962", "832993510169150950358", "15182861175065945383", "6690047282561439811", "259041900717572792", "74945090788229961", "1339599756041857", "462448621645932", "08682483709425", "8440621079367", "284683176293", "02041483812", "2245521193", "469073202", "05970522", "5467574", "903221", "93543", "2897", "076", "73", "0"};
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<string> questionMarkTriangle = {};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"81066001965739092617920685895408", "9162601051202991878612643374948", "078861156322180955473807601332", "75647261954398940910187361465", "2101987049727734901195097501", "311075743699407391204596251", "42172217958347020324945876", "6389438643171722356339353", "917371407488894581962288", "08008547126673939058406", "8808391838230222953246", "688120911053244148560", "46932902158568552316", "0525192363314307547", "577601599645737291", "24361648509200910", "6797702359120901", "366472584032991", "92019732435180", "1210605678698", "331665135457", "64721648992", "0193702781", "102072959", "12279144", "3496058", "735653", "08118", "8929", "711", "82", "0"};
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<string> questionMarkTriangle = {};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"7413858785456469966485690393244", "154133553991005852023159322568", "69546808280105337225464254714", "5490488008115860947900679185", "939426808926346931690636093", "22368488718970524759699692", "4594226589767576124558551", "943648137633223736903306", "37902940396545009593636", "0692134325199509442999", "651347757608459386188", "16471422368294214796", "7018564594013635165", "719310943414998671", "80241937755387438", "8265020420815171", "081522462896688", "89674608075246", "7531068872760", "284164659936", "02570014829", "2727015201", "999716721", "88687393", "6445022", "089524", "87476", "5113", "624", "86", "4"};
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<string> questionMarkTriangle = {"2?", "2"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"20", "2"};
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<string> questionMarkTriangle = {};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"215526989365557841888326781091649630148", "36078577291002525966158359190703593152", "9675324910102777452763184009773842467", "532856301112944197939492409640126603", "85031931223138506622331649504138263", "3534024345441356284564703454541089", "887426779985481802910173799995187", "65168346873929982101180068884695", "1674170450211870311298064662054", "731587495232957342317860028259", "04635134755142076548546020074", "4098647120656273192390622071", "497401832611890401529684278", "36141915872979441671542695", "9755006359166385738696854", "620506984072913201455439", "82556572479104521590972", "0701129616014973649969", "771231577615360903855", "48354624376896993130", "2189086703475582443", "397984373712030687", "26672700083233645", "8239970081556909", "052867089601599", "57043787561648", "2747055217702", "911750738472", "02825701219", "2007271330", "207998463", "27687209", "9345929", "279411", "96352", "5987", "475", "12", "3"};
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<string> questionMarkTriangle = {"??????????3???????????????????????????????????????", "???????????????????????7?????????????????????????", "??????????????????????????????7?????????????????", "??????????????????????????????????????????0????", "????????????????????1?????????????????????????", "9????????????????????????????????????????????", "????6???????????????????????????????????????", "???????????????6???????????????????????????", "?????????????????????6????????????????????", "?2???????????????????????????????????????", "??????????????????????????1?????????????", "?????????????????????0?????????????????", "?6????????????????????????????????????", "???????????????????????????????????9?", "????????4???????????????????????????", "????????????????????3??????????????", "?????1????????????????????????????", "?????????????3???????????????????", "????????3???????????????????????", "????????????????????2??????????", "?????????????????????7????????", "??????????????????6??????????", "??????1?????????????????????", "??????????????1????????????", "????9?????????????????????", "????2????????????????????", "?????????????????8??????", "????????????????8??????", "???????????????2??????", "????????????3????????", "7???????????????????", "???????????5???????", "?????????????3????", "??????0??????????", "??????????????5?", "????????3??????", "???????????5??", "?0???????????", "???0????????", "???0???????", "??????9???", "3????????", "9???????", "???4???", "??4???", "?6???", "??3?", "??7", "?8", "0"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"52257984073024035442244438742052825753113837376184", "7472672470326438986468871516257007228424110003792", "119839617358071774004658667872707940266521003061", "20712578083878841404013423559977634282173103367", "2783725881155625544414765804864397600380413693", "951097369260187098855131384240726360318454952", "46196095186195797630644412664798996349299347", "0705694694704266393608853820167785973118271", "775153053174682922968638102173453460429098", "42668358481040114154491912380798706461997", "6824183229144125569830003518767576007086", "406591541058537015713003869533223607784", "46140695153380716284303145486545967452", "0754654668618787802733459924199453197", "729019024479555582906794816508398406", "91910926816400030196363297158127246", "0001918497040033105999516863939960", "001009236744036415488467449222856", "01109159318439056926203183144031", "1219064249272951518823491458434", "330960663199146669605730593277", "63956629408050225565203542594", "9241281348855247011723896743", "165309472630761712895175317", "71839319893737883074682848", "8912240772000561371040022", "703464749200517408144024", "73700113120568148958426", "0070124432514952743268", "077136875765347917584", "74849452231871608232", "1223397454958768055", "345626199343534850", "79188708277887235", "6096578094565958", "695125893911443", "54637372202587", "9090009422735", "999009364908", "88909290398", "6799119327", "368020259", "94822274", "3204491", "524830", "76213", "3834", "117", "28", "0"};
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<string> questionMarkTriangle = {};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"66004868919950956239134349429601097556116088659650", "2604244700845941852047773361561196201727686414515", "864668170829435937241440697617205821899344055966", "40024987801378420965584656378925303978278450452", "4026375581405262951032011905717833265095295497", "428902039545788146135212095288516581594714936", "60792232499256950748733294706367139643185329", "6761455638171545712506513176993842507493851", "337590191988699283756164483582126757132136", "60249100076458101021770821830338322845349", "6263010073093911123847803913361154029873", "889311070392202235121583204697269421750", "67242177321422458633631524056985363825", "3966384053564693496994676451573899107", "252912458810052735583033096620178017", "77103693691057908031336395282185818", "4813952950152698834469924700393399", "294247145167857617805816170322628", "13661859673532378585397787354880", "4927934530885505333826455089268", "319627983863055866108090587184", "40589671149350342718899535892", "4537538253285376989678488371", "980281078503803577535226108", "78209175353183824288748718", "5029082888491106606512589", "521980066230216266163737", "73078062853237882779000", "0375868038550560946900", "302344831305516930590", "32578214435067523549", "5725035878563275893", "297538355319592372", "16281180840441509", "7809298824485659", "589117606823114", "37028366405425", "0720192045967", "792101249453", "61311363398", "7442499627", "186638589", "94291337", "3610460", "971406", "68546", "4390", "729", "91", "0"};
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<string> questionMarkTriangle = {};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"67795148683736419125841014241932948048710320435087", "3464652441009050037325115665025132842581352478585", "700017685109955030057626121527645026739487615333", "70018343619840533052388733679309528302325376866", "7019177970724586357516506936239470132557803442", "710084667796934982267156529852317145702583786", "81082023465527370483861171737548859272731054", "9180225701079007421147288800292634199904159", "098247271176907163251906680211897508894564", "97061998283597879576096248232976258673910", "6767087001846556423695862055163873430201", "333785701920101065954348250679150773221", "66053271012111161449772075636065740543", "2658598113322277583649272199661214597", "813347924654494231903199308527335946", "94671616019833654093408238379068430", "3038777610716919492748051106964273", "331544371787500331912856216550690", "64698708855250364003031837105659", "0057578630775390403334910815114", "052225493742829443667301896625", "57447932016001387923031975287", "2181625217601415615334062705", "399787738361556176867468975", "28655401197601783443104762", "0410941206361851787414138", "451935326997936855155541", "96028858586629430660095", "5620633334281373626094", "182696667609400988693", "90855223369340976452", "9830745695274963097", "713719154791359396", "84080069160484225", "2488065076422647", "626861573064801", "88447620360281", "6281382396209", "809410525829", "89351577301", "7286624031", "904286434", "94604077", "3064474", "360811", "96892", "5471", "918", "09", "9"};
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<string> questionMarkTriangle = {};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"72573829643125077507450212287122927002018406590815", "9720101507437574257195233405834119702219246149896", "692111657170221672804756745317520672430160753775", "51322712887243739084121319848272639673176728042", "6454983065967002982533440722099892530483390846", "099371361453702170786784794298771783421629820", "98208497598072387754352163617548851763781702", "7028236247879515429787379978292636839059872", "720059861556466961655006865011899412954759", "92054747601002557710506441512978353149124", "1259111361102702481556085663165188453036", "374022497212972629601683129471696298339", "01424636933169881561741431318755817162", "1566099526475769617815574449520398878", "612698478012235578596021883472327655", "73857215813458025345623961719559310", "0132936394793827879185257880404241", "145129923162109556093772568444665", "59631815478319401692049714288021", "4594996915140341751243685606823", "943385506654375826367943166405", "37613056219702308993637472045", "0374351830672538782990119249", "301786913639781550189120163", "31854504992659605197032179", "4939954381814565606735386", "322849719995911166308814", "54023680884402272938695", "9425948862842499121454", "367432648026638033599", "93175802828291836848", "2482382000010919422", "620510200011900364", "82561220012090390", "0717342013299329", "788076214518251", "56873835969076", "1450118455973", "595129290460", "44631119406", "8094220346", "893642370", "72906507", "9196157", "005762", "05238", "5751", "226", "48", "2"};
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<string> questionMarkTriangle = {};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"00563154590159552237330183073251483159426453886123", "0519469949164407450063191370576521464368098164735", "560305833070847195069400407523173500794897970108", "16335316377821804565340447275480850763276667118", "7968847904503984911874481992928835739593223829", "654621694953272302951829081110618202442545101", "19083753348599532146901989221679022686799611", "0981028672348485350591077143736924844368572", "979120439572223885540174857009516228794329", "66032472429445163094181232709467840563751", "2635619661389679393599355979303524519026", "898170527417536222848280466233876960928", "77987579158289844022008402856153556910", "4675226063007728424208242031768801501", "032748669307490266628066234834681651", "35912425237139282280862857217049716", "8403667750842100408848032938743687", "243923425826310448622835121517945", "67215767308941482484018633668639", "3936233038735520622419496924492", "229856331508072684650335516831", "41731964658879842015368067414", "5804050013656726216894863155", "384455014911398837473249460", "12890515302427610110563306", "3079566832669371121519636", "376412415825208233660599", "03053656307728056926548", "3358911937490851518192", "683702020139836669901", "41072222142719225891", "5179444356980147370", "686388781578151007", "44916559625966107", "8307104587452717", "137814935197988", "40595328606676", "4544850466233", "998235402856", "87058942031", "5753736234", "228009857", "40809732", "4889605", "267565", "83211", "1532", "685", "43", "7"};
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<string> questionMarkTriangle = {"??5?", "??9", "?4", "6"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"7054", "759", "24", "6"};
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<string> questionMarkTriangle = {"??????1??????", "????5???????", "????????8??", "????9?????", "0????????", "???????5", "?3?????", "??1???", "????5", "?8??", "??9", "?6", "1"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5856961956176", "331557041783", "64602745851", "0062919336", "068100269", "64910285", "0301203", "331323", "64455", "0890", "879", "56", "1"};
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<string> questionMarkTriangle = {};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"13163300465961979804446904137175090076330932", "4479630401457066784880594540882599073963925", "816593441592762352268543994860748970259217", "97142785641938587484397283246712767274138", "6856953105021335122726901560383933991541", "431548415523468634998591616311226280695", "74692256075704497387340777942348808654", "1051471672274836015074744636572688419", "156518739491219616571118099129846250", "61169502330330577128229898031720875", "7275452563363524830041777834892852", "992997719699876213045844517271037", "81186480558753834349328968998130", "9294028503528117773250754787943", "113420353870928440575729155637", "24762388157910284522291060190", "6138516962601202974410166109", "741367558861322161851172719", "15493203647454377936289980", "6932523901199704629807878", "525775291208674081787555", "77242710328431489855200", "4966981350274527730720", "352579485291979403792", "87726323710066343061", "5498955081062977367", "937740589168164093", "20414537074970492", "2455980771367431", "690478748493174", "59415512232481", "4356063455629", "781669790181", "59725669199", "4697125008", "056837508", "51410258", "6551273", "106390", "16929", "7511", "262", "88", "6"};
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<string> questionMarkTriangle = {"?????????????????????????????????????9????????", "?????????????????????????0???????????????????", "?????????????????????????????????????6??????", "?????????????????????????????5?????????????", "???????????????????????1??????????????????", "???????????????????????????????????5?????", "???????????????????????????????9????????", "??????????????????????????9????????????", "?????????????????5????????????????????", "???????????????????3?????????????????", "??????????????????????????????3?????", "6??????????????????????????????????", "???????8??????????????????????????", "????????????????????????????????5", "?????????0??????????????????????", "???????5???????????????????????", "?????6????????????????????????", "????????????1????????????????", "?7??????????????????????????", "???????????0???????????????", "?????1????????????????????", "??????????????????????9??", "?????7??????????????????", "??6????????????????????", "????????6?????????????", "???????????????????8?", "????9???????????????", "???????3???????????", "??????????9???????", "????????????9????", "???????????????0", "????????5??????", "?????????6????", "????????9????", "????????8???", "??4????????", "?????8????", "????????0", "????5???", "????5??", "??8???", "?2???", "??2?", "5??", "3?", "3"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"9568874943781542233953915462945993387949778841", "414651337059696456248206908139482615633645625", "55016460754555091862026598942320876196909187", "0517006729900590948228147736552853705599095", "568706391890549932040951409107038075048994", "14576920979593825244946549017731872542783", "5923512966442107768330193918404959796951", "415863152086317434163102209244344665546", "56349467284948177579412429168778021090", "1973303902332984226353661074545823199", "060633292565172648988927171999305408", "66696511711689802776719888088235948", "2255162882747782943380766886058432", "470678060911450137618732464653275", "17635866902595140379505600018592", "8398342592744654306455160019341", "127176741918019736090676010275", "39883315009810609699633611292", "2761646509791669558596972311", "937700159660725403345569542", "20470164526797943679015496", "2417170978366637936916935", "658887965192290629507528", "13665651601419681457270", "4921116761550549592997", "313227337605593441186", "44549060365042785294", "8993966391546953713", "782252920690548084", "50477112659592882", "5414823814441060", "955205195885166", "40725604363672", "4797164799939", "166870168822", "72457174604", "9692881064", "551069160", "06165076", "6771573", "348620", "72482", "9620", "582", "30", "3"};
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<string> questionMarkTriangle = {"???????????????0???????", "???????????????5??????", "?????????????9???????", "???????????5????????", "????6??????????????", "?????1????????????", "???????????6?????", "????????2???????", "???5???????????", "???????????9??", "????????9????", "???????4????", "???5???????", "???????1??", "?????6???", "??0?????", "??6????", "1?????", "?3???", "??1?", "??7", "2?", "3"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"36391988962015705555761", "9920076758216275000237", "812073323037892500250", "93270655330571750275", "2597610863528825292", "746371849870607711", "10908923757667482", "1998715022323120", "087586524555432", "85234176900975", "3757583590962", "022231849958", "24454923843", "6899315127", "478246639", "15060292", "6566211", "112832", "23015", "5316", "847", "21", "3"};
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<string> questionMarkTriangle = {"?????????????1??????????", "???????????8???????????", "???????????0??????????", "???????????????2?????", "??????????5?????????", "??????????????????0", "?9????????????????", "???????9?????????", "?????????????2??", "?????4?????????", "??????0???????", "?????????6???", "4???????????", "?????????5?", "?8????????", "????4????", "????2???", "6??????", "???5??", "????1", "?0??", "?5?", "?8", "3"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"084111112067111100101114", "82522223263822210111225", "0774445589104431122347", "741889037014874234571", "15967930715251657928", "6453623786776712610", "098985054343383871", "97773559777611158", "6440804644372263", "084884008709489", "82262408579327", "0488648326259", "426402158874", "68042363651", "4846599916", "220148807", "42152687", "6367845", "993529", "82871", "0058", "053", "58", "3"};
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<string> questionMarkTriangle = {"0?????????????????????????????????????????????????", "???????0?????????????????????????????????????????", "????????????0???????????????????????????????????", "???????????????????????????0???????????????????", "???????????0??????????????????????????????????", "????????????????????0????????????????????????", "?????????????????????????0??????????????????", "?????????????0?????????????????????????????", "?????????????????????????0????????????????", "??????0??????????????????????????????????", "????????????????????0???????????????????", "???????0???????????????????????????????", "?????????????0????????????????????????", "??????0??????????????????????????????", "???????????????????0????????????????", "?????????????????0?????????????????", "????????????????0?????????????????", "???????????????0?????????????????", "????????????0???????????????????", "?????0?????????????????????????", "???????????????????????0??????", "??????????????????0??????????", "????????????????????0???????", "????????????0??????????????", "?0????????????????????????", "????????????????????0????", "????????????0???????????", "???????????0???????????", "??????????????0???????", "?????????????????0???", "????????????????0???", "???????0???????????", "?????????????0????", "???????0?????????", "??0?????????????", "?????0?????????", "0?????????????", "????0????????", "???0????????", "?0?????????", "???????0??", "?0???????", "0???????", "??????0", "?????0", "??0??", "0???", "?0?", "?0", "0"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    vector<string> questionMarkTriangle = {"0"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0"};
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    vector<string> questionMarkTriangle = {};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"99999999999999999999999999999999999999999999999999", "8888888888888888888888888888888888888888888888888", "666666666666666666666666666666666666666666666666", "22222222222222222222222222222222222222222222222", "4444444444444444444444444444444444444444444444", "888888888888888888888888888888888888888888888", "66666666666666666666666666666666666666666666", "2222222222222222222222222222222222222222222", "444444444444444444444444444444444444444444", "88888888888888888888888888888888888888888", "6666666666666666666666666666666666666666", "222222222222222222222222222222222222222", "44444444444444444444444444444444444444", "8888888888888888888888888888888888888", "666666666666666666666666666666666666", "22222222222222222222222222222222222", "4444444444444444444444444444444444", "888888888888888888888888888888888", "66666666666666666666666666666666", "2222222222222222222222222222222", "444444444444444444444444444444", "88888888888888888888888888888", "6666666666666666666666666666", "222222222222222222222222222", "44444444444444444444444444", "8888888888888888888888888", "666666666666666666666666", "22222222222222222222222", "4444444444444444444444", "888888888888888888888", "66666666666666666666", "2222222222222222222", "444444444444444444", "88888888888888888", "6666666666666666", "222222222222222", "44444444444444", "8888888888888", "666666666666", "22222222222", "4444444444", "888888888", "66666666", "2222222", "444444", "88888", "6666", "222", "44", "8"};
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    vector<string> questionMarkTriangle = {};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"34567345673456734567345673456734567345673456734567", "7913079130791307913079130791307913079130791307913", "604376043760437604376043760437604376043760437604", "64703647036470364703647036470364703647036470364", "0173901739017390173901739017390173901739017390", "180291802918029180291802918029180291802918029", "98210982109821098210982109821098210982109821", "7031970319703197031970319703197031970319703", "734067340673406734067340673406734067340673", "07463074630746307463074630746307463074630", "7109371093710937109371093710937109371093", "819208192081920819208192081920819208192", "90128901289012890128901289012890128901", "9130791307913079130791307913079130791", "043760437604376043760437604376043760", "47036470364703647036470364703647036", "1739017390173901739017390173901739", "802918029180291802918029180291802", "82109821098210982109821098210982", "0319703197031970319703197031970", "340673406734067340673406734067", "74630746307463074630746307463", "1093710937109371093710937109", "192081920819208192081920819", "01289012890128901289012890", "1307913079130791307913079", "437604376043760437604376", "70364703647036470364703", "7390173901739017390173", "029180291802918029180", "21098210982109821098", "3197031970319703197", "406734067340673406", "46307463074630746", "0937109371093710", "920819208192081", "12890128901289", "3079130791307", "376043760437", "03647036470", "3901739017", "291802918", "10982109", "1970319", "067340", "63074", "9371", "208", "28", "0"};
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    vector<string> questionMarkTriangle = {"???2?", "3???", "8??", "?8", "6"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"12321", "3553", "808", "88", "6"};
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    vector<string> questionMarkTriangle = {"????3", "4???", "?8?", "?6", "8"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"59173", "4080", "488", "26", "8"};
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    vector<string> questionMarkTriangle = {"????0", "??0?", "?2?", "4?", "2"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"28460", "0206", "226", "48", "2"};
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    vector<string> questionMarkTriangle = {"???1?", "??2?", "4??", "8?", "6"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"11111", "2222", "444", "88", "6"};
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    vector<string> questionMarkTriangle = {"0????", "9???", "??1", "?0", "4"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"09762", "9638", "591", "40", "4"};
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    vector<string> questionMarkTriangle = {"?????2", "???1?", "??0?", "?0?", "6?", "4"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"783652", "51917", "6008", "608", "68", "4"};
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    vector<string> questionMarkTriangle = {"???????7???", "???????0??", "?3???????", "?????3??", "??????0", "???4??", "????1", "6???", "4??", "?9", "6"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"19462587340", "0308735074", "338508571", "61358328", "7483150", "121465", "33501", "6851", "436", "79", "6"};
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    vector<string> questionMarkTriangle = {};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"555555555555555510101010101010101010101010101", "00000000000000061111111111111111111111111111", "0000000000000067222222222222222222222222222", "000000000000063944444444444444444444444444", "00000000000069238888888888888888888888888", "0000000000065151666666666666666666666666", "000000000061666722222222222222222222222", "00000000067722394444444444444444444444", "0000000063494523888888888888888888888", "000000069733975166666666666666666666", "00000065606262672222222222222222222", "0000061166888839444444444444444444", "000067272466612388888888888888888", "00063999602273516666666666666666", "0069288562490867222222222222222", "065106318639843944444444444444", "61616949492727238888888888888", "7777533331999951666666666666", "444286664088846722222222222", "88604220486620394444444444", "6464642424282323888888888", "000006666600555166666666", "00006222260500672222222", "0006844486550639444444", "006428824105692388888", "06060606515151516666", "6666666166666667222", "222222772222223944", "44444949444445238", "8888333388889751", "666166616667626", "22772277223388", "4949494945616", "333333339177", "66666662084", "2222228282", "444440000", "88884000", "6662400", "228640", "40404", "4444", "888", "66", "2"};
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    vector<string> questionMarkTriangle = {"???????????????9????", "1??????????????????", "?????9????????????", "?3???????????????", "???8????????????", "???????????4???", "?????????1????", "????????????4", "?????4??????", "??3????????", "??9???????", "??3??????", "??????9?", "?3?????", "????4?", "???9?", "???0", "8??", "1?", "3"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"38119215854732897083", "1920136339105076781", "012149962015573359", "13353858216020684", "4688133037622642", "046946330384806", "40530963312286", "4583959643404", "931244507744", "24368957418", "6794742159", "363116364", "99427990", "8369689", "195547", "04091", "4490", "839", "12", "3"};
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    vector<string> questionMarkTriangle = {"??3???????????????????????", "????????????????1????????", "?????????????????3??????", "?????????????3?????????", "???????????????1??????", "8????????????????????", "??????????6?????????", "???????????????1???", "?????????????????2", "??????????1??????", "???8????????????", "???3???????????", "??????2???????", "????????????5", "???????1????", "???9???????", "????2?????", "??1??????", "?????7??", "??8????", "?????3", "?7???", "?1??", "??5", "2?", "4"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"12318746528452845623845238", "3549510170297029185129751", "893461187216721093631626", "72707295937393192994788", "9977914420022401183156", "864605862024641291461", "40065348226005310507", "4061872048605841557", "467959242465325602", "03644166601857162", "3908572261932878", "298329487025055", "17151325727550", "8866457299205", "642092918125", "06291109937", "6810219820", "491230702", "30353772", "3388049", "616843", "77427", "4169", "575", "22", "4"};
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    vector<string> questionMarkTriangle = {};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"6967564216467743425136522899", "553210637003417767649174078", "08531690703758433303081475", "8384759773023276633389512", "112124640325593296617463", "23336004357042515278109", "5669604782746766795919", "125564150910332364400", "37010565901365590840", "0711511491491049824", "782662530530143706", "50828783583157076", "5800551831462773", "380506914508940", "18556505958734", "9301155443507", "231260987857", "54386975532", "9714562085", "685918283", "43409001", "7749901", "413891", "54170", "9587", "435", "78", "5"};
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    vector<string> questionMarkTriangle = {};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"828266303679488155936558557560706774792142569999", "00082933936326960429103302216776341161356715888", "0080126229958556461013632437343975277481386366", "088138841843301007114995670077262794129414992", "86941625927631107825384137074988963531355381", "4535787419394217507812540771376759884480819", "988255150223638257593794748403324762828890", "76070665245991072242063112243656138000679", "3677621769480179466269423467911741800636", "934383835328186302885365703602815980699", "27711118850994932063891273962096478658", "9482229635983325269170390258295015413", "320441598471657785087329273014516954", "52485647218712453585051190315967549", "7623101939583698833556209346453293", "385411022431957616801829270098512", "13952124674042377481901197097363", "4247336031446504129091206796099", "661069634580154531990326365698", "27165597938169984089358991157", "9871046621975872487283780262", "758140283062359625901058288", "23954201368584587491153006", "5249621494332935130268306", "763583533765128643284136", "39831886031630407502549", "2714964634793447252793", "985350097162781977962", "73885096878959064658", "0163595455744960013", "179844990218356014", "86728389239181615", "4390117152099776", "729128867298643", "91030643917407", "0133607208147", "146967928951", "50553610746", "5508971710", "058768881", "53534669", "8887025", "665727", "21299", "3318", "649", "03", "3"};
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    vector<string> questionMarkTriangle = {};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"2239195547605860994595659732168923", "452004091365346983944114605374715", "97204490491870571238525065801186", "6924839430957528351377561381294", "516212373942270186404217419313", "67833500236497194044638150244", "3516850259036803448091965268", "867435274939483782890051784", "43178791322321050079056852", "7485560454553155076951437", "123016499908460573546570", "35317038898206520890127", "8848731677026172879139", "622504734728789056042", "84754107190557951646", "2129517809502646700", "331468589452800370", "64504337397080307", "0954760026788337", "949136028356160", "33049620181776", "6343582199843", "977830308727", "64513338599", "0964661348", "950027472", "45029119", "9521020", "473122", "10434", "1477", "514", "65", "1"};
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    vector<string> questionMarkTriangle = {"???????????????????????9????", "????????????0??????????????", "?????????0????????????????", "?????????????4???????????", "???????????????????0????", "????????????6??????????", "??????7???????????????", "???????????????????8?", "?????????????????7??", "????????????????3??", "???8??????????????", "????0????????????", "8???????????????", "7??????????????", "?????????????0", "????0????????", "????0???????", "6??????????", "?????4????", "??????2??", "??????8?", "2??????", "???6??", "?5???", "?5??", "?9?", "3?", "3"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"2605029958027393592942197281", "865521843829022841136306909", "41073927101924025249936599", "5170219811016427763829148", "687230792117069439101052", "45953761328765372011157", "9448037450531809212262", "382830195584989133488", "10013104032377046726", "1014414435504740398", "115855878054114327", "26330355859525759", "8963380334477224", "759618367814946", "24579193595330", "6926002844863", "518602028249", "69462220063", "5308442069", "838286265", "11004881", "2104269", "314685", "45043", "9547", "491", "30", "3"};
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    vector<string> questionMarkTriangle = {};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"206535442916468118173437611442710899494", "26188986107004929980770372586981878333", "8796774717704311878747309734579955166", "565341188474742955511039607926840672", "11875296211116140062132567618424639", "2952715832227754068345713379266092", "147986315449429464179284606182691", "51674946983361300586102066790850", "6731330571697430534712262369835", "304463528756173587183488595718", "34809870521780835891726344289", "7289757573858818370898978607", "907622220133699107877765467", "97384442146958017554431903", "6012886350543818209874093", "613064985597199029751492", "74360373046808921626531", "1796300340488713788184", "865930374426584056992", "41423301868132451581", "5565631944945696639", "011194038339155292", "12203431162060711", "3423774278266782", "765041695082350", "31545754580585", "4699229938533", "058141821386", "53955903414", "8240493755", "064432020", "60875222", "6852744", "437918", "70609", "7669", "325", "57", "2"};
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    vector<string> questionMarkTriangle = {"???3?", "?3??", "4??", "?2", "1"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"74932", "1325", "457", "92", "1"};
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    vector<string> questionMarkTriangle = {"??5?", "??9", "?4", "6"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"7054", "759", "24", "6"};
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    vector<string> questionMarkTriangle = {"1"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1"};
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    vector<string> questionMarkTriangle = {"???2", "??2", "?2", "2"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0002", "002", "02", "2"};
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    vector<string> questionMarkTriangle = {"??9?", "?6?", "?3", "5"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"9798", "667", "23", "5"};
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    vector<string> questionMarkTriangle = {"?????????3", "4????????", "????8???", "?6?????", "2?????", "????4", "???8", "??6", "?2", "4"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1313131313", "444444444", "88888888", "6666666", "222222", "44444", "8888", "666", "22", "4"};
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    vector<string> questionMarkTriangle = {"???2", "??9", "?2", "2"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1672", "739", "02", "2"};
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    vector<string> questionMarkTriangle = {"???????4", "???1???", "3?????", "????5", "??6?", "2??", "?1", "2"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"86365934", "4991427", "380569", "18515", "9366", "292", "11", "2"};
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    vector<string> questionMarkTriangle = {"4??", "?2", "1"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"457", "92", "1"};
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    vector<string> questionMarkTriangle = {};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"23226592868351715203102878029207198910383338979700", "5548141044186886723412055821127807701311661766670", "092955148594464395753250303239587471442727832237", "91140652343800724228575333552435118586999515450", "0254617577180796640322866807678629334588466995", "279078224898765204354042487335481267936202584", "96975046277531724789446625068929383629822732", "5562540894284896157380287564711211981704905", "018794873602275762018205210182332079874395", "19563250962492238219025731190565276751724", "0419575958631451030927204209511793326896", "450422443494596133919924629462862658475", "95464687733945746200816081308048813212", "4900045406239210820897689438842694533", "390049946852131802876347371626853986", "29043830437344982053971008788438274", "1947113470078370258268108556271091", "031824717075107273084918301898190", "34906188772617990382309131977909", "7396796549878689310539044064699", "025365193755447241582948460058", "27891602020981965630132206053", "9570762222979051193145426658", "427738444166956202459968213", "69401288572541822694854034", "5341306329795904853239437", "875436951664494238552370", "52979546720833651307507", "7166490392816916437257", "872039321097507070972", "59232253196257777969", "4155478405872444655", "560915245359688010", "16906769884546811", "7596335762990492", "245968238189431", "69454051997374", "5399456086001", "828391684601", "00120742061", "0132716267", "145987883", "59475561", "4312017", "743218", "17539", "8282", "000", "00", "0"};
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    vector<string> questionMarkTriangle = {"???1??", "??2??", "?3??", "4??", "5?", "6"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"001151", "01266", "1382", "410", "51", "6"};
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    vector<string> questionMarkTriangle = {"8????", "??5?", "??9", "?4", "6"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"89140", "7054", "759", "24", "6"};
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    vector<string> questionMarkTriangle = {"4????", "???5", "??3", "?2", "1"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"45623", "9185", "093", "92", "1"};
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    vector<string> questionMarkTriangle = {"4??", "2?", "1"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"481", "29", "1"};
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    vector<string> questionMarkTriangle = {"????????7", "????9???", "????1??", "9?????", "????3", "???8", "??2", "?0", "1"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"882181127", "60399239", "6328152", "950967", "45953", "9448", "382", "10", "1"};
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    vector<string> questionMarkTriangle = {"????????????1", "???????????1", "??????????1", "?????????1", "????????1", "???????1", "??????1", "?????1", "????1", "???1", "??1", "?1", "1"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0000000000001", "000000000001", "00000000001", "0000000001", "000000001", "00000001", "0000001", "000001", "00001", "0001", "001", "01", "1"};
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    vector<string> questionMarkTriangle = {"6???", "??9", "0?", "6"};
    RevealTriangle* pObj = new RevealTriangle();
    clock_t start = clock();
    vector<string> result = pObj->calcTriangle(questionMarkTriangle);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"6709", "379", "06", "6"};
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=22263204&rd=12176&pm=8215
********************************************************************************
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
 
using namespace std;
 
class RevealTriangle {
public:
  vector <string> calcTriangle(vector <string>);
};
 
vector <string> RevealTriangle::calcTriangle(vector <string> s) {
  int n = s.size(), i, j, k, p;
  for (i=n-2;i>=0;i--) {
    k = 0;
    for (j=0;j<n-i;j++)
      if (s[i][j] != '?') {
        k = j;
        break;
      }
    for (j=k-1;j>=0;j--) {
      p = s[i+1][j]-s[i][j+1];
      if (p < 0) p += 10;
      s[i][j] = p+48;
    }
    for (j=k+1;j<n-i;j++) {
      p = s[i+1][j-1]-s[i][j-1];
      if (p < 0) p += 10;
      s[i][j] = p+48;
    }
  }
  return s;
}
 
 
//Powered by [KawigiEdit] 2.0!

********************************************************************************
*******************************************************************************/