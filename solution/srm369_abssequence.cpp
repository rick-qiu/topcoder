/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=8178
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class AbsSequence {
public:
    vector<string> getElements(string first, string second, vector<string> indices);
};

vector<string> AbsSequence::getElements(string first, string second, vector<string> indices) {
    vector<string> ret;
    return ret;
}


int test0() {
    string first = "21";
    string second = "12";
    vector<string> indices = {"0", "1", "2", "3", "4"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"21", "12", "9", "3", "6"};
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    string first = "0";
    string second = "0";
    vector<string> indices = {"1000000000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0"};
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    string first = "679799";
    string second = "145184";
    vector<string> indices = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"679799", "145184", "534615", "389431", "145184", "244247", "99063", "145184", "46121", "99063", "52942", "46121", "6821", "39300", "32479", "6821", "25658", "18837", "6821", "12016", "5195", "6821", "1626", "5195", "3569", "1626", "1943", "317", "1626", "1309", "317", "992", "675", "317", "358", "41", "317", "276", "41", "235", "194", "41", "153", "112", "41", "71", "30", "41", "11", "30"};
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    string first = "0";
    string second = "0";
    vector<string> indices = {"946882563", "3325458438133692", "56397087", "7556708135121389", "975636966936258948", "91190212", "2", "806308693", "917794923111756115", "2758", "78", "2097378433894451", "5", "18604580012723", "1000000000000000000", "3587602205", "489748325267", "3711", "788567732157899012", "7103543395464700", "3134995148455374", "358504082028", "757", "90264", "5", "2679395741731079", "42893723", "8126", "745101", "132", "999999999999999999", "0", "97513335568956", "85788963874580", "13270193115789", "9", "73556700065", "44604643163934896", "377913722316725669", "280", "26696275881132", "919733524", "491487", "929526874970", "904804", "6779", "999999999999999998", "6673733832", "1", "4044448570"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"};
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    string first = "0";
    string second = "1000000000000000000";
    vector<string> indices = {"110", "8972789502844", "4498196975504562", "2667008176", "45591196609667598", "1441128273065", "329", "1000000000000000000", "845710740", "3458006270653851", "326", "5412876625076", "174331758", "370", "6852906", "99627682704", "775151379447", "33198974143", "999999999999999999", "4690553583665664", "2", "28701213219", "81921409392072350", "82514", "0", "456468", "1208282", "931019441922208", "5725", "939", "87380512400970", "50089233721807606", "95568", "155306728619516868", "8882697393", "875642425737798", "82846315", "3927084", "25443668347884977", "644", "45620", "1", "576902332996236384", "935253", "301512888577409146", "999999999999999998", "319", "1064100467404585", "67739544173201975", "13073"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    string first = "1000000000000000000";
    string second = "0";
    vector<string> indices = {"2", "6892", "79243581400287", "999999999999999998", "85773753032", "839760689699707", "14255760161779", "6254111842", "7030", "69206135473647", "37381103291838", "7163", "0", "71781603806", "9", "88154050464530", "698970612769", "46916173363", "32118939603177", "320", "19111149", "2351726", "4142589", "5643004276", "899", "3294933", "1338164511671", "57416205063357405", "1861", "9", "545207985435", "1763070625125", "163994", "5536129245", "1", "860080965920231441", "77807069493", "7656703902", "21304607622", "1000000000000000000", "8", "999999999999999999", "31", "505419292", "8", "7", "152359", "52", "9795382771770", "214666917"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    string first = "1000000000000000000";
    string second = "1000000000000000000";
    vector<string> indices = {"149766708860", "999999999999999998", "872051686166", "5293", "34049", "3087421", "479", "98975667551", "330749", "848674", "87", "2", "237741617105345869", "951584619739752112", "83033407355050672", "25217166208881899", "1740534439605", "912255801252200", "37903913", "69216945011527", "109", "73", "1", "870197082104790372", "19208071300", "243535684746494079", "9", "335644789167811", "2683522900", "999999999999999999", "46718181575606", "104804332347848550", "11305", "6699534", "8811545556", "376388016455", "0", "82", "1000000000000000000", "428219842300", "6858223976377773", "66185234", "587", "963", "1367606579429685", "5004460088119349", "1041519514220933", "74292643817455", "3990425501314489", "6448"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    string first = "823";
    string second = "470";
    vector<string> indices = {"3", "1", "31", "0", "8", "29", "57", "75", "8", "77"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"117", "470", "2", "823", "115", "87", "49", "25", "115", "23"};
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    string first = "710370";
    string second = "177300";
    vector<string> indices = {"5", "95", "164721", "418", "3387", "710", "0", "1197", "19507", "5848"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"178470", "108270", "90", "0", "90", "90", "710370", "90", "0", "0"};
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    string first = "69087526420635";
    string second = "150";
    vector<string> indices = {"489123561266230145", "3403", "267", "894900279", "581951364", "9355397", "21485593594590", "23117819066355425", "293781346", "351057494", "7325646753", "3254747280", "960032474511", "3707840858428", "230328989522205248", "1228432774412393", "94", "32421842798462", "690", "45823944787", "626295425675", "1097262025", "7204508486548", "299672406470", "65119381", "674690237573", "604805567790", "7329568", "5565911792", "1498548", "787205729218777", "19038701670", "552129848287", "66217305046593914", "502525811570734073", "43976", "21917117", "9714569613164", "769094234315040607", "837065545018863", "14081394", "7530401", "72557323614", "39", "3159158", "296918303642485410", "8444343040", "567613650519932732", "482853166975664", "7583372"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"15", "150", "69087526393935", "68998036392735", "69029331284235", "69086590880985", "15", "15", "150", "69052420671285", "68354961745335", "68762051692635", "15", "0", "15", "15", "150", "15", "69087526351635", "150", "6457983853185", "150", "0", "39120285773685", "150", "1618502663385", "8606969641635", "150", "68530935241485", "69087376565835", "0", "67183656253635", "150", "15", "15", "69087522023085", "69085334708985", "15", "0", "15", "69086118281235", "69086773380585", "61831794059235", "69087526416735", "69087210504885", "15", "150", "15", "15", "69086768083485"};
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    string first = "50335946";
    string second = "25";
    vector<string> indices = {"8280276883907", "84", "431789647564", "4", "9924631792400", "3083781343190", "5431803656", "70321411665692813", "2", "2096", "37", "3798", "9079423", "98502247071420978", "1007", "746919540680082778", "5412809", "4730906189", "2571827092", "9875488975", "2738935493696", "6652587", "58", "6814626705171", "9401704550353934", "559579197860891335", "541545438181", "686726", "896849521149441", "82588891584", "4867658", "32770874377102", "65229482743286405", "38203", "82076792959936", "848", "221738", "2572652", "332302", "951642842", "7812408313", "98754206", "900", "1759614597786699", "10616875415", "820819514418101", "6177644", "2", "6606137", "6352313320"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "50334546", "1", "25", "1", "1", "1", "1", "50335921", "50301021", "25", "50272646", "1", "0", "50319171", "1", "1", "1", "1", "1", "1", "0", "25", "0", "1", "1", "1", "38890521", "0", "0", "1", "1", "1", "25", "1", "50321821", "46640321", "7458421", "25", "1", "1", "1", "50320946", "0", "1", "1", "1", "50335921", "1", "1"};
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    string first = "285444641";
    string second = "73065194997023";
    vector<string> indices = {"1516368436532292", "23", "53196035368", "237689776956023326", "7763", "81211196696", "87286449087995043", "2956870330", "2583900", "882486723", "70626719921901", "36023335312952738", "726", "48075573", "5665393", "204923", "54", "395", "63776", "875699817291", "2703422", "570455282", "638", "767", "4377530354", "83387389763688143", "181937319", "1751089685011813", "79", "54574652618", "505231119527048145", "654843054203214412", "4663", "86504951322", "116495896716", "721", "311", "76170127733399691", "5341", "748056", "78", "1243", "339", "415591023247", "121070620", "384", "297863590304", "161161337359227", "4030164591", "2091123398"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "73060913327408", "1", "1", "71588018979848", "0", "1", "1", "1", "1", "1", "0", "285444641", "1", "1", "34069175366808", "285444641", "72990123056440", "60928945195626", "1", "0", "0", "72943881024598", "72919332785472", "0", "0", "1", "1", "73050351875691", "0", "1", "1", "72178033052795", "1", "1", "72928181569343", "73006107956336", "1", "72049012075063", "1", "285444641", "72828846834275", "285444641", "1", "1", "285444641", "0", "1", "1", "0"};
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    string first = "519";
    string second = "4684167838288";
    vector<string> indices = {"56352788232", "2539137338", "14277", "53506016", "223478708140335133", "704", "49717719925", "409", "80488970456", "739366680087679", "4720056985", "9", "27355", "652", "2235123179943998", "20744", "565016243325", "15109717955", "53", "6", "408977128222140088", "674692375426884971", "812", "81245", "901820310751512540", "132", "3", "782", "23281220519", "138912113", "7812819841729", "553152730657012", "5082892735", "784504", "126706254526", "358946088453366346", "358", "67301426237793", "777797528115612", "28141", "3998", "701182", "14489", "29595141392155", "7", "1998526", "6", "837251356070", "25822", "58565405763283725"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "3805626319513", "519", "4665654756925", "0", "4684167594877", "0", "4684167697120", "1", "0", "3051028121824", "519", "4684158373804", "4684167613042", "1", "4684160661037", "1", "1", "4684167820123", "519", "0", "1", "4684167557509", "4684139727691", "1", "519", "519", "4684167567889", "1", "4636104247363", "0", "0", "2925486952324", "4683896400250", "0", "0", "4684167714766", "1", "1", "4684158101848", "4684166455153", "4683925229662", "4684162825267", "0", "4684167836212", "4683476348638", "519", "1", "4684158904222", "1"};
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    string first = "6";
    string second = "30757921701";
    vector<string> indices = {"526333821523071524", "6996120013621", "1899", "6508", "31601339574", "175629358766404109", "5827478159909", "277305701", "836569204", "99714", "303251042412156094", "7310389413", "259", "682577402216938", "67575", "38", "244", "18051", "141914", "35551", "24794383", "85770399873095577", "31365228107980", "6025834249056656", "963729126959075102", "933894392", "17799983330", "902039538937", "98080601", "82743700822680263", "743649347593782", "3866065960352", "1875930289444", "123806579073", "43891915512196", "897262038695", "7045447146", "3240946604561", "524191999095495", "5076306951", "49661443", "87841459655331398", "273772359", "89", "13", "7066550683300", "26578647286025", "77411916657980", "67195460958395", "440191699608"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"3", "3", "6", "30757895673", "0", "3", "3", "29648698899", "27411644889", "6", "3", "6", "30757920669", "3", "6", "30757921551", "30757920729", "6", "30757354047", "30757779501", "30658744173", "0", "3", "3", "3", "27022344135", "3", "3", "30365599299", "3", "0", "3", "3", "0", "3", "3", "6", "3", "0", "6", "30559275933", "3", "6", "30757921347", "30757921653", "3", "3", "3", "3", "0"};
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    string first = "39";
    string second = "559709814478208853";
    vector<string> indices = {"9001681429395309", "313435712923658", "905471", "177243981", "17364072", "43117123", "88348635094", "7742561813986424", "59528379466", "4", "248750349", "7335321835", "9098566563219", "2610107", "39603756050625879", "83764640", "212173097", "254071599", "259312173606441", "39430890401933", "2418996", "9734552", "4591835822417817", "6774700935144787", "1885416", "149607", "3882878", "727854967513583299", "79168109194", "962537791681", "8905396031", "81881803403", "8610115", "27169765568", "62261719919", "82485", "706255311812", "9749679511504", "14891233204", "77229096939", "64395265954822", "74553408266575", "4069268512", "3954", "46326605395006704", "8244172029800", "1077424112198008", "56", "394490012489", "47503"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"39", "551560485942193758", "559709814454666620", "39", "39", "559709813357163681", "559707517413696435", "358403207314561842", "559708266740342763", "559709814478208775", "39", "559709623759841169", "39", "559709814410346084", "3", "559709812300328226", "559709808961708344", "39", "39", "558684611327758608", "39", "559709814225110514", "39", "383567590164444417", "39", "39", "559709814377254038", "3", "559707756107369835", "559684788495625173", "559709582937912060", "559707685551320388", "559709814254345889", "559709108064304098", "559708195673490972", "39", "559691451840101754", "559456322810909775", "559709427306145575", "39", "558035537563383507", "557771425863277929", "559709708677227567", "39", "3", "559495466005434066", "531696787561060671", "559709814478207410", "559699557737884152", "559709814476973801"};
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    string first = "5";
    string second = "2";
    vector<string> indices = {"285066533", "1508", "838065783395213", "329889166658732981", "19230031662753", "6266", "7933593", "58328809830914", "10412", "37084748406187", "471", "9", "9183515588181", "5210257327665", "846", "3312882", "3771933568", "46460", "4", "50331", "60136", "0", "371096", "198", "69047921466095702", "36664445", "83968", "390676496", "52877244669977087", "5532", "9859830", "8668097230564063", "89676849887603520", "8", "160379579986305865", "66734922", "570219475389719776", "7525197056", "74", "297619739485438", "322", "76610", "4324602820691784", "756036730", "7312198879620", "850823192879330275", "65546468", "6564425558660087", "261886646738759", "67439700071696"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "1", "1", "1", "1", "1", "1", "1", "1", "0", "1", "1", "1", "1", "1", "1", "0", "1", "2", "1", "0", "5", "1", "1", "1", "1", "0", "1", "1", "1", "1", "0", "1", "1", "0", "1", "0", "1", "1", "0", "0", "1", "1", "0", "1", "0", "1", "1", "1", "1"};
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    string first = "2804941";
    string second = "51161663";
    vector<string> indices = {"304916789431", "996382", "956008088066", "27438", "646521908205287", "73902045260087923", "65589825499", "78781786698", "2914216586223", "185850", "544587575045", "215932426078", "7787933503587956", "5796875", "372059", "1176970530405187", "394", "13691081060", "679992171", "506236146", "813623386", "737923579223979", "47", "60766943808", "7616893", "1436", "45", "57", "187190", "16585765600951", "37156041", "87149", "12729423184674", "91228384864", "4514600817", "237770691408699881", "9970227411624", "680503367370532308", "694859102571601469", "27316514972", "1", "24", "6474915", "6719467", "850118018", "4830", "2901969596304", "140079187503565", "528957653651941", "84"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "1", "0", "1", "0", "1", "1", "1", "1", "1", "0", "1", "0", "0", "0", "1", "1", "0", "1", "1", "1", "1", "79478", "1", "1", "0", "90999", "1169", "0", "1", "1", "0", "1", "1", "1", "0", "1", "1", "0", "0", "51161663", "2804941", "1", "1", "0", "1", "1", "1", "1", "127"};
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    string first = "81";
    string second = "246973247";
    vector<string> indices = {"5544230579636195", "643420204836002575", "3447", "300764258095514", "730760770031850029", "810", "2014433605835943", "3", "2162112478433", "93329572441", "3819778903", "58033092", "20806", "19", "699003441747", "31630028", "400794", "244", "7931348054586", "7311568", "97936954", "17071166204884", "42145", "83051148346", "2369", "871403296101028281", "6", "755622985947", "963046993", "310141531671970778", "340352017609204345", "5263742", "509637", "6876851616674", "965950", "3420171128453154", "2644664096", "59213", "9057761368", "415046053417292", "82", "495781115398", "60573864", "9298693", "544027", "871805689854506", "9444075452247834", "73967924", "440", "940578"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0", "1", "81", "0", "0", "81", "1", "81", "0", "1", "1", "1", "245849777", "246972275", "1", "0", "81", "246960125", "1", "1", "1", "1", "244697471", "1", "246845348", "1", "81", "1", "1", "0", "1", "0", "81", "0", "194812001", "1", "0", "243775772", "1", "0", "246968873", "1", "1", "1", "217595843", "0", "1", "0", "246949514", "81"};
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    string first = "132410236698557";
    string second = "1502589";
    vector<string> indices = {"73244411", "45191051227129", "2953254614", "9481707942", "90862978373213", "4364", "978015438651306721", "6397152951285886", "250", "938", "391", "6447035108", "9481861", "1", "12881527235", "403437372", "79387538", "712070453", "242665185047", "9277300661450", "7038740092922879", "647330964114", "585682", "31407", "459", "282437807", "655283000173626", "350063527", "6984036911305458", "182", "22132259118790005", "72640615", "172560362144", "46480086364", "745972053303", "8124788679702064", "86941926", "540398545773923", "6982420", "208791", "16145905", "4220016894127471", "28", "6735400298989155", "76406778685901379", "233941308422302", "95", "17404923272", "986618674923387", "512"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"59039406346034", "1", "0", "1", "0", "132405865667156", "1", "1", "1502589", "132409297580432", "1502589", "0", "1502589", "1502589", "0", "1", "52885676308832", "0", "0", "0", "0", "1", "1502589", "132378775490075", "132409776906323", "0", "1", "1", "1", "132410054885288", "1", "1502589", "0", "1", "1", "1", "45318248934281", "0", "1502589", "132201085325291", "1502589", "1", "1502589", "1", "1", "1", "132410142035450", "0", "1", "132409724315708"};
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    string first = "775454743473735414";
    string second = "582206104141946263";
    vector<string> indices = {"94975", "2", "618754932594", "531784", "624318677325546", "916310", "5421236133107748", "530472", "311464667031", "641091780183820", "679670277239961334", "679746574841144", "833953374242756246", "7357838535107", "154350762504666", "6", "9738626917", "0", "4821079975254245", "2594304376", "968712295", "69401254356838275", "8473330863765808", "3942455844", "31005125", "12", "434079697584179", "37004", "944532775", "71", "94625272722", "403", "364498702557", "8534", "54158", "4040", "3", "4", "233", "3301126005478613", "1816172989024574", "411131", "1277341911", "6823026780", "51084544", "47928930458415", "9", "7119179952205", "3566221825789", "8276413263716"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "193248639331789151", "0", "1", "0", "1", "0", "0", "0", "1", "1", "1", "1", "1", "0", "2460186146578810", "1", "775454743473735414", "1", "1", "1", "0", "1", "0", "1", "2460186146578810", "1", "1", "1", "85000448882321511", "0", "1", "0", "1", "1", "1", "388957464810157112", "195708825478367961", "1670743577", "1", "1", "1", "0", "0", "1", "0", "2460186146578810", "1", "1", "1"};
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    string first = "941808592707228807";
    string second = "45699837011854883";
    vector<string> indices = {"79405485701925863", "9585", "0", "412890", "90291", "332307", "7537199333878982", "77518", "74", "56422410377909934", "793073260", "67419133204", "394280914003345143", "8015550908", "98227", "2691", "7", "51", "8298891558359", "8292102865510933", "1347", "45", "6717", "4048274090690", "3074225265", "43218587585", "221369116336", "969603833002", "95", "794", "999123", "2051818134003", "281190600938138", "903545534903", "7103782606", "45520152185", "2534", "4379", "90208997219728368", "2100071542147", "4353241", "7732070", "4804111314612", "557", "595", "50451457", "2574337121", "635305", "109401849267998444", "8489"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0", "11", "941808592707228807", "11", "11", "11", "0", "11", "38111758261214", "11", "11", "11", "11", "0", "11", "11", "45699837011854883", "125111352951981", "0", "11", "11", "125111352951981", "11", "0", "11", "0", "11", "11", "24396749683328", "0", "11", "11", "0", "0", "11", "0", "0", "0", "11", "11", "11", "0", "11", "0", "11", "11", "0", "11", "0", "0"};
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    string first = "414966015934632298";
    string second = "566481934078275889";
    vector<string> indices = {"0", "5198854", "826416499", "191306545654871897", "2241287088629", "167672", "7824413384902268", "3898939070", "429146634278987296", "623021585032987832", "16", "4236736677433787", "2952762664864", "1049455414", "7819991978211464", "8593056072074973", "49", "1668973", "4528240", "7582942031979", "33368533717", "63808922404", "2860747932974529", "21", "930592614734609463", "67324", "3994599222", "60216", "37810", "11621467", "205", "902863990975", "768001958386000", "74839391202", "13959369027667621", "66474", "28803974349832770", "23386823967409", "22", "41789265481895961", "60913412", "65", "834084048378756", "3", "26696330591392", "9229701737", "36748161606533", "802232014786", "720619", "8"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"414966015934632298", "19", "19", "19", "19", "19", "19", "19", "19", "19", "12337595130097239", "19", "19", "19", "19", "0", "1139691094485", "19", "19", "0", "19", "19", "0", "2957606182540172", "0", "19", "0", "0", "19", "19", "5149", "19", "19", "0", "19", "0", "0", "19", "1284476553003379", "0", "19", "60615007241", "0", "414966015934632298", "19", "19", "19", "19", "19", "72352441151046641"};
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    string first = "661536408350471337";
    string second = "201487064265478154";
    vector<string> indices = {"58077919259", "73", "52619311982199660", "0", "399", "68744007965", "10014202", "3969936453886636", "83139", "22", "32080536939", "485604601", "374978655", "5", "4360", "695", "8209630837565", "7", "4769114564943", "261", "81937193273", "530235031915", "78532281676619031", "44403065179945267", "26", "97491790006753", "9", "461155693265010", "394", "4112541", "678396078", "35038740258", "9569972128247", "23887037", "829", "426576862796657", "6540819994", "55", "4", "25058452832", "0", "9774", "944344085487654", "96301", "2398516368725627", "76896", "4184797548718066", "807", "42981455103", "443"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "9194132848696", "1", "661536408350471337", "1", "1", "0", "0", "1", "767159270916118", "1", "0", "1", "57075215554036875", "0", "1", "1", "87336633157404404", "1", "1", "1", "0", "1", "0", "378982569033711", "0", "30261417603367529", "1", "0", "1", "1", "1", "1", "1", "0", "1", "0", "9194132848696", "201487064265478154", "1", "661536408350471337", "1", "1", "0", "1", "1", "0", "1", "1", "1"};
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    string first = "158627591217181636";
    string second = "387669863703152972";
    vector<string> indices = {"23690454634", "109101257655160986", "40367", "599", "7762240270", "560915327", "216557207381978", "639305897873737", "41631551734761", "20641", "5", "890138969200279205", "91978579733537801", "5855195", "66928895204587667", "81", "7748518456725", "875740602447819", "7050971039", "2609997803065649", "4671005944969", "4254613966430", "112116018172669", "32003756437554", "69790", "2", "803756050016949359", "85203", "79343", "36000043789147", "294334027873266703", "817", "6", "4766762488045604", "91", "23851433923832", "97", "472", "7589248426515371", "272091", "9287018445", "48", "481593069", "573059654621327985", "6317", "7", "33827417", "342", "108953174000059666", "2840104005993591"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"4", "4", "0", "0", "4", "0", "0", "4", "4", "4", "88212909948391936", "0", "0", "0", "0", "117702347852", "4", "4", "0", "0", "4", "0", "4", "4", "4", "229042272485971336", "0", "4", "0", "4", "4", "4", "17798228679602236", "0", "28009899524", "0", "20459566516", "4", "0", "4", "4", "677092787978868", "4", "4", "0", "70414681268789700", "0", "4", "4", "4"};
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    string first = "518715872363719256";
    string second = "658447569688035606";
    vector<string> indices = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"518715872363719256", "658447569688035606", "139731697324316350", "518715872363719256", "378984175039402906", "139731697324316350", "239252477715086556", "99520780390770206", "139731697324316350", "40210916933546144", "99520780390770206", "59309863457224062", "40210916933546144", "19098946523677918", "21111970409868226", "2013023886190308", "19098946523677918", "17085922637487610", "2013023886190308", "15072898751297302", "13059874865106994", "2013023886190308", "11046850978916686", "9033827092726378", "2013023886190308", "7020803206536070", "5007779320345762", "2013023886190308", "2994755434155454", "981731547965146", "2013023886190308", "1031292338225162", "981731547965146", "49560790260016", "932170757705130", "882609967445114", "49560790260016", "833049177185098", "783488386925082", "49560790260016", "733927596665066", "684366806405050", "49560790260016", "634806016145034", "585245225885018", "49560790260016", "535684435625002", "486123645364986", "49560790260016", "436562855104970"};
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    string first = "812894975391463744";
    string second = "520833657830179648";
    vector<string> indices = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"812894975391463744", "520833657830179648", "292061317561284096", "228772340268895552", "63288977292388544", "165483362976507008", "102194385684118464", "63288977292388544", "38905408391729920", "24383568900658624", "14521839491071296", "9861729409587328", "4660110081483968", "5201619328103360", "541509246619392", "4660110081483968", "4118600834864576", "541509246619392", "3577091588245184", "3035582341625792", "541509246619392", "2494073095006400", "1952563848387008", "541509246619392", "1411054601767616", "869545355148224", "541509246619392", "328036108528832", "213473138090560", "114562970438272", "98910167652288", "15652802785984", "83257364866304", "67604562080320", "15652802785984", "51951759294336", "36298956508352", "15652802785984", "20646153722368", "4993350936384", "15652802785984", "10659451849600", "4993350936384", "5666100913216", "672749976832", "4993350936384", "4320600959552", "672749976832", "3647850982720", "2975101005888"};
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    string first = "62940201841270625";
    string second = "639527975618095982";
    vector<string> indices = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"62940201841270625", "639527975618095982", "576587773776825357", "62940201841270625", "513647571935554732", "450707370094284107", "62940201841270625", "387767168253013482", "324826966411742857", "62940201841270625", "261886764570472232", "198946562729201607", "62940201841270625", "136006360887930982", "73066159046660357", "62940201841270625", "10125957205389732", "52814244635880893", "42688287430491161", "10125957205389732", "32562330225101429", "22436373019711697", "10125957205389732", "12310415814321965", "2184458608932233", "10125957205389732", "7941498596457499", "2184458608932233", "5757039987525266", "3572581378593033", "2184458608932233", "1388122769660800", "796335839271433", "591786930389367", "204548908882066", "387238021507301", "182689112625235", "204548908882066", "21859796256831", "182689112625235", "160829316368404", "21859796256831", "138969520111573", "117109723854742", "21859796256831", "95249927597911", "73390131341080", "21859796256831", "51530335084249", "29670538827418"};
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    string first = "323445926417166688";
    string second = "517659416881999185";
    vector<string> indices = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"323445926417166688", "517659416881999185", "194213490464832497", "323445926417166688", "129232435952334191", "194213490464832497", "64981054512498306", "129232435952334191", "64251381439835885", "64981054512498306", "729673072662421", "64251381439835885", "63521708367173464", "729673072662421", "62792035294511043", "62062362221848622", "729673072662421", "61332689149186201", "60603016076523780", "729673072662421", "59873343003861359", "59143669931198938", "729673072662421", "58413996858536517", "57684323785874096", "729673072662421", "56954650713211675", "56224977640549254", "729673072662421", "55495304567886833", "54765631495224412", "729673072662421", "54035958422561991", "53306285349899570", "729673072662421", "52576612277237149", "51846939204574728", "729673072662421", "51117266131912307", "50387593059249886", "729673072662421", "49657919986587465", "48928246913925044", "729673072662421", "48198573841262623", "47468900768600202", "729673072662421", "46739227695937781", "46009554623275360", "729673072662421"};
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    string first = "678935300496918275";
    string second = "810629111547509162";
    vector<string> indices = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"678935300496918275", "810629111547509162", "131693811050590887", "678935300496918275", "547241489446327388", "131693811050590887", "415547678395736501", "283853867345145614", "131693811050590887", "152160056294554727", "20466245243963840", "131693811050590887", "111227565806627047", "20466245243963840", "90761320562663207", "70295075318699367", "20466245243963840", "49828830074735527", "29362584830771687", "20466245243963840", "8896339586807847", "11569905657155993", "2673566070348146", "8896339586807847", "6222773516459701", "2673566070348146", "3549207446111555", "875641375763409", "2673566070348146", "1797924694584737", "875641375763409", "922283318821328", "46641943057919", "875641375763409", "828999432705490", "46641943057919", "782357489647571", "735715546589652", "46641943057919", "689073603531733", "642431660473814", "46641943057919", "595789717415895", "549147774357976", "46641943057919", "502505831300057", "455863888242138", "46641943057919", "409221945184219", "362580002126300"};
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    string first = "740657605662440266";
    string second = "61576643810166";
    vector<string> indices = {"999999999999999999", "18128", "18163", "18084", "18171", "18098", "999999999999999998", "18091", "18102", "18144", "18049", "18147", "18101", "18141", "14768", "18122", "18131", "18194", "18161", "497782363899610112", "18043", "18165", "18080", "18117", "18081", "18040", "18082", "18130", "18195", "18146", "18149", "18177", "18152", "18133", "18172", "18159", "18140", "18132", "18184", "18066", "18191", "18089", "18157", "18126", "18178", "18125", "18166", "18108", "18188", "18124"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"2", "3596132", "358", "24741520870", "86", "2487445580", "0", "9076322150", "1021565218", "87910", "6640988755694", "19822", "148105048", "87910", "134435547351355996", "26744104", "3596132", "0", "444", "0", "61576643810166", "86", "62512689832", "72254458", "24741520870", "61576643810166", "37771168962", "785590", "2", "34044", "5600", "30", "5600", "785590", "14", "1690", "209864", "2810542", "10", "451936252230", "0", "10394097464", "2134", "11573986", "14", "3596132", "358", "429145026", "4", "15170118"};
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    string first = "6";
    string second = "1991631421488673";
    vector<string> indices = {"999999999999999998", "497907855372180", "497907855372177", "497907855372164", "497907855372166", "497907855372181", "5", "1", "999999999999999999", "2", "3", "497907855372172", "97047680615777", "497907855372167", "497907855372174", "1000000000000000000", "715091075853999616", "497907855372176", "497907855372168", "497907855372169", "497907855372170", "497907855372165", "497907855372179", "37396849217498376", "999999999999999997", "122528180741485", "445651537630315", "0", "497907855372175", "497907855372171", "4", "497907855372182", "497907855372178", "818011889374750208"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "0", "0", "19", "13", "1", "1991631421488655", "1991631421488673", "0", "1991631421488667", "6", "1", "1603440699025567", "7", "2", "1", "1", "1", "6", "1", "5", "6", "1", "0", "1", "1501518698522737", "209025270967417", "6", "1", "4", "1991631421488661", "1", "1", "1"};
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    string first = "7183574698409";
    string second = "189736238785";
    vector<string> indices = {"120", "132", "69", "88", "84", "66", "6", "82", "67", "225", "1", "124", "999999999999999997", "108", "74", "217", "234", "175", "129", "127", "207", "237", "97", "52", "228", "819156733734863744", "100", "133", "107", "13", "86", "77", "240", "229", "76", "227", "203", "199", "110", "230", "56", "79", "214", "202", "57", "222", "104", "115", "220", "80"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"225331", "24571", "16563153745", "141254765", "155172477", "26402375421", "6424629743269", "169090189", "21482764583", "11", "189736238785", "25095", "1", "7684777", "4919610838", "57", "1", "10423", "74761", "25095", "353", "1", "57748493", "189736238785", "7", "0", "29913069", "25095", "9762422", "189736238785", "13917712", "1310968376", "1", "5", "1804321231", "2", "524", "2039", "5607132", "2", "163333863364", "817615521", "57", "991", "26402375421", "11", "13917712", "826039", "35", "324262666"};
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    string first = "38392795";
    string second = "79094264883917103";
    vector<string> indices = {"639925909262021248", "3090199642", "100732615773031056", "3090199543", "3090199640", "3090199572", "3090199535", "1", "0", "3090199567", "3090199575", "3090199538", "3090199610", "3090199648", "999999999999999999", "3090199570", "2", "3090199533", "3090199607", "3090199536", "3090199635", "3090199562", "1408025319", "3090199623", "3090199622", "3090199647", "3090199625", "497040837", "3090199576", "3090199573", "3090199630", "3090199621", "3090199558", "3090199542", "505765334169127040", "3090199566", "3090199627", "3090199641", "3090199637", "3090199564", "2889300356", "3090199629", "3090199644", "3090199565", "3090199599", "3090199540", "3090199633", "3090199574", "3090199617", "3090199532"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "1", "1", "8286019", "4", "26371", "59147818", "79094264883917103", "38392795", "79951", "24695", "17637772", "838", "1", "1", "27209", "79094264845524308", "38392795", "838", "38392795", "17", "266224", "38392795", "341", "52", "1", "52", "38392795", "23857", "25533", "81", "393", "79951", "3117251", "0", "26371", "185", "3", "6", "79951", "5142054055824688", "133", "1", "106322", "11287", "14520521", "23", "838", "1231", "135933408"};
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    string first = "30439";
    string second = "58852389";
    vector<string> indices = {"1883", "1495", "970471943173863936", "3034", "2917", "2901", "2920", "2902", "0", "2903", "2994", "2916", "2905", "3033", "2900", "2904", "2907", "2898", "3035", "2924", "2913", "3036", "1", "2899", "999999999999999997", "2909", "2908", "2918", "1000000000000000000", "2919", "2925", "4", "2923", "2915", "2906", "3038", "3039", "2926", "2911", "2897", "999999999999999999", "2690", "2927", "829568393066819712", "972013105763023232", "2977", "3037", "3040", "999999999999999998", "2912"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"20651444", "28535145", "1", "1", "373", "30439", "373", "16637", "30439", "13802", "1", "1343", "10967", "1", "13802", "2835", "2835", "30439", "0", "74", "2089", "1", "58852389", "44241", "1", "2462", "5297", "970", "1", "597", "1", "58791511", "75", "1716", "8132", "0", "1", "73", "373", "74680", "1", "4275262", "72", "1", "0", "39", "1", "1", "0", "2462"};
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    string first = "578614639";
    string second = "66090354779";
    vector<string> indices = {"239", "272", "233", "179", "231", "170", "999999999999999998", "999999999999999999", "227", "181", "169", "268", "260", "180", "213", "214", "221", "4", "218", "244", "249", "228", "747038857265834240", "184", "209", "223", "99", "261", "254", "263", "256", "220", "1000000000000000000", "238", "252", "237", "266", "177", "279", "0", "280", "224", "173", "251", "172", "186", "229", "2", "222", "215"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"6898", "2", "53666", "62815026", "122473", "706900572", "0", "1", "436226", "2655881", "1285515211", "7", "56", "65470907", "7041525", "2655881", "926118", "64933125501", "926118", "2863", "999", "122473", "0", "2655881", "15009168", "803645", "578614639", "39", "480", "22", "173", "803645", "1", "8243", "653", "15141", "12", "65470907", "1", "578614639", "1", "681172", "450328706", "826", "128285933", "54847383", "313753", "65511740140", "122473", "4385644"};
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    string first = "2903956993434587";
    string second = "78532077155";
    vector<string> indices = {"6687", "55518", "55595", "55559", "55530", "55570", "55607", "55515", "55575", "55604", "55542", "55582", "55572", "0", "55461", "55574", "55564", "55548", "55467", "55547", "55531", "55528", "55588", "1", "55591", "55526", "55556", "55553", "55464", "55557", "55537", "999999999999999997", "55546", "55462", "55567", "55562", "55543", "55534", "55569", "55597", "55549", "55605", "55525", "55573", "55587", "55608", "55524", "55584", "55571", "55558"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"2553860993477597", "2155603003", "4", "128054", "203316269", "6669", "0", "2155603003", "2481", "2", "9546305", "569", "3619", "2903956993434587", "311972705617", "3050", "39445", "1126379", "2155603003", "3083584", "157541949", "249090589", "67", "78532077155", "25", "45774320", "239720", "830826", "154908551307", "55833", "25555331", "1", "4209963", "78532077155", "6669", "16388", "4209963", "65993309", "9719", "9", "1957205", "1", "340639229", "569", "113", "1", "294864909", "205", "3050", "183887"};
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    string first = "4740";
    string second = "83504583899477";
    vector<string> indices = {"26425501261", "26425501292", "26425501295", "26425501274", "26425501259", "999999999999999997", "26425501235", "781915998950339328", "26425501257", "26425501233", "26425501242", "999999999999999998", "2", "26425501238", "4", "26425501277", "26425501291", "26425501269", "26425501293", "26425501280", "26425501273", "26425501256", "26425501276", "3623231064", "26425501255", "26425501231", "26425501287", "1", "26425501241", "3", "26425501254", "26425501243", "26425501290", "26425501234", "26425501232", "26425501251", "26425501239", "26425501260", "26425501270", "17287172771", "26425501289", "26425501264", "7435570539", "26425501294", "26425501229", "26425501283", "26425501271", "26425501263", "26425501275", "26425501278"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"89", "1", "1", "11", "11", "1", "1543", "0", "100", "4740", "1210", "1", "83504583894737", "1543", "83504583889997", "9", "1", "34", "0", "7", "1", "211", "1", "4740", "111", "12677", "2", "83504583899477", "1321", "4740", "322", "111", "0", "3197", "7937", "544", "1432", "100", "23", "28877117944697", "1", "67", "4740", "1", "17417", "5", "11", "78", "10", "8"};
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    string first = "53011362552340179";
    string second = "6064460897";
    vector<string> indices = {"13112009", "10643689", "13112128", "13111988", "10644836", "13111994", "13111998", "13112086", "13112002", "13112010", "13112006", "13112187", "13111995", "13112182", "13112077", "13112001", "13112016", "1", "13112152", "13112066", "13111971", "2", "13112087", "13112013", "13112088", "13112071", "13112063", "13112068", "13112181", "13112092", "13111970", "13111974", "13111975", "13111968", "13112190", "13112004", "1616768", "13112069", "13112158", "13112015", "13112005", "13112196", "13112062", "13112184", "13112072", "13112078", "13112185", "13111982", "13112064", "13112065"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"7240798", "6064460897", "335", "453519376", "9974570122508550", "116101358", "63493707", "3821", "30835539", "1822629", "10886056", "5", "168709009", "11", "10379", "41721595", "1723193", "6064460897", "191", "49718", "5610941521", "53011356487879282", "2728", "1822629", "1093", "14751", "49718", "16937", "9", "551", "11675402418", "5610941521", "5157422145", "17739863315", "1", "19949483", "46474813696813214", "15844", "155", "49718", "9063427", "1", "181935", "9", "13658", "9286", "7", "453519376", "132217", "82499"};
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    string first = "83716145454";
    string second = "99059812";
    vector<string> indices = {"1304", "14243", "1307", "14232", "1277", "12036", "14239", "2628", "14244", "1270", "14236", "1267", "999999999999999998", "2", "1285", "727", "1283", "1263", "1282", "14246", "1300", "1287", "1269", "1273", "1274", "14250", "1306", "1281", "1", "999999999999999999", "1301", "1286", "1305", "14247", "0", "14237", "14233", "1276", "999999999999999997", "1278", "14241", "1266", "1264", "14249", "14240", "14231", "1268", "14235", "1284", "1280"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"258614", "6", "258554", "30", "10604314", "30", "12", "30", "2", "77851184", "16", "99059812", "2", "83617085642", "258644", "99059812", "3362342", "307783750", "6983328", "2", "258644", "3103698", "88455498", "56642556", "10604314", "2", "258584", "3620986", "99059812", "2", "775902", "3362342", "30", "2", "83716145454", "14", "44", "35433928", "0", "24829614", "2", "109664126", "99059812", "2", "10", "74", "10604314", "30", "3620986", "10604314"};
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    string first = "873737874887680995";
    string second = "255743381180742554";
    vector<string> indices = {"72", "441361286316608448", "146", "173", "155", "195", "156", "942829845346503808", "224", "116", "1000000000000000000", "78", "210", "134", "172", "209", "61", "71", "6", "226", "154", "191", "181", "202", "17", "205", "142", "230", "162", "62", "98", "118", "999999999999999998", "114", "152", "57", "1", "131", "129", "14", "190", "234", "200", "176", "164", "201", "128", "65", "204", "999999999999999997"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"18697704397973", "1", "1111127775", "1518377", "24243455", "4975", "103839741", "0", "3", "439387631609", "0", "6391285406659", "227", "1782653131", "1943840", "347", "624129758272774", "68637608096235", "149235649835289221", "10", "128083196", "18833", "124962", "120", "19803634849236009", "120", "3229543584", "3", "6865921", "1079742101052789", "3296298563633", "238075911002", "1", "677463542611", "231922937", "2952131375871111", "255743381180742554", "1782653131", "19273421763", "21051894365781557", "7936", "1", "1067", "667451", "10511613", "947", "36764190395", "168517415492759", "707", "0"};
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    string first = "921899096840270369";
    string second = "380450730670607133";
    vector<string> indices = {"207", "176", "9", "3", "19", "210", "157", "49", "63", "218", "148", "164", "199", "86603676539340512", "47", "154", "1", "191", "88", "74", "91", "55", "147", "146", "89", "999999999999999997", "129", "145", "184", "177", "214", "39", "143", "36", "239182012952045824", "81", "179", "149", "169", "93", "131", "84", "223", "140", "72", "152", "130", "136", "155", "58"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"27", "4524", "44086716154066249", "160997635499056103", "980485598780215", "5", "232727", "92589925970565", "448754583139", "2", "289269", "91372", "107", "0", "35135791043426", "289269", "380450730670607133", "16", "859355771", "175268353740", "801810917", "22318343883713", "1185347", "1474616", "830583344", "1", "28772427", "289269", "673", "2035", "1", "338540463274547", "2053154", "1622430734285883", "1", "13548285347", "454", "896078", "6559", "28772427", "24955388", "1689939115", "1", "9687232", "448754583139", "317540", "53727815", "3817039", "260998", "3316550435713"};
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    string first = "77286227445633349";
    string second = "247802643550733266";
    vector<string> indices = {"534023968431028736", "99", "135", "138", "262", "174", "12", "11", "51", "143", "17", "164", "118", "130", "125", "56", "22", "16", "24", "167", "91", "64", "265", "31482030813836200", "121", "175", "92", "249", "69", "107", "110", "94", "2", "61", "116", "19", "158", "259", "3", "21", "141", "269", "28", "270", "109", "83", "260", "35", "999999999999999997", "108"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "2055796713", "450797", "450797", "4", "2453", "13510382590300473", "15943961213833219", "14602083115597", "494589", "6209646719702235", "5161", "50883392", "4551762", "5904153", "3887815939249", "251400321740740", "2433578623532746", "588288507414523", "5161", "6127864256", "587727059570", "2", "0", "28168374", "2402", "2919912783", "5", "44086730435", "615603263", "39525883", "288038690", "170516416105099917", "587727059570", "39525883", "2433578623532746", "56669", "6", "77286227445633349", "1091089150896003", "450797", "1", "251400321740740", "1", "288038690", "2919912783", "1", "5063270058389", "0", "327564573"};
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    string first = "103228766781449760";
    string second = "446608402642078884";
    vector<string> indices = {"256", "999999999999999997", "57", "285", "225", "277", "205", "228", "245", "282", "67", "65", "274", "265", "58", "61", "239", "92", "28", "186", "41", "232", "90", "199", "230", "194", "50", "156", "227", "244", "7", "240", "193", "11", "49", "257", "286", "198", "289", "197", "248", "999999999999999999", "254", "271", "32", "280", "272", "206", "66", "10"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"26676", "36", "10768721011920", "0", "11054592", "252", "104197932", "3916440", "347364", "72", "2090977889796", "34870173660", "468", "2988", "2160718237116", "2160718237116", "347364", "34870173660", "7908212724957108", "8987047776", "422001357007356", "2874348", "1567925284896", "513851508", "347364", "2824398756", "68898892372092", "33637643856", "7485516", "95436", "33693335516279844", "1137528", "1232529804", "2148760232610228", "19376723786724", "18972", "36", "873190656", "36", "359339148", "156492", "0", "34380", "684", "2148760232610228", "36", "108", "50314428", "2125848063456", "33693335516279844"};
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    string first = "616417024470615781";
    string second = "149149449818363109";
    vector<string> indices = {"4", "208", "108", "214", "102", "51", "14", "141", "199", "20", "80", "48", "999999999999999999", "43", "82", "148", "1", "46", "143", "40", "21", "13", "2", "79", "69", "127", "153", "216", "737397720426126336", "64", "218", "168", "34", "196", "147", "177", "33", "27", "42", "45", "163", "125", "49", "17", "135", "126", "78", "187", "23", "184"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"149149449818363109", "5", "1138567489", "1", "1478202541", "31900764497031", "50053323832546384", "2751305", "9", "10414873438219694", "166851667984", "65001416764511", "1", "81551742898251", "40625492281", "399673", "149149449818363109", "81551742898251", "2351632", "81551742898251", "1010521679276043", "69872549029709729", "467267574652252672", "40625492281", "1199887770449", "84908763", "353267", "1", "1", "8151111740597", "0", "17981", "1320178324735307", "9", "1152613", "539", "1010521679276043", "1010521679276043", "228104902561013", "65001416764511", "28425", "204571096", "48451090630771", "10414873438219694", "11451299", "119662333", "207477160265", "9", "8393830079667608", "221"};
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    string first = "16143953";
    string second = "7960760";
    vector<string> indices = {"891535548814523008", "11", "300873412340316736", "999999999999999998", "68", "70", "59", "61", "72", "1000000000000000000", "999999999999999999", "73", "34", "999999999999999997", "64", "22", "1", "74", "0", "2", "60", "53", "5", "63", "7", "54", "56", "62", "65", "58", "8", "66", "75", "459700661685803072", "69", "6", "71", "67", "3", "4", "57", "55"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0", "6848595", "0", "11707", "11707", "0", "175605", "46828", "11707", "0", "11707", "0", "3512100", "0", "46828", "5291564", "7960760", "11707", "16143953", "8183193", "128777", "620471", "7738327", "35121", "7515894", "222433", "175605", "81949", "11707", "46828", "7293461", "35121", "11707", "11707", "11707", "222433", "11707", "23414", "222433", "7960760", "222433", "398038"};
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    string first = "8942912";
    string second = "20637496";
    vector<string> indices = {"11743", "10", "7", "12", "999999999999999998", "11738", "9", "5", "1000000000000000000", "1", "2035", "999999999999999997", "17", "999999999999999999", "959784951380928384", "13", "11736", "493055421191052672", "16", "0", "2097", "2", "11744", "3", "11740", "6415", "11741", "11737", "4", "11739", "8", "636715841275744768", "15", "6", "11", "18", "14", "11742"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"88", "1375880", "2751672", "687984", "88", "88", "2063776", "6191240", "88", "20637496", "88", "88", "687720", "0", "0", "88", "176", "0", "88", "8942912", "565664", "11694584", "88", "8942912", "88", "88", "88", "88", "2751672", "0", "687896", "88", "687808", "3439568", "687896", "687632", "687896", "0"};
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    string first = "47264";
    string second = "29540";
    vector<string> indices = {"524726238755367296", "9", "1000000000000000000", "4", "0", "7", "6", "999999999999999999", "3", "1", "8395296464872260", "999999999999999998", "10", "8", "999999999999999997", "11", "5", "2", "271448506078036608"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5908", "0", "5908", "5908", "47264", "5908", "0", "0", "11816", "29540", "0", "5908", "5908", "5908", "5908", "5908", "5908", "17724", "0"};
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    string first = "448835220600774328";
    string second = "598446973042290484";
    vector<string> indices = {"6110967", "6110971", "3", "999999999999999999", "6110974", "6110976", "6110970", "999999999999999998", "6110978", "6110977", "654342759177577216", "6", "3640969", "183869864291640224", "6110964", "5", "7", "8", "6110975", "1000000000000000000", "782997", "6110973", "9", "6110969", "1619464", "2", "866276004846073600", "6110965", "4", "1", "6110966", "0", "999999999999999997", "6110968", "6110972"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"14689509656", "7344754828", "448835220600774328", "0", "7344754828", "0", "14689509656", "7344754828", "7344754828", "7344754828", "7344754828", "149611715717742016", "36723774140", "7344754828", "88137057936", "149611752441516156", "36723774140", "149611678993967876", "7344754828", "7344754828", "130442125959306856", "0", "149611642270193736", "22034264484", "36723774140", "149611752441516156", "7344754828", "36723774140", "299223468159258172", "598446973042290484", "51413283796", "448835220600774328", "7344754828", "36723774140", "7344754828"};
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    string first = "1919897196381403";
    string second = "883492515148965";
    vector<string> indices = {"8", "11", "1000000000000000000", "16", "286352370961", "286352370962", "286352370966", "20", "26", "12", "25", "2", "9", "22", "1", "21", "15", "286352370965", "19", "286352370963", "13", "5", "70708256901", "875025698199474304", "27", "7", "0", "645068614516915200", "286352370960", "999999999999999998", "10", "999999999999999999", "14", "999999999999999997", "3", "24", "286352370964", "140469163297", "18", "215047254104", "23", "286352370967", "4", "17", "159963679494107616", "6"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"424756016898546", "118931684731600", "89", "33980481351873", "89", "178", "89", "16990240675892", "16990240675714", "152912166083473", "89", "1036404681232438", "152912166083473", "89", "883492515148965", "16990240675981", "84951203379727", "0", "33980481351873", "89", "33980481351873", "730580349065492", "12794884101101", "89", "16990240675625", "577668182982019", "1919897196381403", "89", "267", "0", "271843850815073", "89", "118931684731600", "89", "152912166083473", "16990240675803", "89", "89", "16990240675981", "4230770267086", "16990240675892", "89", "883492515148965", "50970722027854", "89", "152912166083473"};
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    string first = "380186409127606308";
    string second = "931829434136260468";
    vector<string> indices = {"7431686463", "7431686468", "1000000000000000000", "7431686464", "7431686445", "152233639940998272", "14", "2", "7431686443", "11", "1", "999999999999999998", "492500337049857280", "999999999999999999", "7431686457", "7431686444", "999999999999999997", "0", "7431686465", "7431686467", "7431686446", "5", "19", "7431686453", "15", "7431686449", "7431686438", "7431686439", "20", "12", "9", "7431686462", "7431686447", "7431686460", "7431686442", "7431686451", "7431686458", "7431686440", "8", "7431686455", "17", "7431686454", "7431686441", "7431686437", "22", "797668458859851008", "7431686456", "1025841320", "4", "7431686448"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"3532", "0", "3532", "3532", "540396", "3532", "14909270946505168", "551643025008654160", "681676", "59637083784516040", "931829434136260468", "0", "3532", "3532", "24724", "141280", "3532", "380186409127606308", "0", "3532", "399116", "208729793246558456", "7454635470995636", "91832", "7454635472500268", "116556", "1504632", "3832220", "1504632", "37273177365510604", "37273177365510604", "7064", "141280", "10596", "822956", "24724", "17660", "2327588", "134183438515537248", "67108", "1504632", "24724", "1504632", "5336852", "7454635467986372", "0", "42384", "1504632", "171456615881047852", "257836"};
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    string first = "430985371464";
    string second = "143669535894";
    vector<string> indices = {"999999999999999999", "48558639293591224", "9281", "3858", "999999999999999998", "4249", "1", "3", "9279", "990906620509626496", "9276", "4", "1000000000000000000", "7165", "421766504128003136", "7", "9278", "9280", "6", "999999999999999997", "2", "9277", "9275", "0", "9274", "5"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0", "23236218", "23236218", "83975691852", "23236218", "77911038954", "143669535894", "143646299676", "0", "23236218", "46472436", "143669535894", "23236218", "32739831162", "23236218", "143623063458", "23236218", "23236218", "143646299676", "23236218", "287315835570", "23236218", "23236218", "430985371464", "69708654", "23236218"};
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    string first = "3624608751345984";
    string second = "2218510528696806";
    vector<string> indices = {"2800662", "2800688", "2800678", "2800685", "2800683", "1", "869346", "999999999999999999", "2", "2800661", "2800676", "2800669", "10", "999999999999999997", "9", "15", "2800681", "12", "999999999999999998", "2800684", "14", "8", "13", "5", "2800679", "2800682", "11", "0", "3", "2800677", "2800672", "7", "844931702997846016", "4", "2800665", "2800663", "2800673", "1843255", "1000000000000000000", "2800670", "950225345781518848", "2800680", "2800664", "2800686", "2800671", "16", "2800687", "2800667", "878360661888760832", "6"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"16735368", "321834", "321834", "321834", "0", "2218510528696806", "16735368", "0", "1406098222649178", "45378594", "1609170", "4827510", "156233137709394", "321834", "62493251736684", "16735368", "321834", "62493251736684", "321834", "321834", "31246617500658", "218726389446078", "31246634236026", "218726389446078", "965502", "321834", "93739885972710", "3624608751345984", "812412306047628", "1287336", "321834", "156233137709394", "321834", "593685916601550", "16735368", "28643226", "2252838", "10681745447322", "321834", "2252838", "321834", "643668", "11907858", "0", "2574672", "31246600765290", "321834", "11907858", "321834", "374959527155472"};
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    string first = "410730488440254965";
    string second = "260385216190849049";
    vector<string> indices = {"2", "1456960", "956783", "1456945", "1456967", "2575", "16", "1456965", "1456968", "5", "850104496485120768", "12", "1456951", "19", "8", "1456954", "216915849470798496", "1456969", "9", "17", "1456957", "1456952", "3", "999999999999999997", "4", "18", "1456959", "7", "1456948", "1456958", "1456956", "1456944", "1456964", "1456950", "11", "1456955", "0", "14", "1456963", "999999999999999998", "21", "1000000000000000000", "23", "15", "22", "1", "1456947", "1456946", "1456962", "20"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"150345272249405916", "37283847", "219632133313764", "782960787", "0", "638644994906047", "3198835621818081", "12427949", "12427949", "69734615633480350", "12427949", "7677205360627135", "285842827", "639767387836135", "10876040982445216", "37283847", "12427949", "12427949", "29429287325517567", "1919301504827108", "37283847", "124279490", "110039943941443133", "12427949", "40305328307962783", "1279534116990973", "12427949", "40305328307962783", "534401807", "49711796", "86995643", "658681297", "0", "410122317", "10876040982445216", "124279490", "410730488440254965", "4478369738809054", "12427949", "0", "658681297", "12427949", "639765411792244", "1279534116990973", "639766070473541", "260385216190849049", "658681297", "124279490", "12427949", "639766729154838"};
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    string first = "30077552933846374";
    string second = "5791330068001285";
    vector<string> indices = {"23", "11", "88953582", "6", "271876611", "22", "3", "999999999999999998", "12", "791847353968300544", "13", "24458877", "14", "271876613", "26", "271876612", "9", "7", "271876615", "20", "271876609", "27", "75609692", "271876614", "19", "1", "848158128777531520", "21", "10", "999999999999999999", "8", "271876610", "999999999999999997", "0", "913091963963724928", "18", "15", "17", "16", "1000000000000000000", "4", "25", "271876616", "24", "2", "28", "5"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1030709", "1120902593839949", "125693610259792", "6912232661841234", "2061418", "186817099832249", "18494892797843804", "1030709", "2428622286481438", "1030709", "1307719692641489", "170010458857022", "1120902593839949", "1030709", "1030709", "1030709", "4670427474161336", "5791330068001285", "1030709", "373634198633789", "3092127", "186817096740122", "1030709", "0", "560451297435329", "5791330068001285", "1030709", "186817098801540", "3549524880321387", "0", "1120902593839949", "1030709", "1030709", "30077552933846374", "1030709", "186817098801540", "186817098801540", "747268396236869", "934085495038409", "1030709", "5791330068001285", "186817097770831", "1030709", "186817098801540", "24286222865845089", "186817095709413", "12703562729842519"};
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    string first = "244529448677141";
    string second = "1466652400792097";
    vector<string> indices = {"163331351", "716", "163331329", "163331344", "5", "163331331", "163331348", "163331354", "10", "714", "163331337", "163331327", "163331328", "163331345", "4", "708", "163331346", "711", "163331347", "999999999999999998", "163331326", "12", "11", "8", "163331330", "163331333", "712", "163331323", "402491737127788736", "6", "3", "999999999999999999", "163331339", "709", "705", "161", "163331322", "133786775", "163331355", "163331353", "43759916624308376", "163331334", "710", "699", "163331342", "163331352", "163331340", "707", "163331321", "163331336"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0", "104858251646", "347", "3", "733064054760674", "269", "2", "0", "524291270749", "963", "43", "616", "269", "8", "977593503437815", "209716508107", "5", "209716508107", "3", "0", "347", "243480866135643", "244005157406392", "244005157406392", "78", "78", "104858254535", "2273", "0", "244529448677141", "244529448677141", "1", "8", "524291270749", "1258299049605", "191576030331492", "963", "18967601768", "1", "1", "0", "113", "314574762642", "3355464132601", "8", "1", "27", "734007778856", "3236", "78"};
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    string first = "37229208407785164";
    string second = "115942392032895398";
    vector<string> indices = {"10", "339301", "21", "23", "339300", "3", "11", "13", "210303", "5", "12", "369560455675360448", "301968", "22", "2", "999999999999999999", "19", "15", "4", "999999999999999997", "16", "17", "339297", "8", "339296", "634051281114352000", "1", "339299", "1000000000000000000", "18", "20", "339302", "9", "14", "339295", "7", "999999999999999998", "24", "25", "6", "800706122902627968", "0", "98541", "339298"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"24464907979165446", "4702756054", "1063688175317936", "4702756054", "0", "37229208407785164", "4254766809539906", "15955374360085634", "404427615131892", "4254766809539906", "20210141169625540", "4702756054", "117042192671952", "1063692878073990", "78713183625110234", "0", "1063692878073990", "11700607550545728", "41483975217325070", "4702756054", "7445840741005822", "4254766809539906", "9405512108", "4254766809539906", "4702756054", "4702756054", "115942392032895398", "4702756054", "4702756054", "3191073931465916", "2127381053391926", "4702756054", "28719674788705352", "4254766809539906", "14108268162", "32974441598245258", "4702756054", "1063688175317936", "1063683472561882", "37229208407785164", "0", "37229208407785164", "754820563203324", "4702756054"};
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    string first = "82041162654266810";
    string second = "41020581283761600";
    vector<string> indices = {"2", "709341840", "4", "1", "709341839", "709341845", "999999999999999999", "709341841", "709341843", "627404803", "6", "8", "0", "301052316544760896", "5", "999999999999999997", "3", "709341846", "516367608875621824", "709341842", "36684530", "709341844", "474596334", "469249579629740608", "999999999999999998", "1000000000000000000", "7"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"41020581370505210", "86743610", "41020581283761600", "41020581283761600", "260230830", "86743610", "86743610", "173487220", "86743610", "4738343152705340", "86743610", "41020581023530770", "82041162654266810", "0", "41020581197017990", "0", "86743610", "86743610", "0", "86743610", "38899149110594490", "0", "86743610", "0", "86743610", "0", "41020581110274380"};
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    string first = "158179134628";
    string second = "653897926156";
    vector<string> indices = {"18", "5", "6", "0", "225035147242820288", "14", "35", "32", "31", "10", "2", "40", "9", "38", "15", "34", "11", "967792859019305472", "21", "24", "17", "29", "41", "23", "22", "4", "460246799982629440", "999999999999999999", "7", "999999999999999997", "20", "28", "8", "37", "33", "1000000000000000000", "30", "19", "42", "43", "26", "25", "39", "3", "27", "999999999999999998", "12", "36", "1", "16"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"11271966524", "179360522272", "158179134628", "158179134628", "0", "52272196408", "247735528", "990942112", "1362545404", "21181387644", "495718791528", "123867764", "115816359340", "247735528", "31090808764", "619338820", "94634971696", "123867764", "8546875716", "5821784908", "9909421120", "1734148696", "0", "7184330312", "1362545404", "337539656900", "123867764", "123867764", "21181387644", "123867764", "9909421120", "1362545404", "136997746984", "123867764", "371603292", "123867764", "371603292", "1362545404", "123867764", "123867764", "4459239504", "1362545404", "123867764", "158179134628", "3096694100", "0", "73453584052", "371603292", "653897926156", "21181387644"};
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    string first = "711374146";
    string second = "34418247";
    vector<string> indices = {"25", "3", "2", "7", "128", "33", "119", "130", "81", "857583978618436352", "29", "139", "35", "132", "32", "134", "124", "999999999999999998", "999999999999999997", "160479308831190208", "15", "135", "133", "38", "100", "136", "36", "27", "122", "229859779406874272", "28", "120", "0", "1", "140", "127", "1000000000000000000", "114", "31", "999999999999999999", "123", "30", "126", "34", "138", "121", "137", "37", "129", "125"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"34418247", "642537652", "676955899", "34418247", "58399", "23009206", "706097", "15927", "191124", "5309", "57427453", "5309", "11409041", "10618", "11409041", "5309", "132725", "5309", "5309", "5309", "367191676", "10618", "15927", "11026793", "3190709", "5309", "191124", "91845700", "323849", "5309", "34418247", "191124", "711374146", "34418247", "5309", "15927", "5309", "191124", "34418247", "0", "191124", "23009206", "74326", "11600165", "0", "514973", "5309", "11217917", "42472", "58399"};
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    string first = "1815796675076260";
    string second = "2645875155088205";
    vector<string> indices = {"999999999999999998", "38079414", "13", "97021969", "17", "97021984", "97023102", "11", "97021980", "97030573", "97030571", "97030576", "97022142", "97030580", "97021976", "97026921", "97021982", "1", "97021978", "14", "432001976779016256", "97021975", "97021977", "97030575", "999999999999999997", "999999999999999999", "97021974", "11079361", "2", "97021971", "97030570", "97021981", "97021983", "97030579", "319910077298713024", "16", "97021973", "12", "6", "4", "912895819310557440", "97021979", "7", "5", "97030578", "19", "97021970", "18", "97030572", "3"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5", "31517962387570", "51879904750095", "2635425", "802085", "114535", "20", "207519619802465", "20", "15", "35", "5", "20", "5", "343745", "20", "114555", "2645875155088205", "114575", "103759810302275", "0", "572915", "229170", "10", "5", "0", "229170", "45955520460545", "830078480011945", "1833340", "55", "114575", "20", "5", "5", "51879904750095", "802085", "155639715052370", "155639715052370", "985718195064315", "0", "114595", "674438764959575", "830078480011945", "0", "51879903145925", "802085", "51879903948010", "20", "1815796675076260"};
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    string first = "1368639863073329";
    string second = "1129501540664084";
    vector<string> indices = {"16", "11", "28293858", "28293856", "28293867", "28293580", "28293578", "28293871", "28293571", "28293875", "27", "20", "28293873", "28293876", "28293576", "19", "28293572", "12", "28293870", "28293869", "3", "7", "28293573", "28293865", "3806892", "28293868", "28293665", "1000000000000000000", "28293860", "25", "28293579", "28293859", "28293854", "8", "21", "9", "15", "27290469", "28293866", "28293874", "28293577", "28293574", "28293864", "28293749", "999999999999999997", "26", "28293863", "4", "893796362259306240", "10"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"10675817975816", "106758179644963", "161", "462", "35", "55846", "301", "14", "396340", "7", "2135163300851", "4270327167687", "7", "7", "56749", "2135163640442", "113197", "66190071382141", "7", "21", "890363218254839", "172948251027104", "283143", "56", "1847879502581", "14", "301", "0", "21", "2135163414048", "56147", "140", "301", "239138322409245", "2135163527245", "66190071382141", "14946145143503", "75699192135", "21", "0", "56448", "169946", "77", "301", "0", "113197", "21", "651224895845594", "7", "172948251027104"};
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    string first = "807068677920723813";
    string second = "558962636980979770";
    vector<string> indices = {"10", "4", "47", "34", "170514300606505344", "9", "206869961873091", "12", "11", "206869961873092", "39", "999999999999999999", "2", "7", "8", "65343973830949", "28", "206869961873093", "38", "206869961873097", "13", "50", "348477986023168384", "44", "999999999999999997", "45", "46", "1000000000000000000", "206869961873096", "188114052846489", "49", "130331733917542", "206869961873095", "0", "48", "37", "206869961873094", "206869961873090", "1", "35", "42", "6", "999999999999999998", "41", "43", "40", "3", "5", "549598742656911872"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"62750555101491684", "62750555101491684", "965393155407555", "16411683641928596", "7", "59854375635268991", "7", "59854375635268991", "2896179466222693", "14", "7723145243260517", "7", "248106040939744043", "62750555101491684", "122604930736760675", "660454610863348", "27996401506819368", "7", "2896179466222693", "7", "56958196169046298", "965393155407541", "0", "965393155407569", "0", "7", "965393155407562", "0", "7", "7", "965393155407548", "357178397125914", "0", "807068677920723813", "7", "10619324709483210", "7", "21", "558962636980979770", "2896179466222693", "1930786310815131", "185355485838252359", "7", "2896179466222693", "965393155407562", "4826965777037824", "310856596041235727", "248106040939744043", "7"};
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    string first = "91982388817945584";
    string second = "45989754013992488";
    vector<string> indices = {"999999999999999997", "23957", "5", "2", "4", "6", "180735944", "180735937", "23950", "180735939", "3", "7", "180735936", "23956", "999999999999999999", "180735943", "23953", "23958", "23949", "100480036", "180735938", "1000000000000000000", "23959", "1", "23954", "23955", "180735941", "180735942", "23945", "180735940", "20487713", "999999999999999998", "23946", "23948", "18343", "147917321", "23951", "518543021877155520", "23960", "23961", "0", "13283", "316841286207615744", "8", "425173397488794944", "23947", "3294", "23952"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"3416", "411541421480", "45986873224031880", "45992634803953096", "45989754013992488", "2880789960608", "3416", "3416", "823082846376", "0", "2880789960608", "45983992434071272", "6832", "3416", "0", "3416", "823082846376", "411541418064", "2880789960608", "3416", "3416", "3416", "3416", "45989754013992488", "411541421480", "411541424896", "3416", "0", "9465452728200", "3416", "364938627816", "3416", "2880789960608", "3703872806984", "10769215955599080", "74738933864", "2057707114232", "0", "411541414648", "411541411232", "91982388817945584", "20486120492729864", "0", "45981111644110664", "3416", "6584662767592", "2880789960608", "1234624267856"};
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    string first = "828338359842040024";
    string second = "207690933764223904";
    vector<string> indices = {"164", "726", "749", "96", "130", "137", "789", "720", "738", "730", "736", "762", "158", "776", "731", "154", "785", "737", "515068256604398080", "787", "782", "732", "152", "3", "723", "755", "129", "746", "722", "742", "743", "232", "147", "156", "157", "780", "757", "751", "779", "753", "18", "999999999999999998", "756", "139", "148", "772", "999999999999999997", "745", "741", "8"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"3291936856", "2286510184", "4295512", "2425375214855592", "3959415716354176", "248628925215432", "824", "9540668344", "275656840", "335142224", "335142224", "292520", "3291936856", "4120", "1281083512", "1244016989344", "824", "59485384", "0", "0", "824", "945941288", "4972776020520", "412956492313592216", "2956794632", "1236824", "2425375214855592", "15945224", "3291936856", "97200688", "59485384", "1079420146544", "23619863113256", "1240725052488", "1244016989344", "2472", "944304", "1529344", "4120", "2766168", "2425375214855592", "824", "292520", "394076862926144", "18647087092736", "9888", "0", "21770080", "156686072", "200414808119657128"};
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    string first = "121257768672035";
    string second = "187472405893250";
    vector<string> indices = {"10", "35", "109", "210", "89", "29", "696517919212515712", "39", "83", "95", "28", "67", "12", "216", "33", "65", "49", "30", "999999999999999998", "999999999999999999", "98", "45", "70", "2", "206", "36", "214", "38", "72", "43", "6", "16", "207", "5", "94", "9", "92", "208", "0", "37", "105", "204", "211", "58", "71", "205", "79", "21", "103", "47"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"32700119910030", "354281709605", "177620", "535", "3102465", "814397401155", "0", "18389881885", "3102465", "3102465", "2213134357690", "450220690", "11171505770395", "535", "230057845775", "818865115", "4873953790", "1398736956535", "535", "535", "912175", "18389881885", "287068160", "66214637221215", "3745", "230057845775", "0", "105833981945", "205491895", "50664336290", "11171505770395", "8728313566930", "2675", "66214637221215", "2007320", "11171505770395", "3102465", "1070", "121257768672035", "124223863830", "363265", "2675", "1070", "2662087240", "81576265", "6420", "33031970", "6285121363465", "182970", "4505309365"};
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    string first = "909919937178186";
    string second = "909321783614746";
    vector<string> indices = {"2506", "2512", "2553", "2320", "2523", "2309", "2557", "2317", "2315", "779601252601536896", "2543", "2339", "2443", "2546", "2282", "2522", "2555", "2552", "2551", "2279", "2549", "461182425316475968", "2289", "2511", "2280", "322622822606168640", "2547", "2288", "2560", "2542", "2556", "2313", "2558", "2550", "2505", "2508", "2520", "2284", "2302", "2548", "2304", "2532", "2285", "2293", "2515", "2554", "2278", "2504", "2290", "2322"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"2814118", "132494", "310", "268634406", "108686", "2679912924", "62", "268634406", "1072393912", "0", "7936", "2143712", "92850022", "3100", "598153563440", "7936", "248", "372", "682", "598153563440", "1736", "62", "43682366290", "670406", "726520749386", "62", "2418", "84684819656", "62", "5518", "186", "803759506", "124", "1054", "4957830", "670406", "124558", "128367185946", "19563149974", "682", "16883237050", "61070", "341419191548", "35642627518", "132494", "62", "1324674312826", "2143712", "41002453366", "266490694"};
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    string first = "107317380280650";
    string second = "71453242715500";
    vector<string> indices = {"999999999999999998", "408", "197", "382", "388", "198", "5", "384", "391", "194", "205", "4", "414", "390", "400", "395", "65", "386", "398", "208", "410", "401", "406", "412", "207", "203", "192", "403", "204", "238", "966874307463788672", "387", "165", "405", "309", "201", "1000000000000000000", "409", "393", "206", "392", "999999999999999999", "202", "397", "402", "293", "394", "171", "399", "200"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"249650", "249650", "109923641150", "1590270500", "196224900", "165108773650", "35314072735550", "1143646650", "87876800", "659988470750", "54291884800", "275032414800", "249650", "142050850", "3495100", "13231450", "24312776143550", "446623850", "1248250", "53398637100", "249650", "1248250", "998600", "0", "53845260950", "446623850", "935020885550", "998600", "54738508650", "44466160100", "249650", "250398950", "5885604351950", "249650", "23474839150", "54738508650", "0", "499300", "33702750", "446623850", "54174050", "249650", "55185132500", "5991600", "2246850", "446623850", "20471300", "4785474692750", "4743350", "109923641150"};
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test67() {
    string first = "645487843449285";
    string second = "31910395300308449";
    vector<string> indices = {"1857", "1797", "80", "2058", "3", "2069", "2071", "84", "1837", "1800", "1835", "1876", "1838", "79", "20", "92", "1798", "2", "77", "1867", "78", "88", "2059", "807756722288579072", "999999999999999999", "1814", "2077", "4", "1881", "169294042141568800", "1884", "1843", "91", "2075", "81", "2074", "67", "1869", "1840", "1879", "1836", "1872", "73", "1799", "1873", "93", "1842", "5", "86", "1951"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"68595449", "8676412677", "116479169568850", "3569", "645487843449285", "172", "43", "14559363449251", "450400017", "152462993", "602863010", "3106449", "297937024", "198985070431167", "23519053335467744", "4261974842", "4414437835", "31264907456859164", "281490971293484", "19672715", "82505900862317", "4854541808031", "2193", "0", "43", "2737344912", "43", "30619419613409879", "257957", "43", "257957", "131496107", "4854541808031", "0", "82505900862317", "43", "3508930188539909", "12683753", "145474031", "518107", "152462993", "1294171", "926978814742769", "4261974842", "5694791", "4850279833189", "138485069", "29973931769960594", "19413905257282", "2193"};
    if(result == expected) {
        cout << "Test Case 67: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 67: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test68() {
    string first = "339194496529438";
    string second = "84797418097615";
    vector<string> indices = {"26413", "11", "805557790692489216", "26407", "1", "26381", "26386", "26416", "5511", "26392", "26485", "12195", "26405", "26417", "26503", "26380", "26494", "26420", "26401", "26383", "26492", "26411", "26373", "26379", "9", "26377", "7", "4", "26415", "5", "26391", "2", "0", "26389", "26507", "26498", "26408", "8", "26501", "26390", "26496", "26493", "26385", "26410", "26375", "26419", "26372", "26397", "26374", "26387"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1913511", "84782945680681", "0", "3497015", "84797418097615", "206982575", "156309123", "330007", "4824138978", "46384685", "10923", "4824138978", "4288767", "461745", "331", "570274273", "2979", "198269", "20652083", "156309123", "4303", "2705263", "4824138978", "363291698", "4824138978", "1296857669", "84797418097615", "84797418097615", "791752", "84802242236593", "50673452", "254397078431823", "339194496529438", "54962219", "331", "993", "4288767", "84792593958637", "331", "4288767", "1324", "1324", "50673452", "3497015", "3527281309", "330007", "3527281309", "33518384", "1296857669", "105635671"};
    if(result == expected) {
        cout << "Test Case 68: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 68: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test69() {
    string first = "246597482405728095";
    string second = "197271312560601579";
    vector<string> indices = {"2228", "15892", "27690", "27675", "3", "9", "507", "27686", "4", "7653", "2222", "27669", "27695", "27683", "2230", "27701", "27672", "27682", "27699", "2227", "27667", "24094", "2220", "999999999999999997", "27694", "27687", "2226", "2232", "27676", "5", "27696", "2229", "8", "27668", "27681", "64279627999499656", "27666", "27673", "27689", "27703", "2219", "7", "27670", "651030020850906496", "999999999999999999", "27702", "27678", "27688", "999999999999999998", "27677"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"3336544274832", "196736595", "380535", "48327945", "147945142715475063", "49226069385413061", "38148285177124041", "1978782", "98618972870348547", "2625341483907", "10010026297686", "88360227", "152214", "4870848", "196736595", "0", "88360227", "3424815", "76107", "6673285286259", "196736595", "196736595", "43376846202171", "76107", "228321", "1446033", "3336741011427", "3336347538237", "20016141", "49326169845126516", "76107", "3336741011427", "49259436205317546", "285096822", "8295663", "76107", "481833417", "20016141", "913284", "76107", "76743666106656", "33366819904485", "196736595", "76107", "76107", "76107", "8295663", "532749", "0", "28311804"};
    if(result == expected) {
        cout << "Test Case 69: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 69: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test70() {
    string first = "50998423936900662";
    string second = "35698861298316776";
    vector<string> indices = {"21582", "7", "24778", "24670", "24668", "27078", "21588", "24666", "27435", "21589", "430333908250787584", "27432", "21590", "11", "13", "27443", "21585", "19526", "1", "22457", "24663", "0", "24671", "21581", "24662", "27436", "27437", "8", "27439", "21579", "12", "999999999999999997", "24665", "9", "21580", "21583", "24667", "24673", "27447", "1000000000000000000", "21584", "21578", "4", "25523", "27445", "21591", "21586", "999999999999999999", "12248", "5"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"354575136874", "5099736021149004", "18437980", "19188652", "10426", "2454922", "118114902078", "19199078", "4010", "57607660", "0", "5614", "118057294418", "5099381446012130", "5099026870875256", "802", "118230117398", "486358915281390", "35698861298316776", "84760066938", "19199078", "50998423936900662", "10426", "590977764010", "76806738", "3208", "802", "5100090596285878", "1604", "354575136874", "354575136874", "0", "38408582", "354575136874", "945552900884", "236402627136", "19209504", "19167800", "802", "0", "118172509738", "1300128037758", "5099736021149004", "10426", "0", "117999686758", "57607660", "802", "2206757479394038", "15299562638583886"};
    if(result == expected) {
        cout << "Test Case 70: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 70: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test71() {
    string first = "2927472082595221";
    string second = "3998785592497997";
    vector<string> indices = {"999999999999999998", "11", "45387", "45386", "45398", "36597", "36598", "43579", "9", "45382", "22", "15", "44501", "36584", "45388", "21", "45402", "45406", "33260", "36580", "7", "36594", "36579", "1000000000000000000", "13", "36585", "23", "28", "5", "36591", "13071", "999999999999999999", "45397", "26", "6", "45389", "45394", "45401", "27", "8", "977266742769021568", "36590", "38592", "999999999999999997", "4", "45399", "45383", "36588", "19", "17"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0", "74560278549652", "49", "490", "98", "3157511", "539", "539", "211908168563455", "539", "11772667085501", "62787611464151", "317520", "110506956", "441", "15696943122147", "49", "49", "356618610474", "271531393", "286468447113107", "3157511", "161024437", "49", "137347890013803", "59989475", "3924276036646", "3924115012209", "1071313509902776", "22101499", "161024437", "49", "147", "3924276036646", "784845062789669", "392", "245", "0", "161024437", "498376615676562", "49", "9471994", "2440641", "49", "1856158572692445", "49", "588", "41045487", "11772667085501", "51014944378650"};
    if(result == expected) {
        cout << "Test Case 71: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 71: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test72() {
    string first = "723102500561354981";
    string second = "223791887998365313";
    vector<string> indices = {"3", "26163", "3048", "26153", "17", "38169311428955936", "39", "44", "15", "26154", "21819", "26157", "36", "58", "3044", "13", "12", "2", "3058", "26152", "26159", "4", "37", "3036", "3047", "3060", "3052", "35", "126524285660361888", "55", "1", "3054", "26167", "641", "3039", "26156", "9", "3050", "3057", "43", "3056", "60", "18", "6", "59", "20", "3046", "3055", "3059", "3042"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"275518724564624355", "97", "146376783", "1358", "15811330367057538", "0", "1073211366271607", "212690985221906", "1073211366271607", "291", "3924329", "291", "1073211366271607", "9756440162077", "418218798", "16884541733329145", "34842294832929897", "499310612562989668", "20908835", "1067", "194", "223791887998365313", "1859582605526647", "982814379", "41821744", "20907477", "20911551", "2932793971798254", "97", "9756440162077", "223791887998365313", "20910193", "97", "1571331993494", "982814379", "776", "68611378299588187", "41821744", "20910193", "286840127016567", "1358", "3902379501955", "1073211366271607", "172065051432106271", "5854060660122", "13664907634514324", "188198527", "20911551", "1358", "606417325"};
    if(result == expected) {
        cout << "Test Case 72: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 72: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test73() {
    string first = "297539620960613310";
    string second = "85021428735611400";
    vector<string> indices = {"9", "1831", "932", "919", "4", "1839", "8", "1842", "1835", "714", "926", "927", "1832", "914", "908", "738078203409989632", "10", "7", "934", "2333578", "2333580", "2", "913", "1843", "906", "912", "920", "904", "506", "999999999999999998", "928", "909", "2333582", "1838", "1833", "0", "924", "907", "922", "5", "916", "305354339262295360", "2333583", "2333577", "1561857", "12", "1837", "756910849599011200", "264293", "923"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"42404575525725930", "2191836000", "606252510", "2566453414080", "85021428735611400", "93269610", "42475334753779110", "30", "606252510", "9147738340731330", "733705441530", "366549594510", "606252510", "2933003008590", "19797921871110", "0", "70759228053180", "70759228053180", "364730836980", "60", "30", "212518192225001910", "8432459431260", "46634760", "90557149924290", "11365462439850", "2199903819570", "70759228053180", "18983271040123350", "30", "367155847020", "50961306182070", "30", "139904430", "1585583490", "297539620960613310", "366549594510", "70759228053180", "1833354225060", "42475334753779110", "2566453414080", "0", "30", "30", "30", "42263057069619570", "233174040", "0", "41385750", "1466804630550"};
    if(result == expected) {
        cout << "Test Case 73: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 73: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test74() {
    string first = "57996136955491";
    string second = "16570324844426";
    vector<string> indices = {"999999999999999999", "12", "999999999999999997", "6", "8", "1", "624348959843322496", "999999999999999998", "5", "1000000000000000000", "245276502377490976", "7", "10", "0", "879191340973151360", "11", "9", "4", "3", "2"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"8285162422213", "8285162422213", "0", "8285162422213", "8285162422213", "16570324844426", "0", "8285162422213", "8285162422213", "0", "0", "0", "0", "57996136955491", "8285162422213", "8285162422213", "8285162422213", "16570324844426", "24855487266639", "41425812111065"};
    if(result == expected) {
        cout << "Test Case 74: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 74: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test75() {
    string first = "54313111435355064";
    string second = "26393737354259208";
    vector<string> indices = {"149", "145", "18", "33", "148", "188362162490652544", "42", "26", "153", "138", "5", "142", "11", "999999999999999999", "124", "28", "27", "43", "40", "4", "32", "152", "35", "139", "8", "141", "154", "7", "15", "36", "1000000000000000000", "570269935681868480", "999999999999999997", "37", "30", "999999999999999998", "0", "1", "140", "29", "44", "506198937549248320", "3", "147", "6", "150", "31", "144", "70", "39"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0", "951342793704", "1525636726836648", "609810730764264", "317114264568", "317114264568", "2219799851976", "3509186451709488", "317114264568", "2219799851976", "24868100627422560", "951342793704", "18765553720075968", "317114264568", "27588941017416", "1983549724872840", "1525636726836648", "147458133024120", "151897732728072", "26393737354259208", "457912998036192", "0", "457912998036192", "5390942497656", "21816827173749264", "2219799851976", "317114264568", "23342463900585912", "1525636726836648", "306015265308120", "317114264568", "0", "317114264568", "151897732728072", "1525636726836648", "0", "54313111435355064", "26393737354259208", "3171142645680", "457912998036192", "145238333172144", "317114264568", "1525636726836648", "317114264568", "1525636726836648", "317114264568", "1067723728800456", "317114264568", "107501735688552", "2219799851976"};
    if(result == expected) {
        cout << "Test Case 75: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 75: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test76() {
    string first = "45616594005756";
    string second = "20274041780336";
    vector<string> indices = {"999999999999999998", "999999999999999999", "9", "4", "999999999999999997", "10", "943246459396793984", "3", "2", "11", "5", "772835878271921792", "0", "1000000000000000000", "6", "8", "12", "146261322091219776", "7", "1"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5068510445084", "5068510445084", "5068510445084", "20274041780336", "0", "0", "5068510445084", "5068510445084", "25342552225420", "5068510445084", "15205531335252", "5068510445084", "45616594005756", "0", "5068510445084", "5068510445084", "5068510445084", "5068510445084", "10137020890168", "20274041780336"};
    if(result == expected) {
        cout << "Test Case 76: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 76: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test77() {
    string first = "337379132996234";
    string second = "250314290741865";
    vector<string> indices = {"18", "12", "7", "20", "725", "727", "1000000000000000000", "684", "14", "999999999999999998", "0", "10", "724", "324193447232414208", "728", "999999999999999999", "308", "729", "4", "999999999999999997", "16", "21", "1", "5", "29", "2", "22", "6", "17", "144110201549507440", "3", "19", "730", "15", "8", "9", "726", "683285515920184576", "731"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"10880236021242", "10880236021242", "76184606233127", "22954084433", "22954084433", "22954084433", "22954084433", "688622532990", "21783426126917", "22954084433", "337379132996234", "54424134190643", "68862253299", "0", "22954084433", "0", "22954084433", "0", "76184606233127", "22954084433", "10903190105675", "10834327852376", "250314290741865", "87064842254369", "22954084433", "87064842254369", "10811373767943", "10880236021242", "22954084433", "22954084433", "163249448487496", "10857281936809", "22954084433", "10880236021242", "65304370211885", "10880236021242", "45908168866", "22954084433", "22954084433"};
    if(result == expected) {
        cout << "Test Case 77: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 77: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test78() {
    string first = "870422547529851452";
    string second = "248509160741897312";
    vector<string> indices = {"152", "1110", "159", "158", "1118", "1107", "103", "999999999999999999", "155", "1105", "156", "153", "9", "440732336596395392", "149", "14", "150", "1114", "1104", "8", "4", "592", "0", "147038535457313120", "1", "154", "1113", "1109", "999999999999999998", "148", "147", "999999999999999997", "1119", "3", "979", "1117", "2", "437289964952814592", "157", "145", "7", "1108", "5", "6", "1115", "151", "1111", "1116", "1106", "807"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"639981605169044", "754992062724", "636961636918148", "637968293001780", "251664020908", "754992062724", "1280969866421720", "251664020908", "639981605169044", "1006656083632", "638974949085412", "640988261252676", "121052155704894356", "251664020908", "1921958127674396", "117209246105629196", "640988261252676", "0", "2768304229988", "122333125571316076", "248509160741897312", "1006656083632", "870422547529851452", "251664020908", "248509160741897312", "1006656083632", "251664020908", "251664020908", "251664020908", "1280969866421720", "3202927994096116", "0", "251664020908", "373404226046056828", "1006656083632", "0", "621913386787954140", "0", "1006656083632", "1280969866421720", "1280969866421720", "1006656083632", "124895065304159516", "123614095437737796", "251664020908", "1280969866421720", "503328041816", "251664020908", "1761648146356", "202086208789124"};
    if(result == expected) {
        cout << "Test Case 78: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 78: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test79() {
    string first = "1000000000000000000";
    string second = "1";
    vector<string> indices = {"0", "1", "2", "3", "10", "20", "30", "100", "200", "300", "1000", "2000", "3000", "10000", "20000", "30000", "100000", "200000", "300000", "1111111", "22222222", "333333333", "1000000000", "2000000000", "3000000000", "10000000000", "20000000000", "30000000000", "100000000000", "200000000000", "300000000000", "1000000000000", "2000000000000", "3000000000000", "10000000000000", "20000000000000", "30000000000000", "100000000000000", "200000000000000", "300000000000000", "1000000000000000", "2000000000000000", "3000000000000000", "10000000000000000", "20000000000000000", "30000000000000000", "100000000000000000", "200000000000000000", "300000000000000000", "1000000000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1000000000000000000", "1", "999999999999999999", "999999999999999998", "1", "999999999999999987", "999999999999999980", "1", "999999999999999867", "999999999999999800", "1", "999999999999998667", "999999999999998000", "1", "999999999999986667", "999999999999980000", "1", "999999999999866667", "999999999999800000", "1", "1", "999999999777777778", "1", "999999998666666667", "999999998000000000", "1", "999999986666666667", "999999980000000000", "1", "999999866666666667", "999999800000000000", "1", "999998666666666667", "999998000000000000", "1", "999986666666666667", "999980000000000000", "1", "999866666666666667", "999800000000000000", "1", "998666666666666667", "998000000000000000", "1", "986666666666666667", "980000000000000000", "1", "866666666666666667", "800000000000000000", "1"};
    if(result == expected) {
        cout << "Test Case 79: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 79: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test80() {
    string first = "1";
    string second = "1000000000000000000";
    vector<string> indices = {"1000000000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"333333333333333334"};
    if(result == expected) {
        cout << "Test Case 80: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 80: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test81() {
    string first = "21";
    string second = "12";
    vector<string> indices = {"0", "1", "2", "3", "4"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"21", "12", "9", "3", "6"};
    if(result == expected) {
        cout << "Test Case 81: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 81: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test82() {
    string first = "1000000000000000000";
    string second = "1";
    vector<string> indices = {"10000000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1"};
    if(result == expected) {
        cout << "Test Case 82: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 82: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test83() {
    string first = "1000000000000000000";
    string second = "499999999999999999";
    vector<string> indices = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "100", "1000", "10000", "20000", "100000", "100000", "100000", "1000000", "10000000", "1000000000", "10000000000", "100000000000", "1000000000000", "10000000000000", "123123123", "435235675", "2435235254", "56546252345", "252544768678", "3141435234654", "3454353245432", "12343546556"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"499999999999999999", "500000000000000001", "2", "499999999999999999", "499999999999999997", "2", "499999999999999995", "499999999999999993", "2", "499999999999999991", "499999999999999871", "499999999999998671", "499999999999986671", "499999999999973337", "499999999999866671", "499999999999866671", "499999999999866671", "499999999998666671", "499999999986666671", "499999998666666671", "499999986666666671", "499999866666666671", "499998666666666671", "499986666666666671", "2", "499999999419685771", "499999996753019665", "499999924604996877", "499999663273641767", "2", "499995394195672761", "499999983541937929"};
    if(result == expected) {
        cout << "Test Case 83: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 83: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test84() {
    string first = "1000000000000000000";
    string second = "999999999999999999";
    vector<string> indices = {"583498709678432890"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"611000860214378073"};
    if(result == expected) {
        cout << "Test Case 84: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 84: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test85() {
    string first = "1112312312311";
    string second = "2";
    vector<string> indices = {"23423424", "234982374289", "2342342342", "123132", "90823490823", "2342342342423"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1112281081079", "2", "1109189189189", "1112312148135", "991214324547", "1"};
    if(result == expected) {
        cout << "Test Case 85: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 85: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test86() {
    string first = "2";
    string second = "999999999999999999";
    vector<string> indices = {"1000000000000000000", "999999999999999999", "999999999999999998", "999999999999999997", "999999999999999996", "999999999999999995", "999999999999999994", "999999999999999993", "999999999999999992", "10000000000000000", "100000000000000000", "1000000000000000", "100000000000000", "10000000000000", "1000000000000", "100000000000", "10000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "0", "1", "1", "0", "1", "1", "0", "1", "986666666666666667", "866666666666666667", "998666666666666667", "999866666666666667", "999986666666666667", "999998666666666667", "999999866666666667", "999999986666666667"};
    if(result == expected) {
        cout << "Test Case 86: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 86: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test87() {
    string first = "999999999999999999";
    string second = "7";
    vector<string> indices = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "10", "9", "12", "11", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "25", "24", "26", "27", "28", "29", "30", "900000000000000001", "900000000000000002", "900000000000000003", "900000000000000004", "900000000000000005", "900000000000000006", "900000000000000007", "900000000000000008", "900000000000000009", "900000000000000010", "2348957", "234567", "234958", "239485", "1", "109", "182", "16278", "2"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"999999999999999999", "7", "999999999999999992", "999999999999999985", "7", "999999999999999978", "999999999999999971", "7", "999999999999999964", "7", "999999999999999957", "999999999999999943", "999999999999999950", "7", "999999999999999936", "999999999999999929", "7", "999999999999999922", "999999999999999915", "7", "999999999999999908", "999999999999999901", "7", "999999999999999894", "7", "999999999999999887", "999999999999999880", "999999999999999873", "7", "999999999999999866", "999999999999999859", "7", "0", "7", "7", "0", "7", "7", "0", "7", "7", "999999999989038202", "999999999998905353", "7", "7", "7", "7", "999999999999999152", "999999999999924035", "999999999999999992"};
    if(result == expected) {
        cout << "Test Case 87: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 87: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test88() {
    string first = "100000000000000000";
    string second = "1";
    vector<string> indices = {"100000000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1"};
    if(result == expected) {
        cout << "Test Case 88: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 88: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test89() {
    string first = "1000000000000000000";
    string second = "1";
    vector<string> indices = {"123456789123456789", "1234567891234", "1234567891235"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"917695473917695474", "1", "999999176954739177"};
    if(result == expected) {
        cout << "Test Case 89: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 89: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test90() {
    string first = "522445180930600793";
    string second = "522445180930600796";
    vector<string> indices = {"795001689980510703", "857656592065291757", "1", "884451040584874534", "322203365980329124", "3", "2", "873339149926674473", "856182065594776371", "925701318218176074", "742903453952499567", "310282219093162912", "531731006989285640", "703040555573944691", "39493135612432643", "477396833537287466", "160929008251197392", "545289510110206676", "222850826197174203", "542447580620748707", "71434645881591671", "346422092470832235", "797198343614250144", "8686501929177127", "639218895155838510", "407915480723749493", "234093839025673986", "11841407577648661", "502695443976890462", "430071345165562734", "339870647696358508", "5629282615919369", "942567004411369653", "808898612731797524", "482034334636630187", "211595725385482976", "25786571419224096", "474618739237196643", "39418799824246222", "610365820759454646", "55502425064273357", "494285932030909080", "852025731593542688", "85710935882759657", "409457853932943145", "757335726815071537", "447773490630193711", "57", "142716923389757406", "0"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "1", "522445180930600796", "0", "0", "522445180930600793", "3", "1", "1", "1", "1", "0", "1", "1", "3", "1", "3", "1", "76743528536252393", "1", "3", "1", "1", "505072177072246544", "1", "1", "54257502879252827", "498762365775303476", "1", "1", "0", "3", "1", "1", "1", "3", "470872038092152607", "1", "443607581282108354", "1", "3", "1", "1", "3", "0", "0", "0", "522445180930600685", "237011334151085987", "522445180930600793"};
    if(result == expected) {
        cout << "Test Case 90: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 90: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test91() {
    string first = "100000000000000000";
    string second = "1";
    vector<string> indices = {"32432434324", "325435465465654654", "43243243243"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "1", "1"};
    if(result == expected) {
        cout << "Test Case 91: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 91: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test92() {
    string first = "4354542672";
    string second = "123";
    vector<string> indices = {"0", "1", "2", "3", "5", "234362875650734976", "245101672454865152", "845429979070228608", "807136514314102272", "332383929647296128", "611459566265679616", "519606992040589696", "904852747725350016", "928142335257152896", "809113136085898112", "388465470184922176", "785040690088386816", "514048379177427968", "648429530288709120", "175240933502660576", "594972472259648512", "286986187537710432", "269511443678339904", "881297669204695168", "272439549750750144", "155905872184934688", "239210800548377728", "735995455913918976", "218077428155218912", "400315400140446080", "36756391926530792", "763068541746275072", "217628295436533408", "52679054591681760", "967653298197845376", "26821062139614328", "802261687801710336", "210377823798470592", "345991817214411392", "129610350143376960", "513977277066324224", "748653198092785792", "64360167071853880", "798862815759061760", "228817145004732928", "856597487230860800", "69790004461424360", "861816564329654272", "651281566673425536", "583653703217908736"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"4354542672", "123", "4354542549", "4354542426", "4354542303", "0", "3", "0", "0", "0", "3", "3", "0", "3", "3", "3", "0", "3", "0", "3", "3", "0", "0", "3", "0", "0", "3", "0", "3", "3", "3", "3", "0", "0", "0", "3", "0", "0", "3", "0", "3", "3", "3", "3", "3", "3", "3", "3", "0", "3"};
    if(result == expected) {
        cout << "Test Case 92: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 92: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test93() {
    string first = "999999999999999999";
    string second = "2";
    vector<string> indices = {"999999999999999999", "999999999999999999", "999999999999999999", "999999999999999999", "999999999999999999", "999999999999999999", "999999999999999999"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "1", "1", "1", "1", "1", "1"};
    if(result == expected) {
        cout << "Test Case 93: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 93: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test94() {
    string first = "12345678901234567";
    string second = "0";
    vector<string> indices = {"804267532375188736", "712319212380158592", "392314943271369728", "533063552326221376", "385987986166977472", "878839013207544960", "418753347794087488", "546314193638706368", "754081761493675264", "951588076442310016", "524512026617405120", "178894778370548352", "582945838292412288", "218756419475258816", "576014455054934208", "120866243275795424", "618465438041000320", "459322358162681408", "724499248158507008", "163138585476914304", "547192130313024832", "990153114157213056", "116549401320803712", "445072520244535808", "41945038532504640", "880594381099296640", "962944372867712768", "633135070806315648", "66629080263421736", "981063939941052288", "928024199481822208", "263550046202411744", "227166622719570336", "842828095336185088", "521480622195915264", "553172952898801216", "940789094530380288", "568054115451306048", "675467167112848000", "85359345884328368", "462538051444610368", "122395551323055904", "972146587114530816", "911384271481774464", "355675716288495680", "666781808920168576", "50270579960854600", "773009926225102720", "821807274443208704", "20746978440012388"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 94: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 94: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test95() {
    string first = "1000000000000";
    string second = "11";
    vector<string> indices = {"1000000000", "10000", "1000", "1000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"11", "11", "11", "11"};
    if(result == expected) {
        cout << "Test Case 95: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 95: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test96() {
    string first = "100000000000000000";
    string second = "99999999999999999";
    vector<string> indices = {"0", "10", "10000", "100000000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"100000000000000000", "99999999999999993", "99999999999993333", "33333333333333333"};
    if(result == expected) {
        cout << "Test Case 96: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 96: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test97() {
    string first = "1000000000000000000";
    string second = "1";
    vector<string> indices = {"1000000000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1"};
    if(result == expected) {
        cout << "Test Case 97: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 97: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test98() {
    string first = "710370710370710370";
    string second = "177300177300177301";
    vector<string> indices = {"1000000000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1"};
    if(result == expected) {
        cout << "Test Case 98: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 98: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test99() {
    string first = "10000000000000000";
    string second = "100000001";
    vector<string> indices = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "100000000", "100000001", "100000002", "100000003", "100000004", "100000005", "100000006", "100000007", "100000008", "100000009", "10000000000000000", "10000000000000001", "10000000000000002", "10000000000000003", "10000000000000004", "10000000000000005", "10000000000000006", "10000000000000007", "10000000000000008", "10000000000000009", "1000000000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"10000000000000000", "100000001", "9999999899999999", "9999999799999998", "100000001", "9999999699999997", "9999999599999996", "100000001", "9999999499999995", "9999999399999994", "100000001", "3333333233333333", "3333333133333332", "100000001", "3333333033333331", "3333332933333330", "100000001", "3333332833333329", "3333332733333328", "100000001", "1", "1", "0", "1", "1", "0", "1", "1", "0", "1", "1"};
    if(result == expected) {
        cout << "Test Case 99: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 99: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test100() {
    string first = "1000000000000000000";
    string second = "1";
    vector<string> indices = {"1000000000000000000", "999999999999999999", "999999999999999998", "999999999999999997", "999999999999999996"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "333333333333333334", "333333333333333335", "1", "333333333333333336"};
    if(result == expected) {
        cout << "Test Case 100: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 100: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test101() {
    string first = "1000000000000000000";
    string second = "1";
    vector<string> indices = {"12345"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"999999999999991770"};
    if(result == expected) {
        cout << "Test Case 101: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 101: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test102() {
    string first = "1";
    string second = "9999999999999999";
    vector<string> indices = {"9999999999999999"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1"};
    if(result == expected) {
        cout << "Test Case 102: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 102: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test103() {
    string first = "1000000000000000";
    string second = "1000000000000003";
    vector<string> indices = {"10000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"980000000000005"};
    if(result == expected) {
        cout << "Test Case 103: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 103: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test104() {
    string first = "1000000000000000000";
    string second = "3";
    vector<string> indices = {"0", "1", "2", "3", "4", "5", "1000000000000000000", "999999999999999999", "999999999999999998", "999999999999999997", "899999999999999999", "499999999999999999", "399999999999999999"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1000000000000000000", "3", "999999999999999997", "999999999999999994", "3", "999999999999999991", "1", "0", "1", "1", "1", "3", "200000000000000002"};
    if(result == expected) {
        cout << "Test Case 104: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 104: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test105() {
    string first = "2143649999";
    string second = "998799998799999999";
    vector<string> indices = {"0", "1", "0", "2", "3", "4", "5", "6", "7", "8", "11", "10", "12", "9", "15", "14", "13", "2143649999", "998799998799999999", "1000000000000000000", "998798798798798701", "998798798798798702", "998798798798798703", "998798798798798704", "998798798798798705", "998798798798798706", "998798798798798707", "123456789012345567", "98765432109876543", "12334455345", "534646", "34782786754", "87458326457", "98976", "5436457", "3463463634634", "747", "64323577547", "326534", "12355325697454364", "236537775683633", "46457457357", "235", "2367457457", "3467", "99999999999", "999998", "99999999999969", "999999999999999996", "9997"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"2143649999", "998799998799999999", "2143649999", "998799996656350000", "2143649999", "998799994512700001", "998799992369050002", "2143649999", "998799990225400003", "998799988081750004", "998799983794450006", "998799985938100005", "2143649999", "2143649999", "2143649999", "998799979507150008", "998799981650800007", "0", "1", "1", "1", "0", "1", "1", "0", "1", "1", "1", "1", "1", "998035937630856429", "1", "0", "2143649999", "991030759534024303", "1", "2143649999", "0", "998333349775367688", "0", "0", "1", "998799664390600155", "0", "998795044824852310", "1", "997370902373416664", "1", "1", "998785713516406663"};
    if(result == expected) {
        cout << "Test Case 105: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 105: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test106() {
    string first = "12345678901234567";
    string second = "12345678901234566";
    vector<string> indices = {"1234567890123456"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"11522633641152263"};
    if(result == expected) {
        cout << "Test Case 106: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 106: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test107() {
    string first = "99999999999999999";
    string second = "2";
    vector<string> indices = {"44444444444444444"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"40740740740740741"};
    if(result == expected) {
        cout << "Test Case 107: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 107: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test108() {
    string first = "1000000000000000000";
    string second = "17";
    vector<string> indices = {"1000000000000000000", "0", "1", "2", "5135412", "6123526788", "6242452", "61236468865376888", "123574574588865316", "6246246134", "74567568", "64327486568424113", "74353343522", "343333523626234", "333333333333333333", "1613311578599311"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "1000000000000000000", "17", "999999999999999983", "999999999941798664", "999999930600029736", "17", "305986686192395275", "1", "999999929209210487", "999999999154900896", "270955152224526725", "999999157328773423", "17", "0", "17"};
    if(result == expected) {
        cout << "Test Case 108: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 108: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test109() {
    string first = "29996224275833";
    string second = "2";
    vector<string> indices = {"234234", "324235235342543"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"29996223963521", "1"};
    if(result == expected) {
        cout << "Test Case 109: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 109: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test110() {
    string first = "1000000000000000";
    string second = "1";
    vector<string> indices = {"100", "10000000", "10000000000000001"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "1", "1"};
    if(result == expected) {
        cout << "Test Case 110: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 110: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test111() {
    string first = "2876510837452387";
    string second = "2";
    vector<string> indices = {"2893999001112", "763529290010111", "87363622992"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"2872652172117571", "1858471784105573", "2876394352621731"};
    if(result == expected) {
        cout << "Test Case 111: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 111: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test112() {
    string first = "1234";
    string second = "13425345654312";
    vector<string> indices = {"89767234553214", "1234132466", "1000000000000000000", "999999999999999999", "0"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"2", "12410066012694", "0", "2", "1234"};
    if(result == expected) {
        cout << "Test Case 112: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 112: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test113() {
    string first = "1000000000000";
    string second = "1";
    vector<string> indices = {"1", "1000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "1"};
    if(result == expected) {
        cout << "Test Case 113: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 113: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test114() {
    string first = "123456789012345678";
    string second = "876543210987654321";
    vector<string> indices = {"123456789012345678", "123456789012345715", "123456789012345752", "123456789012345789", "123456789012345826", "123456789012345863", "123456789012345900", "123456789012345937", "123456789012345974", "123456789012346011", "123456789012346048", "123456789012346085", "123456789012346122", "123456789012346159", "123456789012346196", "123456789012346233", "123456789012346270", "123456789012346307", "123456789012346344", "123456789012346381", "123456789012346418", "123456789012346455", "123456789012346492", "123456789012346529", "123456789012346566", "123456789012346603", "123456789012346640", "123456789012346677", "123456789012346714", "123456789012346751", "123456789012346788", "123456789012346825", "123456789012346862", "123456789012346899", "123456789012346936", "123456789012346973", "123456789012347010", "123456789012347047", "123456789012347084", "123456789012347121", "123456789012347158", "123456789012347195", "123456789012347232", "123456789012347269", "123456789012347306", "123456789012347343", "123456789012347380", "123456789012347417", "123456789012347454", "123456789012347491"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0", "27", "27", "0", "27", "27", "0", "27", "27", "0", "27", "27", "0", "27", "27", "0", "27", "27", "0", "27", "27", "0", "27", "27", "0", "27", "27", "0", "27", "27", "0", "27", "27", "0", "27", "27", "0", "27", "27", "0", "27", "27", "0", "27", "27", "0", "27", "27", "0", "27"};
    if(result == expected) {
        cout << "Test Case 114: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 114: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test115() {
    string first = "1000000000000000";
    string second = "767";
    vector<string> indices = {"4"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"767"};
    if(result == expected) {
        cout << "Test Case 115: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 115: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test116() {
    string first = "1";
    string second = "1000000000000000000";
    vector<string> indices = {"1000000000000000000", "1000000000000000", "1000000000000", "1000000000", "1000000", "1235123", "29371982394", "2361223222", "2", "3", "12619283", "3512333", "892839895852", "1351", "14621346", "34623423", "34237343444463", "2342432346", "34623462346", "346364343", "4634623462", "45735673457457", "4572342342346", "985685675685", "314156", "999999999999999999", "999999999999", "100", "1123", "1123", "1123", "132612318237", "24362346", "2342346345", "34634523", "346347345436", "23672737364", "3616457326", "2", "5", "8", "1612364574", "45454545454545"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"333333333333333334", "999333333333333334", "999999333333333334", "999999999333333334", "999999999999333334", "999999999999176585", "1", "999999998425851186", "999999999999999999", "1", "999999999991587145", "999999999997658445", "999999404773402766", "999999999999999100", "1", "1", "1", "1", "999999976917691770", "1", "999999996910251026", "1", "999996951771771770", "1", "999999999999790563", "1", "1", "999999999999999934", "999999999999999252", "999999999999999252", "999999999999999252", "1", "1", "1", "1", "999999769101769710", "999999984218175091", "999999997589028450", "999999999999999999", "999999999999999997", "999999999999999995", "1", "1"};
    if(result == expected) {
        cout << "Test Case 116: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 116: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test117() {
    string first = "99999999999999999";
    string second = "2";
    vector<string> indices = {"5", "95", "164721", "418", "3387", "710", "0", "1197", "19507", "5848", "1234567890"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"99999999999999993", "99999999999999873", "99999999999780371", "2", "99999999999995483", "99999999999999053", "99999999999999999", "99999999999998403", "2", "2", "99999998353909479"};
    if(result == expected) {
        cout << "Test Case 117: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 117: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test118() {
    string first = "10000000000000001";
    string second = "2000000000";
    vector<string> indices = {"1000000000", "2000000000", "3000000000", "123456789012", "93254321", "4522145436", "88654323689"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1338333334", "671666667", "1", "1", "1942830453", "1", "1"};
    if(result == expected) {
        cout << "Test Case 118: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 118: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test119() {
    string first = "71";
    string second = "999234234324543545";
    vector<string> indices = {"540353593745438344"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1"};
    if(result == expected) {
        cout << "Test Case 119: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 119: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test120() {
    string first = "127576365452425";
    string second = "848376478527645";
    vector<string> indices = {"123547584748363"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5"};
    if(result == expected) {
        cout << "Test Case 120: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 120: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test121() {
    string first = "10000000000000";
    string second = "12";
    vector<string> indices = {"100000000000000", "1"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"4", "12"};
    if(result == expected) {
        cout << "Test Case 121: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 121: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test122() {
    string first = "1";
    string second = "1000000000000000000";
    vector<string> indices = {"1000000000000000000", "999999999999999999", "999999999999999998", "999999999999999997", "999999999999999996", "999999999999999995", "999999999999999994", "0", "1", "5", "4"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"333333333333333334", "1", "333333333333333335", "333333333333333336", "1", "333333333333333337", "333333333333333338", "1", "1000000000000000000", "999999999999999997", "999999999999999998"};
    if(result == expected) {
        cout << "Test Case 122: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 122: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test123() {
    string first = "2";
    string second = "99999999999999999";
    vector<string> indices = {"99999999999999999"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0"};
    if(result == expected) {
        cout << "Test Case 123: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 123: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test124() {
    string first = "100000000";
    string second = "99999999";
    vector<string> indices = {"100"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"99999933"};
    if(result == expected) {
        cout << "Test Case 124: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 124: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test125() {
    string first = "1000000000000000000";
    string second = "1";
    vector<string> indices = {"0", "1", "2", "888888888888888888", "123456789"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1000000000000000000", "1", "999999999999999999", "407407407407407408", "999999999917695474"};
    if(result == expected) {
        cout << "Test Case 125: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 125: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test126() {
    string first = "99999999999999";
    string second = "2";
    vector<string> indices = {"100000000000000", "99999999999999"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0", "1"};
    if(result == expected) {
        cout << "Test Case 126: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 126: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test127() {
    string first = "1000000000000000000";
    string second = "1";
    vector<string> indices = {"0", "1", "2", "5", "1000", "10000000000000000", "10000000000000001", "10000000000000002", "412341281", "7384231", "213409"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1000000000000000000", "1", "999999999999999999", "999999999999999997", "1", "1", "993333333333333333", "993333333333333332", "999999999725105813", "1", "1"};
    if(result == expected) {
        cout << "Test Case 127: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 127: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test128() {
    string first = "13613451236135136";
    string second = "13613451236135135";
    vector<string> indices = {"13613451236135135"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1"};
    if(result == expected) {
        cout << "Test Case 128: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 128: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test129() {
    string first = "2";
    string second = "99999999999999999";
    vector<string> indices = {"99999", "2828232", "12123124", "2432432424", "111", "11", "0", "24343", "1232341", "12122441", "11313131311", "222323232323233", "222189766532432", "32", "14556", "8435432522", "23456645435435", "241", "293858294", "1345", "9938282", "222782728173", "242", "17909765", "45677897542", "23432444", "65678", "2435557788", "234342"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"2", "2", "99999999983835835", "2", "2", "99999999999999985", "2", "99999999999967543", "99999999998356879", "99999999983836745", "99999984915824919", "99703569023569023", "99703746977956757", "99999999999999957", "2", "99999988752756637", "99968724472752753", "99999999999999679", "99999999608188941", "99999999999998207", "99999999986748957", "2", "99999999999999677", "99999999976120313", "99999939096136611", "99999999968756741", "99999999999912429", "2", "2"};
    if(result == expected) {
        cout << "Test Case 129: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 129: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test130() {
    string first = "13123123123123333";
    string second = "10123012312333111";
    vector<string> indices = {"12312312313", "12312312312", "3934734", "2342", "0", "1", "2", "3", "4", "5", "3443", "121", "123123", "123213123", "100000000000", "123123", "333312", "999923434444", "221123", "999333", "6", "7", "8", "9", "10", "11", "12", "13"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "1", "1", "0", "13123123123123333", "10123012312333111", "3000110810790222", "7122901501542889", "4122790690752667", "3000110810790222", "0", "1549", "1", "1", "1", "1", "1", "1", "0", "1", "1122679879962445", "1877430930827777", "754751050865332", "1122679879962445", "367928829097113", "754751050865332", "386822221768219", "367928829097113"};
    if(result == expected) {
        cout << "Test Case 130: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 130: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test131() {
    string first = "1000000000000000000";
    string second = "999999999999999999";
    vector<string> indices = {"1", "5", "999999999999999", "1000000000000000", "999999999999998", "10000000000", "999999999", "10000000001"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"999999999999999999", "1", "999333333333333334", "999333333333333333", "1", "999999993333333333", "999999999333333334", "1"};
    if(result == expected) {
        cout << "Test Case 131: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 131: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test132() {
    string first = "1";
    string second = "100000000000000000";
    vector<string> indices = {"1"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"100000000000000000"};
    if(result == expected) {
        cout << "Test Case 132: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 132: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test133() {
    string first = "99999997";
    string second = "13";
    vector<string> indices = {"252", "17435", "26976", "10394", "11517", "11278", "21211", "22626", "26677", "27895", "16815", "23428", "17210", "13538", "19516", "19752", "4522", "22984", "15922", "8595", "12478", "21960", "13245", "9363", "7201", "22708", "29945", "14110", "17666", "4815", "9644", "4150", "24424", "7381", "7476", "1295", "6597", "8508", "31422", "987654321"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"99997813", "99848898", "99766205", "99909920", "99900183", "13", "13", "99803905", "13", "13", "99854267", "13", "99850848", "99882672", "13", "99828813", "13", "13", "13", "99925507", "13", "99809677", "99885207", "99918851", "13", "13", "99740478", "13", "99846896", "99958267", "99916420", "13", "13", "13", "99935205", "99988778", "99942823", "99926261", "99727673", "1"};
    if(result == expected) {
        cout << "Test Case 133: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 133: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test134() {
    string first = "1000000000000000";
    string second = "1000000000000001";
    vector<string> indices = {"345364364336", "346346346", "32523463467", "0", "346436745674564", "346457585683452"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "999999769102438", "999978317691024", "1000000000000000", "1", "769028276211034"};
    if(result == expected) {
        cout << "Test Case 134: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 134: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test135() {
    string first = "100000000000";
    string second = "1";
    vector<string> indices = {"1", "2", "3", "4", "5", "6", "1000000", "10000001", "1000000002"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "99999999999", "99999999998", "1", "99999999997", "99999999996", "1", "99993333333", "99333333332"};
    if(result == expected) {
        cout << "Test Case 135: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 135: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test136() {
    string first = "1";
    string second = "1000000000000000000";
    vector<string> indices = {"1000000000000000000", "1000000000000000000", "1000000000000000000", "1000000000000000000", "1000000000000000000", "1000000000000000000", "1000000000000000000", "1000000000000000000", "1000000000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"333333333333333334", "333333333333333334", "333333333333333334", "333333333333333334", "333333333333333334", "333333333333333334", "333333333333333334", "333333333333333334", "333333333333333334"};
    if(result == expected) {
        cout << "Test Case 136: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 136: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test137() {
    string first = "9999999";
    string second = "1";
    vector<string> indices = {"8000003"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"4666664"};
    if(result == expected) {
        cout << "Test Case 137: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 137: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test138() {
    string first = "1000000000000000000";
    string second = "1";
    vector<string> indices = {"0", "1000000000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1000000000000000000", "1"};
    if(result == expected) {
        cout << "Test Case 138: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 138: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test139() {
    string first = "100000000000";
    string second = "1";
    vector<string> indices = {"100000000000", "100000000001", "100000000002", "100000000003"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "33333333333", "33333333332", "1"};
    if(result == expected) {
        cout << "Test Case 139: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 139: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test140() {
    string first = "1";
    string second = "100000000000000000";
    vector<string> indices = {"100000000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"33333333333333334"};
    if(result == expected) {
        cout << "Test Case 140: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 140: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test141() {
    string first = "9999999999999999";
    string second = "1";
    vector<string> indices = {"100000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1"};
    if(result == expected) {
        cout << "Test Case 141: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 141: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test142() {
    string first = "999999999999999999";
    string second = "1000000000000000000";
    vector<string> indices = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "999999999999999990", "999999999999999991", "999999999999999992", "999999999999999993", "999999999999999994", "999999999999999995", "999999999999999996", "999999999999999997", "999999999999999998", "999999999999999999", "1000000000000000000", "12", "123", "12345", "123456", "1234567", "12345678", "123456789"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"999999999999999999", "1000000000000000000", "1", "999999999999999999", "999999999999999998", "1", "999999999999999997", "999999999999999996", "1", "999999999999999995", "999999999999999994", "333333333333333341", "333333333333333340", "1", "333333333333333339", "333333333333333338", "1", "333333333333333337", "333333333333333336", "1", "333333333333333335", "333333333333333334", "999999999999999993", "999999999999999919", "999999999999991771", "999999999999917697", "999999999999176956", "999999999991769549", "999999999917695475"};
    if(result == expected) {
        cout << "Test Case 142: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 142: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test143() {
    string first = "1000000000000000000";
    string second = "999999999999999997";
    vector<string> indices = {"0", "1", "2", "3", "4", "5", "100000000000000000", "200000000000000000", "500000000000000000", "500000000000000001", "500000000000000002", "600000000000000000", "600000000000000001"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1000000000000000000", "999999999999999997", "3", "999999999999999994", "999999999999999991", "3", "799999999999999999", "3", "3", "2", "1", "0", "1"};
    if(result == expected) {
        cout << "Test Case 143: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 143: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test144() {
    string first = "999999999999999998";
    string second = "999999999999999917";
    vector<string> indices = {"999999999999999998", "999999999999999", "99999999999999999"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "946000000000000052", "0"};
    if(result == expected) {
        cout << "Test Case 144: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 144: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test145() {
    string first = "1000000000000000000";
    string second = "1000000000";
    vector<string> indices = {"1000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1000000000"};
    if(result == expected) {
        cout << "Test Case 145: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 145: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test146() {
    string first = "1000000000000000000";
    string second = "3";
    vector<string> indices = {"1000000000000000000", "4000", "366239", "1", "1000000000000000000", "99999999999999999", "99999999999999999", "99999999999999999", "99999999999999999", "99999999999999999", "99999999999999999", "99999999999999999", "99999999999999999", "99999999999999999"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "3", "999999999999267523", "3", "1", "800000000000000002", "800000000000000002", "800000000000000002", "800000000000000002", "800000000000000002", "800000000000000002", "800000000000000002", "800000000000000002", "800000000000000002"};
    if(result == expected) {
        cout << "Test Case 146: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 146: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test147() {
    string first = "98787687676524387";
    string second = "98787687676524345";
    vector<string> indices = {"5", "95", "164721", "418", "3387", "710", "0", "1197", "19507", "5848", "5342523466623", "634577788645856", "32545623445673543"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"42", "42", "98787687671912199", "98787687676512669", "98787687676429551", "42", "98787687676524387", "98787687676490871", "98787687675978177", "98787687676360629", "98638097019458943", "42", "0"};
    if(result == expected) {
        cout << "Test Case 147: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 147: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test148() {
    string first = "1000000000000000000";
    string second = "1";
    vector<string> indices = {"100000000000000000", "100000000000000001", "100000000000000002", "100000000000000003", "100000000000000004", "100000000000000005", "100000000000000006"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "933333333333333333", "933333333333333332", "1", "933333333333333331", "933333333333333330", "1"};
    if(result == expected) {
        cout << "Test Case 148: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 148: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test149() {
    string first = "999999999999999999";
    string second = "1";
    vector<string> indices = {"99999999999"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"999999933333333333"};
    if(result == expected) {
        cout << "Test Case 149: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 149: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test150() {
    string first = "1";
    string second = "1000000000000000000";
    vector<string> indices = {"1", "2", "3", "4", "5", "1000000000000000000", "999999999999999999", "99999999999999998", "99999999999999997", "99999999999999996"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1000000000000000000", "999999999999999999", "1", "999999999999999998", "999999999999999997", "333333333333333334", "1", "933333333333333335", "933333333333333336", "1"};
    if(result == expected) {
        cout << "Test Case 150: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 150: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test151() {
    string first = "198416319648651891";
    string second = "198416319648651154";
    vector<string> indices = {"0", "1", "2", "100", "100000", "100000000", "1000000000000000", "1000000000000001", "1000000000000002", "100000000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"198416319648651891", "198416319648651154", "737", "198416319648602512", "198416319599518312", "198416270515318312", "0", "1", "1", "0"};
    if(result == expected) {
        cout << "Test Case 151: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 151: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test152() {
    string first = "100000000000000000";
    string second = "1";
    vector<string> indices = {"10000000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1"};
    if(result == expected) {
        cout << "Test Case 152: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 152: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test153() {
    string first = "10000000000000000";
    string second = "1";
    vector<string> indices = {"10000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1"};
    if(result == expected) {
        cout << "Test Case 153: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 153: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test154() {
    string first = "1000000000000000000";
    string second = "2";
    vector<string> indices = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "18", "19", "20", "21", "22", "23", "24", "25", "1000000000000000000", "999999999999999999", "999999999999999998", "999999999999999997", "999999999999999996", "999999999999999995", "999999999999999994", "999999999999999993", "999999999999999992", "999999999999999991", "999999999999999990", "999999999999999989", "999999999999999988", "999999999999999987", "999999999999999986", "999999999999999985", "999999999999999985", "99999", "999999999", "99999999999", "1000000000000", "1000000000002"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1000000000000000000", "2", "999999999999999998", "999999999999999996", "2", "999999999999999994", "999999999999999992", "2", "999999999999999990", "999999999999999988", "999999999999999976", "2", "999999999999999974", "999999999999999972", "2", "999999999999999970", "999999999999999968", "2", "2", "0", "2", "2", "0", "2", "2", "0", "2", "2", "0", "2", "2", "0", "2", "2", "2", "999999999999866668", "999999998666666668", "999999866666666668", "2", "999998666666666664"};
    if(result == expected) {
        cout << "Test Case 154: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 154: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test155() {
    string first = "1000000000000000000";
    string second = "12";
    vector<string> indices = {"1000000000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"4"};
    if(result == expected) {
        cout << "Test Case 155: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 155: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test156() {
    string first = "1";
    string second = "19999999999999997";
    vector<string> indices = {"1000000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"19333333333333331"};
    if(result == expected) {
        cout << "Test Case 156: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 156: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test157() {
    string first = "100000000000";
    string second = "2";
    vector<string> indices = {"100000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"2"};
    if(result == expected) {
        cout << "Test Case 157: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 157: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test158() {
    string first = "1289734983848";
    string second = "345";
    vector<string> indices = {"0", "2345435", "31434", "456567777", "123", "23"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1289734983848", "1289195533913", "1289727754028", "1184724395138", "1289734955558", "1289734978673"};
    if(result == expected) {
        cout << "Test Case 158: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 158: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test159() {
    string first = "1000000000000000000";
    string second = "999999999999999999";
    vector<string> indices = {"123124", "8123572389572", "8357238572389", "3452789474834"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"999999999999917917", "1", "999994428507618407", "1"};
    if(result == expected) {
        cout << "Test Case 159: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 159: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test160() {
    string first = "1000000000000000";
    string second = "1";
    vector<string> indices = {"100", "10000000", "10000000000000001", "10000000000000002", "10000000000000003", "10000000000000004", "99999999", "99999991", "9999999992", "999999999993", "99999999994", "9999999999995"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "1", "1", "0", "1", "1", "999999933333334", "1", "999993333333339", "999333333333338", "1", "993333333333337"};
    if(result == expected) {
        cout << "Test Case 160: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 160: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test161() {
    string first = "999999999999999999";
    string second = "999999999999999998";
    vector<string> indices = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "10", "11", "23", "27", "300", "999999999999999999", "999999999999999998", "999999999999999997", "999999999999999996", "999999999999999995", "400", "500", "600", "700", "800", "900", "1000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"999999999999999999", "999999999999999998", "1", "999999999999999997", "999999999999999996", "1", "999999999999999995", "999999999999999994", "1", "999999999999999992", "1", "1", "999999999999999981", "999999999999999799", "333333333333333333", "1", "333333333333333334", "333333333333333335", "1", "999999999999999732", "1", "999999999999999599", "999999999999999532", "1", "999999999999999399", "999999999999999332"};
    if(result == expected) {
        cout << "Test Case 161: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 161: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test162() {
    string first = "1000000000003";
    string second = "100000000000";
    vector<string> indices = {"333333333333", "33333333334", "666666666666", "66666666667", "0", "1", "2", "3", "1000000000003", "100000000000", "100000000003", "10000000000", "2000000000003", "200000000000", "2000000000004", "200000000002", "2000000000005", "200000000001", "2000000000009", "200000005551"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "33333333364", "1", "0", "1000000000003", "100000000000", "900000000003", "800000000003", "0", "0", "0", "80000000032", "1", "1", "1", "0", "0", "1", "1", "1"};
    if(result == expected) {
        cout << "Test Case 162: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 162: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test163() {
    string first = "7";
    string second = "1000000000000000000";
    vector<string> indices = {"14", "39", "55", "67", "60", "41", "55", "98", "72", "53", "75", "41", "66", "33", "336980168358347371", "180434858266681055", "64381964449507901", "671014630066920524", "701702728029219489", "944283355083586260", "778374504927271032", "582236636524827736", "807107662061379050", "990394075620750169", "971781470065612487", "638200910991661225", "137895185539504834", "902545630468429561", "100177076162526948", "243188794289673596", "520874319423623652", "408871003437772636", "873131554079885634", "504693160427350634", "961621475301492867", "363453246592512331", "81280251945689883", "117340067888387914", "859585285960250494", "361654435683883107", "25862982999855346", "528060684163758167", "391876532283122667", "632187728344569960", "445649615727892875", "486759908966523935", "4032879895630912", "404296571877164433", "828032898761506083", "1000000000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"999999999999999937", "7", "999999999999999748", "999999999999999692", "7", "999999999999999811", "999999999999999748", "999999999999999545", "7", "999999999999999755", "7", "999999999999999811", "7", "7", "0", "157970661422155079", "699550832568963131", "1", "1", "1", "1", "0", "1", "0", "1", "0", "356489134148977446", "0", "7", "1", "1", "0", "1", "1", "1", "0", "7", "452413016520856406", "0", "1", "879306079334008390", "1", "1", "1", "1", "1", "981179893820389082", "1", "1", "0"};
    if(result == expected) {
        cout << "Test Case 163: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 163: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test164() {
    string first = "777777777777";
    string second = "111111111222";
    vector<string> indices = {"10000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0"};
    if(result == expected) {
        cout << "Test Case 164: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 164: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test165() {
    string first = "100000000000000000";
    string second = "1";
    vector<string> indices = {"100000000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1"};
    if(result == expected) {
        cout << "Test Case 165: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 165: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test166() {
    string first = "100000000000";
    string second = "1";
    vector<string> indices = {"100000000000"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1"};
    if(result == expected) {
        cout << "Test Case 166: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 166: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test167() {
    string first = "81";
    string second = "77";
    vector<string> indices = {"360330379", "412732840", "888951758", "657106469", "148940834", "701126028", "470699787", "120354819", "573033860", "65505591", "279826194", "779060718", "290851176", "492253829", "244289706", "82019398", "267734061", "847794706", "156674580", "177353870", "697657013", "914568496", "293968597", "99301781", "565335713", "615413696", "358016819", "554335285", "829445399", "572949710", "425921434", "867825114", "974450675", "169663411", "724654981", "365338320", "593946664", "156203036", "681908891", "731344947", "246228872", "526794372", "588774490", "730309747", "730718912", "473565", "606825953"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1", "1", "0", "0", "0", "1", "1", "1", "0", "1", "1", "1", "1", "0", "1", "1", "1", "1", "1", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", "1", "1", "0", "1", "1", "1", "1", "0", "0", "1", "0", "1", "1", "1", "0", "1", "0"};
    if(result == expected) {
        cout << "Test Case 167: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 167: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test168() {
    string first = "345";
    string second = "6232350023523353";
    vector<string> indices = {"0", "1", "2", "3", "4", "4234324", "3256236236000", "634642312423400", "643636234123523", "34253265236346636"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"345", "6232350023523353", "6232350023523008", "345", "6232350023522663", "6232349049629063", "5483415689243468", "0", "0", "1"};
    if(result == expected) {
        cout << "Test Case 168: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 168: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test169() {
    string first = "999999999999999999";
    string second = "99999999999999997";
    vector<string> indices = {"999999999999999", "3287632732463433", "2387346734243342", "15214321111", "0", "1", "2", "21752632543262", "2375436523764523", "347436", "569875457", "6975656559467"};
    AbsSequence* pObj = new AbsSequence();
    clock_t start = clock();
    vector<string> result = pObj->getElements(first, second, indices);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"29", "29", "53844629804629018", "99999705856458827", "999999999999999999", "99999999999999997", "900000000000000002", "99579449104163898", "54074893873886195", "29", "99999988982408128", "99865137306517268"};
    if(result == expected) {
        cout << "Test Case 169: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 169: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    test67() == 0 ? ++passed : ++failed;
    test68() == 0 ? ++passed : ++failed;
    test69() == 0 ? ++passed : ++failed;
    test70() == 0 ? ++passed : ++failed;
    test71() == 0 ? ++passed : ++failed;
    test72() == 0 ? ++passed : ++failed;
    test73() == 0 ? ++passed : ++failed;
    test74() == 0 ? ++passed : ++failed;
    test75() == 0 ? ++passed : ++failed;
    test76() == 0 ? ++passed : ++failed;
    test77() == 0 ? ++passed : ++failed;
    test78() == 0 ? ++passed : ++failed;
    test79() == 0 ? ++passed : ++failed;
    test80() == 0 ? ++passed : ++failed;
    test81() == 0 ? ++passed : ++failed;
    test82() == 0 ? ++passed : ++failed;
    test83() == 0 ? ++passed : ++failed;
    test84() == 0 ? ++passed : ++failed;
    test85() == 0 ? ++passed : ++failed;
    test86() == 0 ? ++passed : ++failed;
    test87() == 0 ? ++passed : ++failed;
    test88() == 0 ? ++passed : ++failed;
    test89() == 0 ? ++passed : ++failed;
    test90() == 0 ? ++passed : ++failed;
    test91() == 0 ? ++passed : ++failed;
    test92() == 0 ? ++passed : ++failed;
    test93() == 0 ? ++passed : ++failed;
    test94() == 0 ? ++passed : ++failed;
    test95() == 0 ? ++passed : ++failed;
    test96() == 0 ? ++passed : ++failed;
    test97() == 0 ? ++passed : ++failed;
    test98() == 0 ? ++passed : ++failed;
    test99() == 0 ? ++passed : ++failed;
    test100() == 0 ? ++passed : ++failed;
    test101() == 0 ? ++passed : ++failed;
    test102() == 0 ? ++passed : ++failed;
    test103() == 0 ? ++passed : ++failed;
    test104() == 0 ? ++passed : ++failed;
    test105() == 0 ? ++passed : ++failed;
    test106() == 0 ? ++passed : ++failed;
    test107() == 0 ? ++passed : ++failed;
    test108() == 0 ? ++passed : ++failed;
    test109() == 0 ? ++passed : ++failed;
    test110() == 0 ? ++passed : ++failed;
    test111() == 0 ? ++passed : ++failed;
    test112() == 0 ? ++passed : ++failed;
    test113() == 0 ? ++passed : ++failed;
    test114() == 0 ? ++passed : ++failed;
    test115() == 0 ? ++passed : ++failed;
    test116() == 0 ? ++passed : ++failed;
    test117() == 0 ? ++passed : ++failed;
    test118() == 0 ? ++passed : ++failed;
    test119() == 0 ? ++passed : ++failed;
    test120() == 0 ? ++passed : ++failed;
    test121() == 0 ? ++passed : ++failed;
    test122() == 0 ? ++passed : ++failed;
    test123() == 0 ? ++passed : ++failed;
    test124() == 0 ? ++passed : ++failed;
    test125() == 0 ? ++passed : ++failed;
    test126() == 0 ? ++passed : ++failed;
    test127() == 0 ? ++passed : ++failed;
    test128() == 0 ? ++passed : ++failed;
    test129() == 0 ? ++passed : ++failed;
    test130() == 0 ? ++passed : ++failed;
    test131() == 0 ? ++passed : ++failed;
    test132() == 0 ? ++passed : ++failed;
    test133() == 0 ? ++passed : ++failed;
    test134() == 0 ? ++passed : ++failed;
    test135() == 0 ? ++passed : ++failed;
    test136() == 0 ? ++passed : ++failed;
    test137() == 0 ? ++passed : ++failed;
    test138() == 0 ? ++passed : ++failed;
    test139() == 0 ? ++passed : ++failed;
    test140() == 0 ? ++passed : ++failed;
    test141() == 0 ? ++passed : ++failed;
    test142() == 0 ? ++passed : ++failed;
    test143() == 0 ? ++passed : ++failed;
    test144() == 0 ? ++passed : ++failed;
    test145() == 0 ? ++passed : ++failed;
    test146() == 0 ? ++passed : ++failed;
    test147() == 0 ? ++passed : ++failed;
    test148() == 0 ? ++passed : ++failed;
    test149() == 0 ? ++passed : ++failed;
    test150() == 0 ? ++passed : ++failed;
    test151() == 0 ? ++passed : ++failed;
    test152() == 0 ? ++passed : ++failed;
    test153() == 0 ? ++passed : ++failed;
    test154() == 0 ? ++passed : ++failed;
    test155() == 0 ? ++passed : ++failed;
    test156() == 0 ? ++passed : ++failed;
    test157() == 0 ? ++passed : ++failed;
    test158() == 0 ? ++passed : ++failed;
    test159() == 0 ? ++passed : ++failed;
    test160() == 0 ? ++passed : ++failed;
    test161() == 0 ? ++passed : ++failed;
    test162() == 0 ? ++passed : ++failed;
    test163() == 0 ? ++passed : ++failed;
    test164() == 0 ? ++passed : ++failed;
    test165() == 0 ? ++passed : ++failed;
    test166() == 0 ? ++passed : ++failed;
    test167() == 0 ? ++passed : ++failed;
    test168() == 0 ? ++passed : ++failed;
    test169() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=20812309&rd=10785&pm=8178
********************************************************************************
#include <vector> 
#include <string> 
 
using namespace std; 
 
class AbsSequence { 
  public: 
   
  vector <string> getElements(string first, string second, vector <string> ind) { 
    long long a, b, c[50]; 
    long long aa, bb, cc; 
    int n, i; 
    long long j; 
     
    vector<string> re; 
     
    sscanf(first.c_str(),"%lld",&a); 
    sscanf(second.c_str(),"%lld",&b); 
    n = ind.size(); 
     
    for (i = 0; i < n; i ++) 
      sscanf(ind[i].c_str(),"%lld",c+i); 
     
    for (i = 0; i < n; i ++) { 
      aa = a; bb = b; 
      for (j = 0; j < c[i];) { 
        cc = aa - bb >? bb - aa; 
         
        long long dd, ee, ff; 
         
        dd = 120000000000000000LL; 
        ee = 150000000000000000LL; 
        ff = 100000000000000000LL; 
        while (dd >= 12) { 
            while (aa > bb && bb / dd > cc && j + ee < c[i]) { 
            aa -= cc * ff; 
            bb -= cc * ff; 
            j += ee; 
            cc = aa - bb >? bb - aa; 
            } 
          dd /= 10; 
          ee /= 10; 
          ff /= 10; 
          } 
        if (aa == bb && j < c[i]) { 
          j += (c[i] - j - 1) / 3 * 3; 
          cc = aa - bb >? bb - aa; 
          } 
        if (j < c[i]) { 
          aa = bb; 
          bb = cc; 
          j ++; 
          } 
        } 
      char tmp[100]; 
      sprintf(tmp, "%lld", aa); 
      re.push_back(tmp); 
      } 
    return re; 
    } 
  };

********************************************************************************
*******************************************************************************/