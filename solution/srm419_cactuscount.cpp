/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=10077
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class CactusCount {
public:
    int countCacti(int n, vector<string> edges);
};

int CactusCount::countCacti(int n, vector<string> edges) {
    int ret;
    return ret;
}


int test0() {
    int n = 3;
    vector<string> edges = {"1 2,1 3,2 3"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    int n = 10;
    vector<string> edges = {};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 10;
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    int n = 5;
    vector<string> edges = {"1 2,3 4,4 5"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    int n = 17;
    vector<string> edges = {"1 2,2 3,3 4,4 5,5 3,1 3,6 7,7 8,6 8,8 9,9 1", "0,10 11,11 9,12 13,14 15,15 16,16 17,14 17,14 16"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    int n = 200;
    vector<string> edges = {"1 2,2 3,1 3,3 4,4 5,5 6,4 6,6 7,7 8,8 9,7 9,9 10,1", "0 11,11 12,10 12,12 13,13 14,14 15,13 15,15 16,16 ", "17,17 18,16 18,18 19,19 20,20 21,19 21,21 22,22 23", ",23 24,22 24,24 25,25 26,26 27,25 27,27 28,28 29,2", "9 30,28 30,30 31,31 32,32 33,31 33,33 34,34 35,35 ", "36,34 36,36 37,37 38,38 39,37 39,39 40,40 41,41 42", ",40 42,42 43,43 44,44 45,43 45,45 46,46 47,47 48,4", "6 48,48 49,49 50,50 51,49 51,51 52,52 53,53 54,52 ", "54,54 55,55 56,56 57,55 57,57 58,58 59,59 60,58 60", ",60 61,61 62,62 63,61 63,63 64,64 65,65 66,64 66,6", "6 67,67 68,68 69,67 69,69 70,70 71,71 72,70 72,72 ", "73,73 74,74 75,73 75,75 76,76 77,77 78,76 78,78 79", ",79 80,80 81,79 81,81 82,82 83,83 84,82 84,84 85,8", "5 86,86 87,85 87,87 88,88 89,89 90,88 90,90 91,91 ", "92,92 93,91 93,93 94,94 95,95 96,94 96,96 97,97 98", ",98 99,97 99,99 100,100 101,101 102,100 102,102 10", "3,103 104,104 105,103 105,105 106,106 107,107 108,", "106 108,108 109,109 110,110 111,109 111,111 112,11", "2 113,113 114,112 114,114 115,115 116,116 117,115 ", "117,117 118,118 119,119 120,118 120,120 121,121 12", "2,122 123,121 123,123 124,124 125,125 126,124 126,", "126 127,127 128,128 129,127 129,129 130,130 131,13", "1 132,130 132,132 133,133 134,134 135,133 135,135 ", "136,136 137,137 138,136 138,138 139,139 140,140 14", "1,139 141,141 142,142 143,143 144,142 144,144 145,", "145 146,146 147,145 147,147 148,148 149,149 150,14", "8 150,150 151,151 152,152 153,151 153,153 154,154 ", "155,155 156,154 156,156 157,157 158,158 159,157 15", "9,159 160,160 161,161 162,160 162,162 163,163 164,", "164 165,163 165,165 166,166 167,167 168,166 168,16", "8 169,169 170,170 171,169 171,171 172,172 173,173 ", "174,172 174,174 175,175 176,176 177,175 177,177 17", "8,178 179,179 180,178 180,180 181,181 182,182 183,", "181 183,183 184,184 185,185 186,184 186,186 187,18", "7 188,188 189,187 189,189 190,190 191,191 192,190 ", "192,192 193,193 194,194 195,193 195,195 196,196 19", "7,197 198,196 198"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    int n = 200;
    vector<string> edges = {"1 2,2 3,1 3,3 4,4 5,5 6,4 6,6 7,7 8,8 9,7 9,9 10,1", "0 11,11 12,10 12,12 13,13 14,14 15,13 15,15 16,16 ", "17,17 18,16 18,18 19,19 20,20 21,19 21,21 22,22 23", ",23 24,22 24,24 25,25 26,26 27,25 27,27 28,28 29,2", "9 30,28 30,30 31,31 32,32 33,31 33,33 34,34 35,35 ", "36,34 36,36 37,37 38,38 39,37 39,39 40,40 41,41 42", ",40 42,42 43,43 44,44 45,43 45,45 46,46 47,47 48,4", "6 48,48 49,49 50,50 51,49 51,51 52,52 53,53 54,52 ", "54,54 55,55 56,56 57,55 57,57 58,58 59,59 60,58 60", ",60 61,61 62,62 63,61 63,63 64,64 65,65 66,64 66,6", "6 67,67 68,68 69,67 69,69 70,70 71,71 72,70 72,72 ", "73,73 74,74 75,73 75,75 76,76 77,77 78,76 78,78 79", ",79 80,80 81,79 81,81 82,82 83,83 84,82 84,84 85,8", "5 86,86 87,85 87,87 88,88 89,89 90,88 90,90 91,91 ", "92,92 93,91 93,93 94,94 95,95 96,94 96,96 97,97 98", ",98 99,97 99,99 100,100 101,101 102,100 102,102 10", "3,103 104,104 105,103 105,105 106,106 107,107 108,", "106 108,108 109,109 110,110 111,109 111,111 112,11", "2 113,113 114,112 114,114 115,115 116,116 117,115 ", "117,117 118,118 119,119 120,118 120,120 121,121 12", "2,122 123,121 123,123 124,124 125,125 126,124 126,", "126 127,127 128,128 129,127 129,129 130,130 131,13", "1 132,130 132,132 133,133 134,134 135,133 135,135 ", "136,136 137,137 138,136 138,138 139,139 140,140 14", "1,139 141,141 142,142 143,143 144,142 144,144 145,", "145 146,146 147,145 147,147 148,148 149,149 150,14", "8 150,150 151,151 152,152 153,151 153,153 154,154 ", "155,155 156,154 156,156 157,157 158,158 159,157 15", "9,159 160,160 161,161 162,160 162,162 163,163 164,", "164 165,163 165,165 166,166 167,167 168,166 168,16", "8 169,169 170,170 171,169 171,171 172,172 173,173 ", "174,172 174,174 175,175 176,176 177,175 177,177 17", "8,178 179,179 180,178 180,180 181,181 182,182 183,", "181 183,183 184,184 185,185 186,184 186,186 187,18", "7 188,188 189,187 189,189 190,190 191,191 192,190 ", "192,192 193,193 194,194 195,193 195,195 196,196 19", "7,197 198,196 198,198 1"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    int n = 200;
    vector<string> edges = {"177 42,19 155,24 28,76 32,55 59,101 9,96 164,8", "8 64,171 118,140 39,93 170", ",116 163,151 72,1", "65 142,", "63 67,160 59,79 187,120 73,67", " 9", "1,70 110,106 105,47 171,69 13,129 178,34 89,17", "5 1", "43,157 98,1", "98 7,50 159,6 67,107 86,81 184,60 97,36 1", "01,128 1", "92,15", "2 163,145 48,64 196,190 80,81 19,184 155,16", "7 179,189 138,134", " 17,146 120,47 166,115 83,", "195 60,11", "7 69,145 200,161 104,106 196,194 171,185 161,25", " 180,163 101,126 92,1", "44 155,74 187,28 184,8 16,121 98,11 4", "9,15 18", "8,38 28,77 108,78 71,66 141,172 94", ",35 17,99 120,52 138,197 18,32 13,54 167,", "63 56,", "17 121,174 91,69 185,82 106,144 189,180 36,11", "1 54,7 120,80 10", "5,139 149,13 197,108 157,125 72,3 197,188 38,153 1", "90,87 56,182 114,183 70,91 20,142 150,1", "79 10,127 67,194 161,29 51,112 90,196 153,103 ", "87,141 178,164 27,148 111,154 87,38 69,32 160,91 1", "63,46 90,141 16,83 147,40 88,100 195,131 141,109 4", "8,30 92,56 194,19 35,117 72,92 45,84 63,42 16,159 ", "121,192 145,98 116,137 190,90 156,118 60,191 112,1", "6 144,105 51,94 21,53 83,10 47,48 162,72 198,101 1", "30,16 17,5 166,168 183,200 111,51 87,133 43,62 84,", "122 37,190 200,101 85,13 132,26 63,135 180,10 78,1", "38 136,170 96,198 165,186 88,19 136,31 33,165 159,", "132 25,77 139,73 184,159 33,71 186,31 37,191 143,1", "10 4,166 142,121 173,21 43,108 174,199 178,187 90,", "110 58,22 197,14 55,155 76,95 153,58 134,181 31,13", "0 50,153 2,158 132,200 92,173 32,20 119,65 99,33 1", "44,147 185,75 74,47 119,89 130,41 9,162 31,68 19,1", "5 65,185 50,12 32,1 35,123 46,34 16,150 176,176 94", ",4 75,102 132,18 168,148 177,44 198,149 177,178 22", ",16 128,5 18,119 136,136 194,2 110,33 77,113 41,59", " 86,143 122,51 142,197 151,32 114,45 95,134 8,74 1", "56,49 108,136 15,87 168,57 174,156 134,163 149,70 ", "39,9 62,27 66,97 83,114 190,37 15,193 112,86 143,1", "80 66,39 29,124 135,23 143,61 25,104 170,82 6,169 ", "165,164 85,98 145,43 14,196 93,85 70,155 49,129 46"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    int n = 200;
    vector<string> edges = {"71 48,142 192,132 173,188 156,18 163,17 132", ",197 76,65 190,100 122,51 198,194 125,121 92", ",170 44,49 186,75 82,49 63,94 34,114 128,40 120,1", "23 103,21 36,55 21,97 195,38 125,128 178,123 ", "190,31 9,198 112,171 145,95 103,136 13,197 119,178", " 46,72 117,113 83,118 191,143 98,170 8,125 48,168 ", "30,79 13,47 71,34 26,10 179,3 98,112 64,103 47,120", " 143,20 1,105 160,156 74,172 135,165 87,39 3,154 1", "4,122 13,48 72,2 179,40 199,199 89,163 7,9 173,127", " 112,165 62,134 152,106 13,74 153,41 105,161 94,64", " 2,149 47,23 73,167 195,42 110,169 56,104 74,72 12", "3,193 90,77 84,2 89,89 4,181 97,84 190,139 147,44 ", "37,112 99,14 68,97 126,133 13,52 118,95 67,161 56,", "124 79,87 108,8 19,137 70,102 188,144 70,51 48,93 ", "160,180 34,77 68,166 82,99 73,152 25,73 66,92 85,1", " 52,192 111,81 173,120 172,63 104,90 72,61 101,155", " 92,50 153,14 65,151 95,143 80,33 80,87 200,51 186", ",145 173,131 68,78 7,30 135,182 49,151 117,96 147,", "32 183,66 110,133 9,116 167,32 81,60 155,26 157,91", " 32,29 134,177 175,174 28,33 92,53 169,180 57,10 1", "89,2 92,42 103,153 103,8 174,54 6,59 52,122 28,58 ", "189,126 164,18 141,15 141,43 156,59 37,64 89,78 48", ",93 38,3 175,35 176,72 14,104 75,68 78,126 128,146", " 193,46 8,121 179,73 177,162 112,75 131,185 15,85 ", "30,156 72,131 85,83 21,111 118,157 139,99 140,159 ", "194,179 62,159 198,36 16,16 73,121 7,172 10,100 17", "8,61 180,90 165,139 37,104 189,173 111,67 130,45 1", "69,97 145,141 153,76 37,4 10,103 163,11 185,70 67,", "98 73,22 21,160 11,111 124,47 87,13 184,69 136,137", " 146,115 139,14 30,100 96,145 1,117 176,16 77,123 ", "149,24 140,58 54,23 64,6 152,14 150,67 80,46 173,1", "66 39,147 119,131 186,144 82,103 182,109 102,50 10", ",53 8,200 103,59 196,27 50,120 85,184 116,130 62,1", "75 187,11 83,66 42,80 48,179 30,23 71,87 179,91 11", "5,28 126,121 48,121 95,160 36,148 53,16 35,105 177", ",176 73,62 39,61 91,7 41,186 162,180 101,130 175,5", "4 141,194 38,135 179,62 3,196 191,189 87,87 135,19", "6 97,88 86,58 51,141 95,19 107,124 157,94 132,147 ", "173,176 82,82 60,8 17,32 107,20 76,122 79,183 79,9", "7 138,164 17,135 74,38 83,80 16,37 142,130 41,191 ", "61,195 1,139 19,156 35,110 23,56 126,150 88,86 152", ",154 83,185 6,135 86,15 92,13 145,38 110,88 6,13 1", "74,108 55,129 52,95 190,99 62,6 120,12 147,189 110", ",144 159,41 165,119 180,105 90,168 187,190 102,175", " 146,45 9,134 75,27 62,90 82,162 11,187 90,1 142,1", "53 63,108 135,71 112,158 195,150 189,189 185,25 13", "1,188 159,78 62,107 197,5 147,140 64,65 176,154 16", ",50 90,189 73,173 100,54 137,192 20,74 105,151 14,", "138 61,70 35,176 168,29 200,101 45,91 101,173 57,3", "4 122,194 50,130 11,57 136,186 6,63 70,70 85,87 35"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    int n = 199;
    vector<string> edges = {"94 81,28 ", "15,22 100,15 127,18", "2 54,18 175,13 140,31 20,85 81,49 144,1", "75 69,39 19,191 27,199 4", ",180 77,104 7", "7,17 147,198 67,60 122,195 5,1 8,", "152 156,81 164,86 134,191 31,179 63,196 193,164 ", "193,57 29,69 108,89 165,95 149,142 1", "30,188 120,131 101,176 133,189 3,63 176,65 177,10", "4 161,33 72,181 53,101 193,20 168,57 172,13 142,", "91 105,130 158,148 74,121 35,98 77,35 26,184 107", ",3 101,168 47,25 77,36 11,132 27,149 155,1", "22 195,54 13,52 175,73 5,90 79,45 104,171 144,150 ", "27,165 23,195 145,51 173,68 63,147 181,4 180,197 7", "7,137 69,114 121,149 59,133 49,129 34,101 95,89 19", "7,190 195,34 174,57 73,37 99,57 140,181 30,50 21,4", "3 175,165 94,11 55,97 91,92 168,145 132,67 19,42 4", "1,77 117,160 49,197 51,21 181,58 64,82 187,112 32,", "84 13,77 165,115 18,104 163,88 28,108 162,142 129,", "189 127,109 41,161 141,75 151,108 176,183 97,192 6", "8,123 71,70 100,14 33,138 8,186 133,187 194,48 104", ",155 101,172 47,56 1,40 110,165 15,142 107,156 199", ",119 33,80 118,51 101,7 121,59 4,15 48,41 158,128 ", "104,38 50,101 15,110 63,88 156,64 110,41 195,177 1", "12,62 119,129 76,157 54,125 97,80 76,107 46,78 97,", "99 149,135 128,143 133,127 164,165 35,155 169,61 1", "10,162 66,161 114,121 180,141 3,170 49,72 52,139 2", "0,106 162,156 94,159 79,117 59,103 88,83 170,34 12", "4,131 163,27 140,190 132,144 65,151 1,98 89,178 84", ",35 89,37 196,126 7,116 41,54 73,134 62,46 92,173 ", "131,6 120,168 194,161 88,187 21,9 161,193 9,127 99", ",30 147,174 184,190 124,100 134,185 97,113 46,136 ", "34,55 79,70 58,163 26,146 30,152 173,29 122,16 184", ",140 12,172 195,66 61,169 141,19 79,32 67,128 149,", "111 63,75 20,163 81,114 94,3 126,10 194,77 88,173 ", "193,25 126,35 155,71 66,193 169,166 127,2 55,145 1", "90,23 81,182 102,121 189,194 138,148 191,116 75,78", " 170,53 118,125 100,24 88,13 96,12 116,194 50,153 ", "14,26 180,142 34,16 142,154 100,135 165,47 129,96 ", "54,104 131,79 93,30 157,66 97,24 117,178 124,102 1", "7,34 30,124 30,158 146,93 120,46 138,74 57,13 46,1", "05 71,118 142,118 42,8 142,145 13,5 57,120 70,76 1", "68,44 12,21 44,87 118,167 179,59 126,124 54,35 196"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    int n = 200;
    vector<string> edges = {"158 192,176 30,96 12,", "66 60,126 63,61 181,8 151,83 13,52 95,14 33,101", " 128,13 168,64 112,113 146,28 60,46 62,108 113,48 ", "164,29 71,188 196,131 170,189", " 62,", "3 65,184 2,154 32,", "64 26,166 174,191 95,117", " 35,188 57,1", "3", "2 65,170 87,110 134,4 68,78 110,53 33,38 115", ",30 97,73 25,181 4,122 98,62 47,168 37,82", " 6,5 103,34 4,29 112,11 4,121 24,134 78,38 199,142", " 41,116 135,128 196,156 14,129 36,94 79,81 124,105", " 73,149 105,133 29,43 42,41 78,63 50,67 151,193 12", "7,89 165,32 133,74 128,157 42,60 125,102 175,97 19", "5,9 36,37 143,62 144,68 15,185 100,142 49,172 61,7", "0 46,70 106,56 117,100 68,146 132,40 156,104 164,1", "98 140,20 62,77 75,19 151,58 81,141 134,22 132,162", " 116,2 45,133 66,138 68,35 6,26 3,88 134,60 133,46", " 94,120 62,123 77,131 87,9 47,143 64,161 21,80 56,", "41 76,153 184,57 129,166 112,135 163,131 161,68 11", ",118 35,182 5,152 34,101 7,159 69,24 182,154 25,26", " 174,200 147,177 42,173 114,134 140,182 20,130 146", ",146 84,18 126,130 32,171 141,69 38,197 61,144 114", ",93 33,81 39,6 176,63 195,128 47,169 150,155 18,11", "9 64,124 126,165 93,52 74,62 90,105 130,191 106,91", " 58,25 123,103 17,78 186,160 11,147 194,73 66,27 8", "5,24 129,140 23,39 200,115 11,47 52,80 111,168 130", ",179 34,12 162,98 100,117 140,54 153,60 108,108 17", "4,4 33,110 116,6 39,126 50,129 27,18 6,42 110,146 ", "3,92 25,101 48,22 71,17 120,137 30,178 38,113 31,1", "6 84,50 49,81 117,112 108,183 99,135 82,79 191,150", " 99,192 68,10 199,162 58,130 143,7 47,175 33,161 1", "36,55 54,118 58,67 46,84 13,194 137,33 98,109 161,", "76 110,21 139,114 21,151 46,164 9,95 131,180 22,18", "7 100,139 48,111 82,37 26,85 24,186 162,75 113,71 ", "25,44 50,13 119,163 140,31 32,45 185,84 105,3 83,1", "27 162,101 106,12 134,57 17,83 71,87 188,154 31,16", "7 198,57 21,158 160,106 139,62 109,83 180,59 182,2", "2 105,180 108,30 63,153 99,174 180,190 63,130 16,1", " 68,83 16,135 81,101 95,196 129,59 67,87 139,174 1", "05,136 57,132 113,65 119,195 117,51 9,125 130,23 1", "35,88 6,140 49,72 119,6 186,99 185,199 152,36 79,7", "1 26,97 155,82 140,90 103,97 177,49 157,148 3,109 ", "52,33 45,168 174,120 151,107 164,98 53,15 34,58 11", "7,7 120,50 78,191 120,190 167,194 88,86 160,145 57"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    int n = 200;
    vector<string> edges = {"183 55,63 70,154 78,75 31,69 95,132 115,130 16,170", " 37,107 119,113 131,184 144,58 35,159 134,128 87,1", "57 17,100 86,121 13,135 155,45 190,1 150,196 150,2", "8 79,153 177,140 29,96 11,57 10,111 45,66 171,174 ", "164,4 30,109 191,36 135,92 194,83 33,148 97,129 3,", "18 155,164 12,3 101,16 24,188 121,73 107,176 68,37", " 27,155 192,109 108,98 41,174 137,118 130,45 125,1", "79 108,91 194,134 55,115 171,176 77,109 149,136 15", "4,189 107,180 28,136 67,146 61,123 45,152 185,42 1", "56,160 6,24 47,40 198,80 7,81 145,200 14,147 128,9", "1 89,76 105,13 53,124 84,6 124,70 99,71 54,112 58,", "101 115,167 24,192 18,151 169,177 25,147 98,175 90", ",111 123,38 6,180 154,169 112,37 162,95 89,86 155,", "163 133,190 110,117 22,87 65,55 149,9 79,95 172,61", " 9,194 180,14 44,169 72,148 25,162 27,123 55,116 1", "0,161 33,147 108,43 4,138 151,141 176,23 90,139 98", ",181 189,183 40,140 40,91 150,126 114,151 112,85 1", "39,135 124,153 166,2 113,194 154,155 160,21 22,187", " 200,102 73,69 172,150 92,12 16,199 105,78 196,82 ", "132,142 34,166 177,127 80,173 120,200 170,19 172,1", "1 56,28 150,128 134,182 161,38 82,76 40,100 82,139", " 128,16 152,190 186,197 28,81 197,100 18,73 101,55", " 109,64 43,29 34,103 117,95 19,99 101,108 45,159 1", "08,80 174,28 151,171 84,71 157,109 123,84 86,112 3", "5,171 38,10 49,180 169,49 144,20 159,173 161,62 16", "3,178 146,107 135,186 110,198 123,74 199,197 91,88", " 189,65 103,131 173,18 114,87 109,98 123,137 164,1", "91 40,85 105,161 43,158 79,78 28,72 75,93 65,190 7", "4,24 52,181 36,4 156,151 196,22 108,135 100,39 12,", "27 62,84 141,68 77,133 175,155 129,72 150,81 136,1", "54 1,181 129,196 91,35 28,33 5,193 200,167 170,58 ", "61,109 125,115 122,44 167,32 94,60 189,99 100,170 ", "59,129 100,79 58,163 127,33 2,30 184,42 5,86 88,72", " 19,21 85,48 74,84 6,81 154,7 37,94 85,114 129,132", " 63,10 96,150 180,175 14,34 93,56 49,158 19,59 137", ",153 83,44 50,144 116,154 69,40 41,46 142,52 39,19", "6 9,116 4,49 42,114 122,194 28,67 138,94 74,31 178", ",15 19,190 94,1 169,31 197,134 76,186 32,102 122,1", "4 80,126 100,48 98,1 31,137 200,29 105,124 99,145 ", "172,86 73,119 3,122 38,112 158,62 39,25 57,92 9,17", "9 93,156 182,106 44,20 190,22 199,168 6,197 169,50", " 121,157 57,111 87,17 96,29 76,58 81,140 105,22 13", "4,10 177,30 173,143 150,134 45,3 66,40 109,123 87,", "65 46,156 71,41 74,65 20,137 106,197 79,189 114,19", "7 67,97 54,28 158,159 128,5 71,53 175,25 8,101 60,", "185 200,104 116,8 104,96 161,4 153,195 173,105 20,", "50 174,150 89,26 83,47 188,51 71,172 1,91 95,140 1", "47,74 139,55 186,30 57,172 78,165 97,110 147,125 4", "0,54 104,105 46,199 87,149 147,41 22,90 167,12 118", ",119 70,39 193,89 1,122 181,77 132,164 127,120 153"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    int n = 200;
    vector<string> edges = {"78 162,123 64,91 181,57 26,65 160,149 81,11", "7 37,127 105,120 144,70 18,2 82,31 117,37 195,20 1", "10,128 152,87 19,160 32,16 108,177 180,16", "4 179,111 60,108 98,139 119,92 138,148 128,60 54,1", "46 127,51 80,199 76,200 171,166 4,150 109,6 136,83", " 197,111 70,196 192,132 180,126 59,80 173,132 83,", "72 31,107 85,193 8,148 199,29 41,66 150,29 88,95 1", "99,114 156,186 61,195 136,149 105,36 101,71 18,5 1", "49,9 193,67 62,103 127,197 27,50 151,120 89,193 7", "9,104 2,40 74,142 25,71 149,82 52,37 136,19 81,97 ", "85,148 107,52 75,77 72,87 35,118 166,136 8,24 30,9", " 77,94 128,36 110,122 183,69 84,30 121,134 51,138 ", "98,63 126,162 165,158 146,167 193,134 80,110 101,6", "6 115,89 143,11 158,170 61,76 15,99 193,61 167,7 4", "7,177 182,118 109,156 1,136 77,44 192,161 117,4 15", "4,101 39,82 16,155 153,35 70,1 42,108 57,198 43,16", " 133,61 74,101 34,17 29,94 15,53 89,121 115,15 116", ",37 119,182 80,73 178,157 120,26 16,12 135,73 176,", "178 174,145 102,27 179,42 152,156 189,105 106,190 ", "72,140 136,59 177,11 153,126 198,19 68,29 130,183 ", "78,84 102,55 137,116 97,94 46,162 150,13 101,3 117", ",100 132,70 71,187 57,175 43,121 52,11 149,180 175", ",200 86,102 142,74 171,133 92,37 77,48 113,158 71,", "170 186,28 172,118 162,137 30,126 64,143 112,125 6", "9,114 20,90 156,119 195,37 6,191 107,98 118,89 96,", "124 16,72 139,159 59,81 35,103 41,194 25,182 160,1", "48 113,105 111,127 106,75 12,99 181,112 144,30 150", ",150 2,136 72,38 32,113 20,57 137,8 91,14 145,135 ", "30,86 91,96 14,22 47,139 61,151 96,92 135,57 147,5", "8 119,107 48,91 61,152 107,54 146,195 200,37 161,4", "7 13,173 32,180 182,82 147,32 100,68 88,68 60,116 ", "46,21 29,81 41,86 190,172 192,8 58,93 147,191 114,", "88 87,2 66,39 156,29 106,106 11,125 196,49 113,74 ", "6,35 188,193 117,176 159,86 77,52 135,146 87,119 8", "6,56 148,74 72,125 14,144 14,27 100,3 79,127 70,6 ", "58,169 196,31 77,88 67,111 62,177 73,140 79,122 12", ",64 100,141 27,129 55,23 16,109 4,74 186,117 9,142", " 53,91 40,181 170,138 16,79 139,29 67,181 139,100 ", "141,6 8,125 143,72 99,174 132,185 154,168 196,163 ", "84,167 74,80 177,79 31,41 21,100 176,116 191,60 14", "9,31 8,62 155,14 84,176 179,78 23,85 95,147 129,10", "6 21,167 3,131 120,18 103,60 155,41 60,85 116,162 ", "75,14 25,189 107,63 83,122 78,190 9,23 162,52 16,1", "47 162,193 91,6 170,165 150,188 11,34 114,71 10,16", "9 157,184 163,10 17,154 115,121 118,171 6,155 19,9", "5 113,119 161,130 111,30 138,153 188,35 158,45 33,", "43 73,179 198,76 42,5 71,145 168,122 129,25 145,33", " 191,52 57,16 12,181 136,105 68,145 131,117 190,18", "9 85,179 73,159 83,63 141,115 93,122 165,199 85,11", "3 45,181 117,66 138,9 99,27 164,192 84,46 7,43 174"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    int n = 199;
    vector<string> edges = {"144 112,198 125,41 192,121 34,185 150,112 67,", "117 13,131 34,", "23 51,30 71,3 99,83 66,54 1", "83,184 199,101 171,99 168,154 15,146 38,186 123", ",153 154,78 17,174 191,124 174,153 49,131 139,69 1", "44,88 180,55 116,126 165,32 158,84 89,63 28,5 188,", "65 196,4 72,165 135,42 53,4 67,64 27,27 179,56 136", ",179 158,190 148,7 68,33 122,108 147,169 65,68 89,", "51 198,52 172,127 3,60 142,124 19,101 178,66 196,1", "46 79,152 135,156 179,88 97,34 136,73 195,128 25,9", "7 1,47 169,61 51,132 199,91 8,38 45,125 194,44 5,1", "99 89,115 175,23 165,46 14,45 79,24 44,12 99,183 1", "68,114 56,141 63,149 113,28 103,155 40,181 173,113", " 60,36 133,33 11,106 197,180 148,95 118,15 139,139", " 33,15 152,54 119,22 170,109 76,183 36,193 144,150", " 91,53 193,52 21,52 174,100 49,150 106,92 170,165 ", "122,24 191,35 153,104 52,125 37,102 122,87 155,135", " 102,126 131,30 173,40 70,25 86,147 59,91 48,194 1", "54,70 98,56 126,164 96,118 192,155 2,85 76,151 112", ",125 122,142 147,187 14,131 102,138 31,158 132,198", " 56,59 88,192 163,119 143,79 65,178 173,142 47,6 8", "6,74 28,140 116,143 91,92 133,173 55,130 17,36 127", ",122 194,86 70,167 121,59 38,184 179,197 78,90 28,", "187 39,127 78,196 166,165 131,14 178,31 62,182 60,", "62 138,98 141,78 94,194 35,72 41,82 161,34 15,136 ", "125,49 139,149 196,170 12,107 52,134 133,195 191,1", "26 114,164 106,182 83,93 7,13 87,82 67,157 54,126 ", "153,50 86,136 100,34 33,165 194,31 95,67 151,137 1", "67,30 44,183 48,148 9,71 140,66 190,61 137,176 17,", "48 150,166 75,69 57,81 117,111 194,173 191,75 16,9", "4 54,16 66,51 114,121 49,148 113,124 171,152 61,15", "9 128,192 58,151 161,37 100,52 178,92 106,80 149,9", " 108,60 47,103 26,152 131,138 69,177 33,21 124,106", " 134,98 87,110 163,20 59,1 148,113 142,139 111,19 ", "187,171 189,162 84,199 109,27 184,174 172,26 81,12", "1 33,80 146,133 127,144 72,10 199,177 135,122 126,", "22 164,168 185,129 176,33 198,21 191,76 27,186 64,", "123 89,73 188,51 121,181 107,151 110,122 15,156 32", ",160 179,48 22,34 167,140 178,191 52,67 138,135 13", "1,161 138,175 159,64 84,65 16,8 92,17 183,35 177,6", "9 4,164 54,144 120,96 48,99 127,43 117,164 92,58 6", "9,73 187,83 38,166 16,145 19,66 59,172 124,49 23,1", "53 167,185 92,47 83,83 149,177 34,171 172,39 52,30", " 104,120 118,57 42,189 52,180 75,187 55,84 29,139 ", "23,114 135,95 151,196 97,8 3,142 80,171 73,2 77,16", "7 61,5 55,136 165,77 115,133 157,11 198,190 196,16", "5 167,154 177,124 140,163 57,189 124,55 71,29 132,", "89 160,108 66,80 182,116 30,154 165,16 149,105 160", ",18 155,97 148,47 182,38 180,166 65,145 189,188 46"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    int n = 200;
    vector<string> edges = {"104 26,149 152,10 113,16 55,37 25,109 127,101 182", ",80 5,55 177,155 4,127 141,184 36,122 103,73 4", "9,179 184,8 150,58 176,117 69,189 39,22 74,179 ", "89,23 79,82 144,102 158,175 70,63 46,165 47,150", " 85,95 157,49 121,188 88,141 188,9 11,75 60,179 97", ",142 95,24 5,74 58,186 3,92 168,111 14,163 21,83 5", "3,97 32,113 15,185 156,108 74,132 185,150 39,88 14", "0,29 148,55 31,143 2,161 38,3 154,70 71,89 173,72 ", "196,87 127,94 182,92 119,196 109,132 197,81 150,70", " 37,147 36,74 6,98 145,148 98,134 75,21 56,133 16,", "103 29,65 198,135 85,154 181,67 11,77 32,162 131,1", "03 28,63 56,14 178,173 125,122 171,195 170,63 45,1", "79 137,185 182,36 17,18 180,38 79,34 130,107 178,9", "0 185,144 186,42 164,16 108,156 122,7 150,132 155,", "134 60,60 33,153 1,78 9,46 163,1 190,111 62,11 200", ",29 98,152 6,43 83,129 194,106 29,159 65,157 170,4", "5 151,147 77,67 9,183 37,108 80,40 100,11 183,68 1", "27,123 155,159 150,15 115,57 134,130 109,176 107,1", "58 169,51 7,184 97,16 138,24 58,106 172,71 119,76 ", "84,77 17,172 103,166 159,96 183,121 96,7 46,77 179", ",161 194,182 156,81 100,193 161,12 122,160 33,198 ", "116,109 34,19 195,139 102,126 10,5 138,71 67,39 15", "1,42 35,177 133,168 70,5 133,105 54,108 176,113 19", "1,168 73,128 169,116 166,135 39,16 44,112 182,95 4", "2,49 136,94 28,50 137,39 120,69 53,13 85,164 1,79 ", "115,120 51,48 141,66 135,58 149,167 196,54 137,106", " 122,151 163,180 127,20 56,91 169,174 186,79 161,1", "72 185,107 108,62 74,162 18,115 191,163 81,110 107", ",47 175,43 95,39 8,108 41,53 142,74 14,156 112,31 ", "110,136 92,197 182,39 21,158 125,16 107,99 69,37 1", "68,79 160,194 134,64 163,63 66,56 61,38 191,200 17", "4,109 93,120 166,65 45,84 15,96 165,179 173,191 23", ",9 47,185 4,22 6,106 171,81 151,124 44,178 176,27 ", "135,181 92,2 95,169 184,26 113,86 172,36 137,188 7", "2,182 4,50 52,178 177,66 39,83 95,118 112,180 48,1", "70 42,55 178,17 147,23 38,128 97,97 102,146 12,96 ", "154,199 98,23 26,32 147,28 4,88 131,85 187,188 180", ",24 80,190 99,33 193,26 79,187 198,177 30,51 20,15", "7 99,196 141,134 113,185 197,151 64,73 67,121 67,2", "3 134,137 77,27 66,42 195,30 24,99 143,33 75,47 19", "2,76 57,191 129,170 83,80 138,100 116,182 155,171 ", "132,32 52,58 152,188 48,145 106,131 130,119 82,166", " 20,61 116,140 188,52 17,190 142,8 163,60 26,15 23", ",34 93,46 187,133 14,35 117,193 160,41 58,137 184,", "56 85,52 77,133 55,109 88,157 83,38 104,59 36,125 ", "128,146 185,50 32,6 80,82 78,114 52,60 76,59 147,1", "07 138,165 71,44 111,27 100,111 31,150 20,126 161,", "118 29,32 139,1 69,93 140,186 73,194 76,192 96,85 ", "8,154 49,130 127,25 165,114 32,31 74,198 189,143 8", "3,138 124,45 40,169 17,166 150,94 86,164 153,4 197"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    int n = 200;
    vector<string> edges = {"153 189,97 173,18 165,194 167,115 127,152 20,136 4", "0,54 47,128 35,24 76,166 32,129 180,23 107,176 1", ",47 97,10 119,57 160,170 129,28 109,24 31,63 200,", "184 180,96 164,85 17,95 10,115 162,6 102,178 128,7", "6 129,169 66,120 182,59 93,180 162,85 139,40 110,1", "39 187,90 162,54 94,116 30,50 89,5 194,183 46,117", " 143,186 46,144 197,26 46,175 52,144 155,80 157,90", " 39,83 64,49 29,93 192,154 191,35 172,89 80,80 67,", "140 80,53 1,41 40,65 10,183 97,189 145,165 123,17 ", "184,120 42,198 165,170 86,150 79,90 180,126 170,15", "9 199,79 25,41 131,151 21,136 171,35 163,70 136,87", " 93,92 22,110 27,27 33,27 70,126 169,122 142,99 18", "8,20 168,96 133,166 159,187 135,68 25,55 26,67 69,", "134 63,158 131,123 110,138 35,179 109,62 10,129 7,", "118 85,39 114,31 187,106 133,86 184,197 97,181 101", ",26 186,130 96,2 82,72 191,162 31,137 38,191 175,1", "78 189,7 77,108 118,122 12,192 188,95 134,73 166,1", "33 89,66 77,111 9,47 144,23 72,41 27,153 138,12 93", ",19 107,74 160,51 120,146 59,23 117,39 170,158 41,", "114 24,145 103,193 20,1 137,8 175,61 38,175 179,10", "9 117,78 126,189 103,37 12,93 3,60 73,118 121,11 3", "0,121 66,71 36,17 76,105 14,141 134,160 98,36 65,1", "92 161,60 87,26 144,26 97,57 145,157 48,69 130,70 ", "158,144 46,190 54,113 144,102 99,84 119,77 139,74 ", "152,22 41,14 5,116 146,14 151,94 155,96 15,190 155", ",196 71,29 21,124 152,119 148,37 32,12 56,34 1,143", " 101,171 92,143 175,64 113,52 88,25 14,190 64,107 ", "45,3 30,188 93,55 155,142 99,113 173,74 138,12 192", ",109 191,146 132,126 112,163 193,60 59,134 65,3 12", "2,172 168,193 57,69 15,177 175,11 199,65 147,125 5", "7,169 31,62 134,200 51,46 47,43 142,38 29,134 119,", "14 167,156 200,164 48,115 76,33 198,99 37,80 15,35", " 189,180 169,101 44,187 78,81 70,117 181,103 163,1", "32 199,100 164,98 152,157 96,164 50,50 69,161 6,10", "9 45,195 43,125 160,28 104,102 166,158 40,26 190,6", "1 14,58 62,15 157,83 94,52 8,133 164,75 73,83 197,", "9 33,135 115,174 52,45 191,88 8,102 87,186 4,32 19", "9,47 83,48 140,83 113,82 13,91 81,77 115,7 17,118 ", "7,27 81,155 64,31 39,182 71,111 91,93 132,123 18,1", "84 187,93 116,183 113,173 186,147 120,127 170,158 ", "27,113 55,66 17,84 71,147 36,51 141,56 32,184 39,2", "0 74,182 196,148 58,80 106,16 128,195 159,139 135,", "52 19,167 34,106 140,185 91,4 190,199 192,36 120,7", "8 66,146 32,168 74,21 150,131 91,179 177,164 106,7", "2 8,149 1,46 197,104 175,64 186,145 82,42 65,30 12", "2,165 40,167 105,115 118,140 69,44 8,124 125,15 13", "3,108 85,43 32,71 141,101 19,18 158,13 128,141 147", ",82 125,112 108,48 106,149 34,135 17,193 128,144 9", "4,42 36,101 174,65 182,113 94,168 57,8 107,114 112"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    int n = 200;
    vector<string> edges = {"61 101,131 54,9 138,6 ", "152,37 177,92 36,35 161,183 125", ",76 ", "187,78 192,8 190,198 75,104 200,167 1", "53,50 62,96 1", "89,77 85,23 194,58 180,150 119,79 86,169 84,166 1", "48,48 136,170 21,179 144,19", "9 73,127 20,5 157,63 22,190 ", "163,26 ", "110,160 190,11 17,34 166,191", " ", "98,86 54,88 132,26 140,6 85,43 ", "193,99 116,44 21,159 66,163 103,103 21,109 162,1", "95 98,161 119,7 152,130 41,24 75,124 18,142 196,18", "1 99,42 149,110 18,157 21,173 197,193 91,89 28,51", " 173,183 103,56 167,115 62,10 2,189 14,128 58,186 ", "98,155 135,91 194,146 189,2 142,121 12,102 53,45 4", "6,151 93,144 126,82 167,197 57,122 38,29 154,141 1", "32,90 139,192 169,158 163,129 14,165 80,22 16,200 ", "78,54 84,68 169,132 176,105 6,28 70,24 116,42 141,", "20 116,55 97,176 136,67 33,40 128,153 56,27 44,185", " 192,72 73,117 187,23 176,182 169,64 115,106 117,7", "1 90,12 41,118 115,184 27,180 82,143 65,195 4,151 ", "81,74 7,30 138,145 121,134 176,139 162,83 123,166 ", "137,154 152,137 34,156 35,39 177,122 57,69 22,19 1", "54,80 61,101 8,15 33,18 62,111 95,36 129,120 119,1", "47 43,84 113,70 6,33 138,126 52,13 124,187 150,178", " 177,148 184,62 157,28 174,140 49,60 154,46 63,167", " 88,83 119,87 55,41 150,84 21,47 117,16 187,15 168", ",17 162,133 37,106 3,66 60,135 150,171 169,44 136,", "100 59,52 6,188 169,164 186,73 115,142 10,119 116,", "100 152,196 169,138 32,112 52,162 132,68 53,186 15", "4,74 172,31 14,108 132,49 26,93 96,57 73,116 136,1", "75 127,180 128,14 16,97 169,1 43,107 97,32 120,94 ", "65,152 44,65 88,25 32,193 147,114 78,177 86,111 20"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    int n = 200;
    vector<string> edges = {"41 5,72 126,13 185,134 101,198 ", "176,20 34,165 65,50 25,67 71,55 17", ",92 187,27 1,170 77,148 37,43", " 13", "4,147 186,142 188,175 114,113 30,97 66,116 ", "65,98 15,193 8,144 127,49 149,174 18", "2,141 75,131 130,56 101,168 69,2 101,10 32,37", " 17,3 98,136 161,157 13,110 100,11", " 48,57 107,184 107,119 94,80 3", "5,95 120,197 12", "6,177 28,147 104,126 54,74 96,66 1,12", "4 16,86 91,20 127,128 77", ",159 ", "199,172 49,163 10,9 42,68 ", "192,103 118,58 69,146 44,1", "83 129,4 62,155 120,15 8,156 136,109 70,101 58,", "132 193,133 185,128 164,188 148,123 195,31 86,99 1", "85,16 44,180 19,65 192,60 197,115 87,91 95,194 79", ",85 44,59 113,135 14,89 88,5 191,40 51,87 176,130 ", "120,32 163,6 66,36 179,28 20,178 137,182 71,185 53", ",39 164,11 98,140 87,14 151,122 189,7 91,46 145,1", "58 126,17 69,154 178,102 120,179 186,169 40,118 69", ",10 116,62 148,150 129,191 149,180 68,106 145,63 1", "45,69 195,149 184,137 190,36 144,81 184,18 14,181 ", "81,129 98,22 156,69 18,193 21,82 151,174 153,117 7", "8,138 145,107 62,105 56,125 180,38 194,26 199,27 6", "4,120 178,113 171,12 127,200 66,75 108,116 114,84 ", "113,189 54,104 111,111 147,108 72,139 190,45 144,1", "96 191,151 191,53 145,127 200,171 194,21 132,152 1", "70,88 160,76 98,107 82,42 177,176 1,162 109,73 31,", "83 12,192 8,199 112,61 190,143 139,160 107,71 68,1", "45 197,119 6,64 167,107 108,70 193,51 56,24 55,136", " 26,29 45,8 1,52 165,173 137,93 53,33 16,79 1,100 ", "112,167 27,47 57,35 73,166 160,35 95,50 171,181 44", ",54 169,112 164,187 103,195 95,97 90,23 194,186 36", ",96 14,190 107,121 167,78 195,44 157,108 13,39 198"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    int n = 200;
    vector<string> edges = {"95 67,200 90,157 17,1", "38 148,80 130,116 60,167 82,3 124,137 155,16", "9 3,12 114,148 43,147 18,102 ", "13,69 14,3 123,180 140,58 168", ",7", "5 191,120 44,152 184,9 122,31 136,188 35", ",199 73,20 6,78 145,101 31,1", "80 103,25 8,29 124,121 186", ",46 41,99 3,174 ", "57,41 85,128 122,9 38,178 74,166 19,2 19", "5,81 115,158 112,196 157,114 164,14 178,86 75,1", "34 123,38 30,195 145,61 119,72 12,45 106,44 149,14", "5 26,105 195,135 73,32 181,126 163,194 192,84 70", ",164 116,78 191,27 173,143 156,173 163,149 146,10", "9 197,160 71,187 104,149 176,19 174,79 142,3 149,9", "1 46,133 7,143 144,107 195,69 127,141 15,75 150,12", "3 199,96 62,6 104,14 117,122 84,187 94,5 108,106 3", "6,1 26,21 148,49 113,136 151,198 92,185 24,26 54,1", "97 16,54 78,85 33,111 188,145 169,18 35,22 74,168 ", "72,131 145,150 146,90 83,169 51,156 79,175 194,5 1", "89,66 129,136 18,170 150,134 42,55 146,117 105,11 ", "63,36 128,89 93,8 9,60 20,35 163,43 64,51 1,18 164", ",130 98,131 189,68 66,55 82,97 76,16 137,61 103,30", " 95,56 53,7 111,127 73,137 21,29 54,93 175,123 75,", "180 111,88 135,132 28,113 100,64 141,78 146,44 176", ",144 180,155 31,28 10,112 11,53 119,156 147,13 200", ",71 118,82 40,142 94,57 59,53 109,34 56,176 82,181", " 97,146 120,70 193,24 77,190 155,168 133,146 74,10", "3 34,39 143,33 50,172 81,20 39,183 195,176 47,139 ", "178,13 143,189 107,131 170,59 49,182 52,159 94,193", " 152,3 11,94 61,111 101,149 179,173 133,17 162,98 ", "91,47 86,129 87,63 51,62 32,183 107,161 65,67 171,", "40 5,135 29,108 82,179 108,27 34,12 173,164 90,191", " 99,69 73,48 198,144 103,138 141,21 13,35 101,124 ", "167,37 172,86 179,94 79,153 86,186 160,178 29,104 ", "180,155 18,124 123,110 107,6 115,151 138,87 80,79 ", "21,23 25,101 151,189 134,74 131,42 63,76 165,92 18", "2,183 120,144 155,116 119,191 112,177 153,83 185,1", "71 161,64 188,118 132,151 109,15 109,115 190,140 5", "8,125 196,147 102,144 27,109 187,100 121,162 68,12", "3 82,117 26,65 125,188 114,50 154,191 55,158 107,1", "92 48,165 166,119 37,73 134,75 167,154 23,199 55,7", "7 79,10 45,63 195,155 148,114 187,52 96,4 44,184 8", "9,51 146,88 22,112 124,179 69,199 108,110 11,163 6"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    int n = 200;
    vector<string> edges = {"23 1,24 2,12 97,", "3", "2 23,196 14", "6", ",176 26", ",53 101,52 7", "6,13 148,81", " 68,93 149,26 96,154 169,113 183,143 51,161", " 152,16 138,154 5,104 147,159 92,129 36,112 131,11", "8 63,142 150,103 130,199 145,97 100,71 2", "00,172 95,192 15,182 79,142 100,74 104,183 57,17", "8 21,98 110,200 179,32 94,123 176,57 147,6 32,63 5", "4,43 142,17 193,45 185,194 189,102 81,88 125,92 37", ",200 42,68 49,30 7,155 116,147 3,72 188,8 53,41 13", "3,84 4,61 66,101 126,90 102,34 154,120 200,42 182,", "188 153,182 85,119 187,47 51,50 186,94 172,156 199", ",150 87,134 39,176 129,128 70,114 50,171 154,54 12", "4,1 98,42 79,130 187,21 181,39 90,193 47,10 51,192", " 94,162 14,170 135,5 149,39 178,29 22,15 23,115 10", "5,48 172,73 120,38 164,107 142,177 171,129 10,121 ", "63,55 118,124 129,127 56,129 106,64 91,70 95,11 87", ",77 111,1 67,27 54,169 107,176 81,3 36,149 150,57 ", "104,195 123,85 135,37 165,106 195,153 82,104 102,8", "2 58,100 186,96 178,46 59,159 42,165 158,81 74,75 ", "179,133 72,138 85,76 160,174 99,94 165,14 9,197 10", "3,181 122,92 28,187 190,141 198,37 70,136 109,190 ", "25,176 18,191 140,30 42,168 134,106 155,35 115,124", " 17,131 152,138 158,56 46,194 93,47 27,139 31,66 1", "24,175 65,80 191,58 29,126 151,40 6,70 32,177 62,1", "08 113,109 169,49 26,164 132,148 141,169 97,95 170", ",189 86,130 11,2 64,25 33,150 117,22 69,186 175,18", "6 194,135 48,78 30,180 200,51 96,10 168,152 181,11", "3 176,26 74,105 34,67 95,31 88,70 110,62 173,161 2", "7,181 26,69 38,122 55,140 83,48 78,159 73,48 40,15", "1 139,68 60,4 127,18 112,137 163,36 47,172 37,102 ", "113,158 30,173 197,132 13,37 71,179 120,110 7,198 ", "19,120 196,86 171,167 192,23 180,15 144,192 179,19", "7 136,179 92,79 15,85 75,111 112,10 113,115 5,59 1", "74,89 35,27 176,49 131,180 159,83 84,9 24,146 71,1", "25 45,74 161,7 85,23 30,144 78,171 12,167 79,33 20", ",99 162,110 192,87 44,79 1,44 89,167 170,114 43,11", "7 114,163 156,20 177,95 16,145 80,7 184,157 121,91", " 166,187 177,135 146,160 10,40 79,178 66,182 28,10", "0 103,73 180,65 130,90 104,60 157,27 61,138 159,73", " 167,185 137,169 62,78 180,62 114,5 194,189 35,166", " 41,184 48,102 27,63 52,49 155,147 77,19 8,111 68,", "161 81,28 184,116 161,49 112,149 119,134 90,87 197", ",103 115,128 196,146 40,51 134,7 73,28 128,165 182"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    int n = 200;
    vector<string> edges = {"112 162,11 153,118 172,48 1,", "102 44,189 73,162 81,33 156,4 34,199 196,103 105", ",57 154,161 165,168 41,23 56,132 38,68 2,42 60,139", " 14,99 108,2 70,88 90,119 186,44 160,154 120,182 4", "2,108 16,24 140,13 61,200 9,69 80,168 129,46 183,4", "5 125,91 29,96 98,2 46,125 12,116 193,43 169,170 7", "1,35 150,92 19,127 126,25 109,94 74,122 91,38 110,", "8 52,110 57,114 117,92 120,130 164,147 11,61 120,1", "9 30,27 146,92 41,140 35,64 63,123 187,143 106,9 1", "50,187 114,154 13,7 138,13 38,172 3,79 154,197 1,1", "6 93,155 115,169 140,81 197,60 59,200 64,152 186,4", " 187,14 116,104 153,36 47,111 134,141 111,12 106,1", "04 198,24 139,187 85,41 69,123 174,143 86,74 171,1", "98 192,46 168,35 24,186 18,19 10,156 82,126 15,150", " 151,136 40,92 132,72 136,75 108,163 34,88 117,100", " 151,99 147,10 161,108 199,117 37,17 9,97 68,133 1", "82,172 76,106 125,173 88,132 76,109 15,39 100,1 67", ",119 81,178 11,98 39,180 62,149 138,64 139,147 137", ",93 83,197 99,21 5,125 153,127 64,131 133,154 176,", "76 97,177 148,26 158,128 15,106 108,138 54,124 114", ",71 88,199 11,59 141,80 3,89 99,159 1,77 6,144 37,", "152 48,192 162,21 34,175 122,22 65,98 116,34 8,149", " 116,153 197,95 195,173 84,10 22,78 107,47 113,31 ", "142,85 88,69 10,17 7,7 149,142 175,153 152,102 123", ",98 190,52 173,58 135,139 63,63 100,176 57,63 98,1", "25 121,101 154,196 186,65 69,199 48,197 199,101 38", ",152 11,69 51,71 117,165 13,160 170,161 97,84 27,2", "8 23,158 77,70 41,120 110,53 33,18 1,55 114,61 132", ",118 92,120 80,77 89,144 47,8 114,155 174,66 128,1", "43 198,132 69,120 161,67 77,183 30,3 61,22 176,166", " 159,41 10,66 126,151 200,61 183,107 162,150 138,6", "2 112,116 17,29 177,188 127,97 92,90 144,10 110,16", "3 117,190 25,100 139,157 131,124 170,166 198,15 10", "3,165 32,121 166,11 198,176 191,86 197,54 200,37 4", ",151 66,106 99,194 188,54 105,32 10,192 106,148 17", "9,2 76,98 35,183 120,124 160,7 54,113 124,73 72,97", " 168,85 71,181 20,83 81,32 79,163 37,162 48,184 18", "7,134 28,109 194,114 146,51 2,174 5,82 58,105 96,5", "7 118,81 143,115 47,49 39,185 97,32 185,191 118,79", " 172,185 46,105 43,173 44,159 87,52 187,144 44,26 ", "166,56 53,30 22,117 184,11 192,3 79,158 107,193 74", ",50 31,164 128,167 181,171 7,47 27,41 161,80 165,1", "45 189,70 165,187 88,48 26,137 152,186 87,195 124,", "24 130,81 106,85 173,20 50,6 158,126 103,57 32,196", " 62,27 155,5 115,127 66,87 198,132 97,179 157,9 24", ",103 49,195 4,62 147,5 55,100 109,16 199,138 64,12", "9 41,162 62,119 83,171 94,86 87,166 48,27 174,88 1", "02,135 145,114 88,154 46,146 5,128 17,40 167,38 92"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    int n = 200;
    vector<string> edges = {"13 76,36 159,188 11,146 109,2 35,178 112,112 57,1", "3", "6 62,8 130,29 138,182 28,154 32", ",125 60,154 77,70 172,164 156,32 195,34 79,6 32,5", "0 173,73 173,28 199,39 151,149 100,190 181,130 80,", "64 22,111 91,181 15,189 47,98 177,38 75,95 184,56 ", "21,117 111,57 160,77 24,101 154,21 178,166 27,175 ", "73,58 119,72 137,12 193,83 49,120 115,82 23,122 13", "5,116 171,185 66,133 68,14 23,13 192,71 189,196 17", "6,80 4,169 179,50 21,64 26,78 194,44 189,89 145,15", "9 109,61 42,47 198,45 171,199 139,101 12,145 154,3", "0 122,187 132,174 152,148 164,56 122,37 158,170 33", ",88 8,115 18,86 47,17 46,50 57,112 174,157 38,109 ", "17,69 114,77 6,11 79,68 166,57 174,19 160,57 60,16", "4 131,94 31,189 107,67 72,123 150,12 62,4 69,195 6", "9,102 18,109 27,138 129,126 158,27 7,3 140,107 95,", "62 13,191 23,118 153,149 164,197 130,166 117,110 3", "0,66 58,170 186,11 115,185 168,35 31,110 152,144 1", "18,97 162,93 67,107 84,132 173,23 38,163 191,60 11", "0,65 31,47 134,179 132,134 95,100 56,200 65,1 95,1", "75 132,192 12,36 66,136 89,40 86,58 36,92 86,73 12", "5,30 19,95 167,145 63,3 164,167 40,50 30,137 141,1", "27 143,42 102,47 40,76 88,138 36,143 92,52 38,134 ", "182,129 146,187 156,183 97,25 75,8 9,53 183,150 19", "4,55 78,142 178,22 113,85 71,20 75,143 171,66 29,1", "60 173,67 137,178 174,62 192,100 178,89 13,56 140,", "96 123,99 196,134 84,152 187,131 10,105 115,141 13", "0,49 18,91 46,21 156,63 137,21 175,43 138,140 30,8", " 195,87 161,131 135,172 2,173 149,105 124,59 128,8", "1 189,17 111,121 97,15 50,171 182,77 63,135 56,174", " 173,23 200,4 9,169 125,156 57,161 130,173 112,37 ", "95,90 34,91 43,75 128,89 41,132 142,5 169,168 17,1", "86 51,176 32,60 132,54 199,177 82,117 133,21 19,50", " 132,194 35,152 5,133 166,86 147,190 131,162 42,7 ", "138,187 140,74 14,62 155,72 4,61 26,41 76,114 9,10", "6 89,106 72,142 190,139 37,153 144,10 140,153 33,1", "29 168,87 69,57 181,140 15,165 33,31 74,10 187,77 ", "76,50 148,104 134,155 87,99 8,100 190,108 199,178 ", "3,147 198,179 122,111 185,137 176,128 78,113 64,19", " 3,131 19,24 63,27 185,193 6,60 56,155 195,31 123,", "42 53,19 148,73 5,145 77,103 172,35 191,86 48,104 ", "199,161 99,80 192,195 93,198 182,122 142,56 179,15", "8 198,3 175,29 43,119 129,48 116,24 101,33 151,63 ", "154,39 61,180 150,93 141,30 73,176 145,159 117,127", " 85,148 10,121 16,147 44,132 110,9 136,108 92,174 ", "50,46 119,185 91,160 30,73 190,63 114,175 148,87 1", "06,13 32,20 180,137 89,194 172,51 170,84 92,43 159", ",122 149,6 154,32 67,148 174,46 133,125 100,184 85"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    int n = 200;
    vector<string> edges = {"193 99,11", " 188,169 76,54 189,27 154,138 41,153 58,133 19", "3,165 158,33 77,101 5,35 7,74 138,188 136,73 16", ",167 173,5 71,20 196,46 166,80 132,122 66,48 70,1", "14 147,190 75,61 19,116 63,30 2,67 51,194 33,183 1", "06,12 36,69 185,41 135,79 156,96 20,175 71,2 158,1", "47 127,131 157,62 186,148 18,3 98,151 97,132 52,13", "4 113,62 82,39 51,78 175,89 54,173 40,108 85,108 8", "1,113 21,60 187,7 54,148 116,169 35,200 23,52 102,", "7 109,160 94,199 123,181 119,128 45,85 78,199 126,", "101 16,193 153,36 193,131 161,89 172,15 16,150 96,", "187 157,168 178,26 170,125 194,79 168,47 146,138 1", "12,159 114,71 154,115 137,16 146,34 68,144 164,165", " 58,36 150,162 144,25 122,137 104,31 60,12 96,60 1", "28,140 121,136 3,8 165,71 27,14 100,67 153,99 36,1", "26 35,61 181,77 40,126 157,14 186,95 58,185 188,11", "8 67,61 31,70 88,100 24,53 194,59 67,19 169,65 10,", "49 149,11 77,165 12,173 98,91 15,135 2,119 76,90 1", "18,38 14,58 20,138 12,92 129,107 8,132 160,82 28,1", "6 200,172 117,140 124,176 74,125 110,164 79,95 2,1", "92 92,70 53,5 75,103 177,56 125,158 150,173 70,73 ", "91,137 83,5 73,183 193,4 91,189 169,67 106,157 172", ",174 124,149 76,141 157,55 183,17 151,172 49,32 15", "2,121 34,64 101,58 133,127 195,197 50,188 56,40 18", "0,196 176,58 107,10 121,118 106,195 156,81 175,170", " 32,196 59,149 54,33 115,89 76,157 29,158 99,90 8,", "141 76,117 76,54 199,29 172,179 54,23 75,3 40,75 7", "1,137 70,180 173,123 54,87 79,154 5,31 45,60 120,3", "1 163,55 90,22 77,112 41,37 47,185 167,45 109,22 5", "3,57 148,13 85,155 26,37 16,20 165,142 19,179 60,1", "61 61,77 173,117 181,174 113,135 118,63 72,1 31,51", " 138,93 56,41 99,99 112,86 103,21 44,35 157,69 83,", "90 196,198 62,124 130,19 31,4 175,181 184,189 119,", "2 90,87 145,39 196,145 171,142 163,153 30,186 66,7", "7 3,106 41,156 159,194 173,92 103,53 48,95 41,9 15", "5,39 135,139 23,94 57,120 128,40 115,74 196,39 30,", "16 47,120 189,42 57,181 199,96 143,103 197,182 62,", "105 87,110 137,24 17,193 107,183 138,28 174,83 11,", "152 9,106 95,27 37,102 116,112 55,118 8,19 184,20 ", "135,111 148,146 101,115 69,88 69,8 183,44 25,93 12", "5,130 100,109 181,135 143,64 47,146 139,194 188,58", " 39,117 189,54 142,186 140,177 197,151 198,80 148,", "143 138,57 111,18 111,88 11,184 126,100 151,75 91,", "2 176,97 65,78 27,135 51,152 159,109 142,132 18,72", " 92,143 193,104 83,167 191,200 85,27 101,59 39,98 ", "22,178 162,173 93,76 120,74 106,199 161,6 132,48 4", "0,64 154,66 198,191 33,66 14,197 132,166 105,68 18", "2,154 78,111 192,163 181,43 132,171 46,107 59,56 1", "91,58 118,198 38,129 197,84 106,50 43,18 57,150 74"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    int n = 200;
    vector<string> edges = {"5 93,143 150,143 121,77 55,149 195", ",37 90,99 6,68 56,80 107,110 26,46 6,196 160,55 18", "2,185 196,99 196,137 76,106 86,191 96,111 75,109 1", "01,133 12,1 134,134 174,149 118,8 12,166 70,59 119", ",194 191,125 179,188 5,93 155,127 56,180 141,24 16", "2,199 58,167 149,148 97,137 52,65 158,109 165,109 ", "59,15 48,11 25,147 19,76 105,60 99,172 36,73 74,86", " 117,74 5,164 156,58 126,108 65,41 164,134 189,165", " 147,124 170,141 163,69 134,194 134,105 149,30 69,", "158 108,119 159,102 162,64 109,13 186,140 106,82 9", "2,101 80,19 193,183 83,33 46,98 138,97 27,195 167,", "63 8,200 90,107 58,179 115,167 137,148 200,55 107,", "129 71,133 115,61 27,13 152,54 146,130 150,164 178", ",136 117,120 15,75 31,12 76,25 33,75 39,72 44,62 1", "97,169 49,81 55,103 111,182 58,96 37,193 81,115 16", "7,167 105,20 55,24 126,51 86,41 91,145 34,34 17,12", "2 83,33 136,32 156,166 127,121 154,92 85,192 21,52", " 125,181 90,6 106,171 10,80 147,163 177,124 32,22 ", "130,155 74,173 38,170 178,32 40,156 82,53 87,24 81", ",157 126,8 171,93 73,135 66,126 119,160 62,66 23,1", "16 145,51 112,139 178,68 31,74 186,195 125,25 86,9", "4 93,136 78,35 151,147 182,174 37,21 180,18 58,8 1", "04,105 179,141 192,168 28,18 81,104 10,127 103,117", " 51,194 15,119 45,175 161,37 48,26 124,87 75,38 87", ",67 60,119 182,115 171,68 88,138 175,71 54,73 44,4", " 5,52 179,89 66,64 24,171 137,94 154,146 129,27 3,", "186 154,70 173,56 95,135 200,81 159,3 69,28 111,18", "5 33,184 155,159 109,28 166,85 144,2 78,157 64,128", " 57,147 107,189 69,45 147,154 22,177 169,7 178,45 ", "157,199 101,95 103,76 52,30 48,87 127,45 19,81 45,", "88 28,132 185,53 168,106 172,58 102,161 190,57 168", ",82 7,91 151,150 74,100 190,143 130,178 32,37 3,12", "3 84,28 123,103 31,75 70,77 193,190 122,65 12,162 ", "193,26 91,79 93,149 63,67 197,57 56,32 164,152 93,", "42 131,142 155,197 99,165 64,159 29,150 73,86 185,", "124 139,198 93,36 67,14 189,127 75,114 136,23 97,8", "1 20,29 64,107 19,56 123,135 97,113 61,89 3,78 25,", "125 63,139 91,9 153,39 28,70 95,65 171,185 140,193", " 18,78 36,17 42,62 132,3 200,88 128,144 16,13 154,", "65 133,118 50,38 31,84 166,153 163,26 92,117 2,178", " 40,52 104,16 139,176 114,187 7,126 77,133 118,197", " 25,131 116,13 74,40 151,142 150,152 150,10 195,15", "1 187,194 174,39 88,108 179,104 115,75 56,40 26,20", "0 14,17 163,162 59,91 43,50 158,165 80,43 16,6 185", ",179 8,181 174,161 98,159 45,117 78,10 12,51 114,1", "82 199,73 152,40 124,90 97,31 88,48 174,70 127,47 ", "127,69 1,50 76,129 161,183 21,19 80,112 176,133 14", "9,118 105,122 100,72 22,49 9,179 104,44 121,143 13"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    int n = 200;
    vector<string> edges = {"24 16,146 171,173 94,134 124,", "188 52,92 62,50 138,1", "89 121,19 183,58 163,144 92,171 116,190 108,3", "3 94,62 47,98 144,84 125,29 24,58 118,111 42,", "115 105,120 171,132 140,", "22 114,39 183,31 60,84 66,147 188,140 1", "11,74 42,146 139,13 135,88 93,81 45,72 22", ",90 97,135 58,192 79,19 175,107", " 20,195 194,177 90,12 149,132 182,10 174,46 33,1", "63 164,141 65,160 15,22 185,83 4,36 79,24 17", "9,179 64,20 31,123 47,193 158,182 37,93 197,184 49", ",130 35,148 19,186 62,61 1,45 112,7 165,87 42,114", " 195,139 148,150 192,154 98,125 1,161 48,176 59,12", "1 104,74 111,18 166,63 158,155 62,190 33,89 108,68", " 89,151 1,194 141,108 118,91 75,178 54,132 64,152 ", "102,47 144,192 55,64 182,9 1,89 163,56 64,1 53,188", " 57,159 167,174 57,118 128,15 105,90 147,200 146,1", "09 185,137 82,13 68,198 84,22 109,168 95,94 108,19", "3 43,81 11,176 96,127 69,104 71,79 86,76 184,15 30", ",186 92,85 48,156 61,16 81,85 23,122 27,146 176,78", " 26,138 151,165 143,58 190,180 136,106 113,140 45,", "162 33,106 70,96 167,109 72,62 32,68 18,5 130,191 ", "122,141 2,69 172,105 30,23 188,28 106,173 142,63 1", "57,59 19,14 173,103 64,63 15,128 149,143 101,193 2", "2,54 68,149 51,39 200,43 63,164 58,182 81,18 33,30", " 114,181 90,65 114,158 145,112 103,65 72,157 193,6", "5 193,144 95,145 195,86 67,106 102,199 63,174 52,8", "1 153,42 132,48 52,27 26,95 113,30 109,183 77,71 1", "27,112 136,37 74,64 180,100 61,123 155,185 114,101", " 23,129 120,193 30,110 67,57 23,43 141,30 199,120 ", "169,72 160,52 27,6 183,187 9,44 84,159 19,99 110,1", "11 64,10 143,59 39,166 164,175 6,85 181,168 155,55", " 86,131 100,196 194,67 107,35 8,67 76,108 13,59 6,", "4 159,118 166,26 101,111 16,113 98,103 87,19 129,6", "5 158,197 137,28 144,79 134,170 190,8 40,122 41,97", " 191,101 122,41 85,57 181,70 95,117 61,24 11,126 8", "4,19 83,153 103,17 44,77 148,23 174,164 135,87 24,", "170 14,34 99,135 173,183 176,11 140,3 79,184 192,1", "18 68,172 133,56 182,82 5,113 154,155 186,128 80,4", "1 10,26 7,190 13,53 126,107 184,143 147,148 83,80 ", "170,49 134,83 139,34 150,32 155,181 10,52 41,110 3", "4,166 170,174 85,134 110,167 139,60 34,142 128,86 ", "150,11 179,150 55,27 177,55 107,118 18,38 163,169 ", "176,136 153,183 59,51 14,21 42,25 187,161 147,119 ", "68,179 56,59 77,186 98,133 88,105 145,116 129,94 1", "66,182 179,14 178,124 36,180 37,40 91,98 28,102 95", ",92 102,136 74,66 61,28 152,2 158,179 29,38 18,75 ", "189,153 180,1 84,73 61,38 12,154 144,145 72,147 78"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    int n = 200;
    vector<string> edges = {"97 80,151 116,4 161,146 98,36 168,", "150 74,133 178,110 15,191 125,16 29,13 18,38 154,", "147 179,173 162,64 59,98 43,189 147,9 8,171 46,169", " 182,162 136,31 68,138 116,7 11,6", "1 16,179 78,89 3,121 120,59 45,3 102,52 13,200 27", ",120 114,98 100,44 153,102 2,5 125,63 162,108 107", ",76 99,147 177,82 164,88 122,79 5,58 198,25 76,59 ", "84,64 178,47 124,16 176,164 194,62 66,176 84,113 1", "02,21 171,30 49,125 161,197 76,143 87,78 148,189 1", "39,85 127,4 51,108 147,96 195,197 111,154 199,180 ", "161,74 190,188 18,183 155,174 103,58 189,71 146,16", "0 32,18 82,92 198,184 154,16 165,33 125,106 133,16", "3 7,26 199,77 192,157 178,44 67,97 74,48 60,61 84,", "22 141,159 179,176 165,18 7,159 92,1 24,142 48,43 ", "87,160 88,133 69,3 130,25 113,89 117,131 9,49 70,1", "14 128,88 34,109 1,79 33,179 58,105 142,166 11,38 ", "26,84 133,30 110,191 79,29 59,178 61,3 117,102 196", ",137 12,1 51,109 125,170 121,129 130,54 20,2 3,33 ", "109,134 75,6 138,121 66,53 89,168 136,69 45,32 10,", "2 89,24 94,129 185,149 52,47 180,192 168,48 105,66", " 151,175 37,172 95,155 81,35 38,124 105,80 141,136", " 54,80 10,33 95,119 50,177 21,68 83,19 194,191 4,1", "06 45,56 175,73 133,147 148,139 108,199 41,39 143,", "11 188,161 109,198 72,48 95,2 96,182 144,94 172,12", "6 200,198 179,165 29,118 127,196 99,148 139,140 15", "0,96 3,194 52,45 169,84 16,122 126,40 186,182 59,1", "12 186,69 169,67 112,132 127,28 23,12 147,107 72,1", "40 200,6 187,128 156,62 6,99 129,124 86,162 152,16", "7 166,76 55,141 30,168 152,86 79,165 157,24 124,75", " 80,13 19,68 119,43 154,48 172,46 159,194 167,185 ", "195,40 17,20 63,152 158,167 163,100 146,75 160,95 ", "51,123 52,180 124,117 111,58 108,141 15,148 72,144", " 165,99 197,34 93,30 140,116 187,129 89,142 180,85", " 57,185 102,173 77,52 42,90 68,95 47,59 73,143 174", ",21 58,101 115,142 95,181 118,93 49,37 192,111 113", ",65 143,125 47,84 106,200 22,107 46,140 135,101 53", ",160 200,81 56,41 193,10 104,22 160,23 54,5 142,55", " 197,177 137,120 66,92 148,87 38,49 110,74 134,50 ", "112,75 140,135 75,181 145,166 13,27 30,37 173,108 ", "171,70 160,158 183,125 1,8 131,136 28,114 151,94 1", "80,169 61,78 12,104 122,95 105,66 156,159 198,51 3", "3,148 12,9 112,116 120,124 109,72 171,106 157,103 ", "154,5 4,195 76,130 195,156 6,161 24,14 199,15 97,1", "87 170,118 67,190 97,7 167,15 49,64 61,102 117,11 ", "164,49 34,133 176,46 139,164 52,104 91,115 99,109 ", "180,193 146,116 6,175 77,135 104,156 138,12 107,60", " 5,33 191,190 135,178 69,110 135,54 37,24 109,171 ", "177,91 22,46 148,42 166,73 165,130 111,125 4,83 31"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    int n = 200;
    vector<string> edges = {"126 90,199 157,68 199,48 34,176 15,38 28", ",200", " 164,28", " 65,118 157,116 75,42 189,144 155,131 1", "58,145 156,1", "34 79,166 11,169 93,115", " 118,196 9,128 134,106 95,33 1", "68,94 192,129 170,153 2,25 184,71 152,", "40 30,34 73,111 5,122 22,27 48", ",189 18,41 86,180 52,98 146,200 151", ",16", " 65,102 8,114 ", "157,37 82,107 199,21 26", ",74 126,58 19,47 53,81 35,51 36,2", "6 117,105 72,108 88,155 148,161 193,72 80,87", " 179,88 57,185 173,17 3,7 33,6 176,95 111,96 ", "157,151 56,135 116,1", "10 108,57 124,181 93,192 72,50 102,150 94,109", " 21,101 118,23 110,9 92,11", "2 20,173 132,18 71,67 114,139 100,183 10,1", "54 136,93 28,104 65,175 40,26 109,15 199,194 1", ",66 23,170 165,84", " 76,91 50", ",187 16", "0,148 154,18 1", "84,198 150,89 113,53 123,36 20,9 20,123 172,56 ", "20,44 87,172 188,55 128,133 101,156 180,49 ", "85,12 6", "5,2 75,29 166,1", "3 195,79 194,22 119,137 1", "15,103 7,165 1", "06,103 141,32 115,30 116,195 145,132 46,125 47,10", "0 115,38 121,1 182,43 130,142 159,98 54,61 78,162 ", "142,120 4,97 17,119 80,158 13,24 41,118 112,60 14", ",73 64,197 27,117 80,59 197,65 96,70 25,127 38,16", "3 81,143 55,10 16,90 60,33 15,72 94,19 131,113 97,", "83 24,167 74,39 59,120 12,140 15,8 89,146 40,159 1", "5,85 62,190 137,45 185,31 92,14 99,11 125,117 20,1", "47 138,160 39,188 144,138 159,46 42,62 143,178 104", ",82 77,64 91,152 187,124 129,121 127,52 37,174 175", ",136 43,78 66,179 117,184 161,3 83,191 10,76 112,1", "30 49,35 114,5 167,177 163,75 20,186 116,99 45,171", " 81,86 61,182 70,77 29,122 69,193 58,149 15,63 186"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    int n = 200;
    vector<string> edges = {"152 192,188 32,42 151,57 94,10", "8 129,25 73,52 150,153 124,170 97,17 115,98 145,53", " 36,106 121,89 198,151", " 2,31 199,136 172,59 41,107 114,1 89", ",116 43,76 83,168", " 173,36 175,47 49,145 1", "39,96 75,163 120,189 128,174 199,192 16", ",3", "4 47,173", " 60,171 80,5 143,128 176,146 186,14 1", "84,132 68,44 11,8 96,55 170,41 44,66", " 87,27 130,107 17,46 21,70 74,20 16", "5,166 193,85 52,4 115,143 180,130 171,183 122,33 ", "66,102 6,143 181,91 189,144 137,3 142,15 120,195 ", "147,194 22,94 199,86 1,23 168,28 105,137 ", "179,160 18,181 182,180 16,62 6,110 71,81 182,29 18", "5,10 59,18 58,109 18,107 155,48 1,5 86,105 190,64 ", "200,90 22,114 163,186 152,142 10,69 74,148 3,49 98", ",107 146,117 104,71 57,113 125,120 94,115 6,180 16", "1,176 135,195 178,61 198,97 153,198 67,35 102,48 6", ",21 131,92 33,139 116,43 100,82 25,32 81,121 55,32", " 5,193 40,12 117,164 143,77 94,56 13,184 187,81 17", ",200 134,190 160,155 162,164 86,197 71,154 133,138", " 111,48 35,7 9,22 118,95 113,120 32,62 33,26 131,1", "47 94,149 101,169 45,6 147,163 110,72 166,127 72,1", "58 167,123 56,155 21,16 197,199 6,146 16,197 89,19", " 143,46 186,124 54,35 99,195 48,68 50,46 141,99 15", "5,79 169,94 194,2 88,99 146,13 148,152 61,131 178,", "112 61,107 147,87 22,21 180,74 64,69 149,181 180,2", "4 147,182 48,67 155,45 38,15 46,40 95,199 163,87 1", "10,104 144,198 84,17 66,24 87,38 39,1 15,67 66,196", " 91,88 79,9 82,102 182,1 57,11 106,180 5,75 103,57", " 195,141 19,167 196,192 86,199 157,191 154,32 141,", "161 107,165 85,172 183,73 109,122 159,120 92,150 2", "8,135 20,109 27,50 14,112 199,93 7,177 34,147 77,6", "7 16,1 19,32 48,37 12,187 29,125 76,92 66,111 132,", "159 123,78 53,133 69,63 127,16 15,100 108,115 161,", "86 84,60 65,156 177,140 48,178 181,6 118,58 30,80 ", "37,24 15,175 63,186 141,163 107,65 158,101 136,84 ", "174,110 35,162 46,157 15,179 156,51 23,129 138,39 ", "70,126 42,134 78,119 8,181 99,185 119,5 195,19 197", ",199 143,147 46,118 141,103 93,54 191,30 51,83 126"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    int n = 200;
    vector<string> edges = {"83 ", "197,191 99,169 56,138 126", ",196 149,121 199,2 193,13 20,4", "9 112,130 106,39 43,113 93,187 3", "9,122 18,126 176,57 48,58 83,124 133,94 77,94 35,1", "95 162,102 138,41 35,73 59,12 31,40 135,97 132,69 ", "151,83 12,162 20,156 160,130 43,198 133,197 173,56", " 70,84 35,175 136,71 25,84 68,115 95,98 169,27 136", ",8 50,107 41,111 91,197 27,174 20,170 57,30 77,139", " 81,175 111,101 96,146 16,109 17,189 144,184 170,6", "8 161,175 160,21 92,45 143,38 132,32 26,195 177,81", " 134,44 158,80 84,190 84,50 36,29 28,59 34,35 142,", "65 111,187 156,138 142,56 161,77 56,180 132,108 12", "2,193 140,70 194,39 83,134 82,10 119,192 188,36 18", "7,31 187,137 177,27 5,149 53,22 150,11 115,26 170,", "50 83,182 31,5 195,188 84,164 128,83 137,143 75,87", " 108,106 185,82 148,173 165,192 17,151 73,20 177,1", "66 69,55 63,114 4,99 172,78 13,117 44,61 67,163 54", ",136 43,154 29,185 50,107 190,103 74,181 119,19 16", "9,53 152,24 4,7 181,120 87,36 156,143 169,35 107,1", "12 120,105 48,141 3,86 161,194 176,86 176,63 3,183", " 139,156 24,31 137,79 169,100 116,175 36,6 164,78 ", "130,18 183,75 84,110 168,25 196,48 176,150 47,148 ", "100,90 88,42 76,33 136,140 186,62 133,37 74,67 21,", "30 199,34 167,135 90,48 68,52 31,4 130,92 85,144 4", "9,118 179,85 71,9 98,92 23,91 12,88 154,199 75,24 ", "50,121 126,128 167,3 170,171 97,16 59,31 197,185 3", "3,47 2,45 19,41 77,175 78,58 136,37 51,179 159,23 ", "118,68 188,114 43,142 98,104 22,131 176,13 137,155", " 170,167 181,46 38,175 165,76 34,176 142,35 32,178", " 166,142 48,123 129,177 33,147 115,157 125,133 34,", "27 111,54 38,152 117,132 59,15 51,66 182,1 171,41 ", "94,60 72,161 41,111 197,93 181,186 40,101 156,116 ", "85,106 156,12 114,43 156,172 97,34 42,161 48,9 32,", "173 4,127 42,17 41,78 136,96 175,114 66,7 95,43 17", "5,161 55,165 111,136 111,153 68,160 58,14 180,39 1", "65,194 98,168 132,83 96,64 103,182 52,106 8,72 73,", "20 114,74 76,28 123,129 89,98 94,125 145,136 5,158", " 189,131 194,145 7,200 77,159 104,177 8,3 17,89 61"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    int n = 200;
    vector<string> edges = {"7 196,146 112,42 28,95 24,79 23,73 130,166 6,12", "6 52,138 114,75 4,145 151,139 7,25 1", "85,186 184,94 166,118 149,200 87,11", "5 139,37 107", ",84 75,44 3,53 149,178 151,185 11,13 29,77 107", ",4 33,125 113,141 56,88 190,124 108,12 34,", "163 78,83 71,192 34,76 37,134 183,161 176,8 187,1", "06 195,112 59,153 31,138 98,124 38,", "110 57,65 148,170 84,139 11", "8,150 27,167 152,6 7,7 126", ",187 47,122 23,71 183,166 54,17 190,197 2", "0,5 6,98 123,166 2,102 140", ",48 59,58 162,19", " 68,93 12,154 165,158 100,16 103,128 79,1", "65 51,15 90,152 124,135 146,", "173 125,4 136,98 131,78 195,119", " 156,49 91,76 179,10 38,164 195,53 68,1", "05 170,191 25,171 143,168 179,54 19,123 172,194 1", "98,140 183,136 148,63 168,34 37,39 140,19 120", ",60 19,79 54,117 18,64 114,57 11,43 68,198 6,132 6", "3,147 119,33 95,89 9,94 56,97 193,95 66,41 191,129", " 191,144 83,107 72,46 147,99 187,158 186,149 19,18", " 93,59 105,29 88,81 171,120 145,98 141,152 29,79 1", "98,94 5,178 128,87 161,15 180,8 22,127 189,184 26,", "12 116,9 115,91 144,179 88,148 135,74 89,29 18,137", " 62,133 65,162 112,84 176,177 4,175 187,24 67,146 ", "133,142 196,66 58,113 173,94 89,109 178,173 134,18", "1 49,93 13,147 182,174 30,195 150,123 194,169 172,", "27 195,80 121,121 152,157 132,75 95,40 43,128 196,", "30 44,89 43,196 139,156 144,148 85,37 167,103 68,1", "16 99,52 64,85 4,106 36,180 20,136 133,183 62,101 ", "55,56 14,43 141,47 192,99 82,38 76,3 50,176 101,14", "8 200,108 10,176 59,190 175,180 11,58 133,14 70,82", " 80,37 17,118 70,104 24,116 188,22 76,105 135,189 ", "20,24 136,135 24,63 73,27 11,23 109,114 2,92 36,17", " 124,166 151,14 60,155 4,151 64,52 120,61 174,182 ", "46,26 186,29 82,143 45,104 33,183 186,91 181,140 1", "53,96 154,159 166,2 169,188 13,70 178,88 132,177 1", "35,84 101,3 61,130 17,121 22,165 96,56 16,146 105,", "34 77,101 66,95 133,132 121,1 111,31 140,51 164,55", " 84,126 40,170 4,70 145,86 163,193 39,58 136,131 1", "45,47 76,160 95,111 47,68 64,74 126,111 37,168 188", ",13 157,141 115,72 99,66 146,28 140,38 1,45 50,190", " 93,172 43,144 35,69 32,50 26,101 155,199 71,76 73", ",32 197,133 155,67 160,64 123,68 122,129 21,135 33"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    int n = 200;
    vector<string> edges = {"130 38,76 195,62 189,131 148,197 71,86 134,133", " 32,24 104,101 9", ",65 82,94 84,99 181,6", "7 42,", "192 110,58 163,33 181,133 98,127 92,170 196,19 48,", "71 172,124 80,45 5,172 74,132 143,165 43,93 88,164", " 122,121 90,44 115,57 110,157 192,76 196,145 162,1", "30 20,102 142,155 169,160 112,63 53,157 183,74 165", ",69 199,72 140,24 141,123 81,106 121,143 102,42 15", "3,94 10,80 78,81 50,66 123,49 150,43 63,20 41,64 1", "75,170 67,72 176,188 196,25 87,67 153,82 1,77 151,", "13 102,191 89,144 96,31 104,125 100,87 137,18 54,5", "6 41,95 32,111 183,96 121,154 58,49 100,51 72,87 1", "64,110 18,78 127,85 43,199 114,27 25,188 45,186 18", "2,139 60,14 34,193 125,29 43,153 188,171 117,143 1", "78,60 93,32 76,53 129,194 1,51 12,109 198,98 169,4", "2 32,118 131,82 156,159 90,138 152,45 35,91 46,182", " 191,37 155,107 157,195 98,102 104,83 116,11 171,6", "1 19,134 14,114 44,107 15,88 86,98 170,126 190,110", " 167,18 185,152 124,196 195,149 185,38 5,54 102,18", "5 160,173 85,161 38,73 27,187 13,141 112,13 183,5 ", "35,109 107,57 198,34 11,33 79,125 12,193 151,174 1", "56,178 26,181 158,64 97,9 113,166 138,198 111,137 ", "189,47 1,32 38,41 188,147 172,194 140,131 190,116 ", "186,128 22,35 56,13 64,92 84,42 76,173 96,102 187,", "7 145,126 140,52 4,165 121,190 47,148 33,175 192,5", "7 141,31 143,117 23,151 65,84 120,73 164,90 173,17", "9 41,128 136,2 130,156 128,16 75,26 157,28 122,125", " 150,163 139,181 1,97 157,30 95,37 7,28 177,148 12", "5,2 7,104 15,17 193,135 158,48 129,132 107,70 66,1", "60 18,136 193,87 147,47 49,43 197,125 33,7 41,98 1", "79,59 101,79 174,104 107,143 142,136 200,150 135,5", " 2,173 71,168 143,170 56,175 146,48 6,71 165,120 5", "9,130 145,142 160,189 8,72 79,37 56,50 39,158 47,9", "9 126,53 36,121 147,113 180,150 176,136 51,149 13,", "155 130,39 68,146 132,183 132,181 108,17 200,178 9", "7,184 16,168 178,174 140,172 73,6 106,107 168,136 ", "190,162 35,85 74,36 121,162 133,160 149,49 125,8 8", "7,105 38,30 37,40 37,176 77,47 136,72 33,15 198,10", " 119,35 155,158 22,111 110,161 133,200 49,148 17,2", "1 154,47 99,1 51,176 33,4 3,23 21,115 184,68 69,46", " 83,145 161,169 20,12 156,142 149,58 115,31 54,129", " 73,112 97,42 37,20 105,15 26,128 47,22 193,35 40,", "196 162,183 178,189 55,74 87,142 141,174 125,75 70", ",119 91,100 108,193 194,103 79,133 38,3 94,167 149", ",140 118,200 193,185 31,41 42,169 42,89 52,187 168", ",177 61,26 168,179 95,67 98,103 22,55 177,49 131,1", "80 166,5 130,122 173,112 178,129 159,178 102,56 18", "8,38 45,183 24,108 190,20 37,187 146,144 90,145 95"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    int n = 200;
    vector<string> edges = {"187 73,61 157,106 174,1 61,72 183,71 89,", "129 130,153 120,1", "36 1", "59,105 101,139 32,197 85,140 10", "2,147 4,67 62,11", "4 139,156 78,181 128,191 97,95 7,87 165,126 ", "3,168 25,171 14", "8,153 42,", "7 78,200 47,175 117,147 63,8 162,108 82,131 ", "150,41 92,177 119,178 13,84 157,194 188,", "103 142,156 113,84 173,80 122,44 165,130 5", "5,", "165 139,45 169,111 33,32 37,70 154,83 1", "54,123 171,14 64,6 26,152 42,11 97,154 16,64 1", "76,190 187,68 39,100 195,199 39,51 193,120 42,10", "4 20,46 63,195 103,27 133,74 111,109 53,2 40,13", "4 23,167 198,170 44,71 151,137 129,53 6,138 7,134 ", "142,157 173,63 134,114 70,174 84,91 45,173 136,145", " 110,101 151,110 170,21 171,115 101,28 104,53 4,75", " 189,192 136,19 149,82 29,2 66,107 172,96 78,80 36", ",144 180,179 168,26 128,89 184,16 70,168 21,50 88,", "20 36,192 167,133 18,113 146,166 187,1 152,180 182", ",139 138,26 68,151 76,61 173,164 111,101 8,2 58,17", " 196,183 17,159 1,121 1,69 52,143 91,103 137,112 3", "8,181 6,112 165,115 71,48 89,99 197,148 25,200 131", ",96 146,30 195,142 15,102 75,58 105,52 148,65 140,", "38 95,142 23,160 27,32 95,89 80,73 123,124 62,60 1", "63,5 50,25 31,199 134,8 105,135 1,77 167,9 167,141", " 71,199 137,39 186,122 104,56 61,44 81,81 94,198 1", ",128 59,26 109,43 171,135 121,15 35,138 165,10 82,", "169 5,139 116,16 119,87 110,40 196,2 185,79 58,185", " 20,47 173,172 31,78 170,36 141,90 155,188 143,149", " 90,196 54,186 24,127 86,116 119,95 83,117 147,137", " 181,115 104,17 66,119 38,35 109,154 78,97 14,154 ", "156,22 34,73 43,109 60,23 26,19 64,85 160,118 148,", "79 2,13 77,42 178,61 192,34 74,159 152,17 2,33 127", ",46 147,15 195,161 42,195 199,90 64,113 32,92 51,4", " 98,48 72,11 14,46 199,6 109,25 64,73 14,37 87,176", " 69,4 117,19 14,26 181,148 190,86 99,189 57,96 32,", "179 21,93 12,80 17,54 79,46 175,62 93,94 146,105 8", "0,82 193,124 65,104 80,4 142,3 108,163 129,185 28,", "66 8,119 37,24 134,193 108,29 144,59 35,49 90,43 9", "7,196 66,49 149,182 29,164 194,146 139,76 48,10 67", ",81 95,98 46,155 11,125 148,71 79,114 37,117 199,5", "8 115,122 48,168 172,55 128,12 10,158 84,184 104,8", "8 164,53 117,199 128,24 15,31 64,128 100,119 83,14", "2 53,18 22,159 56,125 43,112 44,129 46,57 124,151 ", "122,162 115,7 70,150 47,132 69,51 41,138 81,35 103"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    int n = 200;
    vector<string> edges = {"166 172,35 190,66 85,96 114,37 29,68 53,102 1", "0,89 99,181 126,18 120,30 21,32 69,140 110,1", "80 99,149 155,17 93,29 6,159 168,172 ", "147,79 1", "12,112", " 43,111 175,188 96,199 126,19 47,191", " 38,160 76,164 87,5 190,41 13", "2,141 1,1 3,153 74,30 42,57 59,18 113,197 31,86", " 122,127 179,95 120,90 74,84 181,13 39,170 138,7", "2 88,145 151,151 38,117 17,80 56,16 102,148 49,175", " 130,62 149,137 76,61 48,107 120,120 65,103 115,15", "0 124,42 55,101 111,48 195,166 33,162 165,84 200,3", "9 41,109 163,8 13,90 136,43 150,6 200,70 45,51 133", ",3 169,182 92,191 146,103 124,186 182,15 19,169 16", "1,56 30,157 7,152 126,85 5,165 77,157 25,46 45,69 ", "20,130 135,63 78,161 141,173 104,48 164,117 137,28", " 164,99 84,146 156,91 179,153 136,116 49,89 181,14", "4 16,179 178,78 184,196 48,54 46,77 30,104 44,21 1", "38,7 121,163 99,81 66,198 81,115 19,66 63,196 161,", "136 123,4 117,109 181,50 151,92 158,125 157,32 166", ",42 72,86 61,122 133,183 126,164 1,67 146,176 4,11", "4 8,119 2,33 154,115 100,133 161,100 19,177 46,56 ", "162,44 27,36 134,83 72,126 119,75 176,145 126,11 2", "00,50 191,108 137,174 15,195 28,61 98,178 18,132 1", "16,128 58,60 15,138 88,71 92,27 10,163 84,137 75,3", " 54,184 35,73 115,156 199,72 40,3 86,118 99,131 12", "0,31 198,34 134,9 173,85 94,7 79,192 85,124 182,11", "9 99,1 86,88 105,59 87,22 115,40 153,6 118,199 38,", "14 166,200 156,161 59,64 189,82 50,105 30,129 40,1", "54 108,143 25,47 157,158 25,46 28,134 65,170 83,22", " 92,147 176,69 14,74 24,28 3,97 9,190 97,90 153,12", "5 100,171 75,98 57,52 167,72 170,149 33,10 64,123 ", "74,189 192,190 106,185 194,122 61,20 160,88 90,152", " 50,194 178,87 51,87 54,58 95,139 58,110 159,106 1", "97,148 23,59 177,71 125,168 193,23 101,195 3,138 1", "53,99 191,38 84,55 129,167 58,165 72,15 158,78 66,", "123 77,49 188,140 192,53 65,12 126,88 83,25 71,63 ", "140,76 32,169 122,42 90,94 197,67 37,27 144,26 134", ",60 43,61 70,197 63,45 196,193 78,187 38,176 155,1", "63 119,133 48,155 117,187 37,168 94,43 19,2 29,93 ", "69,24 42,25 112,135 148,121 60,21 80,193 35,142 37"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    int n = 200;
    vector<string> edges = {"9", "6 18,125 143,51 163,96 65,176 63,179 102,14 101", ",133 7,103 ", "2,52 88,14 1", "73,9 99,114 105,149 198,149 73,173", " 116,6 89,187 79,157 185,20 165,63 78,122 13", "8,107 7,106 119,133 184,41 54,105 121,70 149,155 7", "7,181 13,40 83,145 121,164 167,148 39,115 63,195 1", "75,112 196,189 36,138 40,139 169,88 193,136 7,57 5", "2,129 17,92 83,98 199,176 41,5 106,45 124,191 147,", "9 98,7 67,108 145,67 21,39 188,192 70,101 173,42 7", "3,126 109,71 153,190 4,46 154,137 177,58 47,147 18", "5,91 182,116 14,80 158,109 181,93 110,86 67,160 11", "5,18 66,188 115,59 72,2 55,46 184,195 182,156 1,13", "4 155,123 187,18 8,89 25,90 39,197 118,70 86,128 1", "61,132 139,33 172,151 68,68 163,100 122,7 73,173 1", "00,30 186,68 23,120 78,10 69,99 158,144 166,131 11", "9,39 151,199 11,110 200,49 32,50 62,83 138,89 31,1", "93 169,55 96,182 82,47 54,22 127,177 59,124 195,19", "6 145,77 183,143 64,16 176,154 7,4 141,185 191,59 ", "92,197 59,119 86,71 53,56 167,150 137,159 11,154 1", "36,11 125,171 180,185 87,137 138,21 106,146 98,182", " 95,135 102,24 174,63 90,174 100,121 32,72 174,100", " 24,86 136,176 140,78 39,48 199,73 60,84 169,123 1", "90,27 39,163 179,78 68,29 132,169 29,79 89,23 178,", "184 119,40 94,200 152,168 84,37 109,193 128,177 17", "4,31 79,87 147,90 160,64 157,28 129,97 3,163 54,82", " 2,63 151,16 90,122 177,142 191,122 69,118 138,197", " 116,1 108,2 96,140 102,173 174,62 171,35 186,196 ", "77,36 20,115 135,180 15,8 35,14 59,17 33,54 135,24", " 150,61 4,87 111,167 91,12 123,44 104,51 140,26 97", ",145 112,46 192,187 6,170 28,151 23,65 82,102 78,5", "8 16,13 74,51 27,4 162,186 45,54 90,25 190,194 168", ",130 74,76 97,7 46,148 47,152 103,198 154,104 194,", "111 11,67 149,15 189,138 10,102 58,162 12,178 58,1", "88 176,113 90,190 89,43 55,24 138,23 148,34 98,53 ", "98,84 44,165 170,55 110,47 16,188 178,163 115,120 ", "41,151 51,25 187,60 46,18 195,66 3,166 116,106 86,", "94 14,22 29,141 162,158 153,69 197,74 156,81 77,3 ", "164,117 43,79 190,198 119,67 154,38 60,183 109,85 ", "106,153 34,175 117,32 134,95 18,83 116,24 144,75 1", "45,135 51,161 57,172 50,82 26,19 91,54 151,147 158"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    int n = 200;
    vector<string> edges = {"30 95,99 1", "68,151 142,40 178,1 87,140 ", "101,130 100,7 195,10 71,5 28,15 85,17", "9 86,12 167,126 172,168 139,91 93,78 90,42 ", "88,41 185,148 15,8 168,13 188,187 50,33 36,105 1", "57,161 141,64 47,141 122,182 13,6 1", "91,52 64,193 77,61 59,176 119", ",120 114,152 123,88 93,143 80", ",116 ", "48,162 83,25 112,83 1", "6,101 153,199 8,178 41,27 78,138 45,175 118,", "115 165,181 7,127 88,137 82,157 74,196 91,106 47", ",154 35,158 156,154 58,80 68,21 131", ",62 104,30 147,75 154,81 188,25 169,88 2,155 1", "64,135 62,91 175,193 94,96 156,46 102,192 138,119", " 31,135 106,175 112,65 193,74 64,124 63,54 21,110", " 44,34 ", "60,27 14,87 79,176 95,146 ", "121,18 170,108 186,103 32,47 129,200 92,23 58,1", "51 9,144 48,136 69,86 69,104 52,118 177,35 23,2 91", ",70 178,79 54,139 143,59 183,178 51,108 80,83 128,", "15 79,112 158,102 65,123 46,190 11,121 86,11 140,7", "1 58,87 92,86 146,111 113,87 148,55 5,76 62,163 19", "6,17 65,104 149,159 92,132 120,116 17,71 44,2 125,", "45 16,62 52,180 29,122 194,122 3,138 83,69 34,112 ", "2,96 175,153 10,196 42,49 121,16 61,129 106,128 11", "9,152 114,46 130,50 198,44 170,64 76,122 139,181 1", "92,194 108,59 7,147 138,184 135,167 199,61 176,95 ", "162,180 72,152 63,191 190,145 142,19 108,105 47,96", " 158,67 103,93 96,146 160,144 193,82 24,42 127,149", " 76,133 159,12 66,158 163,192 183,90 27,43 121,62 ", "64,181 95,170 75,7 30,107 23,31 181,73 131,77 17,8", "0 141,166 53,16 7,134 20,60 33,188 29,89 142,113 1", "8,189 122,24 14,9 142,165 150,37 75,158 177,9 73,8", "4 198,109 14,100 193,21 73,160 136,150 37,52 155,1", "71 34,57 131,120 63,173 132,31 147,68 19,131 89,15", "6 118,144 120,94 123,160 40,102 22,33 51,51 69,65 ", "94,138 30,19 8,74 184,181 147,150 18,75 191,53 84,", "76 164,73 38,48 173,3 167,76 47,198 188,38 151,197", " 192,82 28,63 102,61 197,186 167,149 105,62 157,18", "4 64,183 197,147 83,73 4,26 180,194 141,40 43,20 5", "6,125 174,98 143,117 131,199 19,169 42,119 59,97 1", "87,147 183,104 135,58 115,56 46,93 196,177 25,129 ", "184,58 153,36 70,95 31,174 42,153 113,197 128,1 20", "0,50 97,94 173,30 181,103 24,133 54,92 133,80 122,", "94 144,72 26,45 61,128 181,142 54,172 14,28 137,4 ", "21,195 30,114 144,9 145,185 40,22 20,66 167,69 40,", "164 135,32 67,170 154,157 104,85 131,197 59,39 118"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    int n = 200;
    vector<string> edges = {"52 54,24 144,199 158,", "3 143,29 184,140 62,27 22,180 176,70 73,99 15", "7,169 94,10 55,197 191", ",156 141,131 96,178 129,117 8,122 106,183 ", "16,95 138,123 119,119 73,61 143,26 62,151 23,152", " 173,198 68,81 61,105 154,125 159,67 113,191 46,23", " 93,68 94,4 38,82 15,8 24,18 170,199 99,187 118,19", " 61,94 45,174 152,48 83,26 98,85 67,79 31,15 122,7", "7 101,113 20,165 105,122 174,96 41,80 180,149 107,", "196 159,107 191,54 87,24 49,86 120,11 7,87 194,55 ", "83,66 179,85 180,20 80,36 108,12 64,69 102,43 111,", "190 195,84 67,86 4,143 17,96 117,83 5,108 21,22 10", "9,157 186,183 148,193 100,19 3,41 190,192 155,195 ", "131,75 152,76 128,110 10,34 167,89 52,164 42,42 72", ",90 123,130 187,168 122,111 66,134 35,111 162,62 1", "45,162 196,58 8,106 152,6 136,160 174,171 102,133 ", "166,23 91,138 101,92 141,141 22,31 14,73 189,32 16", "4,13 58,135 71,48 121,1 169,186 57,161 13,190 96,4", "9 56,110 112,179 177,98 170,181 48,15 168,16 143,6", "0 112,102 75,51 200,176 63,78 135,16 6,8 161,22 11", "5,112 28,121 55,7 107,74 193,99 132,131 161,67 62,", "137 151,68 51,165 164,163 88,60 110,70 95,51 192,3", " 136,143 88,196 53,53 66,37 97,116 8,18 84,60 10,1", "27 27,164 90,163 81,119 70,35 188,11 77,59 141,42 ", "44,57 156,128 30,55 181,146 1,38 150,132 169,105 2", ",103 63,159 53,5 60,194 178,17 19,173 36,50 64,1 9", "9,1 94,64 139,56 131,17 148,21 82,182 60,198 1,101", " 44,100 134,97 78,98 18,143 183,115 1,126 104,170 ", "33,155 39,180 33,159 139,139 50,53 43,44 165,177 1", "39,147 4,154 11,63 26,71 126,59 124,63 98,81 3,75 ", "160,136 163,145 85,30 133,142 64,46 105,39 127,149", " 72,72 70,154 149,95 29,148 163,81 143,124 199,13 ", "56,189 149,129 74,44 138,14 34,190 58,179 196,64 1", "62,186 146,60 121,33 18,177 125,123 11,47 55,46 18", "9,93 86,50 142,185 190,33 84,61 183,114 23,158 200", ",175 28,108 15,60 175,65 4,182 28,162 50,184 32,16", "6 37,153 171,148 19,9 182,62 20,104 79,90 154,69 1", "74,91 93,112 48,2 46,41 58,25 75,49 41,101 105,88 ", "183,61 136,107 32,85 62,198 127,174 102,84 85,20 1", "76,189 95,10 121,40 185,161 49,144 190,156 92,152 ", "15,6 143,83 9,19 183,170 26,172 95,73 42,176 103,1", "98 199,154 197,146 94,141 132,1 57,72 184,28 48,56", " 40,7 123,185 195,150 114,136 19,45 68,116 49,167 ", "130,139 179,184 90,46 7,118 76,188 89,109 59,200 1", "98,38 114,93 120,138 165,120 38,32 119,88 17,94 59"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    int n = 200;
    vector<string> edges = {"156 6,37 163,6 38,25 83,141 23,8 50,122 18", "6,58 102,170 199,50 75,1", "52 143,168 74,196 114,83 43,36 119", ",187 192", ",77 22,128 183,91 21,57 130,139 53,81 148,66 86,", "179 169,5 196,111 71", ",107 30,155 198,112 7,178 105,67 189,126 ", "9,9 63,93 76,61", " 67,146 16,183 115,47 168,99 27,59 194,119 6,159 8", "0,22 149,147 5,140 72,117 95,178 180,199 193,28 13", "5,1 122,38 156,20 81,24 77,167 170,108 189,118 11,", "135 32,55 60,18 48,15 100,71 127,104 1,180 103,148", " 14,56 187,160 87,90 124,60 93,190 90,2 175,157 17", "4,114 46,11 144,52 45,124 39,194 131,182 122,13 16", "0,195 56,125 200,3 155,41 54,163 47,138 35,54 2,12", " 34,171 107,88 185,42 37,14 92,106 134,127 33,53 1", "3,161 159,198 139,29 68,49 104,51 82,65 16,122 61,", "173 73,121 151,76 162,133 188,153 152,72 113,119 7", "9,130 140,10 117,16 123,166 62,63 40,176 180,189 1", "82,125 38,197 111,27 195,4 171,143 165,144 4,75 12", "0,192 57,149 150,100 64,109 55,33 44,94 138,132 51", ",84 197,136 12,44 121,184 49,21 58,134 129,68 28,1", "45 69,66 126,154 191,45 97,193 20,110 59,23 164,98", " 142,95 52,40 66,31 88,174 25,158 136,64 89,65 176", ",32 179,26 70,46 84,48 101,103 154,78 26,191 65,16", "5 96,113 106,177 178,120 10,19 128,30 167,153 154,", "86 85,123 145,35 161,43 137,200 41,34 112,101 108,", "172 147,17 116,194 48,100 40,175 125,97 31,108 18,", "105 177,1 184,188 141,74 78,185 133,131 110,89 15,", "92 181,85 166,39 134,116 118,169 91,106 29,164 173", ",82 94,96 153,181 132,69 146,166 86,87 109,79 19,1", "15 36,129 172,137 99,162 8,7 42,150 3,38 154,142 1", "7,102 157,80 24,145 18,62 186,151 158,73 98,70 190"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    int n = 200;
    vector<string> edges = {"1 79,124 158,194 98,200 13,149", " 123,77 194,60 6", "2,65 1", "22,38 63,", "71 189,59 184,169", " 134,185 52,17 ", "176,157 34,195 4,9 47,98 76,85", " 37,3 46,5 114,57 44,95 8", "9,112 142,1", "11 35,140 2,82 71,79 12,21 9,15 32,37 ", "109,1", "06 188,91 52,116 120,182 121,33 17", ",", "175 86,109 138,115 22,64 171,147 164,133 104,", "179 43,170 186,4 75,46 159,158 56,6", "7 40,180 118,30 165,150", " 113,20 87,130 129,8 170,141 147,166 167,53", " 31,140 54,103 18,160 19,27 127,", "52 105,55 5,75 85,18 65,181 155,58 9", "7,113 133,138 195,22 59,192 143,", "24 94,94 6,119 116,197 39,10 174,152 23,49 200,13", "6 50,155 1,88 197,183 36,165 160,83 61,196 166,", "6 103,129 135,131 67,190 178,159 110,93 188,97 9", "5,51 26,76 45,126 68,188 54,185 84,137 88,63 144,1", "73 38,117 74,161 132,92 177,50 37,", "118 41,168 115,188 149,172 107,109 72", ",84 137,69 21,146 163", ",36 42,29 151", ",74 154,", "143 172,102 ", "29,41 162,68 150,164 169,73 78,90", " 1", "30,31 5", "7,107 7,43 131,149 86,86 185,23 125,16 153,189 ", "19", "6,32 30,80 73,10", "8 111,86 39,50 195,193 96,89 199,54 136,121 93,1", "20 58,104 3,167 80,70 24,186 63,39 151,2", "5 117,191 83,198 101,144 182,114 156,13 4,174 100,", "96 51,42 82,40 161,34 152,132 191,35 27,47 168,154", " 193,11 190,48 20,28 145,186 140,93 197,100 99,84 ", "149,39 8,88 148,12 90,19 60,50 128,142 64,44 187,1", "63 139,105 175,127 126,199 28,184 183,128 49,61 33", ",156 173,62 157,187 141,13 149,122 119,81 53,134 1", "08,135 198,78 192,50 188,151 188,37 102,14 77,145 ", "112,56 180,171 69,66 70,7 66,2 139,45 15,2 91,87 1", "6,148 106,176 81,110 92,4 148,101 10,123 91,125 48", ",99 11,106 72,151 55,140 109,139 55,72 146,173 50,", "55 13,162 179,26 14,148 173,178 25,153 181,177 124"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    int n = 200;
    vector<string> edges = {"20 77,126 43,79 134,140 185,18 83,", "110 10,30 139,79 51,", "53 133,68 158,16 123,84 64,180 121,148 ", "78,156 199,119 10,193 132,169 71,26 109,89 20,75 1", "81,48 100,171 65,52 57,55 137,9 143,119 159,60 42", ",78 58,198 102,149 146,115 35,31 184,100 96,159 8", "6,176 52,121 77,101 192,3 74,66 1,90 93,73 110,200", " 51,122 16,199 98,130 23,182 116,175 151,154 114,9", "2 21,174 113,160 79,145 130,42 62,133 30,33 157,16", "5 153,55 186,121 133,125 9,197 115,46 187,82 129,9", "3 135,72 84,151 68,13 88,12 14,87 37,99 186,74 99,", "186 81,131 128,62 38,194 97,194 197,129 113,79 20,", "50 153,192 28,141 32,135 47,51 59,5 124,144 19,139", " 98,44 182,54 173,6 15,146 161,136 180,28 195,173 ", "148,107 141,102 69,97 94,27 188,24 125,73 144,10 9", "7,13 79,52 112,79 121,192 158,40 118,96 8,191 163,", "97 165,196 166,131 55,36 191,8 155,147 117,183 178", ",81 99,109 140,170 27,98 87,158 104,57 136,37 199,", "77 79,45 24,25 152,156 79,95 111,115 166,168 176,1", "17 29,80 48,105 121,61 36,42 104,181 127,133 25,12", "0 171,37 156,50 19,166 82,34 40,187 126,160 52,113", " 119,70 31,188 179,2 142,163 147,17 149,176 139,76", " 198,45 63,85 4,88 53,112 139,156 134,149 172,21 5", "6,53 112,199 89,124 190,106 107,172 39,111 101,52 ", "12,179 72,86 34,162 145,132 164,189 63,22 177,116 ", "122,152 105,176 136,143 153,168 133,152 98,134 168", ",195 95,32 85,185 106,156 12,82 120,80 26,14 134,1", "37 158,43 66,87 20,176 11,167 3,139 160,65 189,139", " 152,11 180,4 170,41 138,47 193,200 133,63 86,57 2", "00,108 33,1 67,69 18,164 44,29 41,190 108,98 88,7 ", "5,134 112,127 165,56 70,58 2,51 160,77 37,20 180,9", "4 169,114 48,155 49,86 194,178 90,38 60,68 175,83 ", "61,150 103,73 75,59 13,98 25,165 120,153 45,128 91", ",35 45,49 7,64 80,104 22,67 183,91 172,184 76,19 1", "96,71 194,180 134,138 162,177 55,39 131,134 77,123", " 92,152 6,118 75,157 54,25 176,153 144,63 73,23 15", "0,103 46,87 156,142 154,152 14,15 13,161 17,74 167"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    int n = 200;
    vector<string> edges = {"124 53,", "10 197,185 39,100 141,3 39,1", "78 90,48 118,147 14,93 141,138 9", "2,80 1,188 131,167 28,55 129,167 107,112 166,13", "5 114,122 81,96 133,180 200,198 18,192 1", "53,85 190,172 162,183 114,60 158,153 60,41 ", "109,38 134,8 144,175 10,144 200,32 ", "72,183 48,170 155,154 163,136 ", "15", "6,71 102,75 159,10", "1 161,149 84,57 113,1", "63 107,1 63,186 121,120 140,158 111,199 46,16", "1 67,111 25,197 117,137 24,19", "8 99,54 63,58 140,50 39,9 23,11 37,2 11,91 86,172 ", "91,21 75,35 ", "63,65 73,21 167,67 6,194 179,162 7", "2,180 64,54 87,43 1", "83,13 183,75 152,31 89,72 60,76 88,1", "95 59,24 97,191 52,47 172,46 164,199 139,16 56,15", "9 180,94 171,128 95,89 40,181 140,91 165,29 31,89 ", "85,109 44,13 89,74 146,167 17,78 2,146 137,91 35,1", "25 15,117 38,104 22,69 151,141 116,17 100,56 112,1", "77 115,115 186,159 42,165 87,18 91,119 36,200 187,", "120 3,107 152,33 25,97 177,49 13,1 33,100 8,189 21", ",73 105,63 47,23 32,184 181,165 47,51 68,116 42,47", " 169,121 61,4 196,85 184,104 198,33 148,162 165,18", "2 27,93 163,34 147,153 158,155 141,22 80,30 164,42", " 107,5 167,75 180,81 125,22 9,107 93,82 154,25 148", ",160 132,93 82,88 191,105 175,184 185,180 189,39 6", "9,193 70,59 96,116 159,104 35,171 4,53 116,151 46,", "162 129,42 100,176 193,63 162,7 98,46 66,110 7,173", " 8,61 78,139 69,103 194,72 80,29 20,196 149,7 77,1", "56 128,60 54,25 157,134 45,35 18,167 93,40 199,185", " 127,90 63,163 167,99 104,58 85,168 103,9 51,92 18", "8,72 9,129 35,142 77,57 83,83 190,86 198,190 89,52", " 123,64 93,164 13,99 148,14 160,113 127,21 82,40 6", "9,133 19,28 155,130 119,84 12,29 69,37 142,77 122,", "118 199,91 68,83 13,126 50,15 74,145 174,12 195,10", "7 144,164 49,44 101,141 159,187 5,19 130,200 17,98", " 34,95 145,20 118,8 75,27 50,182 49,35 90,143 94,4", "5 138,28 75,163 106,114 190,155 21,182 20,62 65,14", "8 192,158 47,70 143,79 168,157 51,72 22,157 32,18 ", "47,54 153,49 181,55 33,108 16,57 183,99 169,132 41", ",58 29,68 35,3 20,63 22,25 162,144 17,157 55,35 80", ",135 39,6 150,26 176,140 20,49 120,66 49,75 42,106", " 5,43 39,179 71,152 93,116 167,106 100,169 178,174", " 108,66 30,127 49,167 187,32 25,152 170,155 8,102 ", "26,32 54,166 62,87 55,165 157,57 85,123 136,144 17", "0,131 76,36 79,170 82,68 18,150 110,127 57,124 152"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    int n = 200;
    vector<string> edges = {"151 188,72 ", "108,189 42,", "4", "0 1,173 79,37 152,", "188 199,179 151,129 11", "3,199 151,200 ", "144,8 174,132 28,76 28,112 8,156 111,119 132", ",146 125,153", " 31,126 8,103 139,114 68,100 24,193 111,4", "5 37,63 184,163 25,126 114,26 184,96 53", ",42 140,48 103,94 91,136 90,61 187,181 156,13", "8 123,116 28,47 36,194 37,16 54,27 141,190", " 19,44 58,159 124,152 98,101 165,73 1", "85,143 119,58 66,124 177,176 51,34 98,41 198,78 1", "40,74 191,133 126,20 194,50 111,69 74,142 27,25", " 182,107 20,84 149,111 107,4 103,186 5,120 188,32 ", "103,98 139,87 73,30 190,13 181,104 60,169 150,36 ", "122,115 199,88 94,51 101,22 137,89 43,42 51,199 1", "79,175 134,19 89,178 62,176 43,3 101,93 63,17 172", ",28 156,135 6,164 127,145 154,105 171,131 89,172 ", "179,86 176,79 48,68 161,62 196,34 6,23 34,121 13", "3,160 162,198 120,188 179,156 23,88 146,14 96,15 9", "1,24 142,165 42,45 48,23 98,152 13,83 113,191 84,1", "70 197,10 82,17 199,102 43,40 115,108 60,194 92,10", "8 136,122 97,2 130,4 173,77 178,59 48,54 148,124 8", "6,140 159,43 131,102 101,104 120,11 105,28 180,168", " 109,190 140,155 18,193 158,141 121,169 26,117 87,", "197 136,31 128,127 2,174 166,166 117,79 92,6 98,21", " 11,35 138,120 72,86 131,85 14,106 179,19 86,65 49", ",23 143,88 81,65 85,131 124,34 28,51 200,84 160,32", " 45,78 102,91 167,185 70,162 64,144 19,20 175,171 ", "112,45 23,46 198,132 59,158 111,9 33,190 144,57 60", ",60 17,118 39,125 128,109 155,167 33,146 31,72 197", ",159 189,91 147,197 90,60 172,139 32,113 88,94 153", ",47 16,48 152,167 22,120 1,7 41,59 195,147 15,147 ", "183,177 157,196 21,82 168,190 200,104 151,125 66,1", "58 79,94 147,135 194,115 136,137 153,139 135,75 15", "1,123 35,7 198,53 63,156 34,149 145,43 124,151 7,1", "39 193,159 190,128 83,140 102,151 57,152 156,59 29", ",154 10,180 20,39 52,97 38,5 100,182 26,71 108,188", " 46,192 69,134 59,55 179,153 125,119 28,6 4,195 76", ",13 6,190 101,180 23,144 78,66 33,80 172,111 29,9 ", "91,64 47,116 119,157 144,67 96,177 102,46 106,18 1", "92,183 94,110 169,187 160,20 23,29 194,113 146,52 ", "95,113 183,99 169,88 44,130 67,89 159,92 135,33 12", "9,38 56,1 90,156 20,180 45,40 80,128 167,101 30,48", " 20,80 188,32 194,76 173,195 111,12 63,124 140,95 ", "36,66 15,161 186,33 88,81 9,148 61,150 110,70 77,5", "6 118,123 67,20 116,3 144,29 28,15 81,31 44,90 188"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    int n = 200;
    vector<string> edges = {"45 39,133 157,91 111,144 106,54 115,190 67", ",77 10", "3,", "194 140,185 180,10 12,30 139,43 21,96 93,50 1", "92,6 15,194 4,94 144,99 14,68 121,114 89,7 154,", "16 97,93 52,178 109,64 68,26 16,115 71,102 152,89 ", "52,161 157,36 133,126 153,169 47,144 97,93 23,4", "9 114,86 198,176 26,137 138,41 130,192 161,36 35", ",12 116,163 129,178 141,32 27,197 33,108 159,97 5,", "59 118,181 41,157 64,175 101,63 106,6 122,135 84,4", "2 90,1 163,107 30,158 69,140 136,4 107,16 144,186", " 161,91 49,147 157,138 179,91 117,23 117,192 120,2", "2 196,110 90,180 30,31 75,106 178,142 55,180 107,1", "02 87,3 39,165 60,97 85,100 152,193 62,1 158,130 1", "71,38 51,107 33,192 67,195 109,127 181,34 51,125 3", "4,26 90,190 157,195 42,189 58,173 12,196 174,27 25", ",191 39,150 155,4 75,108 53,123 137,170 47,69 163,", "58 56,95 6,64 168,145 81,92 87,115 22,33 129,167 4", "7,150 118,122 95,136 165,5 164,53 175,13 23,177 18", "6,16 85,129 197,120 68,57 127,129 185,2 39,73 121,", "146 132,47 100,69 131,87 146,90 94,24 100,106 26,1", "13 2,28 121,82 61,168 28,124 132,65 6,98 169,17 87", ",121 177,76 53,6 125,81 126,74 8,37 5,101 162,15 1", "20,36 95,195 41,160 42,26 85,111 149,30 31,18 105,", "19 20,68 36,156 7,44 13,46 132,14 113,143 116,119 ", "167,110 164,85 57,155 58,19 75,195 26,117 111,52 1", "11,120 121,197 20,103 3,35 28,62 59,190 35,40 84,1", "21 122,29 58,158 183,79 12,11 156,157 168,109 110,", "166 32,134 178,30 33,154 86,184 134,31 20,66 84,14", "4 5,20 194,88 169,182 28,105 200,75 158,28 50,189 ", "193,178 144,80 149,64 65,104 11,149 52,80 13,12 11", "4,94 85,172 132,75 180,144 160,139 20,198 54,19 31", ",187 185,38 121,149 12,163 194,15 177,148 149,13 8", "9,177 28,199 104,106 37,153 22,194 136,21 200,61 1", "7,130 134,171 63,90 127,141 109,118 108,179 151,13", "1 165,70 200,51 177,164 195,128 62,73 177,90 178,7", "8 12,183 163,200 39,65 192,178 195,74 88,51 168,16", "3 140,6 157,112 199,59 150,39 55,60 197,151 189,71", " 112,48 34,72 191,25 145,9 170,165 197,162 123,85 ", "164,159 62,63 26,188 167,116 114,182 121,26 110,33", " 4,176 37,56 108,84 191,164 184,183 165,139 1,129 ", "131,107 75,83 166,67 186,48 182,114 13,100 170,136", " 69,174 83,117 13,4 69,116 79,111 114,190 51,65 48"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    int n = 200;
    vector<string> edges = {"31 84,25 128,110 178", ",81 35,89 25,113 103,114 70,93 29", ",98 199,192 71,5 28,127 125,98 86,51 165,94 50,71 ", "66,124 98,37 46,135 99,156 197,109 ", "32,117 112,167 14,183 103,177 163,79 32,", "88 33,12 2,106 175,30 181,68 179,1", "32 141,192 130,69 112,184 149,145 18,78 47,138 ", "84,1 52,92 15,42 126,40 166,13 186,2 144,61 182,", "106 171,141 153,178 40,107 76,76 46,160 63,172 176", ",139 198,102 184,37 44,180 120,14 62,149 45,129 11", "6,175 73,138 44,156 42,8 119,39 106,163 173,55 39", ",36 2,16 48,196 43,56 49,179 90,100 35,55 197,7 15", "9,198 160,171 175,1 132,162 112,18 130,130 71,28 1", "03,26 154,34 8,90 146,13 170,165 97,41 148,153 83,", "77 181,69 130,4 49,157 159,73 121,144 185,180 144,", "122 12,176 84,43 177,24 102,10 162,132 186,143 48,", "95 88,79 109,35 12,5 160,159 43,41 115,34 88,174 5", "6,186 1,9 84,154 121,73 39,107 138,11 109,65 60,13", "7 41,2 105,193 31,67 185,121 125,79 64,147 46,39 1", "48,187 130,197 42,34 186,82 157,181 177,126 39,20 ", "21,127 74,32 36,44 25,128 172,79 122,3 67,190 128,", "6 34,38 108,62 151,32 105,103 136,87 130,60 169,15", "1 77,131 133,121 47,185 19,185 180,140 162,101 129", ",42 125,134 147,70 103,66 187,129 18,168 11,136 15", "5,98 193,126 171,120 79,57 65,145 187,96 49,135 11", "9,170 135,112 129,66 72,80 145,128 98,129 145,171 ", "197,56 96,63 5,21 186,71 145,119 170,44 193,7 167,", "191 84,74 142,49 154,116 130,72 101,172 164,74 96,", "10 53,99 88,173 48,26 55,162 101,25 138,95 153,147", " 164,98 9,18 162,11 19,111 145,72 140,72 192,33 95", ",72 129,52 13,104 116,180 64,20 6,78 41,58 93,32 1", "95,101 80,197 73,75 124,22 130,35 54,20 135,88 15,", "161 190,84 37,190 84,100 11,16 77,143 30,6 99,108 ", "131,62 150,176 31,59 104,140 111,175 78,145 22,193", " 194,187 10,185 36,194 191,190 31,115 121,105 122,", "181 16,46 193,144 81,158 113,148 78,189 94,137 49,", "182 110,71 87,195 109,168 2,118 12,150 82,29 38,12", "1 142,172 89,54 67,31 194,111 130,27 13,48 151,171", " 73,123 158,166 188,4 174,19 67,35 32,36 11,105 16", "8,170 141,50 58,144 109,152 14,146 85,25 161,12 54", ",191 138,121 4,191 75,19 118,148 26,138 134,91 138", ",172 25,164 91,49 142,36 81,23 24,28 17,199 134,14", "1 52,125 74,20 1,85 57,77 14,121 78,31 172,101 69,", "151 16,133 23,45 189,172 191,37 134,83 21,109 35,3", "7 147,39 47,53 72,1 153,132 20,99 92,164 46,47 42,", "188 51,42 56,137 171,79 35,48 181,125 115,46 190,1", "19 141,64 168,122 168,169 61,163 157,15 1,142 55,3", "3 92,86 76,112 71,134 128,200 151,175 156,78 74,14", "2 137,15 95,54 180,52 132,130 112,152 167,7 48,168", " 144,26 49,161 98,69 18,172 190,97 68,80 71,142 56"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    int n = 200;
    vector<string> edges = {"61 157,95 83,182 1,170 185,73 ", "173,130 113,38 95,20 67,78 119,174 6,63 133,12", "5 41,142 120,119 146,83 6,39 48,140 111,142 184,1", "61 125,120 123,124 43,137 187,187 1", "81,58 146,6 42,194 94,157 81,113 97,95 49,164 93,1", "01 154,111 5,45 6,109 110,154 39,66 132,175 33,164", " 157,99 197,86 22,49 73,108 102,138 162,182 141,64", " 108,165 132,27 174,11 197,37 29,137 123,119 88,12", "2 3,118 168,40 100,24 121,114 165,109 140,114 88,1", "19 84,31 198,51 173,186 200,171 47,85 184,192 141,", "52 120,171 140,2 70,153 126,15 60,84 106,12 64,60 ", "42,115 169,6 51,90 81,129 116,193 182,173 27,88 50", ",90 76,89 73,134 127,76 138,106 50,27 6,150 26,83 ", "189,95 98,195 65,19 69,77 4,198 102,50 32,86 82,13", "5 115,185 74,65 82,32 78,180 88,83 60,36 25,97 79,", "78 58,37 110,47 77,153 22,29 34,148 12,82 99,54 68", ",180 122,61 178,56 65,151 120,164 178,174 92,5 109", ",88 159,33 26,70 35,19 193,13 147,121 105,188 196,", "81 195,25 53,85 41,35 37,55 128,70 29,178 82,87 18", "7,53 135,26 113,76 11,75 109,159 165,181 87,22 65,", "47 80,33 198,144 32,114 66,53 172,15 49,77 154,124", " 31,46 123,32 159,108 26,43 18,143 78,191 147,149 ", "7,113 124,75 37,69 166,89 23,96 124,123 181,42 189", ",92 103,131 118,68 16,62 156,62 171,169 8,85 181,8", "2 153,100 57,80 183,33 113,67 58,155 69,179 122,42", " 59,132 88,50 119,63 200,167 191,195 93,64 17,41 1", "04,67 165,96 91,136 6,102 148,22 107,185 19,176 15", "8,141 69,43 113,4 75,84 165,56 178,92 42,1 170,23 ", "83,46 63,117 120,144 67,38 83,30 182,197 71,140 70", ",86 76,104 133,184 41,112 182,128 10,145 167,91 17", "5,44 153,189 95,45 136,95 60,1 190,160 54,170 193,", "126 162,18 12,12 96,168 129,17 91,88 144,183 101,5", "9 73,190 69,30 1,32 132,177 39,66 58,29 62,103 15,", "133 151,34 177,11 164,199 45,173 38,136 174,58 143", ",125 142,57 72,50 3,156 29,146 122,16 194,166 193,", "35 177,182 74,165 180,14 36,74 112,77 183,133 125,", "93 76,106 144,163 134,111 2,127 135,144 3,94 131,1", "83 2,6 89,7 147,95 199,110 101,96 150,112 30,157 1", "97,72 163,145 196,80 35,177 111,187 85,158 28,138 ", "65,190 155,138 107,200 117,116 176,49 6,197 90,148", " 79,110 75,101 35,98 92,11 162,172 14,71 44,8 40,7", "9 96,48 47,105 160,17 18,9 55,159 143,161 200,184 ", "133,120 133,2 77,3 114,190 30,132 122,107 11,143 1", "06,11 153,189 73,137 85,137 125,44 81,166 185,162 ", "157,39 171,122 119,60 199,99 71,3 159,33 18,175 11", "3,198 26,128 152,73 27,89 45,21 149,41 117,139 152", ",173 136,146 114,152 191,87 151,28 24,153 76,18 31"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    int n = 200;
    vector<string> edges = {"38 174,138 18,144 156,175 173,190 146,", "190 197,72 43,26 175,36 10", "3,70 111,32 171,4 117,4", "3 75,38 80,197 96,139 136,126 15,55 151,103 161,1", "53 156,157 66,108 43,198 89,20 90,151 120,8", "3 181,24 101,18 4,86 161,33 28,92 17,189 13,10 ", "115,21 126,120 59,86 26,121 137,5 69,22 37,170 83,", "92 145,23 177,50 152,113 3,2 16,173 197,13 73,61 ", "9,96 112,137 136,183 154,69 3,84 155,110 90,141 54", ",158 74,1 100,164 122,196 79,60 5,13 55,46 155,87 ", "61,28 39,26 9,138 159,194 160,141 181,96 156,113", " 10,115 110,34 18,147 164,98 189,168 40,180 25,17 ", "56,18 158,148 158,145 28,172 105,40 193,31 69,68 4", "5,109 7,103 47,47 36,131 121,169 39,143 42,51 130,", "126 63,86 9,101 29,101 10,105 200,152 66,140 16,41", " 184,78 56,66 125,121 192,63 147,29 20,20 60,78 28", ",150 186,104 2,116 154,135 196,57 176,118 141,193 ", "82,27 44,91 52,161 96,26 197,64 11,128 137,110 29,", "65 150,89 21,88 142,39 145,85 69,36 144,78 165,35 ", "108,48 2,117 138,197 175,162 145,52 24,52 90,176 6", "8,177 199,158 35,62 137,166 55,94 168,15 182,136 1", "35,132 36,6 116,130 23,79 192,60 115,118 6,159 34,", "11 98,81 33,153 175,80 145,107 138,200 127,195 111", ",85 5,73 64,165 37,82 95,8 58,184 109,195 152,54 1", "83,141 116,142 45,188 160,112 146,76 57,127 185,15", "6 87,19 71,81 169,38 56,181 100,128 192,26 47,199 ", "94,70 137,106 181,17 38,114 117,64 98,185 143,11 8", "4,196 128,152 79,171 49,65 118,44 188,85 113,39 17", "9,22 56,149 21,122 126,30 123,107 35,179 37,159 10", "8,55 178,186 30,155 64,50 196,39 133,158 32,3 67,5", "0 139,162 102,124 187,174 162,175 86,46 13,150 83,", "160 21,95 191,98 73,175 96,56 174,73 151,150 141,8", "3 65,7 172,150 129,11 55,67 113,1 154,123 1,31 85,", "182 16,134 173,49 107,154 65,118 30,154 141,97 25,", "191 51,166 59,119 196,65 100,157 152,171 107,29 11", "5,156 103,90 29,144 197,123 100,147 27,85 67,163 1", "26,165 179,53 12,151 11,158 75,77 47,20 31,111 14,", "71 41,16 147,187 15,146 175,110 91,59 46,74 53,4 7", "2,157 196,129 186,46 73,99 188,96 103,59 64,190 9,", "9 144,100 170,37 81,178 120,167 77,45 76,120 155,1", "76 25,75 159,192 119,84 166,58 25,145 165,37 92,10", "8 114,75 148,125 136,85 20,102 28,43 171,186 123,1", "28 62,93 142,42 19,62 50,14 136,12 32,133 92,77 36"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    int n = 200;
    vector<string> edges = {"162", " 123,133 140,", "106 118,11 165,179 101,110 164,156 101,98 1", "38,168 195,185 140,", "173 120,73 9,121 46,131 95,6 87,152 92,21 158", ",182 59,110 95,3 94,48 61,94 190,42 30,123 37", ",5 25,95 112,199 102,82 193,151 156,47 182,96 ", "175,119 10,165 34", ",83 144,116 66,171 85,165 59,98 133,144", " 86,87 169,52 23,176 97,114 142,136 127,7 ", "122,172 125,24 65,37 21,50 10", ",110 131,173 44,33 145,50 148,178 84,", "164 95,109 3,11", "7 45,116 74,15 29,194 8,156 31,59 20,108 21,100", " 69,133 42,79 149,62 4,58 180,36 196,158 156,30 ", "194,183 104,31 152,190 171,5 72,4 200,16 109,89 19", "4,120 67,167 11,56 24,8 80,182 15,60 168,140 186,1", "38 35,78 121,140 89,143 106,146 73,102 12,185 98,7", "1 11,40 162,181 14,56 91,26 116,149 52,158 37,117 ", "147,57 132,177 95,123 156,157 126,157 50,160 176,6", "7 57,150 10,35 30,63 1,185 55,29 165,91 24,2 197,2", "3 63,21 162,86 28,189 187,197 173,69 153,146 117,5", "0 119,124 183,138 49,180 98,118 45,158 162,92 32,2", " 67,139 22,159 125,187 170,105 77,40 37,39 97,99 7", "1,65 155,135 96,51 130,125 88,71 114,41 65,10 126,", "142 82,32 158,68 101,78 111,200 62,36 172,147 176,", "20 29,18 5,76 79,148 164,113 17,142 47,18 189,93 1", "89,27 137,58 127,122 33,77 135,128 173,150 48,191 ", "145,97 54,67 197,58 140,198 139,153 83,53 60,177 1", "3,18 93,147 146,184 57,155 26,13 61,102 187,15 167", ",127 51,136 49,137 16,14 53,196 125,65 33,90 158,5", "4 147,172 77,95 174,130 185,89 180,195 166,39 117,", "111 105,47 34,77 78,170 188,70 134,44 2,126 150,17", "7 131,145 155,119 157,163 160,166 6,121 172,101 90", ",196 172,84 30,80 133,110 148,104 141,126 112,130 ", "180,22 129,95 13,54 146,131 126,45 39,193 15,82 71", ",19 74,75 181,159 175,122 56,5 70,185 58,55 186,74", " 41,103 81,66 122,31 108,86 75,145 74,1 76,55 136,", "81 199,85 27,59 99,197 128,132 198,161 54,49 178,4", "6 17,129 2,25 189,28 124,13 157,8 58,33 7,29 99,61", " 119,108 40,158 179,127 8,98 89,91 74,58 136,112 1", "64,38 90,74 191,88 96,7 91,96 172,34 182,12 18,169", " 75,32 37,9 106,167 82,42 136,175 196,163 117,61 5", "0,112 13,172 105,90 192,62 1,17 36,136 185,134 43,", "11 193,110 126,192 68,34 64,115 114,107 46,10 177,", "43 103,10 131,135 107,65 26,64 47,186 30,186 89,18", "9 5,72 70,38 101,84 80,64 167,80 51,174 150,24 7,1", "54 147,141 100,193 114,188 18,126 13,99 64,105 135"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    int n = 200;
    vector<string> edges = {"65 30,25 92", ",145 70,30", " 182,55 27,24 152,78 134,51 96,76 14,33 17", "6,47 144,137 51,15 28,131 64,193 ", "66,151 179", ",138 73,168 103,163 199,23 54,1", "2 39,164 132,84 127,46 19,21 163,129 161,41 104,", "39 128,102 19,162 76,170 61,172 97,83 1", "16,178 173,45 196,106 61,", "54 94,189 83,85 184,20 13,175 61,196 155,156", " 175,143 36,139 89,77 180,159 119,8", "0 7,7 91,", "160 37,57 19,42 19,8 52,114 135,144 125,132 15", "1,194 72,109 42,", "173 8,165 121,200 198,192 174,1", "86 143,38 159,177 189,13 108,166 68,2", "2 11,92 1,110 48,103 185,52 10,60 105,113 157,88", " 191,100 31,154 45,9 172,129 198,94 165", ",123 177,116 87,147 18,31 122,82 23,198", " 22,128 19,96 115,148 139,29 65,32 167,180 ", "34,36", " 45,6 42,146 195,105 38,22 ", "5", "8,190 21,53 124,122 90,59 112,40 18,37 117,127 20,", "98 95,34 101,97 9,", "35 80,107 190,48 35,169 183,135 43,50 168,3 1", "45,19 69,195 24,149 67,174", " 186,5 100,118 140,130 88,117 162,167 149,81 16,", "187 126,136 99,157 194,66 3", "9,158 8", "1,185 2,2 79,73 137,17 150,75 176,171 160,", "1 111,99 3,91 187,63 151,160 1", "79,120 166,79 17,197 148,18 57,4", " 188,87 82,137 118,181 15", "6,93 60,104 49,86 98,126 13", "8,155 ", "71,10 136,28 118,133", " 192,44 133,26 62,179 59,140 50,89 84,67 77,142 6", "9,124 41,182 107,108 25,61 42,121 53,74 102,111 11", "4,62 158,12 4,78 153,141 171,175 181,36 146,95 55", ",90 44,125 197,101 123,68 85,150 29,119 5,188 12,7", "0 164,63 120,64 141,43 154,152 93,71 26,69 153,191", " 15,199 86,172 57,112 178,56 72,176 69,184 169,14 ", "131,58 19,27 130,183 63,16 47,72 153,49 110,115 32"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    int n = 200;
    vector<string> edges = {"4 124,167 130,17", "3 169,1", "77 10,140 60,166 37,11 52,24 66,8", "9 114,33 134,3", "4 49,51 161,124 150,158 79,95 189,109 5", "9,20 176,57 154,2 153,40 4,3 183,17 16,111", " 24,144 99,190 94,53 67,1", "84 36", ",119 59,178 115,35", " 30,199 155,27 148,123 110,200 1", "04,142 62,155 97,21 54,172 164,197 ", "137,68 145,77 145,30 179,148 74,13", "0 152,74 17", "4,36 61,19 ", "53,17", "3 197,83 77,80 83,82 21,145 129,7 87,68 28,", "157 170,122 129,43 190,136 160,54 135,187 47,", "47 75,73 185,97 199,99 96,12 141,107 39,121 46,11", "4 140,59 142,44 26,198 130,182 175,69 1,128 126,5", "2 12,45 100,88 192,32 121,108 102,118 105,85 81,13", " 46,104 142,150 56,37 17,146 159,39 191,106 153,75", " 178,76 103,188 130,147 50,84 180,25 14,191 165,15", "3 13,12 166,100 127,117 101,93 5,65 20,120 52,181 ", "166,22 51,196 136,161 57,71 44,94 85,143 45,98 144", ",112 162,10 43,186 137,139 33,66 184,105 116,133 1", "49,48 91,160 27,163 50,18 167,26 196,137 119,56 48", ",38 6,64 3,125 13,183 76,17 180,162 177,14 117,91 ", "171,132 188,96 92,88 159,126 122,6 23,110 198,5 15", "1,170 78,146 175,138 141,116 129,98 128,189 186,15", " 89,132 110,81 65,166 167,165 8,174 40,78 156,151 ", "42,199 146,171 35,90 46,49 71,103 157,180 18,50 15", "2,129 105,92 98,61 112,70 13,133 105,149 193,31 59", ",134 7,179 22,194 198,130 11,122 128,60 73,23 86,1", "93 133,135 158,164 117,152 12,29 108,67 29,167 194", ",55 152,115 41,176 113,58 64,168 59,129 97,145 80,", "72 37,42 58,156 187,154 111,46 1,79 15,41 107,127 ", "82,21 165,195 1,86 181,185 139,87 19,63 72,102 143", ",8 93,9 175,16 84,141 23,1 62,113 34,131 86,101 69"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    int n = 200;
    vector<string> edges = {"54 157,100 189,186 29,26 1,19 149,131 184,1 19", "1,5", "1 157,34 145,", "9 60,52 1", "54,75 193,32 30,114 194,21 127,", "60 89,34 167,145 8,152 117,26 37,18 5,76 189,", "171 9,169 116,191 145,111 1,107 191,138 186,37 1", "27,86 11,159 172,41 128,13 37,56 163,118 59,72 3", "9,122 74,92 55,105 119,53 156,152 73,112 26,", "191 34,190 137,88 190,55 181,125 180,119 46,3", "5 76,199 154,153 157,96 154,59 183,157 134,138 120", ",121 135,195 41,77 182,178 188,3 96,29 65,186 120,", "79 47,95 197,165 57,65 147,12 69,148 195,199 198,1", "01 109,181 173,167 78,62 82,154 111,164 142,160 11", "2,54 120,147 22,200 93,176 77,141 196,136 141,42 4", "4,78 4,109 16,151 36,110 49,25 155,174 92,124 63,2", " 124,7 106,36 158,98 154,33 93,89 75,196 125,98 50", ",103 24,73 70,24 177,43 87,134 22,93 118,133 31,12", "6 56,20 165,38 18,44 7,108 1,95 54,50 167,132 69,1", "76 182,84 168,16 200,163 178,167 154,143 68,64 80,", "49 171,179 88,69 26,168 48,120 99,45 166,194 78,13", "5 45,99 147,185 127,172 53,82 143,144 8,99 51,104 ", "72,197 186,4 195,156 159,115 131,48 19,172 183,67 ", "145,199 4,70 2,29 197,17 170,113 161,198 67,184 10", "4,81 165,30 187,144 191,128 160,91 27,66 140,15 16", "4,10 83,162 136,68 115,11 43,61 38,180 25,117 150,", "94 194,80 20,63 86,28 122,40 105,41 167,142 64,47 ", "32,85 174,21 111,175 84,90 97,129 162,13 116,23 11", "8,123 129,140 6,189 139,182 42,106 95,158 103,146 ", "121,186 106,147 186,58 148,20 15,177 113,186 44,83", " 69,149 151,8 14,166 35,138 99,183 23,161 61,5 79,", "130 3,173 146,116 14,102 101,76 40,39 152,127 114,", "126 54,134 163,27 17,6 123,46 85,139 90,14 10,192 ", "81,31 110,7 186,1 41,188 176,137 175,150 62,57 16,", "13 198,74 73,187 66,93 102,22 71,3 69,97 133,27 11", "8,163 65,87 28,71 95,57 192,155 179,193 100,170 91"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    int n = 200;
    vector<string> edges = {"193 53,1", "8 40,15 4,186 48,117 160,149 197,102 168,176 18,1", "31 146,40 129,8", "8 3,136 189,197 178,", "199 1,145 199,27 ", "126,56 168,163 94,196 131,103 157,85 48,57 39,5", "0 73,159 75,190 163,66 89,20 71,132 17,", "73 147,", "152 7,189 191,77 165,", "35 68,58 180,75 125,108 1", "87,5 57,", "48 161,71", " 147,192 119", ",183 27,87 ", "25,", "169 11,106 181,140 126,19", " 172,98 188,61 75,179 101,162 61,112 ", "22,151 96,17 91,160 61,81 156,10 83,29 111,11", "8 81,5 69,48 162,31 133,89 22,97 47,25 130,124 134", ",100 36,38 145,47 73,82 11,113 167,36 93,164 100,6", "0 152,128 57,144 26,107 123,22 3,138 32,101 62,77 ", "110,28 122,173 113,174 51,62 156,44 51,174 47,45 1", "14,1 135,29 178,153 137,11 37,23 128,147 50,104 18", "4,21 93,139 104,63 29,140 147,83 42,65 90,127 111,", "187 147,84 23,95 32,142 77,6 5,200 158,117 162,155", " 192,150 14,105 74,28 45,184 157,110 88,8 120,178 ", "182,36 164,86 13,122 142,26 138,18 92,177 110,149 ", "29,177 66,68 19,97 9,96 104,197 56,144 111,192 16,", "93 156,69 173,185 12,180 2,187 154,12 144,136 197,", "138 197,82 14,158 67,53 131,7 153,157 102,91 98,13", "4 85,70 79,24 42,32 104,197 33,65 110,109 148,121 ", "84,8 157,125 99,93 14,72 150,46 195,67 38,168 120,", "78 34,170 62,188 200,88 22,34 128,47 86,90 43,22 7", "7,149 116,129 87,193 192,27 80,133 28,33 127,92 40", ",106 96,182 106,31 88,40 52,96 120,94 35,105 50,64", " 187,171 10,108 49,148 30,23 46,55 140,42 34,167 6", ",110 193,128 24,141 65,3 155,85 159,2 171,130 162,", "59 186,137 107,146 28,191 194,194 149,143 101,3 45", ",114 31,9 175,181 151,92 87,115 149,83 58,111 63,7", "6 170,120 116,45 16,165 193,172 60,13 47,166 177,1", "35 70,26 189,4 118,159 162,116 185,198 4,161 117,1", "11 26,37 82,61 18,172 145,79 132,52 125,175 97,16 ", "141,123 190,16 65,56 103,99 59,162 124,43 3,195 12", "1,119 31,162 85,54 122,41 78,104 103,30 71,116 139"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    int n = 200;
    vector<string> edges = {"66 161,156 131,192 59,189 92,28 127,119 32,1", "83 119,8", "6 4", "1,31 14", "4,98 7,108 19,83 166", ",194 68,91 176,72 40,134 164,122 5,59 160,", "17 59,196 27,168 ", "157,18 109,197 64,161", " 186,22 82,178 181,142 132,97 55,48 157,101 78,55 ", "177,151 141,193 22,168 73,87 ", "93,160 197,124 81,111 61,3 169,99 89,9 11,193 1", "9,140 155,89 84,89 141,145 146,117 51,77 67,104 ", "113,10 189,116 136,185 125,76 197,85 170,109 83,", "197 115,179 132,101 163,44 49,6 153,65 184", ",162 ", "65,2 ", "15,15 183,150 93,113 97,186 42,1", "47 1,5 24,125 88,82 191,143 80,102 175,75 11", "2", ",17 143,133 43,184 1,148 172", ",99", " 141,112 23,44 193,131 179,29 56,12", "1", " 99,39 34,190 155,130 174,57 98,42 76,21 169", ",133 138,136 60,51 5,4", "3 100,165 17,152 107,47 58,84 168,64 66,61 75,", "32 124,106 133,166 125,140 198,16 144,74 44,107 11", "5,162 89,175 72,189 131,165 16,30 127,181 91,191 1", "83,162 13,115 9,161 77,161 152,38 45,124 85,23 134", ",26 10,195 68,106 74,200 167,161 16,164 187,172 15", "8,94 169,149 15,107 186,149 43,7 173,143 129,39 19", "1,50 149,115 80,81 2,100 85,96 147,19 106,183 56,1", "58 54,78 157,59 107,33 121,144 76,199 21,137 13,16", "3 78,60 68,135 63,52 37,93 162,43 6,85 193,155 53,", "19 133,77 11,36 38,132 37,187 178,13 101,123 200,5", "4 123,79 140,132 122,25 106,22 44,11 159,105 60,17", "9 5,153 39,7 90,141 168,70 79,121 162,120 159,171 ", "18,31 115,29 149,126 12,21 47,170 124,176 148,37 8", "6,12 104,139 127,92 156,1 78,62 116,188 10,144 107", ",110 190,68 127,197 77,152 120,110 118,128 38,37 1", "89,147 162,20 126,58 21,90 177,131 36,42 161,159 1", "65,80 66,103 139,138 25,14 1,173 57,186 67,33 13,9", " 160,137 184,56 22,3 35,175 185,41 5,169 18,24 114", ",5 189,198 70,49 39,27 130,129 77,113 20,67 31,137", " 163,197 17,80 31,59 9,45 51,168 93,11 59,4 156,15", "7 69,114 154,67 165,96 69,73 99,159 129,78 73,46 1", "09,167 196,146 157,191 49,143 66,8 131,154 4,51 17", "9,34 106,180 136,71 182,63 177,25 29,53 90,182 30,", "146 121,49 108,69 146,145 69,174 111,95 118,40 175"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    int n = 200;
    vector<string> edges = {"28 158,173 76,142 113,1 153,142 122,88", " 199,14 70", ",165 64,197 140,64 189,195 138,49 182,123 ", "71,156 133", ",120 100", ",129 181,71 10", "8,70 44", ",135 143,17 187,154", " 183,54", " 11,172 65,198 186,43 144,95 163,9 56,5 7,1", "09 195,121 49,134 37,166 198,85 41,101 32,73 175,1", "2 173,161 2,50 6,149 136,89 107,38 137,3 17,48 110", ",148 21,160 48,180 118,158 68,118 60,186 59,169 33", ",98 67,45 185,86 124,117 52,7 151,15 88,114 50,31 ", "102,194 13,79 69,57 85,34 129,179 164,121 94,137 3", "6,113 86,147 47,17 129,112 169,196 141,139 76,136 ", "72,19 10,91 127,193 53,183 22,30 199,119 1,14 27,1", "84 157,15 181,72 128,170 79,62 139,29 6,181 132,75", " 140,39 43,140 156,33 75,160 149,128 61,168 5,24 1", "74,83 84,145 63,74 70,155 9,157 166,109 139,122 16", "5,103 160,4 177,111 109,187 71,78 191,84 17,46 130", ",162 64,62 96,101 172,171 101,77 23,188 15,18 35,1", "40 10,181 34,197 169,18 55,20 46,176 104,131 134,1", "6 194,87 21,167 39,162 154,164 126,106 150,154 50,", "154 52,21 80,22 117,44 21,63 125,29 97,52 114,156 ", "200,154 67,153 77,108 188,23 58,108 17,71 84,126 7", "5,26 19,67 64,105 17,182 2,55 12,42 188,173 55,67 ", "189,61 178,144 141,190 168,40 120,97 117,138 62,15", "2 90,126 172,115 155,13 190,165 22,150 28,60 149,8", "1 139,66 89,65 197,56 146,46 141,58 73,141 167,96 ", "55,199 123,37 184,51 101,161 145,117 124,99 92,139", " 195,175 16,34 187,68 119,123 88,36 54,69 115,10 1", "85,189 165,53 40,49 90,185 101,93 123,82 135,108 3", ",126 171,163 80,199 108,200 33,196 4,47 99,27 49,3", "5 12,80 176,84 199,169 26,123 129,42 15,130 82,98 ", "154,100 111,12 81,70 104,8 31,120 81,200 140,165 1", "14,12 111,178 180,189 98,161 148,2 159,98 64,35 19", "5,104 145,10 45,192 66,124 97,124 122,50 86,98 113", ",127 196,151 106,32 172,107 116,113 117,139 193,17", "3 40,51 197,174 131,144 191,76 18,110 192,172 112,", "47 127,93 129,185 126,64 86,116 8,6 86,90 74,171 1", "64,94 21,11 170,102 103,146 24,92 147,173 25,74 44", ",125 90,6 183,25 35,125 152,33 51,177 91,169 75,59", " 57,105 129,42 71,132 93,44 14,111 53,143 20,185 1", "71,52 183,93 199,159 94,104 14,133 75,41 38,10 164"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    int n = 200;
    vector<string> edges = {"53 135,37 124,13 110,14 118", ",163 125,77 118,", "49 48,129 54,80 127", ",112 45,181 131,111 13,192 129,8 162,113 30,163 15", "5,56 185,87 45,21 59,48 183,138 29,112 1", "61,143 10", "9,10 74,72 129,17", "8 132,122 173,48 149,84 85", ",92 80,1 15,21", " 188,100 105,105 110,49 146,81 1", "44,2", "8 45,", "149 82,123 145,26 18,166 178,55 176,180 24,2", "3 15,84 14,196 41,61 108,111 85,22 54,103 33", ",100 84,184 187,89 149,104 56,74 76,7 109,11 47,1", "45 8,16 22,108 63,1", "39 121,129 119,98 92,171 170,54 24,17 71,96 61", ",135 101,127 113,149 6,171 58,96 28,95 152,70 20,2", "5 100,82 122,144 19,188 31,105 4,59 89,198 60,182 ", "109,128 155,67 190,31 32,97 21,112 28,13 142,108 2", "8,182 200,173 52,104 100,101 34,194 128,101 1,151 ", "95,175 46,4 167,135 76,166 131,52 48,153 47,60 191", ",94 20,58 79,157 164,85 77,132 181,31 59,84 104,12", "1 151,119 165,170 73,6 48,162 200,87 134,48 86,158", " 18,32 149,181 126,45 63,11 153,43 40,132 36,174 5", "6,5 96,20 62,146 89,94 159,109 145,124 163,36 181,", "131 126,24 124,13 167,38 49,32 122,141 169,85 136,", "138 135,161 39,83 141,66 16,99 124,73 63,90 42,65 ", "160,40 27,50 63,63 112,68 123,142 136,160 5,75 117", ",88 159,87 61,41 184,110 142,89 31,68 42,133 19,7 ", "36,118 105,3 138,168 53,44 163,199 143,93 103,25 5", "7,6 21,31 115,172 42,193 165,134 50,42 178,28 153,", "153 63,178 109,78 196,150 96,126 182,119 124,126 1", "14,176 49,25 105,25 84,21 38,29 135,163 24,99 66,1", "97 2,156 76,48 31,137 35,56 4,48 32,152 130,167 85", ",125 194,33 78,30 139,7 132,45 161,116 46,153 58,1", "40 157,135 186,161 171,46 18,156 138,3 23,76 189,6", "9 15,62 102,34 135,64 75,190 9,53 69,65 171,102 19", "3,176 188,79 120,63 65,200 178,150 87,36 90,45 47,", "177 169,52 86,39 50,23 106,136 185,25 77,82 115,13", "1 7,124 70,169 144,129 99,146 86,57 136,105 14,12 ", "18,27 51,49 21,15 10,71 18,155 88,76 53,2 198,85 1", "85,179 122,107 67,165 163,23 189,54 37,189 34,186 ", "189,88 129,86 55,187 107,50 112,14 25,182 166,185 ", "111,118 13,180 194,35 194,51 64,13 4,108 150,154 2", "0,164 81,185 13,69 76,9 43,29 168,194 119,147 7,14", "9 146,47 150,191 98,117 93,142 84,188 6,114 123,14", "5 114,120 170,106 186,114 147,183 38,86 38,115 32,", "130 197,111 100,4 185,195 186,26 148,91 102,159 66"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    int n = 200;
    vector<string> edges = {"196 155,46 164,137 5,1", "55 107,179 ", "92,92 16", "5,101 11", "8,34 43,151 135,142 51,177 197,93 88,71 173,31 ", "130,155 72,158 180,95 12,183 82,38 100,18 110", ",134 168,164 95,176 177,150 162,119 191,63 ", "155,68 146,84 113,27 187,128 163,8 60,170 7,59 3", "0,117 40,105 166,175 154,154 184,188 89,1 73,117", " 103,52 114,166 2,167 34,84 150,136 125,53 152,142", " 191,76 50,18 89,129 27,149 83,195 22,104 17,56 15", "7,190 77,122 110,27 167,197 48,159 114,79 29,70 13", "0,86 133,156 101,1 160,67 167,146 142,2 105,66 172", ",104 181,161 20,10 85,66 132,58 156,48 94,42 1,91 ", "119,106 149,198 56,8 9,118 28,199 114,172 88,163 1", "44,80 44,103 81,81 14,37 129,3 24,137 161,172 54,2", " 3,176 150,97 196,77 119,105 42,105 24,94 165,194 ", "96,82 38,130 43,117 76,184 191,51 78,188 63,36 186", ",28 199,162 50,114 83,23 174,61 30,45 79,111 28,26", " 11,114 106,23 114,33 48,8 112,108 46,100 45,160 2", ",44 171,162 94,139 28,135 128,125 183,91 154,133 7", "2,130 6,7 13,19 195,13 123,118 61,30 23,25 55,147 ", "155,122 97,141 154,149 156,161 13,138 32,192 4,43 ", "178,12 24,40 33,87 36,42 95,126 174,68 141,196 86,", "157 121,147 110,57 91,162 179,88 113,39 161,83 28,", "175 77,6 37,72 196,110 155,185 176,85 22,145 16,11", "2 200,144 90,113 14,145 137,152 99,186 102,103 185", ",177 93,66 113,10 69,78 158,102 151,178 173,193 91", ",84 172,68 57,57 77,167 43,154 57,98 130,132 76,17", "3 43,142 78,12 2,118 139,113 117,69 19,197 84,181 ", "13,131 158,140 115,184 134,116 182,31 34,60 10,64 ", "105,20 39,92 54,130 173,200 10,34 37,107 89,92 177", ",9 60,156 118,4 153,54 81,21 141,96 143,187 98,29 ", "26,74 127,40 197,133 63,126 28,47 109,182 80,119 6", "8,32 74,15 61,148 97,73 108,11 198,93 197,92 162,6", "2 184,162 40,73 166,95 64,178 31,165 172,51 154,33", " 117,121 49,120 18,99 192,89 120,81 179,88 103,173", " 31,118 59,190 131,12 160,63 18,196 110,153 138,16", "9 66,22 8,196 133,37 27,98 70,90 116,174 111,168 7", "7,98 167,166 160,97 133,65 75,127 140,72 18,118 11", "4,14 176,180 62,115 189,24 42,46 160,184 190,91 62", ",35 155,78 154,180 131,28 149,49 136,83 58,89 196,", "50 103,75 53,24 1,25 13,109 194,158 124,48 169,124", " 119,191 146,189 65,14 92,41 9,48 66,171 47,143 87"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    int n = 200;
    vector<string> edges = {"131 119,70 168,58 18,139 4,94 125,118 14,89 46", ",19 119,71 57,12 5", "5,92 110,143 141,5 109,123 35,54 14", "5,95 6,129 195,60 112,33 50,1 98,", "185 173,53 30,81 54,193 154,196 115,17 91,159 108", ",89 11,41 134,28 5", "3", ",187 9", "0,49 156,14 178,2 191,23 149,84 73,152 9", ",22 187,164 123,2 145,46 197,51 107,3", "6 48,68 51,4", "1 52,80 67,31 46,179 41,131 38,182 17,134 19", "7,142 123,90", " 192,125 153,149 184,93 54,132 92,8 80,13 154,91 1", "73,142 2", "4,11 72,162", " 76,48 122,27 51,130 ", "13,48 26,97 179,175 1", "77,37 74,194 174,157 36,41 111,189 53,23", " 30,92 198,183 112,109 199,25 88,30 86,135 8,", "183 87,76 25,64 84,60 105,114 75,85 20,133 107,12", "6 105,69 52,111 34,177 140,128 180,99 16", "7,154 130,113 162,24 22,63 107,78 40,184 23,72 ", "97,30 194,188 155,4 117,179 56,117 71,98 161,42 15", "3,98 137,141 128,96 53,166 185,100 182,5 25,38 23,", "200 2,120 85,9 15,31 69,21 83,180 127,198 110,67 8", ",54 122,43 22,159 57,176 57,99 95,6 99,172 80,167 ", "93,155 5,173 70,196 118,135 172,145 81,174 131,115", " 120,116 53,157 48,106 159,151 26,63 121,100 17,84", " 125,101 136,54 48,82 80,136 147,44 78,66 149,91 1", "5,77 135,67 170,98 134,42 164,55 45,96 131,48 138,", "38 53,199 193,181 83,47 148,3 92,124 129,158 90,35", " 24,122 191,16 12,186 32,190 36,104 92,198 74,191 ", "151,26 2,1 56,112 106,52 46,61 4,50 175,173 100,42", " 142,60 71,147 64,105 176,79 116,97 56,165 33,155 ", "193,71 29,157 95,34 31,110 77,86 103,75 44,8 198,3", "4 1,195 143,82 132,153 73,103 23,45 124,41 98,108 ", "144,110 135,108 183,119 86,57 183,46 137,23 28,145", " 99,197 69,95 167,62 160,53 169,146 185,73 42,105 ", "144,7 115,24 84,138 190,32 107,192 136,86 66,29 17", "6,74 3,72 89,80 74,26 157,140 58,87 108,125 73,144", " 4,200 26,134 72,6 200,15 166,107 186,29 105,21 10", ",52 89,154 113,34 137,127 165,40 114,178 47,78 150", ",179 31,74 67,15 49,59 194,65 181,10 160,168 152,1", "48 196,170 132,39 102,20 39,156 182,69 1,137 134,1", "8 16,2 99,137 72,149 38,171 159,197 34,135 37,89 1", "79,87 126,93 151,169 96,102 7,145 138,150 10,149 1", "31,88 188,171 87,163 60,66 38,161 69,113 130,56 41"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    int n = 200;
    vector<string> edges = {"190 137,121 193,14 75,8 10,73 39,16 87,2 62,8", "2 160,43 98,22 177,149 145,38 ", "140,175 62,75 7,60 23,49 119,26 126,183 3", "0,106 87,133 198,163 47,64 109,107 71,95 ", "147,20 5", "2,117 120,154 159,39 19,193 172,65 169,56", " 165,99 83,14 32,97 70,82 184,171 133,25 151,1", "46 124,157 50,146 7", "5,56 75,8", "0 142,42 189,152 81", ",89 50,163 44,83 37,15 33,156 76,125 93,181 7", "7,62 105,43 158,198 192,123 186,59 149,27 131,1", "28 179,147 16,176 68,12 134,96 131,197 45,121 14", "4,188 127,121 21,199 84,21 134,23 82,115 64,165 14", "6,92 142,160 175,54 68,31 23,72 16,120 129,109 90,", "30 58,173 141,35 104,85 128,33 164,30 34,141 65,8 ", "57,102 28,140 58,34 63,16 196,135 71,110 63,166 11", "3,48 147,7 135,88 167,46 26,105 60,21 117,139 44,9", "8 11,81 79,93 161,23 174,109 131,7 71,126 142,177 ", "136,179 114,155 199,3 42,182 82,192 171,186 125,17", "4 67,193 117,66 100,38 178,106 57,67 31,74 86,1 14", "9,78 155,1 194,79 112,29 107,8 106,113 115,147 49,", "72 119,162 55,151 145,6 191,6 5,40 24,9 11,60 182,", "32 7,106 196,153 114,139 146,54 45,119 8,195 159,1", "89 15,89 6,37 12,17 36,100 3,172 121,64 51,10 200,", "144 89,55 24,116 51,69 74,160 23,184 60,4 123,191 ", "121,145 19,47 56,90 166,76 138,103 73,142 162,50 3", "6,20 188,49 72,194 103,74 61,17 6,83 144,125 4,76 ", "3,124 163,167 55,71 56,143 23,91 88,178 141,57 77,", "21 191,96 109,161 41,185 101,71 14,194 151,29 165,", "164 66,77 16,117 17,57 200,44 124,51 97,5 36,192 1", "90,127 150,17 144,187 51,23 175,144 193,81 30,1 73", ",58 110,64 70,87 147,52 188,185 61,56 139,138 22,1", "70 156,135 13,111 98,112 178,36 83,41 4,98 20,31 1", "75,63 38,35 49,13 139,180 123,200 119,110 152,131 ", "116,146 32,165 44,168 45,8 49,130 69,50 17,188 18,", "72 77,70 90,123 125,174 2,129 12,136 170,28 1,119 ", "57,59 103,150 43,159 162,113 109,53 118,137 185,62", " 184,19 59,178 183,122 24,84 20,184 174,11 127,45 ", "114,200 181,120 144,200 72,53 86,148 44,73 102,104", " 8,60 82,134 157,158 78,172 21,196 104,90 113,18 1", "11,108 8,132 98,169 81,28 19,145 1,44 29,17 172,94", " 150,64 116,19 25,151 149,2 175,4 180,187 27,5 193"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    int n = 200;
    vector<string> edges = {"166 4,95 48,177 142,49 131,196 56,60 168,", "20 35,41 78,182 122,53 12,33 66,183 156,188 12", "0,170 139,133 180,", "71 166,86 143,82 2", "5,21 1", "05,76 121,160 30,186 198,129", " 199,82 83,80 192,22 103", ",195 28,14 169,56 2,74 151,134 113,46 72,70", " ", "150,176 137,122 16,97 159,118 171,58 163,174 182,", "131 148,161 9,33 54,43 195,65 39,199 51,2", "5 72,169 23,156 2,8 57,110 145,185 34,147 5", "9,29 11,135 63,7 10,8", "7 138,124 68,107 46,171 6", "4,120 106,159 21,46 123,10 43,123 ", "19,", "66 109,152 27,90 197,103 155,173 54,26 91,105 97", ",98 58,149 197,19 107,140 17", "6,69 44,101 134,116 186,73 24,91 154,17 96,86 40", ",31 50,16 162,84 65,154 117,9 76,42 7,189 33,155 6", "1,27 95,81 110,64 157,193 62,21 2,158 94,112 1", "27,30 88,34 184,89 101,62 60,110 78,64 5,45 146", ",36 80,72 90,74 87,32 114,2 173,88 187,99 20,138 1", "94,51 45,168 13,68 119,184 98,13 1,163 147,3 172,8", "3 152,77 17,130 144,38 183,61 89,104 14,96 18,59 1", "11,94 92,165 8,192 141,109 40,6 165,141 73,44 193,", "24 22,28 6,180 108,5 52,15 161,90 25,111 190,190 1", "24,35 74,179 185,132 81,55 188,137 160,67 36,78 18", "1,92 38,145 132,113 170,85 126,121 84,39 174,50 93", ",119 133,127 71,52 118,153 75,187 53,4 115,164 67,", "136 85,114 15,156 158,47 200,23 140,191 82,142 29,", "175 178,148 112,126 26,162 3,115 31,198 129,167 19", "6,12 47,79 104,172 37,6 13,48 191,194 130,37 136,1", "08 55,1 135,178 177,106 164,151 157,125 77,139 179", ",200 69,18 32,181 100,143 102,63 79,57 49,197 153,", "100 41,40 189,117 116,150 149,128 125,146 175,11 1", "28,181 189,157 75,93 42,102 86,54 167,75 70,144 99"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    int n = 200;
    vector<string> edges = {"126 191,14 7,43 124,64 193,143 107,164 71,182 69,1", "18 158,107 113,56 136,46 6,99 103,28", " 130,38 130,134 88,166 65,47", " 79,34 196,119 28,104 5", "3,45 186,18 19,199 81,168 164,74 171,144 10,", "40 68,", "70 47,3 97,74 157,169 90,41 121,160 189,5 78,", "79 106,168 1,100 120,13", "5 2,140 23,65 179,195 132,21 79,21 56,105 ", "70,117 55,149 123,53 132,", "61 142,7", "2 140,159 105,71 10,103 1", "86,15 116,24 145,114 46,9 74,95 151,1", "89 132,175 200,161 ", "17", "5,152 63,173 18,5", "4 168,33 154,82 117,155 168,34 30,130 117,", "59 129,23 183,27 119,86 100,13 21,129 150,101 184,", "200 93,120 130,188 55,155 149,191 176,22 51,13", "1 125,", "133 ", "87,132 129,179 110,147 129,128 85", ",10 75,51 89,102 39,151 76,35 56,65 155,174 98", ",39 99,146 134,48 34,9", " 16,137 ", "196,69 196,83 45,153 152,145 9,4 162,80 158,67", " 144", ",194 94,57", " 52,139 118,111 135,18", "6 164,90 153,31 188,32 150,96 29,1 ", "110,49 150,1", "44 177,116 36,109 122,97 199,184 187,112 64,", "186 71,167 141,197 126,85 108,190 80,193 4", "1,68 137,113 4,183 101,6 114,176 25,92 188,138 169", ",157 177,103 11,83 166,73 178,178 95,102 26,115 ", "50,156 165,80 148,106 21,78 48,7 129,71 26,109 59,", "2 138,99 166,75 168,125 161,108 72,163 174,142 170", ",52 188,67 123,154 129,16 123,58 121,26 9,158 18,4", "6 193,19 56,25 133,179 54,124 115,47 105,84 150,17", "7 83,69 198,37 8,110 149,93 5,41 112,127 156,11 45", ",87 128,196 40,50 172,42 73,123 74,170 61,17 143,1", "21 15,157 24,45 103,11 1,123 144,75 145,66 57,24 1", "55,12 55,36 182,36 58,89 190,8 84,145 102,62 195,1", "50 117,185 194,120 86,110 102,88 127,98 181,26 179", ",198 182,44 11,177 26,29 91,77 38,91 42,172 60,81 ", "96,180 173,9 171,60 111,165 163,181 43,192 180,30 ", "5,63 185,94 17,158 139,168 157,71 65,149 24,10 44,", "148 89,76 197,136 18,93 131,141 173,164 144,71 145", ",173 167,171 83,162 146,74 168,187 3,20 84,170 105"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    int n = 200;
    vector<string> edges = {"75 186,154 2,24 54,1", "84 7,9 93,193 167,16 142,2 163,", "167 161,88 186,159 45,2", "2 181,196 33,109 153,", "182 110,13 53,179 74,72 76,49 123,118 91,78 ", "81,20 63", ",174 146,144 68,200 172,2", "9 8,82 160,116 94,7 104,119 61,54 178,45 22,5 36", ",196 16,175 77", ",112 ", "71,98 55,22 132,156 12,185 62,170 121,44 ", "111,181 63,133 113,39 78", ",96 197,11 190", ",21 6", "7,101 36,135 69,12 151,126 ", "82,113 15,", "198 5,10", "2 194,", "39 101,139 143,115 192,56 50,87 139,", "23 26,130 73,40", " 190,168 107,3", "6 78,71 70,122 41,110 112,10 23,187 25,14 2", "8,91 17", "9,73 150,12 187,153 45,3", "1 158,124 85,103 58,173 188,53 127,151 22,134 33,1", "9 131,111 182,121 39,180 103,161 148,70 13,142 64", ",166 195,51 193,80 60,11 40,40 63,97 80,191 ", "100,197 114,78 117,42 21,183 52,25 4,33 66,171 6", "8,113 181,163 30,3 83,23 161,32 56,18 154,38 176,4", "6 165,105 96,139 100,35 89,190 92,164 185,64 99,28", " 166,63 159,20 23,48 24,69 57,137 11,109 51,62 3,1", "48 133,106 19,165 120,85 18,84 64,167 11,153 12,4 ", "133,147 124,50 177,75 30,136 152,189 92,92 162,96 ", "175,186 131,45 193,73 41,163 29,128 138,127 141,10", " 159,47 125,23 45,66 87,15 40,6 121,86 134,104 130", ",37 180,167 10,161 156,61 157,150 184,159 153,138 ", "129,94 34,77 116,158 68,26 156,153 181,152 56,23 1", "33,23 109,100 142,125 86,25 151,114 118,4 79,129 1", "68,60 102,43 195,17 200,93 158,83 145,162 153,99 1", "70,132 40,137 76,5 149,190 167,181 151,76 156,84 8", "7,167 187,141 44,192 48,69 8,148 72,178 164,199 13", "6,32 169,10 51,68 69,166 37,169 174,140 199,109 25", ",155 108,160 43,51 26,55 32,176 90,8 163,2 85,161 ", "159,194 140,86 100,123 197,27 183,59 105,58 14,149", " 188,109 63,65 38,34 35,52 46,63 51,162 109,27 112", ",108 17,12 76,143 188,195 120,1 49,117 47,107 98,1", "88 39,57 135,89 59,120 27,121 99,79 12,146 42,172 ", "115,131 75,113 25,177 97,74 122,40 12,81 188,157 1", "55,145 65,67 128,195 126,41 1,170 198,88 95,90 119"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    int n = 200;
    vector<string> edges = {"149 41,126 169,13 140,131 71,123 141,14 1", "75,87 92,62 130,74 155,58 150,92 45,135 50,", "22 97,200 ", "130,59 58,54", " 118,45 9,193 191,38 101,172", " 127,39 185,1", "88 14,68 95,90 ", "161", ",178 44,115 21,186 ", "25,51 164,118 7,85 9", "4,70 52,169 139,19", " 13,146 136", ",52 141,187 151,60 34,122 181,155 186,3 170,73 18", "0,27 159,37 ", "177,171 189,119 149,3 50,21 190,49 79,25 13", "8,125 19,110 199,175 156,2 111,26 42,181", " 86,6 173,190 20,128 156,130 172,199 168,145 16", "5,140 88,112 148,101 30,41 126,35 102,194 198,34 1", "93,63 22,71 24,93 178,30 167,97 91,198 18,127 49,", "20 2,166 53,44 93,105 10,192 159,165 161,161 87,3", "1 25,160 182,125 137,100 96,103 176,102 73,121 23,", "136 187,36 124,49 62,147 53,59 116,4 87,83 145,98 ", "27,23 61,174 26,91 131,55 120,5 142,8 116,195 55,2", "8 135,61 108,154 114,80 117,79 62,157 143,142 46,4", "6 6,10 198,24 5,150 154,116 37,137 74,33 110,151 5", "6,176 182,180 48,9 161,1 159,164 123,108 148,158 5", "0,75 188,191 146,144 64,98 40,133 143,170 72,117 1", "63,104 174,64 200,162 38,40 99,132 100,69 3,127 16", "4,56 80,17 89,153 133,50 69,43 90,52 51,139 66,130", " 127,127 62,156 72,107 87,114 59,167 68,8 100,148 ", "13,88 98,56 91,77 90,15 81,129 16,66 115,147 65,87", " 9,73 35,9 160,173 171,197 33,96 166,137 134,81 11", ",57 105,82 119,182 9,177 8,189 63,107 183,40 61,18", "4 72,47 129,124 64,141 84,12 194,152 182,179 36,10", "6 184,89 104,163 122,76 78,67 47,148 137,111 17,94", " 45,16 67,156 75,99 25,7 109,109 12,29 84,86 60,14", "3 158,196 64,48 69,18 162,62 36,95 54,159 125,120 ", "57,87 183,78 39,32 113,183 165,39 76,4 83,108 125,", "183 9,134 192,25 23,47 65,160 165,42 82,84 49,132 ", "185,168 195,113 160,11 15,13 108,61 98,23 148,158 ", "157,99 23,138 40,93 100,53 100,159 99,10 197,15 58"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    int n = 200;
    vector<string> edges = {"1", "70 111,", "51 55,6 181,131 14,107 78,102 29,133 115,191", " 69,39 150,19 63", ",", "97 61,126 74,138 135,135 120,188 72,118 1", "16,149 77,125 177,173 94,124 117,25 14,115 174,123", " 81,111 23,156 19,49 126,198 27,56 48,1", " 124,147 4,10 ", "123,88 193,13", "4 155,143 169,89 131,34 83,161 185", ",110 191,179 16,151 121,65 7,164 20,144 132,134 68", ",146 2,61 76,82 85,87 158,92 161,139 195,163 141,7", "2 185,156 154,159 12,131 123,178 159,108 76,176 19", "8,14 156,189 128,171 127,180 169,31 35,11 1,28 20,", "106 44,196 183,83 161,84 16,7 135,132 153,115 65,2", "6 43,113 125,114 110,64 95,175 28,9 154,78 19,137 ", "101,164 181,151 143,39 122,104 11,108 106,7 174,14", "1 197,140 49,4 53,44 108,20 181,193 174,15 136,138", " 5,91 162,45 21,59 193,182 104,193 5,66 144,5 57,1", "03 189,33 118,121 162,60 194,166 32,79 109,166 185", ",20 32,169 80,17 56,130 47,83 72,23 15,172 163,117", " 45,188 181,165 10,50 93,27 176,31 188,99 197,102 ", "48,80 39,95 88,96 113,148 88,42 181,41 20,37 132,1", "19 39,47 59,150 66,55 33,192 170,92 73,160 149,142", " 120,67 177,183 134,122 119,162 80,69 51,120 47,11", "6 171,49 48,14 30,197 187,95 115,91 132,9 63,184 4", "6,92 34,181 185,74 155,181 92,93 36,174 59,98 125,", "2 184,199 24,101 38,127 79,156 89,112 165,54 75,7 ", "95,80 180,41 92,68 178,63 156,77 182,47 157,42 20,", "94 8,83 28,80 100,12 190,70 67,76 96,18 130,129 19", "2,73 35,85 144,105 22,88 40,3 87,164 92,176 98,73 ", "175,57 157,9 165,185 20,145 168,73 20,194 107,157 ", "120,40 148,136 146,42 34,200 140,132 26,187 195,46", " 105,109 160,167 90,168 167,21 147,63 131,100 39,1", "33 157,87 48,115 138,22 186,59 64,8 173,119 43,89 ", "94,38 115,157 88,138 157,35 164,53 62,186 129,19 9", ",58 3,148 18,86 94,167 145,13 143,107 89,113 97,19", "0 196,128 187,30 9,119 162,154 10,199 139,81 173,1", "39 75,173 25,120 137,90 177,59 157,150 162,152 99,", "71 54,86 89,43 151,32 28,39 26,52 96,123 60,155 20", "0,153 150,158 58,36 114,62 50,94 107,16 195,185 28"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    int n = 200;
    vector<string> edges = {"186 156,39 182", ",78 192,66 170,135 116,38 93,6 61,91 164,183 13", "4,173 86,139 20,171 101,32 65,168 75", ",139 118,83 189,3 1,35 50,60 ", "11,49 91,148 169,33 64,119 177,124 30,85 24,167 82", ",146 45,130 134,49 111,48 71,109 96,103 176,179 49", ",50 184,12 163,187 156,45 92,36 180,4", "6 194,161 166,141 72,147 48,43 29", ",72 110,184 166,196 63,77 19,185 12,44 28", ",4", "1 99,14", "0 42,37 191,24 124", ",88 47,150 108,165 121,176 4,143 58,113 185,3", "7 155,30 165,183 9", "6,29 59,8 122,169 185,58 119,198 133,11", "1 158,99 59,134 1", "58,81 99,160 184,106 107,12 113,29 41,55 13,", "95 66,125 199,1", "78 173,180 94,149 10", "2,166 194,76 ", "158,133 55,79 110,163 188,162 42,14 31,4", "2 113,14 197,28 ", "126,61 190,187 21", ",25 67,121 150,200 9,1", "64 96,90 159,42 ", "185,21 17,189 160,142 149,177 10", "6,132 78,74 23,174 193,104 143,144 186,151 59,15", "1 41,17 56,197 54,164 141,179 96,131 109,70 37,153", " 18,3 181,9 93,189 35,194 135,158 164,86 115,11 8", "7,84 74,69 200,195 37,148 42,12 14,4 34,181 140,7 ", "187,127 32,16 115,51 55,82 128,102 80,126 39,13 1", "51,27 173,5 136,151 29,18 68,24 146,98 1,1 148,188", " 157,157 3,190 52,192 171,32 44,61 160,128 10,52 1", "61,162 31,34 176,62 79,64 59,57 100,116 46,122 6,3", "8 32,154 112,138 123,19 167,53 38,97 120,40 95,145", " 60,109 175,96 131,172 117,99 51,1 31,72 130,170 1", "46,90 78,115 4,18 193,159 105,166 46,10 40,59 198,", "23 84,193 190,156 101,1 42,28 93,182 38,183 62,67 ", "79,123 37,2 43,175 49,74 123,33 151,47 195,185 188", ",107 36,196 4,181 14,87 172,51 133,93 69,68 174,11", "4 2,191 138,76 131,129 178,137 155,31 185,80 154,7", "3 125,112 145,81 198,195 97,193 153,9 44,89 133,13", "1 139,20 110,110 49,101 144,86 129,20 91,89 13,93 ", "53,94 73,65 57,46 153,148 140,70 22,71 35,26 160,4", "4 127,169 181,100 15,133 151,1 113,153 147,67 76,1", "30 67,15 28,152 90,108 85,41 2,171 132,75 152,118 ", "109,46 83,54 148,160 18,199 142,105 168,184 8,148 ", "181,181 98,136 4,56 7,117 104,92 77,162 157,120 88"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    int n = 200;
    vector<string> edges = {"40 ", "156,2 46,60 58,132 2,6", "6 1", "1,89 108,81 131,103 157,183 5,95 119,53 12", ",123 198,182 98,54 42,98 65,9 156,35 13", "7,25 171,111 126,93 8,197 127", ",44 94,60 74,194 89,49 90,181 20,10 56,180 169,12", "5 45,172 1", "83,82 183,110 148,39 143,3", "8 97,161 158,", "147 36,140 73,28 153,1 62,177 55,173 ", "88,160 84,3 106,109 125,105 25,135 93,84 133,45 44", ",156 130,18 ", "84,170 142,108 185,188 83,168 70,166 ", "60,86 28,108 158,1", "63 34,109 41,185 194,29 72,167", " 44,65 144,56 109,172 166,", "24 147,157 197,133 85,158 1", "60,64 192,1", "4", " 103,56 45,", "16 124,90 194,88 77,52 186,193 164,69 100,", "101 165,32 53,11 56,50 76,34 35,106 6,55 148", ",126 1,183 196,115 92,170 57,8 54,141 117,18 14", "3,78 102,6 186,4 173,124 33,113 188,168 24,165 170", ",47 80,44 47,12 75,122 101,133 90,144 178,110 105,", "191 5,130 63,167 59,154 41,190 64,160 185,59 80,18", " 31,62 116,68 109,5 52,104 180,145 104,157 165,51 ", "129,166 196,13 179,121 172,169 61,131 159,189 31,1", "14 41,75 57,27 181,192 128,119 140,118 177,134 57,", "92 17,194 160,183 6,96 125,161 39,77 15,10 94,41 4", "4,150 124,112 38,150 151,130 117,161 18,12 14,175 ", "115,79 135,26 199,146 50,31 108,197 195,89 31,134 ", "142,171 110,155 181,174 16,102 99,20 81,63 117,70 ", "78,129 29,90 18,151 79,100 63,17 86,164 4,73 2,143", " 49,176 40,7 190,137 9,142 101,57 12,200 117,139 1", "62,122 75,74 6,196 172,136 156,184 19,138 149,155 ", "182,101 53,37 119,185 90,87 174,130 35,178 155,109", " 91,58 106,35 163,101 197,72 138,142 53,19 35,21 1", "13,96 10,99 111,141 34,52 191,127 12,83 30,154 47,", "63 34,57 195,176 156,49 161,33 87,18 39,153 145,14", "8 22,80 94,195 32,103 101,149 51,152 113,36 7,46 3", "8,94 109,198 175,68 10,47 41,71 186,41 66,72 174,1", "27 122,141 200,5 166,61 193,22 67,117 184,188 46,1", "43 160,48 30,67 118,185 161,191 60,116 107,136 163", ",159 120,58 186,95 83,71 74,199 2,128 168,53 134,1", "62 43,120 146,3 166,23 71,191 58,71 82,80 154,76 2", "7,97 113,71 106,15 13,85 31,3 196,186 172,176 34,6", "8 80,179 123,101 157,43 70,143 90,187 199,46 112,1", "21 6,58 71,46 95,134 12,30 95,42 150,107 139,91 96"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    int n = 200;
    vector<string> edges = {"32 15,4 40,199 ", "32,162", " 103,29 101,68 147,35 174,193 153,60 105,18 1", "90,15 4,134 150,66 2,97 88,198 17,128 117,85 28", ",126 40,19 112,76 75,156 84,187 46,87 98,172 38,24", " 152,138 144,56 97,140 25,137 7,7 92,22 94,192 15", "7,6 30,1 140,175 166,111 29,164 172,88 113,156 162", ",56 29,127 135,99 136,46 23,166 149,183 148,73 84,", "151 63,49 133,82 171,57 67,97 58,19 22,126 171,83 ", "61,170 196,67 143,143 70,113 56,178 29,8 76,120 11", "8,67 165,173 89,76 7,24 198,30 124,17 184,160 107,", "122 194,116 126,1 77,36 78,87 114,22 160,129 65,41", " 9,167 45,79 113,75 62,102 17,59 88,179 125,78 79,", "161 32,79 88,13 1,47 113,127 48,157 26,39 34,123 7", "1,90 170,82 4,43 129,135 12,174 183,98 195,140 173", ",9 71,107 62,31 12,62 160,194 177,69 83,168 36,193", " 102,113 42,188 145,76 60,103 44,45 99,148 108,50 ", "74,25 31,36 47,197 199,57 32,177 106,80 155,169 81", ",115 16,104 102,188 47,163 50,71 93,41 133,125 128", ",77 86,169 41,85 176,116 5,124 189,149 192,14 52,1", "41 55,112 160,41 123,153 156,140 155,103 87,81 41,", "54 177,27 132,150 68,56 47,155 25,181 85,142 100,4", "4 185,98 156,161 165,79 188,92 139,136 3,165 40,15", "8 86,106 72,70 171,139 27,80 1,62 18,64 6,159 49,1", "95 193,173 86,8 75,173 13,84 162,132 94,40 143,109", " 105,71 169,96 139,63 37,131 55,151 37,133 9,31 13", ",89 140,92 60,154 138,178 58,104 84,60 7,38 104,23", " 43,135 173,184 73,21 151,2 21,33 106,74 35,31 155", ",13 80,65 187,97 168,189 182,48 135,200 95,55 66,5", "8 168,61 120,86 51,4 5,17 24,5 32,84 198,13 155,91", " 196,152 87,106 151,168 59,11 64,176 196,101 97,14", "5 59,190 19,101 59,95 167,146 134,6 23,105 96,59 7", "9,86 127,102 103,59 78,100 154,86 140,72 53,153 17", ",121 141,191 181,180 70,145 168,52 85,96 27,185 16", "4,161 70,186 5,117 200,88 178,151 122,141 72,108 1", "46,1 173,94 76,78 101,153 24,37 21,143 115,169 159", ",162 153,1 48,123 81,93 169,118 179,3 69,12 86,171", " 4,53 121,104 73,20 11,135 31,198 98,144 175,21 13", "1,58 29,58 145,139 60,16 171,51 1,182 20,34 91,107", " 139,42 36,110 196,49 123,130 10,80 25,197 16,96 7", "5,81 49,119 91,28 14,114 153,26 130,147 163,10 142"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    int n = 200;
    vector<string> edges = {"26 144,23 174,111 8", "4,38 200,76 111,45 54,52 125,89 117,45 128,177 49,", "103 175,167 2,138 74,113 6,114 91,149 116,50", " 142,65 79,41 68,150 196,83 44,100 1", "60,16 193,143 17,194 177,", "135 136,42 58,108 102,159 8,184 152,115 4,114 99,5", " 98,148 44,172 63,121 194,144 185,181 138,87 71,17", "2 87,65 168,78 17,23 66,43 76,199 52,60 1,188 148,", "180 143,162 176,71 177,175 39,127 113,147 77,156 1", "79,64 38,95 4,80 15,200 123,25 124,165 21,145 143,", "84 99,90 30,49 18,21 122,33 41,120 157,19 124,77 1", "26,75 145,131 174,136 70,200 131,21 134,74 158,189", " 19,99 76,82 107,159 168,79 34,99 91,84 187,130 1,", "171 155,105 165,48 19,27 113,93 137,12 199,176 183", ",163 180,164 144,161 172,134 105,183 122,38 86,1 9", ",186 174,13 54,161 71,9 136,143 25,102 10,26 29,97", " 162,137 12,192 113,82 20,72 172,99 187,48 75,144 ", "85,171 10,153 125,13 171,193 140,115 35,170 67,196", " 95,44 104,154 127,157 109,169 46,144 93,108 159,1", "46 32,10 112,99 169,96 38,195 6,30 98,62 88,140 18", "8,63 49,119 187,93 101,34 108,26 101,14 114,79 159", ",7 28,187 76,37 30,126 106,102 8,173 183,84 119,57", " 100,39 77,40 98,64 186,123 129,83 57,116 190,132 ", "30,174 51,197 181,174 66,101 153,69 32,12 29,20 26", ",137 153,158 89,6 192,26 164,22 103,111 91,151 133", ",142 150,29 93,179 193,168 128,49 72,31 38,86 64,1", "43 124,94 42,155 79,56 186,36 61,118 127,32 30,75 ", "143,70 130,123 51,185 82,72 92,166 25,81 118,59 15", "9,85 52,110 30,190 184,92 87,35 7,128 171,141 37,1", "25 164,28 149,56 129,187 111,104 140,73 115,152 73", ",18 172,111 3,41 198,106 22,178 197,125 107,8 168,", "66 200,65 8,39 136,60 130,43 46,199 144,191 81,139", " 98,63 177,3 91,169 14,24 127,61 120,11 125,109 18", "2,9 77,47 40,127 6,143 189,153 199,133 127,168 155", ",160 83,182 167,2 178,133 27,125 85,199 11,166 17,", "117 36,107 26,68 33,67 30,98 198,19 143,51 186,91 ", "169,75 163,85 137,17 75,193 94,71 63,55 50,154 6,1", "12 155,172 62,88 71,143 48,48 166,10 128,176 97,17", "7 62,76 3,11 82,56 86,131 31,177 161,129 131,46 11", "4,124 166,58 156,53 136,128 34,4 55,54 79,6 191,20", " 85,15 173,91 119,107 185,51 66,186 123,18 62,46 3"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    int n = 200;
    vector<string> edges = {"43 126,74 7,169 176,182 47,18 19,67 122,48 168,30", " 67,188 167,173 160,31 ", "154,18 58,", "38 6,190 2", "00,56 106,102 125,53 7,24 150,33 159,157 ", "199,171 96,120 106,194 200,47 191,95 76", ",85 90,49 39,130 102,131 179,8 61,145 150,8", "5 14,63 66,61 134,77 58,154 1,149 80,117 145", ",115 98,150 147,160 159,132 158,60 73,98 3,15", "2 194,105 7,170 147,171 151,65 27,22 186,143 121", ",22 74,122 195,125 108,137 149,112 84,49 45,21 105", ",166 183,68 19,177 115,172 136,134 43,134 90,133 4", "7,97 143,158 112,162 11,100 184,151 113,87 2,161 5", "9,148 59,179 100,40 169,165 148,116 137,109 124,72", " 183,197 42,96 111,18 144,66 179,126 61,146 187,54", " 129,36 164,183 192,9 89,72 166,86 148,140 120,41 ", "198,88 163,32 35,110 147,62 49,75 144,138 183,100 ", "50,59 86,198 182,58 163,121 109,98 46,16 15,101 52", ",98 177,55 85,42 37,170 10,35 110,90 8,11 161,144 ", "58,28 162,7 180,166 87,150 178,184 46,66 3,174 101", ",168 184,37 130,183 2,103 31,94 47,187 57,89 116,1", "85 180,196 169,156 123,113 198,45 40,83 106,162 93", ",167 152,27 28,82 21,31 92,177 179,188 192,6 127,1", "24 12,181 192,93 26,12 44,164 191,144 68,52 29,71 ", "199,3 177,1 31,34 38,69 83,29 85,177 184,159 154,1", "11 151,138 70,73 23,178 32,192 152,123 175,46 66,7", "7 18,169 49,80 16,4 147,64 132,14 90,79 133,39 128", ",136 10,43 14,78 1,195 107,4 81,91 95,84 124,63 13", "1,199 56,119 27,193 198,51 54,128 91,2 70,19 88,81", " 150,138 87,142 78,5 31,177 50,128 169,20 189,77 1", "63,147 117,176 39,15 146,175 120,153 1,108 17,57 9", ",148 162,189 106,10 150,107 60,166 152,148 119,81 ", "178,3 100,88 75,177 100,115 63,192 2,191 79,129 15", "5,81 170,200 72,17 30,70 166,13 103,104 163,135 5,", "141 97,33 13,14 134,118 180,44 51,92 78,190 166,15", "5 141,35 136,163 18,25 38,50 63,127 114,76 62,26 1", "65,160 92,8 134,92 5,11 148,99 180,139 189,114 56,", "48 177,126 174,191 171,23 197,142 135,84 64,10 178"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    int n = 200;
    vector<string> edges = {"17 91,191 36,10 60,83 151", ",69 9,129 171,53 54,45 150,141 16", "7,200 138,77 103,169 155,157 177,160 99", ",162 131,85 52,9 40,", "57 37,80 ", "44,97 94,115 46,13 117,12 133,136 ", "130,118 31,82 79,134 162,15 26,37 169,99 191", ",108 124,32 98,146 35,56 60,174 148,88 12,197 2", "1,193 114,11", "7 65,16 170,", "46 63,163 67,5 ", "120,113 52,74 ", "90,110 154,135 101,19 127,42 190,139 10,140 5", "6,165 59,175 140,104 8,73 182,7", "5 69", ",33 50,70 47,6 45,4 129,166 85,14 33,", "164 75,107", " 188,98 25,79 119,14 113,192 64", ",50 183,128 94,149 34,14", "4 78,48 42,184 92,114 172,24", " 176,112 198,112 1", "61,179 150,13", "2 95,122 199,115", " 137,153 139,121 53,35 181,158 7", "3,165 31,86 161,64 142,101 20", "0,52 14,94 47,182 199,131 104,161 109,10", "5 94,128 29,44 39,49 114,20 84,19 171,32 133,196 1", "88,151 47,76 36,193 93,3 189,156 48,106 108,95 18,", "170 77,111 1,8 58,133 122,191 160,123 65,67 116,2 ", "109,154 2,22 175,36 63,195 73,7 82,96 50,87 132,14", "7 7,126 71,36 89,27 143,136 151,38 19,66 100,78 15", "6,116 81,92 72,25 32,172 159,139 146,43 118,59 192", ",155 145,123 23,124 106,31 168,100 184,175 63,81 6", "1,103 163,181 153,23 72,18 43,40 27,137 51,199 88,", "109 111,125 96,107 194,173 174,186 82,180 107,142 ", "197,34 11,167 68,21 157,61 164,80 185,190 87,1 86,", "30 111,187 149,119 39,159 114,119 41,176 115,55 39", ",145 68,138 134,91 187,120 16,60 28,172 10,168 144", ",88 68,189 195,177 17,51 24,39 47,110 178,150 188,", "58 20,29 50,11 165,195 3,143 173,171 158,111 72,54", " 76,62 180,148 135,127 38,92 66,150 6,194 62,71 70", ",152 126,76 121,84 5,183 128,26 13,182 171,71 152,", "74 179,124 180,28 22,68 141,196 109,145 57,102 179"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    int n = 200;
    vector<string> edges = {"69 189,187 144,113 90,97 10,29 122,76 169,2", "4 188,42 44,111 113,120 197,52 168,108", " 157", ",148 160,92 37,199 17,", "47 145,67 199,177 13,133 ", "16,182 105", ",163 114,3 19,123 133,154 170,149 129,37 ", "138,55 148,11", "5 107,59 2,130 151,196 97,12 ", "41,98 11,96 111,38 160,38 90,112 195,79 1", "16,37 193,150 30,162 2,148 59,43 148,14", "3 120,48 56,68 57,138 164,59 141,198 140,", "151 6", "8,43 59,83 63,9 88,184 125,", "179 107,101 20,23 192,158 152,141 197", ",142 165,56 77,90", " 59,111 151,138 55,1", "20 96,134 96,197 143,171 119,170 ", "165,11", "4 149,2 120,19 173,5 24,176 135,", "20 81,75 95,22 38,57 1", "43,173 6,138 38,7 167,71 196,72 184,1", " 171,43 31,78 1", "81,197 130,32 85,185 33,90 183,73 50,64 139,10", "0 21,195 156,39", " 141,13 76,116 54,151 86,180 27,21 76,189", " 29,25 81,124 93,85 163,102 28,155 137,82 7", "4,160 59,145 94,91 84,31 162,73 22,43 37,190 ", "53,18 34,38 183,15 99,43 73,80 107,119 190,63 13", "1,6 82,141 111,53 121,46 87,165 107,11 83,10 172,", "34 100,169 185,86 73,159 88,110 112,113 183,147 25", ",132 177,167 78,87 67,26 40,8 153,96 141,139 161,1", "74 186,99 115,30 102,33 62,166 132,141 43,127 1,12", "5 52,160 130,117 178,122 64,49 4,161 174,90 120,20", "0 25,60 45,157 42,126 36,181 108,137 176,68 92,86 ", "37,135 150,74 65,66 5,162 90,143 22,183 111,144 18", "0,103 8,58 72,118 182,42 63,186 127,84 166,121 48,", "129 26,27 12,107 88,172 7,40 187,51 66,156 69,14 1", "04,94 88,134 39,95 46,54 32,90 134,140 191,175 155", ",65 106,106 14,41 126,96 130,146 175,188 18,89 35,", "44 71,81 88,55 38,143 39,136 81,128 123,109 49,168", " 146,134 31,16 79,45 91,130 134,4 58,59 113,50 68,", "152 110,17 89,155 14,21 103,104 3,28 109,191 98,93", " 25,131 198,57 55,38 2,183 120,164 2,164 148,113 1", "43,70 15,35 194,61 117,192 61,194 128,36 75,153 11", "8,62 60,77 23,178 158,183 86,105 51,193 43,164 162"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test67() {
    int n = 200;
    vector<string> edges = {"15 111,21 92,187 96,194 1", "08,31 79,167 76,65 36,180 198,150 63,13 54,85 191", ",101 129,61 154,154 179", ",8 100,149 55,76", " 152,163 148,4 47,41 107,173 140,63 ", "117,18", "7 78,198 51,53 138,144 ", "32,71 181,158 13,2 ", "184,51 10", "3,152 157,191 16,33 1", "28,120 58,161 175,86 173,1", "57 156,95 21,73 180,153 123,93 10,186 14,28", " 53,32 85,90 162,94 194,156 76,139 1", "30,55 33,125 115,50 30,172 141,113 169,78 13,33", " 13,14 8,60 199,57 12,198 174,108 81,7 165,185 134", ",126 73,138 50,19 39,165 67,174 87,186 45,155 6", "5,166 61,72 24,35 172,195 38,139 21,45 173,137 9", "5,11 15,97 57,79 19,66 168,105 153,61 170,141 20", "0,13 42,147 74,64 161,98 69,159 22,87 4,143 132,", "92 62,152 149,182 82,17 90,70 189,190 9,33 152,84 ", "156,193 188,10 133,140 130,102 11,110 125,96 33,14", "8 93,122 137,83 89,5 7,131 110,3 167,152 42,36 176", ",129 35,119 29,111 23,20 101,124 105,82 34,168 37,", "164 106,135 27,26 64,75 96,189 143,181 5,130 170,1", "79 74,95 1,176 52,86 122,27 102,116 119,89 43,69 1", "95,18 196,120 12,132 145,197 146,177 83,178 68,162", " 49,8 21,30 182,117 183,200 18,37 31,127 88,34 163", ",74 1,3 75,39 70,183 17,54 96,156 55,114 72,44 118", ",104 186,59 91,99 54,1 193,38 151,184 124,123 40,5", "6 130,42 3,152 84,52 116,23 150,115 66,47 171,80 1", "31,74 186,121 147,6 112,112 94,88 142,48 187,192 1", "97,173 92,16 77,9 192,68 120,133 144,103 185,74 13", "0,96 158,45 121,62 154,49 98,151 44,145 109,136 42", ",134 2,100 166,118 135,171 190,3 48,40 159,196 71,", "106 28,62 186,81 80,77 164,76 136,43 41,128 136,18", "8 186,136 48,29 46,175 6,160 92,24 97,12 59,142 17", "7,25 51,139 140,158 42,21 122,91 60,158 33,62 121,", "188 100,169 26,46 178,104 122,67 127,179 62,170 21", ",22 25,8 122,109 113,107 20,146 126,58 155,199 114"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 67: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 67: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test68() {
    int n = 200;
    vector<string> edges = {"12 43,154 9,184 133,42 68,18 16", "8,196 178,158 169,", "105 66,140 21,131 18", "2,30 70,185 14,59 97,20", " 36,150 121,65 12", "6,122 151,37", " 160,116 80,7 75,73 1", "55,194", " 71,9 80,177 ", "152,188 191,80 112,195 170,144 179,10 199,", "111 147,4 193,2 45,53 72,", "98 170,161 62,20 112,90 29,94 2,", "25 158,199 145,82 52,121 156,22 200,165 159,4", "9 13,114 23,120 42,190 61,160 78,116 ", "198,56 5", "1,177 6,24 191,110", " 96,34 32,20 187,", "172 57,142 10", "9,3 171,125 30,99 140,41 108,14 110", ",35 176,170", " 56,24 20,163 131,78 ", "12,112 154,104 11,191 154,93 62,167 100,79 89,", "119 90,173 10,71 153,192 132,162 22,1", "27 104,83 177,75 145", ",43 88,62 155,179 19,117 64,171 91,169 25,39 10", "3,102 141,134 153,60 74,145 125,180 139,47 144,106", " 172,86 99,40 34,92 80,25 81,87 177,50 167,86 115,", "63 162,8 56,175 93,28 155,85 196,15 189,123 105,18", "9 111,132 195,154 36,107 143,74 95,200 58,148 69,1", "82 35,130 181,187 164,96 123,16 59,33 93,89 120,64", " 18,103 146,1 52,44 37,191 112,198 17,174 31,26 12", "4,113 128,112 188,58 15,80 54,176 26,52 62,19 194,", "152 154,136 181,168 63,195 166,109 106,181 161,161", " 183,193 79,57 122,17 188,36 24,136 82,21 99,88 7,", "62 181,164 116,159 5,9 116,54 9,118 65,151 16,148 ", "115,101 76,46 190,13 48,126 3,147 60,186 81,149 40", ",138 87,11 102,17 20,191 83,87 152,23 113,97 50,12", "8 119,159 197,48 118,72 46,166 192,115 129,187 87,", "38 56,77 133,87 164,68 135,32 165,91 49,135 127,81", " 174,155 184,27 194,29 157,156 169,153 137,84 39,7", "6 41,95 67,143 8,6 116,55 150,5 4,52 130,75 44,157", " 117,51 98,45 53,142 49,92 36,129 86,187 92,67 114", ",100 142,54 112,146 150,6 54,183 62,197 149,112 16", "4,108 163,112 138,139 185,9 138,124 85,61 180,99 1", "70,31 144,141 5,133 1,70 173,66 101,137 146,178 94"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 68: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 68: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test69() {
    int n = 200;
    vector<string> edges = {"152 199,146 116,73 157,14", "3 199,199 92,97 185,96 188,119 188,16 2", ",22 5,6 139,172 99,8", "6 22,107 118,28 84,140 37,", "42 78,56 21,59 125,182 86,143 27,20 45,96 86,77", " 90,50 138,193 65,95 19,36 110,1", "05 74,88 73,5 51,95 ", "109,170 143,144 42,168 12,69 109,148 39,136 177,", "102 ", "43,81 193,164 190,149 67,53 46,151", " 162,172 171,153 160,60 111,118 156,4 193,2", "6 89,159 7,74 197,35 66,80 194,94 30,137 154,15", "5 102,67 65,49 79,124 56,59 153,70 27,27 32,39 163", ",117 119,121 110,129 108,57 5,37 9,17 59,196 144,", "7 120,83 186,46 55,160 121,181 7,157 60,133 54,", "75 168,114 180,44 112,116 134,92 188,82 44,32 51,9", "0 103,13 76,200 176,20 152,31 196,40 20,12 165,189", " 94,34 134,126 140,125 195,27 45,89 75,85 29,145 1", "7,22 170,175 104,34 145,98 200,116 59,182 72,158 2", "8,51 70,152 188,10 193,169 109,134 147,76 88,21 47", ",99 113,111 189,19 84,86 143,194 81,62 61,84 167,1", "03 87,197 31,46 193,174 182,32 40,63 167,122 134,1", "71 124,92 40,25 33,184 98,127 169,156 1,45 22,133 ", "14,80 46,15 180,20 27,113 3,43 184,18 187,104 38,1", "95 116,63 101,91 41,52 62,122 153,131 127,115 123,", "72 174,65 80,66 136,188 72,125 183,163 179,36 122,", "68 133,108 128,44 129,48 6,198 24,139 48,176 173,7", "2 199,190 126,1 115,40 117,187 198,116 183,166 161", ",78 130,154 67,178 67,47 14,142 44,139 84,65 178,6", "4 155,130 97,41 148,152 72,45 5,44 16,33 50,110 12", "5,106 64,123 18,5 72,108 142,29 106,181 15,17 83,5", "5 135,93 172,120 129,153 147,32 119,9 85,86 20,192", " 159,180 159,37 8,79 112,30 150,142 191,186 146,82", " 79,147 36,38 107,179 105,2 192,23 82,112 82,61 71", ",173 9,149 135,8 77,87 164,2 114,160 110,96 72,51 ", "143,166 84,128 23,188 51,185 141,138 175,191 79,15", "4 149,141 151,191 49,14 171,135 10,182 199,150 26,", "7 192,24 25,132 122,10 46,62 56,10 65,71 52,5 40,1", "45 183,177 100,135 137,128 142,54 68,169 131,81 14", "9,183 36,67 53,162 35,110 146,165 13,19 11,112 181", ",3 93,119 143,110 145,159 142,193 137,100 91,58 53"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 69: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 69: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test70() {
    int n = 200;
    vector<string> edges = {"8 35,", "2 8,152 164,154 121,66 56,176 54,136 72,181 19", "7,76 51,126 137,124 199,48 80,170 193,114 154,39 1", "32,96 195,195 159,161 143,192 34,142 55,90 11,137 ", "193,177 37,166 10,190 163,96 200,156 153,95 16,83 ", "149,165 115,61 28,85 129,98 154,194 99,47 39,27 1", "08,110 68,51 98,123 187,100 78,135 195,111 126,13", "8 108,113 114,149 40,45 131,91 46,93 58,134 192,97", " 44,8 89,148 38,180 43,106 17,159 104,92 162,145 1", "47,195 20,63 150,56 84,120 66,157 86,17 80,164 20,", "37 4,70 21,174 184,118 62,13 188,33 80,126 141,133", " 176,68 135,99 109,73 196,151 57,46 96,126 94,3 31", ",15 110,117 139,139 118,81 30,141 193,52 83,143 17", "9,87 53,26 148,182 146,150 69,186 23,55 7,36 47,8 ", "141,173 25,81 152,108 8,91 200,128 144,32 170,183 ", "67,30 91,6 128,129 112,111 42,167 88,28 37,49 134,", "163 101,147 45,140 108,69 24,152 15,115 77,1 134,1", "2 184,116 103,54 91,172 44,41 50,58 116,185 105,10", " 3,162 6,102 117,24 63,180 74,35 108,14 73,135 46,", "29 18,65 142,179 79,9 134,122 89,131 125,140 8,35 ", "27,101 180,121 189,57 191,189 124,187 59,169 134,7", " 123,42 140,89 94,30 90,94 2,105 95,182 93,28 180,", "200 54,35 137,2 137,176 96,22 97,130 96,50 132,134", " 198,138 35,175 73,132 134,197 33,91 135,169 41,19", "8 39,86 99,38 52,80 197,4 153,135 130,132 41,67 17", "3,144 186,23 119,153 12,44 197,71 41,141 170,178 2", "1,137 111,195 30,104 90,39 36,176 30,89 140,89 35,", "16 158,103 93,11 164,49 47,64 88,62 107,193 138,43", " 61,36 1,15 195,138 122,140 27,77 28,58 86,160 14,", "11 15,127 136,34 49,31 171,72 151,176 152,98 26,50", " 49,32 94,78 113,126 140,188 75,53 167,75 127,119 ", "161,159 110,164 46,110 152,110 200,191 185,171 85,", "184 70,18 100,107 145,125 183,158 13,60 64,193 126", ",46 159,24 31,21 155,111 8,82 73,59 102,74 165,109", " 157,84 76,196 97,5 92,200 11,108 42,86 167,27 32,", "79 5,155 190,168 86,20 81,130 30,40 120,112 166,8 ", "170,197 160,19 53,39 71,25 65,104 130,27 89,199 29"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 70: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 70: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test71() {
    int n = 200;
    vector<string> edges = {"95 7,69 53,185", " 20,20 54,140 170,194 136,155 76,172 80", ",187", " 180,57 77,101 164,60 50,167 4", "0,14 4,138 171,21 137,137 155,38 35,116 132,180 11", "3,171 72,12 60,91 38,109 63,120 163,75 22,114 15,6", "8 158,37 106,115 66,187 154,156 192,119 53,120 191", ",196 95,72 21,134 14,44 167,122 31,63 38,25 103,8 ", "30,46 82,50 66,41 70,188 154,78 86,32 146,159 6,7 ", "28,48 197,113 19,56 91,59 117,99 190,134 171,79 12", "5,76 21,96 120,161 189,74 198,163 127,96 85,67 132", ",21 10,71 151,119 131,148 56,162 167,134 150,85 14", "2,15 148,177 9,76 138,22 42,135 65,150 176,191 174", ",118 94,146 129,10 97,142 114,70 193,199 177,4 76,", "198 127,94 79,171 137,24 11,155 138,84 168,184 158", ",182 63,143 48,71 33,137 1,174 8,53 131,200 14,194", " 87,88 77,91 27,176 14,9 166,151 116,78 194,89 161", ",53 169,127 15,158 160,102 134,72 76,66 103,18 181", ",192 28,96 8,45 97,30 63,81 68,171 170,66 124,181 ", "99,121 147,168 105,116 64,190 43,47 200,108 66,141", " 178,32 179,14 152,51 169,17 156,170 1,161 7,154 9", "8,75 74,3 108,13 110,144 51,166 187,184 68,73 55,1", "05 77,191 63,67 136,93 133,25 175,23 60,124 108,13", "6 195,63 75,72 152,28 95,144 37,151 67,101 29,193 ", "58,40 157,103 12,29 144,95 186,173 126,135 179,198", " 75,36 196,100 32,16 59,130 83,106 59,175 60,10 17", "1,174 56,39 174,43 24,138 45,86 71,26 116,117 37,5", "9 37,37 101,33 133,152 170,47 61,129 49,149 141,49", " 146,107 112,87 116,76 45,111 188,97 4,169 117,14 ", "140,31 139,82 44,13 80,189 95,61 200,127 63,39 109", ",50 25,33 78,170 176,51 117,87 93,147 18,140 102,4", " 155,64 133,74 56,179 100,30 74,86 33,26 87,12 124", ",133 136,178 111,104 121,164 59,131 169,150 72,45 ", "150,108 175,152 61,195 116,93 136,83 183,11 41,56 ", "198,151 78,5 89,90 92,153 156,183 118,35 39,132 33", ",136 26,125 130,37 164,164 16,91 30,65 172,157 90,", "52 2,160 5,29 173,64 86,144 119,74 96,123 168,92 1", "62,186 34,42 91,126 53,4 170,7 153,112 77,38 39,13", "2 87,62 31,2 77,60 3,165 101,33 93,200 138,124 50,", "58 159,80 135,27 120,47 150,59 29,6 104,8 120,176 ", "47,145 25,133 71,54 139,72 61,34 184,197 46,169 16", "4,158 55,98 149,15 96,1 47,132 133,10 1,44 143,28 ", "184,128 77,17 95,19 199,55 89,71 195,183 99,97 140"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 71: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 71: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test72() {
    int n = 200;
    vector<string> edges = {"67 180,89 ", "1,43 109,50 68,131 162,110 142,111 42,114 51,", "71 197,55 175,143 68,26 28,53 85,31 62,77 41,58 ", "117,93 165,191 121,194 25,8 39,", "101 154,167 27,172 133,41 133", ",107 167,170 ", "91,158 62,177 199,78 174,185 187,57 188,179 ", "2,176 19,93 122,129 11", "6,130 183,73 23,174 67,97 120,159 97,95 19,42 167,", "68 104,54 41,18 105", ",164 136,19 55,180 28,66 34,38 164,145", " 88,133 77", ",52 132,1", "55 135,199 82,109 93,27 18,", "152 192,88 1", "66,61 138,102 73,1", "56 6,135 59,", "60 85,1", "17 5,134 10,51 175,182 40,11", "9 173,113", " 148,147 104,53 109,17 3", "0,160 11,122 16,115 106,193 100,161 5,44 158,1", "09 99,171 86,103 96,146 75,65 19,29 127,64 139,", "180 135,189 169,72 111,49 58,83 190,144 194,43 129", ",153 62,181 4,16 157,84 98,188 62,80 186,180 26,", "183 48,138 96,154 134,137 198,90 196,10 36,152 ", "92,190 73,10 195,46 108,138 4,9 98,90 119,58 103,1", "6 165,39 46,134 195,155 78,45 128,137 45,115 191,9", "3 53,167 195,53 60,23 102,59 180,154 167,185 152,1", "29 16,184 3,40 160,25 160,191 34,168 185,4 49,148 ", "104,160 90,33 54,28 78,96 49,122 43,142 62,34 114,", "129 109,195 111,157 129,56 113,126 165,173 69,4 61", ",118 89,151 34,195 107,60 99,99 122,47 152,40 83,1", "40 53,187 15,92 163,159 145,84 9,7 141,116 43,24 9", "6,136 45,127 47,81 78,180 155,150 4,76 177,86 112,", "63 61,166 146,122 140,127 15,119 190,47 92,149 5,1", "11 134,60 129,35 121,186 144,10 27,106 121,165 116", ",2 149,16 126,5 179,135 67,192 187,179 58,7 154,16", "9 71,23 182,87 184,36 195,198 17,185 29,79 143,98 ", "47,196 23,125 56,108 130,200 106,14 159,167 111,11", "2 124,82 3,34 115,32 38,133 79,121 151,120 156,132", " 44,21 162,59 28,70 16,48 189,98 29,163 127,12 78,", "124 137,92 168,100 50,190 170,138 149,128 118,139 ", "87,22 4,94 195,75 145,99 43,162 80,30 123,197 8,10", "5 7,142 178,107 74,175 191,85 165,82 20,134 101,1 ", "32,6 14,37 200,91 131,101 72,13 110,69 40,37 106,7", "4 101,67 155,134 94,141 107,51 151,15 84,70 109,3 ", "64,49 150,73 119,20 76,11 90,78 180,121 95,123 171"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 72: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 72: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test73() {
    int n = 200;
    vector<string> edges = {"164", " 17,175 152", ",16 135,95 107,18 122,149 21,116 6,159 7", "9,1 76,168 146,167 34,196 55,", "10 103,193", " 46,147 152,174 185,58 11,3", "6 104,119 40,122 15,36 42,97 133,30 98", ",104 177,162 181,197", " 146,118 59,48 117,23 138,77 65,1", "55 172,181 116,146 138,140 68,91", " 186,114 55,148 13,178 163,162 6", ",36 159,70 198,21 127", ",24 92,10", "0 38,164 107,176 69,85 150,64 111,17 95,198", " 164,108 170,132 44,102 142,45 150,45 51,20 195", ",121 97,6 134,54 176", ",179 41,180 50,161 61,127 1", "19,71 110,77 17,31 124,32 93,41 91,150 139,9", "8 29,", "166 37,36 45,24 117,136 131,1", "65 127,90 161,105 23,22 74,18 130,33 123,11 181,65", " 198,200 5,98 21,42 93,", "126 46,88 8,149 30,134 174,47 183,78 35,7", "5 167,168 49,93 159,189 101,18 155,26 148,", "28 182,37 69,50 134,169 94,136 151,117 5,94 31,51 ", "93,85 79,72 64,6 181,142 189,13 99,25 121,15 194,6", "1 140,87 141,192 169,84 157,122 55,85 159,50 16,50", " 60,104 51,92 39,112 50,78 25,44 19,183 132,7 12,5", "7 118,83 107,165 40,78 97,180 185,184 5,183 38,27 ", "10,53 14,110 89,138 168,163 77,19 58,163 83,103 75", ",106 25,188 184,62 122,76 37,113 33,82 71,141 7,11", "6 135,74 18,157 53,173 153,186 166,81 28,190 157,1", "32 58,146 49,52 131,185 47,11 50,156 109,59 8,160 ", "192,195 22,43 191,37 190,98 81,120 179,38 162,199 ", "1,52 5,95 178,34 27,174 38,96 67,170 87,138 154,10", "9 125,137 43,89 115,70 95,167 57,163 65,12 160,29 ", "182,68 187,9 191,130 22,107 77,80 18,107 128,46 25", ",35 97,159 51,99 56,171 117,177 36,172 143,46 153,", "8 57,145 121,133 46,79 32,197 105,32 85,194 195,56", " 90,166 1,101 72,124 108,187 156,58 174,182 30,4 1", "04,46 121,111 63,125 26,115 9,93 177,78 193,21 165", ",127 81,63 96,83 65,154 168,67 102,73 1,129 14,139", " 4,39 24,55 20,17 128,38 60,158 105,69 120,14 54,1", "43 122,152 5,66 153,135 162,9 82,195 80,86 81,144 ", "5,60 132,181 183,123 137,40 29,153 193,69 186,50 5", "8,177 139,182 127,128 95,2 191,191 113,49 197,88 3"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 73: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 73: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test74() {
    int n = 200;
    vector<string> edges = {"44 28,60 5,75 60,28 142,74 131,47 12", "7,199 177,45 78,12 7,168 156,34 107,37 43,138 10", "8,119 99,65 30,29 81,107 111,163 147,52 ", "36,129 110,31 3,163 167,131 1", "52,24 116,31 193,71 16,26 126,56 151,128 95,20", "0 145,76 114,8 109,138 195,7 79,2 61,", "127 187,43 166,198 170,192 132,196 39,69 54,", "84 80,30 33,164 127,181 63,152 193,16 105,136 10", "3,11 154,126 180,183 111,173 73,158 76,27 6", "5,122 98,79 155,8 21,154 25,1 183,6 68,106 107,5", " 125,133 86,20 145,14 102,179 133,15 175,4 65,14", "6 81,93 100,26 148,79 56,46 59,129 15,119 198,4 ", "81,30 146,120 44,114 71,198 14,41 159,3 199,134 91", ",21 99,82 97,158 105,110 132,10 40,21 170,21 198,2", "3 124,140 103,156 104,162 196,73 27,190 123,89 48,", "188 75,86 191,17 74,185 16,70 62,174 152,140 65,92", " 18,110 192,185 37,91 161,139 52,153 198,131 31,17", "6 137,52 129,166 16,22 91,194 174,66 37,121 169,13", "1 174,186 64,76 105,42 162,79 96,144 65,51 35,103 ", "81,177 45,151 195,36 106,115 181,160 113,110 183,3", "7 76,175 129,73 140,167 121,34 175,92 85,105 43,15", "6 200,175 106,77 92,183 107,32 10,18 142,18 85,91 ", "175,16 37,23 52,149 179,155 7,48 163,33 140,94 61,", "145 58,157 21,132 139,52 15,111 139,124 110,187 17", "2,173 136,19 123,113 85,134 36,50 29,113 18,40 32,", "37 166,96 94,67 194,98 12,15 134,50 146,108 79,81 ", "173,80 83,7 108,191 70,112 135,145 84,39 11,172 54", ",94 108,155 108,4 144,96 141,161 22,28 160,150 64,", "83 156,130 12,170 99,195 122,170 157,141 2,116 26,", "169 89,95 42,78 67,55 120,90 64,32 90,14 8,124 36,", "97 18,143 140,17 45,57 6,38 13,148 101,180 184,200", " 20,184 24,97 77,142 92,134 129,107 23,59 64,182 1", "35,88 164,43 185,62 93,106 22,85 55,64 35,195 141,", "124 139,109 119,102 21,58 168,52 110,174 177,13 12", "3,171 54,65 50,2 195,182 163,89 163,2 138,135 72,7", "8 74,99 14,165 87,73 103,143 65,9 123,12 108,140 4", ",107 49,135 48,63 128,175 183,140 173,157 153,167 ", "72,161 134,3 74,151 122,8 157,186 53,99 109,61 151", ",49 1,147 112,117 123,132 23,124 175,137 35,197 17", "8,72 169,81 33,25 197,76 166,193 17,12 96,104 20,1", "42 82,178 115,139 15,27 146,22 34,118 190,177 78,8", "7 41,68 9,125 149,189 19,85 28,159 188,65 81,155 2", ",136 73,71 66,132 111,195 130,100 165,8 119,99 198"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 74: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 74: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test75() {
    int n = 200;
    vector<string> edges = {"40 86,97", " 197,80 183,12", "8 131,166 188,179 106,74 108,124 183,178 45,61 ", "120,26 58,109 60,85", " 129,164 3,45 114,16 28,116 149,116 14,", "131 192,82 197,146 124,198 183,19", "4 ", "34,150 140,140 ", "187,120 2,24 7", "6,91 49,4 164,30 54,18 12,57 110,41 63,1 163,14", "1 87,17 5,106 121,21 196,69 109,89 193,157", " 8,117 24,13 139,46 182,55 16,48 186,1", "45", " 108,92 17,35 126,114 103,125 174", ",86 166,19 152,87 108,77 174,49 155,", "142 12,10", "5 161,154 99,1", "56 75,64 21,151 50,68 134,72 53,190 178,162 181,3", "7 5,148 159,123 70,159 16,36 29,44 137,8 ", "64,184", " 2", "0,160 184,65 173,107 63,171 80,71 42,78 10", "0,170 98,27 113,197 183,75 67,169", " 105,5 124,144 ", "80,90 190,170 44", ",16", "8 21,12 74,34 189,24 105,96 5,173 10,155 22,13", "8 23,187 138,165 156,127 66,188 101,152 62,62 72", ",137 170,130 95,101 4", "6,6 17,199 91,180 168,115 31,54 9,122 ", "20,147 71,189 36,32 93,153 149,52 32,192 43,132 3", "5,29 179,58 124,129 185,163 28,43 4,51 19", "4,176 197,38 112,66 74,70 105,11 19,119 151,139 ", "162,39 27,196 73,63 25,22 38,9 199,56 127,31 37,11", "1 82,88 5,42 90,175 6,133 145,79 108,60 68,126 52,", "95 33,53 147,200 13,113 154,2 58,108 125,167 186,1", "72 28,3 118,110 59,195 37,98 24,177 16,33 1,118 85", ",100 143,136 191,94 28,181 165,20 28,135 89,112 15", "0,102 26,185 40,186 183,182 11,25 108,191 39,15 11", "9,10 57,84 141,93 200,104 175,99 158,121 69,161 73", ",7 18,83 146,23 136,193 63,50 30,32 29,149 1,67 13", "2,59 15,158 65,47 157,100 73,81 105,103 128,134 51"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 75: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 75: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test76() {
    int n = 200;
    vector<string> edges = {"170 130,150 17", ",147 44,19 194,10 197,1", "2 67,109 71,40 1", "99,29 152,44 100,164 167,133 22,10", "4 183,17 55,26 8,166 148,54 ", "87,72 29,56 123,95 63,57 182,1", "03 44,91 26,122 86,", "192 180,59 135,75 111,186 110,162 124,143 162,4 6", "1,21 169,154 116,171 25,130 199,103 195,107", " 70,115 126,23 199,147 31,182 103,179 131,200 77,1", " 101,71 146,180 63,194 42,31 200,59 181,45 99,177 ", "125,84 193,20 82,112 62,25 19,117 121,189 54,96 2", "00,73 40,139 157,106 50,74 2,47 63,33 101,148 112,", "44 188,16 13,61 1,79 93,80 35,157 52,36 193,137 53", ",117 57,21 138,11 129,196 161,100 95,85 165,166 1", "2,5 6,48 192,31 182,193 152,124 64,158 64,27 65,80", " 115,199 29,43 166,181 22,99 54,46 159,101 132,76 ", "85,151 56,87 192,128 192,132 153,26 22,69 33,88 79", ",93 90,181 127,173 15,136 104,60 102,20 3,160 171,", "169 12,6 190,32 199,66 113,44 87,64 167,161 125,18", " 30,7 48,119 30,55 66,42 35,35 179,77 63,178 43,92", " 30,144 98,90 137,141 18,155 160,8 91,145 78,60 18", "1,168 46,97 14,58 140,63 41,142 172,7 63,28 121,15", "6 154,183 88,116 156,165 83,159 191,126 139,53 5,5", "4 147,34 54,118 124,110 22,30 125,134 105,96 28,45", " 63,105 16,114 125,89 184,189 192,63 34,62 178,180", " 34,142 127,67 49,182 95,123 198,195 28,87 147,190", " 39,87 189,51 30,55 150,98 125,113 97,86 3,1 4,184", " 78,175 106,44 182,2 199,131 58,174 186,156 8,153 ", "22,94 152,121 189,198 173,52 76,111 144,64 149,83 ", "175,63 103,50 107,138 66,37 98,108 101,187 138,81 ", "38,129 84,163 108,146 60,78 72,7 31,63 28,13 151,1", "46 109,149 191,39 134,176 199,9 133,49 185,41 44,1", "62 38,65 149,22 86,120 18,195 45,70 80,197 24,68 7", "2,24 155,188 31,14 187,140 10,195 99,185 21,15 136"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 76: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 76: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test77() {
    int n = 200;
    vector<string> edges = {"68 163,", "69 90,52 20,144 192,112 24,11", "3 34,24 60,26 122,1 70,146 121,154 46,48 12,77 3", "8,132 103,157 83,187 107,126 13,176 181,", "79 9,66 47,86 161,20 138,27 ", "59,9", "4 193,3 16", "0,127 196,95 118,6 31,141 105,172 51,162 ", "126,196 4,71 58,117 104,37 100,99 33,173 178,1", "64 137,", "148 118,6 55,10 28,123 43", ",102 167,44 134,6 181,34 123,181 173,1", "87 112,163 1", "33,52 65,119 76,125 94,156 23,30 178,61 185,160 ", "199,60 107,180 102,35 149,8 76,190 104,165 164,92 ", "187,177 101,122 21,47 71,6 61,70 112,115 41,36 62,", "109 147,107 173,161 77,114 79,170 96,195 101,5 90,", "194 131,171 86,110 172,111 177,172 184,1 179,84 14", "4,49 97,136 74,192 110,39 91,75 157,120 112,153 13", "3,166 73,169 16,80 13,106 89,186 174,78 65,89 53,1", "7 75,112 97,144 110,197 69,27 49,41 118,184 193,13", "0 39,14 145,61 181,116 148,97 61,45 187,18 108,126", " 158,63 115,7 48,131 11,174 35,31 28,172 13,53 198", ",136 8,198 44,57 168,128 42,83 154,112 61,172 158,", "73 150,185 1,105 156,64 159,118 76,23 19,103 126,2", "9 37,183 116,12 188,189 64,65 140,182 54,158 80,28", " 61,188 14,80 132,15 167,31 59,178 45,145 130,55 1", "85,199 68,132 109,85 84,70 55,33 43,66 40,21 175,4", "5 120,87 50,176 6,42 47,81 190,72 152,193 103,129 ", "166,133 26,142 88,108 3,191 7,25 106,84 125,51 158", ",59 187,32 120,116 22,139 177,96 169,78 200,30 70,", "179 10,46 146,192 109,91 25,138 52,4 155,88 186,93", " 113,101 11,143 87,56 76,13 84,137 127,181 107,110", " 125,72 78,40 165,92 45,100 17,167 11,50 18,175 15", "3,107 70,16 128,56 168,147 85,104 90,123 124,19 17", "0,134 114,38 118,54 161,163 143,140 159,187 31,13 ", "36,2 5,82 63,73 29,97 179,67 129,55 97,181 120,43 ", "159,150 142,184 162,149 150,124 93,176 70,58 141,9", "0 177,31 181,135 104,22 183,9 191,10 30,36 80,151 ", "86,158 132,98 65,62 172,103 36,10 27,155 66,121 67"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 77: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 77: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test78() {
    int n = 200;
    vector<string> edges = {"6 47,156 102,15 145,181 109,157 77", ",188 179,35 31,2 193,193 38,179 146,51 ", "106,70 2,91 124,106 133,154 82,191 61,144 53,197 ", "181,125 49,1", "26 62,122 43,150 26,89 1", "96,189 187,22 163,141 93,135 18,", "161 52,156 141,107 36,53 147,20 10", "8,190 166,30 133,83 112,21 87,11", "1 144,127 30,170 133,131 25,27 33,80 163,195 8", "3,186 170,153 40,37 ", "56,2 1", "61,23 4,162 53,130 1", "93,17", "3 29,103 153,147 111,1", "71 51,178 37,87 25,71 ", "115,131 58,94 144,148 86,69 194,105 107", ",159 173,3 8,58 13,8 18,16 99,147 40,102 ", "93,61 16,144 32,140 114,164 132,25 111,129 109,1", "13 130,145 160,4", "5 135,99 159,42 7", ",13 40,154 37,46 128", ",112 150,123 139,110 56,7", "4 128,104 1,94 131,13 153,77", " 177,1", "18 19,112 192,121 76,79 68,96 141,109 46,160 86", ",67 85,14 21,177 100,175 171,167 126,26 104,17 14", "6,9 184,33 80,36 168,93 183,92 189,117 138,12 14", "6,165 115,31 105,6 34", ",1 78,49 198,176 117,194 16,29 69,16 ", "159,134 156,136 152,7 167,169 170,10 41,137 156,18", "3 134,24 9,95 117,62 24,172 47,65 146,66 55,184 5", "9,108 175,155 140,199 90,50 199,160 47,111 94,10 4", ",124 27,119 4,87 94,73 84,59 192,173 68,38 91,56 1", "70,158 47,97 66,187 60,143 116,11 148,76 179,166 4", "8,29 68,200 67,123 173,52 174,183 77,93 109,28 199", ",98 141,64 34,89 139,40 103,168 122,60 68,180 71,1", "39 79,22 50,182 133,75 3,81 196,72 155,185 148,28 ", "151,61 189,85 73,120 85,142 180,163 5,5 113,143 17", ",173 61,88 127,54 141,164 97,79 16,81 139,84 11,13", " 87,196 173,116 19,21 13,103 14,78 195,194 99,192 ", "42,152 190,44 77,121 57,99 61,128 183,25 162,174 7", "0,48 125,149 89,115 4,159 89,153 21,188 63,198 35,", "61 194,68 89,101 182,39 76,55 71,90 22,16 69,43 72", ",19 143,138 137,18 71,32 131,100 95,114 136,44 128"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 78: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 78: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test79() {
    int n = 200;
    vector<string> edges = {"200 32,129 46,23 109,156 51,1", "97 73,182 96,80 20,60 143,160 1,51 1", "67,8 64,3 196,176 94,122 12", "6,92 71,96 53,128 29,39 ", "102,149 135,181 26,150 142,126 90,7", "3 152,148 ", "109,136 78,84 149,50 13,64 12,198 19", "4,185 138,29 187,173 168,53 38,4", "1 153,151 20,110 132,193 155,101 106,117 74", ",87 117,179 118,58 159,197 195", ",81 129,90 193,83 59,175 132,93 ", "79,157 135,155 96,90 97,71 67,153 191,27 113,23 12", "5,132 123,192 188,115 39,2 91,118 137,141 10,3 118", ",144 101,135 127,199 68,38 182,197 14,126 155,13 1", "72,123 131,131 82,36 142,10 25,113 103,35 88,188 1", "44,45 149,112 110,18 55,53 130,115 195,53 166,84 1", "35,75 24,44 164,128 167,151 178,140 21,63 151,166 ", "130,100 97,57 184,130 49,64 29,70 16,166 122,21 17", "3,89 110,119 198,164 55,199 31,73 63,196 180,34 18", "1,194 160,5 182,22 136,23 170,18 114,178 175,111 1", "78,101 84,61 66,78 85,43 84,59 7,170 133,48 35,4 3", "8,163 72,178 89,97 49,198 55,157 65,105 165,176 36", ",135 188,109 3,111 99,52 163,172 158,102 111,15 11", "6,169 98,104 11,14 151,69 104,38 120,145 141,88 87", ",177 22,49 122,132 80,183 95,188 47,138 139,74 200", ",50 133,57 143,139 154,180 56,6 140,84 188,195 14,", "184 34,116 174,68 83,82 80,12 33,143 105,54 162,37", " 107,77 145,55 44,165 134,190 161,193 166,32 92,79", " 135,110 147,139 21,106 93,121 69,72 81,127 157,7 ", "68,11 9,20 197,82 102,19 4,23 180,30 146,155 49,15", "5 53,174 185,108 118,62 27,47 127,26 28,66 41,16 6", "0,107 42,85 199,162 37,94 23,31 62,20 99,120 182,9", "8 77,188 45,189 121,25 54,45 171,142 148,112 63,99", " 112,147 115,79 45,103 190,9 48,40 186,39 132,47 4", "3,133 179,1 119,182 166,95 128,187 186,168 124,152", " 39,133 3,4 193,182 19,67 76,159 2,100 130,84 45,9", "9 89,120 97,28 52,20 14,65 17,14 110,191 86,137 36", ",86 15,47 106,118 133,33 8,131 151,122 38,24 169,8", "0 131,146 58,56 50,91 189,46 57,161 177,17 144,4 1", "26,130 90,132 151,134 70,158 94,76 30,171 47,124 6", ",171 93,125 170,154 61,38 155,171 192,127 43,42 75"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 79: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 79: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test80() {
    int n = 200;
    vector<string> edges = {"98 90,35 47,122 147,76 3", "6,182 138,118 39,40 177,50 7,8 169,", "13 107,21 1", "50,14 115,20 101,11 64,198 138,96 125,73 21,7 3,", "148 91,156 68,147 97,90 84,9 90,141 69,125 11,13 1", "85,165 103,119 2,187 158,11 16,16 44,197 53,194 5,", "96 126,107 36,180 7,36 13,120 136,68 92,84 30,128 ", "80,154 128,51 34,58 114,15 89,179 51,62 47,120 85,", "79 138,147 165,69 152,138 56,23 85,78 77,189 144,8", "5 112,190 191,52 56,196 37,129 108,174 164,106 198", ",46 133,51 68,42 61,101 162,40 72,117 88,156 34,96", " 76,199 168,12 82,193 88,151 170,83 163,129 85,157", " 190,87 12,199 32,88 126,90 28,125 13,171 141,139 ", "58,179 195,195 29,74 104,68 40,184 31,37 156,86 97", ",10 155,38 196,56 74,178 198,75 176,41 75,17 173,1", "11 118,156 92,103 134,32 102,99 122,35 147,26 153,", "80 135,1 54,4 130,64 13,91 108,48 98,167 11,76 117", ",6 190,1 195,126 149,140 112,11 185,58 47,181 134,", "60 43,126 76,27 186,36 149,115 65,22 93,95 186,32 ", "182,169 63,160 84,35 100,55 56,37 92,25 74,89 151,", "34 54,54 72,188 138,92 179,9 160,77 113,38 177,61 ", "10,156 196,33 188,84 163,130 74,53 193,107 149,103", " 122,28 163,29 51,176 18,30 28,163 164,57 8,54 156", ",98 9,86 58,93 159,121 33,24 171,40 38,112 129,163", " 48,65 14,39 80,173 3,132 78,18 172,127 140,102 12", "1,58 35,67 180,104 168,100 99,36 16,34 1,168 188,9", "9 62,38 195,188 182,196 34,40 196,94 3,45 100,134 ", "86,122 100,149 13,166 190,105 200,90 174,134 184,1", "49 96,153 24,164 9,72 156,128 22,44 64,122 181,47 ", "97,182 74,113 46,124 97,48 9,66 111,162 132,144 18", "0,71 86,145 66,170 116,164 160,114 103,146 173,51 ", "38,131 79,133 59,56 32,147 139,142 6,49 148,31 71,", "139 99,116 60,91 49,48 110,117 96,107 125,159 154,", "109 42,123 191,45 99,102 106,5 105,186 173,44 117,", "71 181,30 9,158 109,135 145,81 142,97 100,161 142,", "200 41,192 191,4 52,108 65,175 122,70 94,183 55,2 ", "57,181 45,172 119,97 71,63 194,110 98,12 142,152 1", "87,16 193,143 184,53 44,155 26,59 15,160 48,177 34", ",23 19,149 197,185 117,62 134,43 20,150 142,137 27"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 80: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 80: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test81() {
    int n = 200;
    vector<string> edges = {"13 146,104 26,172 158,72 51", ",89 180,158 92,102 111,193 78,15 131,96 193,19 94,", "92 171,74 187,148 43,57 78", ",40 159,77 ", "53,24 194,200 191,94 15,170 189,28 73,195 32,", "95 200,132 182,39 44,51 191,95 53,120 136,187 117,", "47 64,199 2,180 114,49 119,36 51,152", " 139,14 26,11 75,33 27,45 81,113 6", "8,23 175,192 161,178 194,99 154,137 85,103 199,16", "9 25,36 82,37 14,22 38,57", " 44,121 69,168 17,155 163,179 169,44 108,105 7,8 ", "97,1", "9 72,10 144,2", "8 110,6 ", "58,183 126,160 92,109 127", ",184 93,189 160,145 79,168 ", "84,1 91,82 72,178 172,118 41,57 96,168 134,5", "3 36,2 71,185 59,134 175,119 129,90 12,142 ", "151,110 73,198 120,56 124,71 140,188 31,76", " 183,138 99,34 23,139 159,29 87,149 138,17", " 23,102 139,132 17,87 75,150 83,129 89,119 174,", "115 16,200 19,70 181,125 79,135 9,57 42,12 167,19", "6 66,84 23,58 54,146 81,31 148,125 89,81 46,100 59", ",101 183,14 45,131 95,85 149,28 180,4 153,65 82,1", "5 191,108 54,159 30,73 119,181 143,46 78,159 182,1", "16 5,190 4,38 41,102 132,50 150,20 2,166 21,14 104", ",168 175,46 58,146 57,136 184,30 84,153 190,197 11", "9,119 28,154 33,152 102,126 36,192 68,93 136,86 11", "2,75 150,82 76,176 3,84 102,88 128,118 123,42 37,1", "65 136,5 22,174 197,32 70,44 13,120 74,69 5,127 48", ",65 131,97 107,86 109,42 54,128 124,145 119,126 13", "1,35 20,175 139,151 105,67 18,194 172,80 107,143 1", "95,156 90,182 152,41 69,56 25,161 28,106 164,172 1", "60,91 50,129 68,27 88,95 126,3 52,64 67,79 114,26 ", "57,43 188,92 24,116 69,83 147,167 103,186 146,37 4", "5,62 75,55 47,177 165,123 69,78 6,133 48,114 197,1", "82 17,79 161,68 174,161 145,81 13,147 150,48 155,8", "2 95,59 162,179 144,138 137,52 118,157 120,163 133", ",140 196,178 170,44 96,60 116,30 134,127 162,19 10", "1,66 35,89 145,122 41,17 40,171 194,16 135,51 19,1", "11 152,69 60,106 97,199 156,5 118,7 142,107 157,94", " 53,168 40,173 14,139 111,58 14,41 3,57 81,162 109", ",153 18,173 78,70 190,81 58,98 122,9 166,21 130,20", "0 101,18 55,78 186,63 198,68 79,1 61,117 157,191 1", "01,130 115,194 170,40 23,111 182,124 154,135 31,7 ", "59,54 14,141 62,191 65,129 28,125 192,175 102,41 5"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 81: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 81: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test82() {
    int n = 200;
    vector<string> edges = {"51 74,48 44,42 52,138 38,68 17", "4,165 122,58 173,157 72,183 114,11", "4 132,62 1", "01", ",166 ", "45,181 86,197 21,23 47,27 14,8", "0 29,147 30,34 126,139 59", ",68 2", "7,87 62,44 20,89 164,1", "14 190", ",75 109,91 160,101 82,27 174,125 47,54 14,1", "09 126,158 161,120 66,30 117,128 119,27 167,64 11", "0,85 171,69 57,194 177,19 11,196 69,92 20,142 15", "1,110 136,142 114,153 89,136 115,199 134,150 136,9", " 130,48 70,66 125,86 83,11 1,104 92,151 72,155 58", ",127 22,111 48,132 190,18 83,20 22,54 91,45 184,18", "0 42,164 15,55 181,119 168,26 183,47 135,35 16,67 ", "154,27 115,50 87,31 146,152 69,13 111,4 31,20 9,3", "8 87,95 106,93 61,1 28,83 55,102 155,86 148,130 14", "3,123 49,181 133,152 156,146 195,15 156,60 183,125", " 4,13 48,187 86,177 193,200 104,10 149,57 52,168 1", "66,180 17,148 116,132 157,15 180,160 46,192 107,12", "1 10,130 111,49 146,131 84,161 142,157 192,172 93,", "149 197,81 36,92 9,191 16,129 162,107 72,161 107,1", "4 91,192 72,157 94,107 114,105 88,123 135,137 96,8", "7 85,170 95,84 130,189 194,21 34,36 179,185 19,178", " 189,118 2,180 52,131 20,60 132,14 68,16 113,78 91", ",160 150,96 198,127 48,79 176,9 127,104 127,117 97", ",76 90,17 196,108 129,195 23,90 99,84 127,4 120,15", "6 196,88 163,98 83,143 70,126 170,43 152,52 153,89", " 112,153 43,180 89,145 37,73 7,72 161,68 91,151 94", ",148 51,141 50,94 192,59 80,39 41,65 151,17 43,122", " 150,116 100,60 3,135 120,61 40,41 124,133 86,179 ", "105,24 199,171 101,8 108,78 165,25 71,190 186,64 1", "22,13 22,114 158,113 156,183 94,198 76,150 27,66 2", "3,66 49,92 48,174 115,157 158,40 81,112 164,193 13", "7,48 200,184 102,32 17,188 12,28 24,127 44,186 60,", "72 60,54 167,82 138,143 9,73 118,51 98,20 175,154 ", "140,169 5,3 94,53 38,140 8,106 75,29 188,56 181,16", "3 40,100 51,61 172,77 178,176 128,103 131,115 165,", "174 150,164 191,33 84,164 113,110 78,175 48,5 73,1", "57 114,16 69,162 159,47 31,146 66,134 185,37 39,34", " 121,99 67,74 133,180 153,182 100,32 57,46 64,22 3", "3,156 63,110 14,44 84,12 25,69 164,103 92,7 147,16", "7 78,63 69,159 77,71 145,173 79,97 169,55 182,200 ", "131,70 20,6 101,101 50,142 3,2 144,160 14,142 157,", "123 47,78 160,124 139,158 183,122 54,15 63,144 118"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 82: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 82: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test83() {
    int n = 200;
    vector<string> edges = {"4 64,162 195,113 200,1", "36 163,172 116,64 106,14 120,21 150,60 178,132 1", "67,187 51,24 130,170 62,111 70,167 139,179 ", "128,146 30,173 105,121 40,160 71,163 81,61 28", ",134 182,97 72,6 98,66 46,123 26,83 108,183 66,6 1", "11,42 35,156 157,89 28,9 92,44 39,175 184,190 13,1", "17 8,158 65,128 188,39 151,177 87,14 89,186 153,1", "34 193,127 55,78 144,99 90,43 37,91 98,54 22,89 14", "1,174 45,90 15,191 190,20 156,185 175,109 192,108 ", "15,106 41,34 156,46 110,116 127,179 150,84 20,137 ", "176,31 94,14 138,57 123,199 158,167 183,164 78,34 ", "33,102 147,90 141,65 118,122 191,83 146,29 173,1 1", "83,2 143,161 91,129 80,72 31,105 42,140 197,139 11", "0,81 50,168 132,32 125,62 76,35 69,80 186,44 151,7", "3 193,125 196,70 93,142 5,56 164,171 117,128 34,33", " 20,67 44,145 162,154 103,174 167,12 89,95 45,18 6", "8,139 174,18 168,28 141,120 175,183 174,192 170,11", "9 27,22 103,149 194,55 187,177 104,21 33,126 90,10", "6 119,112 71,67 153,4 60,141 30,128 85,197 145,95 ", "139,23 133,68 168,179 101,138 83,45 46,3 109,10 88", ",95 18,79 2,34 157,124 97,27 2,96 71,76 43,30 90,1", "50 199,47 53,179 34,158 84,167 95,144 29,25 97,49 ", "60,79 106,36 107,27 60,154 22,74 3,85 118,24 48,1 ", "66,75 140,40 50,59 154,196 172,130 134,182 96,118 ", "188,16 59,175 89,193 198,61 175,89 146,157 128,193", " 135,110 95,84 65,133 114,65 21,141 12,48 198,178 ", "17,195 149,86 31,88 154,120 89,169 150,92 11,66 18", ",21 101,57 131,8 161,188 65,27 106,168 174,79 49,4", " 178,119 4,143 27,103 54,148 141,52 130,115 15,153", " 44,50 165,13 94,123 11,44 82,17 119,21 188,135 13", "4,37 142,181 24,152 74,71 102,26 57,53 137,106 4,5", " 152,96 160,41 2,7 166,46 132,129 67,107 113,147 2", "4,100 165,131 180,20 179,156 101,92 63,118 179,22 ", "189,180 19,156 188,51 23,101 169,11 180,98 171,80 ", "151,169 179,77 56,132 139,87 67,167 168,104 129,17", "6 75,138 30,71 24,189 16,151 129,58 63,184 108,157", " 20,198 96,19 92,180 92,194 36,121 159,108 99,103 ", "16,16 10,82 80,151 186,15 175,166 6,38 128,110 1,1", "55 106,132 18,30 175,69 77,114 32,153 177,64 79,99", " 120,178 155,63 123,93 7,45 1,200 47,186 177,83 99"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 83: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 83: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test84() {
    int n = 200;
    vector<string> edges = {"31 102,15 38,8 ", "39,83 94,71 196,41 187,47 35,72 92,45 52", ",55 125,151 58,171 103,117 176,69 113,17", "1 20,115 193,105 29,81 19", "9,137 ", "63", ",73 152,188 113,166 191,147 31,1", "49 196,45 50,96 30,143 66,90 169,50 ", "98,66 8,37 129,138 67,106 148,57 14,95 11,153 2", "5,158 178,164 156,164 23,175 128", ",76 3,1", "33 69,5", "0 152,102 147,191 60,167 49,5", "8 34,1 124,82 49,69 47,150", " 116,1", "40 145,164 71,125 148,160 36,51 11,", "23 71,156 35,", "159 45,7 131,65 173,121 95,109 164,170 195,132 1", "40,146 133,98 136,29 142,146 156,157 67,164 149,63", " 175,194 81,197 186,116 42,26 11,175 20,40 83,19 1", "85,86 6,108 193,169 87,17 106,125 178,31 33,112 48", ",119 62,132 155,124 191,130 88,107 3,165 13,6 149,", "132 127,173 134,140 150,131 118,107 147,51 74,168 ", "91,182 29,35 188,91 100,81 143,195 126,43 151,13 9", "7,82 130,155 145,147 48,9 43,103 137,77 5,185 96,5", "6 12,141 197,110 18,92 56,103 144,124 176,50 163,1", "33 196,99 103,79 132,22 115,183 85,157 159,2 111,1", "29 161,152 163,5 54,186 161,88 158,145 150,145 57,", "148 17,179 64,44 1,166 176,144 99,97 175,68 125,11", "5 192,49 130,102 64,144 18,94 197,1 166,21 31,154 ", "15,69 188,72 56,52 98,136 138,130 158,104 147,80 9", "0,168 95,179 21,6 47,179 112,67 50,21 102,101 93,6", "0 124,18 175,60 1,138 45,91 187,167 106,177 76,120", " 3,174 67,79 140,38 9,48 33,200 181,34 70,178 167,", "48 179,127 42,6 156,79 14,110 63,4 94,128 103,177 ", "147,20 103,147 3,12 115,33 21,46 161,28 193,71 35,", "1 176,119 32,171 13,67 159,22 72,118 93,26 91,134 ", "170,6 133,78 114,159 152,124 61,30 200,190 129,89 ", "78,85 105,106 125,36 199,99 184,45 157,116 79,32 5", "9,60 25,3 21,127 79,22 192,137 175,142 182,31 48,5", "6 22,97 18,13 20,27 37,99 13,111 85,114 80,126 65,", "54 189,163 45,17 82,199 139,25 166,180 35,91 95,19", "6 69,82 167,69 23,32 93,16 115,42 145,148 55,193 2", "2,14 127,163 159,35 23,198 197,107 120,118 7,6 180", ",84 22,60 44,200 134,75 91,74 75,184 18,87 162,192", " 72,135 112,144 184,116 132,39 194,176 60,123 100,", "113 35,53 152,10 37,178 49,70 77,178 17,11 91,122 ", "84,162 89,91 123,149 69,139 160,88 106,17 167,91 7", "4,191 117,24 136,100 41,2 172,61 176,181 19,48 177", ",187 51,189 154,13 144,64 112,191 1,23 146,105 111"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 84: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 84: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test85() {
    int n = 200;
    vector<string> edges = {"183 145,126 10,2 44,95 154,52 140,175 121,7", "5 98,106 87,72 ", "57,187 82,132 17", "6,98 164,45 81,167 64,20 18,139 99,174 80", ",184 132,163 131,35 69,185 142,41 95,24 135,115 ", "168,151 65,138 30,30 54,11 114,69 70,27 189,186 ", "59,46 11,101 19,117 43,67 193,89 61,198 61,80 115,", "164 112,179 190,105 175,142 122,101 12,113 180,65 ", "172,68 58,4 12,14 1,178 193,57 174,156 103,87 102,", "123 178,199 78,26 183,194 28,152 18,133 158,141 20", "0,169 195,66 177,177 18,145 199,144 2,96 46,71 83,", "42 89,59 15,193 74,161 101,17 56,6 74,38 197,16 9,", "176 48,192 4,188 32,1 48,23 16,9 149,28 37,180 117", ",168 45,92 108,33 99,50 4,115 135,147 139,122 75,1", "57 128,83 84,112 23,163 177,191 113,62 7,94 15,84 ", "196,44 39,121 148,10 138,86 106,160 151,192 6,162 ", "126,70 76,153 79,196 136,76 105,29 62,155 101,136 ", "194,91 124,93 152,118 63,18 61,181 156,82 33,127 9", "9,55 99,5 88,94 6,34 152,7 191,37 41,103 160,97 14", "7,140 147,56 147,73 100,78 153,129 56,64 138,54 29", ",146 140,47 33,149 49,120 36,137 181,154 133,19 15", "5,10 169,135 25,90 135,32 143,114 96,110 193,8 35,", "165 14,143 44,144 40,134 165,130 170,88 24,46 135,", "128 184,171 127,200 8,3 67,63 55,182 150,79 53,111", " 27,170 72,49 92,60 185,124 71,158 141,51 159,166 ", "171,36 39,104 129,48 134,58 135,189 67,44 152,13 3", "4,77 116,176 77,85 18,31 162,81 130,116 137,195 17", "3,21 39,90 51,102 107,25 58,53 31,73 82,22 5,107 6", "0,43 167,24 119,190 36,173 26,68 109,197 4,12 192,", "119 22,182 96,172 157,125 91,108 86,159 90,148 125"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 85: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 85: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test86() {
    int n = 200;
    vector<string> edges = {"79 185,165 112,145 187,", "21 103,132 169,101 65,76 188,64 27,1", "97 62,70 16,125 100,189 103,75 166,20 153,1", "57 141,19 122,50 75,57 17,108 105,119 35,146 16", "9,12 45,104 178,156 123,15 90,45 128,18 19", "1,196 170,50 139,133 169,14", "3 73,56 7,123 109,38 18", "1,11 88,59 166,24 148,3 175,167 101,110 145,16 ", "173,169 136,81 15,198 69,43 142,44 3,85 1", "49,69 48,127", " 11,174 9,142 14", "7,51 59,1", "41 13,16 166,163 113,17 87,20 ", "92,91 58,176 26,158 36,188 43,46 15,142 182,112 17", "9,186 187,179 90,14 139,31 22,164 68,145 173,16", "8 192,70 139,71 72,6 167,40 37,171 190,166", " 2", "2,1 153,37 30,6", "5 121,113 94,91 5,", "138 173,15 75,100 114,84 179,60 41,39 115,124 71,5", "8 71,77 193,25 111,105 79,53 163,62 61,36 80", ",161 102,109 182,", "200 136,166 186,", "47 133,181 195,165 186,", "50 84,185 172,7 197,2 125,83 104,31 137,9", " 107,134 16", "4,94 158,172 2,14 51", ",199 42,121 99,49 25,82 78,173 84,170 52,59 ", "193,95 156,14 179,117 29,66 190", ",27 ", "38,112 3", "1,77 46,2", "8 10,41 6,192 57,150 190,", "114 117,89 168,193 75,160 60,190 136,124 157,54 1", "08,55 12,80 64,115 97,184 80,35 130,", "17 129,23 119,130 160,50 59,74", " 18,180 164,36 199,145 179,87 162", ",151 143,96 24,90 8,178 39,33 140,116 96,", "183 116,52 74,122 140,103 169,120 190,", "67 122,22 77,107 123,187 1", "37,139 110,90 14,194 83,33 1", "55,138 84,149 55,61 93,32 54,175 126,13", " 1", "24,86 177,191 198,109 68,135 86,144 72,106 164,42", " 183,129 184,110 15,34 123,111 4,177 23,48 1", "61,131 152,10 67,30 40,78 153,159 9,191 83,195 ", "129,59 139,152 155,162 89,118 91,10 63,137 22,148 ", "53,72 58,187 31,40 141,98 122,193 166,154 67,126 1", "35,99 44,88 155,73 85,93 32,128 56,8 112,102 49,81", " 90,29 151,5 118,78 144,4 196,97 194,26 109,22 139"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 86: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 86: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test87() {
    int n = 200;
    vector<string> edges = {"121 193,129 93,166 170,102 155,138 68,60 134,", "54 192,59 ", "196,", "156 123,73 139,143 22,99 36,154 178,131 23,78 5", "0,57 33,56 25,77 35,145 116,38 ", "195,6 103,61 190,185 123,36 59,21 180", ",199 83,199 171,53 11,4 8,64 17,173 50,44 16,20", " 186,135 132,89 104,70 160,39 200,141 64,185 71,19", "4 46,132 163,110 119,86 53,164 85,8 70,84 9,", "146 125,150 98,115 20,118 199,11 78,", "25 52,106 179,80 118,9 1", "93,128 112", ",19", "6 153,119 109,32 111,5 117,76 120,17 91,200 172", ",33 32,35 154,2 38,155 134,113 55,127", " 1,112 182,31 1", "89,19 49,168 113,68 45,139 6", "6,105 92,26 47,62 51,183 72,71 136,128 83,", "97 179,82 141,158 191,79 28,47 108,162 174,67 42,3", " 4,147 44,22 77,171 41,94 40,181 175,52 145,144 1", "2,88 43,23 114,13 10,159 183,148 138,48 82,174 105", ",12 146,111 67,108 130,180 165,117 165,92 144,186 ", "167,149 136,28 26,98 197,188 38,193 100,171 95,13", "4 102,151 69,130 61,18 137,78 63,198 101,190 90,10", "0 62,85 18,167 39,149 69,172 74,137 86,189 165,14 ", "19,187 152,139 158,55 88,90 148,193 177,10 73,46 1", "35,50 37,104 96,15 97,58 150,179 21,161 182,112 17", "1,116 194,41 80,157 129,192 199,63 14,129 121,160 ", "162,95 41,181 134,7 110,178 122,133 198,77 101,170", " 56,91 89,136 103,169 58,66 57,96 79,156 30,114 10", "7,152 2,81 169,195 187,83 171,74 127,126 34,184 13", "4,109 195,155 123,103 29,16 3,1 158,37 168,142 118", ",187 2,75 188,76 31,27 147,43 173,72 131,192 95,12", "2 143,65 81,187 176,163 133,107 65,140 112,93 124,", "197 159,121 100,110 75,93 171,87 195,75 40,51 93,3", "8 119,83 124,42 13,2 110,153 48,40 87,110 187,176 ", "195,34 5,124 140,49 164,182 157,24 27,29 136,125 2", "4,171 9,191 115,40 109,109 7,101 166,45 99,177 112"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 87: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 87: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test88() {
    int n = 200;
    vector<string> edges = {"184 117,87 9,165 75,124 92,90 120,113 41,136 146", ",148 63,195 129,164 174,95 33,146 38,169 14", "7,141 38,105 78,50 194,193 103", ",199 91,60 11,118 10,63 113,175 114,143 73,67", " 148,33 132,81 9", ",135 164,74 23,116 193,7 69,140 176,", "194 20,84 196,180 169,42 162,44 130,173 44,", "11 198,108 60,115 165,129 107,179 45,200", " 25,191 147,24 187,8 81,65 ", "181,185 145,154 9,", "5 54,16 76,15 138,44 ", "71,88 27,198 43,41 166,52 139,166 89,", "125 184,64 16,199 75,167 147,1", "32 94,7", "3 1", "9,153 35,6 2,130 46,102 147,141 1", "46,78 99,89 62,35 71,34 192,103 185,56 1", "49,159 5,197 6,156 71,16", "0 90,120 105,126 17,74 136,96 50,49 6", "3,", "2 200,138 ", "161,12 180,47 121,", "162 143,66 77,99 68,27 136,107 81", ",4 163,114 100,4", "5 135,70 55,170 155,93 74,18 95,21", " 93,", "161 178,58 154,9 107,8 130,181 83,119 18", "4,61 9,22 75,13 98,59 44,183 138,139 144,142 115,", "36 97,25 57,169 85,115 91,190 56,32 160,28 131,", "146 115,88 146,76 53,186 158,149 122,125 12,196 31", ",112 28,131 49,100 179,109 180,134 93,107 35,71 19", "5,43 48,79 137,48 188,57 140,80 158,51 3,39 186,53", " 170,163 29,178 26,147 36,92 183,38 134,35 154,82 ", "96,68 66,97 125,27 91,123 32,77 64,137 15,172 114,", "23 115,54 1,38 150,3 29,189 67,19 126,36 125,183 1", "33,14 182,72 74,176 172,182 128,110 168,145 18,9 4", "4,30 130,158 29,150 72,86 186,128 124,152 44,17 42", ",40 118,83 7,10 110,91 106,62 112,122 158,174 175,", "136 88,121 79,171 36,37 153,117 171,19 54,144 159,", "188 40,157 29,133 14,31 116,72 165,172 13,98 197,4", "6 35,127 81,85 12,106 93,168 65,192 123,55 80,155 ", "34,101 24,148 82,26 104,106 27,111 97,75 141,69 10", "8,151 47,187 177,20 189,177 84,104 151,94 101,1 52"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 88: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 88: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test89() {
    int n = 200;
    vector<string> edges = {"57 23,133 117,80 3,49 38,102 138,168 94,25 1", "08,178 7,30 69,109 130,14 71,1", "03 ", "89,182 77,111 199,185 18,132 73,43 75,39", " 99,151 156,4 84,3 39,16", "0 134,66 6,92 85,122 86,179", " 129,", "50 107,45 105,125 122,68 30,81 73,94 54,155 18", "9,161 140,163 170,99 3,110 17,97 131,13 108,27 189", ",187 182,50 186,185 195,16 65,17", "2 195,88 171,176 15,10", "8 122,89 61,61 1", "28", ",166 185,6 67,1", "21 164,36 91,23 142,76 36,3", "1 146,107 62,104", " 50,71 36,51 198,41 74,52 5,36 78,142 166,", "95 29,149 11,190 152,126 190,128 92,26", " 148,100 173,55 191,169 110,123 104,25 71,5 160,1", "20 192,20 155,174 122,191 35,84 137,6", "2 123,192 91,93 167,138 183,106 189,", "59 4,81 100,195 148,113 181,41 62,116 3", "9,134 169,188 14,29 147,118 44,145 ", "19,87 173,144 8,188 122,28 197,123 31,140 168,146 ", "1", "04,70 196,3", "6", " 25,143 192,198 56,157 193,44 165", ",71 78,54 161,171 24,137 51,200 62,42 52,162 ", "80,180 37,34 60,37 55,164 40,143 32,", "124 90", ",25 78,193 24,183 135,186 96,181 3,154 106,1", "52 58,141 193,78 98,64 79,196 150,76 ", "143,17 52,149 3,167 81,160 136,117 119,79 184,35 1", "87,173 8,5 124,105 12,31 9,180 199,33 57,48 64,8", "6 32,77 158,189 38,145 3,69 43,150 72,60 2,1 194,1", "10 10,200 50,120 86,75 21,79 104,165 34,163 162,19", "2 13,147 116,18 172,12 115,136 52,24 197,67 1,32 7", "6,19 112,94 72,199 66,53 136,74 104,21 179,10 5,14", "2 26,78 143,158 126,7 23,85 127,175 101,100 101,13", "5 164,195 178,159 25,9 74,65 121,127 103,130 111,4", "6 153,114 16,177 192,26 185,127 151,115 22,2 118,6", "3 170,38 197,82 27,135 45,131 151,122 76,98 122,93", " 47,148 142,42 160,72 70,27 15,156 46,2 129,112 14", "5,70 117,83 15,52 53,107 186,79 107,129 68,22 102,", "195 33,107 200,98 14,139 185,58 59,56 180,119 133,", "96 48,153 97,13 14,41 184,36 32,40 114,91 159,96 4", "1,32 177,62 50,90 52,194 109,148 139,108 86,184 96"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 89: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 89: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test90() {
    int n = 200;
    vector<string> edges = {"131 151,132 85,115 30,6 90,29 112,25 187,199 52", ",192 110,159 152,2 3,99 55,76 196,147 74,137", " 111,100 42,113 104,8 104,186 87,81 113,36 149,82 ", "27,158 118,198 122,118 139,184 109,162 116,110 79,", "127 163,55 82,37 59,160 101,134 67,106 148,68 142,", "71 39,177 65,13 73,164 156,9 145,62 32,175 185,24 ", "128,128 94,119 194,104 81,48 200,23 35,8 176,145 1", "59,16 133,43 35,14 38,61 175,111 200,55 44,95 102,", "65 176,117 109,125 183,85 102,87 30,101 19,112 38,", "20 45,122 173,59 17,87 115,126 51,67 5,138 172,57 ", "168,114 25,141 96,3 85,199 105,5 143,180 191,34 26", ",81 8,178 93,129 141,7 62,17 86,151 124,140 99,161", " 33,155 10,173 144,65 113,96 66,167 22,83 171,163 ", "183,20 186,60 172,101 117,13 95,64 190,45 135,130 ", "2,181 45,197 135,135 188,78 126,148 81,200 4,149 3", "8,95 73,73 3,104 178,53 170,49 6,195 110,102 138,1", "82 75,63 61,108 83,91 152,19 4,123 20,74 190,139 1", "71,77 171,144 129,84 131,92 180,194 164,54 139,177", " 104,195 23,108 139,135 55,132 2,135 27,178 176,28", " 34,41 100,90 57,104 106,27 181,181 186,107 41,171", " 153,22 107,154 24,115 123,169 26,31 3,75 145,10 9", "4,120 48,168 166,60 95,15 75,156 37,105 26,172 114", ",146 181,89 80,4 137,42 179,4 101,117 48,138 130,3", "8 142,58 81,11 91,124 121,185 70,30 20,176 177,69 ", "193,200 117,153 139,191 92,26 108,133 137,137 48,5", "2 158,47 43,189 78,157 35,196 69,44 123,79 18,85 1", "3,153 118,86 53,197 82,165 97,188 98,143 56,136 18", "9,58 106,103 181,193 63,179 136,51 167,108 72,3 10", "2,170 84,54 105,72 46,109 120,32 155,139 26,18 195", ",88 9,116 128,71 183,183 112,1 89,33 146,121 119,1", "91 62,123 140,166 76,40 116,56 198,34 54,102 60,97", " 152,103 197,186 82,64 11,117 19,82 161,21 135,12 ", "47,113 8,93 148,150 130,113 106,46 171,187 138,80 ", "38,171 108,66 134,70 49,98 123,174 64,52 26,50 152"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 90: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 90: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test91() {
    int n = 200;
    vector<string> edges = {"133 28,175 81,118 1", "23,27 181,37 ", "112,4 52,141 105,188 81,80 120,106 41,198 5", ",152 48,59", " 113,76 15,5 67,56 174,21 147,162", " 156,138 143,187 75,100 175,90 84,49 6", "7,81 31,132 198,136 187,122 129,149 57", ",62 138,166 103,102 125,185 14,41 95,128 63,54 ", "160,200 46,103 83,50 17", "0,69 3,163 19,177 36,131 41,86 149,170 42,83 1", "10,188 99,13 6,47 80,108 114,53 69,186 124,91 134,", "8 102,31 193,65 ", "136,1", "39 172,", "11 2,113 44,165 62,20 ", "108", ",88 184,167 13,28 181,74 178,57 ", "187,187 86,68 51,3 61,182 26,127 85,", "190 8,50 101,75 86,102 1,149 150,63 191,156 198,55", " 166,169 27,44 59,106 49,191 102,192 137,181 45,41", " 162,111 71,189 54,142 191,198 158,60 68,125 127,1", "50 57,180 56,61 69,145 39,156 158,140 96,179 176,1", "46 182,7 151,160 120,86 150,105 163,34 23,123 33,7", "3 55,164 144,184 68,130 31,25 186,144 118,135 24,1", "04 92,26 200,137 88,143 73,173 194,119 95,77 74,12", "8 13,87 176,87 45,119 198,43 5,178 32,102 89,67 11", "7,95 158,52 28,101 170,12 86,155 113,94 6,145 130,", "4 27,32 17,54 53,198 162,189 93,168 77,117 119,160", " 16,57 79,17 66,70 25,161 37,95 2,197 183,4 28,136", " 150,8 13,64 169,22 177,194 192,79 65,171 86,169 2", "8,85 94,30 141,82 109,8 128,42 39,23 180,115 159,2", "9 179,153 98,39 50,66 126,65 150,125 167,193 39,13", " 63,57 136,3 116,28 179,78 40,93 3,126 111,92 107,", "45 29,18 145,107 10,36 199,172 173,38 197,51 139,1", "58 119,179 64,110 152,6 190,44 154,124 72,24 13,43", " 2,48 146,120 58,170 188,8 191,133 64,42 18,40 22,", "33 30,117 43,97 140,85 125,150 187,27 87,114 185,1", "9 38,71 91,98 34,9 102,4 181,89 127,199 121,52 176", ",162 106,58 157,84 122,134 168,196 161,46 165,167 ", "8,142 8,116 93,189 61,158 2,2 132,117 11,99 18,12 ", "79,181 133,60 104,195 70,148 21,94 63,109 195,11 5", ",133 27,28 87,80 69,147 47,159 20,1 125,93 147,1 6", ",121 196,21 189,129 97,41 117,89 8,72 82,101 130,4", "5 176,16 120,174 153,96 115,10 60,183 164,171 75,1", "45 100,169 133,151 78,69 189,35 90,176 4,72 23,127", " 167,130 50,112 7,49 43,157 21,154 15,14 35,39 130"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 91: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 91: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test92() {
    int n = 200;
    vector<string> edges = {"6 95,107 184,73 33,77 192,17 23,1", "36 77,72 199,15 109,166 139,", "63 152,98 133,67 176,1 12,128 64,30 25,11", "8 41,195 105,52 67,120 24", ",", "81 11,122 21,74 56,134 18,121 39,16", "5 200,101 ", "97,128 111,65 129,70 11", "2,13 54,41 154,", "193 51,83 162,40 56,31 7", "8,105 ", "79,111 129,140 193,141 66,99", " 22,55 166,183 73,177 102,176 52,120 95,93", " 15,50 198,99 33,195 54,5", "8 9,173", " 6,185 167,143 191,171", " 117,116 168,184 114,117 172,112 15", "0,169 10,13 20,18 121,151 131,153 154,131 63,139 ", "34,64 108,166 100,81 89,26 195,189 40,135 80,98 8", "0,158 87,199 169,14 77,181 91,89 26,126 124,8 120", ",186 100,115 14,77 114,127 169,100 55,129 19,137 ", "108,171 156,104 62,164 43,124 36,34 156,175 5,194 ", "101,119 144,37 118,74 88,75 100,190 84,40 59,192 1", "82,110 163,78 118,153 31,109 138,188 99,170 190,97", " 60,43 45,21 147,29 184,78 65,157 168,84 119,20 10", "5,68 83,3 47,168 88,123 8,125 68,86 2,14 136,53 12", "3,181 156,114 14,59 157,13 81,133 166,146 182,153 ", "159,4 164,91 172,133 171,28 198,152 198,155 134,62", " 127,55 171,17 121,49 160,138 32,111 178,75 186,42", " 81,96 42,71 196,37 78,106 164,156 139,108 178,11 ", "13,166 38,45 85,33 183,114 49,184 115,18 17,174 89", ",168 40,159 31,16 46,121 155,10 87,156 94,36 3,7 1", "65,100 171,145 177,67 72,139 133,73 185,57 115,102", " 140,44 161,94 75,79 96,2 93,80 75,1 24,83 189,164", " 126,51 143,142 174,5 130,34 98,108 153,56 59,18 6", "9,95 53,60 70,66 3,89 195,59 125,39 30,69 90,168 1", "62,91 55,54 142,85 141,68 116,38 135,144 58,164 3,", "92 152,25 17,61 184,178 27,172 98,96 13,41 137,160", " 57,148 24,35 18,82 1,55 98,36 45,45 4,113 185,163", " 149,191 145,11 54,159 37,90 134,162 40,167 113,46", " 180,136 179,154 31,26 20,54 96,172 133,22 16,19 1", "11,150 187,88 125,9 170,182 107,179 57,10 72,141 1", "24,80 91,124 45,187 122,172 34,27 31,149 63,30 17,", "23 39,180 188,47 106,2 102,32 86,27 128,103 1,23 6", "9,118 19,154 78,160 7,82 132,76 130,200 136,55 186", ",90 18,71 24,197 106,147 194,118 153,48 25,161 152"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 92: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 92: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test93() {
    int n = 200;
    vector<string> edges = {"134 129,169 137,172 159,83 11,170 137,122 39,2", "8 142,151 13,154 37,30 154,17 36,133 8", "4,49 75,194 49,34 104,", "128 164,15 19,180 93,3 39,12", "8 188,1", "56 172,122 27,9 89,198 102,60 31,", "64 175", ",157 134,", "176 47,61 97,29 166,68 55,105 189,186 32,29 1", "91,120 128,75 26,145 19,75 30,146 17,148 191,162 ", "155,104 155,41 40,183 135,10 2,172 65,188 ", "169,56 125,76 87,186 58,195 92,118 34,155 34,160", " 84,5 92,131 163,90 194,173 200,86 ", "148,163", " 51,199 70,129 148,82 73,157 129,190 ", "94,1", "10 92,106 92,20 130,111 59,43 103,161 113,37 4,40 ", "1", "04,55 115,137 131,126 148,94 18,41 18", "6,191 134,1", "12 13", "5,113 115,85 ", "112,135 103,145 86,134 198,178 76,119 129,80 40", ",66 181,91 92,123 172,1 173,77 45,4 49,58 181,12", "5 22,108 179,37 18,155 173,146 158,19 134,44 176,1", "17 140,4 190,189 37,115 21,196 173,185 156,154 81,", "40 32,67 5,168 47,192 159,43 150,182 80,94 75,159 ", "185,27 139,7 109,197 23,153 53,84 68,162 182,138 1", "72,79 156,81 37,26 94,46 5,199 74,176 56,181 118,3", "3 69,66 41,96 107,2 124,99 88,136 116,76 148,175 8", "3,100 82,97 132,6 81,19 129,24 131,99 78,126 87,16", "4 137,35 171,3 192,121 144,79 185,181 162,32 118,5", "5 161,12 45,7 159,77 177,49 26,141 92,6 189,16 14,", "21 99,156 109,171 28,152 136,146 176,93 151,26 4,1", "85 39,105 4,143 16,185 122,71 137,119 126,42 12,78", " 160,34 58,177 117,86 29,181 32,47 125,125 44,132 ", "111,22 36,140 12,39 147,102 129,11 180,109 185,114", " 121,137 24,53 33,39 65,130 98,187 8,127 92,25 112", ",50 187,149 74,167 51,12 174,76 15,160 99,54 197,1", "09 192,59 61,36 146,13 64,15 178,72 171,69 54,124 ", "108,144 57,110 184,56 146,63 164,156 138,145 166,1", "96 104,157 76,101 12,60 195,198 145,18 194,179 153", ",176 158,118 66,129 86,166 126,104 58,158 168,113 ", "160,148 29,23 95,193 9,45 140,174 140,139 7,57 50,", "142 35,118 104,78 55,52 78,74 112,87 178,89 193,48", " 88,89 50,40 1,65 3,8 114,119 178,191 15,178 145,3", "8 100,190 154,81 189,118 162,200 66,62 20,73 152,1", "07 38,3 79,116 96,104 162,51 63,102 145,173 80,169", " 128,36 158,88 78,61 14,147 122,95 10,98 91,72 165"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 93: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 93: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test94() {
    int n = 200;
    vector<string> edges = {"46 69,128 59,176 180,87 136,161 154,1", "6 195,78 168,8 191,1 49,7 57,197 22,187 145,198 11", "5", ",199 143,89 26,192 164,153 196,142 38,134 ", "85", ",37 81,101 159,187 43,105 198,1", "84 35,96 112,175 64,194 104,196 188,70 188", ",49 151,188 31,65 74,5", "2 117,164 185,69 169,9 23,99 50,198", " 61,18", "5 96,177 125,159 10,48 177,38 63,35 180,167 7,1", "68 79,116 49,25 26,57 197,197 7,122 108,149 52,120", " 156,60 190,193 85,140 181,190 150,76 67,149 126,1", "69 115,35 57,151 150,166 139,40 144,2 7,23 5,39 93", ",21 16,129 194,125 33,43 11,164 182,56 111,132 171", ",73 172,83 148,151 42,11 108,180 7,111 179,164 81,", "138 80,133 118,104 6,45 106,181 114,24 61,126 75,1", "1 166,12 134,63 183,100 130,176 184,192 37,103 78,", "110 15,6 80,60 116,119 136,95 173,54 129,82 59,134", " 18,112 182,31 179,173 76,156 93,139 118,180 197,7", "1 77,129 133,94 146,57 121,198 46,107 147,1 60,52 ", "44,75 68,1 32,3 156,36 111,145 139,163 167,14 51,1", "78 45,130 37,195 159,15 87,145 122,117 68,121 184,", "172 15,186 29,54 187,184 163,18 83,57 135,150 32,1", "65 142,7 176,135 2,154 131,97 66,90 186,170 29,190", " 42,15 178,118 122,11 138,62 147,44 3,80 47,27 114", ",133 104,43 166,93 189,85 77,200 181,81 185,118 12", "9,139 11,136 110,124 99,28 13,1 58,20 5,84 103,169", " 198,67 82,114 200,109 86,130 185,64 16,177 137,18", "2 192,59 67,115 61,91 28,137 48,139 187,163 176,13", "6 113,27 200,106 119,171 65,51 110,144 59,19 51,10", "8 187,17 73,181 27,143 165,55 83,21 125,92 95,166 ", "122,72 5,74 152,43 138,178 98,157 4,13 91,162 83,1", "83 160,172 41,113 178,86 12,176 2,33 21,114 140,19", "7 176,77 55,2 197,53 72,152 161,66 198,102 20,77 8", "6,104 138,167 35,131 132,37 100,150 60,26 155,30 8", "7,141 25,156 39,79 127,105 46,98 45,93 141,127 158", ",49 42,162 77,5 29,81 192,3 126,115 24,4 124,123 2", "9,55 109,155 44,32 116,88 97,156 126,47 43,187 122", ",28 62,160 8,50 84,34 199,51 172,41 19,148 77,61 9", "7,174 90,42 58,191 34,173 92,134 71,68 156,45 73,2", "2 167,146 147,24 169,158 157,118 11,58 190,189 120"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 94: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 94: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test95() {
    int n = 200;
    vector<string> edges = {"2", "8 6,138 15", "3,77 107,104 49,36 25,192 24,7 120,53 71,83 142,1", "31 101", ",8 124,", "163 150,56 190,140 55,137 30,170 179,35 2,139 97,4", "8 140,3 132,38 109,94 193,89 12", "3,109 50,112 156,14 92,12 183,146 40,9 178", ",180 7,141 114,194 58,157 20,4 75", ",199 185,2", "2 3,96 32,73 98,47 117,126 184,70 173,11 155,87 4", "8,133 67,123 146,128 144,191 139,183 138,18 ", "136,151 195,192 55,65 166,175 16,108 134,60 73,", "61 148,115 116,119 29,54 9,123 78,67 ", "161,167 35,13 47,184 197,45 61,2 45,57 137,147 16", "4,122 105,177 72,117 42,124 1,49 176,161 94,113 13", "9,164 53,26 92,15 194,25 46,19 169,29 13,20 119,15", "0 51,152 74,16 104,1 133,182 186,95 122,99 159,195", " 167,100 18,165 113,50 115,110 139,185 200,200 52,", "37 84,166 128,74 44,23 87,27 37,42 198,144 100,40 ", "38,105 36,120 81,171 19,79 43,155 22,154 17,72 93,", "51 118,30 181,193 41,107 160,135 131,190 33,129 62", ",98 170,127 76,92 97,116 149,64 23,136 174,6 187,1", "82 34,132 27,86 154,80 85,114 15,106 121,63 77,178", " 88,88 127,169 11,32 139,84 56,130 92,121 112,181 ", "145,168 146,111 172,179 54,31 119,172 86,5 91,188 ", "175,118 180,156 125,82 131,130 85,189 65,21 2,143 ", "31,198 63,81 189,142 143,90 158,44 83,68 111,24 19", "9,76 68,31 152,162 60,62 182,158 34,69 165,176 89,", "173 79,93 21,186 59,41 57,148 70,58 192,34 66,46 1", "63,39 139,102 106,43 177,35 147,55 12,103 151,78 2", "8,101 139,17 126,134 8,125 90,91 85,187 188,149 16", "8,10 157,75 102,153 64,160 10,174 99,159 95,52 141", ",145 171,71 103,59 129,196 4,197 162,33 108,66 196"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 95: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 95: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test96() {
    int n = 200;
    vector<string> edges = {"108 171,178 52,172 59,72 154,63 26,93 134,164 168,", "9", "6 76,128 166,85 51,94 139,9 161,", "67 129,169 147,12 169,196 ", "14,37 105,23 184,119 133,8 170,139 16,9", "9 91,141 187,156 143,1 62,7 1", "46,6 93,38 130,173 95,65 2,124 11", ",14 189,4 2", "3,43 111,49 65,1", "31 38,125 151,40 73,", "52 40,19 4,30 74,162 78,4", "6 161,17 52,144 33,140 92,110 84,41 135,147 ", "180,", "5 9,185 115,9", "5 8,190 18,3 177,191 128,102", " 55,188 74,1", "42 2", "00,16 96,18 199,21 50,107 85,109", " 46,115 61,7 1", "33,177 134,42 43,168 67,92 4,58 188,15 27,145 108", ",61 162,91 94,166 191,66 156,181 98,11 194,12", "0 152,98 167,150 80,20 68,83 82,59 24,192 19,19 14", "0,82 184,160 90,90 124,87 179,100 135,113 6,146 12", "1,78 163,44 127,50 155,191 119,195 54,182 114,138 ", "97,170 102,75 159,77 178,152 68,60 185,149 183,189", " 131,29 132,54 198,178 157,111 118,176 143,101 113", ",116 148,179 15,192 113,159 123,10 86,117 30,33 34", ",36 63,114 193,126 149,121 7,194 104,198 75,134 19", "2,74 127,49 101,82 177,186 181,44 119,199 186,135 ", "137,165 37,76 144,193 165,132 68,4 101,22 116,143 ", "52,130 195,151 42,183 97,13 112,192 23,86 99,81 36", ",89 106,30 72,103 35,153 196,167 150,3 140,45 81,1", "84 25,157 197,112 47,35 117,187 175,118 158,47 10,", "177 25,123 12,154 103,100 49,32 110,69 60,197 77,1", "36 97,27 28,48 13,105 31,88 71,2 140,107 143,129 1", "72,163 21,70 68,55 109,64 152,57 107,155 1,177 100", ",25 6,158 142,104 87,183 68,92 113,23 2,113 25,122", " 176,51 57,148 88,177 184,80 182,73 122,88 151,180", " 153,71 56,46 173,200 125,25 41,24 48,175 160,174 ", "29,28 145,31 69,84 5,39 120,79 68,106 22,6 192,161", " 32,56 89,171 53,137 83,62 190,53 45,26 141,34 164"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 96: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 96: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test97() {
    int n = 200;
    vector<string> edges = {"28 27,13 6,93 183,19 139,81 164,174 ", "56,191 131,29 43,27 172,117 167,", "3", " 171,27 2,94 28,", "73", " 113,12 79,61 69,124 40,132 75,75 83,186 100,113 ", "180,15 157,87 120,10 166,56 44,181 11", "6,50 67,18 147,115 172,173 56,15", "9 59,60 66,11 14,150 99,101 30,95 141,9 18,106", " 142,32 13,58 11,4 6,84 162,121 173,14 89,76 3,12", "9 145,69 92,49 33,177 48,103 55,126 170,51 50,", "147 31,45 161,55 150,173 115,153 1,137 176,136 188", ",108 152,137 71,54 12,172 185,116 88,169 54,170 19", "0,196 163,66 138,192 16,34 35,5 106,64 10,100 29,1", "41 99,46 134,193 97,63 129,112 70,163 118,131 42,1", "88 82,184 62,48 162,78 49,144 179,134 52,138 188,1", "18 86,8 132,51 195,74 89,72 175,79 127,52 181,149 ", "160,80 103,143 17,123 33,43 191,154 137,87 129,42 ", "125,165 80,71 179,70 124,95 71,90 126,130 168,128 ", "156,170 199,164 13,83 64,151 63,180 112,167 93,23 ", "114,57 7,2 66,7 37,65 61,114 46,176 143,179 141,18", "3 104,171 196,109 103,53 149,120 28,97 53,139 142,", "99 109,55 95,39 26,82 121,198 78,129 136,136 145,1", "82 32,186 41,148 65,172 129,195 16,20 16,30 153,1 ", "77,195 107,71 55,41 122,140 137,194 59,188 45,122 ", "39,13 182,150 154,174 94,190 81,59 182,68 142,117 ", "169,98 189,25 167,24 63,62 128,160 193,91 16,111 1", "84,155 34,130 192,22 173,185 94,104 57,102 15,200 ", "187,166 47,158 186,88 135,119 33,157 9,37 25,121 1", "15,77 72,31 155,38 78,152 23,94 172,40 101,199 90,", "89 142,82 94,161 24,17 95,22 44,187 197,135 110,17", "6 154,178 179,110 105,96 20,133 36,105 108,197 139", ",47 117,44 24,86 111,145 174,187 189,92 41,21 85,3", "5 76,141 165,156 102,67 51,44 82,103 140,146 96,12", "5 158,84 49,127 8,36 148,1 97,26 133,85 197,175 73"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 97: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 97: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test98() {
    int n = 200;
    vector<string> edges = {"24 126,138 25,18", "5 86,16 2,22 74,149 180,", "150 105,57 131,52 173,36 23,114 130,63 172,", "109 81,167 136,121 117,143 ", "16,167 197,5 179,193 144,87 10", "7,177 188,115 173,145", " 16", "2,49 75,32 164,82 33,72 120,6 147,182 7,45 102", ",180 25,196 80,122 32,191 194,1", "72 84,180 105,41 76,82 159,153 108,140 9,73 16,", "140 171,190 165,108 140,138 180,151 181,113 ", "18,21 6,156 139,81 87,70 59,101 83,4 132,43 95,150", " 138,102 154,62 179,157 41,44 200,159 46,28 114,14", " 189,59 127,53 133,8 167,35 174,128 153,121 47,180", " 64,123 5,34 49,147 186,133 43,139 174,59 12,67 16", "3,144 136,20 125,108 124,188 67,94 21,105 118,54 8", "0,110 185,162 146,153 167,152 70,129 159,195 10,17", "4 194,30 173,4 12,115 141,76 15,127 155,198 161,15", "5 73,19 59,144 8,127 33,83 94,5 7,26 99,200 112,85", " 116,13 199,179 123,93 34,58 150,91 109,84 103,104", " 158,166 171,67 148,71 95,164 122,197 9,95 27,2 4,", "130 22,90 14,147 98,169 52,38 96,197 27,136 128,17", "5 64,188 137,68 77,171 144,192 80,129 46,31 64,117", " 72,47 44,33 19,75 146,8 126,180 57,99 50,37 150,1", "78 13,58 64,40 95,39 83,60 55,132 127,16 4,48 70,1", "26 144,107 119,40 53,183 193,69 10,79 131,19 129,1", "28 140,180 31,94 101,89 1,97 115,70 176,37 17,189 ", "93,134 47,133 171,26 107,120 3,125 190,165 63,32 6", "0,140 43,199 61,103 113,78 169,95 167,65 156,136 1", "66,55 174,64 149,77 26,3 121,31 79,16 129,195 7,10", "6 5,56 68,142 104,18 11,135 198,15 142,12 73,86 56", ",144 128,118 31,1 52,61 23,146 90,137 177,23 178,2", "5 105,131 149,46 82,92 123,158 168,112 187,27 183,", "183 108,21 51,9 133,9 95,36 135,71 8,73 19,140 197", ",119 91,29 52,131 37,124 140,166 153,136 133,116 2", "4,162 28,50 110,168 20,108 71,2 70,88 141,154 141,", "187 134,42 123,170 42,166 53,17 175,176 2,171 116,", "74 38,166 8,79 180,98 6,163 186,184 62,186 160,138", " 57,66 184,71 166,60 111,11 157,79 57,25 58,33 143", ",149 150,181 194,96 145,100 60,161 36,80 194,159 4"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 98: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 98: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test99() {
    int n = 200;
    vector<string> edges = {"159 146,192 177,190 ", "110,", "165 53,91 182,96 121,16", "6 29,119 188,164 45,72 2,28 191,186 69,80 52,71", " 73,67 179,29 130,78 87,55 31,61 85", ",44 21,122 79,30 34,85 150,173 193,63 157,", "169 128,8 1", "84,130 97,43 129,152 32,23 185,10", " 154,174 9,98 114,157 137", ",117 183,41 159,189 92,2 166,59 160,54 14", "6,131 51,182 39,12 174,176 56,4 164,26 100,194 1", "0,94 162,51 172,81 190,116 123,135 89,", "54 147,109 79,47 142,118 14,", "76 173,151 164,49 115,1 103,78 10,171 94,3 1,45 86", ",179 78,188 168,62 17", "1,100 193,111 104,110 18,160", " 75,23 11", "3,35 139,82 19,135 175,195 163,5 31,115 176,34", " 70,14 37,168 112,66 33,17 189,20 81,87 148,48 18", "1,104 176,38 117,18 93,50 65,161 152,176 159,", "163 158,88 127,194 142,183 170,164 198,6 149,25 27", ",125 162,187 88,100 185,42 118,125 66,112 61,142 8", "7,53 74,158 71,46 108,123 90,99 186,121 72,55 98,5", "4 39,19 185,149 53,64 135,34 25,196 95,177 124,33 ", "196,39 41,89 46,102 91,60 109,75 16,129 199,102 49", ",198 151,182 102,16 138,175 4,200 20,87 145,185 13", "3,93 143,19 44,162 11,7 31,126 77,154 68,127 133,1", "61 141,128 134,69 5,70 9,7 40,95 35,90 169,88 19,7", "9 36,133 82,29 140,139 180,8 36,74 107,70 149,24 1", "75,13 84,21 65,170 3,191 166,86 164,140 83,113 127", ",145 142,113 19,41 104,86 89,193 82,15 17,39 176,1", "50 195,108 24,52 59,132 48,134 197,156 5,175 46,27", " 34,199 116,105 136,144 182,120 178,2 96,153 120,3", "2 36,92 38,106 80,133 193,178 131,11 42,133 88,155", " 22,197 13,56 111,91 144,73 119,175 64,68 194,108 ", "151,57 36,91 54,19 23,180 125,136 132,37 62,145 78", ",77 63,65 88,181 153,148 145,84 106,103 200,49 159", ",5 99,176 182,172 126,22 43,143 15,147 102,124 140", ",101 194,114 55,10 67,97 28,41 102,138 155,151 64,", "60 167,137 105,146 56,58 186,83 192,142 101,111 91"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 99: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 99: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test100() {
    int n = 200;
    vector<string> edges = {"5 40,73 195,94 137,86 107,101 183,141 136,18", "1 52,38 27,183 129,126 188,84 143,158 1", "16,100 113,62 19,54 170,39 ", "87,128 135,34 17,49 24,91 194,139 89,99 167,182 1", "56,172 197,95 25,87 70,77 118,35 175,36 114,122 1", "90,180 128,3 42,75 86,189 48,75 145,149 58,125 110", ",52 108,9 60,127 187,69 166,168 87,187 75,167 159,", "56 5,131 90,152 159,111 42,130 141,143 179,79 68,1", "18 82,39 168,59 114,103 187,70 58,66 21,81 181,7 1", "28,80 53,74 150,107 103,139 112,4 140,179 183,94 5", "8,137 111,90 192,177 139,186 95,50 71,113 47,37 19", "8,187 193,84 183,193 45,171 124,160 156,27 141,12 ", "173,132 142,157 77,143 141,20 2,179 77,17 57,185 1", "32,96 91,117 181,71 97,133 193,144 15,151 18,157 1", "30,176 42,70 149,94 176,136 9,30 62,9 27,92 103,19", "2 11,102 67,27 118,122 168,173 68,140 8,98 74,105 ", "1,166 165,82 136,191 100,77 101,65 69,155 120,169 ", "177,40 6,99 117,92 23,184 3,192 196,97 50,117 167,", "31 10,175 93,103 161,123 65,47 172,55 22,24 152,11", "4 192,137 184,138 72,176 58,146 56,68 160,78 176,1", "35 29,115 90,104 63,102 90,82 143,67 142,180 146,6", "3 4,153 123,143 60,109 81,116 92,6 96,165 189,59 1", "31,41 76,149 94,188 186,9 143,119 43,44 100,200 19", ",143 38,87 15,198 46,43 151,110 185,18 171,57 106,", "79 88,90 114,28 154,142 115,163 67,93 35,26 134,17", "8 73,194 121,175 89,112 178,199 34,195 169,49 99,1", "1 67,174 99,159 174,154 70,142 61,60 183,89 16,51 ", "19,129 84,13 126,200 140,25 26,8 200,159 49,42 168", ",51 66,193 92,72 13,61 115,32 155,121 180,28 111,4", "4 98,50 62,120 31,11 85,81 167,141 60,64 41,58 137", ",39 176,83 160,21 51,85 125,145 187,29 80,2 64,190", " 94,162 69,65 199,76 138,23 133,14 7,144 39,1 14,7", "8 28,58 15,124 33,196 11,94 154,170 37,10 164,53 1", "05,152 49,150 44,33 54,22 187,145 92,115 131,148 6", "8,48 162,161 158,141 157,24 99,164 32,111 190,197 ", "191,15 28,182 147,129 9,168 15,106 153,46 119,24 5", "2,27 157,108 24,45 127,179 129,161 86,134 20,52 81"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 100: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 100: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test101() {
    int n = 200;
    vector<string> edges = {"10 132,81 146,169 171,145 170,102 1", "54,176 114,192 173,183 152,183 83,96 169,175", " 81,3 6,36 27,60 18,193 ", "23,129 98,184 148,63 4,192 ", "28,171 44,46 106,179 34,163 126,158 100,173", " 99,4 104,95 50,118 200,114 77,105 199,113 111,1", "91 138,28 54,36 137,132 42,86 85,73 57,25 130,34 3", "0,34 80,31 96,133 15,9 48,166 130,10 79,101 65,152", " 62,199 181,39 180,59 123,90 120,156 125,83 118,62", " 73,147 69,18 70,30 124,89 55,120 127,152 191,174 ", "113,146 170,1 131,155 160,183 181,50 116,5 195,88 ", "178,110 94,26 188,66 18,64 39,17 158,109 175,125 1", "78,181 126,41 43,33 36,141 22,161 114,13 176,200 6", "1,142 91,173 96,100 134,124 113,80 113,33 12,160 7", "2,196 45,166 144,49 124,61 163,165 74,133 101,53 1", "5,54 31,77 198,98 41,75 71,20 8,175 3,45 26,194 12", "5,138 90,131 55,51 151,74 37,111 34,62 127,32 131,", "103 122,97 95,189 31,37 91,6 150,144 130,123 48,11", "9 137,134 85,40 53,115 78,133 166,106 52,182 70,52", " 139,168 56,195 36,73 118,143 184,16 197,36 119,12", "7 57,140 86,123 68,76 21,195 137,177 124,151 128,1", "2 195,69 190,82 37,172 38,25 40,164 88,130 123,43 ", "42,198 81,175 198,40 59,56 97,28 188,45 96,94 16,7", "3 61,48 40,47 57,59 48,112 10,180 84,85 46,113 34,", "170 109,12 36,109 114,108 182,182 23,176 161,27 19", "5,6 186,161 77,132 1,19 119,92 12,128 20,27 33,162", " 190,148 110,167 165,190 147,137 12,188 192,90 191", ",150 13,145 13,187 63,197 185,185 187,198 176,54 1", "73,11 115,74 136,29 172,23 108,19 137,118 163,81 1", "61,8 140,72 107,57 181,146 114,58 81,126 120,96 17", "1,22 155,68 53,26 31,181 153,122 168,93 11,44 189,", "120 138,149 25,43 129,25 53,65 48,176 145,2 88,169", " 192,186 109,87 150,157 102,117 167,78 157,199 47,", "28 171,138 47,54 196,77 3,79 112,35 51,15 40,197 1", "43,163 105,173 28,147 71,144 101,107 64,9 15,47 18", "3,73 83,135 125,38 17,189 99,127 118,24 95,105 153", ",53 149,116 24,86 35,154 93,14 190,21 165,120 200,", "121 99,139 29,7 2,104 185,84 141,61 152,159 188,17", "8 67,153 57,59 25,97 103,99 54,70 71,163 153,9 123"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 101: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 101: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test102() {
    int n = 200;
    vector<string> edges = {"49 178,18 177,198 24,95 145,70 97,105 ", "80,53 1", "95,41 125,179 151,70 53,109 167,69 4", "6,60 200,103 182,77 191,174 119,165 195,136", " 13,81 1", "93,114 6,28 99,99 129,55 143,95 26,6", "5 15", "6,74 23,114 121,12", "3 17,127 47,177 66,34", " 77,96 130,108 48,16 69,122 12", "9,87 186,27 40,10 82,26 163,1", "95 160,33 92,60 57,102 ", "75", ",13 85,", "172 124,21 175,73 199,181 149,13", "2 45,11 70,189 113,160 165,136 60,61 8,165 ", "70,180 20,166 125,46 78,170 17,137 117,164 187", ",50 187,184 78,33 195,200 112,22 64,165 11,63 1", "02,101 55,158 162,47 73,90 59,167 ", "79,138 56,53 33,100 29,200 85,133 109,36 83,85 55,", "3 155,37 12,29 75,146 94,163 49,58 112,130 108,170", " 197,115 22,187 148,141 1,131 171,59 189,162 171,1", "43 200,79 99,61 104,49 188,197 17,25 122,129 127,1", "91 181,184 186,107 36,75 100,117 86,154 190,176 13", ",95 168,35 170,180 98,14 8,170 156,174 154,102 29,", "168 26,200 101,106 165,3 65,125 146,178 196,176 10", "1,104 14,54 106,106 11,86 161,183 176,140 70,46 16", ",151 119,116 132,186 89,175 62,44 128,2 32,178 48,", "181 105,159 110,182 153,185 10,48 96,23 172,48 163", ",31 150,142 148,61 44,171 82,134 118,43 82,71 103,", "153 9,13 139,47 137,26 130,139 112,120 42,193 90,9", "7 116,175 84,110 150,199 137,163 52,66 118,96 26,4", " 81,137 133,144 33,112 136,96 145,85 60,38 39,126 ", "170,156 38,169 78,145 196,91 43,15 74,196 108,68 1", "02,8 128,108 95,42 179,161 133,147 87,148 40,14 62", ",57 183,160 53,139 136,92 11,195 54,135 41,67 146,", "119 120,110 31,150 100,133 99,188 96,169 93,62 61,", "64 71,32 7,45 144,1 61,17 51,24 6,130 178,106 140,", "30 149,84 61,156 126,76 40,122 79,88 115,96 95,155", " 126,173 87,130 145,8 84,52 178,19 98,79 133,84 14", ",82 185,5 2,94 157,111 110,96 108,113 15,128 141,1", "63 178,192 198,38 17,152 38,194 68,190 174,52 145,", "89 37,129 28,29 63,83 88,80 34,73 161,141 21,72 4,", "6 192,3 51,21 8,73 99,149 5,102 159,124 72,39 65,7", "9 25,138 173,7 30,25 117,197 35,118 148,44 175,51 ", "152,196 49,19 162,11 160,49 108,9 107,143 13,84 44"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 102: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 102: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test103() {
    int n = 200;
    vector<string> edges = {"141 144,52 ", "154,18 183,128 55,19 33,193 ", "9,109 42,123 2,5 179,7 50,", "117 22,125 159,93 68,139 160,79 114,160 1", "18,144 200,118 13", "9,35 61,22 18,2 43,160 137,6", "7 72,96 182,163 5,80 199,83 19,200", " 92,64 130,190 32,92 141,83", " 1", "5,123 152,25 ", "184,107 7,101 1,37 128,73 126", ",147 140,59 192,72 52,162 127,121 66", ",113 177,3 122,4 199,40 84,153 193,132 188", ",9 30,79 168,89 46,172 133,173 185,103 167,188 ", "92,15 86,67 170,49 15,111 41,182 186,196 197,78", " 106,150 153,62 1,131 82,81 167,6 96,143 51,120 76", ",132 92,53 75,12 58,110 145,47 49,187 175,156 114,", "82 133,167 79,122 73,156 128,86 116,169 180,185 59", ",21 68,133 191,24 172,152 138,69 134,98 9,93 120,1", "61 28,87 25,181 127,41 178,145 6,141 24,155 197,33", " 64,19 49,58 194,20 117,189 56,24 191,25 20,71 151", ",154 67,43 142,15 157,76 176,138 195,168 128,44 89", ",191 95,95 188,39 56,194 27,101 130,90 72,134 44,5", "5 79,30 150,16 102,26 57,30 153,191 144,146 158,97", " 141,5 165,68 31,100 32,177 54,174 16,137 66,116 1", "5,8 146,34 123,135 38,64 62,74 35,170 196,61 85,13", "0 33,144 132,106 77,198 10,179 123,148 198,14 163,", "199 181,157 64,133 94,193 73,46 148,112 56,175 74,", "110 58,32 45,142 5,152 142,88 123,154 108,47 116,3", "8 147,102 187,60 73,63 113,126 9,118 121,158 173,1", "97 90,84 99,178 100,49 101,50 129,97 24,149 107,3 ", "126,29 69,192 53,136 184,165 195,151 56,31 124,132", " 97,70 118,140 169,17 171,176 166,13 4,51 4,180 11", "9,152 14,159 8,37 55,104 47,85 174,36 156,66 70,65", " 115,1 157,115 21,99 17,184 91,30 3,11 29,10 109,4", "8 190,54 136,190 40,27 12,183 87,77 26,75 125,153 ", "9,57 135,150 73,94 132,73 9,130 47,126 150,4 80,62", " 104,105 65,127 143,80 127,130 104,114 168,195 88,", "193 126,164 189,186 110,86 62,171 149,23 196,129 4", "8,62 116,72 196,166 93,92 131,116 101,188 97,179 3", "4,73 3,156 103,55 168,66 139,36 168,42 11,1 83,45 ", "111,124 105,108 67,119 78,127 4,28 170,33 83,91 63"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 103: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 103: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test104() {
    int n = 200;
    vector<string> edges = {"140 119,55", " ", "40,55 199,77 16,158 29,43 15,138 102,54 148,6 ", "163", ",120 180,7", " 10,60 46,47 142,179 105,196 160,60 ", "154,199 37,167 64,78 7,", "38 1", "08,153 113,36 67,2 98,85 183,199 162,69 24,102 18", "4,84 65,200 96,168 87,186 69,171 91,91 68,163 134,", "137 1", "06,83 22,89 80", ",33 157,11 36,126 139,159 144,132 125,66 ", "172,149 50,12 1,179 80,198 115,1", "80 30,33 183,165 67,82 147,182 199,190 22,7", "1 144,4 53,40 152,133 75,10", " 51,200 153,134 145,105 193,75 34,140 98,", "81 28,124 3,154 158,9 ", "184,6", "5 63,125 146,114 59,131 62,57 192,9", "1 95,60 175,8 111,", "63 174,188 133,107 40,58 135", ",157 54,128 69,111 129,69 1", "60,3 100,113 97,105 84,189 27,116 193,155 151,116", " 63,27 96,87 39,109 131,174 65,98 117,59 104,35 4,", "21 90,37 55,79 116,161 82,96 150,42 134,65 80,29 1", "70,10 136,167 174,45 92,68 171,102 44,1 9,27 97,16", "7 179,91 46,14 25,183 103,72 58,37 40,182 55,134 3", "3,90 76,143 141,173 26,119 13,148 163,193 167,145 ", "127,150 118,73 99,80 167,118 200,167 63,170 68,142", " 35,25 21,164 57,189 150,70 128,46 170,172 92,13 9", "8,9 102,117 133,151 122,174 80,121 185,110 7,191 1", "4,109 70,70 196,50 195,112 149,136 111,188 140,51 ", "129,123 175,40 93,76 19,88 30,139 61,15 108,101 17", ",97 99,54 134,24 109,92 136,118 176,185 190,178 86", ",162 152,22 144,94 50,102 108,136 8,152 55,99 176,", "56 172,127 134,68 60,45 56,68 29,187 122,177 156,1", "13 27,65 89,176 73,95 46,93 182,169 161,129 136,17", "5 91,98 119,162 40,97 176,106 132,18 41,3 128,44 1", "2,32 177,17 144,49 67,7 8,147 191,48 9,27 200,118 ", "189,64 79,81 32,181 143,184 43,166 3,34 140,108 44", ",34 13,37 162,65 105,170 171,128 5,99 96,75 140,23", " 178,41 120,184 15,7 45,69 70,111 130,39 85,61 32,", "130 8,73 150,62 3,53 192,195 181,37 93,29 123,37 1", "07,86 23,80 116,179 89,51 78,2 133,141 198,146 169", ",57 16,66 10,104 114,43 12,197 10,96 113,26 159,10", "4 178,15 138,99 27,33 168,190 121,135 151,100 186,", "194 20,35 52,13 140,183 148,152 182,20 22,160 131,", "44 48,54 6,111 197,5 100,103 54,77 31,10 129,133 1", "19,115 94,19 137,150 176,96 97,127 33,32 126,74 13"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 104: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 104: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test105() {
    int n = 200;
    vector<string> edges = {};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 200;
    if(result == expected) {
        cout << "Test Case 105: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 105: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test106() {
    int n = 200;
    vector<string> edges = {"1 2,2 3,3 4,4 5,5 6,", "6 7,7 8,8 9,9 10,10 11,", "11 12,12 13,13 14,14 15,15 16,", "16 17,17 18,18 19,19 20,20 21,", "21 22,22 23,23 24,24 25,25 26,", "26 27,27 28,28 29,29 30,30 31,", "31 32,32 33,33 34,34 35,35 36,", "36 37,37 38,38 39,39 40,40 41,", "41 42,42 43,43 44,44 45,45 46,", "46 47,47 48,48 49,49 50,50 51,", "51 52,52 53,53 54,54 55,55 56,", "56 57,57 58,58 59,59 60,60 61,", "61 62,62 63,63 64,64 65,65 66,", "66 67,67 68,68 69,69 70,70 71,", "71 72,72 73,73 74,74 75,75 76,", "76 77,77 78,78 79,79 80,80 81,", "81 82,82 83,83 84,84 85,85 86,", "86 87,87 88,88 89,89 90,90 91,", "91 92,92 93,93 94,94 95,95 96,", "96 97,97 98,98 99,99 100,100 101,", "101 102,102 103,103 104,104 105,105 106,", "106 107,107 108,108 109,109 110,110 111,", "111 112,112 113,113 114,114 115,115 116,", "116 117,117 118,118 119,119 120,120 121,", "121 122,122 123,123 124,124 125,125 126,", "126 127,127 128,128 129,129 130,130 131,", "131 132,132 133,133 134,134 135,135 136,", "136 137,137 138,138 139,139 140,140 141,", "141 142,142 143,143 144,144 145,145 146,", "146 147,147 148,148 149,149 150,150 151,", "151 152,152 153,153 154,154 155,155 156,", "156 157,157 158,158 159,159 160,160 161,", "161 162,162 163,163 164,164 165,165 166,", "166 167,167 168,168 169,169 170,170 171,", "171 172,172 173,173 174,174 175,175 176,", "176 177,177 178,178 179,179 180,180 181,", "181 182,182 183,183 184,184 185,185 186,", "186 187,187 188,188 189,189 190,190 191,", "191 192,192 193,193 194,194 195,195 196,", "196 197,197 198,198 199,199 200"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 106: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 106: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test107() {
    int n = 200;
    vector<string> edges = {"1 2,2 3,3 4,4 5,5 6,", "6 7,7 8,8 9,9 10,10 11,", "11 12,12 13,13 14,14 15,15 16,", "16 17,17 18,18 19,19 20,20 21,", "21 22,22 23,23 24,24 25,25 26,", "26 27,27 28,28 29,29 30,30 31,", "31 32,32 33,33 34,34 35,35 36,", "36 37,37 38,38 39,39 40,40 41,", "41 42,42 43,43 44,44 45,45 46,", "46 47,47 48,48 49,49 50,50 51,", "51 52,52 53,53 54,54 55,55 56,", "56 57,57 58,58 59,59 60,60 61,", "61 62,62 63,63 64,64 65,65 66,", "66 67,67 68,68 69,69 70,70 71,", "71 72,72 73,73 74,74 75,75 76,", "76 77,77 78,78 79,79 80,80 81,", "81 82,82 83,83 84,84 85,85 86,", "86 87,87 88,88 89,89 90,90 91,", "91 92,92 93,93 94,94 95,95 96,", "96 97,97 98,98 99,99 100,100 101,", "101 102,102 103,103 104,104 105,105 106,", "106 107,107 108,108 109,109 110,110 111,", "111 112,112 113,113 114,114 115,115 116,", "116 117,117 118,118 119,119 120,120 121,", "121 122,122 123,123 124,124 125,125 126,", "126 127,127 128,128 129,129 130,130 131,", "131 132,132 133,133 134,134 135,135 136,", "136 137,137 138,138 139,139 140,140 141,", "141 142,142 143,143 144,144 145,145 146,", "146 147,147 148,148 149,149 150,150 151,", "151 152,152 153,153 154,154 155,155 156,", "156 157,157 158,158 159,159 160,160 161,", "161 162,162 163,163 164,164 165,165 166,", "166 167,167 168,168 169,169 170,170 171,", "171 172,172 173,173 174,174 175,175 176,", "176 177,177 178,178 179,179 180,180 181,", "181 182,182 183,183 184,184 185,185 186,", "186 187,187 188,188 189,189 190,190 191,", "191 192,192 193,193 194,194 195,195 196,", "196 197,197 198,198 199,199 200,1 200"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 107: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 107: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test108() {
    int n = 10;
    vector<string> edges = {};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 10;
    if(result == expected) {
        cout << "Test Case 108: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 108: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test109() {
    int n = 200;
    vector<string> edges = {"199 200,190 150,149 166"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 197;
    if(result == expected) {
        cout << "Test Case 109: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 109: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test110() {
    int n = 17;
    vector<string> edges = {"1 2,2 3,3 4,4 5,5 3,1 3,6 7,7 8,6 8,8 9,9 1", "0,10 11,11 9,12 13,14 15,15 16,16 17,14 17,14 16"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 110: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 110: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test111() {
    int n = 200;
    vector<string> edges = {"200 199"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 199;
    if(result == expected) {
        cout << "Test Case 111: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 111: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test112() {
    int n = 3;
    vector<string> edges = {"1 ", "2,3 ", "2"};
    CactusCount* pObj = new CactusCount();
    clock_t start = clock();
    int result = pObj->countCacti(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 112: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 112: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    test67() == 0 ? ++passed : ++failed;
    test68() == 0 ? ++passed : ++failed;
    test69() == 0 ? ++passed : ++failed;
    test70() == 0 ? ++passed : ++failed;
    test71() == 0 ? ++passed : ++failed;
    test72() == 0 ? ++passed : ++failed;
    test73() == 0 ? ++passed : ++failed;
    test74() == 0 ? ++passed : ++failed;
    test75() == 0 ? ++passed : ++failed;
    test76() == 0 ? ++passed : ++failed;
    test77() == 0 ? ++passed : ++failed;
    test78() == 0 ? ++passed : ++failed;
    test79() == 0 ? ++passed : ++failed;
    test80() == 0 ? ++passed : ++failed;
    test81() == 0 ? ++passed : ++failed;
    test82() == 0 ? ++passed : ++failed;
    test83() == 0 ? ++passed : ++failed;
    test84() == 0 ? ++passed : ++failed;
    test85() == 0 ? ++passed : ++failed;
    test86() == 0 ? ++passed : ++failed;
    test87() == 0 ? ++passed : ++failed;
    test88() == 0 ? ++passed : ++failed;
    test89() == 0 ? ++passed : ++failed;
    test90() == 0 ? ++passed : ++failed;
    test91() == 0 ? ++passed : ++failed;
    test92() == 0 ? ++passed : ++failed;
    test93() == 0 ? ++passed : ++failed;
    test94() == 0 ? ++passed : ++failed;
    test95() == 0 ? ++passed : ++failed;
    test96() == 0 ? ++passed : ++failed;
    test97() == 0 ? ++passed : ++failed;
    test98() == 0 ? ++passed : ++failed;
    test99() == 0 ? ++passed : ++failed;
    test100() == 0 ? ++passed : ++failed;
    test101() == 0 ? ++passed : ++failed;
    test102() == 0 ? ++passed : ++failed;
    test103() == 0 ? ++passed : ++failed;
    test104() == 0 ? ++passed : ++failed;
    test105() == 0 ? ++passed : ++failed;
    test106() == 0 ? ++passed : ++failed;
    test107() == 0 ? ++passed : ++failed;
    test108() == 0 ? ++passed : ++failed;
    test109() == 0 ? ++passed : ++failed;
    test110() == 0 ? ++passed : ++failed;
    test111() == 0 ? ++passed : ++failed;
    test112() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=22699784&rd=13510&pm=10077
********************************************************************************
#include <iostream> 
#include <sstream> 
#include <string> 
#include <vector> 
#include <deque> 
#include <queue> 
#include <stack> 
#include <stdio.h> 
#include <stdlib.h> 
#include <string.h> 
#include <math.h> 
#include <algorithm> 
 
using namespace std; 
 
class CactusCount 
{ 
 
public: 
 
int dfs_number[220], resp, grau[220], adj[220][220]; 
int dest[220*200], cont,nar; 
bool opa, pontes[220*220]; 
 
int dfs(int no, int pai){ 
  int mini,w,x; 
  dfs_number[no] = mini = cont++; 
   
  for(int i = 0; i < grau[no];i++){ 
    w = dest[adj[no][i]]; 
    if(!dfs_number[w]){ 
      x = dfs(w, no); 
      if(x < mini) 
        mini = x; 
      if(x == dfs_number[w]){ 
        pontes[adj[no][i]] = pontes[adj[no][i]^1] = true; 
      }//else c++; 
    }else if(dfs_number[w] < mini && w != pai) 
      mini = dfs_number[w]; 
  } 
//  if(c > 2) 
//    opa = false; 
//  printf("mini %d %d\n", no, mini); 
  return mini; 
} 
   
int countCacti(int n, vector <string> edges) 
{ 
  string e(""); 
  memset(dfs_number, 0, sizeof(dfs_number)); 
  memset(grau, 0 ,sizeof(grau)); 
  memset(pontes,false,sizeof(pontes)); 
  nar = 0; 
   
  for(int i = 0; i< edges.size();i++) 
    e += edges[i]; 
     
  int i = 0,a = 0,b = 0,c = 0; 
  while(i < e.size()){ 
    if(e[i] == ' '){ 
      a = c; 
      c = 0; 
    }else if(e[i] == ','){ 
      b = c; 
      c = 0; 
      adj[a][grau[a]++] = nar; 
      dest[nar++] = b; 
      adj[b][grau[b]++] = nar; 
      dest[nar++] = a; 
    }else{ 
      c *= 10; 
      c += e[i]-'0'; 
    } 
    i++; 
  } 
  if(c){ 
    b = c;   
    adj[a][grau[a]++] = nar; 
    dest[nar++] = b; 
    adj[b][grau[b]++] = nar; 
    dest[nar++] = a; 
  } 
  int temp; 
  cont = 1; 
  resp = 0; 
  for( i = 1; i<= n; i++){ 
    if(!dfs_number[i]){ 
      opa = true; 
      temp = cont; 
      dfs(i, i); 
      for(int i = 1; i<= n;i++){ 
        if(dfs_number[i] > temp){ 
          c = 0; 
          for(int j = 0; j < grau[i];j++){ 
            if(!pontes[adj[i][j]]) 
              c++; 
          } 
          if(c > 2)opa = false; 
        }  
      } 
      if(opa)resp++; 
    } 
  } 
  return resp; 
} 
 
 
 
}; 
 
 
 
// Powered by FileEdit
// Powered by TZTester 1.01 [25-Feb-2003]
// Powered by CodeProcessor

********************************************************************************
*******************************************************************************/