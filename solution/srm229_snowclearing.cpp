/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=3521
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class SnowClearing {
public:
    int unreachable(vector<string> citymap, int row, int column);
};

int SnowClearing::unreachable(vector<string> citymap, int row, int column) {
    int ret;
    return ret;
}


int test0() {
    vector<string> citymap = {"+-+-+-+-+-+-+", "| | | | | | |", "+-+ +-+ +-+ +", "| | | ", "+-+-+-+-+-+-+"};
    int row = 2;
    int column = 7;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<string> citymap = {"+-+", "| |", "+ +"};
    int row = 1;
    int column = 1;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<string> citymap = {"+-+-+", "| | |", "+-+ +"};
    int row = 1;
    int column = 3;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<string> citymap = {"+-+-+", "| |", "+-+-+"};
    int row = 2;
    int column = 2;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<string> citymap = {"+ +-+ +-+-+ +-+-+ +-+-+-+-+-+-+-+-+-+-+ +-+-+-+ +", "| | | | | | | | | | | |", "+ +-+-+-+ +-+-+-+ +-+ +-+-+-+-+ +-+-+-+ +-+ +-+-+", "| | | | | | | | | | | | | ", "+ +-+-+ +-+-+ +-+-+-+-+-+-+-+ +-+ +-+ +-+ +-+ +-+", "| | | | | | | | | | | |", "+-+-+ +-+-+-+ +-+ +-+ + +-+-+-+-+-+ +-+-+ +-+-+-+", "| | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+-+-+-+ +-+ +-+ +-+-+-+-+-+", " | | | | | | | | | | | |", "+ +-+-+-+-+ + +-+ +-+ +-+ +-+-+ +-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+ +-+-+-+ +-+-+ +-+-+ +-+-+ +-+-+", " | | | | | | ", "+-+-+-+-+-+-+ +-+-+-+ + +-+-+ +-+ +-+-+-+ +-+-+ +", "| | | | | | | | | |", "+ +-+-+-+-+-+-+ + +-+-+-+-+-+-+-+-+ +-+-+-+ + +-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+ +-+ + +-+ +-+-+-+ +-+-+ +-+ +-+", " | | | | | | | | ", "+-+ +-+-+-+-+-+ +-+ + +-+-+-+-+-+-+ + + +-+-+ +-+", " | | | | | | | | | | | | | | | | | ", "+-+-+ + +-+ +-+ +-+-+-+-+ + + + +-+-+ +-+-+-+-+-+", " | | | | | | | | | | | | | ", "+ +-+ + + +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | |", "+-+-+ +-+-+-+-+ +-+ + +-+-+-+-+ +-+ +-+-+-+-+-+-+", " | | | | | | | | | | | ", "+-+ + +-+-+-+-+ + +-+-+-+ +-+-+-+-+ +-+ +-+-+-+-+", " | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+ +-+-+-+-+-+-+ +-+ +-+ +-+ +-+-+ +-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ + +-+-+-+-+-+ +-+-+-+-+ +-+ + +-+-+", "| | | | | | | | | | | | | | | |", "+ +-+ +-+-+ + + +-+-+ + + +-+-+-+-+ +-+ +-+-+-+-+", " | | | | | | | | | | | | |", "+ +-+ +-+-+-+ +-+-+-+-+ +-+-+-+ +-+-+-+ +-+-+ + +", "| | | | | | | | | | | | ", "+-+-+-+-+-+-+-+ +-+-+ +-+-+-+-+-+ +-+-+ +-+-+ +-+", "| | | | | | | | | | | ", "+-+-+-+ +-+-+-+-+-+-+-+-+ +-+ +-+ +-+-+ +-+-+-+-+", " | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+ +-+-+ +-+-+-+ +-+ + +-+-+ +", " | | | | | | | | | | | |", "+ +-+-+-+-+-+ +-+ +-+ +-+-+-+ +-+-+-+-+-+ + +-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ + +-+-+-+ + +-+-+-+-+-+-+-+ +-+ +", " | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+ + + +-+-+ +"};
    int row = 10;
    int column = 12;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 160;
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 1;
    int column = 1;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 624;
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<string> citymap = {"+-+-+", "| |", "+-+ +", "| | |", "+-+-+"};
    int row = 3;
    int column = 3;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<string> citymap = {"+-+-+-+ + +-+ +-+-+ +-+ +-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ + +-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+ +-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+"};
    int row = 1;
    int column = 11;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<string> citymap = {"+ +-+", "| | |", "+-+-+", "| | |", "+-+-+", "| | |", "+-+-+", "| | |", "+-+-+", "| | |", "+-+-+", "| | |", "+-+-+", " | |", "+-+-+", " | |", "+-+-+", "| | |", "+-+-+", "| |", "+-+-+", "| | |", "+-+-+", " |", "+-+-+", "| |", "+-+-+", "| | ", "+-+-+", "| |", "+-+-+", " | |", "+-+-+", "| | |", "+ +-+", "| |", "+ +-+", " | ", "+-+-+", " | |", "+ + +", "| | |", "+-+-+", "| | |", "+-+-+", "| | |", "+ +-+", "| | |", "+-+-+"};
    int row = 8;
    int column = 3;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<string> citymap = {"+-+-+ + +-+-+ +-+ +", "| | | | | | | | |", "+-+-+-+-+-+-+-+-+-+", " | | | | | | | |", "+-+-+-+-+ +-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+-+-+-+-+", "| | | | | | | |", "+-+-+-+ +-+-+-+ +-+", "| | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+-+-+-+-+", " | | | | | | |", "+ + +-+-+-+-+-+-+-+", "| | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+", "| | | | | | | | ", "+-+-+-+-+-+-+-+-+-+"};
    int row = 10;
    int column = 10;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<string> citymap = {"+-+ +-+-+", " | | | ", "+-+ +-+-+", " | | |", "+ +-+-+-+", "| | | ", "+-+-+ +-+", " | | |", "+-+-+-+-+"};
    int row = 5;
    int column = 1;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<string> citymap = {"+-+-+", " | ", "+-+-+", " | ", "+-+-+"};
    int row = 2;
    int column = 2;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<string> citymap = {"+-+-+ +-+-+ +-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | |", "+-+-+-+ +-+-+ + +-+-+ +-+-+-+", "| | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+ +-+-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | |", "+ + +-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | |", "+-+ + +-+-+-+-+-+-+-+ + +-+-+", "| | | | | | | | | | |", "+-+-+ +-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+ +-+-+ +", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ + +-+-+-+ +-+ +", "| | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | |", "+-+-+ + +-+ +-+-+-+-+-+-+-+-+", " | | | | | | | | | |", "+ +-+-+-+-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | ", "+-+-+ +-+-+ + +-+-+ +-+-+-+-+", "| | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ + +-+-+-+-+-+"};
    int row = 13;
    int column = 6;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ + +-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 2;
    int column = 16;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ + +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+ +-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+ +-+-+-+-+-+-+-+ + +-+", " | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+ +-+-+-+-+-+-+-+-+ +", " | | | | | | | | | | | | | | | | ", "+-+-+-+ +-+-+-+ +-+-+-+-+-+-+ +-+-+ +-+-+", " | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+ +-+-+ +-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | | |", "+ +-+ + +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ + +-+-+ +-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ + +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+ +-+-+ +", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+", " | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+ +-+ +-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+ + +-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+"};
    int row = 15;
    int column = 19;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<string> citymap = {"+-+-+-+ + +-+-+-+-+-+-+-+-+-+-+ +-+ +-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+ +-+ +-+-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | |", "+ +-+-+-+ +-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+ + +", "| | | | | | | | | | | | | | | | | | | | | |", "+-+ +-+ +-+-+-+-+-+-+ +-+-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+ + +-+-+-+ +-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+ + +-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+ + + +-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+ + + +-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+ + +-+ + +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | ", "+-+-+ +-+-+-+-+ +-+ +-+-+-+-+-+-+ +-+-+-+-+ +-+-+", " | | | | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+-+-+-+-+-+-+ + +-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+ +-+-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+ + +-+-+-+-+-+-+-+-+-+ +-+-+-+-+ + +-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+ +-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+ +-+-+-+ +-+-+-+-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+ +-+ +-+-+-+-+ +-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+ + +-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+ +-+ + +-+ +-+ +-+-+-+ +-+ + +-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | | |", "+-+ + +-+-+-+-+ +-+-+ + +-+-+-+-+-+-+-+ + +-+ + +", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+ +-+-+-+ + +-+-+ + + +-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+ +-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+"};
    int row = 1;
    int column = 1;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 21;
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+ +-+-+ +-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+ + +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+ +"};
    int row = 12;
    int column = 4;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +"};
    int row = 12;
    int column = 4;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<string> citymap = {"+-+-+-+ +-+ + +-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | ", "+-+-+-+ +-+-+-+ +-+-+-+-+ +-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+ +-+ +-+-+-+ +-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+ + + +-+-+-+-+-+-+-+-+-+ + +-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | ", "+ + +-+-+-+-+ + +-+-+-+-+ +-+-+-+-+-+-+ +-+ +-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+ + +-+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ + +-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+ + +-+-+-+-+-+-+-+-+ +-+-+-+ +-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+ +-+-+-+-+-+-+-+ +-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+ +-+-+-+ +-+-+-+-+-+-+-+ +-+-+ +-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+ +-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ + +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+ +-+ +-+-+-+-+-+ + +-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+ +-+ +-+-+-+-+-+-+ +-+-+-+-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+ +-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+ + +-+-+ +-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+ +-+-+-+-+-+-+-+ + +-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ + +-+-+-+ +-+-+ +-+-+-+ +-+-+ +-+-+ +-+"};
    int row = 8;
    int column = 20;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<string> citymap = {"+-+-+-+ +-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | ", "+-+-+-+ +-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+ +-+ +-+-+-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+ + + +-+-+-+-+-+-+-+-+-+ + +-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | ", "+ + +-+-+-+-+ + +-+-+-+-+ +-+-+-+-+-+-+ +-+ +-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ + +-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+ + +-+-+-+-+-+-+-+-+ +-+-+-+ +-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+ +-+-+-+ +-+-+-+-+-+-+-+ +-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+ +-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+ +-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+ +-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+ + +-+-+ +-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+ + +-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+ +-+-+ +-+-+-+ +-+-+-+-+-+ +-+"};
    int row = 8;
    int column = 20;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+ +-+-+-+ +-+-+-+-+", " | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+ +-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | ", "+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+ + +-+ + + +", " | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+ +-+-+-+ + +-+ +", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ + + +-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | ", "+ +-+-+-+-+-+-+ +-+ +-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+ + +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+ +-+-+-+ +", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+ +-+-+-+ +-+ +-+ +-+-+ +-+-+"};
    int row = 10;
    int column = 2;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<string> citymap = {"+-+-+-+-+", "| | | |", "+ +-+ +-+", "| | | |", "+-+ +-+-+", "| | | | ", "+-+-+ +-+", " | | | ", "+-+-+-+-+", "| | | |", "+-+-+-+ +", "| | | | |", "+-+-+-+-+", "| | | | |", "+ +-+-+-+", "| | | | |", "+-+-+-+-+", "| | | | |", "+-+-+-+ +", "| | |", "+-+-+-+ +"};
    int row = 4;
    int column = 4;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<string> citymap = {"+-+-+ +-+-+-+-+-+-+-+ +-+ +-+-+-+", " | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+ +-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+ +-+-+-+-+ +-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +", " | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", " | | | | | | | | | | | | | |", "+ +-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 4;
    int column = 16;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+", " | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 4;
    int column = 16;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<string> citymap = {"+-+ +-+-+-+-+", "| | | | | | |", "+-+-+ +-+ + +", "| | | | |", "+-+-+ +-+ +-+", "| | | | ", "+-+-+ +-+-+-+"};
    int row = 2;
    int column = 6;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<string> citymap = {"+-+-+-+-+-+ +-+-+-+-+ +-+-+", "| | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | ", "+-+ +-+-+-+-+-+ +-+ +-+-+-+", "| | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ + +-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+ + +-+ +-+-+-+-+", "| | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+-+-+", " | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | ", "+-+-+-+-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 22;
    int column = 14;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+ +-+-+", "| | | | | | | |", "+-+-+-+-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+ +-+-+", "| | | | | | | |", "+-+-+-+-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+-+-+-+"};
    int row = 8;
    int column = 2;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<string> citymap = {"+-+-+ +-+-+-+-+-+ +-+-+-+-+-+ +", " | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ + +-+-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+ +-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+", " | | | | | | | | | | | | |", "+-+-+ +-+-+ +-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | | | | ", "+ + +-+-+-+ +-+-+-+-+-+-+-+ +-+", " | | | | | | | | | | ", "+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+ + +-+-+-+"};
    int row = 2;
    int column = 4;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 4;
    int column = 20;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+ +", "| | | | | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ + +-+ +-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ + +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+ + +-+-+", "| | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+ +-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ + +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ + +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+ + +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+ +-+-+ +-+-+"};
    int row = 10;
    int column = 4;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+"};
    int row = 10;
    int column = 4;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<string> citymap = {"+-+-+-+-+ +-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+ +-+ + +-+", "| | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+ +-+-+-+-+ + +-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", " | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ + +-+-+-+-+", "| | | | | | | | | | | | | |", "+ + +-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+ +-+ +-+-+-+-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+ +-+", "| | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+-+ + +-+ +-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", " | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+ + +-+-+-+-+-+ +-+-+-+-+"};
    int row = 16;
    int column = 6;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    vector<string> citymap = {"+ +-+-+-+-+-+-+-+ +-+-+ +-+-+-+ +-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+ + +-+-+-+-+-+ +-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+ +-+", "| | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+-+-+-+-+-+ + +-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+ +-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+ +-+-+ +-+-+-+ + +-+-+", "| | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+ +-+-+-+ +-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | ", "+-+ +-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+ +-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+ +-+-+ +-+ +-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+ +-+-+-+-+-+ +", " | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+ +-+ +-+-+-+-+", "| | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+ + +-+-+-+-+ +", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+-+-+-+-+ + +-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+"};
    int row = 18;
    int column = 12;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 12;
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    vector<string> citymap = {"+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+ +-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+ +-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+ + +-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+ +-+-+-+ +-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+ +-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+ +-+-+-+-+-+ +", " | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+ +-+ +-+-+-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+"};
    int row = 18;
    int column = 12;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    vector<string> citymap = {"+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+ +-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+"};
    int row = 18;
    int column = 12;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+ +-+ +-+-+-+"};
    int row = 2;
    int column = 16;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 2;
    int column = 2;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    vector<string> citymap = {"+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 10;
    int column = 8;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    vector<string> citymap = {"+-+-+-+-+ +-+ +-+ +-+-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+ +-+-+-+-+-+-+ +-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+ + +", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | ", "+-+-+-+ +-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+ +-+ +-+", "| | | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+ +-+", " | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+ + +-+ +-+-+ +-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+ + +-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | ", "+-+-+ +-+-+-+ +-+-+-+-+-+ +-+ +-+-+-+ +-+-+ +-+", " | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+ +-+-+-+-+-+ +-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+ + +-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+-+-+ + +-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ + +-+-+-+-+-+-+"};
    int row = 14;
    int column = 22;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    vector<string> citymap = {"+-+-+-+-+ +-+ +-+ +-+-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+ +-+-+-+-+-+-+ +-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | ", "+-+-+-+ +-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+ +-+", " | | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+ + +-+ +-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+ + +-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | ", "+-+-+ +-+-+-+ +-+-+-+-+-+ +-+ +-+-+-+ +-+-+ +-+", " | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+ +-+-+-+-+-+ +-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+-+-+ + +-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ + +-+-+-+-+-+-+"};
    int row = 14;
    int column = 22;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    vector<string> citymap = {"+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", " | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", " | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 14;
    int column = 22;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", " | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 14;
    int column = 22;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    vector<string> citymap = {"+-+ +-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ + +-+-+-+-+ +-+ + + +-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | ", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+ + + +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+ +-+-+-+-+-+ +-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+ +-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+-+-+ +-+-+-+-+-+-+-+"};
    int row = 16;
    int column = 10;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+ + +", "| | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | |", "+ +-+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | |", "+-+-+-+-+-+ +-+ +-+-+ +-+ +", "| | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+ + +"};
    int row = 4;
    int column = 12;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 8;
    int column = 14;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+ +-+ +-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+ +-+"};
    int row = 4;
    int column = 10;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+", "| | | | | | |", "+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | |", "+ +-+-+-+-+-+ +-+-+-+", "| | | | | | | | | |", "+-+-+-+ +-+-+-+-+ +-+", " | | | | | | | | ", "+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+", "| | | | | | | | | |", "+-+-+-+-+-+-+ + + +-+", "| | | | | | | | | ", "+-+-+ +-+ +-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | ", "+-+ + +-+-+-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+-+ +-+ +-+", " | | | | | | | | | |", "+-+-+-+-+-+ +-+ +-+-+", "| | | | | | | | | ", "+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | |", "+-+-+-+-+ + +-+-+-+-+", "| | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+", "| | | | | | | | |", "+-+-+-+-+ +-+ +-+-+-+", "| | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+"};
    int row = 2;
    int column = 6;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+ + +-+ +-+-+-+ +-+ +-+-+-+", " | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+ +-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+ + +-+ +-+ +-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | |", "+-+-+ +-+-+ +-+-+-+-+ +-+-+-+-+-+ +-+-+ +", "| | | | | | | | | | | | | | ", "+ + +-+ + + +-+-+ +-+-+ +-+-+-+ +-+-+ +-+", "| | | | | | | | | | | | | | | | | |", "+ +-+ +-+-+ +-+-+ +-+-+-+ + +-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | |", "+-+ + +-+-+ +-+-+-+-+-+-+-+-+-+-+ + +-+-+", "| | | | | | | | | | | | | | | | | |", "+-+ +-+-+ +-+ +-+ +-+-+-+-+-+ +-+ +-+-+-+", " | | | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+ + +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+ + + + +-+-+-+-+-+-+ + + +-+ +-+-+", "| | | | | | | | | | | | | | ", "+-+-+-+ +-+-+-+ +-+ + +-+-+ +-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | |", "+ + +-+ +-+ +-+ +-+-+-+-+ +-+-+-+ +-+ +-+"};
    int row = 6;
    int column = 4;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 23;
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+ +-+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | ", "+ + +-+-+ + +-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+ +-+-+-+ + +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+ +-+-+-+-+-+-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+ +-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+ +-+-+-+"};
    int row = 6;
    int column = 4;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    vector<string> citymap = {"+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ + +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+ +-+-+ +-+", "| | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+ +-+-+-+ +-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", " | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+ +-+-+ +-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+ +-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | |", "+ +-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 10;
    int column = 16;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    vector<string> citymap = {"+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+ +-+-+ +-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 10;
    int column = 16;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+ +-+-+ +-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 10;
    int column = 16;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 2;
    int column = 10;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    vector<string> citymap = {"+-+ +-+-+-+ + +-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+ + +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+ +-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | |", "+-+ +-+-+ + +-+-+ +-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | |", "+ +-+ +-+-+ +-+ + +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | |", "+ +-+-+-+-+ +-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | ", "+-+-+ +-+-+-+-+ +-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+ +", "| | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+-+ +-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+", " | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+ + +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+ +-+-+-+ +-+-+-+"};
    int row = 8;
    int column = 18;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+", "| | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +"};
    int row = 14;
    int column = 2;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+", "| | | | | | |", "+-+-+-+-+-+-+-+", "| | | | | | | |", "+-+-+-+ +-+-+-+", "| | | | | | | |", "+-+-+-+-+-+-+-+", "| | | | | | | |", "+-+-+-+-+-+-+-+", "| | | | | | |", "+-+-+ + + +-+-+", "| | | | | | | |", "+-+ + +-+-+-+-+", "| | | | | | | |", "+ +-+-+-+ + +-+", "| | | | | | | |", "+-+-+-+-+-+-+-+"};
    int row = 4;
    int column = 4;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    vector<string> citymap = {"+-+-+-+-+-+-+", "| | | | | |", "+-+-+-+-+-+-+", "| | | | | | |", "+-+-+-+-+-+-+", "| | | | | | |", "+-+-+-+-+-+-+", "| | | | | | |", "+-+-+-+-+-+ +", "| | | | | | |", "+-+-+-+-+-+-+", "| | | | | | |", "+ +-+-+-+-+-+", "| | | | | | |", "+-+ +-+-+-+-+"};
    int row = 8;
    int column = 2;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    vector<string> citymap = {"+-+-+-+-+-+-+", "| | | | | | |", "+-+-+-+-+-+ +", "| | | | | | |", "+ +-+-+-+-+-+", "| | | | | | |", "+-+-+-+-+-+-+", "| | | | | | |", "+-+ +-+-+-+-+", "| | | | | |", "+-+-+-+-+-+-+", "| | | | | |", "+-+-+ +-+-+-+", " | | | | | |", "+-+ +-+-+-+-+", "| | | | | | |", "+-+-+-+-+-+-+", "| | | | |", "+-+-+-+-+-+-+", "| | | | | | |", "+-+ +-+-+-+-+", " | | | | | |", "+-+-+-+-+-+-+", "| | | | | | |", "+-+-+-+-+-+-+", "| | | | | | |", "+-+-+-+-+-+-+", "| | | | | | ", "+-+-+-+-+-+-+", "| | | | | | |", "+-+-+-+-+-+-+"};
    int row = 6;
    int column = 4;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    vector<string> citymap = {"+-+-+-+-+-+", "| | | | | |", "+-+-+-+-+-+", "| | | | | |", "+-+-+-+-+-+", "| | | | | |", "+-+-+-+-+-+", "| | | | | |", "+-+-+-+-+-+", " | | | | |", "+-+-+-+-+-+", "| | | | | |", "+-+-+-+-+-+", "| | | | | |", "+-+-+-+-+-+", "| | | | | |", "+-+-+-+-+-+", "| | | | | |", "+-+-+-+-+-+", "| | | | | ", "+-+-+-+-+-+", "| | | | | |", "+-+-+-+-+-+", "| | | | | |", "+-+-+-+-+-+", "| | | | | |", "+-+-+-+-+-+", "| | | | |", "+-+-+-+-+-+"};
    int row = 12;
    int column = 6;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    vector<string> citymap = {"+-+ +-+-+-+ + +-+ +-+", "| | | | | | | | | | ", "+-+ +-+-+-+-+ +-+-+-+", "| | | | | | | | | |", "+-+-+-+-+-+-+ +-+ + +", "| | | | | | | | |", "+ + +-+-+-+-+-+-+-+-+", "| | | | | | | | |", "+ +-+-+ +-+-+-+-+-+ +", "| | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | |", "+-+-+ +-+-+-+-+ + +-+"};
    int row = 6;
    int column = 4;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    vector<string> citymap = {"+-+ +-+-+-+ + +-+ +-+", "| | | | | | | | | | ", "+-+ +-+-+-+-+ +-+-+-+", "| | | | | | | | | |", "+-+-+-+-+-+-+ +-+ + +", "| | | | | | | | | |", "+ + +-+-+-+-+-+-+-+-+", "| | | | | | | | |", "+ +-+-+ +-+-+-+-+-+ +", "| | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | |", "+-+-+ +-+-+-+-+ + +-+"};
    int row = 6;
    int column = 4;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    vector<string> citymap = {"+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | ", "+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ + +", "| | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | |", "+-+-+ +-+-+-+-+-+ +-+"};
    int row = 6;
    int column = 4;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    vector<string> citymap = {"+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+ +-+-+-+ +-+ +-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+ +-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+ +-+ +-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+ +-+ +-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | ", "+-+-+ +-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", " | | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+ +-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+"};
    int row = 6;
    int column = 22;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 6;
    int column = 22;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    vector<string> citymap = {"+-+ +-+-+-+-+-+-+ +-+-+ +-+-+-+-+ +-+-+-+-+ +", "| | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+ +-+-+-+-+-+-+ +-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+ +-+ +-+ +-+-+ +-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+ +-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+ +-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+ +-+", " | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+ +-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ + +-+-+-+ +-+ + +-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+ +-+-+-+-+-+-+ + +-+ +-+ +-+-+", "| | | | | | | | | | | | | | | |", "+-+ +-+-+ +-+-+-+-+-+ +-+-+-+ + +-+ +-+-+-+-+", " | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ + +-+-+-+ +-+-+-+ +-+ +-+-+ +", " | | | | | | | | | | | | | | | |", "+ +-+ +-+-+ +-+-+-+-+ + +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | ", "+-+ +-+-+ + + + +-+ +-+-+-+ + + +-+-+-+-+ +-+", " | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+ + +-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+ +-+-+ +-+-+ +-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | ", "+-+-+-+ +-+-+-+-+-+-+ +-+-+-+ +-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+ +-+-+-+ +-+-+-+-+ +", " | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+ +-+-+-+-+-+ + +-+-+-+-+-+-+-+"};
    int row = 2;
    int column = 22;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 27;
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    vector<string> citymap = {"+-+ +-+-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", " | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+ + +-+ +-+ +-+-+", "| | | | | | | | | | | | | | | | | |", "+-+ +-+-+ +-+-+-+-+-+ +-+-+-+-+ +-+ +-+-+-+-+", " | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+ +-+-+ + + + +-+ +-+-+-+ +-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+ +-+-+ +-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+ +-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+ +", " | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+-+-+-+ +-+-+-+-+-+-+-+"};
    int row = 2;
    int column = 22;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    vector<string> citymap = {"+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+ +-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+ + +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+ + +-+-+-+-+ +-+-+ +-+-+-+-+-+-+-+ +-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ + + +-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+ + +", "| | | | | | | | | | | | | | | | | | ", "+ +-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+-+-+ + +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | | | | |", "+-+ + +-+-+-+-+-+-+-+-+-+ + +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+ +-+-+-+-+-+-+-+ +-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+ +-+-+-+-+ +-+-+ +-+-+-+-+-+-+ + +", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+ +-+-+-+-+-+-+ +-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+ + +-+-+-+ +-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+ +-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+ +-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | |", "+-+-+ + +-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+ + +-+"};
    int row = 2;
    int column = 22;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test67() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+ + +-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | ", "+ +-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+ + +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+ + +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+ +-+-+"};
    int row = 2;
    int column = 22;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 67: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 67: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test68() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+ + +-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+ + +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 2;
    int column = 22;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 68: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 68: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test69() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+ +-+ +-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 12;
    int column = 16;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 69: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 69: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test70() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+ +-+ +-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 12;
    int column = 16;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 70: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 70: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test71() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 12;
    int column = 16;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 71: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 71: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test72() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+ + +-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+ +-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ + +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+ +-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ + +-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+ +-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+ +-+-+-+-+-+"};
    int row = 2;
    int column = 4;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 72: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 72: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test73() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+ +-+-+", " | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+ +-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 14;
    int column = 24;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 73: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 73: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test74() {
    vector<string> citymap = {"+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+ + +-+-+-+-+ +-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+ +", " | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+ +-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+ +-+-+-+-+ +-+-+-+-+-+-+-+"};
    int row = 10;
    int column = 6;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 74: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 74: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test75() {
    vector<string> citymap = {"+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+ + +-+-+-+-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+ +", " | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+ +-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+ +-+-+-+-+ +-+-+-+-+-+-+-+"};
    int row = 10;
    int column = 6;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 75: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 75: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test76() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", " | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+ +-+ +-+-+-+-+-+-+ + +-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+-+-+ +-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+ + +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+ +-+-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+"};
    int row = 24;
    int column = 14;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 76: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 76: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test77() {
    vector<string> citymap = {"+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+ +-+-+ +-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+-+-+-+-+-+ +-+ +-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+ +-+ +-+-+ + +-+-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | | ", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+ + +-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+ + +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ + +-+", "| | | | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 20;
    int column = 2;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 77: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 77: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test78() {
    vector<string> citymap = {"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+ +-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ + +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+ +-+ +-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+"};
    int row = 20;
    int column = 2;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 78: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 78: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test79() {
    vector<string> citymap = {"+-+ + +-+-+-+-+-+-+-+-+-+-+-+ +-+ +-+ +-+ +-+-+-+", " | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ + + +-+ +-+-+-+-+-+-+ +-+-+ +", " | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | ", "+-+-+ +-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+ +-+ +-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ + + +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+ +-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | ", "+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+ +-+ +-+-+-+-+-+ +-+-+-+-+-+ +", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ + +-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+-+-+ +-+-+-+ + +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+ +-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ + +-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", " | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ + +-+-+-+ +-+-+-+ + +-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+-+ +-+-+ +-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+ +-+ +-+ +", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+ +-+-+-+ +-+-+-+ + +-+-+"};
    int row = 14;
    int column = 14;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 11;
    if(result == expected) {
        cout << "Test Case 79: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 79: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test80() {
    vector<string> citymap = {"+-+ +-+-+-+-+-+-+-+-+-+-+-+-+ +-+ +-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+ +-+-+-+-+-+-+ +-+-+ +", " | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+ +-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ + +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | ", "+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+ +-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+ +-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+", " | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+-+ +-+-+-+-+ +-+-+-+-+-+-+-+ +-+", "| | | | | | | | | | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+-+-+-+-+-+", "| | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+ +", "| | | | | | | | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+"};
    int row = 14;
    int column = 14;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 80: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 80: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test81() {
    vector<string> citymap = {"+ +-+ +-+-+ +-+-+ +-+-+-+-+-+-+-+-+-+-+ +-+-+-+ +", "| | | | | | | | | | | |", "+ +-+-+-+ +-+-+-+ +-+ +-+-+-+-+ +-+-+-+ +-+ +-+-+", "| | | | | | | | | | | | | ", "+ +-+-+ +-+-+ +-+-+-+-+-+-+-+ +-+ +-+ +-+ +-+ +-+", "| | | | | | | | | | | |", "+-+-+ +-+-+-+ +-+ +-+ + +-+-+-+-+-+ +-+-+ +-+-+-+", "| | | | | | | | | |", "+-+-+-+ +-+-+-+-+-+-+-+-+-+-+ +-+ +-+ +-+-+-+-+-+", " | | | | | | | | | | | |", "+ +-+-+-+-+ + +-+ +-+ +-+ +-+-+ +-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | |", "+-+-+-+-+-+ +-+-+ +-+-+-+ +-+-+ +-+-+ +-+-+ +-+-+", " | | | | | | ", "+-+-+-+-+-+-+ +-+-+-+ + +-+-+ +-+ +-+-+-+ +-+-+ +", "| | | | | | | | | |", "+ +-+-+-+-+-+-+ + +-+-+-+-+-+-+-+-+ +-+-+-+ + +-+", "| | | | | | | | | | | | | | | | |", "+-+-+-+ +-+-+-+-+ +-+ + +-+ +-+-+-+ +-+-+ +-+ +-+", " | | | | | | | | ", "+-+ +-+-+-+-+-+ +-+ + +-+-+-+-+-+-+ + + +-+-+ +-+", " | | | | | | | | | | | | | | | | | ", "+-+-+ + +-+ +-+ +-+-+-+-+ + + + +-+-+ +-+-+-+-+-+", " | | | | | | | | | | | | | ", "+ +-+ + + +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ +-+-+", "| | | | | | | | | | | | |", "+-+-+ +-+-+-+-+ +-+ + +-+-+-+-+ +-+ +-+-+-+-+-+-+", " | | | | | | | | | | | ", "+-+ + +-+-+-+-+ + +-+-+-+ +-+-+-+-+ +-+ +-+-+-+-+", " | | | | | | | | | | | | | | | ", "+-+-+-+-+-+-+ +-+-+-+-+-+-+ +-+ +-+ +-+ +-+-+ +-+", "| | | | | | | | | | | | | | |", "+-+-+-+-+-+-+ + +-+-+-+-+-+ +-+-+-+-+ +-+ + +-+-+", "| | | | | | | | | | | | | | | |", "+ +-+ +-+-+ + + +-+-+ + + +-+-+-+-+ +-+ +-+-+-+-+", " | | | | | | | | | | | | |", "+ +-+ +-+-+-+ +-+-+-+-+ +-+-+-+ +-+-+-+ +-+-+ + +", "| | | | | | | | | | | | ", "+-+-+-+-+-+-+-+ +-+-+ +-+-+-+-+-+ +-+-+ +-+-+ +-+", "| | | | | | | | | | | ", "+-+-+-+ +-+-+-+-+-+-+-+-+ +-+ +-+ +-+-+ +-+-+-+-+", " | | | | | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ +-+-+ +-+-+ +-+-+-+ +-+ + +-+-+ +", " | | | | | | | | | | | |", "+ +-+-+-+-+-+ +-+ +-+ +-+-+-+ +-+-+-+-+-+ + +-+-+", "| | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+ + +-+-+-+ + +-+-+-+-+-+-+-+ +-+ +", " | | | | | | | | | | | | |", "+-+-+-+-+-+-+-+-+-+ +-+-+-+-+ +-+-+-+ + + +-+-+ +"};
    int row = 10;
    int column = 12;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 160;
    if(result == expected) {
        cout << "Test Case 81: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 81: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test82() {
    vector<string> citymap = {"+-+-+", "| | |", "+-+-+"};
    int row = 1;
    int column = 1;
    SnowClearing* pObj = new SnowClearing();
    clock_t start = clock();
    int result = pObj->unreachable(citymap, row, column);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 82: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 82: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    test67() == 0 ? ++passed : ++failed;
    test68() == 0 ? ++passed : ++failed;
    test69() == 0 ? ++passed : ++failed;
    test70() == 0 ? ++passed : ++failed;
    test71() == 0 ? ++passed : ++failed;
    test72() == 0 ? ++passed : ++failed;
    test73() == 0 ? ++passed : ++failed;
    test74() == 0 ? ++passed : ++failed;
    test75() == 0 ? ++passed : ++failed;
    test76() == 0 ? ++passed : ++failed;
    test77() == 0 ? ++passed : ++failed;
    test78() == 0 ? ++passed : ++failed;
    test79() == 0 ? ++passed : ++failed;
    test80() == 0 ? ++passed : ++failed;
    test81() == 0 ? ++passed : ++failed;
    test82() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=12031154&rd=6518&pm=3521
********************************************************************************
#include <string> 
#include <vector> 
#include <iostream> 
#include <algorithm> 
#include <sstream> 
 
#include <cstdio> 
#include <cstdlib> 
 
#include <cmath> 
 
#include <functional> 
#include <numeric> 
#include <cctype> 
#include <climits> 
 
#include <queue> 
#include <map> 
 
using namespace std; 
 
typedef vector<string> VS; 
 
#define si size() 
#define cs c_str() 
#define pb(x) push_back((x)) 
#define mp make_pair 
 
#define fi(i,S) for (int i=0;i<(S);i++) 
 
int dx[]={1,0,-1,0}; 
int dy[]={0,1,0,-1}; 
int reach[25][25][4]; 
int ok[25][25][4]; 
int clear[50][50]; 
VS m; 
int r,c; 
int check(int a,int b,int d) 
{ 
  //printf("%d %d\n",m.si,m[0].si); 
  //printf("check (%d,%d)\n",2*a+dx[d],2*b+dy[d]); 
  if(2*a+dx[d]>=0 && 2*a+dx[d]<m.si && 2*b+dy[d]>=0 && 2*b+dy[d]<m[0].si && 
    m[2*a+dx[d]][2*b+dy[d]]!=' ') 
    return 1; 
  return 0; 
} 
 
int dfs(int i,int j,int d,int start) 
{ 
  //printf("(%d,%d)\n",i,j); 
  if(i==r && j==c && !start) return 1; 
  if(reach[i][j][d]) return ok[i][j][d]; 
  reach[i][j][d]=1; 
  fi(k,4) 
  { 
    if((d+2)%4==k) continue; 
    if(check(i,j,k)) 
    { 
      //printf("go (%d,%d) in dir (%d,%d)\n",i,j,dx[k],dy[k]); 
      int result=dfs(i+dx[k],j+dy[k],k,0); 
      clear[2*i+dx[k]][2*j+dy[k]]|=result; 
      ok[i][j][d]|=result; 
    } 
  } 
  return ok[i][j][d]; 
} 
   
class SnowClearing { 
  public: 
  int unreachable(vector <string> citymap, int row, int column)  
  { 
    row--; column--; r=row; c=column;m=citymap; 
    memset(reach,0,sizeof(reach)); 
    memset(ok,0,sizeof(ok)); 
    memset(clear,0,sizeof(clear)); 
    dfs(r,c,0,1); 
    dfs(r,c,1,1); 
    dfs(r,c,2,1); 
    dfs(r,c,3,1); 
    int ret=0; 
    fi(i,m.si)fi(j,m[0].si)  
      if (m[i][j]=='-' || m[i][j]=='|') 
        ret+=1-clear[i][j]; 
    return ret; 
  } 
 
 
}; 
 
 
 
// Powered by FileEdit
// Powered by TZTester 1.01 [25-Feb-2003]
// Powered by CodeProcessor

********************************************************************************
*******************************************************************************/