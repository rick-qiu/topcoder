/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=2343
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class Hangman {
public:
    string guessWord(string feedback, vector<string> words);
};

string Hangman::guessWord(string feedback, vector<string> words) {
    string ret;
    return ret;
}


int test0() {
    string feedback = "N-N-A";
    vector<string> words = {"NINJA", "NINJAS", "FLIPS", "OUT", "FRISBEE"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "NINJA";
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    string feedback = "B--B--";
    vector<string> words = {"BRINGS", "BARBED", "BUBBLE"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "BARBED";
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    string feedback = "---------";
    vector<string> words = {"MONKEY", "FORCE", "IS", "GAINING", "STRENGTH"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "";
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    string feedback = "-AAA--";
    vector<string> words = {"CAAABB", "BAAACC"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "";
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    string feedback = "---H-O-H-B-OPHOB--";
    vector<string> words = {"ROSACEA", "GYROVAGUE", "SHACONIAN", "ALTITONANT", "BRACHIATION", "CERCOPITHECAN", "SCOLECOPHAGOUS", "RESISTENTIALISM", "SLUBBERDEGULLION", "AICHMORHABDOPHOBIA", "SPECTOCLOACAPHOBIA", "ULTRACREPIDARIANISM", "HIPPOPOTOMONSTROSESQUIPEDALIAN", "CHARGOGGAGOGGMANCHAUGGAGOGGCHAUBUNAGUNGAMAUGG"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "AICHMORHABDOPHOBIA";
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    string feedback = "------------";
    vector<string> words = {"FANGORIOUSLY"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "FANGORIOUSLY";
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    string feedback = "--------------------------------";
    vector<string> words = {"WYOMWUZPGVJRAHPVMTLTPTODLNTEMS", "DSLZDVEVETHRSDV", "LYOMWLZTFVNAONVRVCIHDVPGAUFOCT", "LSLPQNSEELCCYXFKQLPWQOEOGPPMTQU", "XSRIHCWECQOKMDTVWHDUPBRCFXRMMNRPA", "WTJOYEDYABDWSA", "FEIJUNUDKDBOOIVHXTJFFOBNCXDYBIKYNSGNKP", "LAPOFACWVRNDSAQCYHZHJFGXXCEUFACIBEDXF", "XXDOYPGJUBPFQPLKPYKEOQBGXSKXKJTTFRJ", "FRRCAHDBSSRCBM", "RJBEIFMLPKVQBWHAKAWKPWPUPORAIUWSXNUFUWQ", "GUSCWHMEZQEHVJGGZADAQKCSRNBGWCSWHQ", "WXLJLAUCREBAQXLGRADOMHIPZDSUQROOGMRQUZQPNLY", "SQQOLZPEIQLRMUAJVXQT", "JXLWBYEDDPTRVZFKPYJDBTALLTOXWMTGUONSTXUKBATERIUZ", "HMWCCDDXIJVBVGXGHFFWWXVPBEEJLEXQ", "SZVJETAVVSQXUAKXGXAFUIZQVJODXYWLQQADHOPKTNAIMB", "ZSVPVTAQJH", "YNZLIMBGWPBHCHYFOGSGLOZQEGYCHMYHKOUPIGSUEBWAV", "HXGAASEEDNUXAVOOWYDUBVOLYSHFMFRRGGMNIEFTQ", "BWBAQPUSWLABHGNBYIHZ", "HQGFECTBSOCZ", "PZBGUXSBJRFJRHNFCVVMYPWVHDRZKREETM", "OOKKVHQRYFIVCHVIOZJKWKNPCFIQCDVZCGOCJNHITKSCTQMK", "FEEFINVXMSYHVUGYNGMVHQL", "AKELNVMDNBFFPHUYGBDJJRJRMUTVHBTHIWKWULLUISWTDONC"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "HMWCCDDXIJVBVGXGHFFWWXVPBEEJLEXQ";
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    string feedback = "-G--Z-H--I--";
    vector<string> words = {"YGLOZRNHUITJPQ", "ECFKZDHUYIPYKGPAXFZKIQHXILKDD", "CGCRZVHMLIQK", "JGZSZVHTGIHET", "OGFSZBHIEIYGTHIAQSNPA", "OGATZVHOCIRRTTGGZFPMJFOYQRCFTTOW", "DGKSZBHMTIPTCBCLLGXLGTSQRCSALXGGPKZBRS", "PGBWZOXGQIWZSVZ", "FGVFZFHKOITKZIQMGBLQGQ", "MGCMZLNUTIELSV", "SGTJVLCQIITJZHPJVLQREGHVIRXTY", "GGGJZGHYYIPJUITOJBAINTPRPHUPMNONSQY", "MZUUZHHICIPB", "TGWXZEHFUILBHFHWVPLVZCOPP", "WGBIZIHMXILOPJXVYFNVRKZGRYHFESOZPNVOAVDJB", "JFTLZKHPWI", "QGTNZMHACIYOKNWTFMJYYU", "BODTZNHYOIHLPEBNANWJDOTXFLWOGQYDWTUDYFFT", "QGBTZRHQHIQZZBKKHBPIXAQCPAZBVXSPHQVQYBFVWOAMLCAT", "XGUFZAHJWKTJJIOLFELVSSM", "KLIOZQHZYITOJFBIBMURKWIBNPXF", "PGLIZRHHAIEATJOUGILMNLFUKEMAEZWORPRWLWDIXLAOVU", "GGVUZAHJUYWUQQMTTPMY", "SGNBZVHOYIJFFOAGMUKQBFDBVNVNVNGTPBRYLJFUWNMB", "YGVUZZHFSITKNDXVVEWSQJTXTJ", "DGIXZJHUSHZJGLNFKBZJONOKBHRQVUZEZGEELVGFFU", "VGRRZAHBVIIWRIECOWMVCQIIHHKOWBK", "YGZXZVHTPIYLJPAPCK", "GGAVZSHCYIT", "NGVNZVHQQIXRPIN", "OGISZOHFHI", "WGYTLIHEEIVPKCGINOOWBEERVQZAWROGZVKSVADCJNEWO", "GGDHZDHZUIQOXTISITZADNNRBBOUCSWXCFXMIWQOI", "JGBGZTHZVIUBSWIVQPCVWBLXKQXNPF", "JGIJZDHOOOIJFBIDLWGLRPGWEIPHJKWVJPGOLHBP", "LGUZZPHKVI", "XGVBZLHIDIFRLRKROEQSKIVUWZJACGGJXOMNN", "HRCJZZHXGIKLIOIPBCMVWWPTTUJQDRXFBRAHTN"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "CGCRZVHMLIQK";
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    string feedback = "--FH--L--U------M-------HEQZ-EYS---W--H--MA---";
    vector<string> words = {"BAFHMILSGULLHYHDGJG", "GDFHFMLFEUNORCPNMQRXOKMZHEQZWEYSS", "JMFHYELMEUZDCRHEMFTMAAQKHEQZ", "PHFHECLYPHFGXJADMMEQBNAGHEQZBEYSXPIWWDHEMM", "MKFHXHLENURPFKFW", "DQFHDSLIQUKFOGPWMLYIBPIYHEQZGEYSEVLWIZZTGMF", "TWFHRGAVIDZDTQJFM", "NUFHPOPCJUKVAON", "APFHIQLZZUONYHLWMTUVQGQVHEQZBEYSOKNWNWHDX", "QZFHUKLPJUTOXLOHMSOROACXHE", "ERFHJALAQUYYMBARMPVPY", "FSFHZBRPFUYUBYUYMEHSOGKAHEQCOEGSXCW", "ERFHPRLSNYLEOBUWMDKP", "ZNFHUYUBBUSTDYGRMNTNER", "TIFHZRAIAUUYKYEHMDVU", "BMFHZHLTSUSVFDDVM", "UYLHDPHCEUYCYTXAMRNHQFRQHEQGBEYSIEIWGVS", "WDFHHJLDSUIELKSPMW", "PRFHEZLIUUHIJYYQMNFSFKJEHEQZH", "VKFHIFLCAUMASMTPMNCRYOQNHEQZGEYSFWNWXAHUI", "XRFHROLTFUTMVZOIMMAGNKRDHVQZ", "ZUFHCQLYDUUCYZUUMSAEBXBDHEQZGE", "CYFHKDOZBURS", "RIXHYSLMPUTCPSHBMGQCCEZKHEQDPEKR", "MOFHOGLFNUQUNDJYMWPQ", "UNFHFULBJINQMHPEMBGZBLGFHEQZWEYSHVEQBLSBU", "GVFHUILXYUOAMM", "DKFFFRLEWUIWDNMCBGURN", "CLFHPPLSNUOVFAQ", "UKFHUHLPSUZQILBMMMCOXZHFHEQZNMYSYVAWHGHBGMATKTBUR", "QCFHPDLERU", "FLFHLLLEVUBAO", "DGFHLELSEUTYNCACMAJDSLSJHEVZTEYSYYMWZ", "VBFHFJLUFUJEZ", "NDFHIVLOKUXXOVIRMTTKBOKKHEQZPEYSJBDWVGHBCMAGPJ", "VAFHBXLXWURFVSWOMZJRWFPXHFQZHEYSODYWENHURMA", "TWLHPQLMBUMRTFWKMJTCBIMXHEQZFEYSEGF", "DEFHNOLKBUDMJNASMXOSQAUGHEQZJEYSFNFWIHHVUMARF", "QEFHIQFDLUCLICCMMYLUSOCPHEQZMEYSETZWVVHVX", "WAFHUWLTNUDGZFDTMPWJAXFXAEQ", "UEFHFSLBUUJPCKGMMTEWRV"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "NDFHIVLOKUXXOVIRMTTKBOKKHEQZPEYSJBDWVGHBCMAGPJ";
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    string feedback = "CLAPS---RR--EYE-SFVMPEXRCHQRHOGUMU-PW";
    vector<string> words = {"CLAPESUZRTEOKYBESFVMPEJRCHHRHOGUMUVJWWHVUJ", "CLAPSXMPRRPTEYELSFVMPEXRCHWRHOGUM", "CLAPSXOMRRPCEYEHSFFMPRXRCHJRHOGV", "CLAPSGZETRDGEYEKSFVM", "CLAPSISWRRZOEYERSFVMPEXRCHQRHOGUMUSP", "LLAPSRKWRRKDEYPLSFVMPEXRC", "CLAPKKIZRRTREYEMSFVMPEXR", "CLAPTMIMRRQBEYEGSFVMPEXRCHQRH", "ULZNSASYRXLNBYE", "CSAPZHKFRRTJEYEPSFVMPEXRCEQRHO", "CLAPSVNTRRWQEXENKFRSAUXR", "CLAXSQYZRGPXEQELSFIMHEGGCHQRHO", "CLAPSTKWRRPQ", "CLAPSBDDRRTJEYEISFVMPEXRCHQRHOGUMUKPW", "CLAPKNYPRRVIEYEDSFAKPE", "FLAYSEXCVROFEYETSJT", "CLAPSCYCRRHGEYEYSFVMPEXRCHQRHZGUMOHPWBXAIJCA", "CLAPSPGURRVIEYEMSF", "CTTPSXWURRJUEYEFSFVMPEQRCHQ", "CLHPSFHVRRYCUYBBSFG", "CLARSLHORTZIZCEHSFVMPEXRCHQRHOG", "CLAPSBMARRVZEYEZS", "CLAPSTIYRRHOEYEFSFVMPEXRCHQRHOGUMUGPWK", "CLAPSEKWCRPREYEISFVMPEXRCHQRHOGUMU", "CLAPSSFZRRTMEYEXSFVMPUX", "CLAPSORWRRDREYEQSF", "HLAPSAYHRLWPEYECSFVMPEXGCHQRHOGUMUTPWFGIGBHDFVR", "CLAPSXBHRRDUEYEESFVMPEXRCHQ", "CLAPSCXQRRBTEYEJSFVMP", "CLBPSGQCRROZEYEBS", "CLAPSIVTRRJZEYELS", "CLAPSHLGRRXTEYEVSFVMPEXRCHQ", "UXAPJQRGRTRAEYEQSFVMPEXVCHQRHOMFMUCPWORIHFJYYMC", "CLAPDSDJRRRJEYENSFVMPEXRCJQ", "CLZFSNXIRRDPEYEGSFVMQEXRCOQRHYGUMJUPW", "CPAPSVUJRRTAEYEBSDVMPEXRCHQPHOGOYULPWBNNMQATOVB", "KLAPSNXVRREQEYESSFVMFEGRCHQRHOGUMUQPWCCTIF", "PLAYSYWXRUSHEYELSFV", "CLAPSOQFRRYVEYEISFVMPEXRCHQRZOGURUVPWQTVUCNMC", "CLAPSQUVRRWREYEASFVV", "CTANBOLDRRMFDYENSFFMPEERPHQRHOGUMUIPWPZRARL", "CLAPIAMKRDMIEYEESFVMPEXRCHERHOGUMUAIWIYQREDTNCVGK", "CLAPSIJIRRNMEYWRSFRMPLX", "MBAPSBBPRRGVEQEJIFVMPHXRDHQRHOGCM", "CLAPSSWXRRWG", "COAPSDKORRSWEY", "CLAPSDZPRRWQEYEESFVHPEXRCHQRHOGUMUZP", "CLAPSBJYRRQCEYEXSFVMPEXRCHQR"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "CLAPSBDDRRTJEYEISFVMPEXRCHQRHOGUMUKPW";
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    string feedback = "YZ-ANOXGTQL";
    vector<string> words = {"YFXANOKGTQLQRGFV", "YZEANOXNTQLJDUEOQZDFXYZBZMQJKZ", "YXGANOVGTQLONCQ", "LZJANLXGTQLXZMSKEKFJJMHIXAQLQ", "YZXLNOXDHYILDGJQFBDSFSWUWGZCEVCALDTPTY", "YZBANODCTSLKPFNKSTORGVBLCSSPGGPGFKERG", "YZGANOXGTQ", "YZSANOXGTQBFIVZWH", "UZPANOEGAQLRABIQSFWTUHNKWURMBMITL", "YZDANOBHTQLIFSMAENTTTEDNFCYWQONNZYPPLBFPUSZZD", "YZFLZOQGTQLOWVD", "YZZANOXGTQLG", "YZNANOXTTQLJZZIL", "YZKANOXGTQLQLJAYR", "YZXANOBGTQLKQENRMWOEFCSTHQRTMDEATZJUDMDUTWUQYV", "YPIAIOMGXQLUOHEHGEZCOPCKFJIJSFCJMDZGBST", "YZTANOXGXQLRMETDJCLHORSFWSZEMQJEVNKSDYOUQLZRH", "YDZCNOXFTQLYMGZGOOYEGXAQVCSNXMA", "YZNANOXGTQLZEPZXJTURTGLKVXWD", "YIDANOYRTQQWVBHEUHTKDGNQCNRAPE", "UZVGNOXKBQLF", "YZLANOXGTQLGPTELHYZMBNQYZVQMPSQN", "YZCANOXGTQLHFXYPPUMAQVXGBCVMBKSAX", "YZHANOXGTQLGPGMEOGMLFGADJVJYEXPSKAZRJQDWS", "QZWANOXGTQLNAWZVEPXICIUOJEDVIUDISCJZADS", "YZYANOXGTQKBRHCJRYNKYCGFXXCWVXQWJDRRCEBLOGNRYV", "YZIANOXGTQLALQKMILLQQUDNSQRYIGAOPAVGVDKPW", "YSJNNOJGTWLPWOIVJVRUMSOELVLIYOGAMCRBAPBDPTTOG", "YZUANOXGTQLN", "YZOGNNXGTQLVXVVBIMQXPITMDFXEJXUIHXIXEDULJW", "YZZANOXGGQLSVMQY", "YZLANOXGTQLFFTBBJSQUXXIV", "YWTAWDXQTQLYZQQXTQBZVGCDEBVY", "YZMADOXGTQLMQI", "YZFANOXGTMLNWRDNOZMRSXRZSTQZUEFAF", "YZMANOWGTQLPM", "YZDINJXVTQLXBODBJHVBEJVIEDKBNKHNAZT", "YYMANOXGTQLHFRSDTBZOUWZQLENKMILJRYBJXHMDYRKOW", "YZOANOFPTQLBAVJSHYHSGHDSOXBURALMKZGRLLEAKOCWPD", "YZAANOXPTQLNEEEZLNTBAOTZOS", "TCFANOXGTQLTM", "YZLANOXGTPLQERFF", "YZJANOXGTQL", "AZBANKXGTQLCBASAQAY", "ZZSANOQGTQLPUEDBFFNQTLZBMSGZMWRTBDBJZA", "YZXANOXGPQLLZHIIMKOUEZCEPAPKUQVMCHNQHHKGSOQWOZB", "YZOANDXGTQLCGWAHAFHHPTONXQSENSXGJPLNSHJCH"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "YZJANOXGTQL";
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    string feedback = "MSKWE-FJP-GN---UATDS-RM-DNUW-TMT-KPKN--GO-";
    vector<string> words = {"MSKWCDFJPKGNXIRUPTDSERMDDSUWBTMT", "MSKWNFFJPDMNMHW", "MSLWEWFJRYGNJLSUATD", "SSKSEAFJPGGNQAFUATDSERMLDNYWWTMTLKPKNKV", "MSUWEDFJPNGMBOYU", "MSKWEKFJPOGNXFVUATLSURMBD", "MTKWEKFJPFGNIJDUATDSTRMJDEUWSTTTHKPKNPUGOKK", "MSKHEGFJPTGNSBQUATDSSRMAGNHW", "MCKWEEFJPCTNSUBUATDSQRMJDNUYMTHTSBPKNVXAOSAIUUZ", "MSMWELFJPFGNMVNUATDSCRMNDNUWXTMTW", "MSKWEWZJPLGNADDUASDSMRMCWNUWYTMTGKPKNJUGAVJX", "MSKWPQFJPJGNOXYU", "MSKWEYFJPZGNCZBUATDSZRMIDNUWZTMTQKPKNZZGOV", "MSCFUTFJPEPNQLTUATJSHRZPDNXWDTMTSK", "MSKWEKFJDUGNTMK", "CSQWESFJPIGNWBXUATDSLRMKDHUWIQMTCKPKNPZG", "MSKWEKFJPZGNDTUUATDSIRMSDNSWGT", "MLXWEDFRPPGNBDZDATDSYRUXDNOSTPMPEK", "MSKWEHFJPEGNADSUATDSSRMVDNUWPTMYQKPKNNY", "MSKWETFJPGG", "JSKWEQZJQRIHMZIUATDSJRMNDNUWXTMT", "MSKWYVFRPXGNOOBUA", "MSDWECFJPXGNNZQUATDSKRMKDNUWQTMNWKPKNSIGOBOMXDWA", "MSKWEUUJPXGNTYGUATDKWRMCDNUWJTMTCUPPNKTGSP", "MSKSECFJPMGNKRIUATDSPRMQDNU", "MSKWEPFJKVGNO", "MSKWEDFJPZZNBVXIATDSORMNDNUWPTMTPKPKNOU", "MSXWECFAYZGNMYJUA"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "MSKWEYFJPZGNCZBUATDSZRMIDNUWZTMTQKPKNZZGOV";
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    string feedback = "-----J-K----V------------G----";
    vector<string> words = {"AKZDUJPKBEMBQLXENQOQXXIMWGZBGJTUONFAYGMTYDN", "VMEOYJNKPLTLZVEDNSKHA", "MWDEDJHKXGRLVIRYQTJPMXNRVGQKLNEKSUGZCIYWAJS", "QPECCJPKXVZSVFRBXK", "UYODDJJKPXQZVBOAJQPWJNWDBGAJGH", "LOUIGJDKGYATVNCLCEPREZBOUGPE", "REYMOJBKNRKBVS", "TLIRLRDKOPPLVRVJAZMYZEJKFGXJWZDVGY", "HJWQPJMHOI", "ESLTGJNKPIUWVOLOLBOHJNUTSG", "NNPUSJYKQHXHVFORCDXVZXSOFGJJM", "SWEMOJHKVNWWV", "FEDJTJLKGE", "UFARNJKKHHBQVM", "UMIJOJSKWLOPVVC", "IZWIFJNKVUOHVUDDELCP", "KNTUPJRKCRWFVEWJCUWTLIERUGAIOSKYIIX", "JHNYTJZKGBAHVCDBQSFCFBYZBGFABUINFJKMPUPOHIG", "DFPPQJPKKJYKVZIQHGKKPUTMTGDQEJTUUNQHPBJIZ", "DBVPQJWKFRMAVAKWIBSROOAHWGHLIFPUWYBGJI", "YDZPMJIKGIBYVYDINHSHMHOLJGMDESUYVELTHAYQT", "IECFEJCKECROHXXCCHYZDKCNEGVJOXEATROSVBC", "RUAZLVIKWJPZKYHUEQBYRRXZEUYBBCJXK", "ZVKUHGHGJKZFVNDTWAOEOCYOEGDAHLSZSMQHKU", "ATRYXJCKZXQWVBNQHLOQDECWZGYCZU", "AJVOCJEKSQENVXEHKLFUFHRNYGFMIXXQAFRLVUJ", "YGKQJJZKGZIJVVIUICBOFGYDEGVJNKB", "FYKVFJSKSOUBVBRPCJBCYR", "SUVDYJAKVNVEVGYNCBVMWLNNBGIUKOPEWOZADZGAPRVPQG", "TGGVQUXKOZKQVCVAEWXRKANKUGZNMQROWVSEFAQLEVK", "LIXYPJOKWYAHVTGKIAOOADLKVGSWT", "KNKBOJJKIFYCVRTHJVVXBILITWYYGFZU", "YVTHXJIKXF", "WRBXWJIKFIKQVBVNLQPONPIPXGAPGCY", "DBCFUJSKOVPLVKTUZSICAAYGLGCMGLGWQJJZRRYEWCWQKOJ", "LPOSVJFKETVYVTGYREEDJYBPVGOLUOZQMXLHTBYLMAF", "OMYNDJJKQYUQVVQQZFZLSDQMZGVKVFBBNJLNUMGAWUEHSJZ", "WGCGDJXKOWYHVLWPKRIGNSRMGGFAJLLUNITGPXRJSSTSBWN", "YQWTVJKKEQBLVETISUKUKZKBOGL", "IWMCOJVKYRVYOHPCYTSYMRKZFGKCOJGBWPQTZVWTJWFGWQX"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "ATRYXJCKZXQWVBNQHLOQDECWZGYCZU";
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    string feedback = "-OYNFZWOJAMQJWYKWZBIQDB--VH-XSFBCO-";
    vector<string> words = {"HOYNFPWOMAMQJWYVWZBIQDBISVHSXSFBCO", "AOYNFZWOJPM", "AOYNFBWHJAMQJWYKBZBIPDBWPVHCBS", "FOYNOZWOJAMQJWYKW", "EOYNFZWOJAMQJWYKWZBIQDBPGVHTXSFBCOG", "COYOFZWOJA", "OOYNFZWOJAMQJWYAWWBIQDBFUV", "XOYNFKWOJAMQJYEKWZBIQDBCXEHQISFBCOITSAICRZXV", "XOYNFZROJARQJWYKWZBIQDBBBTHCXSFBCORILHFGRLAMNWML", "TOYNZZWOJAMQJWYKWGBIQWBCGVBRWSFBCOUMSJUP", "TOYNFZWOJAMQJWYKWZBIQDRMNVHSX", "XOYNFZWOJAMQJDYKWZBIQDBEDVHMXSFBCOXLTXSPQIR", "WRZNFZWOJAMQJWYKWZBIQDBDO", "BORJFMWNJAOQ", "POENDZWLJAMQ", "YOYNFZWOJAMQJWYKWZBIADABWVHBXSFBCOPSB", "XOYNOZWOJAMQTMRKWZBEQDBETRHXXSFBCO", "BOYNFZWOJAMQJWYKW", "BODNFZYOJAMMJXYYWZBIQDBZOVHLLSFBKOFSGWBOPEYFUBMTQ", "ZOYNFZWOJAMQJWYKCZBIQDBAE", "DOYNFZWOJAMQJWYKIZBI", "QOJNXZBOJAMSJWYKWZBIQ", "GOYNFZWOJALGJFJUWZBIQGBTXVBTXSFBC", "GOYNFUWOJAMQJWYKWZBIQDBYTVHFXSFBCOZDYKUZJVM", "GOYNFZWOJAMQYWLKWZBIQTBTAVHAXSYBCOFBLGOTQZKVMVQT"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "EOYNFZWOJAMQJWYKWZBIQDBPGVHTXSFBCOG";
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    string feedback = "D-------Y---P---V-P--X---------";
    vector<string> words = {"DJMZPCQUYXOJPMSAVDPJRXLGYVSHDZOAJISNN", "TASMEIQAYOLS", "DGZBTXKMYRFUPQFWVVPLFXIBJLMUVTTEVNYXEKRDTHHVL", "DTWOQKEKYSHNPNUEVJPUSXTRMGTROFI", "DPGSQNGFYWVLPYQXVPPDDXCDMHQFUSLTQFTWGFPZADHWME", "DUCKUMVUYHNJPLPZVVPKMX", "DINDLEFMYXRBPXZLVKKHWXFBADSWHLXHUARUBOAP", "DBTEAAEVYOLEPUGIVTPFNXJL", "DNASGKFAYUHDPPGLVZPMCXYTOQDSNDKJQZR", "TPCKLCTXQVHGPHSNVKPAV", "DTMSGSRCYJAXP", "DQFTCOZEYXXAPYHHVWPXSXWASWGKGIAHBZDFQIDSDJQACSGK", "DEZRVGYUYQMGPDUKVJP", "DLDNFXQNYALYPEGPVFPJXMRDUZHQNS", "DMOYMFIKYRZ", "DEYGLGOHYKHHPHAVVGPPTXKM", "JJGRYJRRYBLZPYGKTUYELXWVDRBXSCPLBWMY", "DJUTCEJFYKTAPLDJXRJNPXHJXPBLAJHGRMGAXSJOT", "DPAGHKKWYDFVDYXZVVPKWXTDBOG", "DHTJQCUTYZCZODHNVH", "DNXVKSNZYUQGPFBZDDPVJDSDVHCFAZNDSUAM", "DOEFXTXXYKALPODZVFPQXXSPDET", "DSSCPXLFYOWJPOZIV", "DHLFPFAWYKVRPQFNVRPZLXIDXVXGVQYGBKAILKKKSYNLWM", "FGZEAIAXPWLUPTOIVPPCIXMUZYVBSQKBLKJTQ", "DHKTUFEMYVILPHUOVOPUBLUSCPJFWCUPRVHVVPISUWKXOYE", "DMMSNRZEYGZLPCCPVYLUXXP", "DUSFXXVNYRPGPOIQNJOQMXYJIVYYMWDQNSVQSIXDPFCRUXF", "DEWZSENVEOTBUFBCVU", "DYTQNWZHYGGGPSEOCCHLIXQIQHHZJLHZ", "DYFXNZMXYB", "DNJLOKYRYIFZRF", "DZCWFNNMRZNSP", "DVJCLMXLXL", "DHODERUNYQGNPMQIVQPYBXYAEG", "DXESXXZZYHAZPNQFVKPCQXMZUZXYAUZ", "DRZVQUNHYWXCPKDWVNMCMDKCGAGLVCHI", "RSFUWRZPYLEQPHBIVEPSMXJXKIFOHAA", "DAYCWYPXYWNZPFINVHPAZXNTNXDY", "DPSYZSVKYUVJPNCP", "DFXRKHPJYPKTPBOKVQPNYXYSLJMAB", "DSSRYSERYMPOPWNJVAPTVXELAGQWZLUVUMD", "RKKLSJKSYJEYPTNLVUPNAYLQQPSHAQNNAIBNO"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "DTWOQKEKYSHNPNUEVJPUSXTRMGTROFI";
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    string feedback = "TEJZT-ZY-M-TLCRC-XEJX-";
    vector<string> words = {"TEJZTQZYTMDTLCRCJXEJXUDCPXHSRPYR", "TEJZTZZYSMOTLCRCRXEJXAEDJNOSTXGZ", "CEJZTXZEOMGTLCTCOOUJXMAOFYAVYIIDMWLLQAXQHGWJL", "TEJZTAZYWMRTLCRCZXENXQYWWDEAJVBELZNE", "TEJZTHZPHMRTLCRCXXEJUXOGZUOXGKSCMQOKWHOUDLPN", "TEJZTLZYXMDTLDRCVXEJXNZXJCRKVGNBTJQGR", "TEJZTDZYIMTT", "TEJZTMZYSIWTLCRQQXEIXVLZUUTWHUV", "TEJZTDZYCMLALCRCLVEJXSIKSWGWFNOOFYGBW", "TEJZTFZYZMQTLLRCYXEJXLKHALDQXZCVLVKVKTXDARP", "TEJZTZZYVMZTLCRCLXEJUAQUYPZRO", "TEJZTHZYVMWTLCROCXEJX", "TEBVTBBYRMBTLNROLXEJXE", "TEJZTDZYLLJTLCRCBSEJXG", "TEJITXZYPMITNCIDMREOXRUSIOWJPGTMK", "TVCRTAZYKMPTLCRCZXEJXGTX", "TEJPTSZYIMPTKKRZEXEJ", "TEJZTLZYTMYTLCRCSXZXFHGFTMJXIZWDAUDIF", "MESZTPZYTMBTLCRCRXEJXRUVEDICWMIHUOEQVDLCHUCOY", "TEJZTBZYXMETLCRCMXEJXLPSGJSEYASNXSOQDKQXMXFL", "TEJZTHZYZMQTLC", "TEXLTBZYDMATLCRCWXEJXVPOAZCDFXFDQDUNFQCEZAUOUWKD", "TEJZTUZYRMOTLCRCBXEJXYYFUSWHBQQPOPRRJKF", "TEJZTJZYSMOTLCRCB", "CEZZTXZYKMMTLMRCRXEJXENFDOBVJIIDZHDNTIGAVOEPY", "TEJZTBZYAMFTLCMCNXEJXOABEJKEPXEHDAKJNYUONBMP", "TEOPTMZYAMBTLCRCJXEJXJCBBGZFRMBFDXQALJEOM", "TEQZTTZYQMCTLQRCFXELXOQORFWOTQVEP", "TEJDTCZYAMMTLCVCPXEJXOWUOSQJWNFWKDRGLDLZPTN", "WEJZTRZYNMCTLCRCLXEJXZXLQQXAZHAET", "TEKZEGZYJMSTLCRCVXEJXGTL", "TEJZTMZYCMTTLC", "TEJZTZZYYXEIMCRWIXEJXUYTAUVCDVPFIIHMWHEKE", "TEJZTDZYDMMTLCRCGXEJXFXURIWPKLMKQECKVIARMD", "TGJZTWZYBJETLCR", "TEWZTSZYWMUTHCRCVXUJX", "TEJZTLZYUMHTLARCWXEJXEEVK", "TZDZLAZYDMXTLCCCBXJJXZPTRCPTXIBXLEEJFNTKAPPWRW", "QEJZTWZYLMKTLCRCLOEJX", "TEJZTLZYLMHTLCRCUXEOXPGWUGKFQIFCLJVMARKM", "TEJETBZYQMSTL", "TEJZTKZYVMFT", "TEKXTVXYETITLCRCYXEJXBAQSLHMWJQIPHHMKZIEZPMRXAOF", "ZEJZTPZYMMMTLCRCIXEJXMTWYWPULXLZYHZQROVLDK", "TEJZTNZYNMRTLCRCCXEJFWSHKEKJUWGMPSTWRJLGRGJTPVWR", "SEJZTHZYRMITLCRCYXEJXULXJMXLCYYTUDTVFUQOZS", "TEJZTPZYWSHTLCRCYXEJXEMZD", "TEJZTNGQKMYTLCRCTXEJXB", "TXJZTTZKDMQ", "OEJZTUBYULITLCRCGXK"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "";
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    string feedback = "HNKCWW-L---EX-SC-W-M-MD---------LX---";
    vector<string> words = {"HNKHWIOLPLAEXDSCBWWMAMDNUAHYXMKZLXISPRCXLNHYDC", "HNKJWWULXJGEXRSDBWNMDMDEUSKPWER", "HNKCWWBLPKBCXCSCZWOMMMDTGITURN", "HTKCGIHLBWWJXERCBWRMIMDCVP", "HNKCWWOLIEQEXXSCVWJ", "HNKCWWFLCUXEXVSCOWSMQMDVSHOHJPOALXCPEAECGWA", "RNKCWWOLVGOEXISCEU", "HNKCWWHLWTXEXMSCM", "HNKCWWALRVWEXESCKWBMJMDDLZEMGTK", "HNKCWWULWTLEXJSCVWKMRMDXRGIMTHKSLXYWZWXHNS", "HNKCWWMLUG", "HLKCBWJLQMMEXNSC", "HVKCWBKLDK", "HNKCWWVLQAZEXESC", "HCKCWWDLQOHEXXYNYWPMOMATDTGJ", "SNKCWWGTGRTEX", "HNKCWWSLSQMEXRFCAWVMIM", "HCKCWWELNYTEXYSCMWMMUMDVLBHULDWCLXXGEWPXGAFFVLDU", "HNKCWWVLIRREXDSCVWOMRMDQHYEQYMTPLXEEPWXVLTQJGNW", "HNKCWWJLTPKEXASCLWVMOMDYRMENPXSHLXHO", "HNKJWWVLOUGENKSCNWEMCUDELQQIV", "HNKCWWBLPPAEXLSCTWDMLMDNXFBWNRHMLXQMLEC", "HNKCWWNLNEYEXXSCUWEMZMDUWKUIFHLFLXWK", "HNKCWWDLCXNEXWSCYWBMAMDDSKF", "HNKHMWOLMNEH", "HNKCWAEQWWHEXDHCEWWMQYZXEN", "HNKCDWALUNFEX", "HOPNWWHWJA", "HNKCAWLLUFTEXWSCSWXMYXDBNRAZXCFHLXOTGKTOGLSXSP", "HGOCWWFLNEREFRSCZWUMMMDQNXRWOQ", "HNKCWWQLFVFEXBSCFWOMVMDZBABFZIOVLXVGJ", "HNKCWWESSIHEXMSCDWFMSMDTLNBVQVGOLYUHCKOFHOWFRQM", "HNKCWWELQNSEXPSFGWAMEMDGOACTOGWZLXHB", "HNKCWWHZAHNEHKSTEWKMBMDQVLDMZPMGLXZWEWWCOBRONFI"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "HNKCWWQLFVFEXBSCFWOMVMDZBABFZIOVLXVGJ";
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    string feedback = "N-AK-I-OTUWPTJ";
    vector<string> words = {"NEAKDIDOTUWPTJKSBVZSCCZ", "NZAKXILOQNTPTJAQFVZX", "NHAKFIDOKUWPTJGGZQVULCYRFJHVL", "NAAKYIYOTUWPJJTDSSVUJPAYRN", "NTAKWISOTUWPTJIIOFRUWMRCNUD", "NBAKKIPOTUWPTJPVFSZFXNZIAE", "NEAKZINOTUWPT", "NEAKZIYOTUWPTJOFHDZP", "NMAXKIXOTUWPTJSWOPKURPPURLETTQ", "NTIKAIEOTUWPTJEECLLNUFZKPKFYMKRBKZXZWZMDQEJUI", "NLAKVIHOTUWMTJNKE", "NYAKPIROTUJMGJKGCBPABYDZKJIXDHJNXKSYOHOUJ", "FWAKCIHONUHPTJNKMEVTDGICZCAOJTIYEPSCLOEHCFBZNTW", "NRAKRKMOMUWPXMANLYBGGIXZOOYKMQ", "NNAKLIATTUWPKJGZQRZPZFZWEL", "NTAKTICOTUSPTJAJRYQZCO", "WHAKVIQOTUWPTJBDKEZULKCMGEAUGZQ", "NAAJKIROTUWPTJWVXYPAYRFWLRZAXSOKTKW", "NJAKSIQOTGWPTJIG", "NGAKKIHOTUWPTJMXWGOVI", "NIAXQIMOTUWPTJKFJRVIMWXUUFLHOKSWZJSBWR", "NTAHVIIOTUWPTJSGWICEV", "ISRKHICOTU", "NLAKZINOTUWPTJSUVCFBOLJRRUUKJZZSMQVMT", "NSAKHIGOIUWPTJQYFOKJHJJIQY"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "";
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    string feedback = "S-S-J-S--Q-Z-TBUVOQ-WA-KQZRC-A-VEW--RZXBJB--TZ-WV";
    vector<string> words = {"BQSJJXSIYQHZYTBUVOQRWM", "SBSMJQSNUUXLC", "SJSKJMSFEQUZBTBUVOQCWAWAQZRCDAMSEPLURZXB", "DZSEJYSKIQEZKTBUVOQOWAFKQKRCNBRVZWRKRZXJJSHRTZ", "SRSBJPSWVQN", "SISBJCSFSQPZDTBUVOQUWAMKQZBCRABVEWU", "SYSCJESUTQTZSTBUVWQF", "SAYGJASJRQMZQ", "SHSNJHSRSQNZNTSUVOQHWAUK", "SPSPJYSMZQIZO", "SRDKJSSMIXBZGTBBVOQKWARKBM", "SSSMJFSMOQRZBTBUVOQGWAYKQZRCDAG", "SSSBJBSTFQMZITBUVOQJWAUKQZRCUASVEWMCRZXBJBVZTZI", "AMSNJVSCEX", "SNSGJGSGRQ", "SNCLJQSAJAWZWTBIAOQQCAOKQZRCJATV", "NOSLJKSPKQEZR", "VOSTKOSWNQAZ", "SWSZJJSVVQFZWTBUVOQDWAVKQZRCLALVEW", "SFSIJQSBLQYZDTBUVOQUWAJKQZRCBEBV", "SRNQJBSQSQEZUTBUVOQKWASKQZAK", "SCMMJMSNOAARUTBUVOQLOUWZQZRCAJQWEWVURAXRJBHST", "SGSOJPSVXQMZRTBUVO", "SQSVJCSHEQSZLTBUVOQEWAPKQZRCFA", "SGSQMFSJLQHZQTBUVOQBWAFKQZRCBAQVEWYVRZXBJFM", "SQSYJUXXYQUZ", "SDSIJMSIPQPZMTBUVOQDWALKQZRCIAPVEWFYRZXBJBIPTZGWV", "SYSXJBSSDQKZQTBUVOQWWAWKGZZCWANPEWALRZXBJBBV", "SPQDJFVOZQLZTTTUVGVZWASKQZRCJAKVEHOPRHINZBET"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "SDSIJMSIPQPZMTBUVOQDWALKQZRCIAPVEWFYRZXBJBIPTZGWV";
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    string feedback = "LPRJ-EAVVD-SZKC-Z-NV";
    vector<string> words = {"LMRJMEAVMDWTZKCTJANVLEYKELVQLU", "LPRJBEAVVDXSZKCYZL", "LPRJQEAVVDUSZKCRZLNVFUYSTQIYFJSITKPLZAWJPGMYOXP", "LPRRGAAVVDQEZKCIZGNVTDJMXCUZGFIKQGEXCPIGIWUUKAA", "LPRJSEAVVDISZKCYZZNVPAQZWIUEWSBJYPJHQWKEEQHZWQIGR", "LPRJQEAVVLBSZKCIZRAVPRWOIH", "XPRJBEAVVDCSZKCNZUNVGGEPNOMWFYZLFAUESPGAAYIUPRF", "LQRJBYAVVIUSZKAPZDNVUHDEXGPDBKBZJJGYQ", "LPRJGEFVVDSLZKNOZKN", "LPRJREAVVDSSZKCKZWNVFCFHZQQKQGRUBCVWUIFPFHXZPXV", "LPRJNEAVVDRLZKCUZUNVBW", "LTRJMEAVVDESSKCIZLPVLTMNHREPWDGOCDHNZRJQ", "LPRJGEAVVDWSZKCN", "LPRJOEAVVXSSXKCGZUNVGLC", "LPRJGEAVVDYSZKCBZUNV", "LPRJYEAVVDXSZKCHZA", "JPRJWEAVVRWSZKCTZONVRTONM", "LPRJMEAVVDBSZKCTZRZAIYYCGCJSH", "LTRJQEAVVDISZKCOZLNVDRVCFRUEQFN", "LPRJEEAZVDHSGKCZZANVWZHUJGQ", "LPRJNEAVVDQANNSLZGNVTNLVOULOAKXXETLRKO", "LPRJDEAVBDQSZKCQZFNVZNAJXFWM", "LPRJPEAVVWPSZLCW", "LPRJREAVVDXSZKCTZCNVQIZMI", "LPRJXEAVVDXSZKCEZINVSYBUCVTJTIPHJNIUOJQQYVWNNLXHU", "TPRKXEAIVDXSZKCYZHNVHSMYFSJO", "LPRJEEAVVDQSZKCPZINVP", "LPRRNTAVVZLMBKCYZENVXBODCRSEVLZCMBOPDBVJRRMSEFAN", "LPRJAEAVVDXDZKCMCWNVPWK", "LPRJREAVVDUSWKCRZQNV", "LPRXFEAVODMSZKCLZINVBIAGEDXDMJZVPSJZLMZ", "TBRJPEAVVDVSUKCRZMBUCGJIBHEBTKZRRHKNRDYTV", "LPRJMEAVVDKSZKCSZUNVTUDIAKGQJSEEOJ", "LPRJJEAVVDYSZKCMZKNVIKABYPIMMAFSWSYQJXBI", "LPJJGEAVVDQSZVBIZLMVIITCU", "LPRJDERVVDISZK", "LPJJCEAVVDZSZKCSZYNVPTF", "LPRJMEAVVDZSZKCUZMNVDGOUYSHOMTVYZBTDHBYDWHPQNRLNM", "LPRJKIAVVDUSZKCE", "DPRJHEAVVDESXKCLZLNVK"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "LPRJGEAVVDYSZKCBZUNV";
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    string feedback = "--------------E------";
    vector<string> words = {"JTZIJYDDTVWFRKLZMRELRSXOFCONPHGIJBCGPJFUOBCIMUX", "KCUUHMRXBXUWXCEQT", "WQHVDRGAQSXFFMEOZ", "LXMZDQEGWZISAJEMORCIJULLKIHGPFYGSUKKSEULPG", "JYZFYYVCQIIDCMEJSWEQDGSOGROUN", "DCYBHYNAWYAZLMERPVVFBZJTCOSLYSN", "WYUCTKUSIHLCRKELBNKECEXZZIKKV", "WYVKRIFSHGDKNVECHWJSTHXQ", "KIAOZSFMFWXGSCGGIRJJSNWUH", "IJXIGSIUTUYZ", "GOJPJLGKMEAFFBEUGINFDIOFMNLIVYJGCVD", "FZOPNDAUHKFHRC", "IJHMISWXCTLBNNEVQMXQIGZQBWZKDOLJABYNUSCVSY", "ZYPRDNWUABSHWEEJIL", "AGWHFPYHLZSJTAEZXAOMUMEGPOACG", "XBABMBQTCYMYANECNOOMLI", "IXKYYOJPBBTTZVPSDTSIGCLTKPCREJXHGNXAQFZLKLAML", "JOIXWUEDATZSZSEXPPRZPJMGXPDPZJ", "KFMEZVNGSBWBOE", "KIXBCVWQJBEDZS", "YYCVDYRCKBCASZEPQMMVW", "AOMBLBCVKSXYIMTKR", "EPTXKWBLTLINSK", "FOWMCYBYLLVWSPCMCTM", "GDZQZCWXFLSZDYETRVKH", "ELZNCSGPASNWOAEDFHZFFYYQWYWFXJWCOOKHDDVU", "TAMIIBIAFCNLNJEKCQRPBDZFC", "BVOROURLQPHENAEDXSNCWWUFUTSYRVLJPTADJMXHBDLKVI"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "YYCVDYRCKBCASZEPQMMVW";
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    string feedback = "-----U--K---S---------B----LH----L----B------LC-";
    vector<string> words = {"BJVTQUSDKDABSUODHVGOZSNGUMULH", "ZIWXQUORKO", "GZJENUQQKDVSSEFQTCDUJYBSSQXLHTMFLLZOTTBGVAOGTL", "LMUXFUCVKTUTSFASFXMOCDBWRBILLNZCBRLHVXBPGCAJOLCV", "AXMWSUJTKSPQSNRQJT", "IPYFKUHMKSBMSBMLZMNKXWBBAKPLHIHDTLHNOSBMPSUAGLCT", "DIAGZUJXKTZDSEAJOXGPVGBZOOHL", "XDZQJRDOKHZBSYMXJINWGHBLXPSLHJRY", "KBUUTUQYKSMSSRKVNYPMPUBPIXELHUJCYLS", "BBUDOUEUKIZSIPVPUISIYLBXGMQLHOOEYLTQGLBZAIOH", "WYWGEUXMWCWDSPPTWOUNTBBKSLALHSIOWRY", "CVOYKKGUKLTG", "MSZXHULCKGFFSSQHKOCDOSBTLQPEHV", "AIIEVUDTKGVFSIRQPTAOMRBVWYRLHNDFTLQODPBOEOQTOLCG", "DPNCYUGHCZZUBBDUOM", "LBCWSUMTKLAHSAJYCOABGQB", "FXZLEUTKKQZVSFNIZBYNGRBUMSUL", "MNZWDUYOKVWKSD", "FJIBAUDXKFPKSGEVHRTZWWBVJLELHFLLFLDWEXBLY", "CRWHUUBKKVZGSOCFHBEAIHBKTFCLHML", "QXLSKUKNKKKQSYHW", "PFGFOUPNKRWNSVJZYOSJNUBIAQDLHCWOCL", "SJDAEUOTKAKSSQWCTDTTOVBUJPZLH", "FFKXKUJZKGYYOTZT", "TBVGMUJPVGYUSSTFGNXFIABYLXGLKU", "HTUOAUJOKTEPSXGZPAEFFJBPJRKLHUAEED", "WAGOVUQXKMQXXD", "NVJTJUEZKMAPSNGQYUW", "YMVNKUTWKXKY", "BQSVLUZFKKNPSXABIBOEXEBA", "LEDJLURKBYARSNPJBYJUAMBGTC", "YIEZAUHRKXGWSUGEA"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "AIIEVUDTKGVFSIRQPTAOMRBVWYRLHNDFTLQODPBOEOQTOLCG";
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    string feedback = "-XCFZJNILGICYO-IJRY-V-CTDVSAJ-PTTBMCU";
    vector<string> words = {"LXCFZJNILGICYOKIJRYLVQCTDVSAJKPQTBMCUHBDC", "EXCFZJNILGICYORIJRYBVOCTDVSA", "QXCFPJZILKICYZRIJDYCVMCTDV", "VXCFZJUILGVOYOLIJRY", "EXCFZANILGICYHY", "NXCFZJNILGIUYOLIJRYSVMCODVSAJCPTTBMCUASYLSINJ", "QZCFZJYDLGICMOQKJRYDVFCKD", "LXCFZJNILGICYORIJA", "JXCFZJNILGICYXUIJRYUVACTDV", "HXCFZJFILGICYOZIJRYWVI", "LKCFZJNILGICYOTVJEUBVKWTD", "OXCIZJNIMGICYORNDRYBVRCTWVSAJGPTTBM", "NXCCZJNILGICYOCIJREWVBCTDVDAJGP", "ZXRFZINILZISUOKIJRCSVNCWDVSQJAP", "QXCFZJNILPICYOSIJR", "RXCFZJNILGBCYEZMJR", "SXCFZJNILGICYOOIJRYMVWCTDVSAJGPTTBMCUHLY", "SCCFZJNGLGICYOZIJRYWVU", "RNCFZJNILGI", "DWCFZIPIRGICYOEIJRYNUUCTDVSAJRPTTBM", "TUCFZJNILGWCYOWIJRY", "LXCFZYNILAIIYOJVJRYAVEUTMVSAJJPKT", "AXCFZJNILGICY", "TXCFZINILGICYOBIJUEDVHCTYVSAVIPZTBMRUWZJOYJG", "WXCFZJNILGICYOSIJRYAVWCTDVSATIPTTBMCUKRNILDJPB", "QXCFZJNILGICYOWIJRYQVHCTDVSAJQPTTBMCU", "VXLFZJNZLGGCYOHIJRY", "BXCFZQNILGIC", "EXCFZJNILGIVYOUIARYJVGCTDVS", "NXWFZPNZLGICYOEICRYGUGCTDVSAJL", "WXFHZJNALGXCW", "GNCRZJNILGICYOGIJSYHVYCTDVSAJRPTOBMW", "TXCFZJSILGICYJHKJTYXVAUTDMSAJQYT", "FXCFZJNILGICYOAIJ", "FXCFZJNJLGICYOAIJVYCVOCSDVSAJFPTTBMCU", "AXCFZJNILGICYOPIJRYYVOUTDVSRJXPTTBMCBVNVBBKJECOVE", "UXCFOJAIIGIPYYWUJRYMVDCTDV", "MXCFZJNILGICYOHIJRYWV", "CXJFZJNIPGICYOIIJRYBRICTDVSAJUPTTBRCUBAHB", "ZXCFZJNILGICY", "YXCFZJNILGI", "JXCFZJNILGYCYOHIJRYQVOCTDVSAJWPT", "XXRYZJNIRTOCYJRIJR", "MXCFZJNILGICYORIJRYRVCCTDVSAJRPTTB", "IXCFZJNYLGICYOJIJRYWVYCTD", "VXCFIJOILMIOYOLIXRYWVBCTDVSAJROT", "GXCHZJNILGIC", "RXCFUJNILGNTYOIUJRYGVMCXRVSAJBPTTBYCUHRG", "MXCFZJNILGICYHTIJRYWVMCTDVSAJVPTTBMCUKBUIIZCHRDX", "XXCFZJNILGIMYOTIJRYAAFCTDVDAJEMTRBMCU"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "QXCFZJNILGICYOWIJRYQVHCTDVSAJQPTTBMCU";
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    string feedback = "S-Y--D-------S-TRFS-------------D-Q----MB-B-J---";
    vector<string> words = {"SRISKDTKLLUZCVD", "SQUTTDEOFKQLPSXTRFSTLRVTIPJTUNXZDFQWOFMMB", "SYPQSDTQOEMGFVDQRFSNKZSTOIJMESPFD", "SEYGFUYSWQZBCSJTRFSOSGFBZPZJTSAJRKQPASJ", "SVYVLDJNBFADASWTDFSSLEBMERMBXWCQDH", "SFYRUDMXELPDTSYTRFSKJFBTGPKOXXZ", "SOYQMDHKSONLFSNTRFSELJLQLIOSJEMDDHQBEMTMBIBDJW", "SVYVRDZTOSPDOSKTRFSAMHKEOGDFNQKSDEQRPB", "EOYQWDDQTNLIPSGRRFSQROW", "SPYPMDVKUQBUESCTRFSPMWDCIWCKZWOCDZQ", "SSYGTDMEENMQLSSTRFSZYATZYPBXTCYEDJQL", "SIYASDIIMTNVKSUTRFSCSOVDXPPLOJRHDMQHPKK", "SCYGUDKHYWMQOSZTRFSDZHHMRDHGKXRYDQQEHDQQBYBGJVQ", "SGYDWDPFKXAKASPTRFSFRINAPSXFA", "SCYBXDQCWOUOGSVTRESL", "VMABFDOYJBXTTSJTRFSGRJNOI", "SEYHKDPYVQJOTLIKPVSNDKRTOKHCHOBCKJQCVDZJGLBNJYLTN", "SAYTRDLQHQKJDSCTAFSKGGLJRNWCSPVYDDYXCXXMB", "SSYOSDFOXFPSBSBTRFOGHOQE", "SHYFLAVHAZUAPSATRNSZXYOSQVPT", "SOYYDDCQKCUDNSPTRFGPSMJYIRSSGF", "SZYRTDAZINQTLSW", "SRYXKDSTZQDLQSRTRFSKTKBOSPQWJEA", "SEYFKDXLRQYYXO", "SRYCDDHCPOMQCSOTRFSYZYTCWEZGLKDGDN", "SPYUMDYCQSXJESYTRFSGIOASS", "STNOIDXRMFWPKSUTRFSAOHGHSBRLRZXED", "SLYDGSPKMDCQQSUTRFS", "SMPPZDIPXYJ", "SVYXXDZMUPVHJSHTRFLH", "SCYTMDLPSFFSISWTEFS", "SSYWNCOGOYUBBSXTRFSKFEFJEUJXEDTJDYSGZQCMBI", "SXYODDXVTGDUVSTTRFSVZSEG", "SVYPVHSAXLRROSKYRFSMCQVWZCSOHITVDZ"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "";
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    string feedback = "--------------------D-------------------------";
    vector<string> words = {"UAMQJDVAHCLWVJDFZIEFDBKAVQQ", "KXPWYUTVUUETDUYOSCPMDYNCFGEFJHAHPQQBGXSRAUCYG", "SMBDMEZSUNIPSPXQMIULDCSOTMHWQXDKQHKT", "GFJGTZAWTQVKCFVQMIITNEQFXBVM", "RTJDCTYOXDXVTFDQTVBSDPXPOSJHYQJFAGMVWGH", "RIBBUFZHDZX", "HNVOJBXJHTIWUNHXEZHXDGXFOCFGSUFCWFML", "ZOVOEUUEJCSPRCZRCCLVDEGKLVUXSMJSEGKRTOJKJKXFLSW", "EAAJKZZFFEEGZFGYDJFODZHUQQWFFMZTKK", "GKDXCFCQXORRBCECQLQPD", "CZJATIFLAYUHBEJLIUZTDTSAVNBJEAOUREP", "JEUXYQEEHZLHNAKNRLMQDGFFH", "EKOCQCTSNDJCMEKSJBXGDQABIRJOBC", "JLJEHQOCOUH", "FJYAYKXRWFWPKQOBNDFMDBNEEMONYADPLOWPGXJXND", "WOVTFNYRFHWQGNTTHNZQPTKTOXJKRRYENAKCAES", "SGYFHNLAZDGWLSOLKIIYVKCQSWVB", "EYVACJYTPXWKAOFFIYDPDINLJN", "WONRPNSZZFRFJJQUYRXGDPDELAEPVTNGEIUOU", "UJMGAEFLYIXDUODPCFNDDZHXHSDVBWRYHIMFCUZYISINM", "PLXVXRBOZSCKJ", "GAIMOOJJRAERVLRGTMBWDBIGORWHPUBVQATPGXYIRPVDRBAK", "VDRHOXSGFIPANXFMQXHFDDJLYZNNXE", "FMNLFLDXOHLTUZSK", "HGASLKKMCTSWDKLRRNRNDQINPKBBDL", "GUOTQVIRAFTPWOOPKDVMDKMXWAEDPQLJIS", "QGGWOZORNWUABXBWBNKVDYPIPQXLEZRPTZSFPQHWQXQZGV", "LEWVRDZMEXKGUGGYJWWXDL", "MHGOEOCIVTUPHJTPCHBBDWIGBNTPXGQRIOYQIUL", "WUUKWXGPRWABJKGZIASQDHMWAGZWKFZQZDYUWNCVTUBCQTG", "LHAXZBIAVNWHOVHFXZMRDTHDCQKOTHEUYLVHNFJYIBWUERD", "SXQKOAMLSBHHRAPJHPZMDDFFNXTP", "SZLZRTEWEKNPMDJZIPDHDXTPDAIKOFZV", "CPZYCPJSPD", "FIAHWNYYMSTPMFCREAPLDERHZONZO", "VTTRHMHAGOMGKTUSOXVODWGKXXTALDLFNVKR", "VUUXCOHBTGSRSCKQAWCYDCFCOUFQHY", "TAQXPVCQGNUALGFOOOWRDYZXBGSEQNLFEVDIAXAHWYJYHXM", "TSUZDVWNCNDQVUTITYRKDCBARD", "WOPPDFZLSGPHQGJUEMPQDXXPJKGINCJOZDWSGQIOGGUC", "YDPIVXTADTASIUVFFBMQDVEHAUKJSEJUYBYNDIZYDUWFCAZRZ", "TTJHFLMQBKBBYYSQKBEPDFZI", "XGBONIFRQCICPMRIMUCDDMYWSGKREUUGLETMG", "RLAPKNPMDWNQNTU"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "QGGWOZORNWUABXBWBNKVDYPIPQXLEZRPTZSFPQHWQXQZGV";
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    string feedback = "T-KVOO-K-L-W----TUXKKRW-AXS--Q-LKDIY-GO----DX";
    vector<string> words = {"TYKVSODKCLFWQGSSTUX", "QQKVOOJKALLIPLTVTUXKKRWTAXSKFQGLKD", "TYOVOAVKOLQWQMEJTUXKKRWTZXCIKQKLKDIYCGOHCOZM", "TGKJOOAKSLDWWQJKTUXKKRIDAXWEZQVLK", "TEKVOOYMGZSUWRIATUXKKRWMIXSHWZCWCDIYZ", "TSKVOOVKBMBWLWMRTUXKKRWAAXU", "THKVXOBKOLJWTCUC", "TJKVOOOKVLBWCIMMTUXKKRWHAXSQIQULKDIYPGOQTVLDXD", "TXKVOOBKVLUWUOVPTUXKKRWTAXSMZQMLKDIYKGO", "TEKZOOGKZLE", "TWKVOOOKFLZWLESQTUXJKRW", "TLKVOOINNLUWMOPBTUXKCRWCAXSVFQJLKDIYXGOMBJFDXB", "TWKVTONKGILWKDQJTUXKKRWNAXSIIQDLKSIYIGUB", "THFVUOIKKBNWGXARGUXKKRWE", "TNKVOOXKPLVMPBAYTUXKKRWRAXSCQQDLKDIYOGOUMR", "ULKVOOVKULXWJCXVTUXKKR", "TXZVJOIPYLCWVCASTVKKKRXSADYWNQELKDITXT", "TQKVOZFKSLZWFCNATUXKARWLAXSSFQAZYDIYDG", "TAGVTOJKBLWWOAORTUXJMR", "TKRVOOQKMLAWJDMBQUXKKRWMAXSPTQSLKFMYR", "TCKVOOXKJLLSFQKCQUXKBRWPAXSMYTNLKDIYPAOTWWWD", "TKKVOOHKZLJWAMFKTUXKKRWYAX", "TYKVOOGKKLSWIMJBTUXKKRWYAXSFBQMLNDIYAGO", "TFKVOOGKNLUWQAWWTUXKKRWTAXSSPQPXGDIYXTRFZTYDXMAY", "TOKVOBEIWLQWNNQCTXXKKRWZAKSNVQBL", "TSKVOOSKPGGWHAD", "TPKVOOMKJLVWWGOOTUXKKRW", "TBKVOOAKGLYWXUEHUUXKKRWC", "THKROOTKJLYWBBLBTRXKKRWXAXSSNQT", "TNKMOOZKFQNWFLHETYXAKRGQAXSQFQQLKDIYFGOONU", "TCKVKOCKFLEWWWIKTUXKKRWL", "TPKVOOIKPLQWFHRATUXKKRWVAXS", "TCKVOMMKNLJWSYKJTUXKVRWXA", "TJKVOOIKVLXWXJOJCJEKKRWXAXOVIQXWKDBYZ", "TXKVOOLKTYBW", "THKVOOLKDLIWHOFKTU", "TAKVOOEKJLSWEHZCTUXKKRWMAXSUGQFLKDIYDG", "TLKVOOEKNLKWLXRZTUEKRRWGAXSMHQNCKEMYEZ", "TXKVORKZSLLWVDXNTUXKKRWTOXSPMQRLPDIY", "TYKVOOQKNL", "TVKVOGUKLLQDXPAUTUXKKTWJHXSALOWLKDLWVGOMSBZDXR", "TWKVOONLVSKWUNVXTUXKKRWUAXSMGQNLK", "TZKUORNKVLUALIGWTUDJKCGHAXSFPQZLK", "TSKVOOYKVLDWAAJPTGXKKLTSAXSRDQZLKDIYQGOHX", "TEKVOOZKQLFWKOMTTUXKKR", "TLKVOOQKAL", "TFKVOOSKKLV", "TEKVOOJKFLRWFKXHTUXKK"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "";
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    string feedback = "--NSUH-T-------I";
    vector<string> words = {"HQNSUHFTNLBWYVEIMMVGYKZYAISZQTWL", "WONSUHFTWQG", "UXNSUHETYJPDWNOINMLMOCINMNQNXHDBRCXBLWVRYDCG", "SZNSUHFTETQRHQVIRSCYMQLQGKLEKUQVPXVP", "IRNKUHYTWWQBEECIDGKWH", "SRNSUHQDDEILFIRGYYVXXELSIXPHO", "CBNSUKCTAFYCCIDIDXXYVONHNRLWJSVMLEDH", "SBLSUHQTVJYOANRIPVIJMZXLHPD", "IYKSUHMTEDHWRMAISAAPAULKLNPAGPELRAZTLPOGHKEMRZP", "MDNSUHATAUQTMJTIMDDNQVSTENOEUDGMRMOL", "IONSUHRTIMSTPATIUJVGQXIT", "DYNSUHCTLDSXFQXIORETZTIBBSUTIKHGEIKGHLLMXFAMSQE", "FLZSUHUTFPFNASNBVQIRMFTXADLVJQ", "KKNSUHRTOKDUPKYIXTDIAKWXEETWN", "AGNSUHOTOM", "ZJNSUHDTXTSFHZMIVRTICNBGPZSXULBCDXMLIVA", "GVNSUHOTVKDMXEGIHKLJLB", "IRNSGCGTHMJLCLOIRO", "YENSUHKTKDAMWXPI", "RDNSUZZTDJKRJGKINQYTUNCRGMMBRKWCIXENNMZROAMGJ", "HTNSUHQTZOWTTNPISAEZD", "OZNSUHHTLVXXCM", "HQNSUCCXWOWGYUYIEYHGEAILWRTLMLNIFMPTLD", "TGNSHHQFTCHFXQOIOHZGHSRDEJVUWDXZDCKGWDA", "VCNSUHZTPF"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "YENSUHKTKDAMWXPI";
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    string feedback = "CSP---RMU---VI-YJDVLF-E--WY-V-D---";
    vector<string> words = {"CSPRDGRMUQFDVIDYJDVLFBEGVWYXVQDZMISGPVKWBCUFXSUF", "CSPMRYRMNUEAVWXYJDBLFHEDYWYEVGDGMEYJARQKIGOK", "CSGOQQRMDYLEVUGLJDVLGDEUXWDLEBDLLK", "CSPHGHRMURPHVIL", "LSPGUGRAUXYOVIOYJDVLFMEFOWYZVDRKDNN", "CSPGCLRMUSFDVIIYJDVLFVECXWYGVUDMQZTBRNFATKQHVANOY", "CSPUIGSMUBGJVITYJNQL", "CSPBPXRMUARCVIRYJDJLFOEKOWYXVVDVUETMZHEVJ", "CSPOOHPMUACEVIDEJDLLFVETUJYGVIDLDBNBRVIHSB", "CSPZJLRMUWVVVIAYJDVPFXEPJWZDVKDTWPSDTZBM", "CSPESMRMUFWEVIJYJDVLFFEYUWYOVADZDAXPLIQLXOW", "CSPDRORMUTUMVIOYIDVLFPE", "CSPQAHRMUJPVVI", "CSPVIWREUDLWNZOYJDVLGREXNWFBVCDGTXAE", "CSOTBURMUTJSAIWYJDVLFSEMGWYWVJDYVDYSZB", "VSMHXIRMUTDHVIWYJDVLFHEBBWYXVADLMSVFBWCLMGCW", "CSPKGORMUBBKVIBYJDVLFXENKWYAVKDKZH", "CSPZJFRMUGKTVIUYJDVFFXEBZ", "CSPVASGDUAREVIVZJDVLKVEQEWYVVEOHLGRFHHSBYBXYJJKD", "CSPXAWRMUHQFVISYJDVLFRETXWYIVIDLIFIZCCMGCBIH", "HSPXPURMUFTRVVEYJDVLFMEGIWVWVRDTQXK", "LSPTBSRMUJJCVIWYJD", "CSPZQKRMUTGGVIIYJDVL", "CSPXIZRMUYMLAITYJDVRFWELTW", "CSPGAZRMUQWQVWBYJDVLFAKIAWYNVSDOFUUJMQUVPVLK", "OSPFBTRMUYHBVIAY", "CSPELARMJEHG", "CSBGGRRMUZXQVIQPJDDLFPEBVWYRV", "CRPENLRMWNJWVIVGJDVYFU", "CSPGWCRMUFEDYORYUDVLFSENFWYDVKDPIN", "CSPJMURMULRKVIWWJDVYFLEQKW", "CSPGMLRMUWFZVIWYJDVLFHJGZWLIVIDEHWZX", "CSPUARRMUSGMWIKYJDVLXMEEZWYOVVDMIOMG", "CSWIHKRMUUQVVISYLDVLFOPUVWYIVXDRODNSOJP", "CSPFZSRMUWGQVIQYJDVLFNEITWYJV", "CIPAIPRMUOUGVIGYJDVL"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "CSPKGORMUBBKVIBYJDVLFXENKWYAVKDKZH";
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    string feedback = "S-WTF---J-G";
    vector<string> words = {"ETNTFIDBJOGKQNSLWGDLKOHHDRIOFE", "SHWTGSLBJDGDE", "SEWTFHIXJBGXAKBCRFQHDLDSGAMSXYFDMTNISLE", "SOFTFKVKJZGUMTRKBCE", "SRWTFPILGEERAKWAOCCSHTJJHYTHFGCQQOASBRQNORKKBU", "SGWTFLSCJGGOWYRKFZTQCQZIJ", "SHWTFHKCZULHQLPRQJIDSJRYOGZBC", "STWTFWONJWGWWYKFYNSJVGONKQJRJVGHJQOWOABYBHRAJ", "SAWTFCEBJMGZXFCMDMWRQLGJKSCXQFIQOSLMO", "SVWTFGNPJSGZWZRGPOUZNGKHREOXCPNXHDTEEY", "SOWTSZRAJXGZXLVKKNKACMXWLDTINDZH", "SCWTFZCUJIGLVLBSFIEHDXXXJBDVIGSMXGCBVF", "SPWTFABEJYGZZNQYDEKTUMMESCTVSCZ", "SKWTFBFEJHGOJCUVVDJVBSCMRLPYU", "SZWTFZNNEUGAGHMWOMXXARGQKO", "SEWTFCETJYGINMIFJBMMPKEVJGOEWUFEOZTSQBDGKIMZB", "KHWTFHVXJMGTSNOAXKEBPJFJIWSRHYBLAFRPUQGEUV", "HPASFGLCJVYDAIVQKCYOQBCASWROBD", "INWTFIZEJFGHZBHQRFTJHCZKQNQIKWYBNC", "SMWTFAPXJHGPCBXQEZFFQSSJBOSPZRUTKHQD", "SMFTFMCVJEGYTCUAT", "SUWEFEXQJAQTMPFTJNUKYEBFPPVMFLQ", "SKCTFOJSHRGBLZUKPTOMVKSZIVISZMXFUBFCEKYEPLLVC", "SSWTYZDFJJGAENXJAEKITAFMQRVUOMQDAJC", "RXWTFRYQNYGIEJKZTWXYHULZLKVDQ", "SSWTFDZXJXGDTYOXNZIZMPZVEHGRXEZNPWUJPCEPRR", "SSWNFECWJBGXELXYXFCLNDFVNG", "SFWTFPAYJCGJIYENVJTDPZ", "WVWTFSTIJHGIMDDYXERODALLAEMODEDTQFEGCOJLRHX", "SPWLFCZYJTGOMWVDBTFEECHUZVMR", "SIWMFQFTJIGKHVWBULZLFMTIKMFEFLESCEVMNEZTQ", "SYLIFLUTJMGJBPAKTJI", "SRWTFBBZJPGXJSUWEZBWKBUWMNGVCG", "SPWTPOLHJUAKXVKMBOFUTLBNBJABYLZDWOOFLLOSIKEUFTSWS", "SOWTFALIJGGPZNXMKXCOCBPZQUBDABOBNALZK", "SXWTFDANJMGYVAWZUVZ", "SAWTFEIHJOG"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "SAWTFEIHJOG";
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    string feedback = "G-ETD-DUQMKWCJQWLHDTKNYR--F--BTSQ-QQOQ-";
    vector<string> words = {"QEETDBYGQPK", "GWETDIDUQMKWCJQW", "GNWTGNDKSFKSCJQWL", "GKETDKSJPBKWCJEWLHDTDNYRVIFXOMTSQSQ", "GSETDJDUQMKQCJQWL", "GGETDMDUQXKWCJYWLH", "GIETDTDUQMKWCJQWLHDTKNYRBQFZKBTSQOQQOQXATVLVANPIV", "GKVFDERUQMKWCJQWL", "GHETDZSMQUKWCJQWLHDTKNPRMFFJKBTSQW", "GDETDMDUQMKWCEQWLHDTKNYRZJFODBTSQAQQOQME", "GMECDDDUBDKWCJNWLH", "GKETDWDUQHYNCJQWLHDTKNYRCNFAPBTS", "GSEUDUDBQAKWCJQWLHJT", "GLETDWDUQMKWCJQWLHDTKX", "GCETDNDUQYKQKJQWLHDTKNYRSLF", "HNETDNDUQMKWZJQWLHDTONYROQFERBTSQKQQOQHEYPQ", "AXOTDGDUQMKWCJQWLCDTKNYRJWFED", "GJETDYDUQMKWC", "WQETDUDUQMU", "GXGPDSDUQMKWCWQWFHDTKNYRWNFHNBTSQEQQBQJGDO", "IVETDODUQMKWCJQWLHDTKNYRIQF", "GBETDLDUQMKWCOQWLHFTKPURA", "GKQTDBDUQMKBGJQWLKDSKNYRMIR", "GSETDIDUQMKWCJQWLH", "GPETDNDUQMKWCXQALQDTKNYREZFCQ", "GEETDQDUQMKWCJQWLHDTKNYRLDFKG", "GGETTKRUQMKWCXQWLHDWKNYAZWFG", "GOETDUDUQMK", "GIETDXDUQMKWCJQWLHDTKNYRVPFPVBTSQIQQOQI", "GZHTDZDUQMKWCJQWLHDSK", "CRXTDLDQSMRKCJQWLHDTPNORYEFBW", "GLETDLDUQMKLCATWLHLXKHARKULYQBTSQ", "WMETDJDUPMKWZJQWLHDTKNYRXOFOQBTSQG", "GTETDGDUQMKWCJ", "GDETDRDUQMKWCJQWLHDTKNYRHUF", "GKEQDTDUQTKWCJQWLHDTKNYRBCPWETTSQCQHOQ", "GPETDFDBQM", "BBETDJDUQMKWCJQQGHPTKQYRYRWQZB", "LNETDXDUQMKWCJQWLHYTKNYRVEFNABTSQSRQFQBNJ", "GVETDIDUQMKWCJQNLQDTKNYRKCFWSBTSQTQQO"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "GIETDXDUQMKWCJQWLHDTKNYRVPFPVBTSQIQQOQI";
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    string feedback = "XUDURWIXEPBLYXIT";
    vector<string> words = {"XUDURWIXEPBLYXITDBJIDXPIKOUTRTLYK", "XUDXRWIOEPBLVAKTWQYHZWQOKJXRMOKCW", "XJLURWIXEPBLYXITDBDHZLPN", "XUDURWIXEPBLYXITONKEMVRVXHXQFPZHYYCX", "XUDURWIXEPBLYXITN", "XIDUFWIXEPBLAXIHPBGQSXXQHUTOPYCBHT", "XUDURFIHEPO", "XUDURWIXEPBLYXITZPBBNNJRMXG", "XSDQBQIXEPB", "XUDORWRWENBNYXITSQGYZLUJWXA", "XUDUDWIXEPBLYLITCXXHZLGJKOPXGTABDMT", "XUDUROFXEPBLYXI", "XUDURIRXEPBLIXUJZCJF", "XIDURWIXEPBLYXIWIZFPQ", "LUDURWIXEPBLY", "XUDDRWIXEPBLYQITKNQSGQCYLWYEXVKGTCQEZC", "XBDURWWXEPBLYXITNKIW", "XUDURPIXEPBLYXITKENBXURMMCKWSIFAXXIJWMRYBSXMR", "XUDUDWIXEPVLYXITNAVCMDXELUBVDSAD", "XHDURWZMVPBLYXITNGXFSPJNGSBWSALPDVL", "XUDURWIXEPBLYXITPPCUNDBKSVUKOHYYNAKUAF", "XUJURWIXEPBLYXITTKKBCEATVCVYFK", "XUDURWIXEPBLYXITKUDDPNXZIQCIQVTM", "XWDURWIMEPBLYX", "XUDURWEXEPBLYXIJGWTMFEG", "XUDURWIXEPBLYXITXGYQYWFWIULNZTPIWBX", "XUDURTIYEPBLYXITCSFJOARTWE", "FUDURWZXEGBLYKITECWZMHG", "PEDURWIXELWLWXFZGPPHCMNIWGOETVSWCJFQCCMI", "XUDURWIXEPBLYXIT", "XUUBRWIXLPBLYXITNQXJYYDHFFGDGUIDJKIXZWO", "XUFUNWIXEPBLYXITDAM", "XUDUOWIXEPBLYXIT", "XUDURWIXEPBLYXITPCTAKBF", "XUDURWIOEPBLYXIFA", "XUDURWIXEPBLYXITZRUREUASJOSJMFK", "XUDURWIXEPBLYXITZCSOWKVFOFLAUECDRRYPOQOORFWOHQDB", "JUDURWIXFPBLYXITTNLXSKZANVIIBDJUQWZCSTMRL", "XUDURWIXEPBLYXITLAHPFZXQARFTUOIYEWUWERDAP", "XUPURWIXEPBVYXITRVEHS", "XUDGRWIXEPBLGXITRFZNKPEK"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "XUDURWIXEPBLYXIT";
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    string feedback = "TZ---J---W--------------G----W---VY--------------";
    vector<string> words = {"TZYHMJNNEWHOZDPDCIGDNJIKGJLVHWPDGVYWDZDSYRZYEVF", "TZOURJYXHWORI", "TZHVPJLOKWJFMHFHXGNTFSJHGSU", "TZNAJJCEWRLVQXZYQKTLRBRQGIXSVVDMSVWVZ", "TZVSTJEFJWIIMSZYWARCESVGWSHQMHJNGVYDMJDYYBXSLBZ", "TZVHEJYTVWAQEOWPRWGCEVQXGDCRUWAKDVYXM", "TZHKHJKMTWPGZ", "TZFIAJXHNWNLXDIAPNULXNFLGACXEWQSMVYDNUADEKSMKRMAA", "TZZKOJVHBWFVJTWHZBJEWLHQGVS", "TTEHWJKBJWFEZOKAASJZHRLW", "TZWCPJRIDCXLUOTSBVIQJHTRGSQKFNWXMVNTFPW", "TFUBVJKBCWTGZSSPBJNPXLMLGUVQHWNGWIYEJEFOX", "TZIRBJERXWLKPIULOWCJNA", "TZKFYJZIUWIEJZCHFBQFLVHCGDQPQWHLZAYSI", "TZHOOJHQDWNLHM", "TZGKYJSYNWARHRQDNZXQEOFT", "TZUOOJEIQWKYTEFFLZKAQLXVGMLKSW", "TZNQJJOGCWCOIQNFRIF", "TZVTKJROFWUHACMOXAXSFVNQYGUYCIAIFFOLLLK", "TNYMIJKDBWQKNWTSRBIRDUEVGIYCJWOYFRY", "TZIDCJJSKWUOZXLBCHFHVW", "TZXPKJSFAWJXMGFVMSZEJCRT", "UZJJJJILJWPOFKPXQRXWXYHLGLAHAWNCQVY", "DZPOVJFNZWWNCSCAXWCWTTJTGYHUSW", "TZQXTJQNBWIIPNA", "WZZJLJHKLWEMHCCJQID", "TZHXGJUOAWKHPMIVEAYAMSBP", "TZERMJDAAWAYJQEXPCXMTWXPGPRHLWJWS", "YZJJZJRRQWZJCWPJIBSUWGKFGIJLAWQBVVY", "TZKYVJYMWWH", "TZUQXJPEHWUBEDGVZXQMEUYYGPAQMWEMT", "ZZGGKJVUSWAIFGXHZLSKOIOMGCJMHWFKNZ", "TZHCCJWIOWCXUJMKZBRKCEWHGGUATWFELVYBXUPDRFGLIUQHX", "TZJZAJDRPWYAUBDGJZRLOGWVGJQTGWPAPVYEBVODP", "TZVICJCKEFMOCUKXUPGCIPMTGFAXIWTGQVYVRISFF", "TZWXNJZEAWHCYCNUJPOLDLWAGO", "TZYOEJDFYWEXPTAOCHSMFSADGSUR"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "TZFIAJXHNWNLXDIAPNULXNFLGACXEWQSMVYDNUADEKSMKRMAA";
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    string feedback = "K-Y---IN--NB-E-----V-H-N-----U-XEX---";
    vector<string> words = {"KSYXULINGFNBAELUQINVXHNNFZXYRQUXEXPAFTIRDLBMRZJJD", "KPYCININRDNBLEED", "KFYAQTINJONBTEQWQMFVFHWNRPFAFUQXEXDTP", "KMYUGGINFRNBEEPMSA", "KOYRATPNTKNBV", "KRTNYHICLDNB", "KDYYNEINAYNBWEEQEEMVZHENRAWUEUFXEXMMXHBRJM", "KSYYKRINTQNYDELUUWYWZHJNSXYULSXXEXMDRKXXYYWAH", "KGYVLOINKHNBYFQBANQVIHLOOPWJ", "KOYKKRINIENBNEVWIFFVQHGNFIIYTUMXEXE", "KHYQQDINUJNBIEHFSPMVWHXNLMBAEUUXEXEURCCYKBUQPUDW", "MZYTCBFNMPNBKEDKUYDVBHANKJRGSNYXEXPNHGD", "KMYJPHONQRNBHEJQCCDVIUPNJGLFCVQXEXI", "KRYIWRYNRRNBIEHNEXJVCHPNOFSLXU", "KNYCYNISGDNBXEGOIWRVYCPN", "KFYBBVINIFNBWEKLBHTVZYMNIGGAHUWXEXPMMCRGFJGE", "KVYBIHINECNBBEAIKNYBYUGNKMRQPUSXWXD", "KOYSNIINCANBMEQBSQHLXKBNPTOZE", "KNYLYSINFXNBJEVPKLQVWHWNJHPYVUNXEXZCVK", "KOYBDMINBFNBFEKIIYQVXHSNJRMCMUYX", "KBYSSHINNYNBQEHFPVDV", "KIYNXRINEJNBNEDKIHFNIIXAWKOUXBIXEXUZP", "KZYRJAINHANBTEFBPTHVVHKNUOCXPUQXKXU", "LPYATVINLPNBWECMAOHYI", "KHYFCFINDONBUEAFCTFVCHJNIN", "KJYXUOGNSZNBXPNPPABVLHZNQYZPXUZXEXUVHYNMIPYCQLX", "KVYEWKINZANBREUYMANJ", "KLYCNYINXINBSEIEUWXVLHKNHOWYSUYXEXV", "KKYVEPINABN", "KHYXHEINUZNBUDLJRWWVDH", "KUYALMINDPNCMECRUBTVQHTNONEVIGBXEXUQYEJDWCIDYEST", "KOYYDDINEKNBKEJVSCEVKHONRLBBNUWX"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "KFYAQTINJONBTEQWQMFVFHWNRPFAFUQXEXDTP";
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    string feedback = "BCHGCCUAYR--VPSIXGF-A-RUR";
    vector<string> words = {"BCHGCMUZYPOL", "BCHGCCUTYRDBVPSIXGFJACRUR", "BCHGCCUAYBKVCPSIXGFEAPRURWGMWXJTFFHYGETQZCG", "BCHGCCJAYRJOVMSIXAFZ", "BCHGCCUAYRDDVPSIXGFWAKRUR", "OCHGCCUAYRJEVPSIXGFDAJRURYAHFMNZEMBSNZVXHOCNVEO", "SCHGCCUAYRFJVPSIXGFHAWRURILPNAZLNFZEBZVKIOIARTZSC", "BCHGCCUAYRWXVPS", "BCHGCCUAYRKQVPSIXGFDAFRUREOEIKWNJVYIRFDFACBAR", "BWHICCMAYRSMVPSIXGFTAFRURXGGOARZC", "RCHGCCUACRHJVPSIXLFQAK", "BCHGCCUAYRXIVPSIXGFCAVRURW", "BCHGCCUAYRXVV", "BQHGCCUAYROVV", "BCHGCBOASRTNVPNINGFTIORORXZGLUVWTSOBEJD", "BCHGHCUAARXPVPSIRGFBANRURGOIBLDKUFQRUOQLUOLJO", "BCHGCCUAFR", "BCHGCCUAYRBNVPSIEGFOAQRURCSTQLDBSMN", "SCHDCCWAURXDV", "BCHGCCUAYRFTVPSIXGFBAJRU", "BCNGCCRAYRJAVPSIXLFUAWRZRHNN", "BCMPCCUAYRBIVPSINGFPAXHUR", "BCHGCCUKYRWJVXSQVGFRASRURUILMY", "BCHGOVQVYRNZYESIXGFHAKRURTPCEAOFPLYVLGTEACKSPCCQ", "BCCGCCUAYRRHV", "BCHGCCUAYRV", "BCHGCCUAYRFQVPSEXGFVAKRUR", "BCLGCCUALRIUVPSIXGFAAXRURABOTUSWQTOIIY", "BCHGCCUAYRHSVPS"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "BCHGCCUAYRDDVPSIXGFWAKRUR";
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    string feedback = "U-UB-GUP-A--V---R----C-RB-M-XOG------G-L---EA--";
    vector<string> words = {"UKYBOGUPBACOVYAJRONMTCERBXMLXOGIEDBOKGULGRI", "UBUIIRUPHANM", "UYRBIGUPEAEZKYQTRHROBCKRBMMLXOGUOWVCBGPLIOYE", "UWUBLGNPJSLXVYFERK", "UDCBMAUPNAOFVRNSRBGODCRRBGMTXOGCSYOJFGSLFUOEAFIB", "LACBQPUPEPTQ", "UYUBYGMPKASXVLADRJVCPUERBAOKXRWIZB", "UHJBHGUPHASHVUZLR", "UHUBYGUPGAHTVNZMROKVXCIRBJMMXPGK", "UCUBZGUPNANVVFAARHPVQCERBHMUXOGEYE", "UOUFZSUPUAEF", "UNUBEGKPVAGTVPOERBFSLCDRQLMYKCGOUZJD", "DMZXDGUPTAVUVSJTRDTA", "UCUBFPUMJAROVBBGROAIYGGRBQYBXOGXFNBHBEELL", "UFUBPGUPFACKVNNPRFEWCCXRBHMDXOGTZHOYQGULZNJI", "UNUBIGUPAAQEVEFERMUDKCYRBLMKXOGXXE", "UDUBFGUPNASLV", "UKUBSFUPAARQVASCRCQXTCLRBUM", "ULUBOGUPTAOHVLZI", "UDUBJGUPIAYQVTTWRHNJZCWRBYMTXOGTWIIHJGHLDJIEAFQ", "UPUBHOUTDAWQVLDVRWRZWJJRBLMVXOGMYGPZPGZL", "UAUBPGUPKAZTVPSSRWGGTCMRBCMBXOGXTJPU", "UNUBTGUPSCJFVRXER", "UVUBYGUPDAWCYWLMRUCLXOSRBBMFUUGTISMG", "UJUBXGUPPA", "UAUBAGTPGALJVVXLRBCZBCVLBVMVX", "IQUBDGUPCAHKVMEOT", "UCUBOGXPQAFNVQMMRZKYPCARBXMCXOGLTVXRQGSLCK", "UJUBMGUPVAEUVOZZYHREVCBRXNMYXOGBIZICOGVIJQZ", "UDUBEGURKAELDMJR", "UHUBNGUPQAUXVDKQRTJOIQQRBEMVXOGXIAXVWGL", "UPUBGGUPVABOVIKPZEFMHCGRBEMAXOGVQOUDCGSLG", "USUIKGAPMAEOVJWDRZHZRCQRBNMMAOJQXGKFPGZLGAEEURUIP", "UQUBXGUPFAOIVOBNRFWTBCYRBHMHXOGEXVYUWGZLMJZEAEXJN", "UUUBBGCPXANJVRJXRPTMKCPRBHMMXOGSFGFWXGPLBDUEAAVWP", "UPUKHGUUMABSVCFKRQZKWCURBPWHXOGFJMKU", "UKUBPGUPGAOSVGSDRVJJTR", "UVUBPGUPRABNVF", "UUUBOGUPXAEYVGQK", "UXUUAGUPOADMVLYDRRSIDCURBRMWHAGFUZ", "UHUBNGUPFQHLVSEPRHDWNCERZAMZMOGMTKLET", "ULUBZGUPOANZVVHORRADPCYRBGMYXOGZIPXNAGJLCM", "UQUBYGUPTAIZVFSDRGNVJCARBCMSXOGPQNFMDGWLGYAEA", "UYUBJGWPZAYKVLQLRTHFBCMRBEMX", "UFUBIGUPNARQVQHMRKMDCCGRBHM", "GMULKGUTZANUVVGRBUEOYCIRBPYKXOGKBNJJJGMLVO", "UMUBKGUPHACE", "FHUBYGUPIFEAVCT", "ULUBAGUPVACVVMKXRBIGHCERBXMHXO", "UBUBMGUPJAPVVSAARJMLDVRRBWMVXOGWTMQAQGHLUF"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "UDUBJGUPIAYQVTTWRHNJZCWRBYMTXOGTWIIHJGHLDJIEAFQ";
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    string feedback = "-H-NFGAD--Z--BAMZA-S";
    vector<string> words = {"GHMNFGADPCZONBAMJAQCUROTFSQMEXWCQ", "THXNFYADBAZSKXAMO", "RHRNTGADEEZTIBAMZAJFWFPVRIRMLBDVXTWQZXAEPPMUVR", "RHSNFGRDUNZ", "AHDNFGAXTLZTVBAMZAFZHCTUKAUOWFXVTDVDQSXXWBKEKXYXQ", "IHKNFGADAOZSPBAMGAASRMAWGCILTJRGVKDPLKNMZI", "XHINFGADWNZJCWAMZACSBFMSTLRIRWWMZRMNVOTEUG", "YHINFGWDDIZLGBAMZAKSMGZPWFCORXMVOOKGMNIIRZOKILJA", "AHANFGANFRZUBBAMUAVSPYAOWPXXDFMLGDKSBM", "UHXNFGADFWZQXBOMZAHSIPGB", "CHKNFGADRHZU", "KHWNFGADAWZML", "IIRNFGADGWMOQQAMZAOSATYBBGTLRAULJWHCBFLQMZ", "FHFNFGADCPUKNBAUZAYSXCEQQOYUSHWWXBAZOKMGEK", "NHXNFGADXWZNETAMZQUDHPPSWBPVKPFGED", "HHHFFGADOHZLFBAMZADSMWSJLNW", "CHXNFGADUYZODBEMXAUSBR", "GHBXFGADIDZGXBAUZAOSNNVWNAR", "IQBNFGADLTZBEBAMZ", "DHQNFGUDZPZDSIAMZAWSSRNXKXCMXCYTZXARJQCQAOQH", "RHFNFGADSWZWKBAMZADSZGOXKXGIBWIYYGEFNERHDOMAXDSI", "NHZNFGADNJLMQTAQ", "BHBNFWADVURBRBAMZAASZQMSPWCUJSOPMMZOCFNQOTT", "NHBLFJADUFZPQBAMZABSNVXXDOXQGLTWZGZDVQAGZ", "OHPNFGADAFZTFBAMZMMSYPIKZ", "KHYWFGADCRIHVBAMZAPSXBFPDDUAYOHTCEVWVLBSOFR", "VHTNFGADCRZXCBAMZAIS", "GHKNFKADOCZAHKAXZAVSKPDTWTMYLOBYQVCLAV", "LHTNFGADGLZXO", "DHZNFGADWLZOCBAMZAYSUQAMWOZONKOHORUYTOGH", "IHJNGGADBWUTRBAYZAHSRQTGAR", "IHVQFGDDVTZSBBAQZAKSI", "FHPNFGADYPZTVBAMZADSZSGVTSGTQDISFKLC", "ZHANFYCDOIZXVBAV", "JHONFGADFNZRSEAMZAISARGMHZYVRBKKOIURUKVBCTHIHE", "LHZNFGADFVZJIBAMZAXSBMEEUOBJD", "EHHNFGADNKZRHBA", "UHMNFGADPLZABB", "FHSNFGADNOTEIBNMZASSKAGHBBGLTHPNZIVEJXVTZULRPUZT", "IDZNQGWDQBZIUBAMZHEAZAK", "NHBNFGADTBZBRBAMZARSLWSDZMPKOPER", "VUDNFJQDKDSLZPAMZALSSVBCAIS", "NHBNFGADSN", "KHYNFGADTOZFKBAMZAESFWWCMWOQFHFHPRDYBKZXPVHRDYFLY", "GHDNGIADSDZKKBAMZAGSQBZKNXTMTK", "DHJNFGADOJZHIBAMZEGSQVSLWHZLDDRRLDVUWDUQPIW", "FMZNFGAKNHZZEBAMZAESNWWMHAKQJMZXKTIIV", "OHKNFGAVDZZYUBAMZALSOQNNEXZATNVCSFYYV"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "VHTNFGADCRZXCBAMZAIS";
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    string feedback = "N----C--IR----LSQPP---XPC";
    vector<string> words = {"NCZIVCIBIR", "NXPIQRUBHRLYXSLSQP", "NLSRJCOSIRHIVOLSQPPQTNXPCUWHSAZOOIIRVKPHPFSNPJWW", "NCYFICYWIRECGGL", "NTPLRCTSIRPUSZLSQPPRXMXPCPYNKYNWEYNXRDPKYC", "NGAHWCHZIREXGFLSQP", "NRSETCVUIIZAXALSQPPTZKXECLKMKIZBIQ", "NPIEOCRVZRWVJGYSQZCDYGXPCEQOWIXR", "NRRBECTZIRYYUPLUQP", "NQNMKCPZIRWGMPLSQPPGH", "NUZDGOEUWREY", "NSLCHCRMIRJU", "NQZOBCIEIRZSXULJVPPBSOXPCSR", "NXVOYCVUIRCPLYLSQPPRGLXPCWIQUQCFK", "NUYORCBPIRHTEBLSQPPYYMCPCBESZVKYWDICCDVTK", "NSEHLCANIRGVKULSBPJTFMXNCPONDJEHIGXXAGFRDNN", "NDBKKCBEIRKMFWLSQPPADKXPC", "NCYGEQMVIVNTTULSQPPCCWXPCSOENMLGEZZX", "NUAFQCIPIRZVZNLSQPPUJWXPCEYDBIVRZFFZCVAGGTQUVFE", "NPVNFCPEIRN", "NMYJOCSLIRE", "NOTDZCLHIRABIMLSQWPETKXPCAHSOQOTVMEVXUQJOENIC", "QMQLKCKPIRQ", "NCCBJCNUERFQSLL", "NELQSCADIRSSXXLSQPP", "NOJFQCNHIRSSMOLSJPPLCRKPCQPSKW", "NZAKZCLUIRUPBJLSQPP", "NSJJDCWEIRLNCVLO", "PQBMACIFIDXRWZLSQPPQKURPC", "NSOOOCCWIRERKKLSQPPFSIXPCFWPPKTZ", "NBROJCVNIRHEAILSQPPERB", "NZSJJCEMIRFZWMLSQVPXGAXPCCQGLEEALAYWAYJMVMIWWQWX", "NBSLKCMLIRQXJHLSQPPCNYXPCOAWNCXIAYUGDPEOKBLJHXZX", "NUGGBCFYIRNYMZLSQPPVXPQPCWKALIBFTWJSKSSYSTSQKDCN", "NMUXFCBJISMIHQLSQPPAFIXPC", "NIEPICWIIRDAOYLSQPPSUEXPCZBCHILWLKPIDMAZTLUY", "NLWHFCWYIRTBISLVQPPVQPXPDVCTI", "NQLMANOWIRPWDVLSQ"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "NDBKKCBEIRKMFWLSQPPADKXPC";
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    string feedback = "Y-SPBIQLCCEJ--HY-X---HK--W";
    vector<string> words = {"YDSPBIQLCCEJTJHYMXOSWHKTRW", "DHSPYIQLDCHJSCHYOXVMHHKFWWNZAF", "YWSFBIQOCCEJWNHABXWMKMKFEWSFOJSVFN", "YSSPEIQLCCPHRZDYNXIGDHKLUNEEVTFUONIGBUUWQCFWVDL", "YTBPBIQLCREJZBOYXXOMDHSJAWDFE", "YISPBFQLCCEJMAJYOXWOZHKQQMKXDEZ", "YSSPBMQLCCEJBEHYUZKBQAKIYWLNUFZQGHJAAGHZDMDREXM", "YFSPBIQLZPEUXNHYHXPIV", "YQSPBIQFCCEJBAHTNXHQJHKSXWFQQYRTQZTBG", "YESPBIQLCCEJNGHYEXMMYHKZOWOI", "FESPBIQLYCEJJBKYZXUSZEKEUEXLTK", "YWSPBIQLICEJQIHKEXSHDHKOMWQEEGLZPSFECFVTUTJPBKUD", "YZSPEZQLCCENMYHYOXZUNHKB", "YGSPBIQLCDEJPCHYEXTQX", "YRSPBIQLCCEJ", "YDSPBIQLCCEJAJHYGXKNPMKH", "YRSPBIQLCCOIBSHYMXFDSHKDAFJFPIBZYJIJRY", "YFSPBIQLCCEJFMHYWXPLWHKHZWBGUUMEEXNNM", "YYSPBIQLCCEJCXHY", "YQSPXIQLCNEPEEHCAXGCR", "YFSPBIQLCCEJHT", "YZSPOIQLCCEJ", "YUSPBIQLCCEJGVHYMXVVZHKMUW", "YPSDBIQLCCEJTWHYZ", "YESPBIQLCCEJHNHYGXQPMH", "YCSPBIQLCKEJNSHYQXYQAHKIQWIBWKQKSINKYVSEOQTYEBWX", "YZSRBIQLCCEJSWHYAXQTVHK", "YOSPBBQLCCEJRXHYNXLLKHKMJHKLDJXDKLGCLSLYORE"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "YUSPBIQLCCEJGVHYMXVVZHKMUW";
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    string feedback = "-XM---X--Z--V------J---T-";
    vector<string> words = {"EXMKSQCDQVOCVYAZZDTJJ", "SXMHAIXFAZLFVWTPIVFJHKQTFWKE", "OXMSFEXXVZCDVXYRYUDBWNL", "MXCVWGXIUZIUVVREWHAJEWPTXWZBYKUBFJFAFQHTSFBYBZJ", "UXMWABCILZAYVEMQ", "FJMRGHXSAZTKVHUSRYLJYVFTROHRVJAAPWQDQCJI", "DXMTRUXHEZPL", "PXZVGOXXWZAWVZVRQFEJIMFTQWLSMKDGOH", "EXMYIJXMUZPCBUJDIGSJM", "FXMKUUXHLEJXVMGTBTXJAOSTLWUOGAEAODZJQLOZRJQMSMQG", "DUMVTEXQKHOBVWAGYTPJYLGTR", "VXMUQOKVCZOXVNWM", "CXMOSGXSHZNGVSSDRGTJPCWTKKSRDRDIMKCICGOWAY", "GXMOPYXHQGONVIJAKSXJZNXTWXWVZGTXIIYROF", "IXMSDYXIDZYDVYPTIIQJNHATJCDUX", "FDMTITXLDZHVVJXMDBJJMEBJSZFLFKEHLOEQYOAFE", "VXMDZRXGSZKPV", "CXMVHRXQFZIEVR", "SRMAQEXRLZTWVRQHTFMJW", "UXMWPCXDEZUSVYLRKSGJELOTD", "SXMKAVXUJZDUVPADRWAJIKBTYIMADP", "SXMHIXXMVZGJVLU", "TXMKXCXTAZRWVE", "FXMZENXHXZRTVNYTZETJZGETHF", "LXMOKCXKLZWHVKSUPMLJDXXTCCYCQDZWBVZKCPJB", "IXYGJQXXKZZTVEV", "GXMQTLXIDZBKVRNVTMQNGWVTXHFOZ", "EXMABRXIEZYNVVWFRUIJJSFTKKKHBNHOQWBEWOEABY", "WXMOLDXIQZISVKXSKNVJUYRTPNP", "MXMAUCXXXZZWVMJWVNYAWYXJJGMQKOUCXQOCELXNGCI", "YXMNUMXJVZODVMHDUJBJXZVTDSCOSPDUHDS", "VXYUTMXQUZNOVCQDJAZJPXQTJKXBGFUYQ", "KXMANLXVCZLQVXFTJHIJKFYTYGAFVCEVATFFDL", "IXGFDWXSMZOFVKRYNGLJRZPTJFJXAEBIUYNSPDUY", "VXMJWFXWEZZDVNRNCQYJBPOTIEFJMLRIKHRXYGROOTWLQI", "EXMVKQXMOZZLVWHHQBAJU", "PXMZIJXCZNIEVCHQOXAJKLSTMIIUQKSMNMVMRCHE", "FXEAKFXSDPWUVF", "SXNOEBIBSZBYVGUSEM", "DXIWTHXMIZHPVLKSSITJYWTTOKTHOKQXMVZK"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "UXMWPCXDEZUSVYLRKSGJELOTD";
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    string feedback = "EETRRIB---ELAV---J-HUN-REEC--CNC--SQ-KT--W-M";
    vector<string> words = {"FETRRIBVSKELQVXFZJHHUNCREECMQCNBV", "EETRRIBIUUELAVQVHJTHUNTMEECTNCNCKASQJKTEKW", "EQTARIBQXOENAVFYRJX", "UGTRRIBRXWELA", "EETRRIBSIEELAVRGRPNHUNZRZRCWZRNDVOCQLKTJOYGMXVNHH", "EETRRIBDRHELAVSQJJXHUFMREECFSCNCRWSQDKNOEXKMRTLC", "EETRRIBAIXELAVWGNJ", "EETRRZBKKOELAVWHOGEHUNVREECHSCNCRPSQRKLPQWZMDBS", "EYTRVIBMDLELLVI", "EETRRIBTDSELAVULIJOHUNUREECXF", "EEHRRYBUDHELAVXGBJPHUNGRMECXCCNCTNSQSKTYZWEQNDFPF", "EETRPIBGZTELAVEFPJRHUNGREEC", "EECRRIBJHGELA", "EETRRIBUKS", "EETRRIBOADELAVVMRJRHX", "EETRRIBETMELAVRNLJCHUNLRFECO", "EMTRLIBBEAECAVCJLJJHUN", "EXTRRYBQLCELAVLT", "EETRRIBFPUELAVOMAJOHUNOREQCFICNCVS", "EETRRIBLOYELAVZPH", "QETRRIBQBQELAVCWVJGHANW", "EETRRIUMCBELAVHB", "ELTRRIBKOZELAVYXFJDHUNQREE", "XETRRIBLUOELGVGR", "EETRRIBRFYEVTVTGH", "EETRUIBQLQOLHVSGKJHHLNRREE", "EETGRIBUJPTSAVMAHEARUNWDEECIECNCHYSUVUPQX", "EETRRIBPJCELAVH", "EETRRIBOVXYL", "EETRRVBYMNELAVMANJMHUNLREZCFXCDMVUSQNOTOGTEMO", "EESRRIBLIZELAVHMQJZHUNNRJECNCCNCWPSQCKT", "EETRRIBRZYELAVUPHJIHUNXREECICCNCGJSQN", "EETRRIBSFRELQVODHJSHUNDREXCPSCNCWT", "ENTREQCQJCELAVGENJKHUNCRERCFYCNCDIS", "EETRRIPLXOELAVRQWJEHUNAREEZQICNCDOSQEKTMXFQXCHH", "EETRRIYTZUELSSYBNWBHUNPREECYKCZYGUF", "EETREMBTLUELAHNRGJWHKNHREECSTCOBJBSQNSTRJ", "EETRRIBGOOELAVBOJJQHUNRREECCXC", "EETRRIBAEEELAVNRFJKHUNAREECFRCNCQBSQVKTAAWVM", "EETMRIBHTK", "EETRRIBOKIELAVVYIJZHUNVREECEB"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "";
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    string feedback = "--------U-------FHJ--F-JW-Q-------O-------";
    vector<string> words = {"TPVDLRZQUXSBRGFKFHJDMFSJWHQDXJDZVJOXQOLVCVXSMB", "SZZHQSFOUZVWLGODFHJOHF", "LPBJJPCSUCPXDYYYFHGH", "TTWCZKARUIYQKEQOF", "VIWSGHRAUTLZRPCBFHJOJFIJWOQFCEIYRXYDOJSYYLI", "XRPDTPFVUWCTYELXFHJAJFPJWAQWITUT", "WBMBDBHNUOYWFTVEFYJJPZXJWEQCXRJLAYQWNZH", "INEPGZRMUVCLECRSFHJVCFTJWZQTRZXLDVOMMMEADD", "YUBWINWIUWZKYOCUFHJMJFGJTXQEGHFNNEOZIZZBN", "APOTFNLGULENORHSFHJEZFCJWVQCTCVRTNOXMKUQKPSD", "VRRFZCGEULZLVNRZFHJWGFQJWMQIJZ", "QXSOEKWJULWDRGWSFH", "ENMYVUONIZLCQYMMFHJAUDMJWSYVDDSEATORELPRW", "RZDQQYHSUS", "UDMVHJRIUPVTPQ", "GDEUUELYUXZUCCECBHJSOFOJWQ", "NBORBCKYUDLAHMSLFHJGUFKJQLQBACXMYHT", "XDUDWWCAUJQJPHGQFHJESFGJWKQVBTMNSYO", "KFFVCGEAUKVXUJULFHJRAFKJWTQGMRAXPYOYOIWBUDAZCEN", "FVHCFKLPUUEZHREAFHJXEFLJWB", "WNXUFFDZUNMLWCNUFMJQIF", "KAJGSKVAUBOHWRZBHHJFOFSJWNQBQIEDHOOFFAREORQTIJIW", "KEBCJIJBUTWBY", "GGTYYPSRUUWGLFOEFHQTOFKUWYQVQTDKSIOBWXEFT", "QVCUVHLTUXAQOJRNFHJBCFXJWPQSCBWTVUO", "NMXSYFWWWBHNAIFYFHJGOFRJWXQXDDO", "CTMEXYICUPDGASXMFHJADFFJWPQZQQHJBHOIAKTHVYJR", "UTITVJPQULWIOJYNFHJUO", "XDSAMVYQULZHCFGQTHJNLFEJWYQLKXSYQFOAHFCYGAEYO", "DDNEDLRYUBLPVMVZFHKVFFHJWLQCE", "KWIPUBZWUTYAUNKDKHJEOFXJRNIKE", "ZTTQFJJIUCNHABJPFHFZLFDJWVZDFNCNM", "DECECYBEUSLSXNSNFHJBOFDJWVQMICZYRXJPLQYZYIXEIL", "QXNDTXPJUHWOQGJLFHJ", "VMSHPANGUGZGTWZTIHJUZFEJWAQAUAYXWQOHFTH", "TMQSPWXIUOORTNNQFHJMWFPGWJFFLEUJNXOSOYZISJHOMYFS"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "INEPGZRMUVCLECRSFHJVCFTJWZQTRZXLDVOMMMEADD";
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    string feedback = "---D---WDNF--WO-WAGF------W";
    vector<string> words = {"QDADTFIWDNFJYWOJWAGFGQXLVQWHNYCQNKRJZUOWKPYTSBXT", "GWONXKZWJNFWKWOMWAGFQMMACK", "KAZDSPZWDNFFVWOBWAGFUVXKRCWWSCBQI", "CFCDPSMWDNRGUWOYWUGSNKYVV", "NFODEIVWDNFUBWONWAGFALZCKKWEQH", "UAVDWPGWBN", "SBNDWRFWDNFGLWO", "UXPEMULVKNFJEWOIWAGFBUMYOEWUDJOBKKBLRFQH", "WCUDSMLWDNFLAWVGW", "PQXXFFNWDNFBIWOJWAGFZDKMZVWURBVREFDWMNYWZOHZJA", "IVFMZGSWDNFVFWOVWAGFTYRYGIWTUCJSGNPER", "PSCDCBPWWNFJAWOAWAGFIMUUJJWBX", "XBBDQHAWDNXLBWOSWAGXQZWBRVWFVCKCKPATRLCEGADAHVQY", "WZXDMOPWDNF", "YXZDDSBWDNFTVWOHWAGFPVEBRBWXTDTKOEHOEOGUSYIAF", "HBJDONQWDNFFGWOSWAGFFTZLIDWEQIW", "SCFDBZYWDN", "UNFDQONWDNFBWWOJWAGFWKTWVSVURLRILJGPP", "DXBDWBZTDNOWZWOMWAGFKJPTFGWZCMKPGFRTWSAPBC", "IOIFHGYWDN", "QNMDJMBWKNFSFWOGGAG", "GCMDZKMWDNFTGWOYWAGFDMCJPAWRADN", "EMZDVEBWDNQ", "KVMDIVRFDNFJ", "UXPDAFAWNNFCDOGFWYGFSNGUUXWIGQ", "ZRGDMQCWDNFGTWOHWQGFIVCAXWWJJTAJKVTCOTJGVQ", "TGDDKZBWDRFT", "GLFDJYRWDNFZKWOKWAGFICWKTAWVFICXLHVSZX", "XSADUJTWDNFTHWOGQACZARBQR", "UORDVIDWDNFEMWMMWAGFXWZQRZW", "OAWDLFVWDNNMHWOZWAGFTEIWMTWEVRZWJFLHYW", "LQJDKRKWDNFPPWOVWAGFBIPRQJW", "MQXDBRUWDWFSRWORWAGFFEINY"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "LQJDKRKWDNFPPWOVWAGFBIPRQJW";
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    string feedback = "-----BE-VONU-D--PFTQ-CL-V--IWOK-V-V";
    vector<string> words = {"MIDFYOESVONUZD", "JFCAJKENSO", "YVTREBEJVONUXDXNPYTQWCLBVCTCWOGYVMVLH", "VBHMCBCYVONUSDOPPFTQICLRVYHIWORYUOVKITU", "BEJZLBEBVON", "SEQUZNEWRONURDGC", "LJHYVBEXVONUVDVJPFTQECLU", "DEQJVBEJVONUXDJEPFTQGCLKVMJIWOKNVUVDFILHDIHV", "KWLSTBEZVOPU", "TDZEIBEOVONUOD", "JJWIVBENVONUPDN", "RPHUIWEBVOOUHDOUPFTQXCGSVOYIWEKQVIVVJESZYM", "MNAQSBECVONUADQT", "UXAUIBEYVONUBDNT", "OYDOABVAVONUMDPV", "CVEKHBEXVONUIDYKPF", "DJGPLFCPVONUDDIOIXTQSCLEVUYIWDKAVKVTW", "WTFTVBENDONUVDILPFTDJCLEVBRIWTKMVD", "QTZHQBEOVONUADCXVFTQHCLAVSKIWF", "LGDOLBEJVXNUTDHGPFTUFCLRVA", "BJLCVBEDVORUUDKGPFTQTCLDVSZIWOKVHAVFTULIHNOEZKUM", "NORGVVEMVONURDYIPLYQGCLLVUDIWOT", "FFLBJBEXVONUSDUHPFTQOCLDNDH", "GQCOPZENBINUEWFIPCTQACLZFGVIWOKKVE", "SJKVOBECVONUMDXIPFTQHCLJVNEIWXKVVSVYXXHPIMKLZAJMP", "PZDSGBEHVONU", "MZMRJBEJVONUMDSAPFTQACLXVJAIWOKGVHV", "CKSBABEIVONFLDGOPFTQLCLFAJHEWOKFVFVLRPDNCWNL", "IWVQJBEYVONUKDVNPFTQUCL", "ACWLPBESVINULDVSQFTQSCLNVU", "TKEPSBEKVULUYDFOPFTQTCZFVAKIWOKKVZV", "EVHFPBEHVONUFDQFPZTQHCLLVNGIWOK", "WMEAABERVORUBDZOTFTQTCLNVPHIWOKE", "RZCXVBEZVONUT", "WNCPABTWVOVUJDIYPLTQGCLR", "DRDJCFEXVONUYHMSPFTQYCXKVUHIWOKAVHVQ", "QZYXTBEBYOHUWROTPFTQRCLVV"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "MZMRJBEJVONUMDSAPFTQACLXVJAIWOKGVHV";
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    string feedback = "X-----FKC--I-IZCO-Z-GUG--S--I-TD-IV--";
    vector<string> words = {"XMRDSIFKKLXISIZCOYZFGUGUASNIQRTDOIVZDU", "XOYMJJFKCSOGTIBSOGZYG", "XPPYYLFKCLAIHIZCOHZNGUGQNSRBIATDWIVYM", "XZXBYYFKCJDSMIZCQYBXGUG", "XJXOCJFKCGCICIZCOFZAGUGPMSMMILTDIIVCGGZ", "XWHQEQFKCCUIHIZCOJZL", "XOICCMFKPXHIHIZYOYIHGUGHVQGLI", "PAMZVZFKCP", "XWQGGSFKCQXIFIPCOFZMGBZNQSGAIARDPIVRUSDFVGW", "XKLXBOFKCEKISIZROIZ", "XQYAAKFKCFFIMIZCOMZDGUGFRSIOIETDDIVBKZKOBE", "XAZIKCFKCPVILIZCOMZTGUGFPSTXIL", "XBRHFMFKCRAICIZCYZZNGUGLTSOCIJTDLIJCAOUDQQN", "XBZEBFFKCFSIOZVCRYRBGUGOGSDPORTDBIVYIHBDYYJC", "XYAPORFKCCCIJIZCOFZSGUG", "XCTRYVFECUVIEIZCLYZOGUGMNSXDKQTV", "DJJWYSHKCHOIGIZCOKZFGUGZNS", "IQVWRWGKRUBIKJZCOK", "XOEYFQFKCXJ", "XNOQZCKKCNFMWIZ", "NTNMTSFKCEFIYIRGOEZAGUGOUSOUFLTDBIVLX", "XHRBVLFKCWCINIZCORZVGUHJNSSIIATDHIVKHRJLD", "XPFWBAFKCYYIDHZC", "XNOQBLFKCXBIBIZCOQXO", "QVDYNTFKCGXIUIZDOCZFGUGLPSU", "XCRWHGFKNOJIPIZCOCEQGUGOASIDIXT", "XYVEDWFKCUOLOIZCOAZPGUGQNSJHONTDLIVWSMEDMFTW", "XGPCOMFKKPEIQIZCMXZAGUGISSIUCGTDVI", "XNOAWJFKCCIIUIZC", "XDHZVROKCTUIFIZ", "XIFPCPFKCIGICIZC", "XXVCICFKVIJIGIZCDQZOGUSWMSLVLMCDJIVXPDACSZTOSANF", "XBARFZFKDPUJKIZCOTZSGUGJGSJSIRT", "XJMYNQFKCEEISINCOFZLGUGYWSFLIPTDDI", "XMNEWMFKCCSITIZCOWZLCUGQQSPUIDTDSIVEP", "XWJNQJFKCRCJJIZCOCZOGUGMBSRPITTDIWVPQKRXVMQPI", "XMAACLFEIQPIVIDCORZQGUGHISWLQOTDFI", "OMTHBNFKCNAIHIZCOXZWHUGD", "XEFWHHFKCNVIFIKCOSZMGUGFDSNBIFTDUIVYGXUVLFYMR", "XTQLHOFKCUEIPIPCPWZYGU", "XNJADJFKCOWIZIZCOYASGUNTHSAFILTD", "XCFYFHFKCCRIXFZCOKZEGFGKPWFYIQPDOIVUOAYSKMQ"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "XPPYYLFKCLAIHIZCOHZNGUGQNSRBIATDWIVYM";
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    string feedback = "W---ECN-FPZ-PH";
    vector<string> words = {"WXJTECNYFPZNPHBIVR", "WICHBCNQFPZDFHAZ", "WQQPECNDFPWGPHTJDACUOJQXVGWDTBNPMJHZLUEBMLZOZZL", "WCTNCUYEFVZP", "WCZYECNQFPZKLHZJQKQQEECBYJNIZVEGOGRNCAZTDQWI", "WXEDECNIFPZWPHYFCISQWCRIEQW", "WGCPECNKKPZBPHMD", "WZXEWCNQFPU", "WTQRICNAFEZXMHOQZDDIPHMAIBLKCGQFLGN", "WASZECNFLPZFPHIOGMBNSYJVZADMGHWM", "WDCQZNNPFXYMANCMMRNBSIXNHWFZACDIDUM", "WOOQECNMFPZCPHDGMDAVYRIYHCNJTXDXPEWKRIBSFRDOJ", "WEGOECNTFPZFPHFALKMSKMPPOC", "WRKWECNHFGZWLHOHMVOJTTNLWZYASBAUFU", "WGQXECNEKPZTPHKZEFPOCDOLZSBLVJOTVWH", "WXXYECNFFDZHPHP", "WTQBECYFFPZEP", "WDUDECNTFPZEPHGKSYUPCO", "WXXSECNFFPZGPDQVMGWCNNQSAVBIWGZEJSGNBL", "WNLRQCNZFPZIPHJDKRRTARDBFIRINZI", "WVPRECNRFPZQPHALZTAZJWJHEXZXQUIO", "WLZRECNLFTZOPHPFDXVZIFYQQCVRZHYAUFLCFMK", "WCDCECNWFPZ", "WRJJECNMFPZSPH", "PPCTECNJFCZXWHIANBLICLKBXOSGMT", "WLROECNHFLLFPHQGFHTATMFQLDNFZGSNYBE", "WCHGECNRFPZXPHWSKXFQFOZVR", "WECSECNKGPZAPHNEUCDJAHK", "WRGGECNSFPZSPHFEVSZPPGVIBHMEUPOCBPSZDIFSVQGM"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "WRJJECNMFPZSPH";
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    string feedback = "-B---K-H-MG";
    vector<string> words = {"KBVUNKBHXJGTFXAQFRBFMPFLFLVQNNXV", "QBJSKKFHVM", "SBJJSLOHWCGENASTKE", "ADVQGKOHQMNGAHORQBPTTQAKOS", "IBMBCKPHBMYXGDWDBUYKCGOZRVPMDG", "ABDPJKTHOMG", "KBEBBKAHEBGNOQIDRINMMSLTWYFXWQHOKFZJVCEJSEEJRIPSQ", "NBTTUKLHZMSAYTVL", "RBNOZKPDGM", "KBFDXKYHHHGWYWVWZBBDZRV", "OBMOIKZHWMGJBUHKKLJBPUUCV", "RBQLQKTHGMPLXNDDRNONXBOZVJBKTGZUXRCIDXTJCQBPX", "VBQKHKNHXEGGTIV", "LBUIPKGHNMKVRXCPRIHKHCMCUTRXDHQULGODCDMFGW", "CBTDJKAHHMGMZXUBFAHQQU", "MBGFLKHHJMGBJVJPZMTYRKKMYWFPYRFKXOOFDRLP", "CBNOZKRHOMGILGMVOXMIGNBLVMGNI", "XBZGGKUHAMGUOFTCJMDOCFFFSWUUYRIWFFWPMGQDURIOASU", "XBMNCGAHKMGLMBHNGPSATCXTGBLQSMQX", "OBLWQKTHKMFJMIDKKBEOIMMQKDEXVOMKCEIEEQ", "YBDHBKEHXMGERZOAIQWVZNHUJCQ", "MBNCYKOHRVGKRAILGIIWRIWEBXBRSG", "QBBDAKKHBMGMSODBKCSH", "DBDBHKTHUWGNDXGWNM", "HBKNAKNHLMGY", "PBOCNKPHKMGQKP", "XBFVJKEHWMGZG", "CBWBQKVHWMGC", "LBYKCKPHOMGGWJTND"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "ABDPJKTHOMG";
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    string feedback = "-------Y------------I-----------K-";
    vector<string> words = {"NOFDVAUYXAMPKHSFBIYGIFZAMHJGNZVSKTP", "LDEVHTIYCKSJXCGURHQFIEDSFRSQFQJAKKQH", "RJUBQEGYBOXSSVHZOZTWIROFRJGEFGEATPZDZGIAKQLNHWS", "BHKKEPLYPWUJGKFWHXNHIBZDJVPKDLMEKZFECJMBYQHLD", "IXOFAQAYBKOCPZBBZLQOIGQZEHWBWHIFKMKMDN", "GOKNXOPYKXPIQGDVQGMRIPYAEBYZBHVCKPD", "CBSJOINCUNGKJYFGHRASIOQAYXTSPKZFKKYRXZY", "PZWLVUYYOTJNPYYVYCLPI", "NSCRUJCYMAXMQYWKXYCUITGI", "ZSAOPUGYUCMUCKQJKYQXIJJBF", "OKQOMHBYKDNIOCHOEZXNETSOICLBNAT", "WUIMFNNYBQHLDZYWGJRDIJOEVKEOFVIXKKA", "EAYBZSZYRKUQOISOBTPWISRRCDSROEQLKELKYZ", "GSARHGZYFMGTHLASKAWEIRFXG", "UYYYHJCYRDVZK", "WVMIPDGOCXWFC", "QXFIDCYYBZMAOL", "JDVVECIYPLHHWMYHTXNHIYERE", "ZSXHETEYIFXNUOAMSYQOIMYN", "QIJBGUEZNOQPLTBDJKFXIHHMWBMFNACDKRSTXEOYUZEIBSRQK", "IQGROPKYAGJCXSBKMFC", "NVEGYGNYTECRIWRUQUOMIRUBXTXCQFDRKAVIZHOGPAKBSCTZ", "FNTZBQQYUUKPAKNMRETFIFDDMICPSJFUKEFTJBGI", "ARJKEOUYHLAJOFXGDAJLIODDXSNWREJQKKT", "ITPGAONYXXYLMRVGANPKIETWIUNWFZMHKCUSHUEMPJSB", "YEVVDYIYCQIQDNWFRDWHITPVIAJXCYYFKGBS", "HIYZIJHYKUNZDSBACTBDJGCHLODQX", "DBUAFZQYCVDRGPB", "UTQTPUXYNLEKMEASRRYOISPEAZT", "NHEDZKOYQYYHWIDJHPPPIYL", "FHKFALTYKJJRMRFWUVCOIIOHOAFFXPPCKZKH", "DBSMKZMYWFTJWKDOVT", "KXXMXEQYHKTVPUISEQZSIVEWEURWNW", "JVUTDRNYPVYQWIOWHHF", "VRVOWEQYQAFL"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "";
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    string feedback = "IZ--F----N";
    vector<string> words = {"IZFYFTEZXNOSELSNHPFZETNRHZTI", "IZOLEJPZZNVTAIAAXHJQMB", "IZAIFJCFWNTJKTHIDNEJESFISVQGOIUEBQGUEUUTP", "IZQDFOYVXKQSRFYHIQPEORRGWUSFHGEICSZERVDRIYPZTDC", "IZXECCSNKNTEYTMBUMRNSTBLFPKXSZKSDIVINKPNTHGOPFK", "IZCFFRLCQNWI", "IZEBFYIIFECOBBMEINUUQBPSQZHRZHRUDFWPRHBHFFRZDANG", "IZZOFQFKDNTCIPCCMJARWIJFUXRTGMMTYRGX", "BZQYFVHHXNNIZGCXOOJILKKD", "AZZKFLTDFNXAHMRCNGRWGKSTXCOZNFWPNOWQDQOFO", "IZEIFZXIANHAMRQMKQMYKJCBMKNZFBTOVMTUUUXFF", "IZQQYRUQSNSFTSQHWAGZFEBSCVPKFO", "LZUGFEYENNLITLBX", "IZEMFSHWFNZAWAXVWQEKPRYXXFICCLKNNPDGNORFEEJMRXHPD", "IZEHFOOXBNHJAGGBQDHDPVSWTFMKCDZ", "IZYFKVPNWNCKAYRIG", "MZBTFIRPQNXUIYUSWHWOHQFHZMOKLANAEMQRNFXRFLDEGNQR", "IZVJFCEWCNSEIISJILJOXKOIHWZGBTPV", "IZPLFPXLBN", "IZCQFYVPVNPMFZWPQJGSVSTYDRKMTDIMDRHEGNSGUDHFCHQVN", "IZWIFSELGNTVUKB", "IZCZFNVKUTFSCRKYVXOPXJJDUWKUJNXMPSI", "IZMJFGGHUNSDLXLXVBCUFQEEYKKSKEJIJAVUHJPWT", "IZCBFSKPINJSVWOJU", "IZXRFKWDBNPIZACOMVWFIXFAAQRGTVQZHVFXZEZVCQHNFKBV", "KZUIFJCKZNUJKOFGJOHQODTDHREPZB", "BZZBKKUGONFSWYMPAVETBQLOWD", "IZPWUSZLZNMHCKMGZGRGWTOVODUQIDSDWFRVUVVHYD", "IZCJFCBYFNSRRJZPDWAPHUMKMKSWKMAXQPVMCKDAX", "IZMFFETVPNVEVNYEVUVF", "IFZQFCMSNNYUYQ", "IZRAFJDQTPVBRWHEWGGTTZTBWIXDTMJATMGC", "IZCKFDJGHNDICBRXROSQSCQPWQQJU", "IZDAFBGIVNPGOMCJONHPQSRASL", "IZCEFMFYHNRWHR", "IZHKFXYMKNBQTHZCKBDADEVSWWBYTCEGMEWYIEJWWPPNEJ", "IZWOFRUEMNHROOWEBAVYFRFJWABWMS", "IZTOFOBWANIUYINWUSLSZCSMRNBZZKYWKAD", "IZGGFMSFKNTUAEAUCUCSCYSTKUWCYIDFMRZTROGZLWTDH", "IMAUFZRUCGIADWVDAXFLPLC", "IZHJFCEJCNSZCKIQQZZBBVGSULNGMRMRDTKA", "IZVUFGAUTNLPRPKZPKMYPSFY"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "IZPLFPXLBN";
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    string feedback = "DIVN-R-Z-OJLTTBCH";
    vector<string> words = {"DIVNERAZTOJLTTBCHUFYEQCOGC", "DOVDORBZUJJKTTBCHQOMJAVZTWRS", "DIVNARNZROJLTTBCHTKJHVJYKQJFBBWMSNYETSZNVTBG", "DIVNSRNZCOJLTTB", "DIVNSROZFOJLTTBCHE", "HIVLYRHIPQJ", "DIONLRCJJOJLTTBCXCNJAWKUBYC", "DIVAMJFRNOJLTTBCHXNPVNAFFTEZ", "DBTNHBRSVOJLTTBEHPBKVIIQDNSMP", "DQVNQROZDO", "DIVNYRJZSOJLTTBCHQNOODBTEVM", "DIVNBRQZJOJLTTBCHSKZWNYVBBUIOAO", "DIWNZRTZYOZLTTBCIACFUDMAML", "DIVNFRDMAOJLTTBCHCCJDD", "MIVNSRLZJBRLZTYCHONPDEBELSEFZ", "DIUNTRYZIOJ", "DIVNBRKZTOLLTTBC", "DIVNIRZZGOJLTTBCHMBG", "DIVNPRTZOOJLTTBCHJPD", "DIVNIRVZLOJLTTBCHDWLHICNXX", "WIZNRRWZBOJLTTBOHHGITAQMBKNEBGXCCODDJXIW", "DXVNPRGZQOJLTTBCHIDGAEFNCCAYUGMDALN", "DIVNVRNZVOJLTTBCHDTVOITANQYQZUSQVHIUTKAXZQJS", "DIVNCRTVEOJLTTBHHPZROZUKEBTMURQTIPZGQR", "DIVNYRTZUOJLTTBCHGCUD", "DIVNBRQZGXJLYTBCTQHKQLLVBAGEAHPLTCKD", "DIVNJRSZAOJLTTBCHTZOVYSNRTQHOUMMXDESOAWBVYFPOUM", "DIVEJRDZTOJLTYBCHMJSZ", "DIVNGRNZMOJRTTBCHVRF", "DNVQCRVZCQJLTTACHWVSNLOAVMNLJQMYKASHSSJDASVNRXPIB", "DIVNSRXZYOJLTT", "DIVNCRVZEOJLTJBCHJ", "DIVNVRKZDOVLTTBCHLDRMWLYNTFQNQJVCZETLRR", "DUVNTRYZGGJL", "DIVVBRHZNOJMTTBCHNVHSOMZPMRSHBUFXQUPMAH", "DIVNFRAZDOJL"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "";
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    string feedback = "-AJK-GBSX-NYGRWW-KHEM-QZJRJJM-";
    vector<string> words = {"VAJKIGBWXQNYNRWWKKHIMMQT", "FAJKEGBSXANYGRWWSKTTMUQZJRAJMYITRFPRXNCBXNHRWHNG", "NAJKLGBSXENYGRWWXKHEMAQZJRJJM", "AACKAGBSJJNYGTCEKKHEMRQZJRWJTMAORQGZEBK", "YAJKQGBSIYNYGRWTZKHEM", "HAFKWGBBXPNYLRWWQKHEMWQVJRJJNFGSKZPQWDUTDRKVOS", "VAJNRGBSXQNYGRWWFKHEMIQZJRJJMWDIVWRQKOGL", "WAJKWGRBXXNYGRWWNKHEMQQZJRJJZWZQK", "CAJKCGBSXFNYGRWWLKHEMLQZJRJJMU", "BAJKLGBSXKNYGRWWUKHEMLQZJEJ", "EAJZZGBWXMNYSRIHRKMGMSQZJRCJMMLHBGPWMA", "MNJSRGBSXKNYGRW", "OAJKFGBSXYNYGRWWTKHEMXQXJRJJMUXIOWIFGD", "GAJKKGBSXNNYG", "JAJKVGBSXKNYXRWWZKHE", "BBJBCGBSXRNYGRPWJKKEMWQZJTNJMKVZDSSHSBJLYOHLXCW", "GAJKAEBSXQNYQRWWYTHEMWPZJRJJFJWVOSAPGBLMPFAO", "YAJKIGBSXMNYGRWWAKHEMQQZJRJJMSCTQQPBGPU", "DAJKBGBYXKNYIJWWPCHEMCEZJRJJYKW", "KAJKYGCSXHNYURWWSKHEMGQZJRJJMCXJIWPDY", "GAJKIGBEXYRYGRWWLKHEMUQGGRJJMJCOKXAHEMM", "BAJKAGBSXWNYGRWWFKHEMUNZJRJJMMZS", "GAJKYGBSXPNDGRWWRKHEMTQZJRJJ", "ZAJKEGBSXENYGRWWIKHEMRQZJRJJMFVYRHVMVY", "MAJKKGBSXFNYGRWWJKDEMEQZJRFJMBRLNNXBH", "SAJKCGBKXBNYGRWWZKHEMUQZJRJJMZXVHESNJURAMCFBTPRE", "DAJKGGBSXVAYGRWWNKHEMQQZJRJJMWYGLORNNMXHNM", "AAJKPGBSXSNYGRWWLKH"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "CAJKCGBSXFNYGRWWLKHEMLQZJRJJMU";
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    string feedback = "------GI------I--H--------";
    vector<string> words = {"HWRXXDGIZQPOYQICBHYSLUWCZJDTZOOVGVJIIZBOPHDFGMCC", "GKMIJWGVEOTSALIEDHHDYKMNZADJBNKKYVUGXRQURFAI", "YFJCTSGIZYJAFLGRLHHFGEZMOBRTCSMYL", "FIADSNGIVKOIFMIGOHZXKAGSFHBV", "WMLZPEGHIFRXHY", "DAGSKLIILPPBZSIOSHZYPEW", "UPCGNUGITBSQLHITSHHPNQDHNUUOZGEYD", "IDWEOOGISD", "OUORJLGIQFGUG", "LVMVPEGIKYKBLQICIHCAQEKDZSFVFJC", "WFWHBUGIZNSAIKSPPHEIWUUNVCEQWMEOJEUQHYTW", "POYSADRIEPWMBDIRBHIUCHQZMLUUDGCOTEPEGASHAANGKK", "MZSRQIGILFVESCICEHJTWVZCTDXUQYBPXEUBAXXKNTKY", "MVHMRHGIAOBJDXIJYHFYFLTHCY", "YDAWQAGIRXDJMCINAHADZNBVVCCAJQZBQFPWGLPQYIUYTPAJ", "UXZLXWGIYXEEMMIPSHOCJRUJZIAKESYVIRCGAHQ", "RALLLDJIEAXEIUIPPHMDFHMAVHKQZT", "LGDUMJGITCBMYHIPRHVKQAUMVZYAHTOISHYMDAPKIVZAMMYQ", "UQEAGHAIHMEMGAIFRHSXRIMWLDNBEIQMXRDVUXIGNRSXHMSUK", "FRKLNHGWHWNDRRICFCXDMQSLHLPGECXEJFRJTQYMLBS", "DKNPANGINC", "ZFMWECGICDIBJKIKOHOOXJHGESTEMMWRLBCHINZCODCXLYU", "ZSNDLRGIETSNEJIQAHRIPQENWYHDZNRRKTEGPJQHDUYNFK", "EUBJLOGIBME", "PLMEGSGIIEACYUBCQHVNGKKRJEPVMQLXQARJABVFWVARKRFJ", "MIJQMUGIPDUSUABRCHJFMM", "GSQMUZGIDARKVZICDHLJZKKDVTJ", "WYAWSRGIYQCKNEIYEHWQROHRRKPOWJBFZQZCUMIPJHVAIQ", "DIHOPNGIISF", "HWQVQXGHAMPXOCIZGHCBKJZSNNMPNOIINFBYKIYTHOEVIIXX", "VNZSYNGIWQKSJAILAHTYBSSSQE", "RMXNWZGIIELEQLINMHRIFVOCMVPPBX", "FYEIGXGTCBI", "VECLUHGISMHDBKIVSHQAKYHPYHHAYESWAFFV", "OPOVKEGIJCWHVEIQM", "QPMYJAGIIIXFLOIXVHOK", "KMURZMGZWEKYRGIWVHZZQDUJK", "AQMXBCGIAYQDZMIDGHCFKE"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "VNZSYNGIWQKSJAILAHTYBSSSQE";
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    string feedback = "IUWKUHETEEMQBCT-IKOWAURFGYNC";
    vector<string> words = {"IUWKUHETEGYCQCTZIKO", "IUKKUHETEEMQBCKYIKDW", "IUWKUHXTEEMQBCTYIKOWGURFGYNCNFQB", "IUWKUHETEEEQBCTZIKOEAURFGYNFSABILMI", "IUWKUHETEEMQBCFZBKOWAURFGYNC", "ISWKUHETERMQBCTTIKOWZCRFGYNCPS", "IUWKQGEQEEMQBCTTIKOWAURFHYXULMCWPGOJBNIFOXSQR", "IUWKQHETEEMQBCTTIKOWEURFGYNCDIYXGIM", "IUWKUHETEEMQBCTPIKOWAURFGYNC", "IUWKUHETEEBQBCTUIKOWAPRFGYOCR", "IUWKKHETEEMQBCQIIKOWAURFGYNGGOXVOVJVJYMYO", "IUWAUHENEEMQBCTWTKOKAURFGYNCGRJNBGXUYRMXI", "IUWKUHETEEMXQCTNIKOWAURQGYBCORIMGAPW", "IOKKUFETEYMQBCYNIKOWBURFMYTCFKYANB", "IUWKUHETEEMQBCISIKOWAURFGYNCJAUQIU", "IZWXUHHTEE", "IUWKUFETEEMQBCTQIKOWAURFGYNCHOFLT", "IUWKUHETEEMQBCGGIKOPAURFGYNCXMLDIOPIERLHGCGVVZZT", "IUWKUHETPEMHBCTIIKOWAURFGYNCDCUHL", "IUWKINENRELQBCTR", "IUWKUHETEEMQBCTXIK", "IUWKUHETEEMQBCTDIKOWAURFGYNCYXDS", "IUWKIHEZEEMQBCTHZKOBAURFGYNTJPRQDVYGFAYLUFY", "IUWKUHETOEMQB", "IUWGUBETEEMXBCTXIKOWAURKGYACPLPQILB", "IUWKUBETEE", "IUWKUHETEEMQBCTVIKGWAU", "IUWKUHETEEXQ", "IUWBUHUTEEMCBC", "IUWKUHETEEMQUC", "IUWKUHEOREMDBCTMINOWAURAGYNCFOSPWTGVSSMDHNFCUI", "IUWKUHETZEMQBCTAIKOWAUMFGYNCU", "IUWKUHETEQMQBCTGIKOWAURFGYNCXYQGIWEICJX", "IXWKUHEZEEMQBCTKIKOWAURFGYNCQ", "IUWKUJVTPEMQBATXIKOWAUHHGYVCJSOULXVNIPNKBTUIZJPX", "IUWKUHECEEMWBJQII", "IUWKUHETEEMQBCTIIKOWAURFGYNC", "UQCKUHETEEMQBCTIIKOWKUSFUYNCLGL", "IUWMUHETEEOQBCTIIFS", "IMWKJFOXECMQMCTKIKOEJURFGUNCF", "IUWKUHETEEMQBCTHIKSWAURFGYNCWQAWGVRTGKIVDRREEOE", "IUWKUHETEEMQBCTSIKOWAURFGYNCWGVGET"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "IUWKUHETEEMQBCTPIKOWAURFGYNC";
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    string feedback = "W-A-GIEY--JW-IPK---R-CNYLH--CLBZ-O-XUDQP--";
    vector<string> words = {"WEAQGLEYSX", "MPAIGIEYYCJGCI", "WCASGIEYXAJWYIPKWOHRXCNYLHWFCLBZMOW", "WGAEGIEYQIJWJZPKTYSRPC", "WFABGIEYMPJESIPKWRCRRCCYLHIYCLBDUOGXUDQPPZRQIO", "WGAAGHEYFYJWNIPK", "WFAHGIEYFUJWDIPXKTPRYCNYLHIWCLBZCO", "PIAXGIEYHPJWCIPKAAJRBCNYLHAXCLBZROSXUDQPUEBMDAQ", "WIARRIEYGRJWCIPTKOTRKCN", "WMAFGQEYCCJWTIPF", "WRCHGIEYMTJWBIPKFXHRZCNYLHWSCLBZZ", "WSAHGIEYEZJWRIPKWFZRECNY", "HSAQCIEYBBHWMIPCVRQ", "WSAMGIPYQFJWJIPKDIERSCNYLHCSCLBZ", "WOAXGIEVCPJW", "WUAHGVVYHVJWMKPKSJI", "WZAAGIEYRBJWIIPKXDARZ", "WUAMGIRYNIJWZIPKIMKRVPE", "WAAYGIEYAIJWFIPKJKWAPCNYLHPRCLBZQOCX", "WWAJGIVYVBJWIYGKNM", "WLATKIEYFPRWFIPMGPQRHCNHLHBSGLWZCOXXUDQPLNORYNX", "WHAZGIEHUIJWCIPKNFURVCNOLHJXCLBZUONXU", "WCAHRIEYDSJWLIP", "WVAVGIEYEXJWGIPKQVBRPCNYLHNTCLBZOOWXUDQPPDPD", "WUAIGIEYBVJW", "WVFQGIEYSSJWZIPKRTTRICNY", "SASHGWEYXMJWJIPKGWMRCCNYSHDICLBZBOOWPAQPJJGMVTF", "WQKLHIEYKHJWCIPKLTURZIZYNWVNCLVZROUXUDQPVILOTSI", "WZAUGIEPSYJ", "WFAAGIEYFEJWDIPKRXQRECNYL", "WWARGIEYDSJWYIJKQKHR", "WQADGIEYDQJWMIPKXDYRWCNYLHPRCLBZGORXUTQPK", "EMAGGIEYDCJWVIPK", "WIAYMIEYOFJ", "WEAAGGGYDTNNDFBRNMZRBHNZLBZMCL", "WHAECIEYCRJDWISKROTRVCOYLHWSCLLZVOTXUDQPS", "WIASGIEYMJJWIIPKJTGRDCNYLHOACLBZLOBXUDBPJ", "WIZXGIEJCQBWFIPKEZJRBCNYLHXEXLBZAOKXUDQXOOFZV", "WSATGIEYTFJWTIPKVFVRTCNYLHSMCLBZVOFXUDQPTT", "WEAVGIEFEFJWOIPKOVRRWCNYLHUTCLZKMOVXUO", "WAVFGIEYMGVW", "WEARGIEYWBJWEIPKFYDRDC", "WOAYGIWYOWJWEIPTGNZRKCNXLHUACL", "WLAFGIEXXUJERIPKUODI", "WVAFGIEYIIJ", "WZAZGIEYPPJ"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "WSATGIEYTFJWTIPKVFVRTCNYLHSMCLBZVOFXUDQPTT";
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    string feedback = "---------N-D----";
    vector<string> words = {"BJIELHUBBN", "UFSLCFUDUNMDVZBIJIMDCPOCKXETUSTSPDB", "HGCROWZSVNWDVNPRQUYGEGECJS", "SFGJMQKRWNZHLMDPFRNNKMYKBDQKL", "RGNTLDGAZNHDRXWONCMZSPGSPSJFVDCL", "JKPYXXIFDNMDKRQKBKGYQFHBNG", "UXXMGCGSZNHDBMBBN", "RFVGYZQIXNSCPIUTYXMZIQYPIQKSVDVESUTZDVSXM", "VIULHCDNBNLSEOZVZSWAARKESXZFJBZDCMSQWP", "LTOGEDTDUNYDTXHWJIAUURRFGGFLGULE", "PDVQPGHPRNIDACSOLWTBJOEFZBBPJHIHKLPHBATIV", "FQFSQXHMINEDD", "JZIETYMAINDDTYKYIJXBFXM", "XQZLQHYEENJDKQHHHTGTNVIEKGL", "FTLILYWGKNMDXZDZFDXD", "EKCEAOMBTNCDEHMJ", "YGEYQOJWINUDDQTMIHEMMWC", "ZVZZSJWPHNWDPMXZIQGAFIUVXAJWKBLS", "NXGDLBQZZNDDFWCVJTXHDYCIRCACOD", "VIBEXXIRZNKDTJEPV", "ESJSJPHRNNEDJENXYXMBNS", "GOTYUWYRENIDRJDNMPUSVR", "DLACOCLHMNODNQPBPRQSBZEAWUERBAIRMSSHW", "TTSRNMORUNFDVNNJSG", "UWWUKQBJUNGDBHFSWZFZOVIYTBNTGNROKGYDPGJSABMSFXLVG", "MBLZQCTTGNKDIZBXDRDJNKLJGTMBSFKSVMD", "FCPAOEZDBNRDRTGNUPMYSWXPLHMHRCP", "VEQLDGTMANVDR", "AJJCLXMVWNTDSROUCQUIUAVB", "ZCKDYQKCFNYDYL", "RATMLRKITNEDLRJKQKLNSTN", "MRNFLRPOCNYFEKBQMY", "PLXXNXLUJVFICAXFGOMUKRTFKJXRYRJKXNONFACAOXSAMX", "AEIYGCXZITLDTQBMXKZSQWBCTQVSSCIOHLHY", "AFHFKYEBDNGDWWBBRQZMDALMKSYETAXMONW", "HBZQUKGAJNDDWLCHSVSBWPOVSRLBZALPNKWCNQAJSYOG", "IIAWZBLEFNADTXVGKTERNZMINWXDSPVHBDAQKGAYH", "LMNQSKFSPNGDZDHPEOZJXHRJFFEKUAJNCLZPTC", "IPZJDTMAKNBDTQWGDYKODIHZASWPIDLOWGMHZTGQCALPUXAN", "LBEMGWHTDNYDBUOENXXWYVVJOZILAZKILDBQTQFYWR"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "EKCEAOMBTNCDEHMJ";
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    string feedback = "----S---------N-A-J-------EA------O-P----V";
    vector<string> words = {"HDQLSPEYDXWBHUNTAVJLXFIAXNEA", "GWCNLHHYWIKRKQNQURDTEPOFAZZABZUWHQXVPY", "JJJXSNKYFHF", "XFWASMRBXDWDLFHGWPJMXTMTYDEAEHOTV", "SYWQSWRYIKSFHZNQAWJIJZGZXXEAWRDNDJONPNFUQ", "KEDQSGCWBDNCSXNYAZJMBAZOJZEA", "IXSGSPQAKECDQINUAUJKJKZMIZEAASGXI", "OWLNSTZCJAVFFGNBSVJXRCMRTOLA", "AIJUSKYGFK", "XAUESRIAGDGQGBPWAU", "ETFCSMOIYAWVVLNFAYJFXYZM", "FZGTSPOJSXRFQJNLANJG", "LDHIBORUMEXFUJNDAQVOFGBMTREARYJQRBOP", "PWXJSGBFMHJF", "MIYWSEZXPZUAZXNXASJZMKVGECEAKORPJKOPPSOQSVDY", "MCOSSBMLDNIOLPNHRBJHTJRZQSEA", "JPXJSOXJZDZLHMNRAUJJRPOUMXEALTORJBOSPIINHVDJVA", "SDYDSHVUFAG", "JMQFKHVBLXFKHCNGADJG", "HLSWSEUXLMSMJKORAYOGAHNYM", "RUXKSCWFXYCUQINMADJFXLDYMIEAGRMCDHOYPRYDBV", "BNPPSFJRNDVDLKNV", "XJMOSKGQZJJBVW", "ATRZSHCMBWUVLQNQARJFZZCOVMEAETCRKROHPYWBHVFK", "MNKHSBEJBEOPSJTPAIJJPYNDCWEAGKKVEDOFPEXZAVF", "PGLXSJSERQRWODNVALJVAJQEKBEALJYRWIOHPKRINV", "ONMESDDSINLHHANSAOJA", "QXLTKBZHOAT", "FVHASIBVKXAPREN", "IGEXSINGAXGMCCNDAGJIRWMNUGEAJGPWE", "VOZJSXZWBJYUJDNAAMJADLFWMJEAILMLFYOXPJAKV", "OFUNSPPWSDUGLTNGQCJYZPIUOLACXWEAWBOQPHPHYVUB", "VLBPSGNIHQ", "GCECSHIGZXHWYXNXAUJWVHOHTSEAAXEYVQONPDOEJVKE", "BIXFSAABBFXOQENOAWJQODLSUOEAHS", "LBLYSTEUQOWAXFNKA", "CBDLSLJHKCP", "VMPJSWUSDYLIZMNIALJIH", "JKSFZEPOLGACSRNIAIJRGHYOIAEAHOUYRAOXPCRIY", "EMGCSVGIJHXVRWNYAOJ", "XUXPSWLLRUH", "JWWHSUNZSGSOAVNBAKJSTOJF", "QLTYSWRTKTYPSTNBAYJXAOKJQEEAFCTYRFOHPTTZWVUUT", "LCNMSNCVFJKDNQNQAGJRJWYYCTMAZQZEQHORPVLGYVMWD", "WPBWSVMQPQAQRMNFATJBYOGXBSEOAQQX", "CNFZSDZKZFYPJANSDOJQRSMJULEAMNACNUOUOXQBJVKDGT", "ISBDSPOXZQLJEXGZASJGDIRECNEALJ", "CMLMSBQEQHZFOJNCALCSGES", "NXEVSOASZVTQYI"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "RUXKSCWFXYCUQINMADJFXLDYMIEAGRMCDHOYPRYDBV";
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    string feedback = "---U-----J------";
    vector<string> words = {"MFSUIHKAIJEZKXCDFDRWJZSD", "MTRUYKFFXJWMXK", "DQIUNDDZRBUMMMRUZE", "QMNNCQFUMJDCSMGAXIDENWDUIWS", "RIEUJUGKPJZYHWNTZCWWQZZSFB", "NUHUEAHFVJTLVZVAKHI", "CYSUXXROJJJZCDSJNRWWBNK", "BQXUOCSYTJCUCRDV", "LZUUNQZMTJXLZHCDO", "IKKUDNBEMJVIIFK", "XDGUEXQKZJJXKNKDGMKZPHZSCPHVYSYBRMWNF", "NWDUNTIYUJEIFVIJNLCKIECFCBMMVJGDEEIEX", "CCFUYDDLNJKEOXICOIP", "GVLUGECYRJURAWAUFSRSRVCYEQJRWFVNDXKLVOOWIGQQVW", "JVCUZGCFIJAJCQDLHTIWBXFQLDWDVPBVAWWZAIZRLVNAJCXCA", "ONBUCJMIEJTUPYTQWQWBHDICCEJVGPLUBISI", "GIOTQCOCGJUKXPLSMSH", "NSDUXGHVIJZBGEGNOCQR", "ELTUKZWBUJMOAVPOVDMDADMTD", "FSBUPMOLJJQPMVUGXAMLWYKJLMGTTNPRFOMKJGVMPPGWFMLI", "GMOUUTGDDJZUUMYLRNMYVWYIH", "YSBUZFPDYJAYNAN", "DWHUJNODDJYOVNPLSXOOFCXWACCWGTUJ", "LAAUVHINWJPPNEUYITJL", "UMLUBUYPAJBETQZDTESQVMPWLJC", "ZYHUTPPKJJNBTDLPUFHXLIODMDUSST", "LHEUHWMLKIYZTG", "ORBUIMHCGJNIEDCJGUNPTUEHEKZFAMKEKH", "ZSGUGWZRJJEZGLPMVXRARYVHKCERHOESJ", "ACTUYOQLTJQPIFMUJXPWGBKIQRXNDQGTDIQLNNCL", "BRRUNMZSIJIGHZNWVCAWZYVZHLWIEIUMCFFHMPT", "DZKUNGZREJPJKUXW", "YQFUBSQCWJFVYZTUCUIOLZRKSBVVXPRGLFSTJGNBPT", "ROUUVMDIEJVEDHUSYTNDAKRXWWQRBHXGWJOULPVXXOSDPIYI", "YXMUFNVDSJINWSBLVYXJJEDTQJBISVUNZU", "HPFHPFJTOJONZIIHNRPY", "QYRUWMDTMJGNMOCM", "REHUUNBMSJFRBCAVQATTIE", "QVQUWVAESJHVKDHJQQRXPLTSMRVNSPZNCHLMDFAALHNEINHOK", "CJLUNWFETJRZNSFRBEJHEILRD", "UIPUUTCMHJIGKODEZXEYMILXZWIKYYIH", "IHBKBFTJXDJIAYCBCLTQFNJJAOZJBR", "YZMUNSLKMTWCLRXRKSJJDQWNI", "NPKUWNNYJJKDS", "ROYUCPEBFJECLLYADELJQD", "TPZUAQQAKYTOPWRVDXGFVVYLSY", "TPAUBGPXHJIMVUKFXFIQEAQVMZQVJEHTBMOYWKWDMUJZRXSO"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "QYRUWMDTMJGNMOCM";
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    string feedback = "--------------------------------------------";
    vector<string> words = {"EUZBOODJZAIGPQWFIREVKSOASDCMQWOBMCHISERMRRIWYPNJ", "MRDPDJBOUQXDDLARRJRGDBB", "BIYBGSQMXAFCDBRXIJFQDI", "XUWAQMDYQALZZJYJEKXEPZVWUXVHLWXLUFTUUVGIXBKDJD", "LHCSTHPGERDWKJWLR", "HQZFHHAXAJXFHYGFLEDXHLNPEXJV", "RGPSNZVLOF", "JAJEBFRVNQAQXAMDTYMOVVIHVZSCJYRRYNCHDLBOWWNEVC", "FYHPXGQNGJC", "ZSWRMENEDUQHGMELTVHRKMZATUJXORIVXNCZB", "FDUSIUIXJW", "IRKSLJOKKSF", "NUNWJBUTVHBWDKJRFTOHDXTROKNROYLJDATILOXGNXNKT", "MSWCREPBRHYNSXFUIQJBXEGANVNS", "AVKXHYSXXOUSBHQMXWLYWLMAYYHMHTYT", "ATCVZKLEJEWASDPALSYREHLNCRYXOGDGPMXFAMAF", "UPSXZLCLULFWBDLUCSKXTINHCSVOTTRKVYCAPTMWLADH", "OORXABEEJEHOKOQLJWWWKTSXWYDWXORFRLTYPRISVGIJ", "VVLAJNAZQDHQVGUQDXEWYSP", "NRZTKQNKMDZMMHWEIYTJZQNJAEGCOPSFIFFSRXMZ", "BXWWLOYVHQVTISSVHOUGAQFJIATRJGYERNWTWSWPWXKZTRVS", "QXMBGOKWPMKTHQLNOSVYKXSUAVXXBJI", "NXFIXKSIRZNHQZRQJBHLGORTVLMGFJVCSRWXMP", "PJSCRSIIMTDWU", "VNWUCYTTNVMISJLIITAIWRDO", "FEZPSTJFTVVCDWAYMDXXGYHKNOUXIKQC", "FXQPSKSJVJFLPRGLVLSLCTAQQKYSSYTXQTYSNAWXL", "VQKZPVWOBKYOYWDINVTZXZZJ", "SOJRJXERBGSPIAGKBBBLLLHTHTRMXHBQWPAOHV", "DOPAIAOCSWPEGFMJDELOVBBOXWADQRJOZMKTMOHD", "VDFRJSIUBAQVHIGEWRIHCFLO", "FAEDNYIISBJTYHGAGIVCRXSQWRQMMXRIXR", "JZNBKABROR", "PRISUHCUDJNUCKWVQKAWDJZKMLCBHOUMJAYEZHCSQSXURVNQ", "FMJDVHSAKOLNCQORSJTJ", "UAYYYHYJCGWOUKFWFYQULCAWFIAVIZGTRLGSXKVYTCGUXTYC", "NSEBUKNALJJJEGETWHNINNXUZNTNOSNMTZINFMHKRQTA", "MOIAMGMCMZBCJKUXTBHE", "GZIVYGFFSOQXXTBCZLKQVPDTIGDSZGBPQGSMMPJ", "YTJOZJXXFWWLKXTWXCPHJSND", "VUGZDISIGKIJYEZBQQZIYOUGGPRZRI", "FVWLIZCQJFGTAQWVBZHVTAVEEEVOBPVWOTW", "ZSAAYHYSMGOLJSYBIYEEUTPFLKUAXQCAUMCGOSYRVYJJMDG", "FDVKXKOGJRNXDAMNEV", "GFCGPOMTOPAHJBLLARABXQHVTMYKTBXVJHPJXR", "VNFQTDBEEQVCT", "MUBJXYQOUHWNVXGOSMDILUROTGTJPLZISDYZQCQFHCU", "GEKZSXSLXVS", "KYIXQOJZPVWJOXGPZ"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "";
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    string feedback = "ZWNCW-AWMV-RL---X--N-I-NJKM-----U-HH-A--WJ-RG-D";
    vector<string> words = {"ZWNCWHAUMVZRLUTEXDJNBIONJKMWGIHZUZHHIAZDWJERG", "ZWNCHFAWMVBLLQRHXRLCGI", "ZWNCWSAWMVBRLOUKDFXNHIBOJKMZXRJ", "ZWKCWBAWMVJQL", "ZWNCWNJWMJIRLFHGXB", "ZWNCIYAWMVSRLOSVXUXNHHLNJKMFETWZULHHIC", "ZWNCWGAWMVVRLDXLXFZNBINNFKWKWNXAUDHHDAH", "ZSNCCIAWMVHRTSJXX", "ZLNCWWAWEVVRSCHBXTALNISNJOMVACSDUKHHBAHAWAGRG", "ZWNJWNAWMVTRLOPXXTMNFISZJ", "ZWNCWHAWMVQRLGTLXXANNIINJKMZNNGGUIHHGADFWJYRGM", "ZWNCWMXWMVFRLRLG", "ZWNCWRAWMVNRLKNCXFONIIENJ", "ZWNCWBAWMVARLDONXSCNEIPN", "ZWXVWVAWMVXKLYRNXYENDAKNJDMHNIBCULJHLAXUWJBMGDD", "ZJNCWZAWMSCRLOKBXZINDIENJKMFB", "ZWNCWSJWMVTRLAEHXWVNMIINYKMJ", "ZWNCWAAWMVMRLBTLXGXNTILNJKMYY", "ZWNCWVAWMVCRLPIDXDENNI", "ZWNCWLAWMVZRLGNWDKNNLIRRJKMMWYEPUIHHAAMEWULRJAD", "ZWNCWVAWMMQRLUCXXOIN", "ZWNCTYAWMVKRLAXYXNINAIQNJKMLNJZGU", "ZWNCWTAWMVTRLOFSXOQNOISNJKMEBYEPUQHHFASOWJFRGFD", "WWVNWOAWPOGRDBSQXYSNIIVZJPSZFLY", "ZWNCWKAWMVPRTWCXXESNLIANJKM", "ZWNLWFAWMVHRLSVMXPENUIENJHMCVIXPUOYHWAYVO", "ZWNCWNAZMDXRLFIDKDJNUIBNJKMTPSCMUSHUHAXT", "ZWNCWEAWFVXELSYOXHONB", "ZWNCXXTWMVLRLTZBXODNFIBNJKB", "NWNCWNUWEVWRXGPT", "PWVCWVBWMVNRLIPZXBHNKIQNJEMNKHFCUTH", "ZWNCWXAWMVLRLHDW", "ZWNCJXAWMVDR", "ZWNCWLAWMVWRLLMHFBANPISNJKMKJENH", "ZWNCWOAWMVGRLEWWXMENYIEN", "ZWNCWIAWMVVRLXOCXIHNFIZNJKMQYCCAUSHXNAZCW", "ZWNCWIAWMVURLEEIXHNNPIPNJKMNSFVXUFHHSAYVWJ", "ZWNOWGAWMAHRLBGKXJ", "ZQNRWSAWMVAPLTM", "ZWNCOCIWMVE", "ZENCWLVCJV"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "ZWNCWTAWMVTRLOFSXOQNOISNJKMEBYEPUQHHFASOWJFRGFD";
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    string feedback = "--S--CH--P-X-W-N-QN-J";
    vector<string> words = {"SBSMSCHQYPXXZWHZ", "QKSLNCHHJFVXVJANGQNSJBAAJCPWNPYRCHB", "DXSHICHUXPXXPWEUXQZCJZAI", "ELXEXCHNYWHXHWHNMQNTJWPLMHBKSRLXECR", "TSSLOCHLTPFXRWVNCQNLJXMDIHBRUIRKPLCGRXEKWQRSW", "EPSXBCHQKPBX", "MSSAKCHPBPKGAWBNWQNCJKNF", "QZSQOCHLCPHXQWGWQQNFJWLZKOUDSSGJDEYYDFXYG", "AOSYMCHBKPMXPWVNNQNVJYTYXUVXFBK", "XDSPMCHRXPTXRWFNPQNNJESUYLRJIGWATSBHUZINJRZU", "ZVSXVCHDLPCXSWLNLQNJJZUYDYWUVWYQF", "WOSYICHSLPDXHWDNYQNKJQBHWKFXUVK", "KXSVYGHEBPAXCWRNDQNDJYZRGW", "AESVICOXIPFXSWFNPFNZMMTGSWXZTJKLA", "DYSQRCHOBPFXLWJNVQNFJXMJSQSEBWFVNWGXCXLJVSVUYASYG", "HZSFGCHLVPJXJWMNRQNYJNA", "DQUNRCHBYSCXLWKLXQNGJYCRSJFLDCEHAHXIEG", "NDSHACHTKVXXHWPVJC", "VGSMVCHBYPZXDWANKQNGJ", "UDSJQCHCZZZXIWSNMQNHJZOOPSDCQXWNTIWAU", "YASCVCQOWBRXRWEFXQKMJAVSMNBIFBDXBBENU", "MZSRMCHXSPTXTBNNFQIHJZNM", "CRSBJCHLGPTDWWENZQNXJRKUPFYRIEPHWOZKW", "IASNOCSLMPWXFWJN", "NASTCJQPSKVXNWGNKQNMJAYRMKMHV", "TWKGHLHHCPIXF", "WLSRNUJPTPAXRWWN", "VNSPJCHEZPQXRWANGQNACUJCJJHFKRWJTENY", "XMSHCKHEUPIXDWXNBQNQJXUTNCNRPVLZEJTWNHSHVLUOVJLNL", "JMSXMCHVNPFXQWL", "OUSDOCHRVPBXTENNHENKQ", "QASKTCHEVPTXQWM", "IUSBLCHGBQGXPCCNOQNNJQJCJB", "JCSWNCHMEEOXHWZNNQNGQ", "DXSYTCHPBKPXCWUNCQNOJRHJVTTYJJV", "LRSKGCHIVPSXRWTNLVYKJTVHDISELUORJYJKHLNGRQMN", "WISKNCQDFPKRYWHNWQNHKULXHPUBJTZVYRVUIJNIQML", "EFRDKCHYGNFXOWSNXQN", "ZJSMACHTLPEXUWJNLLNRJWEFLCDMB", "QNSQLCHDFPQXVPOFQQNDJGLXJOWOCSLHTPAQCZHWP", "LNSXJFHZEAFXUWYNLQN", "FRSCWAZPYPWXDWFN", "DYSHXLNAXPMXBWCNKQNLJCMKKRXPCVWEETRCJYBO", "BYSGDCHJAPGXUWMNLBNCJGSTMZPOPXOS", "EDSYTCHSGPJXE", "FGBXACHXFPPXKWHNRQNUJJCOYQVUNIXVFZANUXMVAWDDUN", "QBSOPCGALPGX", "QFSPBCHXAPXXOWVNN"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "VGSMVCHBYPZXDWANKQNGJ";
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    string feedback = "------C------LP--R-----S----------T-------J-";
    vector<string> words = {"QTYSBVCEEGMUHLPYQRTFRBUSSCNFKUPDOXQXXKAZXRJ", "PBDRRUANZTM", "AJKMOICFSVIGOKPJIRWZCRJSNNFWKTMYAKTEKTRVCZJT", "IYOSNNCVBWWJDLPMYRPNKCHS", "EBFTEBCFGXQFXLPZBRIMTC", "AFQWWUCVONZTGL", "DRCRCWCJOPDDWLPMORNBGXOSHJHM", "JTTJECCBIHFWJLPTHR", "HPCLSWFKUVLSZLPKBRVAOVYSJORUKBFYEXTMYCKASMJXJIIMK", "FNLPNACMCLKBJLPPMRWCEEGSYTPLHMKKYSTBGBAZUFJGQMS", "GGMUTBCNQHWXI", "EBKQKCCLSLWBHLPWNPGRIPJSBPCCVFIQRFDYQYGXADJ", "VANZLFOCMRFVTLMKPRES", "GSBMDVCSNZBBCLPBARCFOHKSPL", "AVBEEACOQA", "WHXKLKCHLLUDOLPFGRHTZTLSPNAMUJIJUNTF", "CYHPGACASHQTPMHJZRGQRVPSTFAYOAKR", "TGPDMUCBHL", "PPQMEXCKQLLXFLPLARPPFGKSZSXLEV", "FADWXOCUNYAKWLPPCRDYTBBSDXETJZIZBRTDJRCREDJQY", "PZBVRLCSFCHCMAPRMRFPOQKSZREKACQNVOTEGCVERG", "IQBACGCLSMTTALPCGBMYUAPSBNDMUBFLOMTKPBXOI", "TVBXWZCRWCEXOLPJMRRKCDJSRDTYFPEWWWTUPUJKALJCK", "CUWZGJCFGCSWBLPJQRTHHHASOVJCIAQFHMTF", "PMSXZNCGQGXUQCPKQAHGLFESOQWKNHROUKTLUVPIKQJVPIL", "LKDDZUCNWJOWWLPYHRAFBPBSKCTKIZKKPATTJLBRTYJYTF", "WIYDPPXFIOMYM", "ATQEUGCRSZUAOLPWGRZIDDKSFFWSQTXBHVTZXUSRX", "SYBTWPCQBHNBHLPIIPTSCGXSPOWFHMYGLEFNORGEDP", "TGPZXDCBFHRXGLPUXRALYJZYLBWKMYORUDO", "DZXXBICDVBKRKLPRYRVATXJSWBHNMTHQKRTPXCOPTTJPO", "BVTRVPCJAIDNMLPHE", "IMIQNKCCGODUCLPVBRVUVLPSAIBQZZUXA", "VZBASVCWMGELQLPUVROWXMLSZQMHTOVENNTVOUUNFGJOISV", "MYJTUQCFJCGWDLPHIRYLLUWSQHVXNKTGLXYQMJLGVPJ", "MEVBDOCNVRYPKLPYRR", "JMUARBCONKRUDLPTRRYYVFKSMKRLLHXTREZIGIYLRNJW", "OASLMBCRLBMSHWPGRRJSEYYSTOADVYQKEETYVDEHRTIVKFYA"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "";
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    string feedback = "---H-O-H-B-OPHOB--";
    vector<string> words = {"ROSACEA", "GYROVAGUE", "SHACONIAN", "ALTITONANT", "BRACHIATION", "CERCOPITHECAN", "SCOLECOPHAGOUS", "RESISTENTIALISM", "SLUBBERDEGULLION", "AICHMORHABDOPHOBIA", "SPECTOCLOACAPHOBIA", "ULTRACREPIDARIANISM", "HIPPOPOTOMONSTROSESQUIPEDALIAN", "CHARGOGGAGOGGMANCHAUGGAGOGGCHAUBUNAGUNGAMAUGG"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "AICHMORHABDOPHOBIA";
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    string feedback = "B--B--";
    vector<string> words = {"BRINGS", "BARBED", "BUBBLE"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "BARBED";
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    string feedback = "-AAA--";
    vector<string> words = {"CAAABB", "BAAACC"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "";
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    string feedback = "-B";
    vector<string> words = {"BB"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "";
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    string feedback = "N-";
    vector<string> words = {"NN", "NO"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "NO";
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    string feedback = "B--B--";
    vector<string> words = {"BRINGS", "BUBBLE", "BARBED"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "BARBED";
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    string feedback = "--";
    vector<string> words = {"A", "AA"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "AA";
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test67() {
    string feedback = "B--B--";
    vector<string> words = {"BRINGS", "BARBED", "BUBBLE", "BBBBBB"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "BARBED";
    if(result == expected) {
        cout << "Test Case 67: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 67: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test68() {
    string feedback = "N--";
    vector<string> words = {"NIE", "TAK"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "NIE";
    if(result == expected) {
        cout << "Test Case 68: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 68: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test69() {
    string feedback = "--B";
    vector<string> words = {"BOO"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "";
    if(result == expected) {
        cout << "Test Case 69: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 69: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test70() {
    string feedback = "N-N-A";
    vector<string> words = {"NINJA", "NINJAS", "FLIPS", "OUT", "FRISBEE", "NONJA"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "";
    if(result == expected) {
        cout << "Test Case 70: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 70: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test71() {
    string feedback = "-M";
    vector<string> words = {"MM", "NM"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "NM";
    if(result == expected) {
        cout << "Test Case 71: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 71: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test72() {
    string feedback = "-A";
    vector<string> words = {"AA"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "";
    if(result == expected) {
        cout << "Test Case 72: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 72: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test73() {
    string feedback = "--B";
    vector<string> words = {"BOB"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "";
    if(result == expected) {
        cout << "Test Case 73: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 73: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test74() {
    string feedback = "S-SS--N";
    vector<string> words = {"SESSSON", "SESPION"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "";
    if(result == expected) {
        cout << "Test Case 74: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 74: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test75() {
    string feedback = "B-";
    vector<string> words = {"BB"};
    Hangman* pObj = new Hangman();
    clock_t start = clock();
    string result = pObj->guessWord(feedback, words);
    clock_t end = clock();
    delete pObj;
    string expected = "";
    if(result == expected) {
        cout << "Test Case 75: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 75: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    test67() == 0 ? ++passed : ++failed;
    test68() == 0 ? ++passed : ++failed;
    test69() == 0 ? ++passed : ++failed;
    test70() == 0 ? ++passed : ++failed;
    test71() == 0 ? ++passed : ++failed;
    test72() == 0 ? ++passed : ++failed;
    test73() == 0 ? ++passed : ++failed;
    test74() == 0 ? ++passed : ++failed;
    test75() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=275071&rd=4770&pm=2343
********************************************************************************
/*
 * Who reads this junk anyway?  Not I.
 */
 
#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
#include <sstream>
#include <deque>
#include <stack>
#include <cmath>
#include <cstdio>
#include <cctype>
#include <cstdlib>
#include <climits>
#include <set>
#include <map>
#include <numeric>
#include <ctime>
#include <functional>
#include <regex.h>
#include <queue>
 
using namespace std;
 
#define debug(x) cout << #x << " = " << x << endl
#define len length()
#define si size()
typedef vector<int> vi;
typedef vector<string> vs;
typedef vector<bool> vb;
typedef vector<vi> vvi;
typedef vector<vb> vvb;
typedef long long ii;
#define mod(A, B) ((((A) % (B)) + (B)) % (B))
#define b2e(A) (A).begin(), (A).end()
#define e2b(A) (A).rbegin(), (A).rend()
#define rev(A) std::reverse(b2e(A))
#define s(A) std::sort(b2e(A))
#define ss(A) std::stable_sort(b2e(A))
#define un(A) std::unique(b2e(A))
#define er(A) (A).erase(un(A), (A).end())
#define Fill(A,B) std::fill(b2e(A), B)
#define minelt(A) *min_element(b2e(A))
#define maxelt(A) *max_element(b2e(A))
#define nextp(A) next_permutation(b2e(A))
#define prevp(A) prev_permutation(b2e(A))
 
string itos (int i) {stringstream s; s << i; return s.str();}
string lltos (long long i) {stringstream s; s << i; return s.str();}
int ipow(int a, int b) {return (int) (std::pow((double) (a), (double) (b)));}
template <class T>
ostream& operator << (ostream& os, vector<T> temp) {
  os << "{";
  for (int i = 0; i < temp.si; i++) {
    if (i) os << ", ";
    os << temp[i];
  }
  os << "}";
  return os;
}
template<class S,class T>
ostream& operator << (ostream &os ,const pair<S,T> &a) {
  os << "(" << a.first << ", " << a.second << ")";
  return os;
}
ii gcd(ii a, ii b) {if (a==0 || b==0) return max(a,b); if (a > b) return gcd(b, a); if (!(b % a)) return a; return gcd(a, b % a);}
//int dx[] = {1,0,-1,0}, dy[] = {0,1,0,-1};
//int dx[] = {1,1,1,0,0,-1,-1,-1}, dy[] = {1,0,-1,1,-1,1,0,-1};
 
//----------------------------
int done[26];
class Hangman {
  public:
  string guessWord(string a, vector <string> b) {
    for (int i = 0; i < a.si; i++) {
      if (a[i] == '-') continue;
      done[a[i]-'A'] = 1;
    }
    string ret = "";
    for (int i = 0; i < b.si; i++) {
      if (b[i].si != a.si) continue;
      bool good = 1;
      for (int j = 0; j < b[i].si; j++) {
        if (a[j] == '-') {
          if (done[b[i][j] - 'A']) {
            good = 0; break;
          }
          else continue;
        }
        if (a[j] != b[i][j]) {good = 0; break;}
      }
      if (good) {
        if (ret == "") ret = b[i];
        else return "";
      }
    }
    return ret;
  }
};

********************************************************************************
*******************************************************************************/