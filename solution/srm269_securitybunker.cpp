/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=4650
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class SecurityBunker {
public:
    double chooseBomb(vector<string> field);
};

double SecurityBunker::chooseBomb(vector<string> field) {
    double ret;
    return ret;
}


int test0() {
    vector<string> field = {"*.*", ".?.", "*.*"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 1.4142135623730951;
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<string> field = {"*****", ".?.?.", "..?..", ".?.?.", "*****"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 3.0;
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<string> field = {"*****", "....*", "....*", ".?..*", "....*", "*...*", "*****"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 2.23606797749979;
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<string> field = {"*.*.*.*", ".?.?.?."};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 2.0;
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<string> field = {"?*..*?....?", "...........", "....*......", "...?.......", ".*....**?..", "*......?...", ".......*...", ".......?.*.", "..*.......*", "?........?.", "......?*?.."};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 5.0;
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<string> field = {".*.*..??...", "?..?..*.?..", "...........", "..*......??", "*....*.....", ".........*.", "*......?...", "....*.?....", "?..........", "...........", "..........?"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 5.0990195135927845;
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<string> field = {"?.?.*...?.?", ".*........?", "*....*.*...", "......?....", "...........", "....?......", "?..........", "?........*.", ".*.....**..", "...........", "....?.?...."};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 6.0;
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<string> field = {"?*..*......", "...........", "?.........?", "*.?........", ".......?.*.", "*..........", "...**.?....", "......?...?", "*..........", "*..?.......", ".....?....."};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 5.385164807134504;
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<string> field = {".?..**.?...", "*..*.......", ".*....?....", "?..?.......", "...........", ".....?....*", "...........", "?...?....*.", "...*...?...", "......*?*..", "?.........."};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 6.324555320336759;
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<string> field = {"?.?.....?..", ".*.*......?", "*....?.....", "?...**.?...", "...*.......", "..*......?.", "...........", ".....?.....", ".........?.", ".....*..?..", "....*......"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 5.385164807134504;
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<string> field = {"...*.?*.?..", "..?..*...*.", "...........", ".*........?", "......*...?", "*..........", "......?.?..", ".......?*..", "?....*.....", ".....*....?", "..........?"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 3.605551275463989;
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<string> field = {"?..?*.....?", ".........*.", ".*.......*.", "?.*...?....", ".....?.....", "..*........", "......*.*..", "*.......?..", ".......*...", "...?.......", "........??*"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 4.123105625617661;
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 5.0;
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 4.123105625617661;
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<string> field = {"?.?.....?...?..?.?...??...", "*.....?...?...........*...", "..?.......................", "...........*.............*", "............?......*...*.*", ".................*........", "............*.............", "?*..*.?.......?.....?.?.?.", "......?.........*.........", "*...........*...*.........", "??*.?.......*...?.....?...", "..........?...............", ".........*?...?.*.......*.", "..........?.....*.......?.", "....?.*..*?..*?.?.........", ".....*............*.....?.", "............*............*", "........*....*........?...", "..........*..?............", "*....*..?.*.............*.", "......?......*.........*..", "..*...?*....*.?.....?.?*..", "....?*...**...............", "?...*.?.........*...*.....", "?.................*...*...", "...*..............?.......", "..........*?*.......?.*...", "..................*.*.....", "*.....?.?....?..*.......*.", ".....................?....", "...............?.*........", "*.?.....??..........*....*", "*....*.......*......*.....", "?.........................", "...............?...?*.....", "......?*....?..*......?...", "?.......???.*...?...*.....", "....?...*?...?............", ".?*.......................", "...*....?.................", ".........*....*.*.?.......", "............?.............", "?.*.?..?..*...............", "..?.......?...?.*.........", "....*.?.*.......*....?....", "........?.........*.......", "*.?..?......*??.?.........", "?.......?...........?.....", ".............?.?.........?"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 7.615773105863909;
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<string> field = {"?..*.*??.?..??.?????.???????***?***????", "......?.*...*?.?......?.?.?...*....*...", "*.?...???...???*?.??*?..**??..*..?.....", "?.??..?..?.*?.*..**..*.*?..?.*?...*??*.", "??.??*??*?..***.?....*....???**..??*?..", "*..?..*..*..**.?...*..*.......?..?....."};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 3.605551275463989;
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<string> field = {"?????*????????.??????", "?*??.?*?*?*.???*.*???", "?*??.?*?????*.?*.??.?"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 4.123105625617661;
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 8.06225774829855;
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 10.198039027185569;
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 7.280109889280518;
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 10.44030650891055;
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<string> field = {"?....?....?..*?..?..*...?....*..........?.........", "?....*..............................*.............", "............*.?...............*.....**............", "..................................................", "*.*...?.....?.......*.....?.....*.................", ".?.................................?.........**...", "..?.*.......?............*...*........?...........", "..*...*..................?............?...........", "...............*......?.*.*........?..............", "..................................................", "?...*......................*..............?.?.....", ".............*......................*.............", "...?..*..............?..........?...*.........*...", "....................*..................?..........", "*..............*....?....*..**....................", "..................?.?.............................", "....**.*..*.?...................*...........?....*", "........................................*.........", ".......?*.*.........................*.............", "..................................................", "?...?...?........*............?..?........*...?...", "................................?.................", "?.........................*.........?..??....?....", "..................*.............*.......?.........", "....?..?..*...?...?......?..?.......*.............", "............?.............?.....*........*........", "..........*.....*........?........*......?........", "............................*.....................", "..........*...............?....................*..", "..................................................", "?.?...?...*..?......*...?.*.................*?....", "..................................................", "?................*..*.....*.......*............?..", "............*.....?..........*?.............*.*...", "..................*.*.................?...........", "......?...*.......................................", "..*...............................................", "..............................?.........*.........", "........................?.........................", "................................*.................", "*.....*........*..........*...?...*.?.?.......*...", "?.......................................?.........", ".......................???......?..?..............", "...........?......................................", ".............*....*...............................", ".*...?............................................", "..........?.........?......?..................?...", ".........?.........................?..............", "...............?............?..........*..*.......", ".................................................."};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 8.94427190999916;
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 9.219544457292887;
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 8.48528137423857;
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 7.280109889280518;
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 8.06225774829855;
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 8.06225774829855;
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 8.0;
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 8.06225774829855;
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 8.06225774829855;
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 8.06225774829855;
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 9.848857801796104;
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 22.360679774997898;
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 24.351591323771842;
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 27.80287754891569;
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 23.600847442411894;
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 24.351591323771842;
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 19.924858845171276;
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 25.495097567963924;
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 21.213203435596427;
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    vector<string> field = {"..................................................", "..................................................", "..................................................", "..................................................", "..................................*...............", "..?...............................................", "..................................................", "..................................................", "..............................*...................", "..................................................", ".............?................?.......*...........", ".......................*..........................", "..................................................", "..................................................", "...........................*......................", "..................................................", "..........*......*................................", "....?.............................................", "..................................................", "..................................................", "?.................................................", "..................................................", "..................................................", "..................................................", "..............*..............................?....", "..................................................", "..................................................", "..................................................", "..................................................", "..............................................?...", ".....................................?............", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "............................?.....................", "..................................................", "......................?............*..............", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "........................................*.........", "..................................................", "..................................................", ".................................................."};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 25.238858928247925;
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 19.235384061671343;
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    vector<string> field = {"*?"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 1.0;
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    vector<string> field = {"*", "?"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 1.0;
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    vector<string> field = {"*?*", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "*?*"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 49.0;
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    vector<string> field = {"*?*", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", ".*.", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "*?*"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 27.018512172212592;
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    vector<string> field = {"*?*", "...", "..*", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", ".*.", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "*..", "...", "*?*"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 25.019992006393608;
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 36.87817782917155;
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 11.661903789690601;
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 22.847319317591726;
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 35.35533905932738;
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 69.29646455628166;
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 69.29646455628166;
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    vector<string> field = {"???..............................................*", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "?................................................."};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 69.29646455628166;
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 47.634021455258214;
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 51.66236541235796;
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 47.01063709417264;
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 51.62363799656123;
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 44.553338819890925;
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 53.03772242470448;
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 53.74011537017761;
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 53.74011537017761;
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 53.03772242470448;
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 54.45181356024793;
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    vector<string> field = {"*....*........*.......*...........................", "....*........*..*.......*.........................", "*.*...................*...........................", ".....*..........*....*............................", "......................**..........................", ".*...............*....*...........................", ".*..*........*.*.*................................", ".*........*.......................................", "*..*...............*...*..........................", ".*.....................*..........................", "..*.....**.*..**....**............................", "**..*..*.....*.....*..............................", "............***..*....*...........................", ".*........**......*...*.*.........................", ".*....*.......*....*....*.........................", "*...**............................................", "....*.....**.....*.....*..........................", "*....**.........*......*..........................", ".......*..*.........*.............................", "............*.....................................", ".*..*.*.*........*..**.*..........................", "...............*...*.*............................", ".*...*............................................", ".*.............*.....*............................", "..........*.......*.*..**.........................", "...............................?...?......?....?..", "...........................?.?..?.??.......?....?.", ".........................?.......?................", "..............................??....?............?", "..........................?...??........?.........", "................................?..?.......?......", "..........................?...???....?........?...", "......................................??..........", ".........................?.....?.............?.???", "............................?..............?......", "............................??.....?..?....?..?...", "..............................?..?.?.........??..?", "...........................??..?..................", ".........................?....?..??.?...?.?......?", "...................................?.?.?.?.......?", ".........................?.?........?.....?..?....", "...............................?...?..............", "...........................?........?..?..........", ".........................?.??......?..............", "..........................?.?................?....", "..........................??.?..........?.....?...", "..................................................", "............................??..?.?....?..........", "..............................?.?...........?.?...", "..............................?..................."};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 32.55764119219941;
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 34.655446902326915;
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 36.069377593742864;
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test67() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 35.35533905932738;
    if(result == expected) {
        cout << "Test Case 67: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 67: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test68() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 34.058772731852805;
    if(result == expected) {
        cout << "Test Case 68: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 68: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test69() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 31.78049716414141;
    if(result == expected) {
        cout << "Test Case 69: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 69: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test70() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 28.160255680657446;
    if(result == expected) {
        cout << "Test Case 70: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 70: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test71() {
    vector<string> field = {"...*...*............*..*..........................", "...*....*...**....................................", "...*..................*...........................", ".........*....*...**..............................", "......*.....*.....*.*.......................?.....", "..*.*....*.......*................................", "*...........*......**.............................", "*......*..*.........**............................", "*...*....**..*....*.*.*..................*........", "..*..............**....*..........................", "..*..............**...............................", ".........*.........*..............................", "..*..........**...*..*............................", "........*.........*...*...........................", "..........*...........*...........................", ".*....*...........................................", "........................*.........................", ".*....**.....*......*.............................", "..*.*.*.....*.....................................", ".**...*...*...*..*................................", "......*.*.*.*.....*....*...*......................", "*............*..*.................................", ".**.*....*.......*................................", "....*..........*.....*....................*.......", "*...*.............................................", ".................................?...?....?..?....", "..................................?....?..........", "..?.........................?...??.......??..?....", "..........................?.......?...?..?...?....", ".........................?...............?.?......", "..................*.......??.............?........", "......................?...?.......?..?...........?", "..........................?..?...?......?.........", "..........................??......?.?..........?..", "........................*.....???.?............???", "...........................?........?.............", "....................................?....?..?.....", "..........................?...?.?..?...?...?......", "..........................?..?..?......?........?.", "...........................................?....?.", "...........................?..?.........?...?.....", "...........................?..............??......", "..................................?........?.??...", ".................................?.??........?....", ".................................?......?......?..", "...............................?..........??.....?", ".............................?.......??.......?...", "..........................?.?...............??....", "...............................?...........??....?", "................................?.........?......."};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 25.96150997149434;
    if(result == expected) {
        cout << "Test Case 71: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 71: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test72() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 30.083217912982647;
    if(result == expected) {
        cout << "Test Case 72: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 72: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test73() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 34.058772731852805;
    if(result == expected) {
        cout << "Test Case 73: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 73: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test74() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 21.540659228538015;
    if(result == expected) {
        cout << "Test Case 74: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 74: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test75() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 21.540659228538015;
    if(result == expected) {
        cout << "Test Case 75: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 75: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test76() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 21.540659228538015;
    if(result == expected) {
        cout << "Test Case 76: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 76: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test77() {
    vector<string> field = {"....?....*.?...*...*.*.*.....*..*......*.........*", ".........*?....*?.***.*.................*......**.", "........?....?....................................", "....*.......*.*...............*..**.*.....?*......", "..................................................", ".....*..........*.....*.........*......**....*.*..", "....................?....?...?....................", "..................................................", "*....*.**.........**.....*....*??........?.*......", "...................................?....?.........", "..................................................", "..?.*..........*......**..*.........**...........*", "..........................................?......?", "..................................................", ".................................................?", "..........***.......?...?.*..........?..**......**", ".......................?..........................", "..................................................", "..................................................", ".*.*......................*....*.*.*...*.....*.*..", "..........................?............?..........", "...............?.?................................", "..................................................", "..................................................", "..........*.......*.......*.........*..*.*.....***", "......?...........................................", "..................................................", "..................................................", "..................................................", "...............*.?*..*........*..*...*.**.......*.", "..................................................", "................................?.................", "...............?.............?......?.............", "...?........?.................................?...", "..................................................", ".................................?..............?.", ".......?........................?.................", "..........................................?.......", ".....................................?............", "........?.........................................", "..................................................", ".......?..........................................", "..................................................", "..................................................", "..................................................", "...................................?..............", "........................?.......?..?..............", ".?.......................?........................", "..................................................", "??????????????????????????????????????????????????"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 25.0;
    if(result == expected) {
        cout << "Test Case 77: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 77: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test78() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 21.18962010041709;
    if(result == expected) {
        cout << "Test Case 78: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 78: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test79() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 21.18962010041709;
    if(result == expected) {
        cout << "Test Case 79: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 79: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test80() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 22.0;
    if(result == expected) {
        cout << "Test Case 80: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 80: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test81() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 24.020824298928627;
    if(result == expected) {
        cout << "Test Case 81: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 81: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test82() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 25.019992006393608;
    if(result == expected) {
        cout << "Test Case 82: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 82: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test83() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 51.62363799656123;
    if(result == expected) {
        cout << "Test Case 83: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 83: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test84() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 47.38143096192854;
    if(result == expected) {
        cout << "Test Case 84: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 84: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test85() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 49.678969393496885;
    if(result == expected) {
        cout << "Test Case 85: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 85: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test86() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 45.60701700396552;
    if(result == expected) {
        cout << "Test Case 86: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 86: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test87() {
    vector<string> field = {"*****.*.*****..............................?..", "*..?*.******.......?..........................", "..**.*****.*.......................?..........", "..********.**.....?.................?.........", "*.*.****?**...........?........?..............", "******.*.***........................??........", "**.********......?.?..........................", "..***.*.*.*...................................", ".*..******.........?.................?........", "**...****.?...?..?..??........................", "********...............?......?......?........", ".**.**..............?.........................", "****...............?....................?.....", "...?................?.......................?.", ".....................................?........", ".............................?................", ".......?.............................?........", "....................?...........?.............", "..?...............?...........................", "...........?..................................", ".....................................?...?....", ".....?.....................?..................", ".................?....??......................", ".............?................................", "...........................??..............?..", "?................?............................", ".?.......??.........?...?.....................", ".............?................?...............", "..?...?................?..............?.......", ".................?....?...........?...........", "...?............................?.?........?..", "..............................................", ".....?...........??....?.............?........", "?.............................................", "..?.?.................?.......................", "..?.............................?.............", ".?...............................?...........?", "..........................??..................", "....?......?..................................", "...?...?............?.........................", ".........................?.....?..............", "..................................?...??......", "......................................?...??..", "....................................?.?......."};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 48.08326112068523;
    if(result == expected) {
        cout << "Test Case 87: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 87: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test88() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 43.86342439892262;
    if(result == expected) {
        cout << "Test Case 88: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 88: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test89() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 41.036569057366385;
    if(result == expected) {
        cout << "Test Case 89: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 89: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test90() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 45.27692569068709;
    if(result == expected) {
        cout << "Test Case 90: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 90: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test91() {
    vector<string> field = {".**..*.***...*............?...?..........", "..*.?*..*.**..*...?......................", "**.*.********.*........................?.", "**.*.**...*****............?.............", ".***..*.****.*..?....?......?............", "**.*.******..*..........?................", "...?*.*****.*.?......?.....?.............", "?****..****.?........................?..?", "**?..*.**.*.*....?.......................", "*..*?.*..**...?............?.............", ".*...*....*..............?.....?.........", "***..**.**.........?.....................", "*.*..**.*..................?.............", "..*..*.................?.......?.........", "*..*......?......???.?...........?.......", ".................?.......................", ".........................?...............", "....................................??..?", "..................?..................?...", "....................?...?..........?.....", "..........?..............................", ".?...........?....................?.....?", ".......................?.................", "....?................?...................", "...................?....................?", "................?...........?.......?....", ".........................?.........?..?.?", "...............?.....?...................", "..?....?.?.........?..?..................", ".?...............?.......................", ".......?....................?............", ".........................................", "..........??............................?", "......?...........................?......", "...................................?.....", "........................?..............?.", "....................?....................", ".......?..?..........?...................", "................?........................", "........?..?.?.......?................??.", ".......?......................?..........", "?............?...................?....??.", "........................................?"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 43.840620433565945;
    if(result == expected) {
        cout << "Test Case 91: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 91: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test92() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 50.93132631298737;
    if(result == expected) {
        cout << "Test Case 92: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 92: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test93() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 48.27007354458868;
    if(result == expected) {
        cout << "Test Case 93: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 93: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test94() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 48.08326112068523;
    if(result == expected) {
        cout << "Test Case 94: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 94: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test95() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 54.45181356024793;
    if(result == expected) {
        cout << "Test Case 95: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 95: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test96() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 53.74011537017761;
    if(result == expected) {
        cout << "Test Case 96: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 96: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test97() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 55.154328932550705;
    if(result == expected) {
        cout << "Test Case 97: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 97: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test98() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 54.45181356024793;
    if(result == expected) {
        cout << "Test Case 98: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 98: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test99() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 57.28001396647874;
    if(result == expected) {
        cout << "Test Case 99: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 99: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test100() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 56.568542494923804;
    if(result == expected) {
        cout << "Test Case 100: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 100: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test101() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 56.568542494923804;
    if(result == expected) {
        cout << "Test Case 101: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 101: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test102() {
    vector<string> field = {"*.................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", ".................................................?"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 69.29646455628166;
    if(result == expected) {
        cout << "Test Case 102: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 102: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test103() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 67.88225099390856;
    if(result == expected) {
        cout << "Test Case 103: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 103: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test104() {
    vector<string> field = {"******............................................", "******............................................", "******............................................", "*****.............................................", "****..............................................", "***...............................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "...............................................???", "..............................................????", ".............................................?????", "............................................??????", "............................................??????", "............................................??????"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 64.35060217278468;
    if(result == expected) {
        cout << "Test Case 104: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 104: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test105() {
    vector<string> field = {"***********.......................................", "***********.......................................", "***********.......................................", "***********.......................................", "**********........................................", "**********........................................", "*********.........................................", "*********.........................................", "********..........................................", "******............................................", "****..............................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..................................................", "..............................................????", "............................................??????", "..........................................????????", ".........................................?????????", ".........................................?????????", "........................................??????????", "........................................??????????", ".......................................???????????", ".......................................???????????", ".......................................???????????", ".......................................???????????"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 58.69412236331676;
    if(result == expected) {
        cout << "Test Case 105: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 105: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test106() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 58.69412236331676;
    if(result == expected) {
        cout << "Test Case 106: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 106: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test107() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 58.69412236331676;
    if(result == expected) {
        cout << "Test Case 107: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 107: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test108() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 58.69412236331676;
    if(result == expected) {
        cout << "Test Case 108: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 108: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test109() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 58.69412236331676;
    if(result == expected) {
        cout << "Test Case 109: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 109: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test110() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 58.69412236331676;
    if(result == expected) {
        cout << "Test Case 110: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 110: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test111() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 58.69412236331676;
    if(result == expected) {
        cout << "Test Case 111: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 111: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test112() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 58.69412236331676;
    if(result == expected) {
        cout << "Test Case 112: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 112: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test113() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 58.69412236331676;
    if(result == expected) {
        cout << "Test Case 113: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 113: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test114() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 55.154328932550705;
    if(result == expected) {
        cout << "Test Case 114: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 114: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test115() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 55.154328932550705;
    if(result == expected) {
        cout << "Test Case 115: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 115: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test116() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 55.154328932550705;
    if(result == expected) {
        cout << "Test Case 116: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 116: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test117() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 7.0710678118654755;
    if(result == expected) {
        cout << "Test Case 117: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 117: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test118() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 8.06225774829855;
    if(result == expected) {
        cout << "Test Case 118: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 118: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test119() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 10.0;
    if(result == expected) {
        cout << "Test Case 119: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 119: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test120() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 18.384776310850235;
    if(result == expected) {
        cout << "Test Case 120: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 120: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test121() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 20.518284528683193;
    if(result == expected) {
        cout << "Test Case 121: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 121: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test122() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 18.384776310850235;
    if(result == expected) {
        cout << "Test Case 122: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 122: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test123() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 19.849433241279208;
    if(result == expected) {
        cout << "Test Case 123: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 123: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test124() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 21.400934559032695;
    if(result == expected) {
        cout << "Test Case 124: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 124: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test125() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 19.79898987322333;
    if(result == expected) {
        cout << "Test Case 125: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 125: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test126() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 4.0;
    if(result == expected) {
        cout << "Test Case 126: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 126: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test127() {
    vector<string> field = {"*...*...*...*...*...*...*...*...*...*...*...*...*.", "..................................................", "..................................................", ".................................................*", "?...?...?...?...?...?...?...?...?...?...?...?.?...", ".................................................*", "..................................................", "..................................................", "*...*...*...*...*...*...*...*...*...*...*...*...*.", "..................................................", "..................................................", "..................................................", "*...?...?...?...?...?...?...?...?...?...?...?...?.", "..................................................", "*...?...?...?...?...?...?...?...?...?...?...?...?.", "..................................................", "..................................................", "..................................................", "*...*...*...*...*...*...*...*...*...*...*...*...*.", "..................................................", "..................................................", ".................................................*", "?...?...?...?...?...?...?...?...?...?...?...?.?...", ".................................................*", "..................................................", "..................................................", "*...*...*...*...*...*...*...*...*...*...*...*...*.", "..................................................", "..................................................", "..................................................", "*...?...?...?...?...?...?...?...?...?...?...?...?.", "..................................................", "*...?...?...?...?...?...?...?...?...?...?...?...?.", "..................................................", "..................................................", "..................................................", "*...*...*...*...*...*...*...*...*...*...*...*...*.", "..................................................", "..................................................", "...............................?.?.?.?...........*", "?...?...?...?...?...?...?...?...?...?...?...?.?...", "...............................?.?.?.?...........*", "..................................................", "..................................................", "*...*...*...*...*...*...*...*...*...*...*...*...*.", "..................................................", "..................................................", ".................................................?", "*.............................................?.??", "...*...*...*...*...*...*...*...*...*...*...*...?.."};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 4.123105625617661;
    if(result == expected) {
        cout << "Test Case 127: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 127: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test128() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 8.06225774829855;
    if(result == expected) {
        cout << "Test Case 128: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 128: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test129() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 8.06225774829855;
    if(result == expected) {
        cout << "Test Case 129: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 129: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test130() {
    vector<string> field = {"........*.", "........*.", ".?......*.", "*........."};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 7.0;
    if(result == expected) {
        cout << "Test Case 130: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 130: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test131() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 40.01249804748511;
    if(result == expected) {
        cout << "Test Case 131: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 131: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test132() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 21.095023109728988;
    if(result == expected) {
        cout << "Test Case 132: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 132: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test133() {
    vector<string> field = {"*......?", ".....*.."};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 5.0990195135927845;
    if(result == expected) {
        cout << "Test Case 133: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 133: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test134() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 30.0;
    if(result == expected) {
        cout << "Test Case 134: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 134: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test135() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 45.0;
    if(result == expected) {
        cout << "Test Case 135: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 135: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test136() {
    vector<string> field = {"*..........", "......*?.*?"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 6.082762530298219;
    if(result == expected) {
        cout << "Test Case 136: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 136: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test137() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 23.0;
    if(result == expected) {
        cout << "Test Case 137: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 137: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test138() {
    vector<string> field = {"*...", "....", "...?"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 3.605551275463989;
    if(result == expected) {
        cout << "Test Case 138: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 138: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test139() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 48.010415536631214;
    if(result == expected) {
        cout << "Test Case 139: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 139: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test140() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 48.0;
    if(result == expected) {
        cout << "Test Case 140: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 140: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test141() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 26.0;
    if(result == expected) {
        cout << "Test Case 141: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 141: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test142() {
    vector<string> field = {"*.?..*"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 3.0;
    if(result == expected) {
        cout << "Test Case 142: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 142: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test143() {
    vector<string> field = {};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 48.010415536631214;
    if(result == expected) {
        cout << "Test Case 143: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 143: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test144() {
    vector<string> field = {"*...?....*"};
    SecurityBunker* pObj = new SecurityBunker();
    clock_t start = clock();
    double result = pObj->chooseBomb(field);
    clock_t end = clock();
    delete pObj;
    double expected = 5.0;
    if(result == expected) {
        cout << "Test Case 144: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 144: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    test67() == 0 ? ++passed : ++failed;
    test68() == 0 ? ++passed : ++failed;
    test69() == 0 ? ++passed : ++failed;
    test70() == 0 ? ++passed : ++failed;
    test71() == 0 ? ++passed : ++failed;
    test72() == 0 ? ++passed : ++failed;
    test73() == 0 ? ++passed : ++failed;
    test74() == 0 ? ++passed : ++failed;
    test75() == 0 ? ++passed : ++failed;
    test76() == 0 ? ++passed : ++failed;
    test77() == 0 ? ++passed : ++failed;
    test78() == 0 ? ++passed : ++failed;
    test79() == 0 ? ++passed : ++failed;
    test80() == 0 ? ++passed : ++failed;
    test81() == 0 ? ++passed : ++failed;
    test82() == 0 ? ++passed : ++failed;
    test83() == 0 ? ++passed : ++failed;
    test84() == 0 ? ++passed : ++failed;
    test85() == 0 ? ++passed : ++failed;
    test86() == 0 ? ++passed : ++failed;
    test87() == 0 ? ++passed : ++failed;
    test88() == 0 ? ++passed : ++failed;
    test89() == 0 ? ++passed : ++failed;
    test90() == 0 ? ++passed : ++failed;
    test91() == 0 ? ++passed : ++failed;
    test92() == 0 ? ++passed : ++failed;
    test93() == 0 ? ++passed : ++failed;
    test94() == 0 ? ++passed : ++failed;
    test95() == 0 ? ++passed : ++failed;
    test96() == 0 ? ++passed : ++failed;
    test97() == 0 ? ++passed : ++failed;
    test98() == 0 ? ++passed : ++failed;
    test99() == 0 ? ++passed : ++failed;
    test100() == 0 ? ++passed : ++failed;
    test101() == 0 ? ++passed : ++failed;
    test102() == 0 ? ++passed : ++failed;
    test103() == 0 ? ++passed : ++failed;
    test104() == 0 ? ++passed : ++failed;
    test105() == 0 ? ++passed : ++failed;
    test106() == 0 ? ++passed : ++failed;
    test107() == 0 ? ++passed : ++failed;
    test108() == 0 ? ++passed : ++failed;
    test109() == 0 ? ++passed : ++failed;
    test110() == 0 ? ++passed : ++failed;
    test111() == 0 ? ++passed : ++failed;
    test112() == 0 ? ++passed : ++failed;
    test113() == 0 ? ++passed : ++failed;
    test114() == 0 ? ++passed : ++failed;
    test115() == 0 ? ++passed : ++failed;
    test116() == 0 ? ++passed : ++failed;
    test117() == 0 ? ++passed : ++failed;
    test118() == 0 ? ++passed : ++failed;
    test119() == 0 ? ++passed : ++failed;
    test120() == 0 ? ++passed : ++failed;
    test121() == 0 ? ++passed : ++failed;
    test122() == 0 ? ++passed : ++failed;
    test123() == 0 ? ++passed : ++failed;
    test124() == 0 ? ++passed : ++failed;
    test125() == 0 ? ++passed : ++failed;
    test126() == 0 ? ++passed : ++failed;
    test127() == 0 ? ++passed : ++failed;
    test128() == 0 ? ++passed : ++failed;
    test129() == 0 ? ++passed : ++failed;
    test130() == 0 ? ++passed : ++failed;
    test131() == 0 ? ++passed : ++failed;
    test132() == 0 ? ++passed : ++failed;
    test133() == 0 ? ++passed : ++failed;
    test134() == 0 ? ++passed : ++failed;
    test135() == 0 ? ++passed : ++failed;
    test136() == 0 ? ++passed : ++failed;
    test137() == 0 ? ++passed : ++failed;
    test138() == 0 ? ++passed : ++failed;
    test139() == 0 ? ++passed : ++failed;
    test140() == 0 ? ++passed : ++failed;
    test141() == 0 ? ++passed : ++failed;
    test142() == 0 ? ++passed : ++failed;
    test143() == 0 ? ++passed : ++failed;
    test144() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=8547850&rd=8002&pm=4650
********************************************************************************
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <sstream>
#include <iostream>
#include <utility>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <setjmp.h>
#include <ctype.h>
 
#define ll long long
#define ld long double
#define EPS 1e-9
using namespace std;
 
#define SZ size()
#define MP make_pair
#define PB push_back
#define FR(i,a,b) for (int i=(a);i<(signed)(b);i++)
#define FOR(i,n) FR(i,0,n)
#define FORI(i,s) FOR(i,s.SZ)
#define S string
#define V vector
#define VS V<S>
#define VI V<int>
 
struct SecurityBunker {
V<pair<ld,ld> > b, so; 
int uf[4096];
int find(int x) { return uf[x] == -1 ? x : (uf[x] = find(uf[x])); }
void unite(int x, int y) { x=find(x); y=find(y); if (x-y) uf[x] = y; }
int can(ld cur) {
 memset(uf,-1,sizeof(uf));
 FORI(i,b) FORI(j,b) if (hypot(b[i].first-b[j].first, b[i].second-b[j].second) < cur) unite(i,j);
 FORI(k,b) if (uf[k] == -1)
  FORI(i,so) {
   FORI(j,b) if (find(j) == k && hypot(b[j].first-so[i].first, b[j].second-so[i].second) < cur) goto happyface;
   return 0;
   happyface:;
  }
 return 1;
}
double chooseBomb(VS vs) {
 FORI(i,vs) FORI(j,vs[i]) {
  if (vs[i][j] == '*') b.PB(MP(i,j));
  else if (vs[i][j] == '?') so.PB(MP(i,j));
 }
 ld lb=0, ub=222;
 while (ub-lb > 1e-12) {
  ld cur = (ub+lb)/2;
  if (can(cur)) ub = cur;
  else lb = cur; 
 }
 return (lb+ub)/2;
}};

********************************************************************************
*******************************************************************************/