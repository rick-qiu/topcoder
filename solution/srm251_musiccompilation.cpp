/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=4625
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class MusicCompilation {
public:
    vector<string> makeCompilation(vector<string> artists);
};

vector<string> MusicCompilation::makeCompilation(vector<string> artists) {
    vector<string> ret;
    return ret;
}


int test0() {
    vector<string> artists = {"Shakira 1", "Jamiroquai 3", "Gorillaz 2"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"Gorillaz", "Jamiroquai", "Jamiroquai", "Shakira", "Gorillaz", "Jamiroquai"};
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<string> artists = {"Radiohead 2", "Spiderbait 3", "LimpBizkit 4"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"LimpBizkit", "Radiohead", "Spiderbait", "LimpBizkit", "LimpBizkit", "Spiderbait", "LimpBizkit", "Radiohead", "Spiderbait"};
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<string> artists = {"MisHiggins 3", "TheWhitlam 7", "AvrilLavig 3", "ChrAguiler 3", "CatEmpire 5", "RHCP 5", "Shakira 1"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AvrilLavig", "CatEmpire", "ChrAguiler", "MisHiggins", "RHCP", "TheWhitlam", "AvrilLavig", "CatEmpire", "CatEmpire", "CatEmpire", "ChrAguiler", "MisHiggins", "RHCP", "RHCP", "RHCP", "Shakira", "TheWhitlam", "TheWhitlam", "TheWhitlam", "TheWhitlam", "TheWhitlam", "AvrilLavig", "CatEmpire", "ChrAguiler", "MisHiggins", "RHCP", "TheWhitlam"};
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<string> artists = {"Beatles 7", "ABBA 5"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"ABBA", "Beatles", "ABBA", "ABBA", "ABBA", "Beatles", "Beatles", "Beatles", "Beatles", "Beatles", "ABBA", "Beatles"};
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<string> artists = {"d 2", "b 3", "c 4"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"b", "c", "d", "b", "c", "c", "b", "c", "d"};
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<string> artists = {"a 1", "b 2", "c 3", "d 4", "e 5", "f 6", "g 7", "h 8", "k 9"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"b", "c", "d", "e", "f", "g", "h", "k", "a", "c", "d", "d", "e", "e", "e", "f", "f", "f", "f", "g", "g", "g", "g", "g", "h", "h", "h", "h", "h", "h", "k", "k", "k", "k", "k", "k", "k", "b", "c", "d", "e", "f", "g", "h", "k"};
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<string> artists = {"a 1", "b 2", "c 3", "d 4", "e 5", "f 6", "g 7", "h 8", "k 9", "m 10", "n 11", "o 12", "p 13", "r 9"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"b", "c", "d", "e", "f", "g", "h", "k", "m", "n", "o", "p", "r", "a", "c", "d", "d", "e", "e", "e", "f", "f", "f", "f", "g", "g", "g", "g", "g", "h", "h", "h", "h", "h", "h", "k", "k", "k", "k", "k", "k", "k", "m", "m", "m", "m", "m", "m", "m", "m", "n", "n", "n", "n", "n", "n", "n", "n", "n", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "p", "p", "p", "p", "p", "p", "p", "p", "p", "p", "p", "r", "r", "r", "r", "r", "r", "r", "b", "c", "d", "e", "f", "g", "h", "k", "m", "n", "o", "p", "r"};
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<string> artists = {"a 1", "b 2", "c 3", "d 4", "e 5", "f 6", "g 7", "h 8", "k 9", "m 10", "n 11", "o 12", "p 13", "q 14", "r 15", "s 16", "t 17"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"b", "c", "d", "e", "f", "g", "h", "k", "m", "n", "o", "p", "q", "r", "s", "t", "a", "c", "d", "d", "e", "e", "e", "f", "f", "f", "f", "g", "g", "g", "g", "g", "h", "h", "h", "h", "h", "h", "k", "k", "k", "k", "k", "k", "k", "m", "m", "m", "m", "m", "m", "m", "m", "n", "n", "n", "n", "n", "n", "n", "n", "n", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "p", "p", "p", "p", "p", "p", "p", "p", "p", "p", "p", "q", "q", "q", "q", "q", "q", "q", "q", "q", "q", "q", "q", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "s", "s", "s", "s", "s", "s", "s", "s", "s", "s", "s", "s", "s", "s", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "b", "c", "d", "e", "f", "g", "h", "k", "m", "n", "o", "p", "q", "r", "s", "t"};
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<string> artists = {"z 31", "y 17", "x 23", "w 3", "v 12", "u 7", "t 15", "s 4", "r 5", "q 2", "p 1", "o 6", "n 3", "m 4", "l 3", "k 1", "j 2", "i 2", "h 1", "g 1", "f 2", "e 1", "d 1", "c 1", "b 1", "a 1"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"f", "i", "j", "l", "m", "n", "o", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "a", "b", "c", "d", "e", "g", "h", "k", "l", "m", "m", "n", "o", "o", "o", "o", "p", "r", "r", "r", "s", "s", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "u", "u", "u", "u", "u", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "w", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "f", "i", "j", "l", "m", "n", "o", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"};
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<string> artists = {"z 43", "y 29", "x 22", "w 3", "v 1", "u 13", "t 11", "s 7", "r 5", "q 4", "p 1", "o 3", "n 2", "m 2", "l 1", "k 1", "j 1", "i 1"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"m", "n", "o", "q", "r", "s", "t", "u", "w", "x", "y", "z", "i", "j", "k", "l", "o", "p", "q", "q", "r", "r", "r", "s", "s", "s", "s", "s", "t", "t", "t", "t", "t", "t", "t", "t", "t", "u", "u", "u", "u", "u", "u", "u", "u", "u", "u", "u", "v", "w", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "x", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "y", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "m", "n", "o", "q", "r", "s", "t", "u", "w", "x", "y", "z"};
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<string> artists = {"Beatles 2", "ABBA 1"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"Beatles", "ABBA", "Beatles"};
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<string> artists = {"wmdyqmuelh 628", "uxkuxcjgrk 65", "ynfroktblv 100", "airvwiwjsx 4", "acbbwwhth 2", "wqaynoll 1"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"acbbwwhth", "airvwiwjsx", "uxkuxcjgrk", "wmdyqmuelh", "ynfroktblv", "airvwiwjsx", "airvwiwjsx", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "uxkuxcjgrk", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wmdyqmuelh", "wqaynoll", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "ynfroktblv", "acbbwwhth", "airvwiwjsx", "uxkuxcjgrk", "wmdyqmuelh", "ynfroktblv"};
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<string> artists = {"hcrkHM 693", "t 69", "eTyPqUyBo 33", "DrwCTNbD 4", "GmRifHAlJG 1"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"DrwCTNbD", "eTyPqUyBo", "hcrkHM", "t", "DrwCTNbD", "DrwCTNbD", "GmRifHAlJG", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "eTyPqUyBo", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "hcrkHM", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "t", "DrwCTNbD", "eTyPqUyBo", "hcrkHM", "t"};
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<string> artists = {"FJYdqY 720", "RZ 62", "RPSCpcMXCv 16", "HSL 1", "EAwill 1"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"FJYdqY", "RPSCpcMXCv", "RZ", "EAwill", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "FJYdqY", "HSL", "RPSCpcMXCv", "RPSCpcMXCv", "RPSCpcMXCv", "RPSCpcMXCv", "RPSCpcMXCv", "RPSCpcMXCv", "RPSCpcMXCv", "RPSCpcMXCv", "RPSCpcMXCv", "RPSCpcMXCv", "RPSCpcMXCv", "RPSCpcMXCv", "RPSCpcMXCv", "RPSCpcMXCv", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "RZ", "FJYdqY", "RPSCpcMXCv", "RZ"};
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<string> artists = {"VYIhIc 79", "EKuPP 118", "zpDzdIrPad 78", "aaPTmn 80", "qQEdCi 91", "DQcZGM 50", "HWDyZi 19", "Z 20", "dlXmNry 80", "THsyVt 6", "oIqIxwpb 41", "hSK 9", "lt 18", "kkDa 25", "cLhDhk 18", "ERAXFD 15", "yHIxj 1", "lKefZcc 6", "YoaLDb 1", "RPSW 2", "AwkRYe 10", "Ue 10", "hYgS 6", "pixBMYU 4", "zVJc 2", "JfL 1", "FyrLe 4", "jEhzj 2", "m 2", "ONtQOf 1", "hdUtPt 1"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AwkRYe", "DQcZGM", "EKuPP", "ERAXFD", "FyrLe", "HWDyZi", "RPSW", "THsyVt", "Ue", "VYIhIc", "Z", "aaPTmn", "cLhDhk", "dlXmNry", "hSK", "hYgS", "jEhzj", "kkDa", "lKefZcc", "lt", "m", "oIqIxwpb", "pixBMYU", "qQEdCi", "zVJc", "zpDzdIrPad", "AwkRYe", "AwkRYe", "AwkRYe", "AwkRYe", "AwkRYe", "AwkRYe", "AwkRYe", "AwkRYe", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "DQcZGM", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "EKuPP", "ERAXFD", "ERAXFD", "ERAXFD", "ERAXFD", "ERAXFD", "ERAXFD", "ERAXFD", "ERAXFD", "ERAXFD", "ERAXFD", "ERAXFD", "ERAXFD", "ERAXFD", "FyrLe", "FyrLe", "HWDyZi", "HWDyZi", "HWDyZi", "HWDyZi", "HWDyZi", "HWDyZi", "HWDyZi", "HWDyZi", "HWDyZi", "HWDyZi", "HWDyZi", "HWDyZi", "HWDyZi", "HWDyZi", "HWDyZi", "HWDyZi", "HWDyZi", "JfL", "ONtQOf", "THsyVt", "THsyVt", "THsyVt", "THsyVt", "Ue", "Ue", "Ue", "Ue", "Ue", "Ue", "Ue", "Ue", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "VYIhIc", "YoaLDb", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "aaPTmn", "cLhDhk", "cLhDhk", "cLhDhk", "cLhDhk", "cLhDhk", "cLhDhk", "cLhDhk", "cLhDhk", "cLhDhk", "cLhDhk", "cLhDhk", "cLhDhk", "cLhDhk", "cLhDhk", "cLhDhk", "cLhDhk", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "dlXmNry", "hSK", "hSK", "hSK", "hSK", "hSK", "hSK", "hSK", "hYgS", "hYgS", "hYgS", "hYgS", "hdUtPt", "kkDa", "kkDa", "kkDa", "kkDa", "kkDa", "kkDa", "kkDa", "kkDa", "kkDa", "kkDa", "kkDa", "kkDa", "kkDa", "kkDa", "kkDa", "kkDa", "kkDa", "kkDa", "kkDa", "kkDa", "kkDa", "kkDa", "kkDa", "lKefZcc", "lKefZcc", "lKefZcc", "lKefZcc", "lt", "lt", "lt", "lt", "lt", "lt", "lt", "lt", "lt", "lt", "lt", "lt", "lt", "lt", "lt", "lt", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "oIqIxwpb", "pixBMYU", "pixBMYU", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "qQEdCi", "yHIxj", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "zpDzdIrPad", "AwkRYe", "DQcZGM", "EKuPP", "ERAXFD", "FyrLe", "HWDyZi", "RPSW", "THsyVt", "Ue", "VYIhIc", "Z", "aaPTmn", "cLhDhk", "dlXmNry", "hSK", "hYgS", "jEhzj", "kkDa", "lKefZcc", "lt", "m", "oIqIxwpb", "pixBMYU", "qQEdCi", "zVJc", "zpDzdIrPad"};
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<string> artists = {"CVKyb 151", "MIxF 98", "Jqxr 169", "rYh 70", "Kny 20", "Ea 56", "m 66", "pUabPRWo 37", "OTFeaNdCa 16", "VFVA 21", "tBQMEG 2", "NjBAzZS 25", "jRV 22", "iBrmAcpva 3", "jcbhmX 8", "eq 10", "HGYK 9", "rS 5", "x 4", "U 1", "sgxODj 2", "g 1", "uNUAqsd 1", "oRAcwtFxBW 1", "HHSfR 1", "CDGMCB 1"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"CVKyb", "Ea", "HGYK", "Jqxr", "Kny", "MIxF", "NjBAzZS", "OTFeaNdCa", "VFVA", "eq", "iBrmAcpva", "jRV", "jcbhmX", "m", "pUabPRWo", "rS", "rYh", "sgxODj", "tBQMEG", "x", "CDGMCB", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "CVKyb", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "Ea", "HGYK", "HGYK", "HGYK", "HGYK", "HGYK", "HGYK", "HGYK", "HHSfR", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Jqxr", "Kny", "Kny", "Kny", "Kny", "Kny", "Kny", "Kny", "Kny", "Kny", "Kny", "Kny", "Kny", "Kny", "Kny", "Kny", "Kny", "Kny", "Kny", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "MIxF", "NjBAzZS", "NjBAzZS", "NjBAzZS", "NjBAzZS", "NjBAzZS", "NjBAzZS", "NjBAzZS", "NjBAzZS", "NjBAzZS", "NjBAzZS", "NjBAzZS", "NjBAzZS", "NjBAzZS", "NjBAzZS", "NjBAzZS", "NjBAzZS", "NjBAzZS", "NjBAzZS", "NjBAzZS", "NjBAzZS", "NjBAzZS", "NjBAzZS", "NjBAzZS", "OTFeaNdCa", "OTFeaNdCa", "OTFeaNdCa", "OTFeaNdCa", "OTFeaNdCa", "OTFeaNdCa", "OTFeaNdCa", "OTFeaNdCa", "OTFeaNdCa", "OTFeaNdCa", "OTFeaNdCa", "OTFeaNdCa", "OTFeaNdCa", "OTFeaNdCa", "U", "VFVA", "VFVA", "VFVA", "VFVA", "VFVA", "VFVA", "VFVA", "VFVA", "VFVA", "VFVA", "VFVA", "VFVA", "VFVA", "VFVA", "VFVA", "VFVA", "VFVA", "VFVA", "VFVA", "eq", "eq", "eq", "eq", "eq", "eq", "eq", "eq", "g", "iBrmAcpva", "jRV", "jRV", "jRV", "jRV", "jRV", "jRV", "jRV", "jRV", "jRV", "jRV", "jRV", "jRV", "jRV", "jRV", "jRV", "jRV", "jRV", "jRV", "jRV", "jRV", "jcbhmX", "jcbhmX", "jcbhmX", "jcbhmX", "jcbhmX", "jcbhmX", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "m", "oRAcwtFxBW", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "pUabPRWo", "rS", "rS", "rS", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "rYh", "uNUAqsd", "x", "x", "CVKyb", "Ea", "HGYK", "Jqxr", "Kny", "MIxF", "NjBAzZS", "OTFeaNdCa", "VFVA", "eq", "iBrmAcpva", "jRV", "jcbhmX", "m", "pUabPRWo", "rS", "rYh", "sgxODj", "tBQMEG", "x"};
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<string> artists = {"PmOZpKXb 46", "L 247", "fDHedO 137", "lzTAFm 6", "YR 60", "a 74", "Nzso 22", "Zunh 19", "KC 22", "d 26", "PMjFlVdSYS 33", "mPfPc 5", "ewe 14", "FBY 30", "Tkkar 3", "mUtry 7", "tUUJe 1", "erpWcVl 11", "SWOzCoO 6", "QCMfcrXU 5", "hcNa 8", "NlcmzxfX 1", "WgDnCHio 5", "URJgrIGjzH 3", "GjNSsdzQ 3", "YzHS 1", "NLrhiX 2", "lVSrhp 1", "LHQImjJgq 1", "btPXImfBNu 1"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"FBY", "GjNSsdzQ", "KC", "L", "NLrhiX", "Nzso", "PMjFlVdSYS", "PmOZpKXb", "QCMfcrXU", "SWOzCoO", "Tkkar", "URJgrIGjzH", "WgDnCHio", "YR", "Zunh", "a", "d", "erpWcVl", "ewe", "fDHedO", "hcNa", "lzTAFm", "mPfPc", "mUtry", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "FBY", "GjNSsdzmjJgq", "NlcmzxfX", "Nzso", "Nzso", "Nzso", "Nzso", "Nzso", "Nzso", "Nzso", "Nzso", "Nzso", "Nzso", "Nzso", "Nzso", "Nzso", "Nzso", "Nzso", "Nzso", "Nzso", "Nzso", "Nzso", "Nzso", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PMjFlVdSYS", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "PmOZpKXb", "QCMfcrXU", "QCMfcrXU", "QCMfcrXU", "SWOzCoO", "SWOzCoO", "SWOzCoO", "SWOzCoO", "Tkkar", "URJgrIGjzH", "WgDnCHio", "WgDnCHio", "WgDnCHio", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YR", "YzHS", "Zunh", "Zunh", "Zunh", "Zunh", "Zunh", "Zunh", "Zunh", "Zunh", "Zunh", "Zunh", "Zunh", "Zunh", "Zunh", "Zunh", "Zunh", "Zunh", "Zunh", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "btPXImfBNu", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "erpWcVl", "erpWcVl", "erpWcVl", "erpWcVl", "erpWcVl", "erpWcVl", "erpWcVl", "erpWcVl", "erpWcVl", "ewe", "ewe", "ewe", "ewe", "ewe", "ewe", "ewe", "ewe", "ewe", "ewe", "ewe", "ewe", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "fDHedO", "hcNa", "hcNa", "hcNa", "hcNa", "hcNa", "hcNa", "lVSrhp", "lzTAFm", "lzTAFm", "lzTAFm", "lzTAFm", "mPfPc", "mPfPc", "mPfPc", "mUtry", "mUtry", "mUtry", "mUtry", "mUtry", "tUUJe", "FBY", "GjNSsdzQ", "KC", "L", "NLrhiX", "Nzso", "PMjFlVdSYS", "PmOZpKXb", "QCMfcrXU", "SWOzCoO", "Tkkar", "URJgrIGjzH", "WgDnCHio", "YR", "Zunh", "a", "d", "erpWcVl", "ewe", "fDHedO", "hcNa", "lzTAFm", "mPfPc", "mUtry"};
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<string> artists = {"NUCamxETdM 46", "YjS 161", "kYFdCJDu 155", "hu 20", "CNmVZhXL 72", "K 15", "H 59", "Jv 91", "wbQAl 12", "NYelIpox 52", "uXyo 12", "qJPPZJnSI 3", "BAVVzRyer 26", "pHBiUmPuGz 3", "n 6", "a 22", "oyMOQC 1", "hWlRAqA 7", "wiF 3", "Nd 7", "NmEWUYxmg 7", "KVUgAZCS 5", "EP 2", "YyEer 3", "LsoSK 1", "fjxkXdJu 1", "KveY 1", "qa 2", "HJThHpWfA 2", "Nizvgdj 1", "wA 1", "V 1"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"BAVVzRyer", "CNmVZhXL", "EP", "H", "HJThHpWfA", "Jv", "K", "KVUgAZCS", "NUCamxETdM", "NYelIpox", "Nd", "NmEWUYxmg", "YjS", "YyEer", "a", "hWlRAqA", "hu", "kYFdCJDu", "n", "pHBiUmPuGz", "qJPPZJnSI", "qa", "uXyo", "wbQAl", "wiF", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "BAVVzRyer", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "CNmVZhXL", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "Jv", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "KVUgAZCS", "KVUgAZCS", "KVUgAZCS", "KveY", "LsoSK", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NUCamxETdM", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "NYelIpox", "Nd", "Nd", "Nd", "Nd", "Nd", "Nizvgdj", "NmEWUYxmg", "NmEWUYxmg", "NmEWUYxmg", "NmEWUYxmg", "NmEWUYxmg", "V", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YjS", "YyEer", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "fjxkXdJu", "hWlRAqA", "hWlRAqA", "hWlRAqA", "hWlRAqA", "hWlRAqA", "hu", "hu", "hu", "hu", "hu", "hu", "hu", "hu", "hu", "hu", "hu", "hu", "hu", "hu", "hu", "hu", "hu", "hu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "kYFdCJDu", "n", "n", "n", "n", "oyMOQC", "pHBiUmPuGz", "qJPPZJnSI", "uXyo", "uXyo", "uXyo", "uXyo", "uXyo", "uXyo", "uXyo", "uXyo", "uXyo", "uXyo", "wA", "wbQAl", "wbQAl", "wbQAl", "wbQAl", "wbQAl", "wbQAl", "wbQAl", "wbQAl", "wbQAl", "wbQAl", "wiF", "BAVVzRyer", "CNmVZhXL", "EP", "H", "HJThHpWfA", "Jv", "K", "KVUgAZCS", "NUCamxETdM", "NYelIpox", "Nd", "NmEWUYxmg", "YjS", "YyEer", "a", "hWlRAqA", "hu", "kYFdCJDu", "n", "pHBiUmPuGz", "qJPPZJnSI", "qa", "uXyo", "wbQAl", "wiF"};
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<string> artists = {"a 1", "b 1", "c 1", "d 5"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"d", "a", "b", "c", "d", "d", "d", "d"};
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<string> artists = {"B 252", "YjtNqPhnPJ 30", "XZcAMqAaN 42", "GR 108", "ThzXQPC 14", "KeUqPt 113", "PKSV 52", "OEnJGf 39", "e 24", "gX 4", "vXixzuUXWc 17", "XVIhF 34", "P 22", "SXhkfPBCa 11", "DarvveYsP 5", "uYuLfuL 8", "mPHMgPW 5", "phSmzUzwD 5", "PSjoBtVUPI 3", "CbC 4", "XbG 3", "nQaOnhsemp 1", "Da 2", "oiQRLXz 1", "eNxBijBeLz 1"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"B", "CbC", "Da", "DarvveYsP", "GR", "KeUqPt", "OEnJGf", "P", "PKSV", "PSjoBtVUPI", "SXhkfPBCa", "ThzXQPC", "XVIhF", "XZcAMqAaN", "XbG", "YjtNqPhnPJ", "e", "gX", "mPHMgPW", "phSmzUzwD", "uYuLfuL", "vXixzuUXWc", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "B", "CbC", "CbC", "DarvveYsP", "DarvveYsP", "DarvveYseUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "KeUqPt", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGf", "OEnJGfjoBtVUPI", "SXhkfPBCa", "SXhkfPBCa", "SXhkfPBCa", "SXhkfPBCa", "SXhkfPBCa", "SXhkfPBCa", "SXhkfPBCa", "SXhkfPBCa", "SXhkfPBCa", "ThzXQPC", "ThzXQPC", "ThzXQPC", "ThzXQPC", "ThzXQPC", "ThzXQPC", "ThzXQPC", "ThzXQPC", "ThzXQPC", "ThzXQPC", "ThzXQPC", "ThzXQPC", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XVIhF", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XZcAMqAaN", "XbG", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "YjtNqPhnPJ", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "eNxBijBeLz", "gX", "gX", "mPHMgPW", "mPHMgPW", "mPHMgPW", "nQaOnhsemp", "oiQRLXz", "phSmzUzwD", "phSmzUzwD", "phSmzUzwD", "uYuLfuL", "uYuLfuL", "uYuLfuL", "uYuLfuL", "uYuLfuL", "uYuLfuL", "vXixzuUXWc", "vXixzuUXWc", "vXixzuUXWc", "vXixzuUXWc", "vXixzuUXWc", "vXixzuUXWc", "vXixzuUXWc", "vXixzuUXWc", "vXixzuUXWc", "vXixzuUXWc", "vXixzuUXWc", "vXixzuUXWc", "vXixzuUXWc", "vXixzuUXWc", "vXixzuUXWc", "B", "CbC", "Da", "DarvveYsP", "GR", "KeUqPt", "OEnJGf", "P", "PKSV", "PSjoBtVUPI", "SXhkfPBCa", "ThzXQPC", "XVIhF", "XZcAMqAaN", "XbG", "YjtNqPhnPJ", "e", "gX", "mPHMgPW", "phSmzUzwD", "uYuLfuL", "vXixzuUXWc"};
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<string> artists = {"ZseTFdpYat 260", "VUIvCSeLju 176", "cBqv 45", "Fn 86", "DWBFmOiWz 17", "szbkJRg 51", "I 37", "PqNM 26", "QPshO 32", "obhEDC 15", "inl 1", "UYA 16", "rvjBCX 6", "hqwAVmk 2", "yUUrPCD 8", "zAZL 5", "knAN 2", "q 2", "jZLHJupGSb 3", "eQbnF 1", "GTKcLE 2", "mZfb 3", "ia 1", "GxQQEDfC 1", "l 1", "CgunV 1"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"DWBFmOiWz", "Fn", "GTKcLE", "I", "PqNM", "QPshO", "UYA", "VUIvCSeLju", "ZseTFdpYat", "cBqv", "hqwAVmk", "jZLHJupGSb", "knAN", "mZfb", "obhEDC", "q", "rvjBCX", "szbkJRg", "yUUrPCD", "zAZL", "CgunV", "DWBFmOiWz", "DWBFmOiWz", "DWBFmOiWz", "DWBFmOiWz", "DWBFmOiWz", "DWBFmOiWz", "DWBFmOiWz", "DWBFmOiWz", "DWBFmOiWz", "DWBFmOiWz", "DWBFmOiWz", "DWBFmOiWz", "DWBFmOiWz", "DWBFmOiWz", "DWBFmOiWz", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "Fn", "GxQQEDfC", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "I", "PqNM", "PqNM", "PqNM", "PqNM", "PqNM", "PqNM", "PqNM", "PqNM", "PqNM", "PqNM", "PqNM", "PqNM", "PqNM", "PqNM", "PqNM", "PqNM", "PqNM", "PqNM", "PqNM", "PqNM", "PqNM", "PqNM", "PqNM", "PqNM", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "QPshO", "UYA", "UYA", "UYA", "UYA", "UYA", "UYA", "UYA", "UYA", "UYA", "UYA", "UYA", "UYA", "UYA", "UYA", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "VUIvCSeLju", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "ZseTFdpYat", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "cBqv", "eQbnF", "ia", "inl", "jZLHJupGSb", "l", "mZfb", "obhEDC", "obhEDC", "obhEDC", "obhEDC", "obhEDC", "obhEDC", "obhEDC", "obhEDC", "obhEDC", "obhEDC", "obhEDC", "obhEDC", "obhEDC", "rvjBCX", "rvjBCX", "rvjBCX", "rvjBCX", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "szbkJRg", "yUUrPCD", "yUUrPCD", "yUUrPCD", "yUUrPCD", "yUUrPCD", "yUUrPCD", "zAZL", "zAZL", "zAZL", "DWBFmOiWz", "Fn", "GTKcLE", "I", "PqNM", "QPshO", "UYA", "VUIvCSeLju", "ZseTFdpYat", "cBqv", "hqwAVmk", "jZLHJupGSb", "knAN", "mZfb", "obhEDC", "q", "rvjBCX", "szbkJRg", "yUUrPCD", "zAZL"};
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<string> artists = {"KFHrwx 180", "n 62", "NlVY 50", "vrxwyTUXe 21", "w 21", "ZK 12", "JmkGB 106", "hmK 17", "PFCmL 29", "ZpaRjbXUjQ 93", "Uaa 5", "fCcf 54", "evvoBaTnQ 42", "xXgxlEMr 15", "Gypvo 26", "BUsykA 18", "oOfNmIRD 7", "wCCU 1", "zdHvZ 13", "fqwO 9", "IBkSqN 3", "fxZHhIUm 3", "QyJOmj 1", "KJuBeqLuWG 3", "otizkfb 3", "h 2", "jGaj 1", "rP 1", "HFIIrv 1", "urkwK 1"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"BUsykA", "Gypvo", "IBkSqN", "JmkGB", "KFHrwx", "KJuBeqLuWG", "NlVY", "PFCmL", "Uaa", "ZK", "ZpaRjbXUjQ", "evvoBaTnQ", "fCcf", "fqwO", "fxZHhIUm", "h", "hmK", "n", "oOfNmIRD", "otizkfb", "vrxwyTUXe", "w", "xXgxlEMr", "zdHvZ", "BUsykA", "BUsykA", "BUsykA", "BUsykA", "BUsykA", "BUsykA", "BUsykA", "BUsykA", "BUsykA", "BUsykA", "BUsykA", "BUsykA", "BUsykA", "BUsykA", "BUsykA", "BUsykA", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "Gypvo", "HFIIrv", "IBkSqN", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "JmkGB", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KFHrwx", "KJuBeqLuWG", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "NlVY", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "PFCmL", "QyJOmj", "Uaa", "Uaa", "Uaa", "ZK", "ZK", "ZK", "ZK", "ZK", "ZK", "ZK", "ZK", "ZK", "ZK", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "ZpaRjbXUjQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "evvoBaTnQ", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fCcf", "fqwO", "fqwO", "fqwO", "fqwO", "fqwO", "fqwO", "fqwO", "fxZHhIUm", "hmK", "hmK", "hmK", "hmK", "hmK", "hmK", "hmK", "hmK", "hmK", "hmK", "hmK", "hmK", "hmK", "hmK", "hmK", "jGaj", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "n", "oOfNmIRD", "oOfNmIRD", "oOfNmIRD", "oOfNmIRD", "oOfNmIRD", "otizkfb", "rP", "urkwK", "vrxwyTUXe", "vrxwyTUXe", "vrxwyTUXe", "vrxwyTUXe", "vrxwyTUXe", "vrxwyTUXe", "vrxwyTUXe", "vrxwyTUXe", "vrxwyTUXe", "vrxwyTUXe", "vrxwyTUXe", "vrxwyTUXe", "vrxwyTUXe", "vrxwyTUXe", "vrxwyTUXe", "vrxwyTUXe", "vrxwyTUXe", "vrxwyTUXe", "vrxwyTUXe", "w", "w", "w", "w", "w", "w", "w", "w", "w", "w", "w", "w", "w", "w", "w", "w", "w", "w", "w", "wCCU", "xXgxlEMr", "xXgxlEMr", "xXgxlEMr", "xXgxlEMr", "xXgxlEMr", "xXgxlEMr", "xXgxlEMr", "xXgxlEMr", "xXgxlEMr", "xXgxlEMr", "xXgxlEMr", "xXgxlEMr", "xXgxlEMr", "zdHvZ", "zdHvZ", "zdHvZ", "zdHvZ", "zdHvZ", "zdHvZ", "zdHvZ", "zdHvZ", "zdHvZ", "zdHvZ", "zdHvZ", "BUsykA", "Gypvo", "IBkSqN", "JmkGB", "KFHrwx", "KJuBeqLuWG", "NlVY", "PFCmL", "Uaa", "ZK", "ZpaRjbXUjQ", "evvoBaTnQ", "fCcf", "fqwO", "fxZHhIUm", "h", "hmK", "n", "oOfNmIRD", "otizkfb", "vrxwyTUXe", "w", "xXgxlEMr", "zdHvZ"};
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<string> artists = {"mzAdx 212", "enQ 115", "bt 84", "Fkh 55", "qZFhdpMHzD 79", "AUNBDrLPZ 65", "mFw 61", "LPQDoQh 33", "v 24", "Wdeqq 24", "SUapgBC 4", "fyOSnwpdT 8", "qoxhgUWu 7", "VRYAPtWyGs 10", "CpaUyZ 1", "FkQnKPlGOu 6", "ad 1", "ETVOXk 4", "KLfZKO 3", "bLHBl 1", "mXwBTHsOmT 1", "DKDfnjeM 1", "Gqobwb 1"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AUNBDrLPZ", "ETVOXk", "FkQnKPlGOu", "Fkh", "KLfZKO", "LPQDoQh", "SUapgBC", "VRYAPtWyGs", "Wdeqq", "bt", "enQ", "fyOSnwpdT", "mFw", "mzAdx", "qZFhdpMHzD", "qoxhgUWu", "v", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "AUNBDrLPZ", "CpaUyZ", "DKDfnjeM", "ETVOXk", "ETVOXk", "FkQnKPlGOu", "FkQnKPlGOu", "FkQnKPlGOu", "FkQnKPlGOu", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Fkh", "Gqobwb", "KLfZKO", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "LPQDoQh", "SUapgBC", "SUapgBC", "VRYAPtWyGs", "VRYAPtWyGs", "VRYAPtWyGs", "VRYAPtWyGs", "VRYAPtWyGs", "VRYAPtWyGs", "VRYAPtWyGs", "VRYAPtWyGs", "Wdeqq", "Wdeqq", "Wdeqq", "Wdeqq", "Wdeqq", "Wdeqq", "Wdeqq", "Wdeqq", "Wdeqq", "Wdeqq", "Wdeqq", "Wdeqq", "Wdeqq", "Wdeqq", "Wdeqq", "Wdeqq", "Wdeqq", "Wdeqq", "Wdeqq", "Wdeqq", "Wdeqq", "Wdeqq", "ad", "bLHBl", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "bt", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "enQ", "fyOSnwpdT", "fyOSnwpdT", "fyOSnwpdT", "fyOSnwpdT", "fyOSnwpdT", "fyOSnwpdT", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mFw", "mXwBTHsOmT", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "mzAdx", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qZFhdpMHzD", "qoxhgUWu", "qoxhgUWu", "qoxhgUWu", "qoxhgUWu", "qoxhgUWu", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "AUNBDrLPZ", "ETVOXk", "FkQnKPlGOu", "Fkh", "KLfZKO", "LPQDoQh", "SUapgBC", "VRYAPtWyGs", "Wdeqq", "bt", "enQ", "fyOSnwpdT", "mFw", "mzAdx", "qZFhdpMHzD", "qoxhgUWu", "v"};
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<string> artists = {"APbChEA 215", "DJZyA 153", "DTMvEGTIC 2", "X 83", "S 17", "DwV 67", "ffg 30", "CDEdSwPYaa 44", "UNmb 55", "wLz 42", "gCHMDw 6", "Eprjo 16", "JaQtdJutDx 8", "ED 5", "CmJUeKSpyd 6", "K 7", "d 6", "XJomdtO 3", "kUFm 9", "JwwKmQU 2", "WspOIEZNnh 1", "JdJH 8", "k 2", "LF 2", "o 1", "Qwsy 3", "jzWKDjW 2", "G 1", "tCkjR 1", "AjPOm 1", "LxKDO 1", "yVQVYaGF 1"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"APbChEA", "CDEdSwPYaa", "CmJUeKSpyd", "DJZyA", "DTMvEGTIC", "DwV", "ED", "Eprjo", "JaQtdJutDx", "JdJH", "JwwKmQU", "K", "LF", "Qwsy", "S", "UNmb", "X", "XJomdtO", "d", "ffg", "gCHMDw", "jzWKDjW", "k", "kUFm", "wLz", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "APbChEA", "AjPOm", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CDEdSwPYaa", "CmJUeKSpyd", "CmJUeKSpyd", "CmJUeKSpyd", "CmJUeKSpyd", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DJZyA", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "DwV", "ED", "ED", "ED", "Eprjo", "Eprjo", "Eprjo", "Eprjo", "Eprjo", "Eprjo", "Eprjo", "Eprjo", "Eprjo", "Eprjo", "Eprjo", "Eprjo", "Eprjo", "Eprjo", "G", "JaQtdJutDx", "JaQtdJutDx", "JaQtdJutDx", "JaQtdJutDx", "JaQtdJutDx", "JaQtdJutDx", "JdJH", "JdJH", "JdJH", "JdJH", "JdJH", "JdJH", "K", "K", "K", "K", "K", "LxKDO", "Qwsy", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "S", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "UNmb", "WspOIEZNnh", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "XJomdtO", "d", "d", "d", "d", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "ffg", "gCHMDw", "gCHMDw", "gCHMDw", "gCHMDw", "kUFm", "kUFm", "kUFm", "kUFm", "kUFm", "kUFm", "kUFm", "o", "tCkjR", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "wLz", "yVQVYaGF", "APbChEA", "CDEdSwPYaa", "CmJUeKSpyd", "DJZyA", "DTMvEGTIC", "DwV", "ED", "Eprjo", "JaQtdJutDx", "JdJH", "JwwKmQU", "K", "LF", "Qwsy", "S", "UNmb", "X", "XJomdtO", "d", "ffg", "gCHMDw", "jzWKDjW", "k", "kUFm", "wLz"};
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<string> artists = {"tsUsoLbj 169", "KiSMAQrU 203", "iWybv 130", "oGCGDNxFSv 52", "whoxSNHky 12", "bAqbepJ 41", "nz 38", "nO 10", "lOHBTLoG 7", "Npx 16", "r 33", "xKZ 20", "Eu 18", "xpU 6", "SVZFb 1", "lQAcUFMAe 10", "qOKFXJVpkl 10", "qHAb 3", "o 4", "vxh 1", "kpqLdKGym 3", "A 5", "ltqyhJBWn 2", "bWEyeW 2", "ijpnGI 1", "KbTFV 1", "IbZZO 1", "LIXYduhzU 1"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "Eu", "KiSMAQrU", "Npx", "bAqbepJ", "bWEyeW", "iWybv", "kpqLdKGym", "lOHBTLoG", "lQAcUFMAe", "ltqyhJBWn", "nO", "nz", "o", "oGCGDNxFSv", "qHAb", "qOKFXJVpkl", "r", "tsUsoLbj", "whoxSNHky", "xKZ", "xpU", "A", "A", "A", "Eu", "Eu", "Eu", "Eu", "Eu", "Eu", "Eu", "Eu", "Eu", "Eu", "Eu", "Eu", "Eu", "Eu", "Eu", "Eu", "IbZZO", "KbTFV", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "KiSMAQrU", "LIXYduhzU", "Npx", "Npx", "Npx", "Npx", "Npx", "Npx", "Npx", "Npx", "Npx", "Npx", "Npx", "Npx", "Npx", "Npx", "SVZFb", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "bAqbepJ", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "iWybv", "ijpnGI", "kpqLdKGym", "lOHBTLoG", "lOHBTLoG", "lOHBTLoG", "lOHBTLoG", "lOHBTLoG", "lQAcUFMAe", "lQAcUFMAe", "lQAcUFMAe", "lQAcUFMAe", "lQAcUFMAe", "lQAcUFMAe", "lQAcUFMAe", "lQAcUFMAe", "nO", "nO", "nO", "nO", "nO", "nO", "nO", "nO", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "nz", "o", "o", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "oGCGDNxFSv", "qHAb", "qOKFXJVpkl", "qOKFXJVpkl", "qOKFXJVpkl", "qOKFXJVpkl", "qOKFXJVpkl", "qOKFXJVpkl", "qOKFXJVpkl", "qOKFXJVpkl", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "r", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "tsUsoLbj", "vxh", "whoxSNHky", "whoxSNHky", "whoxSNHky", "whoxSNHky", "whoxSNHky", "whoxSNHky", "whoxSNHky", "whoxSNHky", "whoxSNHky", "whoxSNHky", "xKZ", "xKZ", "xKZ", "xKZ", "xKZ", "xKZ", "xKZ", "xKZ", "xKZ", "xKZ", "xKZ", "xKZ", "xKZ", "xKZ", "xKZ", "xKZ", "xKZ", "xKZ", "xpU", "xpU", "xpU", "xpU", "A", "Eu", "KiSMAQrU", "Npx", "bAqbepJ", "bWEyeW", "iWybv", "kpqLdKGym", "lOHBTLoG", "lQAcUFMAe", "ltqyhJBWn", "nO", "nz", "o", "oGCGDNxFSv", "qHAb", "qOKFXJVpkl", "r", "tsUsoLbj", "whoxSNHky", "xKZ", "xpU"};
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<string> artists = {"K 158", "ueM 214", "JM 87", "iHUKnZDAJg 73", "XlWtmJR 45", "VVDPtfe 25", "A 44", "xe 25", "aVONo 12", "v 26", "YeEht 9", "QKWNU 16", "Onmzs 15", "kYJBBPu 12", "KMvwBfL 12", "rCNiTP 8", "kPhKngFWSW 1", "n 6", "HzcKIApdw 4", "YJoPsrF 3", "UnlUSju 2", "LulD 1", "pK 1", "JsXPpvLpS 1"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "HzcKIApdw", "JM", "K", "KMvwBfL", "Onmzs", "QKWNU", "UnlUSju", "VVDPtfe", "XlWtmJR", "YJoPsrF", "YeEht", "aVONo", "iHUKnZDAJg", "kYJBBPu", "n", "rCNiTP", "ueM", "v", "xe", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "HzcKIApdw", "HzcKIApdwsXPpvLpS", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "KMvwBfL", "KMvwBfL", "KMvwBfL", "KMvwBfL", "KMvwBfL", "KMvwBfL", "KMvwBfL", "KMvwBfL", "KMvwBfL", "KMvwBfL", "LulD", "Onmzs", "Onmzs", "Onmzs", "Onmzs", "Onmzs", "Onmzs", "Onmzs", "Onmzs", "Onmzs", "Onmzs", "Onmzs", "Onmzs", "Onmzs", "QKWNU", "QKWNU", "QKWNU", "QKWNU", "QKWNU", "QKWNU", "QKWNU", "QKWNU", "QKWNU", "QKWNU", "QKWNU", "QKWNU", "QKWNU", "QKWNU", "VVDPtfe", "VVDPtfe", "VVDPtfe", "VVDPtfe", "VVDPtfe", "VVDPtfe", "VVDPtfe", "VVDPtfe", "VVDPtfe", "VVDPtfe", "VVDPtfe", "VVDPtfe", "VVDPtfe", "VVDPtfe", "VVDPtfe", "VVDPtfe", "VVDPtfe", "VVDPtfe", "VVDPtfe", "VVDPtfe", "VVDPtfe", "VVDPtfe", "VVDPtfe", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "XlWtmJR", "YJoPsrF", "YeEht", "YeEht", "YeEht", "YeEht", "YeEht", "YeEht", "YeEht", "aVONo", "aVONo", "aVONo", "aVONo", "aVONo", "aVONo", "aVONo", "aVONo", "aVONo", "aVONo", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "iHUKnZDAJg", "kPhKngFWSW", "kYJBBPu", "kYJBBPu", "kYJBBPu", "kYJBBPu", "kYJBBPu", "kYJBBPu", "kYJBBPu", "kYJBBPu", "kYJBBPu", "kYJBBPu", "n", "n", "n", "n", "pK", "rCNiTP", "rCNiTP", "rCNiTP", "rCNiTP", "rCNiTP", "rCNiTP", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "ueM", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "v", "xe", "xe", "xe", "xe", "xe", "xe", "xe", "xe", "xe", "xe", "xe", "xe", "xe", "xe", "xe", "xe", "xe", "xe", "xe", "xe", "xe", "xe", "xe", "A", "HzcKIApdw", "JM", "K", "KMvwBfL", "Onmzs", "QKWNU", "UnlUSju", "VVDPtfe", "XlWtmJR", "YJoPsrF", "YeEht", "aVONo", "iHUKnZDAJg", "kYJBBPu", "n", "rCNiTP", "ueM", "v", "xe"};
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<string> artists = {"nDTvGKYGIg 172", "rEzNQGkIQT 68", "UQfaf 123", "tpcTHbY 118", "BbJtAXzsIm 90", "CO 23", "GVQQbZUH 33", "tltGKi 25", "Onhdk 48", "GnsmEYxl 28", "YxuNDcLE 17", "Gxsl 8", "j 6", "cFikDMj 10", "IaNHy 7", "hkHYkqm 6", "ajmSMKJUfc 3", "UqYEbI 4", "Puhh 4", "NAirtJKDG 1", "kEPlMFHW 2", "HjymOMw 1", "dUP 1", "gwYTZImaS 1", "AbMXRrww 1"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"BbJtAXzsIm", "CO", "GVQQbZUH", "GnsmEYxl", "Gxsl", "IaNHy", "Onhdk", "Puhh", "UQfaf", "UqYEbI", "YxuNDcLE", "ajmSMKJUfc", "cFikDMj", "hkHYkqm", "j", "kEPlMFHW", "nDTvGKYGIg", "rEzNQGkIQT", "tltGKi", "tpcTHbY", "AbMXRrww", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "BbJtAXzsIm", "CO", "CO", "CO", "CO", "CO", "CO", "CO", "CO", "CO", "CO", "CO", "CO", "CO", "CO", "CO", "CO", "CO", "CO", "CO", "CO", "CO", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GVQQbZUH", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "GnsmEYxl", "Gxsl", "Gxsl", "Gxsl", "Gxsl", "Gxsl", "Gxsl", "HjymOMw", "IaNHy", "IaNHy", "IaNHy", "IaNHy", "IaNHy", "NAirtJKDG", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Onhdk", "Puhh", "Puhh", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UQfaf", "UqYEbI", "UqYEbI", "YxuNDcLE", "YxuNDcLE", "YxuNDcLE", "YxuNDcLE", "YxuNDcLE", "YxuNDcLE", "YxuNDcLE", "YxuNDcLE", "YxuNDcLE", "YxuNDcLE", "YxuNDcLE", "YxuNDcLE", "YxuNDcLE", "YxuNDcLE", "YxuNDcLE", "ajmSMKJUfc", "cFikDMj", "cFikDMj", "cFikDMj", "cFikDMj", "cFikDMj", "cFikDMj", "cFikDMj", "cFikDMj", "dUP", "gwYTZImaS", "hkHYkqm", "hkHYkqm", "hkHYkqm", "hkHYkqm", "j", "j", "j", "j", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "nDTvGKYGIg", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "rEzNQGkIQT", "tltGKi", "tltGKi", "tltGKi", "tltGKi", "tltGKi", "tltGKi", "tltGKi", "tltGKi", "tltGKi", "tltGKi", "tltGKi", "tltGKi", "tltGKi", "tltGKi", "tltGKi", "tltGKi", "tltGKi", "tltGKi", "tltGKi", "tltGKi", "tltGKi", "tltGKi", "tltGKi", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "tpcTHbY", "BbJtAXzsIm", "CO", "GVQQbZUH", "GnsmEYxl", "Gxsl", "IaNHy", "Onhdk", "Puhh", "UQfaf", "UqYEbI", "YxuNDcLE", "ajmSMKJUfc", "cFikDMj", "hkHYkqm", "j", "kEPlMFHW", "nDTvGKYGIg", "rEzNQGkIQT", "tltGKi", "tpcTHbY"};
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<string> artists = {"ubWQ 96", "gkkciI 49", "vN 121", "qDX 46", "SycYPY 61", "RSKgUUq 33", "i 52", "licnJ 33", "uq 43", "eg 18", "ckcUv 9", "RvDMa 51", "xhhoLuBnq 49", "xZVdG 12", "IQxMZZeXUD 11", "tIU 28", "TYUgxM 9", "E 1", "jEeGZj 11", "oBAn 22", "fNqcZhQu 12", "AMuccPOHS 7", "bBBFL 1", "pYVffHlfBh 7", "NAzmgeKJv 5", "Km 3", "VrQsalGNa 1", "lZtRd 1", "LZQq 1", "pHporRKk 2", "T 1", "dXdENqouz 1", "Jfi 1", "Zseaaz 1", "KFS 1"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AMuccPOHS", "IQxMZZeXUD", "Km", "NAzmgeKJv", "RSKgUUq", "RvDMa", "SycYPY", "TYUgxM", "ckcUv", "eg", "fNqcZhQu", "gkkciI", "i", "jEeGZj", "licnJ", "oBAn", "pHporRKk", "pYVffHlfBh", "qDX", "tIU", "ubWQ", "uq", "vN", "xZVdG", "xhhoLuBnq", "AMuccPOHS", "AMuccPOHS", "AMuccPOHS", "AMuccPOHS", "AMuccPOHS", "E", "IQxMZZeXUD", "IQxMZZeXUD", "IQxMZZeXUD", "IQxMZZeXUD", "IQxMZZeXUD", "IQxMZZeXUD", "IQxMZZeXUD", "IQxMZZeXUD", "IQxMZZeXUD", "Jfi", "KFS", "Km", "LZQq", "NAzmgeKJv", "NAzmgeKJv", "NAzmgeKJv", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RSKgUUq", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "RvDMa", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "SycYPY", "T", "TYUgxM", "TYUgxM", "TYUgxM", "TYUgxM", "TYUgxM", "TYUgxM", "TYUgxM", "VrQsalGNa", "Zseaaz", "bBBFL", "ckcUv", "ckcUv", "ckcUv", "ckcUv", "ckcUv", "ckcUv", "ckcUv", "dXdENqouz", "eg", "eg", "eg", "eg", "eg", "eg", "eg", "eg", "eg", "eg", "eg", "eg", "eg", "eg", "eg", "eg", "fNqcZhQu", "fNqcZhQu", "fNqcZhQu", "fNqcZhQu", "fNqcZhQu", "fNqcZhQu", "fNqcZhQu", "fNqcZhQu", "fNqcZhQu", "fNqcZhQu", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "gkkciI", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "i", "jEeGZj", "jEeGZj", "jEeGZj", "jEeGZj", "jEeGZj", "jEeGZj", "jEeGZj", "jEeGZj", "jEeGZj", "lZtRd", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "licnJ", "oBAn", "oBAn", "oBAn", "oBAn", "oBAn", "oBAn", "oBAn", "oBAn", "oBAn", "oBAn", "oBAn", "oBAn", "oBAn", "oBAn", "oBAn", "oBAn", "oBAn", "oBAn", "oBAn", "oBAn", "pYVffHlfBh", "pYVffHlfBh", "pYVffHlfBh", "pYVffHlfBh", "pYVffHlfBh", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "qDX", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "tIU", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "ubWQ", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "uq", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "vN", "xZVdG", "xZVdG", "xZVdG", "xZVdG", "xZVdG", "xZVdG", "xZVdG", "xZVdG", "xZVdG", "xZVdG", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "xhhoLuBnq", "AMuccPOHS", "IQxMZZeXUD", "Km", "NAzmgeKJv", "RSKgUUq", "RvDMa", "SycYPY", "TYUgxM", "ckcUv", "eg", "fNqcZhQu", "gkkciI", "i", "jEeGZj", "licnJ", "oBAn", "pHporRKk", "pYVffHlfBh", "qDX", "tIU", "ubWQ", "uq", "vN", "xZVdG", "xhhoLuBnq"};
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<string> artists = {};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<string> artists = {"AAAAAAAAAA 800"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<string> artists = {"agBcD 12", "dBcD 12", "ascD 1", "adBD 2", "yaD 4", "rD 1", "erc 2", "gC 11", "aF 52", "H 32", "agsdfBcD 12", "BfhgcD 12", "asecD 1", "adsdBD 2", "afFD 4", "fgD 1", "shc 2", "gwC 11", "seF 52", "ghH 12", "navBcD 12", "msdBcD 12", "anzcD 1", "amxBD 2", "avnD 4", "mfD 1", "nxzxc 2", "mczC 11", "zxnF 52", "mzH 72", "axczhoBcD 12", "BzccpD 12", "acdxczoD 1", "paBD 2", "oaD 4", "fD 1", "pc 2", "popopC 11", "oF 52", "popH 42", "aopBpuicD 12", "BopicD 12", "auicD 1", "auiBD 2", "uiaD 4", "uiD 1", "uic 2", "uiC 11", "uiF 52", "uiH 32"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"BfhgcD", "BopicD", "BzccpD", "H", "aF", "adBD", "adsdBD", "afFD", "agBcD", "agsdfBcD", "amxBD", "aopBpuicD", "auiBD", "avnD", "axczhoBcD", "dBcD", "erc", "gC", "ghH", "gwC", "mczC", "msdBcD", "mzH", "navBcD", "nxzxc", "oF", "oaD", "paBD", "pc", "popH", "popopC", "seF", "shc", "uiC", "uiF", "uiH", "uiaD", "uic", "yaD", "zxnF", "BfhgcD", "BfhgcD", "BfhgcD", "BfhgcD", "BfhgcD", "BfhgcD", "BfhgcD", "BfhgcD", "BfhgcD", "BfhgcD", "BopicD", "BopicD", "BopicD", "BopicD", "BopicD", "BopicD", "BopicD", "BopicD", "BopicD", "BopicD", "BzccpD", "BzccpD", "BzccpD", "BzccpD", "BzccpD", "BzccpD", "BzccpD", "BzccpD", "BzccpD", "BzccpD", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "H", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "aF", "acdxczoD", "afFD", "afFD", "agBcD", "agBcD", "agBcD", "agBcD", "agBcD", "agBcD", "agBcD", "agBcD", "agBcD", "agBcD", "agsdfBcD", "agsdfBcD", "agsdfBcD", "agsdfBcD", "agsdfBcD", "agsdfBcD", "agsdfBcD", "agsdfBcD", "agsdfBcD", "agsdfBcD", "anzcD", "aopBpuicD", "aopBpuicD", "aopBpuicD", "aopBpuicD", "aopBpuicD", "aopBpuicD", "aopBpuicD", "aopBpuicD", "aopBpuicD", "aopBpuicD", "ascD", "asecD", "auicD", "avnD", "avnD", "axczhoBcD", "axczhoBcD", "axczhoBcD", "axczhoBcD", "axczhoBcD", "axczhoBcD", "axczhoBcD", "axczhoBcD", "axczhoBcD", "axczhoBcD", "dBcD", "dBcD", "dBcD", "dBcD", "dBcD", "dBcD", "dBcD", "dBcD", "dBcD", "dBcD", "fD", "fgD", "gC", "gC", "gC", "gC", "gC", "gC", "gC", "gC", "gC", "ghH", "ghH", "ghH", "ghH", "ghH", "ghH", "ghH", "ghH", "ghH", "ghH", "gwC", "gwC", "gwC", "gwC", "gwC", "gwC", "gwC", "gwC", "gwC", "mczC", "mczC", "mczC", "mczC", "mczC", "mczC", "mczC", "mczC", "mczC", "mfD", "msdBcD", "msdBcD", "msdBcD", "msdBcD", "msdBcD", "msdBcD", "msdBcD", "msdBcD", "msdBcD", "msdBcD", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "mzH", "navBcD", "navBcD", "navBcD", "navBcD", "navBcD", "navBcD", "navBcD", "navBcD", "navBcD", "navBcD", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oF", "oaD", "oaD", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popH", "popopC", "popopC", "popopC", "popopC", "popopC", "popopC", "popopC", "popopC", "popopC", "rD", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "seF", "uiC", "uiC", "uiC", "uiC", "uiC", "uiC", "uiC", "uiC", "uiC", "uiD", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiF", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiH", "uiaD", "uiaD", "yaD", "yaD", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "zxnF", "BfhgcD", "BopicD", "BzccpD", "H", "aF", "adBD", "adsdBD", "afFD", "agBcD", "agsdfBcD", "amxBD", "aopBpuicD", "auiBD", "avnD", "axczhoBcD", "dBcD", "erc", "gC", "ghH", "gwC", "mczC", "msdBcD", "mzH", "navBcD", "nxzxc", "oF", "oaD", "paBD", "pc", "popH", "popopC", "seF", "shc", "uiC", "uiF", "uiH", "uiaD", "uic", "yaD", "zxnF"};
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<string> artists = {"Radiohead 2", "Spiderbait 3", "LimpBizkit 4"};
    MusicCompilation* pObj = new MusicCompilation();
    clock_t start = clock();
    vector<string> result = pObj->makeCompilation(artists);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"LimpBizkit", "Radiohead", "Spiderbait", "LimpBizkit", "LimpBizkit", "Spiderbait", "LimpBizkit", "Radiohead", "Spiderbait"};
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=309982&rd=7226&pm=4625
********************************************************************************
#include <algorithm> 
#include <cstdio> 
#include <cstdlib> 
#include <cctype> 
#include <cmath> 
#include <iostream> 
#include <sstream> 
#include <string> 
#include <utility> 
#include <vector> 
using namespace std; 
#define VAR(a,b) typeof(b) a=(b) 
#define REP(i,n) for(int _n=n, i=0;i<_n;++i) 
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i) 
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i) 
#define FOREACH(it,c) for(VAR(it,(c).begin());it!=(c).end();++it) 
#define ALL(f,w) ({ bool _ok=true; f _ok=_ok && (w); _ok; }) 
#define EXISTS(f,w) (!ALL(f,!(w))) 
typedef long long LL; 
const int INF = 1000000000; 
typedef vector<int> VI; 
 
class MusicCompilation
        { 
        public: 
        vector <string> makeCompilation(vector <string> artists) 
            { 
        vector<pair<string,int> > tab;
        REP(i,artists.size()) {
          stringstream ww;
          ww << artists[i];
          int a1;
          string a2;
          ww >> a2;
          ww >> a1;
          tab.push_back(make_pair(a2,a1));
        }
        vector<string> wiecej;
        REP(i,tab.size()) {
          if (tab[i].second>1) {
            wiecej.push_back(tab[i].first);
            tab[i].second -= 2;
          }
        }
        vector<string> odp;
        sort(wiecej.begin(),wiecej.end());
        REP(i,wiecej.size()) {
          odp.push_back(wiecej[i]);
        }
        sort(tab.begin(),tab.end());
        REP(i,tab.size()) {
          REP(j,tab[i].second) {
            odp.push_back(tab[i].first);
          }
        }
        REP(i,wiecej.size()) {
          odp.push_back(wiecej[i]);
        }
        return odp;
      
 
            } 
        
 
        }; 
 
    
 
 
 
// Powered by FileEdit
// Powered by TZTester 1.01 [25-Feb-2003]
// Powered by CodeProcessor

********************************************************************************
*******************************************************************************/