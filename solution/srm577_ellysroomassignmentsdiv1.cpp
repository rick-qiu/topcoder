/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=12514
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class EllysRoomAssignmentsDiv1 {
public:
    double getAverage(vector<string> ratings);
};

double EllysRoomAssignmentsDiv1::getAverage(vector<string> ratings) {
    double ret;
    return ret;
}


int test0() {
    vector<string> ratings = {"1924 1242 1213 1217 2399 1777 2201 2301 1683 2045 ", "1396 2363 1560 2185 1496 2244 2117 2207 2098 1319 ", "2216 1223 1256 2359 2394 1572 2151 2191 2147 2253 ", "1633 2217 2211 1591 1310 1209 1430 1445 1988 2030 ", "1947 1202 1203"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 1821.3291005291007;
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<string> ratings = {"3380 3413 3254 3515 2885 2946 2790 3140"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 3165.375;
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<string> ratings = {"2367 1395 1639 1842 1426 2393 2348 1571 2077 12", "2", "2 1966 1495 13", "09 1251 3039 1566 1989 2083 1819 1875 ", "1579 2206 1503 1461 2262 2116 1429 2150 1834 2097 ", "2093 1518 1923 1796 1669 2342 1826 2374 1635 1683 ", "1656 2190 1632 1946 1207 1293 2029 2243 2252 1559 ", "2366 1590 1563 2319 1391 1255 1727 1565 1911 1679 ", "1282 2358 1682 2148 3555 2362 1208 2044 1949 1980 ", "1983 2215 2184 1545 1665 2146 1272 2110 1889 1829 ", "1808 2065 1987 1297 2216 1609 1318 1816 1444 20", "00 1404"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 1824.662456140351;
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<string> ratings = {"2869 3239 1609 2367 1836 1663 1697 2317 1475 2212 ", "2188 2073 1263 1391 1495 3010 1243 2198 1782 1564 ", "3594 1219 2037 1473 1624 1435 2159 2315 2056 3029 ", "1863 1297 2245 3206 3510 1728 1246 1230 1875 3511 ", "1241 2775 1255 2304 2013 1205 2070 2763 1518 2344 ", "1690 1398 2320 1912 2752 2155 1778 1644 2230 3026 ", "1817 1401 1962 1470 1387 2339 3443 1510 2094 2374 ", "1273 1664 2853 1907 2380 3265 2786 1298 1983 1899 ", "1507 3252 2176 1452 1261 1981 1570 1207 2107 3550 ", "1282 3331 1254 2276 2096 1716 1966 3389 1766 2068 ", "3006 1802 1698 1555 1971 1509 1531 1556 2044 2358 ", "2327 2241 3182 2152 1514 2219 1559 1895 1992 2046 ", "1200 1915 1930 2296 1859 1501 1960 1683 1222 1288 ", "1808 1360 2177 2711 1286 1562 2078 1801 1834 2808 ", "1948 1674 1305 3031 2160 2252 1613 1621 2345 1850 ", "2169 2106 1918 1309 1317 1417 1670 2733 1946 1844 ", "1774 1956 1355 1336 1300 1349 2283 1247 3258 3415 ", "2795 1978 1990 1394 2347 1337 1340 1503 1722 3528 ", "2139 2968 2257 1312 2148 2166 1460 2216 1632 1325 ", "1404 1878 2197 1524 2030 1438 1973 1444 2191 1606 ", "3390 1866 1688 1779 3027 2254 1582 2123 3105 1568 ", "2036 1579 2995 1591 1933 1382 1596 2364 3310 1856 ", "3427 1816 1344 1304 3269 1906 1646 1480 2040 1725 ", "2766 1496 1265 2050 1842 2341 1367 1679 1202 1546 ", "2300 1936 2224 1846 2987 2248 1657 2907 1958 1853 ", "3326 1943 3336 2801 2839 2357 1819 2266 1727 2200 ", "2385 1904 1323 1710 1796 1594 2262 2798 1952 2292 ", "2204 1916 3572 1477 1280 1961 1270 1250 2000 2089 ", "3584 1612 1873 1451 2004 3174 1251 3011 3474 2386 ", "1330 1758 1271 3540 1497 1284 1839 2383 1489 2326 ", "2822 2124 2307 1313 3263 1804 2001 1338 2161 1303 ", "2016 1488 2015 1558 1522 2267 1567 1676 2221 1201 ", "1576 1711 1887 2228 1539 1227 2392 2109 1616 2183 ", "2362 2784 2057 1411 1318 2097 1208 1672 1379 1339 ", "1545 1461 3370 1369 1763 1425 1322 1897 1395 1209 ", "1665 2373 1645 1447 2393 1426 1293 1508 2049 2378 ", "2234 1879 1949 1266 1849 3164 1260 2181 1611 1935 ", "1348 2021 3332 1820 1316 2261 3077 3328 1892 1324 ", "2035 3251 1893 1910 1474 1557 2923 2024 2196 1571 ", "1980 2072 1924 2017 1770 2240 1659 3195 1486 3122 ", "1341 1521 1890 1419 3229 1977 2366 1267 3458 2210 ", "2157 1523 1399 2146 1228 1415 1256 1642 1687 2184 ", "1865 3089 3581 1429 2313 1352 1272 2285 1390 2209 ", "1785 1449 1295 1410 1239 1416 2354 1281 1840 2265 ", "2330 3295 1353 1423 1204 2150 2116 3588 1908 1976 ", "2233 1923 1635 1825 1469 2251 1792 1249 2125 2100 ", "1833 2281 2142 2093 1920 2144 1565 1590 2826 3045 ", "3475 1911 1695 2067 1634 2319 1376 2348 1529 1682"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 1985.7041666666669;
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<string> ratings = {"1366 2766 1694 1462 2118 1932 2611 2616 3632 2937 ", "1723 3636 2878 3699 1593 1736 3461 3607 3772 1704"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2547.15;
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<string> ratings = {"3838 3682 3831 3611 1635 1537 1404 1495 2498 2892 ", "1573 1734 2941 3182 3286 1320 3309 2864 1262 3019"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2545.65;
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<string> ratings = {"1204 2570 2963 2304 2628 3211 2539 3256 2808 2414 ", "2900 1765 3003 2898 2381 1603 1780 2894 2989 1225 ", "2823 2584 1483 3027 3491 1766 1476 2049 2718 2256 ", "1673 2874 3725 2972 2129 1885 3671 3573 2775 1651 ", "2764 2317 3176 2184 3724 2973 3914 2243 3539 2645 ", "1308 2137 2269 2113 2999 3379 2907 3418 2160 2227 ", "3407 2038 3222 3370 3324 2857 2091 3436 3134 2652 ", "2929 3501 2556 3739 1983 3135 3916 1244 2029 1636 ", "2214 3757 2956 2621 3390 1372 1393 2197 1474 3497 ", "1785 2173 2707 3685 3313 2835 2682 2363 2275 3437 ", "2439 2700 2182 2465 2150 1988 3288 1700 1428 1503 ", "2213 3736 3515 1642 2397 2086 3746 3183 3495 3715 ", "1467 3737 3377 2473 2277 2114 1720 1996 1306 2841 ", "3876 1706 1844 1257 3709 3543 3304 1883 3197 2881 ", "3419 3503 1277 1215 3818 1562 1827 1703 2914 1998 ", "2601 3832 2354 3846 1789 2216 3751 3661 2179 3764 ", "1381 1566 2676 2805 1786 3592 2338 2249 2005 2947 ", "2190 2856 2421 3097 3268 1822 1824 3112 1662 3143 ", "1541 3452 2056 1931 2988 1913 3142 3626 2970 1932 ", "1989 1963 2430 2772 1410 3895 1484 2610 2616 3040 ", "1823 2831 2364 2124 2710 3210 2383 3835 1949 1390 ", "3405 3672 3738"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2546.613636363635;
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<string> ratings = {"3913 2240 1342 3659 1539 1857 1597 1987 2936 3256 ", "2356 3360 1924 3190 2348 2500 2195 2797 1230 3531 ", "3910 2045 3357 1946 3177 2416 2824 1361 1235 1913 ", "2300 2434 1804 3046 3562 3322 1886 1309 2360 3372 ", "3885 3278 2310 3295 2838 2605 1979 2969 2497 3246 ", "3346 1957 3157 2233 2130 1907 1446 2639 3459 3528 ", "2749 3377 1325 2940 2463 3224 2487 2214 2351 3613 ", "3512 3697 2691 1247 2339 1219 2491 2078 3703 2410 ", "1790 1712 2606 3646 2244 1576 2424 1878 2154 3747 ", "3777 2177 3669 3533 1998 2472 1279 3309 1214 1398 ", "3776 2506 2793 3129 2550 2527 3405 2773 2384 2850 ", "2963 3408 2756 1365 1619 1780 1888 3820 3077 3593 ", "2253 1635 3379 2502 1926 1991 1980 2957 2236 2718 ", "3196 2660 2665 2541 2961 1628 3740 3832 2558 2829 ", "2262 3681 2687 3901 2610 1457 2178 1859 2790 2802 ", "1984 3334 2123 3710 1615 2047 2713 1736 2061 3905 ", "1427 2998 3816 3097 3445 2678 2848 2448 2338 2273 ", "3425 3815 2176 1872 3564 3045 2689 2435 1765 1778 ", "1796 3100 2551 1671 1840 2425 1258 1521 1397 2394 ", "2259 1203 2287 2587 1958 1202 2063 3167 2516 3382 ", "3693 3008 2764 3790 3273 1452 1914 1582 1312 3284 ", "3674 2220 3803 3272 2136 3656 2869 2020 3581 3436 ", "3857 1450 3061 2528 1474 1205 2991 2835 1432 3374 ", "2286 3089 1962 1377 3524 3516 3782 3676 1610 2647 ", "2124 1773 1300 3182 1546 2809 2745 2111 2614 3253 ", "2844 2226 1392 2192 2001 3708 1833 3165 2116 1314 ", "1783 1256 2740 3448 3709 3758"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2564.733082706767;
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<string> ratings = {"1298 2272 2618 1344 3020 3212 3419 1754 3571 2835 ", "3049 2893 1970 3006 3244 3451 3273 2039 3826 2199 ", "3159"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2670.4545454545455;
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<string> ratings = {"3600 1757 1357 1238 3573 2764 3714 2695 2987 2163 ", "1344 3493 2927 3163 1921 1310 1323 1330 2456 2065 ", "3102"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2391.568181818182;
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<string> ratings = {"1201 1202 1203 1204 1205 1206 1207 1208"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 1204.5;
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<string> ratings = {"1207 1205 1208 1203 1201 1204 1202 1206"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 1204.5;
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<string> ratings = {"2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 ", "2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 ", "2021 2022 2023 2024 2025 2026 2027 2028 2029 2030 ", "2031 2032 2033 2034 2035 2036 2037 2038 2039 2040 ", "2041 2042 2043 2044 2045 2046 2047 2048 2049 2050 ", "2051 2052 2053 2054 2055 2056 2057 2058 2059 2060 ", "2061 2062 2063 2064 2065 2066 2067 2068 2069 2070 ", "2071 2072 2073 2074 2075 2076 2077 2078 2079 2080 ", "2081 2082 2083 2084 2085 2086 2087 2088 2089 2090 ", "2091 2092 2093 2094 2095 2096 2097 2098 2099 2100 ", "2101 2102 2103 2104 2105 2106 2107 2108 2109 2110 ", "2111 2112 2113 2114 2115 2116 2117 2118 2119 2120 ", "2121 2122 2123 2124 2125 2126 2127 2128 2129 2130 ", "2131 2132 2133 2134 2135 2136 2137 2138 2139 2140 ", "2141 2142 2143 2144 2145 2146 2147 2148 2149 2150 ", "2151 2152 2153 2154 2155 2156 2157 2158 2159 2160 ", "2161 2162 2163 2164 2165 2166 2167 2168 2169 2170 ", "2171 2172 2173 2174 2175 2176 2177 2178 2179 2180 ", "2181 2182 2183 2184 2185 2186 2187 2188 2189 2190 ", "2191 2192 2193 2194 2195 2196 2197 2198 2199 2200 ", "2201 2202 2203 2204 2205 2206 2207 2208 2209 2210 ", "2211 2212 2213 2214 2215 2216 2217 2218 2219 2220 ", "2221 2222 2223 2224 2225 2226 2227 2228 2229 2230 ", "2231 2232 2233 2234 2235 2236 2237 2238 2239 2240 ", "2241 2242 2243 2244 2245 2246 2247 2248 2249 2250 ", "2251 2252 2253 2254 2255 2256 2257 2258 2259 2260 ", "2261 2262 2263 2264 2265 2266 2267 2268 2269 2270 ", "2271 2272 2273 2274 2275 2276 2277 2278 2279 2280 ", "2281 2282 2283 2284 2285 2286 2287 2288 2289 2290 ", "2291 2292 2293 2294 2295 2296 2297 2298 2299 2300 ", "2301 2302 2303 2304 2305 2306 2307 2308 2309 2310 ", "2311 2312 2313 2314 2315 2316 2317 2318 2319 2320 ", "2321 2322 2323 2324 2325 2326 2327 2328 2329 2330 ", "2331 2332 2333 2334 2335 2336 2337 2338 2339 2340 ", "2341 2342 2343 2344 2345 2346 2347 2348 2349 2350 ", "2351 2352 2353 2354 2355 2356 2357 2358 2359 2360 ", "2361 2362 2363 2364 2365 2366 2367 2368 2369 2370 ", "2371 2372 2373 2374 2375 2376 2377 2378 2379 2380 ", "2381 2382 2383 2384 2385 2386 2387 2388 2389 2390 ", "2391 2392 2393 2394 2395 2396 2397 2398 2399 2400 ", "2401 2402 2403 2404 2405 2406 2407 2408 2409 2410 ", "2411 2412 2413 2414 2415 2416 2417 2418 2419 2420 ", "2421 2422 2423 2424 2425 2426 2427 2428 2429 2430 ", "2431 2432 2433 2434 2435 2436 2437 2438 2439 2440 ", "2441 2442 2443 2444 2445 2446 2447 2448 2449 2450 ", "2451 2452 2453 2454 2455 2456 2457 2458 2459 2460 ", "2461 2462 2463 2464 2465 2466 2467 2468 2469 2470 ", "2471 2472 2473 2474 2475 2476 2477 2478 2479 2480 ", "2481 2482 2483 2484 2485 2486 2487 2488 2489 2490 ", "2491 2492 2493 2494 2495 2496 2497 2498 2499 2500"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2249.9;
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<string> ratings = {"2217 2042 2108 2360 2047 2442 2297 2492 2010 2305 ", "2309 2160 2069 2146 2028 2088 2155 2187 2372 2175 ", "2214 2474 2350 2144 2379 2098 2494 2061 2487 2364 ", "2446 2296 2410 2245 2133 2030 2101 2466 2316 2403 ", "2402 2376 2007 2105 2141 2020 2463 2251 2265 2371 ", "2329 2246 2358 2268 2327 2441 2397 2471 2004 2439 ", "2311 2019 2191 2426 2012 2285 2346 2308 2384 2493 ", "2495 2393 2247 2071 2079 2015 2447 2300 2082 2262 ", "2153 2275 2014 2204 2398 2171 2454 2189 2355 2418 ", "2480 2212 2405 2128 2050 2040 2303 2408 2326 2198 ", "2473 2058 2021 2321 2024 2465 2216 2183 2338 2264 ", "2243 2476 2005 2310 2407 2095 2038 2274 2404 2147 ", "2453 2136 2197 2486 2422 2016 2213 2421 2210 2096 ", "2003 2437 2036 2328 2451 2031 2375 2284 2137 2432 ", "2195 2200 2387 2078 2256 2115 2306 2378 2351 2342 ", "2086 2085 2196 2352 2081 2333 2039 2112 2417 2261 ", "2178 2249 2190 2443 2412 2167 2138 2132 2457 2331 ", "2431 2025 2129 2320 2094 2415 2110 2157 2051 2489 ", "2121 2460 2269 2325 2380 2060 2485 2414 2248 2142 ", "2395 2356 2266 2278 2420 2117 2064 2176 2490 2381 ", "2168 2479 2252 2001 2283 2304 2233 2348 2193 2143 ", "2023 2029 2173 2152 2066 2062 2429 2390 2026 2483 ", "2458 2448 2388 2114 2222 2018 2467 2027 2302 2291 ", "2318 2428 2053 2045 2049 2444 2076 2048 2419 2496 ", "2468 2180 2361 2478 2455 2232 2063 2271 2481 2150 ", "2435 2290 2188 2220 2203 2340 2270 2223 2399 2084 ", "2369 2074 2363 2099 2389 2383 2345 2279 2260 2139 ", "2396 2109 2307 2162 2250 2151 2192 2394 2491 2386 ", "2344 2201 2017 2077 2337 2464 2089 2259 2258 2008 ", "2499 2182 2313 2199 2221 2484 2208 2357 2450 2349 ", "2057 2449 2207 2130 2170 2413 2225 2113 2034 2288 ", "2224 2322 2254 2267 2438 2148 2427 2125 2373 2298 ", "2092 2475 2314 2087 2242 2073 2043 2272 2103 2205 ", "2273 2286 2416 2456 2253 2131 2430 2164 2336 2343 ", "2032 2093 2406 2126 2065 2377 2240 2070 2083 2104 ", "2235 2181 2400 2238 2353 2140 2234 2317 2330 2154 ", "2255 2230 2091 2149 2462 2158 2401 2124 2239 2241 ", "2118 2000 2470 2332 2459 2127 2411 2374 2075 2090 ", "2339 2100 2319 2122 2211 2229 2472 2299 2347 2385 ", "2011 2263 2097 2362 2215 2409 2323 2477 2433 2227 ", "2469 2424 2366 2161 2123 2068 2497 2440 2391 2013 ", "2033 2052 2293 2423 2186 2237 2179 2231 2287 2169 ", "2054 2295 2119 2228 2041 2365 2236 2067 2174 2102 ", "2315 2165 2341 2111 2219 2392 2166 2324 2244 2194 ", "2277 2206 2226 2281 2218 2135 2482 2425 2006 2367 ", "2282 2382 2046 2184 2080 2354 2156 2434 2257 2177 ", "2145 2202 2072 2436 2280 2370 2335 2368 2334 2452 ", "2185 2106 2292 2134 2301 2289 2498 2107 2022 2044 ", "2209 2035 2055 2312 2445 2120 2002 2037 2276 2461 ", "2059 2159 2294 2056 2163 2488 2009 2359 2172 2116"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2249.75;
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<string> ratings = {"1587 2433 1831 3492 3540 2206 3223 3215 1703 2163 ", "1949 2533 2945 2104 2786 1533 3759 1420 1283 3087 ", "1560 1627 2597 2521 2109 1500 1295 1775 1835 1216 ", "3266 1678 2928 3392 3476 2284 3437 3084 2506 3346 ", "2306 3899 1923 2316 1555 1255 1537 2290 3555 3672 ", "3853 3827 3898 1360 1417 3862 2936 1356 2325 2650 ", "3893 3117 3410 2479 2692 3130 2426 3141 1738 1922 ", "1508 1808 1517 2732 2539 2941 3386 1861 3913 3644 ", "2897 1206 1674 3690 2029 2651 2514 2086 3807 3762 ", "3450 2619 1736 2114 1388 2518 3128 1516 2705 1754 ", "2600 1935 3713 3252 1542 1311 3565 2364 1665 2353 ", "2617 1969 3047 3116 3566 2930 1218 2761 2440 1817 ", "3523 1264 1408 3560 1777 2754 3695 2701 2075 2508 ", "2549 2998 1851 1265 3466 1684 3100 2117 2324 1330 ", "2081 2972 2925 3136 1643 3398 1657 1323 3611 2282 ", "2923 2814 2907 2917 3794 1299 2337 3575 1941 1493 ", "2661 2277 2815 2643 1435 3671 1476 3255 3420 1982 ", "2498 1943 1810 3012 1221 3022 1768 3425 3417 3477 ", "1989 3478 1895 1228 1281 3839 3654 1481 1705 1675 ", "2781 3808 3458 1490 2116 2162 2848 2864 2239 3133 ", "1441 2983 2512 1730 3051 2827 2395 3866 1553 1527 ", "2812 1804 2646 3375 3175 3338 3365 2197 2832 2888 ", "1355 2019 2471 2476 2904 3564 1795 3210 2962 2699 ", "1985 3675 3597 1572 1902 2724 2520 1854 2279 2629 ", "2899 2096 3497 2370 3539 3610 3528 3168 1849 3444 ", "3591 3635 3463 3171 1592 2363 1548 3452 3576 3059 ", "3490 3320 3781 3891 2441 2451 1347 2133 2641 1308 ", "3132 1790 3700 1316 3177 2657 3784 1993 1912 3719 ", "2359 1505 1819 3691 2952 3036 1919 3484 3313 3053 ", "2872 2115 3511 3193 1357 2092 3309 1549 1800 3226 ", "2372 2670 2714 1471 2014 2018 3562 1254 2365 1457 ", "1284 2951 3274 3377 2194 3567 2572 1930 2902 3385 ", "2838 2667 1784 1372 1491 3500 3668 2250 2340 1215 ", "1909 2862 3228 2823 3809 2405 3742 2745 3621 3745 ", "3428 2264 3443 3836 3333 3018 1483 1871 2220 2321 ", "2624 2968 1276 1550 2865 1626 2379 3224 3632 3789 ", "2091 2213 2388 2139 1830 2035 2876 1348 3121 2924 ", "2890 3307 3214 2609 2176 2638 3079 2428 3105 2914 ", "2030 3282 3499 2269 2054 2151 2522 2630 2152 2523 ", "2938 1712 2979 3857 2934 1888 2882 2674 2849 3761 ", "1911 2828 2024 2889 2461 3147 2156 2817 2052 2249 ", "2891 1963 1752 2063 1821 3662 3432 2251 2208 3216 ", "2046 3669 2140 1967 2430 1434 2271 1219 2774 3264 ", "1952 2747 3268 2254 2112 1246 3845 3038 2204 2746 ", "2166 3326 3817 3347 3275 2241 1367 3849 3590 3612 ", "1633 1378 3470 2323 2942 1797 3350 1859 3285 3123 ", "1401 3068 3138 1706 1472 1511 2432 1659 1327 1860 ", "3915 2686 2454 3746 2300 3578 3473 2967 3516 2064 ", "1236 3744"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2570.50992;
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<string> ratings = {"2805 1896 2802 3306 2579 3705 1488 2621 3209 3254 ", "2940 2883 2037 3581 3523 2711 2212 1384 2262 3479 ", "2825 2469 1820 3417 2986 2206 3542 2905 3434 2964 ", "2524 2791 2176 2350 2061 1874 1808 1620 3451 2826 ", "2025 1406 3342 2022 3845 2230 3904 2471 3572 3835 ", "3616 1736 1292 3792 1932 3337 1554 1463 2479 2592 ", "3632 2393 3765 3252 2049 1794 2028 3055 3882 3615 ", "2158 2227 1553 1332 2040 2891 1496 2516 3469 1950 ", "3014 2723 3475 1748 3171 2004 1669 2014 1757 3023 ", "2640 2612 2200 2390 3596 3287 2039 3151 3733 2684 ", "2874 1545 1928 2806 3359 1801 3853 3746 1285 1542 ", "3063 3905 1227 2855 1329 1297 3155 2752 3363 1472 ", "3723 2111 2730 2762 2622 2012 3007 3114 2059 3181 ", "3148 1584 3461 3645 2074 2504 3052 2235 2118 2876 ", "1897 2564 3431 1520 3175 3544 3248 2368 2745 3453 ", "3065 3485 3432 1382 2576 3133 1739 2307 2682 3693 ", "1685 2535 2792 3749 2706 3707 1731 2772 2313 1725 ", "3866 2220 1813 3883 2091 3296 3339 2329 1784 1479 ", "3860 3400 3010 2699 2604 3027 2143 1975 1722 1746 ", "1282 2574 1903 3368 3627 1607 2506 1228 2099 2952 ", "2421 2923 3703 2969 3140 1370 3689 3111 2414 1806 ", "1600 2239 1719 2519 3022 2404 3791 2000 1425 2112 ", "2847 2095 1263 2424 2838 3391 1822 1733 3682 1423 ", "3047 2653 3297 3788 2192 3642 3468 1304 1498 2303 ", "1972 2134 2080 3726 2423 1460 3347 2851 2355 3329 ", "1201 2501 3797 2837 3310 3783 3182 2432 3675 2597 ", "1657 3710 1980 3018 2384 1530 2933 3351 3163 2947 ", "1870 1269 3604 3721 1362 3011 3119 3877 2266 3373 ", "2520 3855 1307 2062 1396 2299 2236 2171 2580 3135 ", "2383 2790 2678 3086 3463"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2614.765263157895;
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<string> ratings = {"1241 3200 2239 2608 1730 1485 1376 2040 2009 3362 ", "2652 1563 1658 3804"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2211.9285714285716;
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<string> ratings = {"3433 3540 2133 3699 2114 2629 3712 2456 1977 3016 ", "1389 2693 2982 1571 1576 3176 2840 3692 2772 1483 ", "1361 2283 3102 2182 1401 2623 3793 2613 1746 3457 ", "1283 2405 3788 2750 2520 1431 3023 3004 3232 1668 ", "3807 2519 1391 3101 1420 2592 3536 3018 1443 2828 ", "2294 3881 2647 2883 2930 3914 3637 3786 3810 3368 ", "1923 2201 3047 2023 1936 3147 1941 2874 1227 3067 ", "1954 2663 2330 1214"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2606.9316520467837;
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<string> ratings = {"1404 3709 2193 1578 1658 1299 2474 1309 3743 1508 ", "1701 3822 2003 1821 2819 2316 2056 2758 2424 2203 ", "2477 1657 2513 2613 3443 3744 1406 3423 3351 1582 ", "2368 3213 3513 2354 1805 3458 3364 3137 1660 3677 ", "3469 1504 3782 3027 2417 3583 3288 2565 1317 3190 ", "3477 2214 3116 2782 1691 2083 2130 3263 3172 2878 ", "2455 3710 2715 2719 3575 1932 1318 3765 2045 1876 ", "1889 1615 2456 2067 2767 2926 2175 1264 1763 3026 ", "2223 1626 1314 2229 1857 1655 3505 3097 2360 3391 ", "3811 3340 1532 1463 2583 1558 1724 3828 3577 3858 ", "3348 3823 1224 3595 2863 1669 2979 3059 2556 3439 ", "2772 2261 3169 1576 2217 3238 3569 3420 2711 2874 ", "1310 3810 1483 3274 2200 3441 1607 2909 3003 2717 ", "1687 3325 1231 2075 2670 3871 2433 1879 3685 2437 ", "1336 2660 2813 2861 3267 1855 1330 3411 1844 2049 ", "1786 1950 1785 3298 3206 2872 2499 2090 3231 3883 ", "2735 3347 3806 2851 2206 2274 1514 2843 3036 3239 ", "3124 2811 1368 1450 2838 1860 2589 1710 2171 3730 ", "3514 2106 3426 1966 2674 2391 3102 3322 2736 3507 ", "2605 2714 1492 2082 1594 1930 3619 3500 2518 1374 ", "1535 1586 2064 2195 3555 2153 2914 3558 3135 3041 ", "2921 2619 2449 1603 2390 3358 2900 3829 3480 1550 ", "2176 2690 2315 2155 3335 2796 3629 1548 1412 1904 ", "2783"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2574.4375;
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<string> ratings = {"2101 3296 3275 1793 3327 3823 2757 2123 2690 1432 ", "3428 2117 1601 1800 1674 1958 1950 2302 2455 3368 ", "1279 2410 2077 2180 2583 3606 1700 3631 2131 1569 ", "3887 1402 1256 1899 2781 1233 1816 1394 2823 1647 ", "3330 2664 3847 3537 1719 3114 3074 1200 3796 2937 ", "3867 1808 2332 2018 2841 1450 2668 2649 1615 1623 ", "1976 2361 2014 1331 2681 3458 2502 2932 3281 2439 ", "3820 2085 3636 2797 2285 3331 2864 3557 1893 2596 ", "1583 2047 3641 1306 1342 1807 2431 1334 1491 1759 ", "2772 2022 1535 3499 1378 2925 3406 1970 1523 2414 ", "1919 2468 2083 1575 2591 2147 1916 2411 2248 2311 ", "2537 2503 1262 1988 1237 3710 1576 1814 1463 3450 ", "3874 1406 3388 2033 2822 2148 2676 3214 1436 3309 ", "3561 3162 1459 1910 3437 3323 3111 3064 3666 3002 ", "2911 2190 2186 2358 2028 1593 2955 3235 2808 2912 ", "1692 1348 2853 3304 3615 2683 2755 3455 3575 3834 ", "2629 3374 3129 2027 2487 3836 2656 2329 3357 3598 ", "1966 2289 1685 1584 2804 3768 1587 1741 1311 2731 ", "1743 1810 2894 2391 2985 2007 1767 3356 2726 3590 ", "2341 1317 1304 1424 3081 2891 3220 2236 3509 2764 ", "2339 2198 1275 3173 3177 1384 1640 3463 2349 1974 ", "2378 2671 3332 3801 3364 2542 2566 3720 3508 2365 ", "2793 2325 1413 1417 1363 2337 1774 3116 3735 1617 ", "2266 1856 2509 3122 3270 1933 3918 3510 2056 2134 ", "3880 3554 2174 3662 3120 3095 1938 3165 3359 2491 ", "2412 1723 2067 2334 2232 1703 3671 2614 2094 1675 ", "2942 3023 1405 3146 3680 1641 1449 1835 1578 3821 ", "2927 2427 3490 1718 3385 3132 3150 2536 3589 2530 ", "3560 1627 1883 2124 2142 2633 2256 1777 2831 1509 ", "2547 3733 3291 3901 1364 1736 1599 1735 3234 2922 ", "2170 3622 1853 3865 3788 1292 1368 3797 1859 2183 ", "2882 2039 3497 1208 3562 3166 2192 3240 3528 1419 ", "1879 3774 1425 3322 1515 2245 3902 3469 1632 2899 ", "1253 3032 3593 3635 2458 2625 2674 3803 3144 3782 ", "3225 3108 2150 2284 1739 2230 1996 3643 2704 3744 ", "3644 1347 3703 2247 1813 3227 2778 2166 2836 1940 ", "3638 2213 1865 3077 3514 3921 1941 1332 2972 3460 ", "3814 3625 3761 1259 3604 2765 2398 3538 1303 1281 ", "1702 2753 2433 1261 3462 2666 2807 1573 1967 2724 ", "2062 1746 2535 2143 2103 3920 1544 3484 2392 1343 ", "1939 3548 1258 2149 1626 1467 3360 3089 3817 1894 ", "3486"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2534.0129072681702;
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<string> ratings = {"3801 3837 3696 3823 1869 3866 1452 2027 3422 3575 ", "1926 2554 1459 2101 2625 2878 3541 3788 2977 1429 ", "1940 3200 2749 3614 3261 2681 1571 3918 2857 1967 ", "2926 1780 2787 3297 3091 2440 3201 1595 1782 2943 ", "3155 3876 1395 1708 3219 2374 2720 2377 1492 3204 ", "2424 2839 1392 2368 2479 2873 2970 2168 2195 2529 ", "3694 1952 2827 1676 2060 1414 3900 2772 2616 1992 ", "2291 3254 3113 3821 3038 3191 1743 2389 2729 2638 ", "3370 3576 3207 3734 1946 1570 3786 1693 1716 2920 ", "3689 1638"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2674.2024561403505;
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<string> ratings = {"3300 2005 3662 2150 3708 1460 3335 1873 1771 3771 ", "1210 1687 2859 3152 2441 2869 1921 2790 2765 3665 ", "1856 2409 3352 3770 2605 2962 1409 1294 3712 3169 ", "2031 2872 1731 3871 1931 2824 3512 2437 3679 3378 ", "2983 3044 1821 1970 1920 1507 1944 2454 1327 3559 ", "1681 3045 2601 1708 3000 1398 3415 3824 3457 1705 ", "3350 1570 2735 2610 2329 2566 2793 2781 3122 2211 ", "1744 3064 1890 3188 3215 1412 1691 3223 1990 1630 ", "2731 1430 2758 3513 3370 2436 2517 2549 2982 1776 ", "3522 1281 3263 1314 3703 3767 3241 2796 2961 1521 ", "2212 3677 2112 1580 1272 2634 3881 2199 2469 2867 ", "1919 1389 1934 3092 2764 1526 3311 2524 3750 2942 ", "1207 1276 1714 2364 3027 3862 3085 2193 1270 3557 ", "3052 3852 1693 1538 2402 3725 3804 2327 3720 2004 ", "3481 2153 1436 1661 3072 3252 1918 3851 2937 3381 ", "1685 2694 3572 3692 1822 2191 1820 3171 2655 3126 ", "3776 3652 1360 1296 3495 3380 3788 2936 1749 2357 ", "2722 1590 3151 2891 1299 3637 3625 2557 2055 1556 ", "1783 1394 2238 3180 1420 3250 2318 2565 3412 1529 ", "2636 3353 2670 1584 2692 2435 2929 2101 2152 3521 ", "3504 3452 2834 2913 3847 2883 3778 2398 1905 2976 ", "2365 1600 2769 3193 1916 3810 3232 2342 3580 2286 ", "1236 2786 3121 3321 1422 2354 3691 2628 2943 2107 ", "3134 3672 2888 1397 3663 3081 3010 1401 2579 3615 ", "1497 2742 1240 1907 2893 3307 3096 1377 1608 3501 ", "3173 1384 2051 2617 3732 3875 3655 1726 2431 2739 ", "1456 1319 3322 2998 3814 3290 1495 1611 3490 1551 ", "3752 2474 3438 3595 1958 2331 1234 2723 2048 1243 ", "2927 2647 2491 2494 2138 3789 1910 2453 1548 2665 ", "2536 3416 2646 2944 2985 3260 3329 3267 2691 1534 ", "2633 3587 1674 2583 1459 2792"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2598.75625;
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<string> ratings = {"3255 1883 1985 1969 2830 2051 3114 2205 2176 2776 ", "1259 2101 1450 3739 3798 2063 3756 2319 3454 2485 ", "1918 1945 2950 3676 2601 2097 1887 2116 3228 3813 ", "2655 3321 2486 3439 1549 1256 3675 3774 1704 2303 ", "1758 1523 3178 3630 3231 1346 3578 1369 1745 3162 ", "2289 2415 3013 2328 3593 2669 3736 1828 1871 2220 ", "1329 2034 1865 3645 2730 1246 1919 3051 1431 2401 ", "1698 2574 1442 2150 3638 1925 2472 2168 2209 1996 ", "2774 3342 2683 1566 2568 2484 1332 1449 1469 1739 ", "2949 1908 2430 1971 2848 2065 1227 2693 1579 3239 ", "2547 2946 1775 1781 1601 1933 2813 3143 2501 3797 ", "1383 3833 2625 3486 1351 3066 1611 3610 3249 3230 ", "2244 1734 2234 1261 1525 1507 3546 1518 1915 1951 ", "3589 2212 2070 2692 2282 1560 1702 1241 1511 2008 ", "2665 2171 1822 3149 1333 2131 2295 2425 2506 2163 ", "3842 2279 1430 1548 2004 2999 1852 2716 2751 2973 ", "2613 1961 3771 3183 2480 2750 1873 3260 1926 1727 ", "1682 3372 3265 1596 2605 2567 1898 2127 1444 1674 ", "1968 3303 3381 2580 2741 1705 3015 3188 3516 2572 ", "1847 1874 2793 3273 3206 3707 2844"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2421.0423684210527;
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<string> ratings = {"1421 2905 3580 1337 1571 3237 2137 3405 3621 1893 ", "2274 2876 2129 2723 1760 3018 3346 3335 1957 3696 ", "3064 3660 2781 1615 2035 1864 2390 3320 3698 3406 ", "3110 2543 1763 1483 2789 3289 1913 2296 3167 2293 ", "1498 2330 3371 2925 1484 2729 3783 3611 1931 3378 ", "2349 2205 2547 2162 2677 2747 3331 2267 3765 1333 ", "2338 1987 3017 3420 1646 2808 3181 1715 3467 3664 ", "2702 2331 2949 3190 2320 2183 2510 2726 2663 2864 ", "1773 2811 2584 2429 3493 3591 2206 2595 1255 3292 ", "3112 1284 2574 3202 2778 1948 1961 2316 1374 1386 ", "3411 3164 1830 2302 1820 3689 1303 2966 3058 3309 ", "3706 1730 1291 3601 1886 2847 3255 2126 1395 1562 ", "3759 2005 1461 1576 1994 1387 1656 3225 1205 2860 ", "2810 3879 2167 2744 2404 2377 1658 2371 1411 2092 ", "2286 2922 3374 1431 2439 2852 3263 2235 2892 1507 ", "1207 2278 1696 3115 1958 3057 1307 2687 2870 1714 ", "2801 3472 3830 1951 2197 2179 3607 1549 3762 1486 ", "2692 2867 3890 3087 1227 2939 2477 1739 2843 2318 ", "2921 3516 3401 2761 1979 3747 2832 1439 2941 3914 ", "3439 2947 2695 1273 3453 2893 1688 1274 2469 1917 ", "3262 2476 1241 2145 1925 1248 1634 2112 1986 3122 ", "2078 1779 3452 3003 3239 1679 2310 2121 2951 1377 ", "1968 1589 2590 2994 2732 3024 2380 1707 2563 3400 ", "2544 3552 1312 1720 3379 2327 3733 2209 1385 3699 ", "3084 3789 2902 1328 1253 3694 1282 3159 3521 1584 ", "3246 1302 1238 3813 2343 3325 3396 3459 2282 2478 ", "3030 1472 2207 2191 2063 3594 1898 2307 2735 1631 ", "3671 2542 3126 1209 1353 2069 3010 1319 1563 3782 ", "2088 2997 2342 1912 2150 3633 2511 3489 2283 2465 ", "2513 3174 1382 2467 3061 2611 3903 1765 1477 3626 ", "1967 2442 2472 1474 3306 3416 3073 2904 1512 1258 ", "2995 3716 3640 2819 2480 2580 1930 2886 3457 2142 ", "2336 2913 2927 1975 3195 1652 2979 2661 3163 2560 ", "3151 3198 2127 2128 2168 2715 1942 2802 2754 1399 ", "2426 2260 1870 1346 3826 2813 1320 2437 1357 3357 ", "3290 1999 3703 2536 2648 2020 2933 2383 1412 1300 ", "3528 2433 3000 2679 2329 3229 2935 2803 1877 3211 ", "1740 2534 1301 2100 1915 2538 1568 2953 2530 2919 ", "2252 2495 2666 2894 2746 1551 1916 3343 3470 2050 ", "3434 2257 2222 2509 3430 2899 1384 2347 3831 2090 ", "2061 2356 3096 3326 3833 3454 2345 3438 2631 3264 ", "3608 2215 2375 2950 1933 1457 2195 3497 1222 1711 ", "3564 1308 1909 2485 1848 1782"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2519.1986624619403;
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<string> ratings = {"3349 1647 3039 2026 1241 3379 1909 2499 2778 2361 ", "3090 2464 3727 3216 2564 1575 3285 2796 2789 2314 ", "2427 3509 1669 1826 2016 3765 3438 2269 2595 2379 ", "1286 2625 3906 2356 3514 2103 2457 2752 3892 1937 ", "2799 2534 1310 1822 3211 1363 2986 3134"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2579.354166666667;
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<string> ratings = {"3769 3271 3033 1955 3475 3191 3108 2283 2914 3513 ", "2817 1915 3392 2532 2524 2310 2505 1275 3470 1710 ", "2974 2380 3726 3294 1438 3790 2662 2587 1752 2525 ", "2065 2685 3671 1303 1515 3885 3590 3170 2207 2254 ", "2648 3093 1474 2721 3441 3731 2058 2953 1575 3544 ", "1544 3054 1535 2954 3914 1716 2323 3437 3603 3353 ", "3682 2050 2396 3696 3317 2297 1577 3538 1950 1221 ", "3205 1707 2453 2264 2630 3611 1930 3589 2546 1439 ", "2562 3804 3357 2864 3665 3136 2211 3458 1490 1555 ", "1737 3569 1883 3210 2403 2903 3722 1436 3873 1596 ", "2991 2971 2428 2089 3688 1407 1846 3798 2769 3269 ", "1297 3106 2884 2212 3382 2468 2774 2798 3820 2779 ", "1601 1656 3015 1919 2006 2835 3354 2695 2105 3492 ", "3739 2334 3355 3556 1894 2535 3850 2016 3042 1532 ", "1484 3387 3316 2043 2484 3476 2580 1761 3480 1423 ", "2870 3705 1924 2625 3649 3214 3871 3400 1727 3595 ", "3812 3654 3748 2162 1693 1893 2072 3759 3425 1804 ", "1979 2905 1518"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2697.8556855100705;
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<string> ratings = {"3464 1773 2630 2131 3497 2712 2003 1842 3715 1406 ", "3785 3847 1227 3504 2788 2893 2569 2591 3061 1962 ", "3884 1399 2867 2036 3796 3508 1562 3222 1365 3510 ", "2242 1844 3255 2477 2487 2767 3325 2470 1458 1732 ", "1357 1903 2562 2232 3301 1945 3917 2660 3443 2787 ", "2075 1462 3664 3799 2245 1212 2631 1932 1497 3763 ", "3525 2934 2485 3378 1620 2295 3639 1268 2745 3773 ", "1783 3549 3035 3243 2139 1987 2500 3417 2447 2761 ", "1841 2492 2379 1767 2528 3722 1533 3667 1287 3693 ", "2007 2358 2455 1553 2935 2126 1855 3818 2021 3199 ", "2556 2304 3032 2947 2954 2837 1644 1228 3448 1866 ", "2920 2051 3357 2086 2240 3496 2766 2220 3244 3196 ", "2117 2885 3010 1774 2299 2318 3571 3502 1275 1477 ", "3171 3021 1398 3646 2429 2080 3670 1565 1820 3177 ", "3294 1340 2899 2649 1370 1765 2782 2171 1888 2843 ", "1998 2160 1305 3807 3402 2074 2022 3898 2842 3391 ", "2977 1494 3083 3770 2213 2345 1971 1432 2991 1436 ", "2291 3774 3742 1769 1272 3499 2924 1827 3513"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2566.747563352826;
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<string> ratings = {"3216 2082 2224 2568 3741 1984 3072 1706 1315 3685 ", "3700 2842 1426 3900 2903 3822 2432 2213 3087 2127 ", "1492 2553 3612 3635 2486 2199 3794 1917 1909 2516 ", "3051 2687 1968 2197 2552 1236 1884 2572 2632 1326 ", "1920 3097 3252 2310 1814 2315 1659 1593 2365 1459 ", "3310 1643 3706 3828 1464 2756 2019 3771 1521 3740 ", "3025 2677 3364 2870 1980 2631 2289 1824 2472 3758 ", "3137 1971 2733 1291 2621 3390 1981 3854 3168 2235 ", "1618 1412 2662 3735 3242 2053 2629 3861 3666 3746 ", "2559 2184 3238 3814 3594 2386 1645 3246 2181 2956 ", "2219 3739 3745 1661 2359 2363 2108 3756 3589 2351 ", "3277 2013 1785 3877 2995 2330 1650 2424 2969 2150 ", "3394 2490 3795 1535 1674 1966 3818 1895 3234 1736 ", "2168 2066 1677 3674 3833 2977 1625 1791 3494 2425 ", "2005 2401 2495 2057 1703 2491 1985 1761 2807 2051 ", "1737 3549 2007 3619 2179 3444 2413 2778 3866 2094 ", "3907 1894 3726 2076 3584 1843 1667 2254 1723 3676 ", "3248 3778 2040 1708 2968 3220 2333 2722 3516 3432 ", "3325 3352 1939 3148 2538 1483 1455 2655 1264 2383 ", "2712 2288 2523 2144 1918 1360 1728 2545 3414 2404 ", "2819 3564 1590 3507 2762 2003 3043 2944 3345 2924 ", "3698 1733 3294 2059 2411 1518 3363 1493 3623 1772 ", "2004 2641 3597 3688 3300 1299 3000 3591 2735 1872 ", "1305 3757 2964 1318 3368 1679 3705 1951 2534 2294 ", "1563 1238 3251 3095 2311 3438 1410 3664 2497 2146 ", "1989 3431 3864 2463 2279 1660 1641 1859 2736 3356 ", "3914 3335 2781 2118"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2598.1980844969567;
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<string> ratings = {"1549 2382 2998 1847 3128 3717 1677 2706 1581 3322 ", "1884 1912 1907 3893 3339 1839 1644 1763 3840 2059 ", "2548 2880 2673 3909 3479 1824 3676 1867 2440 2353 ", "2894 2514 1940 3773 2383 3875 1383 1222 3125 2756 ", "1263 3446 3302 1957 1981 1281 2431 1804 2099 3033 ", "3390 3559 3223 3546 2236 3141 2724 2958 2733 2666 ", "1550 3039 2304 3078 3518 2531 3249 1730 1667 2611 ", "2624 1372 1788 3315 2895 3761 1853 2672 2424 2856 ", "2197 3420 3605 2507 2820 2149 3011 2940 2277 1634 ", "1775 1719 3515 3388 1799 1495 3247 3746 2566 1554 ", "3853 3357 3004 3268 1709 2466 1612 1673 1901 1291 ", "3383 2484 2557 2196 1914 1813 1849 3181 3299 3808 ", "1682 2001 1465 3338 1790 1783 1259 3519 3026 2853 ", "3278"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2554.6786012650673;
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<string> ratings = {"2308 2057 3336 3681 2013 3857 3531 3873 3243 3746 ", "2230 3609 3834 1500 1650 2970 2796 3382 1649 2746 ", "3409 3340 1687 1437 1316 1526 3018 3067 3127 2829 ", "1731 3105 2513 3386 1800 3289 1848 1225 2937 2566 ", "2484 3749 1648 3214 3256 3402 1750 2661 3312 2323 ", "1767 3087 1685 2089 3605 2713 3880 2677 3644 2908 ", "2816 3699 1582 2497 2310 2175 2696 3201 2783 2868 ", "2680 3583 3687 2064 2438 3320 3225 3327 2956 1887 ", "1530 1857 3249 1940 3459 2815 2050 3036 1375 3558 ", "1471 1851 2669 1340 3733 2459 1927 1777 1743 2362 ", "2418 2898 2382 3574 1783 3838 2311 3211 1849 3879 ", "3137 2165 3283 2124 2716 1754 1337 1270 2478 2981 ", "2605 2357 1228 1934 2748 3792 3720 2857 3908 2428 ", "1741 3175 1842 2489 3103 3134 2583 2979 2510 1463 ", "2007 2477 3917 2534 3493 2626 2439 3416 2339 2682 ", "2370 1751 3094 3532 1868 2996 2404 1468 3876 2167 ", "1498 3075 1470 3474 3026 3008 1919 3350 2666 1448 ", "2269 1538 2845 1291 2289 1421 2906 2000 3158 1718 ", "2320 2244 1532 3539 2211 3562 3388 2346 1440 1410 ", "3657 1567 1850 3520 2966 3480 1631 3893 3431 3668 ", "2894 1587 3210 2447 2823 3529 1357 2435 2082 2959 ", "1778 2892 3577 1637 1452 2838 3099 2469 3410 3697 ", "1975 1998 3058 3333 3062 2675 2035 3259 1361 2038 ", "3151 2406 1367 3711 3487 3193 3282 1362 3173 3284 ", "2148 3478 3530 1301 2813 3200 2015 3395 3128 3092 ", "3771 1791 2131 1727 3076 3552 2350 2012 2550 1630 ", "3495 2515 3747 2841 3423 3060 2728 1877 2635 2137 ", "3141 3110 2300 1972 1918 3851 2479 3636 1208 3856 ", "2331 3820 2885 1913 1381 2188 1943 3242 3219 2332 ", "2909 3703 2765 1581 3709 3630 1983 3481 3401 2691 ", "2129 2278 2040 3764 2069 3417 3731 2028 2554 2604 ", "2461 2076 1996 2228 2401 2678 2359 2798 3676 1920 ", "3305 1277"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2634.676774115219;
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<string> ratings = {"3616 2869 2985 2621 2700 1864 2635 3631 3860 1854 ", "2435 3839 1476 2744 2684 3676 3251 2411 2625 3338 ", "1215 2493 3590 2344 2873 3649 2286 2760 2650 3562 ", "3844 2852 1580 2138 1774 3846 2447 2420 1336 1700 ", "3453 3411 2850 1956 3416 3832 1513 2359 1885 3123 ", "3167 2416 1567 1702 1621 1352 1948 3533 1566 2521 ", "3797 3745 2683 1576 2105 2141 3814 1317 2785 2402 ", "2860 2103 3524 1839 3312 1368 2940 1372 2905 1450 ", "2270 2432 2479 3053 1613 1226 3557 3867 2658 3083 ", "2935 3173 1596 1207 2662 2938 3429 2991 3101 3456 ", "1657 3327 1496 3856 2433 1735 2212 3677 2104 1211 ", "1484 2851 2127 2280 2685 1843 2265 2268 2194 1899 ", "3302 1433 2711 1416 2577 1516 3715 2373 2976 3410 ", "2299 1390 3669 2116 2765 3352 3298 3106 2815 1847 ", "1679 1879 2563 1665 2526 1708 2587 3016 2357 2184 ", "2003 2369 3259 3876 1781 1947 1818 2888 2292 2336 ", "2651 1412 2465 1678 2764 1599 2655 3500 2399 1990 ", "3433 3690 1419 3746 1806 3866 1383 3467 1961 3041 ", "3765 1603 3854 1424 1635 2237 3477"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2542.4515789473685;
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<string> ratings = {"1456 1799 2158 3310 2710 1461 3066 2018 3381 1246 ", "2181 3882 3622 3132 3848 2894 2508 1297 3368 2594 ", "2585 3509 3183 2033 2140 2624 3104 2435 2403 3313 ", "2736 3403 2307 2375 2837 1637 1839 2294 3578 2954 ", "2849 2351 1761 2303 1971 1734 3765 2245 1622 2577 ", "2669 3272 1639 3085 3035 3289 1597 1338 3603 1515 ", "2155 2869 1768 2249 1383 1823 2319 3503 3661 3202 ", "3485 2995 3493 2611 3573 3592 3607 2701 1789 1243 ", "3349 2552 3374 3194 1204 2523 1335 3761 2574 3382 ", "1432 1546 3458 2676 3825 2681 3520 2774 2971 2027 ", "3675 2835 2114 2750 3696 2597 2101 2036 3856 3484 ", "1739 3541 3913 2032 2782 1531 2788 3689 2242 2392 ", "1996 2657 1779 2107 1207 3555 1878 3231 3663 3726 ", "2742 2541 3373 3834 1431 1598 3028 2003 2186 1801 ", "2814 2706 1741 1941 3140 1442 2456 2929 1704 2361 ", "2783 2946 1891 2990 2575 1249 2134 3148 3245 3445 ", "2738 1224 1217 3874 3250 3492 2364 2887 2008 1899 ", "2353 2104 1950 1275 3700 3200 3652 3233 2261 1396 ", "2113 3584 3402 2854 3649 1904 1405 3197 3572 2091 ", "1803 3371 3266 2813 2196 2998 1242 1564 3207 1916 ", "1675 2518 1740 3016 1382 2248 3123 2496 1556 3596 ", "3744 3716 3821 2542 1687 3304 2863 3789 3075 2785 ", "3433 3858 2558 1497 2608 3602 3682 2119 3552 2614 ", "2723 1587 1300 3434 3244 1200 3902 1750 2069 2381 ", "1255 2269 3658 2649 1635 3387 2803 3861 1976 3838 ", "2092 3302 1449 2001 1480 2413 3471 1514 1545 1496 ", "3054 2152 2224 2026 3465 1476 2739 2648 3812 3657 ", "2290 2141 3297 3633 2897 2097 1428 3198 3857 3209 ", "2740 1484 3901 3044 1276 1701 2728 3425 3860 2772 ", "1263 2500 2801 3854 2055 2298 2284 2408 2441 3598 ", "1308 2488 2808 2600 3124 2449 2768 1482 2445 1264 ", "1647 1833 2679 1856 3486 3478 3411 2636 2747 1953 ", "3002 1784 1462 2501 3019 1649 2246 3361 1775 2519 ", "2448 1842 3827 2237 1391 2617 2072 2983 2505 3208 ", "1939 2633 3339 2188 3749 2520 1265 3415 1696 2274 ", "1212 3210 2297 1279 3864 1483 1517 2926 3720 2021 ", "3851 2699 2241 2532 3285 3239 3049 1519 2421 1220 ", "3463 3039 1354 1944 3815 1778 2966 2250 2797 1522 ", "2844 3367 3786 2281 1603 1605 3320 2038 1439 2482 ", "2893 2951 2546 1437 3414 2129 2820 3358 2230 3565 ", "1872 2428 2992 3308 3595 1998 2846 2024 2222 2327 ", "3157 1898 2777 3702 2789 1818 1328 1307 2371 1682 ", "2183 3354 3294 2884 3069 2163 1709 3736 1525 3343 ", "2653 3111 2434 3422 3397 3408 2221 3090 2287 1596 ", "2035 1837 3757 3914 2773 3064 1620 2630 1539 1992 ", "1443 1526 3781 2267 1681 1949 2064 3298 1377 3586 ", "2363 2103 2654 1699 3831 1683 1549 1886 3319 2338 ", "2550 1816 2956 3228 2662 3050 2516 3164 1358 3147 ", "3012 1684 3144 1332 3423 2308 1500 3524 2251 1558 ", "3214 3171 2622"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2572.099229473684;
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    vector<string> ratings = {"1703 1971 2328 3099 2306 2596 1848 3483 2315 3805 ", "3459 3524 3800 1739 2190 1800 1962 3176 2433 1476 ", "3376 3141 2095 3701 2830 2770 3578 2988 2034 2036 ", "2755 3385 1675 2069 2132 3812 3741 3799 3883 3197 ", "1298 3019 3862 1304 1795 3660 2772 3819 3113 2128 ", "1591 1389 1452 2899 3056 1206 2873 2426 1897 2001 ", "2104 3750 2900 1339 2265 3162 3155 1456 2121 3115 ", "2546 1233 1730 1447 2927 3395 3015 1523 2257 2038 ", "1825 2661 2223 3463 1887 3682 3190 3237 1507 3425 ", "3445 2235 1944 3530 2402 2110 1530 1295 2215 3387 ", "3024 1563 2294 2474 3053 3405 2264 1837 3086 3278 ", "1217 3746 2921 1950 1620 3557 1511 1843 3798 1272 ", "1864 3418 3186 1280 1708 3002 2968 2062 3429 1424 ", "3676 1947 2835 1761 2445 3673 1850 2146 1443 1625 ", "2593 2101 3647 1790 3514 1656 1437 2436 2171 1860 ", "3284 3742 1382 3540 1750 2247 2725 2269 2033 3321 ", "2022 2578 1541 2609 1697 3790 1913 1816 3379 1483 ", "1655 3659 1986 1861 2048 1529 3066 2619 2583 2221 ", "2176 3449 3764 2515 2718 2538 1292 3591 2464 1342 ", "2471 2978 2082 3159 2222 3645 2933 2392 1558 1959 ", "3348 1434 3067 3903 3822 2824 3437 2123 3037 1835 ", "1574 3033 1605 3768 1758 3040 2411 3127 2005 1348 ", "2710 1900 1720 1439 3363 3839 2570 3063 1539 3624 ", "1393 2439 1438 3692 2369 1649 3674 1423 3501 3707 ", "3446 2080 2966 2654 2050 1877 2940 3052 1251 1915 ", "1365 3507 2990 1673 2763 1695 3410 1287 1454 2620 ", "3630 3116 2130 3466 1321 3774 3824 3175 3757 3796 ", "1706 3606 1597 2181 1532"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2522.1844253490867;
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    vector<string> ratings = {"3251 1878 3172 1885 1483 1273 1850 2535 2846 1298 ", "2988 2300 1534 1296 1728 1261 2620 3025 3455 1519 ", "2624 2951 2744 2401 3322 1781 1214 3790 3704 1551 ", "1976 3758 2438 1759 3874 3078 1787 2689 2357 3232 ", "3623 3414 3488 3128 3339 2932 1884 1505 1205 3085 ", "1353 3092 1706 2461 2139 2986 3903 2621 3102 3545 ", "1746 3528 2338 1201 2223 1435 3310 2276 2016 1574 ", "2494 3263 2952 1358 1693 1689 1858 1210 3457 3250 ", "2631 1502 3847 3829 3670 1265 2145 2332 1513 1734 ", "2095 2065 2684 1310 1494 2175 1717 3449 2005 2326 ", "3909 3133 1954 2370 1684 3124 2089 2770 1498 3871 ", "3593 3029 2983 1711 1945 1233 3669 2015 3496 2472 ", "3681 1748 2949 1568 3866 2423 3180 1402 2480 2458 ", "3710 2034 1566 2539 3396 3430 3114 2320 3405 2808 ", "1797 2278 1927 3714 2012 3781 2793 2288 2154 1977 ", "1694 2758 2755 2737 2575 3326 3802 1211 1480 1352 ", "3049 1819 3100 3880 1616 2306 1806 2725 2477 3129 ", "3288 2545 3181 2895 1814 2989 2825 1270 1401 3359 ", "3254 2186 1428 3007 1416 3918 3215 1995 2410 3351 ", "1557 3800 2318 1939 3780 1264 2109 3492 1659 1324 ", "3902 3594 3055 3571 3543 1815 2645 2855 1696 3685 ", "2985 3733 2408 3830 1287 1660 2743 3815 1859 3140 ", "1546 1479 1587 2734 3406 2254 3659 1493 2329 2298 ", "1462 2482 2127 2806 2523 1959 2979 2961 3228 2473 ", "1564 2189 3040 3091 2368 2927 1548 1741 2026 1854 ", "3478 1782 2814 3220 3189 1609 3756 2680 2256 1216 ", "1515 3335 2592 3472 3603 3037 2261 2852 1851 2514 ", "2775 1490 2671 2313 1340 1941 2563 3407 2479 2835 ", "2182 1946 1938 2120 1622 1293 3612 3922 1404 2490 ", "3070 1417 2560 2522 3059 3386 2057 3807 1952 2828 ", "1303 2690 1791 1600 1826 2341 3557 2020 1876 3789 ", "3706 1621 3026 3588 2504 1961 2548 2910 1314 2452 ", "3174 3451 2116 3843 2004 1998 1724 1573 1354 3219 ", "2683 2374 1583 1758 3222"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2497.8805044618466;
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    vector<string> ratings = {"3078 2388 2308 2739 1396 3334 1404 2897 2120 3187 ", "2406 1831 2159 2730 3763 3567 1292 1343 2185 2115 ", "3282 3447 3148 2569 1351 2622 3833 3518 2935 3806 ", "3186 1389 2909 3619 1325 1888 3886 1371 2848 3096 ", "3463 3626 1377 2457 1746 2804 1660 2600 2075 2334 ", "2124 1605 1988 3379 3234 2305 3817 3434 3122 1751 ", "2919 1997 2306 1639 2718 2436 2066 2103 3771 1426 ", "2093 2481 1380 3828 1433 3350 3459 1627 1365 2379 ", "1208 1599 1729 2966 2806 3421 3540 3762 1611 3478 ", "1510 2724 3688 3055 1264 3475 1381 3803 2781 3272 ", "2946 3018 2253 1293 1298 1687 3369 2980 3798 2220 ", "1297 3254 2487 1345 1227 3012 2992 2165 3433 3745 ", "3856 1758 2858 2381 3527 1317 1308 3648 2857 3653 ", "3892 1665 3229 2452 1622 1637 3633 3840 1713 1986 ", "1699 2698 2413 3211 1908 3091 1314 1934 1802 2964 ", "2022 1651 1601 2783 1348 1575 3262 1624 2647 3577 ", "3361 2833 2634 2541 1324 1385 2707 2181 1813 2802 ", "3059 2034 2900 1747 3402 3162 2925 3881 1555 2221 ", "2535 3201 2884 3143 1685 3800 2632 1826 3066 2247 ", "2504 1257 2877 1841 2692 2038 3877 3399 3147 3710 ", "2896 2629 3708 3182 3197 3494 3885 3774 3406 3814 ", "1816 3559 3251 3503 2873 3843 2574 2585 1613 2952 ", "2765 1349 2688 3047 3310 1541 2212 2528 2189 2456 ", "2039 3327 2768 2742 3209 3654 3525 1958 3691 2186 ", "3906 2864 2568 3394 3498 1453 2906 2286 3102"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2608.7937246963565;
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    vector<string> ratings = {"3133 3472 2161 3004 3377 1366 2350 3650 2893 1507 ", "1243 2011 3668 3101 1586 3359 2407 3823 3533 2294 ", "2019 1451 3447 3140 3265 2942 2380 1692 1764 3666 ", "2726 2324 2046 3651 3374 2847 2776 3511 1344 2532 ", "1739 1749 3743 2198 3033 3251 2405 1813 3143 1488 ", "3543 2688 2561 3220 2094 2348 3456 2839 2622 1321 ", "1478 2833 3609 2612 3553 3048 3726 2484 1378 2803 ", "1443 2186 2414 2503 3874 3578 3775 3278 3548 3639 ", "1536 2296 3098 2246 2657 1514 3877 3077 1333 1530 ", "1581 2772 1325 1260 2817 3643 2497 2064 3053 1447 ", "2304 2373 1248 1761 2065 1318 2005 1207 3629 2676 ", "3197 3836 2044 3364 2311 1908 1979 3899 3752 1496 ", "3128 2544 1788 3414 1551 3255 3102 3111 3057 1807 ", "2666 1793 3480 2326 3922 3506 3730 1864 3711 2240 ", "3223 2686 2430 3911 3276 1357 2280 2557 2436 2079 ", "2849 1693 3438 1409 2174 3796 3658 2759 1382 2694 ", "2607 3022 1519 3355 2247 2493 1678 3245 1899 2573 ", "2536 1253 1491 1982 1797 2172 2668 3386 2277 1713 ", "2630 1868 3170 3804 2281 1571 3630 1976 2043 3181 ", "1887 1814 3879 2084 1376 2929 3718 2167 3599 3280 ", "2707 3681 1312 3130 3809 1717 3454 2057 1485 2381 ", "3878 3313 2052 3512 1277 2301 1881 3044 3870 3247 ", "1235 3334 3768 1460 1930 1544 2522 1854 1251 2535 ", "3484 2263 3242 1958 1427 3163 3689 1880 3831 1555 ", "3507 2390 3745 1258 2483 1385 2116 2323 2830 3159 ", "3683 3867 3863 3477 2784 3509 2431 3107 3326 3719 ", "2159 3087 2794 3179 1827 1414 3794 2681 3141 2208 ", "3676 1294 1999 2812 3350 2162 3450 3267 2650 3693 ", "1634 1812 3687 2146 1289 1315 1429 3011 1792 3513 ", "3707 1423 2130"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2598.968549707602;
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    vector<string> ratings = {"2772 3445 1294 3704 1870 2797 2996 2969 2694 2006 ", "1528 3554 2908 1760 3115 1333 3647 1604 2362 3646 ", "2712 1215 3235 1275 2985 2161 2733 2606 1683 2209 ", "2393 3384 3504 2864 2415 2629 1432 1584 2392 2861 ", "2643 1647 1458 1625 3746 3801 3233 2403 3728 3305 ", "1394 3211 2486 2519 3446 2680 3031 3859 2708 3721 ", "1566 1873 1228 3113 1340 3011 1497 3690 2474 2873 ", "3103 3815 3478 2217 1945 3273 2061 3068 1230 1317 ", "1205 2535 2373 3543 3021"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2561.811764705882;
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    vector<string> ratings = {"2379 2911 3423 3590 3662 1831 2277 3454 1593 3428 ", "3771 2325 2116 3284 2491 1465 1915 1573 3448 3091 ", "3922 1222 3251 3712 2873 1659 1715 2192 1680 2188 ", "3128 2652 3660 2965 1732 1221 1811 1969 1448 3617 ", "3267 2195 2523 2088 3747 1211 2115 3475 3907 1992 ", "1717 2570 1587 1268 3073 2532 3703 3571 2228 2798 ", "2089 3450 1231 2936 3505 2642 1729 1547 3759 3687 ", "3691 2558 3046 2914 1846 1682 3760 3199 1755 1262 ", "1579 3665 2230 3797 2499 2159 2303 3509 3278 3813 ", "1536 2612 1693 1492 1705 2056 1847 2463 2849 3413 ", "3339 2110 1888 1338 3592 2161 1371 2313 3327 3408 ", "2324 3009 2167 2795 1302 2566 1986 2246 2519 1307 ", "3149 1244 1935 3503 1718 2522 2600 1955 2508 1534 ", "1835 3134 2377 2316 2458 2737 3439 1248 1876 3781 ", "2670 1274 2145 2294 1246 2929 3143 3405 1964 3376 ", "2763 1329 1414 3873 2722 2423 1419 2866 1999 2784 ", "1336 1837 1325 2964 3146 1966 2179 1208 3850 1355 ", "3211 1477 2996 3488 3486 2791 2770 3826 1760 3526 ", "3316 2984 2939 3455 1396 1648 1736 1609 3228 1289 ", "2209 1679 2584 2117 3867 3237 2886 1202 2038 3203 ", "3154 2156 2979 3409 1247 2811 3074 2815 1552 1451 ", "2724 3515 1373 3791 3189 1353 3842 1980 1922 2496 ", "3036 2637 3395 3106 3784 2240 1917 2583 3150 2518 ", "1809 3446 3005 3822 1232 3527 1688 2495 3495 2651 ", "3142 1669 1531 3893 3741 1909 3425 2940 1943 2212 ", "2482 2044 3227 2012 1418 2918 1993 2830 2590 1791 ", "1819 1899 2173 3435 2301 2370 2719 1644 3510 1862 ", "3255 3035 1707 2211 3491 2078 1507 1774 1365 3561 ", "2608 1947 1841 1844 3774 3514 2854 3368 2827 2949 ", "3221 3792 3663 2858 3517 3247 1381 1805 2677 3600 ", "2821 2666 1885 1916 1360 1510 3218 3577 1517 1462 ", "2658 2790 2327 3529 1904 2101 1855 3320 1973 1406 ", "1650 2894 3622 1523 2309 3493 3624 1953 3852 2800 ", "1330 2714 1746 3899 3056 2865 2328 3001 1803 3342 ", "1946 2506 1860 3496 1431 1877 1539 3338 1983 3871 ", "2655 2934 3485 1326 1665 1331 1694 2307 1667 1642 ", "3229 1902 1603 3343 3226 2974 1435 2744 2989 3557 ", "2573 3610 3628 1432 2256 3090 2838 3161 3591 1238 ", "1496 3416 3116 3038 3754 3192 2868 2832 3014 2882 ", "3856 3027 3157 3029 2707 1646 2347 1566 1821 1515 ", "2453 1420 1624 2611 2388 3359 1585 2219 2614 2354 ", "3418 1625 1575 1690 2449 1275 1785 1743 2284 3560 ", "3336 1868 1410 1511 3647 2233 1880 3553 2425 2517 ", "3180 2562 3584 2391 3358 2064 2375 2530 2552 3245 ", "2624 2955 1224 3345 1494 3637 3310 3733 1673 1974 ", "2898 3523 1867 2543 2645 1359 3311 2414 3275 3558 ", "1671 2774 2321 2465 1674 1442 2617"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2520.595120614035;
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    vector<string> ratings = {"1480 2708 3607 2876 3382 2243 2877 2500 3560 3284 ", "1529 1229 1855 2066 1422 1412 2352 1631 2624 1481 ", "3900 1827 3630 1240 3816 1684 3359 3409 2931 2167 ", "2777 1828 2441 3036 1437 3156 3210 2865 2600 3724 ", "2926 3514 2207 3644 1598 1672 1313 1268 2790 1327 ", "1916 3256 3275 3581 2033 2297 2521 2426 2355 1374 ", "3584 1315 1595 1284 3681 2268 2159 1693 2166 3545 ", "3621 2423 2753 1429 1653 3420 2012 3865 2200 1710 ", "1589 2146 2036 2598 3198 3346 2314 1800 3615 2292 ", "2676 1785 1904 2479 3149 2055 3786 1361 3775 1212 ", "1952 2728 3796 3885 1577 1298 3886 3879 2794 1435 ", "2261 2000 3847 2852 2403 2446 2886 1680 2157 2492 ", "2997 1286 3291 2659 2983 3412 2895 2569 2236 3357 ", "3028 1294 3720 3294 3833 2603 3054 3252 3475 2022 ", "1629 1471 2766 3497 2483 3213 2881 2749 1469 2346 ", "3837 2422 2002 3478 1545 1678 1984 3898 3143 3158 ", "1486 1885 2862 3084 3330"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2547.1663417803775;
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    vector<string> ratings = {"2865 2668 3050 2627 1237 3242 2241 2035 1825 1974 ", "1835 2489 1964 2138 3814 1487 3351 3239 3162 2307 ", "2435 1760 1654 2410 1915 1790 3243 1933 2777 1682 ", "2153 1437 3155 3503 3448 1534 3532 2597 1710 3001 ", "3805 2932 2886 1546 1702 2653 2969 1425 1639 2991 ", "1538 3348 2295 3178 1832 2090 3766 2162 3257 1372"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2448.166666666667;
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    vector<string> ratings = {"2284 1351 1686 2598 1452 3624 1689 1959 3548 3819 ", "2321 2788 1255 2509 3785 2888 2754 3024 2416 1437 ", "3401 3372 3019 1371 3647 1312 3236 3237 3528 1816 ", "2933 2322 2260 1984 3135 3162 2241 3632 1948 1754 ", "1494 2524 1963 2967 1243 2988 1834 3394 2428 2666 ", "2867 3827 3467 3416 1706 3479 3376 1475 2959 2743 ", "1697 2961 3307 2106 3661 3523 1877 3771 3327 3345 ", "2018 2080 2639 2363 3107 2062 2224 2288 2238 2017 ", "3333 2800 1677 2449 1385 1365 3715 2768 1674 2069 ", "2804 3714 3288 2761 3445 3703 3369 2640 3173 1665 ", "3456 3501 3732 3526 3100 2866 1588 3423 1839 1555 ", "3348 3150 2644 3240 1417 3133 1670 3159 3837 2313 ", "1796 1517 3761 2166 3660 2385 1219 3772 3873 1480 ", "2393 1896 1229 3614 2638 3422 2503 3127 1736 1495 ", "3611 1947 2753 2515 1330 2575 1763 2902 3920 3428 ", "3484 3575 2850 3823 1997 2021 1970 3573 1576 3833 ", "3581 2491 3440 1965 3568 1515 3832 1808 3319 1379 ", "2296 3419 3612 2747 2981 2316 1439 2562 1358 2436 ", "3514 2460 3876 1266 2725 3818 2904 1802 2909 1668 ", "2737 1356 1608 2609 2118 1772 3013 1546 3803 2098 ", "1366 2576 1789 1729 3748 1981 3667 1257 2182 2423 ", "3583 1274 3245 3033 3557 1813 2801 3589 3839 1916 ", "2710 1384 3105 3480 3829 2868 1574 1955 3512 2938 ", "1503 3434 1460 3060 3099 1865 2478 2588 2583 2916 ", "2952 3516 2438 2304 2704 1305 3900 2099 3638 2510 ", "2403 1716 1421 1540 1430 1637 2353 3618 3766 3360 ", "3059 2856 2750 1241 1886 2872 2092 3247 3136 1228 ", "3095 2025 1765 1770 1868 2240 1627 2315 1247 3287 ", "2655 1682 1650 1956 2697 2699 1468 2299 1399 2378 ", "3621 1401 2711 3303 1743 3596 1725 2845 2757 1420 ", "1614 1708 2477 3195 2053 3736 3585 1201 2070 3684 ", "3166 2664 2784 3204 1821 3648 2440 2144 2979 3498 ", "2613 3083 3299 3649 2842 3177 2690 2121 3822 3389 ", "3780 2489 2818 1753 1714 3879"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2596.85073757057;
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    vector<string> ratings = {"1968 3687 2604 2376 2466 2261 2678 1328 1723 3043 ", "3378 3164 1571 3405 2305 3144 1332 3206 1685 3177 ", "3118 3459 3920 1630 3923 2770 3272 1223 2201 1522 ", "1247 1444 3750 1779 3052 2011 2102 2330 3227 1962 ", "3105 3079 2550 2797 2567 3803 2217 1574 2035 3359 ", "3397 1473 2514 2103 1272 2358 1562 1621 1254 2884 ", "2153 3299 1586 2284 1934 2257 1380 3457 1515 3010 ", "1677 3537 1287 3831 3797 2596 1737 3599 2339 1353 ", "1908 3101 3502 3425 2288 1953 3336 3740 2993 2252 ", "3221 1975 3664 3544 2952 3130 1289 3427 2561 2908 ", "1302 2032 3845 2071 1241 2851 3892 3565 3700 3408 ", "2991 1858 2574 1569 2417 2317 3859 1414 1378 2585 ", "2735 3840 1587 2776 3742 2867 2719 1803 2202 2156 ", "3167 3816 3706 1436 1494 2481 2404 3724 3420 1629 ", "1680 3648 3497 2837 2054 2356 2340 2101 2303 2263 ", "3690 2615 3333 3689 2659 2812 3735 3711 1918 3878 ", "3542 1757 3555 1567 2450 2961 2598 2766 2705 1732 ", "2976 3730 2042 2677 2547 2525 2246 1784 3267 3541 ", "2282 1825 1627 1800 2780 3142 3815 3368 1438 3006 ", "2430 1901 3017 3462 3357 3207 1275 2465 2714 1470 ", "1980 1728 2275 3561 2981 3429 2279 2808 1637 2863 ", "2077 1276 1911 1251 1647 3321 1229 1798 2979 3785 ", "2989 3077 1421 1945 1365 2914 3151 1280 1573 3808 ", "2573 1801 1871 2592 3364 2648 1897 2127 3810 3760 ", "2457 2936 1869 1698 2922 3649 3082 2228 3718 3922 ", "2183 2242 2173 2029 1538 1475 2894 1635 2192 2089 ", "2699 1564 3841 2852 1655 3665 2480 3088 2474 3431 ", "2781 2553 2386 2337 3259 2123 2329 2521 2483 2828 ", "1228 1521 1224 3663 3155 2180 2518 2134 1843 2291 ", "2235 2767 2293 3848 1324 3329 3876 2230 2656 2485 ", "1626 2112 3584 3651 3383 2542 3071 2285 3129 3568 ", "1214 2469 2067 1544 3899 3873 3202 2440 2868 1744 ", "2098 1495 2445 1463 3609 2935 2468 1381 3401 2544 ", "2785 3853 3090 3404 3293 2017 2148 2662 1938 2696 ", "3314 2313 1384 1788 3046 2813 3911 1368 3208 1416 ", "2374 3430 1351 2237 3304 1557 3589 1766 2667 3547 ", "2301 3057 1429 2359 2668 1928 1716 3441 3185 1813 ", "3411 3625 1485 3753 2736 2905 2254 3361 2650 2688 ", "1392 3093 2794 1828 2100 3237 2001 3031 3632 1596 ", "2385 2068 3363 1999 2107 3246 3469 3102 1961 2444 ", "2673 1780 2957 3631 1236 2000 3323 3692 1724 3776 ", "3652 2793 3637"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2575.728487886382;
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    vector<string> ratings = {"2082 1291 3230 1968 3376 3646 2608 1881 2520 3450 ", "2059 3722 3842 3703 3620 2430 1458 2161 1654 3474 ", "2906 3367 3107 3327 3172 2436 2684 3362 3891 2045 ", "3684 2007 2986 3852 2649 2232 3375 2300 2271 3624 ", "1704 3094 3054 2569 2604 2775 3778 1845 3382 2026 ", "2338 2605 3392 3120 1783 3763 3537 3096 2506 3325 ", "3346 3844 3257 2424 1868 1241 3612 3762 2448 2181 ", "1823 2003 2909 2981 1419 3542 1852 3012 3137 3379 ", "2551 2540 3606 1757 1947 2704 2142 3871 2417 2658 ", "1494 1679 2545 2491 3114 2103 3540 3616 3330 1272 ", "3504 2692 2917 3604 3634 2651 3802 3417 2141 2594 ", "1721 2837 3507 2180 2613 3365 1904 2096 2445 3181 ", "1780 3225 1717 2968 2502 2397 1502 3864 1630 1754 ", "2958 2980 1653 1208 1636 2840 3644 3723 2454 2899 ", "1215 2890 3711 2328 2042 2025 3728 3565 2656 2563 ", "2320 2791 3826 1519 3447 3459 2936 3150 3601 1632 ", "2027 1810 3207 2069 2364 1386 2385 3348 1225 3575 ", "2832 3909 1226 1284 3359 3370 2362 2399 2023 2615 ", "3685 2868 3718 3896 1517 3136 3023 3755 3637 2930 ", "1473 3089 1492 1724 1396 1312 1363 2537 2956 2674 ", "3905 1609 3085 1667 2891 2288 1901 1659 2223 2478 ", "1957 2318 2829 3683 3815 1733 2215 1867 1240 2732 ", "2742 1669 1775 1638 3553 1294 2164 2024 1844 2939 ", "3101 3872 1583 3080 3437 2420 2297 2398 3566 2831 ", "3849 1927 2660 2871 1729 1433 1974 2800 2326 1213 ", "2494 1705 1626 3431 1796 1361 1265 1231 2592 1920 ", "2965 1529 3024 2785 3893 2896 1557 2307 3664 2530 ", "3882 3556 2278 1342 1973 3758 1261 1682 2346 3574 ", "3627 2748 1788 2486 1316 2913 1412 3608 1576 1695 ", "1982 1323 1813 1690 1752 2881 2765 2234 1746 2602 ", "2555 3200 2552 2125 2483 1681 2484 1803 2342 2759 ", "2738 2547 3631 2189 2391 2034 3596 3777 2492 1961 ", "3733 2203 2946 3441 3044 2910 3294 1854 2197 1699 ", "3238 2993 2339 2794 2689 2773 3848 2973 2205 3767 ", "3083 3406 1351 3595 3046 2959 2477 2269 2963 2546 ", "3328 1579 3857 2224 2175 2191 1684 3104 2898 1771 ", "3666 2698 1581 2308 3651 1345"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2598.576009622393;
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    vector<string> ratings = {"3580 2352 1344 1994 2082 3674 2188 1992 1745 2189 ", "2842 2821 2815 1255 1945 1509 1361 1935 1475 3804 ", "3723 2544 1814 3205 1292 2169 2630 2776 1463 3251 ", "1778 2215 2104 3429 3695 2315 3758 2040 1873 3822 ", "3655 2935 1714 2253 3390 2740 2019 3669 2887 1784 ", "2708 2939 2747 2653 3118 1911 3460 3769 1626 3794 ", "2689 3129 2428 2187 1316 2539 2767 3249 3187 1680 ", "3287 2446 3229 2847 2575 2299 1464 1349 1845 3317 ", "2945 2423 2577 2777 2160 1954 3095 2458 3383 3465 ", "3788 3507 1369 2421 1834 1772 2867 2772 3314 1587 ", "3128 2486 2900 3319 2042 2531 2115 1908 2512 3079 ", "2938 1810 2897 1904 1279 1754 2690 2470 3808 3107 ", "2080 3006 2565 2516 2005 1569 1570 1981 1243 2655 ", "3922 1746 2293 3843 3004 3553 1515 3417 2558 2178 ", "2707 1229 2274 1522 2984 1684 2548 3879 3667 1901 ", "3288 2502 3793 2184 2045 3175 1619 2640 2358 3888 ", "2901 3241 3854 3767 2009 3059 3003 1912 2190 3829 ", "2940 1614 2880 1577 3846 1268 3103 3469 2350 2941 ", "2726 2715 2680 1711 1774 3159 3217 1541 2095"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2564.4527192982455;
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    vector<string> ratings = {"2702 1683 3652 1993 1397 3656 2254 3267 2225 1396 ", "1573 2731 1331 1449 3692 3912 1328 2333 1389 2227 ", "2574 3675 1235 1805 2561 2440 2054 3433 2909 3199 ", "3865 1821 2768 1931 3914 1439 1323 2858 3784 1987 ", "3879 3430 2520 2988 3761 2274 3607 2412 3074 1417 ", "3372 2742 2586 3691 1673 3715 2061 3023 3428 3518 ", "2832 2647 3459 3568 2806 3176 3757 3743 2619 1252 ", "2727 3204 2342 1282 2060 3197 3069 2739 1226 1656 ", "2554 1423 2543 2336 1779 3731 3394 3422 1311 1406 ", "1317 3369 3393 3092 3462 2641 1994 1250 3663 3353 ", "1580 1941 1675 2868 2153 2566 1519 3672 3242 2595 ", "2809 3510 1600 2864 2583 1484 3100 3646 2118 3783 ", "2055 3789 2529 2395 3556 3687 1601 2930 3690 1512 ", "2863 1475 1493 1205 3488 2082 3421 3626 3328 2774 ", "2983 2327 2405 1610 2691 2041 2226 1570 2427 3205 ", "3481 2109 1385 2807 1431 2048 1828 2642 2883 2718"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2584.19375;
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    vector<string> ratings = {"3588 1925 2880 2593 3737 2001 3074 2407 3822 2878 ", "3307 2316 2301 2991 1641 1588 3473 1421 3880 2221 ", "1537 2354 2609 3217 2413 3066 2513 2022 1883 2592 ", "2042 1356 2632 3537 1928 1984 3461 1551 3682 2616 ", "1317 3517 2767 2641 2277 3124 1403 3362 2191 1463 ", "2540 3554 3454 2150 2563 3289 2239 2092 1292 1766 ", "3550 1637 3357 3214 1500 3830 1979 2378 3802 3297 ", "2417 3424 2631 3456 1659 3444 1207 1861 3238 3881 ", "3706 3583 3694 1434 3407 1474 3568 3004 3244 3757 ", "1534 2773 3084 2018 1749 2154 2484 3510 3447 2510 ", "3053 2479 1222 1275 1268 1220 2560 3455 3669 1734 ", "3105 3574 3556 3548 1866 2370 3617 2320 1541 1607 ", "2698 2583 2227 2114 2660 2044 3477 2431 3708 2550 ", "3237 3035 2297 2488 3539 1885 1584 3860 3353 1934 ", "2461 3910 3460 3193 2862 1431 3161 1626 1751 1231 ", "2351 3406 2371 3734 2180 1495 1225 3155 1253 1675 ", "3903 3067 3200 3519 2489 3095 2103 2233 3722 2307 ", "2589 3023 2760 3656 2429 3399"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2627.379142300195;
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    vector<string> ratings = {"3539 2093 1996 2961 3360 3579 2529 2531 2522 2680 ", "3829 1951 3674 2572 2008 3012 3025 3673 1580 3480 ", "1994 2573 1379 2911 2220 2957 3049 2584 3561 2474 ", "3476 2498 2808 2539 2299 3179 2429 1645 1758 3643 ", "1395 3486 2506 3528 1433 2546 3862 2096 1343 3719 ", "3176 3300 3254 3634 3743 1654 1434 1606 2292 2780 ", "1234 2017 1382 1875 2829 1239 2515 2675 2662 1476 ", "2012 2791 1795 3205 3894 3654 2395 3868 1499 2538 ", "2720 1502 2552 2863 2022 3713 2639 2336 1670 1270 ", "2288 1918 3464 3448 3460 3192 1568 1528 1345 2831 ", "2579 3812 3706 3028 3891 2151 2708 3710 3525 3515 ", "2171 2312 2530 2024 2010 2982 2660 3738 1574 1696 ", "1575 3190 1924 1472 2115 3677 2798 1594 3725 2218 ", "2628 1988 2116 3111 3282 3239 1975 3792 2907 2679 ", "2623 1620 1622 1210 1771 3573 3578 2018 1697 3497 ", "1737 2449 3901 2613 1899 3763 1425 2713 3547 3864 ", "3045 2869 2214 2223 2083 1723 2992 2803 1273 3121 ", "1542 1223 3318 2472 2235 3635 2652 3786 2875 2889 ", "2282 2440 2077 3482 3494 2977 1560 3250 3906 1679 ", "1712 3731 2917 1687 2056 2490 3039 2626 3794 1482 ", "2237 1605 1732 2266 1515 3175 3293 3209 2493 1559 ", "3918 3227 1488 3335 2931 3091 1678 1299 2318 2244 ", "3681 3556 3739 3042 3656 1907 1911 2029 1302 3733 ", "1936 1628 3303 2114 3530 2201 2406 3174 1705 2558 ", "1281 3587 3883 2653 2973 1862 3568 3059 2674 1661 ", "2812 2909 1538 1827 1329 3472 3831 3520 2508 1883 ", "3749 3290 2597 3722 2182 2919 2734 1832 3596 3285 ", "1626 3386 2304 1952 1307 3552 2846 1598 3522 3564 ", "2577 1420 1797 1972 1819 3618 3373 3138 2354 3344 ", "1858 2764 3800 2731 1790 2872 3090 1647 2433 2152 ", "1347 1776 3682 2638 1945 1934 1854 3058 3419 3885 ", "2835 1600 1770 2997 3082 1423 2741 2415 3836 3309 ", "3214 2019 2455 3592 2943 1955 1874 3724 2564 2352 ", "3660 1977 3597 3080 3340 2216 2228 2690 2062 1948 ", "3626 2580 2124 1835 1818 2390 2293 3131 1548 3013 ", "1928 3220 3484 3267 1295 3434 1352 1213 3718 1446 ", "1590 3683 1384 1500 3388 2452 3296 2833 2856 2138 ", "3234 1337 1416 1364 2645 1800 2300 2641 2841 1843 ", "1773 2754 2404 1397 3416 1733 2952 3034 1615 2331 ", "1348 1435 3169 2224 3611 1833 1556 1857 3064 3757 ", "3879 2602 1271 1537 1318 1388 2664 2363 2097 1608 ", "2699 2792 2807 3499 1906 2818 3232 3559 3574 2009 ", "1522 2454 1695 3405 1699 3302 1553 3767 3684 3323 ", "1571 2499 2289 2609 3274 2317 1414 1823 2942 2752 ", "2545 3457 2315 2403 1812 1285 1393 1756 1821 1475 ", "2570 3487 3527 2456 1684 2501 1986 3048 2350 1473 ", "2698 3700 1718 3582 2243 2712 3729 1643 1467 1503 ", "1346 2307 3711 1525 2719 3648 3658 2215 1719 2412 ", "2335 2810 2740 3814 2385 3920 2146 2129"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2556.7336294736842;
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    vector<string> ratings = {"3741 1332 3767 1527 1235 2042 3082 3372 1995 2583 ", "3407 3853 3609 2177 1942 2839 1788 2422 1637 2462 ", "1495 3382 1815 3727 1237 3819 2451 3444 2080 1515 ", "3097 2610 1901 2078 3657 1513 3036 3681 1768 2857 ", "2575 2229 3724 1829 3311 2007 2319 1925 1540 3903 ", "1903 2738 2704 2817 2569 2715 3002 2964 3775 1414 ", "3674 3693 1333 3652 2014 3545 1493 2539 1713 1693 ", "1291 3205 3584 1220 2338 1608 1475 3330 2732 3102 ", "2846 2693 3773 1267 2856 2213 1667 2325 2290 2961 ", "3643 1750 1631 3726 3264 3322 1310 2184 3133 1810 ", "3091 2047 2183 1599 3177 3210 1896 2222 2461 3916 ", "2926 2683 2563 2276 1910 2916 1373 2472 2454 3688 ", "2705 1963 3062 2288 1224 1368 1314 2518 3918 1251 ", "3398 3809 3654 3112 3033 3883 1568 3354 1976 1907 ", "2220 2872 2205 2854 1518 1886 3371 1745 3250 1606 ", "3107 2654 3788 2476 1651 3406 1867 2263 3212 3252 ", "2444 2648 2871 2077 3429 2762 3585 1307 2720 1809 ", "1249 3760 3301 1407 3704 1691 3511 1772 2849 3029 ", "1201 2281 3142 2820 1455 1924 3836 3226 1947 3576 ", "1384 2188 2749 3561 3528 1993 1443 2307 3758 1514 ", "2117 3488 2382 3772 3232 2333 1731 1967 3483 3746 ", "3355 1891 1736 2930 2960 1865 1526 2659 2280 1376 ", "3787 3639 3658 1478 2997 2027 1337 3618 3158 3920 ", "1877 2436 1217 2218 2192 1849 3334 3644 3316 2944 ", "1856 3523 3594 1533 3547 2882 2827 2352 1212 1895 ", "1548 2596 3757 1245 2028 2974 3708 2395 3782 3628 ", "2051 2768 3109 2811 1749 3500 2049 1762 2981 3783 ", "2264 3611 2387 2850 2411 2761 1456 1673 1555 3661 ", "3888 2052 1600 1719 2545 2200 2353 3881 3579 2435 ", "2829 3807 2277 2810 2669 1705 2647 3290 1991 3387 ", "2256 2493 3517 3510 2073 2533 2842 1805 3259 2652 ", "1626 2076 3598 1973 1202 2699 2543 1621 1917 1735 ", "2666 3125 2442 1532 1850 1779 3839 1816 1619 2274 ", "2439 3476 1444 1482 2100 2536 2937 1996 1318 1930 ", "1955 3777 1807 1357 3345 3515 2992 2465 3365 2464 ", "3840 1665 2428 3813 2866 3574 3169 2101 3707 2925 ", "3442 1215 2340 2629 2149 3789 3694 1812 2909 3800 ", "3850"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2570.890567138067;
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    vector<string> ratings = {"3568 1914 3748 1438 2942 3550 1220 2151 1216 1876 ", "3030 3179 1496 3918 3085 2718 3163 1473 1928 3383 ", "2362 2949 2773 2453 1461 1519 3009 2353 1421 3016 ", "3039 1323 1398 1951 3143 3046 1356 2176 1200 3569 ", "2190 3365 1267 3828 3660 3682 3756 2614 1316 2234 ", "1855 1676 2369 2513 3854 3080 1578 3509 2057 2547 ", "1433 3898 1688 2085 2196 2760 3225 3194 2404 2350 ", "3667 3672 2646 1917 1222 1574 3689 1515 2013 2729 ", "1571 1787 1296 3621 1693 1921 3624 2882 2537 1992 ", "1618 2745 1313 2381 3028 3883 3067 3272 3807 2689 ", "2757 2859 1305 3335 3574 3482 3818 3592 3872 3161 ", "1203 3175 1768 3728 1961 3248 2296 3041 2845 1841 ", "2298 2097 2239 3851 3662 1597 2512 2920 2065 1474 ", "3228 3258 1838 1417 2319 3340 3350 1791 2161 1997 ", "1937 3216 3426 1746 2992 1984 2394 1650 1454 3707 ", "2704 2601 1542 2959 3691 3316 2618 1528 3826 1729 ", "2047 2083 3004 3741 3540 2119 2134 2682 1977 3710 ", "2041 2946 1805 2939 2650 2331 3020 1742 3359 3338 ", "2780 1857 2883 2112 2149 1265 2222 2906 3538 1907 ", "2697 1696 1510 3339 1314 2886 2414 2042 3516 2572 ", "3278 3371 3882 1539 3290 3817 3696 2577 1434 3730 ", "2824 3075 3404 2029 3457 2170 3445 1354 1892 3227 ", "1621 3554 1932 2259 2418 1623 2327 2935 1391 2383 ", "1656 1837 1598 3261 2276 1331 1232 3912 3412 2250"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2543.2375;
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    vector<string> ratings = {"2388 3890 2476 3005 2616 2792 1864 2234 1894 1747 ", "1286 2538 1341 2093 3227 2225 1993 3023 2649 2532 ", "2396 3835 2805 2054 2811 1690 2059 3438 2794 2706 ", "2417 1938 2358 3719 2500 3192 2531 3911 2018 2423 ", "3854 2623 1845 2297 3728 1790 1393 3757 2704 2659 ", "2060 1904 1439 1527 3913 1624 1454 2812 1573 3587 ", "2602 1579 1395 2096 2284 1787 3594 1922 2089 2316 ", "1280 3581 1211 1588 1260 2712 3107 3912 1568 3124 ", "1917 1703 1741 2523 3702 2903 2468 2635 2547 1625 ", "1572 3293 1983 2023 2037 2513 3829 1753 3081 3766 ", "3712 3086 3565 1293 2368 2237 3257 2024 3295 1919 ", "1604 3552 3736 3280 1533 3093 2894 3774 3390 3054 ", "1555 1954 3027 1600 2374 1569 3844 1549 3127 2573 ", "1437 2183 1802 3483 2207 2306 1813 2516 2760 3178 ", "2729 3873 2677 3231 1832 1899 1445 1350 3850 1990 ", "1869 2881 2551 3846 3891 2310 3848 2465 1907 1729 ", "1915 3527 2569 3797 2120 3610 1785 1345 2929 1672 ", "2906 3328 1808 3249 3468 1271 1428 2437 3210 2589 ", "2657 1739 2155 1565 3091 2273 3135 3041 2658 3812 ", "3896 3126 2185 3680 3442 2676 2868 3313 2718 1867 ", "3474 1249 2648 2009 3172 1469 2997 1681 1984 2205 ", "3188 3746 3620 2016 3352 2257 1585 3651 1541 1415 ", "2817 1498 2859 3824 3615 2373 3895 3795 3663 2928 ", "3701 1361 3505 1659 1932 2389 1226 2599 2148 3805 ", "2861 3720 2330"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2557.6419253261356;
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    vector<string> ratings = {"2367 1395 1639 1842 1426 2393 2348 1571 2077 12", "2", "2 1966 1495 13", "09 1251 3039 1566 1989 2083 1819 1875 ", "1579 2206 1503 1461 2262 2116 1429 2150 1834 2097 ", "2093 1518 1923 1796 1669 2342 1826 2374 1635 1683 ", "1656 2190 1632 1946 1207 1293 2029 2243 2252 1559 ", "2366 1590 1563 2319 1391 1255 1727 1565 1911 1679 ", "1282 2358 1682 2148 3555 2362 1208 2044 1949 1980 ", "1983 2215 2184 1545 1665 2146 1272 2110 1889 1829 ", "1808 2065 1987 1297 2216 1609 1318 1816 1444 20", "00 1404"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 1824.662456140351;
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    vector<string> ratings = {"1298 2272 2618 1344 3020 3212 3419 1754 3571 2835 ", "3049 2893 1970 3006 3244 3451 3273 2039 3826 2199 ", "3159"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2670.4545454545455;
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    vector<string> ratings = {"3437 1995 1756 2169 1906 1502 1564 3292 1955 2766 ", "2932 2763 1549 2539 3549 1414 3547 2101 2066 3015 ", "3704 1388 1573 1798 1706 2638 1614 3681 1227 1924 ", "2615 3573 3780 3791 2753 1716 2306 1651 3574 1809 ", "2400 2175 1409 1234 3353 1525 2952 3533 3002 2185 ", "3692 1780 3519 1919 2199 3125 1467 2214 2567 3504 ", "2377 3751 2765 3736 2068 1559 3663 2075 2863 1550 ", "1865 1567 1985 1606 2641 2898 2568 1626 3789 1219 ", "3472 3192 2531 3496 3243 2330 3737 1861 3489 3219 ", "2958 3058 2364 2541 1704 1300 3358 1283 2778 2601 ", "2315 1709 1390 3299 3111 3741 1885 2831 1385 3216 ", "2719 3621 3225 3483 3314 2379 1496 3374 2912 1353 ", "2067 3317 2635 2550 2913 2809 1646 2141 1932 2793 ", "1670 1894 1858 2788 3375 3173 3255 1872 1855 3293 ", "2447 2497 1419 2057 1471 2295 1665 1490 2196 2130 ", "2017 1679 3066 2867 2612 3664 2001 1585 2324 3747 ", "3556 1262 1938 2421 1592 2341 1926 1680 2212 1423 ", "3513 2684 2036 1212 2628 1566 2521 1562 1783 3099 ", "3571 2868 3518 3086 2830 3222 2014 2477 2624 1442 ", "1304 2872 1432 1913 2087 2374 2177 2470 2485 2242 ", "1479 3150 3657 2648 3201 2613 2022 3487 1406 3064 ", "1622 1426 1808 3389 2401 1864 2606 1484 3530 2738 ", "3330 1335 2509 1295 2833 3194 3620 1613 2008 2855 ", "1881 1873 3618 3202 2215 3499 2690 3501 3527 1427 ", "1999 3167 1236 1856 3300 2209 2839 2848 1868 3013 ", "1840 1486 1464 2015 2716 1688 3528 3495 2905 2328 ", "2002 2430 2517 2931 2989 3009 3199 1728 1343 1533 ", "3731 1976 1271 1503 1705 3154 3195 1792 1673 2251 ", "2573 2822 1918 3438 3441 1410 1334 2274 2210 3085 ", "1842 1802 2414 1221 2991 2107 3206 2050 1956 2647 ", "2291 3456 2386 3340 3606 2031 3039 3643 2102 2774 ", "1892 2693 1778 1330 3511 3552 3350 1755 1356 2013 ", "1509 2874 1202 1602 1455 1466 2948 1458 2159 2947 ", "3152 1528 3738 2608 2923 1961 1988 1698 1220 3184 ", "2694 3017 3238 1977 2158 2352 3696 3475 3312 2331 ", "3700 1952 1507 2399 2371 2033 3690 2899 2083 2285 ", "3433 3718 2618 2572 1506 1978 3730 3065 2999 1833 ", "1776 1691 3742 1723 3323 2258 1518 1230 2808 3246 ", "1342 2709 2767 2545 3627 3754 2250 1555 2570 1721 ", "1903 1642 2148 2256 2957 2682 2073 2687 3332 1543 ", "1687 3660 3257 3414 1250 3014 2726 2996 2007 2482 ", "2528 2311 3623 3408 1326 1600 2724 1309 2827 1516 ", "2016 1445 2743 1867 2123 3324 2849 2369 1226 1785 ", "2664 1485 1742 3115 3210 3001 2019 2655 1983 3451 ", "2333 2039 3665 2499 3376 2981 1897 3070 2800 2513 ", "1329 3095 2170 2063 2440 1907 1605 2452 3423 1398 ", "2959 1369 3671 2355 3418 1474 3793 2870 1569 2685 ", "2558 1750 3011 2543 2053 3379 3446 1224 2797 2974 ", "1243 2832 2064 3175 1487 2340 2468 3266 3515 1491 ", "1401 1520 3545 3720 2586 1748 3196 3124 1644 1788"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2447.5679999999998;
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    vector<string> ratings = {"1924 1242 1213 1217 2399 1777 2201 2301 1683 2045 ", "1396 2363 1560 2185 1496 2244 2117 2207 2098 1319 ", "2216 1223 1256 2359 2394 1572 2151 2191 2147 2253 ", "1633 2217 2211 1591 1310 1209 1430 1445 1988 2030 ", "1947 1202 1203"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 1821.3291005291007;
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    vector<string> ratings = {"2869 3239 1609 2367 1836 1663 1697 2317 1475 2212 ", "2188 2073 1263 1391 1495 3010 1243 2198 1782 1564 ", "3594 1219 2037 1473 1624 1435 2159 2315 2056 3029 ", "1863 1297 2245 3206 3510 1728 1246 1230 1875 3511 ", "1241 2775 1255 2304 2013 1205 2070 2763 1518 2344 ", "1690 1398 2320 1912 2752 2155 1778 1644 2230 3026 ", "1817 1401 1962 1470 1387 2339 3443 1510 2094 2374 ", "1273 1664 2853 1907 2380 3265 2786 1298 1983 1899 ", "1507 3252 2176 1452 1261 1981 1570 1207 2107 3550 ", "1282 3331 1254 2276 2096 1716 1966 3389 1766 2068 ", "3006 1802 1698 1555 1971 1509 1531 1556 2044 2358 ", "2327 2241 3182 2152 1514 2219 1559 1895 1992 2046 ", "1200 1915 1930 2296 1859 1501 1960 1683 1222 1288 ", "1808 1360 2177 2711 1286 1562 2078 1801 1834 2808 ", "1948 1674 1305 3031 2160 2252 1613 1621 2345 1850 ", "2169 2106 1918 1309 1317 1417 1670 2733 1946 1844 ", "1774 1956 1355 1336 1300 1349 2283 1247 3258 3415 ", "2795 1978 1990 1394 2347 1337 1340 1503 1722 3528 ", "2139 2968 2257 1312 2148 2166 1460 2216 1632 1325 ", "1404 1878 2197 1524 2030 1438 1973 1444 2191 1606 ", "3390 1866 1688 1779 3027 2254 1582 2123 3105 1568 ", "2036 1579 2995 1591 1933 1382 1596 2364 3310 1856 ", "3427 1816 1344 1304 3269 1906 1646 1480 2040 1725 ", "2766 1496 1265 2050 1842 2341 1367 1679 1202 1546 ", "2300 1936 2224 1846 2987 2248 1657 2907 1958 1853 ", "3326 1943 3336 2801 2839 2357 1819 2266 1727 2200 ", "2385 1904 1323 1710 1796 1594 2262 2798 1952 2292 ", "2204 1916 3572 1477 1280 1961 1270 1250 2000 2089 ", "3584 1612 1873 1451 2004 3174 1251 3011 3474 2386 ", "1330 1758 1271 3540 1497 1284 1839 2383 1489 2326 ", "2822 2124 2307 1313 3263 1804 2001 1338 2161 1303 ", "2016 1488 2015 1558 1522 2267 1567 1676 2221 1201 ", "1576 1711 1887 2228 1539 1227 2392 2109 1616 2183 ", "2362 2784 2057 1411 1318 2097 1208 1672 1379 1339 ", "1545 1461 3370 1369 1763 1425 1322 1897 1395 1209 ", "1665 2373 1645 1447 2393 1426 1293 1508 2049 2378 ", "2234 1879 1949 1266 1849 3164 1260 2181 1611 1935 ", "1348 2021 3332 1820 1316 2261 3077 3328 1892 1324 ", "2035 3251 1893 1910 1474 1557 2923 2024 2196 1571 ", "1980 2072 1924 2017 1770 2240 1659 3195 1486 3122 ", "1341 1521 1890 1419 3229 1977 2366 1267 3458 2210 ", "2157 1523 1399 2146 1228 1415 1256 1642 1687 2184 ", "1865 3089 3581 1429 2313 1352 1272 2285 1390 2209 ", "1785 1449 1295 1410 1239 1416 2354 1281 1840 2265 ", "2330 3295 1353 1423 1204 2150 2116 3588 1908 1976 ", "2233 1923 1635 1825 1469 2251 1792 1249 2125 2100 ", "1833 2281 2142 2093 1920 2144 1565 1590 2826 3045 ", "3475 1911 1695 2067 1634 2319 1376 2348 1529 1682 ", "3049 1234 2167 2489"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 1989.6421347368419;
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    vector<string> ratings = {"2869 3239 1609 2367 1836 1663 1697 2317 1475 2212 ", "2188 2073 1263 1391 1495 3010 1243 2198 1782 1564 ", "3594 1219 2037 1473 1624 1435 2159 2315 2056 3029 ", "1863 1297 2245 3206 3510 1728 1246 1230 1875 3511 ", "1241 2775 1255 2304 2013 1205 2070 2763 1518 2344 ", "1690 1398 2320 1912 2752 2155 1778 1644 2230 3026 ", "1817 1401 1962 1470 1387 2339 3443 1510 2094 2374 ", "1273 1664 2853 1907 2380 3265 2786 1298 1983 1899 ", "1507 3252 2176 1452 1261 1981 1570 1207 2107 3550 ", "1282 3331 1254 2276 2096 1716 1966 3389 1766 2068 ", "3006 1802 1698 1555 1971 1509 1531 1556 2044 2358 ", "2327 2241 3182 2152 1514 2219 1559 1895 1992 2046 ", "1200 1915 1930 2296 1859 1501 1960 1683 1222 1288 ", "1808 1360 2177 2711 1286 1562 2078 1801 1834 2808 ", "1948 1674 1305 3031 2160 2252 1613 1621 2345 1850 ", "2169 2106 1918 1309 1317 1417 1670 2733 1946 1844 ", "1774 1956 1355 1336 1300 1349 2283 1247 3258 3415 ", "2795 1978 1990 1394 2347 1337 1340 1503 1722 3528 ", "2139 2968 2257 1312 2148 2166 1460 2216 1632 1325 ", "1404 1878 2197 1524 2030 1438 1973 1444 2191 1606 ", "3390 1866 1688 1779 3027 2254 1582 2123 3105 1568 ", "2036 1579 2995 1591 1933 1382 1596 2364 3310 1856 ", "3427 1816 1344 1304 3269 1906 1646 1480 2040 1725 ", "2766 1496 1265 2050 1842 2341 1367 1679 1202 1546 ", "2300 1936 2224 1846 2987 2248 1657 2907 1958 1853 ", "3326 1943 3336 2801 2839 2357 1819 2266 1727 2200 ", "2385 1904 1323 1710 1796 1594 2262 2798 1952 2292 ", "2204 1916 3572 1477 1280 1961 1270 1250 2000 2089 ", "3584 1612 1873 1451 2004 3174 1251 3011 3474 2386 ", "1330 1758 1271 3540 1497 1284 1839 2383 1489 2326 ", "2822 2124 2307 1313 3263 1804 2001 1338 2161 1303 ", "2016 1488 2015 1558 1522 2267 1567 1676 2221 1201 ", "1576 1711 1887 2228 1539 1227 2392 2109 1616 2183 ", "2362 2784 2057 1411 1318 2097 1208 1672 1379 1339 ", "1545 1461 3370 1369 1763 1425 1322 1897 1395 1209 ", "1665 2373 1645 1447 2393 1426 1293 1508 2049 2378 ", "2234 1879 1949 1266 1849 3164 1260 2181 1611 1935 ", "1348 2021 3332 1820 1316 2261 3077 3328 1892 1324 ", "2035 3251 1893 1910 1474 1557 2923 2024 2196 1571 ", "1980 2072 1924 2017 1770 2240 1659 3195 1486 3122 ", "1341 1521 1890 1419 3229 1977 2366 1267 3458 2210 ", "2157 1523 1399 2146 1228 1415 1256 1642 1687 2184 ", "1865 3089 3581 1429 2313 1352 1272 2285 1390 2209 ", "1785 1449 1295 1410 1239 1416 2354 1281 1840 2265 ", "2330 3295 1353 1423 1204 2150 2116 3588 1908 1976 ", "2233 1923 1635 1825 1469 2251 1792 1249 2125 2100 ", "1833 2281 2142 2093 1920 2144 1565 1590 2826 3045 ", "3475 1911 1695 2067 1634 2319 1314 2348 1529"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 1986.2884731359643;
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    vector<string> ratings = {"1299 13", "97 1999 ", "2222 2223 2224 2225 2226 2227 2228 2229"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2045.3636363636363;
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    vector<string> ratings = {"2000 1999 1998 1997 1996 1995 1994 1993 1992", " 1991 1990 1989 1988 1987 1986 1985 1984", " 1983 1982 1981 1980 1979 1978 1977 1976 1975", " 1974 1973 1972 1971 1970 1969 1968 1967 1966", " 1965 1964 1963 1962 1961 1960 1959 1958 1957"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 1978.5904761904762;
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    vector<string> ratings = {"1", "2", "3", "4", " ", "2", "3", "2", "2", " ", "1", "3", "4", "5", " ", "2", "2", "2", "2", " ", "3", "1", "3", "4", " ", "1", "4", "1", "4", " ", "3", "2", "1", "7", " ", "2", "4", "7", "9"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2170.875;
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    vector<string> ratings = {"2000 2200 2201 2202 2203 2204 2205 2206 ", "2207 2208 2209 2210 ", "2211 2212 2213 2214 2215", " 2216 2217 2218 2219", " 2220"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 2191.3636363636365;
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    vector<string> ratings = {"1238", " 1200 1201 1202 1203 1204", " 1205 1206 1207 1208 1209", " 1210 1211 1212 1213 1214 1215", " 1216 1217 1218 1219 1220 1221 1222", " 1223 1224 1225 1226 1227", " 1228 1229 1230 1231 1232 1233 1234", " 1235 1236 1237"};
    EllysRoomAssignmentsDiv1* pObj = new EllysRoomAssignmentsDiv1();
    clock_t start = clock();
    double result = pObj->getAverage(ratings);
    clock_t end = clock();
    delete pObj;
    double expected = 1219.0381578947367;
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=23119087&rd=15497&pm=12514
********************************************************************************
#include <vector> 
#include <algorithm> 
#include <iostream> 
#include <cstdio> 
#include <map> 
#include <cmath> 
#include <cstdlib> 
#include <queue> 
#include <string> 
#include <set> 
#include <cstring> 
using namespace std; 
 
#define For(i,n) for(int i=0;i<n;i++) 
#define ALL(n) n.begin(),n.end() 
#define pb push_back 
#define sz(i) int(i.size()) 
 
class EllysRoomAssignmentsDiv1 
{ 
public: 
    double getAverage(vector <string> ratings){ 
        string str = ""; 
        For(i,sz(ratings)) str+=ratings[i]; 
        vector<int>a; 
        int num = 0; 
        For(i,sz(str)){ 
            if(str[i]==' ') {a.pb(num);num=0;} 
            else num=num*10+str[i]-'0'; 
        } 
        if(num) a.pb(num); 
        int n = sz(a); 
        if(n<=20){ 
            double sum = 0; 
            For(i,n) sum += a[i]; 
            return sum / n; 
        } 
        int r = n / 20; 
        if(n%20) r++; 
        int s = a[0]; 
        sort(ALL(a)); 
        reverse(ALL(a)); 
 
        if(n % r ==0){ 
            double ret = 0; 
            for(int i=0;i<n;i+=r){ 
                double sum = 0; 
                int in = 0; 
                for(int j=i;j<i+r;j++){ 
                    sum += a[j]; 
                    if(a[j]==s) in = 1; 
                } 
                if(in) ret += s; 
                else ret += sum / r; 
            } 
            return ret / (n/r); 
        } 
        else{ 
            double ret = 0; 
            int p = n/r; 
            for(int i=0;i<n;i+=r){ 
                double sum = 0; 
                int in = 0; 
                int ppl = 0; 
                for(int j=i;j<i+r&&j<n;j++){ 
                    sum += a[j]; 
                    if(a[j] == s) in = 1; 
                    ppl ++; 
                } 
                if(i+r<n){ 
                    if(in) ret += s; 
                    else ret += sum/ppl; 
                } 
                else{ 
                    if(in) return (ret + s) / (p + 1); 
                    else{ 
                        double add = 1.0*(r-(n%r))/r; 
                        return add * ret / p + (1-add) * (ret + sum/ppl) / (p+1); 
                    } 
                } 
            } 
        } 
    } 
};

********************************************************************************
*******************************************************************************/