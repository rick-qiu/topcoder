/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=7891
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class NowhereLand {
public:
    int placeGuards(vector<string> cities, int k, vector<string> guards, vector<string> agencies);
};

int NowhereLand::placeGuards(vector<string> cities, int k, vector<string> guards, vector<string> agencies) {
    int ret;
    return ret;
}


int test0() {
    vector<string> cities = {"0111", "1000", "1000", "1000"};
    int k = 1;
    vector<string> guards = {"0", "", "", ""};
    vector<string> agencies = {"0", "0", "", "0"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<string> cities = {"011", "101", "110"};
    int k = 1;
    vector<string> guards = {"0", "", ""};
    vector<string> agencies = {"0", "", ""};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<string> cities = {"011", "101", "110"};
    int k = 1;
    vector<string> guards = {"", "", ""};
    vector<string> agencies = {"0", "0", "0"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<string> cities = {"011", "101", "110"};
    int k = 1;
    vector<string> guards = {"0", "0", ""};
    vector<string> agencies = {"0", "0", "0"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<string> cities = {"011", "101", "110"};
    int k = 2;
    vector<string> guards = {"0", "", "1"};
    vector<string> agencies = {"0 1", "1", "1 0"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<string> cities = {"010100", "101100", "010011", "110010", "001100", "001000"};
    int k = 3;
    vector<string> guards = {"1 2", "", "1", "", "0", "0"};
    vector<string> agencies = {"0 1 2", "0 1", "0 1 2", "1 2", "0", "0"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<string> cities = {};
    int k = 48;
    vector<string> guards = {"15 18 28 33 46 23 9 19 38", "", "24 11 25", "", "15 8 39 30 17 43", "", "30 5 4 36", "37 9 32 16", "13 8 14 9 33 43 0 35 5 32", "22 37 11 21 20 26", "33 11 47 6", "35 42", "20 15 26 3 23 22 18", "26 18 33", "35 45 24 25 38 8 31", "14 24", "43 11 34 4 10", "4 3 34", "29 16 22 4 10", "14 32 45", "21 14", "31 23 4", "36 17", "38 44 47 42 1", "41 4 23 45 25 14 46", "26 4 14 47 40 32", "41 38", "9 45", "10 38", "26 3 27", "25 26", "46 31 24", "", "45 11 7", "38", "19 22 9 41 42", "17 46 38 8 31 18 26", "5 37", "32 16 5", "41", "38 0 34", "47", "7 2", "10 30 0 21 32", "32", "46 19 27 15 1 24 21", "34 1 20 10 19 15"};
    vector<string> agencies = {"17 32 23 18 15 19 38 9 33 30 45 28 46", "", "24 37 2 11 25", "13", "43 39 3 15 30 12 17 16 8 22 28", "", "4 10 36 19 32 5 21 18 30", "41 25 7 6 37 24 32 18 9 16 8", "8 14 5 47 13 4 35 25 0 43 9 45 32 33", "11 22 37 15 29 21 20 26 4 39", "18 46 6 8 11 4 33 47", "35 42 0 40", "12 3 13 18 35 23 39 26 22 31 15 20", "26 32 31 41 16 5 25 33 27 4 18", "44 34 41 36 4 47 38 45 25 8 37 15 24 35 31", "28 18 8 2 19 14 7 24", "11 26 10 43 13 4 34 45 23", "3 4 34", "16 17 28 32 34 29 22 4 31 0 33 10", "9 32 38 28 29 14 20 7 37 13 45 43 2", "21 20 47 14", "36 23 8 4 3 43 0 31 15", "18 36 44 15 17 4", "14 44 38 42 23 29 24 47 1", "12 14 46 10 25 31 45 41 4 15 23", "40 9 28 47 6 26 14 33 20 4 1 8 32 34", "2 33 7 40 41 10 28 38", "9 18 45 29 24", "23 2 27 10 38", "0 33 3 27 26", "26 25", "19 16 31 15 24 20 46 38", "", "11 24 43 42 45 13 7 3 30 32", "38", "36 25 9 40 42 19 6 5 21 22 41 47", "26 42 3 27 8 6 31 46 37 17 0 44 38 47 18", "37 2 17 5 36 31", "2 32 16 0 6 22 5 1", "41 26", "16 17 20 38 0 34 25 5 47 41 1 13", "47 15 6", "27 2 6 7", "21 44 39 17 0 35 10 32 15 30 28 13 20", "32 16", "19 24 12 25 15 40 27 1 21 0 46 4 10", "25 1 42 34 20 15 19 21 3 40 10"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 2142;
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<string> cities = {};
    int k = 50;
    vector<string> guards = {"38 29 18 10 47 25", "49 16 0 23 27 10", "12 0 36 6 8 34", "39 19", "8 42 16 26 33 20 29 11", "11 16 44", "11 15", "39 28 46 42 33 36", "37 24 9 45 17 30", "49 39 31 33 34 22", "3 35 23 46 40", "15 20", "21 45 12 18 35", "17 42 3", "36 4 24 23 48", "4 43 6", "15 32 8 37", "45 37 21 49 6 33", "27 45 12 15 4", "13", "21 45 37 7 47 16", "18 38 5 2 44", "44 46", "12 28 47 17 15 4 32 19", "19 38", "13 27 49 33", "0", "44 28 43 36 46", "25 20 6", "12 25 35 47 42", "29 36 40 48 19", "20 47 27 8 41 39", "36 38 3 22 39 17 48 31 15", "49 22 30 48 41 18 3", "", "17 20", "42 20 47 48 31 36 33 24", "29", "37", "33 1 46", "8", "8 47 5 16 10", "3 23 2 48 6 11 28", "22 0 25 45 43", "", "14 20", "8 34 11", "11 30 2 22 3 28 29 10", ""};
    vector<string> agencies = {"16 38 7 33 31 18 25 36 40 37 29 10 47", "5 22 31 27 16 26 23 0 49 33 38 32 35 10 28", "21 36 0 38 8 37 28 12 46 6 35 34 2", "39 43 19 3", "13 42 11 16 15 33 20 36 8 29 39 26", "13 16 47 4 11 44 9 25", "11 26 15", "28 9 33 37 24 46 39 16 42 36", "17 9 42 24 38 11 45 37 30", "32 49 22 33 39 34 31", "42 23 13 45 3 32 35 38 29 46 19 40", "7 34 20 15", "37 21 4 35 2 13 40 18 12 45", "42 17 3", "39 24 34 48 49 4 36 40 23", "7 44 6 4 43 28", "37 8 15 17 32", "21 33 45 35 34 17 25 49 37 6 9", "12 10 45 27 15 43 16 34 38 4 3", "13", "26 45 7 10 21 24 37 9 12 25 47 22 16 44", "30 2 44 18 26 15 5 38", "46 44 6", "17 4 0 32 47 19 15 12 24 7 28", "38 19 44", "33 49 27 8 1 13", "0", "43 22 34 41 7 49 25 46 44 21 28 36 33 17", "1 25 43 6 19 7 11 33 20", "12 49 21 42 25 35 27 46 47 22", "28 23 19 3 48 44 46 29 40 36 2 26", "19 47 40 8 37 42 20 48 41 39 27", "17 31 22 26 38 47 48 15 3 42 13 36 39", "22 32 6 48 20 3 41 49 35 39 7 12 9 30 18", "", "17 12 20", "36 43 47 42 13 20 24 48 31 33 25 37", "23 41 29 45", "37", "46 0 6 33 1 11 19", "22 8", "32 18 47 40 5 43 39 46 8 19 12 10 16 17", "25 28 6 1 11 23 48 2 39 3 21 34", "0 29 43 45 42 25 11 22", "", "4 14 20", "8 34 11", "33 30 5 29 47 35 3 2 22 15 6 28 11 10", ""};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1899;
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<string> cities = {"0010011000000100000000101000001010001000", "0000001000011101001011100001000101100000", "1000001101010000000101000010100111010100", "0000001010001010001010100001001101110100", "0000000001000100100111011100001110101100", "1000001001000001001100011100000000000100", "1111010000000000010010010100101000110001", "0010000001100000001010011010011100001100", "0001000000010010000000100010010010000010", "0010110100010000100000000000000000000000", "0000000100001010100000001001110001110010", "0110000011000010111001000011101010000111", "0101000000100000000010000010000101000011", "1100100000000000110010010100001101010100", "0001000010110001010000000110100010110001", "0100010000000010010001010100001000000000", "0000100001110100000010011001000001010000", "0000001000010111001011010001110000001000", "0101010100010000010000000010101100000000", "0010110000000000000000110000000101101000", "0101101100001100110001010010100001010001", "0110100000010001010010010001010101100100", "1101000010000000000100011011100001000010", "0000111100000101110111100000000100000010", "1000110100100000100000100000100100111001", "0000111000000111000000000000100000000010", "0010000110011010001010100000000000000010", "0101000000110000110001100000101001011100", "0010001000110010011010101101000001100001", "0000000110100000010001000000000001111000", "1001101100010101001000000001000011010001", "0111100100001100001101011000000010001000", "1010100010010010000000000000001100011010", "0111000000101100100111100001111000101010", "0101101000100010000101001000110001001001", "0011001000100110100010001001011010000000", "1000100100000000010100001001010111100010", "0011110100010100000001000001000000000001", "0000000010111000000000110110000011001000", "0000001000011010000010001000101000100100"};
    int k = 47;
    vector<string> guards = {"46 19 12", "27 24 30 29", "23", "23 26", "22 26 16 41", "3 7 16 28 6 32 15 43 29", "38 26 31 15 22", "39 13 15 10 25 22 3", "44", "19 29 11 20", "12 40 7 26 27 24", "16 45 32 41 3 46", "36 35 8 11 0 7", "18 7 38 29", "5 18 0 19", "27 4 44 15 28", "42 17 9 20 23 26 16", "", "9 0 30 10 43", "5 21 24 3", "24 36 33 45 8 5 11 39", "21 10 31 30 17", "46 22 7 11 41 0 30", "2 24 41 32", "32 5 7 20 39 16 23", "19 36 40", "40 43", "20 7 33 36 0 5 8 15 14", "22 16", "", "33", "4 10 24 13 34 44 38 33 37 8 16 11", "20 27 30 43 24 28 10", "29 27", "20 34", "23 0 41 2 13 16", "2 3 35 24 27 40", "", "27 36 3 19 31 26", "19 36 40 45 42 24 39 18"};
    vector<string> agencies = {"19 46 39 12", "20 27 29 10 30 24 8 34", "23 14", "9 26 1 46 23 4 6 39 5 35", "15 22 41 33 16 24 32 7 37 21 26 46 34 30", "35 3 28 7 43 29 15 6 16 32", "38 15 31 42 22 26", "22 15 10 16 4 39 8 3 25 13", "44", "0 11 34 19 20 25 33 29", "27 2 21 28 26 7 41 24 40 38 12 13", "45 33 20 16 40 6 3 19 46 32 41", "27 38 8 36 31 4 35 0 16 11 7 39 37", "0 18 7 29 28 25 38 14 44", "18 14 25 5 0 30 29 19", "25 4 44 2 7 6 28 8 15 35 42 30 27 37", "14 9 7 20 0 29 19 17 23 16 42 26", "", "4 43 35 30 0 9 42 25 5 10 12", "43 25 22 21 12 38 5 24 23 3 15 42", "39 33 10 8 11 5 36 24 37 29 45", "36 34 7 42 21 19 0 10 30 31 44 17 45", "46 32 7 14 19 44 11 0 27 35 30 41 22", "41 18 24 17 29 32 1 44 2", "32 5 23 28 31 39 10 29 20 16 7 35", "19 9 40 36 14", "22 35 31 18 6 43 40 36 3", "13 0 32 8 15 42 38 36 26 5 14 7 33 20 34", "22 9 16 12", "39 33", "33 28 24 32 36 6", "19 44 34 20 24 10 8 33 37 4 13 16 38 11", "27 10 30 12 36 24 28 20 43", "24 7 27 29", "45 22 41 33 34 16 10 20", "0 41 13 7 16 45 2 5 23 29", "24 10 0 40 2 27 3 35 37", "", "26 36 15 19 31 32 37 46 10 3 24 27", "14 39 36 24 7 40 42 19 45 18"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 2045;
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<string> cities = {};
    int k = 45;
    vector<string> guards = {"2 25 20 39 31", "", "4", "6 41 14 25 8 17 9", "15 37 11 3 10 26 13", "11 41 33 24 35 12", "11", "34 24 5 17", "13 33 11 16 36", "30 12 1 13 23", "3 39 27 6 9 34 13 18 43", "18 28 24 7 12", "14 38 7 36 41 24 12 5", "32 20 1 29", "22", "21 43 32 42 41 26", "17", "2 1", "", "", "", "13 42 28 39", "10", "", "34 19 35 25 21 44", "34 42 2", "22", "32 26", "20 30 5 33 4", "4 25 21 7 28", "", "32", "22", "7 36 2", "0 14", "10 40 35 27", "4 21 27 38 40 17", "8 1 44 12 26 0", "21 11 8", "6 9 41 15 35 23 7 13", "13 10 6 14 39", "35 38 41 33", "", ""};
    vector<string> agencies = {"18 21 31 3 20 43 39 30 2 25 16", "", "18 4 23 44", "41 17 21 18 9 25 8 14 39 6 13", "15 37 11 3 10 14 28 27 13 26 7 0 43", "33 5 20 11 12 35 41 19 28 24", "11", "34 41 42 29 26 5 24 10 17", "36 35 28 8 16 11 18 34 13 33 30 20 12", "22 1 13 23 30 2 19 12", "33 36 39 2 6 3 43 18 15 34 19 9 13 27 22", "7 32 24 12 38 28 13 4 21 18", "36 10 12 14 34 38 18 8 27 7 41 24 5", "28 3 20 1 40 43 41 29 32 27 15", "22", "43 10 4 11 32 21 42 9 7 26 28 22 41", "3 17 8 38 25 13 30", "34 24 11 2 1", "19 42 21", "25", "16", "13 26 23 20 42 31 30 4 39 28 7 10 6 5", "10", "33 23", "17 21 35 19 34 2 20 31 9 44 25 8 4 32", "28 2 42 34 30", "22 19", "26 32 8", "21 23 33 3 4 30 20 27 0 8 5", "21 25 19 34 4 0 7 28 27", "", "32 36", "32 22", "36 20 6 2 7 33", "26 14 29 0 19", "27 29 10 35 12 40", "2 38 40 12 4 17 27 21 44 6 23 33", "21 26 8 12 1 0 44", "11 29 40 8 34 26 21 43", "13 35 41 0 6 28 15 23 9 7", "6 14 43 11 39 10 29 13", "38 17 8 41 33 34 0 7 35 24", "8", "6 5 22 16"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1793;
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<string> cities = {"001100010110010000011000010010000001000000001", "000010100100100000000100100100000000000100010", "100010000000110000001010010000110000110000100", "100000000000010000000000000001000000000000000", "011000010000000000000101000000000010010100100", "000000000000100000000010010000101010000010000", "010000000000001100000001010001100001011001101", "100010000100001100100010100000100000010000110", "000000000100000001000010010000110100010000000", "110000011000000000000001000110000010110000001", "100000000000000000100000000000001000011001100", "000000000000000100000100000000011000110000000", "011001000000000001101000000001001010000001001", "101100000000001000000100000010001001000000000", "000000110000010000000000000001001000001001000", "000000110001000000000100000100000010000000000", "000000000000000000100010110000000001100010010", "000000001000100000000010000000010101010000000", "000000010010100010000000000000000000001100001", "100000000000000000000100111100000010010000000", "101000000000100000000101000000100100000000110", "010010000001010100011000000001010000000010000", "001001011000000011000000101100100000000000000", "000010100100000000001000000000101000000110000", "010000010000000010010010011000000100000000001", "101001101000000010010000100000000001100000110", "000000000000000000010010100101010001010010000", "010000000100000100010010001000100000010000101", "100000000100010000000000000000000000101101100", "000100100000101000000100001000000000000010000", "001001111000000000001011000100000111110000001", "001000001001000001000100001000000101000100000", "000001000011111000000001000000000000000000000", "000000001000000001001000100000110000000000000", "000011000100100100010000000000100000000010000", "100000100000010011000000011000110000000000010", "001000000101000010000000010010100000000001101", "001010111111000001010000001100100000000000101", "000000100010001000100000000010000000000101000", "010010000000000000100001000010010000001001000", "000001000000000010000101001001000010000000000", "000000100010101000000000000010000000101100000", "001010110010000000001000010110000000110000000", "010000010000000010001000010000000001000000000", "100000100100100000100000100100100000110000000"};
    int k = 40;
    vector<string> guards = {"0 14", "34 29 38 15 25", "3 35 24 16", "11 32 25 30", "", "11 9 35", "3 1 14 11", "5 9", "38 26", "7 25 33 32 19 37 9", "2 17 6 30 11 33", "11 34 12 38 33 35 10 26", "", "", "1", "23 15 14 12 6 38 28 39 20 9", "4 9 21 29 28 32 39", "18 4 17 2 34 16", "2 24", "38 13", "3 5 22 24", "30 1 34 5 36", "17", "32", "36 34 28 32 2 33 15", "0", "6 7 37", "25 32", "37 23 22 0", "5 37 26 29", "0", "14 31 0", "16 32 22", "20 35", "33 25 5 12 26 24", "13 7 10 25 14 35 0 32 2 4", "", "26 22 17 18 29 24 1", "12 9", "31 23", "12", "", "", "30 16", "5 16 29 26 37 2 24 11"};
    vector<string> agencies = {"23 14 3 30 36 0 12 27 38 13 5", "25 38 4 20 15 7 29 34", "36 0 37 32 35 3 16 11 24 2", "32 4 33 30 13 11 34 25", "24 39 11", "33 37 35 9 29 7 6 10 11", "13 31 36 17 38 11 6 25 3 14 1 29", "36 5 32 6 9 19", "8 26 38", "13 37 7 19 26 30 9 10 33 6 3 25 32", "30 36 33 6 11 35 2 17 27 0", "34 7 11 16 35 0 25 5 38 10 39 33 3 26 12", "", "34 26 13 37", "29 1", "12 15 21 23 20 39 38 0 29 14 7 6 9 28", "39 4 28 21 32 10 9 17 14 27 29 5", "34 17 14 4 18 11 16 13 2", "24 2 22 35", "3 13 17 38 26", "27 22 26 7 25 24 31 3 30 5", "36 8 23 27 1 25 28 34 6 5 19 3 30", "17", "26 32", "2 13 36 32 39 33 34 25 28 29 15", "0", "7 2 9 20 37 34 6 19 15", "39 32 29 31 25 14", "22 28 18 0 23 37 27 1 8 38", "29 3 14 2 5 26 37", "0", "20 28 0 31 21 36 14", "36 32 35 33 16 24 22 14 31 26", "35 20 29", "5 25 33 30 24 12 26", "20 25 24 4 10 14 12 32 1 0 2 7 35 13", "", "3 22 24 34 29 0 37 1 17 18 26", "6 36 12 17 9 25", "8 18 39 23 13 31 25", "3 12", "22 2 12 17 11", "", "32 22 11 16 1 30 20", "5 28 33 26 32 2 19 24 11 29 36 37 16"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1225;
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<string> cities = {"0100011101011000101001101001100001010011", "1011001010111110001001100101000101110010", "0100011000011100100001000000000011100010", "0100001010010101011101101110011100110110", "0000011101010001010001000010110101100110", "1010101010001001011110001100101100010010", "1111110100110011001111110001011000001010", "1000101001110110111001010001001001100100", "0101010001000011111101001110010001010001", "1000100110111110010110001001011001000101", "0100001101001100010111000001101011011001", "1111101101000110100010000111000100000100", "1110010001100110011111101101011001100011", "0111000101111010101100001100100000000000", "0100001111011101011001100001100001110010", "0001111010000010010100010001110010000010", "1010000110010100000111100001000100000110", "0001110111101011000110000111001100001100", "1101011110001110000100110100101011001000", "0001011011101101111011100001011100000001", "0000011001111000110100000001101111111001", "1111101110101010100100011011010001010001", "1101001000001010101100010011010001001110", "0000001100000001001001101010100001011011", "1001010011001100000001010011000001001010", "0101010010011100011000000010101000111111", "0001100010010000010001111101100001011010", "1100001101111011110111101010111000100101", "1000110000100111001010010111010000011011", "0001101011001001000101100001101001000011", "0001011101101000011110000101010010101000", "0101110000010000110110000000000000010100", "0010000000100001001010000000001000100010", "1110100111101010001011111010010000000111", "0111100100001010000010000101001010011010", "1101010010100010000011010110100100101100", "0000001000100000011010111110101000110001", "0001100101010000110000100101000101010000", "1111111000001011100000111110110011100000", "1000000011101000000111010101110001001000"};
    int k = 42;
    vector<string> guards = {"20 33 6 24 9 18 1", "", "", "41 30 26 39 0", "6", "28 17 32 6 31 7 12 40", "", "13 29", "14 18", "34 38", "11 6 4 29 14", "24", "10 14 21 20", "9 24 19 26 7", "14 21 15 8", "15 20 22", "", "0 11 19", "", "23 41", "4 6 17 25 28", "38 11 30 6 19", "35 23 11 41 33 8", "", "25 39", "0", "20 21 38 34", "", "15 25 34 38", "34 39 7", "21 36 29", "", "29 18", "", "27 8 0 4 1", "0 39 2 20 30", "25 21 9 22", "41 9 29 3", "38 34 28 7 39", "32"};
    vector<string> agencies = {"0 1 33 20 24 18 9 34 6 12 8", "", "", "0 22 27 41 39 12 30 26 15", "7 37 6", "28 33 7 38 17 31 32 6 40 12", "", "30 19 29 5 20 13 22", "18 14 32", "13 22 17 10 34 38", "4 27 29 0 32 14 6 16 11", "36 24", "20 10 14 21", "3 26 19 9 24 7", "11 14 23 0 15 21 30 4 8", "34 2 31 20 41 15 22 1 21 37", "30 19 1 17 20 40 28", "36 4 34 0 10 11 19 21 7 37 33", "", "15 41 23 14 10 5", "4 17 28 24 1 25 6 31 23 9", "11 22 38 14 6 40 37 30 33 19", "41 1 13 23 22 8 2 11 3 35 33", "", "22 17 25 28 39", "0", "17 35 4 16 34 21 20 38", "4", "25 36 38 34 8 15", "39 34 25 24 21 7", "20 35 8 34 7 6 9 36 31 41 29 21", "", "34 38 29 8 18 41 27", "22", "13 8 0 41 38 1 22 25 39 4 27 32", "2 9 0 7 20 30 39 31", "40 22 25 2 9 21", "15 9 37 3 41 29 8 30", "34 15 27 14 38 28 8 7 36 39 19", "29 32 5 9"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1825;
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<string> cities = {"001000110100001011110000101000000110011001", "000010110010110010100111001100001000010010", "100111001010010000011100100100101000001000", "001010000001011001010100000100010000010000", "011100001000001111100101110001001110101100", "001000000010011111010011001110111101011000", "110000000011000010010011101001100101010100", "110000001001000011000010011100000111010100", "001010010001100000110010100111010000100100", "100000000000010010001100011100000001010001", "011001100001111110110100100000001110010001", "000100111010100001000010010110011100101000", "010000001011000000010011001000000000100010", "011101000110000100001000001110001101010101", "100111000010000010010101001100110011001110", "000011000010010000101010100001010000110101", "110011110110001000110010100111001001101111", "100111010001000000100000000000011111011100", "110010001010000111001110110110000010000000", "101101101010101010000101110000010110000000", "001000000100010100100010011011100001110001", "011110000110001000110000000000011110111000", "010001111001100110101001100001010001101001", "010011100000101000010010011001110000001010", "101010101010000110110010000100100110101011", "000010010101000000111001001011001000000111", "110001110100111000001001010111111100101010", "011101011101011010100000101010110110000000", "000001001001010010101000011100000101011111", "000010101000000110001011011000000000010011", "001001100000001000001001101100010101100000", "000101001001001101010111001100101011011100", "011011000011010011000100011000010000100101", "100011110011010001010100101110100000100101", "100010010010001001110100100100010000110001", "000001110100011011001010000010110000011010", "000010001001100110001110101000101110000011", "110101110110010101001100000011010011000000", "101011000001001011000111101010010001000001", "000010111000011111000000010010011100000000", "010000000000101010000001111011000001100000", "100000000110010110001010110011001110101000"};
    int k = 44;
    vector<string> guards = {"9 18 24 37", "3 24 11", "15 7", "31", "2 37 38 1 43 26 41 13", "21", "", "26 31 7 29 6 39", "10 16", "29 40", "12 4 30 39 27", "10 21 38 11 42 27 6 12", "29 39 0 13", "18 9 6", "", "17 42 15", "10 38", "41 36 34 16 4 37", "", "20", "", "13 4 37 40 17 12 8 21 24", "28 0", "24 12 1 19 25 41 42", "", "17 14 30 16 38 39", "16 40 6 11 4", "16 32 17", "20", "41 8 19 10 11", "18 1 6 24", "25", "11 29 8 1", "12 11 32 31", "33 22", "12 42", "21 25 20 43 30 6 5 11", "41 7 43 39 28 15 23 12 29", "", "0 33 28 34 19 11 21", "4 22 37 9 0", "14 33 4 32"};
    vector<string> agencies = {"24 18 21 39 36 31 9 20 10 13 37", "11 3 24 1", "7 4 30 39 15 2", "31 20 0", "4 13 1 43 7 2 26 41 37 38 18 5", "21 33 36", "", "6 39 31 17 7 26 9 29 33 35 11", "16 10", "40 39 37 29", "37 42 12 39 9 13 27 16 1 32 4 5 30", "6 30 38 14 42 16 10 11 5 4 21 12 27 20", "42 41 29 23 24 34 13 39 0", "9 18 12 1 6", "25", "15 37 17 42 18 36 43", "38 43 10", "36 41 23 37 16 42 17 29 8 34 4 43", "", "26 10 0 1 20", "34", "0 8 38 17 37 40 13 21 12 33 4 24", "0 5 3 21 28 35", "19 25 3 1 13 42 24 12 39 30 41 31 26", "0 39 18", "30 39 27 2 17 16 1 0 19 38 14 5", "14 11 32 2 36 16 10 6 39 40 12 4", "6 26 11 28 31 32 17 16 30 10", "20 41 3", "8 19 25 41 11 1 10 37 16 14", "23 38 30 13 14 42 6 24 25 1 18", "25", "11 29 1 8", "31 38 12 32 11 34", "5 33 0 34 17 20 22", "5 42 12", "6 22 4 30 12 36 42 20 43 37 9 21 25 11 5", "23 10 37 8 39 18 31 4 29 28 12 43 41 7 15", "41 10 23", "35 43 28 0 20 21 19 34 33 11", "4 22 37 0 9", "39 14 2 26 25 33 35 11 4 32"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 2246;
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<string> cities = {};
    int k = 42;
    vector<string> guards = {"5 1 6 24 36", "7 41 20 33", "10 2 25", "39 19 31 24 41", "5 2 22 33 11 28", "", "25", "0 30 29 11 16", "21 0 29 22", "39 14 15 4 13 25", "12", "13 30 32 11 0", "25 36 38", "14 38 15 25 41 22 40 3 27", "", "23 20 39 5 3", "31 7 2 26 1 28 32 41 25", "22 20", "", "32 18 14 34 33", "4 36 21", "38 32", "", "23 27 11 30", "", "", "12 24 0 14", "3 16 30", "17 13 32 27 15 31", "5 1 14 37 9", "23 10 20 24 25 14 12 21", "15 33", "11 28 10 40 5 41 8", "7", "11 24 18", "7 25 22", "19 25", "31 4 24 33 9 20 35", "18 36 12 31 28 22", "40 36 10 9 15 38 24", "8", "14 12 23 3", "36 39 21 5", "19 4 12 22 23"};
    vector<string> agencies = {"5 6 35 8 24 36 1", "10 38 41 33 7 11 30 19 37 14 20 1", "2 10 36 25", "29 37 41 20 31 39 11 24 19", "28 33 22 16 14 17 15 5 11 2 10 9", "7 9", "13 26 25 29", "39 0 11 29 30 18 16 13", "29 21 0 22 30 28 39", "25 32 14 15 39 13 4 0", "23 25 12", "12 19 32 11 13 0 30", "28 25 34 36 16 17 37 21 38 22", "27 25 22 26 4 15 38 3 14 7 40 35 41", "29 9 12", "23 9 39 20 5 30 3 29 36", "36 26 41 7 30 31 1 28 0 2 32 25", "40 20 28 22 41", "0 13 25 30", "32 18 14 9 16 36 35 12 34 33", "21 0 4 36", "32 38 20 27 16 3 13", "1", "36 23 27 40 11 30 5", "", "35", "0 25 12 31 14 39 24", "37 9 16 30 15 29 35 3", "15 19 33 32 27 13 26 17 31 36", "9 18 17 1 4 14 5 15 25 33 37", "19 25 20 41 13 14 21 24 10 12 23", "12 15 33 10 8 32", "10 8 5 40 15 11 28 41", "7", "12 19 9 11 18 24", "10 23 22 7 15 25", "19 25", "4 17 31 24 35 26 20 33 10 9 8 18", "39 18 36 12 33 22 31 28", "40 38 10 33 13 24 9 35 15 39 36", "20 8", "13 15 23 14 3 12 26 20", "39 36 21 5", "22 24 19 12 15 11 13 23 10 8 4"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 2426;
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<string> cities = {};
    int k = 46;
    vector<string> guards = {"17 9 45", "37", "9 31", "13 20 33 14 25 9 15 23 11 31 2", "29 15 21", "14 37 23 16 1", "30 18", "14 16 28 19 43 23 30", "37 18 13 8 32", "12", "21", "11 21 34", "35 8 30 2 3", "14", "20 30 27 19 24 13", "", "17 29", "28 31 23 20 16", "12 35", "33", "11 10 30 20 39", "41", "25 29 39 10", "31 1 44 16 42 10 0", "38 35", "34 14 9 5 11 22", "15 20 11 40 28 35 21", "24 3 44 34", "20 36", "18", "24", "26 13 28 37 31", "0 11 26 15", "23", "18 13 25 16 6", "6 18 17 22 9", "13 36 29 28 39 15 21 31 27", "5 20", "40", "", "12 35", "30 21 13 18 20 0", "25", "36 35 19", "28", "6 2 27 9 32 19 21", "36", "", "6 13 30 25", "39 37 17 40 10 28 12 29 25"};
    vector<string> agencies = {"9 45 44 17 20", "39 20 37", "31 32 9", "11 5 14 27 23 31 24 2 13 15 25 9 20 33 18", "7 35 11 41 33 15 42 29 6 21", "24 42 14 6 4 37 16 19 1 23 18 39", "30 36 34 18", "38 31 19 14 36 25 43 3 23 28 32 16 21 30 13", "16 25 5 13 14 8 7 19 37 32 18", "12 8 14 35", "21 2 42 4", "3 11 21 33 40 34 35", "44 8 3 20 24 35 2 30", "3 35 42 14 23", "16 20 9 45 30 39 19 13 24 27 22", "21", "29 43 17", "28 20 31 23 16 37 6 11", "12 35 43 24", "33", "3 39 30 11 24 10 20", "41", "39 34 25 44 10 3 29 22 8 27", "10 22 16 31 25 44 42 15 0 1", "6 18 7 29 35 45 38", "1 14 21 4 11 34 9 5 22 2", "21 7 33 36 23 15 40 35 28 38 20 11", "18 34 20 13 3 0 41 9 24 44", "36 32 20 22", "18", "24", "26 28 31 37 13", "11 14 0 19 15 26 41 32", "16 44 30 23", "18 25 15 13 39 6 16 17 27 35 34 24 32 3", "6 5 14 40 9 22 17 12 7 18 24 39", "0 13 21 36 39 44 27 37 15 29 35 31 28 12", "5 16 2 11 20", "38 36 14 21 7 40", "37", "12 35", "20 0 13 21 18 40 12 30", "13 26 25", "4 27 39 25 29 36 19 40 7 35 18", "8 28 37", "27 19 32 2 9 36 7 15 6 21", "36", "", "25 29 36 6 13 20 31 26 24 30", "10 25 29 22 40 35 17 39 27 37 6 5 12 28"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1996;
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<string> cities = {};
    int k = 50;
    vector<string> guards = {"21 0 10", "", "16 22 24 38 17", "", "34 13 30", "31 28 16 32 41 2 45", "", "45 3 40 0 25 7 38 17", "19 32 7 36", "5 1", "4 28 31 26 37 13 22 14", "9", "44 33 23 18 32", "31 7 0", "49 44 0 26", "", "17 24 4", "19 47 49 10", "35 3 16 9 14", "42 43 36 34 38 26 28 3", "4 30 19", "2 46 26", "37 35 32 45 3", "31 27 33 9 21 46", "23 3 22 35", "7 36 29 6", "", "25 21", "23 17", "36 12 39 30", "6 1 39 21", "4 26 33 5 34 17 42", "36 35 18", "42 13 32 29", "", "43 45", "29 8 15 12", "22 11 29 14 44", "8 25 27 35", "44 10 5 16 2 32 0", "38 9 31 1", "", "16 29 30", "1 3"};
    vector<string> agencies = {"17 23 0 10 38 5 27 21 43", "19 6 30 12", "37 17 38 16 15 4 24 22", "", "39 34 22 15 13 30 5", "28 31 13 46 27 38 41 45 2 16 32 11", "1", "40 17 0 45 38 3 21 25 7", "43 32 7 13 38 36 19", "21 41 2 32 1 44 28 42 13 31 5 16", "24 31 26 22 37 4 38 13 28 14 27", "9 42 13", "27 17 49 4 14 44 18 32 33 12 23", "0 31 7 17 19 21 43 14", "26 0 34 44 49", "", "42 17 4 24 38", "10 19 25 14 49 47", "35 20 46 9 3 14 19 34 48 16", "42 36 43 26 4 38 3 34 28", "20 4 22 7 30 45 19", "34 31 2 26 14 21 10 46", "35 23 32 3 37 45 42 11", "31 4 26 27 33 21 46 43 40 9 41", "3 35 22 23", "33 31 29 0 43 36 7 11 6", "", "19 18 21 39 25", "17 18 23", "9 8 44 22 30 12 10 39 36", "6 42 21 39 1", "33 21 17 42 5 4 34 26 9", "35 27 14 30 36 2 1 18", "33 42 20 17 13 29 19 45 32 4", "", "13 43 9 45 26 34 33", "33 41 1 8 12 36 15 29", "32 11 44 14 22 29", "35 8 25 4 27", "10 15 44 32 22 26 16 5 14 37 2 0 21", "43 5 46 8 31 27 38 9 1", "1", "42 29 40 37 30 16 49 41", "1 3 13"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1582;
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<string> cities = {"0001111101110001001100101010001001000100010", "0000010010000000001000000110000100000100000", "0000000000000010010001011000010000101101010", "1000101000010000000101100000000000010100101", "1001000111010010000110110001001000001011000", "1100000100000001000001000010000011100000010", "1001000100000000010001000100000001010000000", "1000111000000000111000000000001100100010010", "0100100000010001000110000100110100010100100", "1000100000101100000111011001100000000100011", "1000000001000000101000001010111011000000001", "1001100010000001000000010000000101000100001", "0000000001000100110010001001010000001011011", "0000000001001010001000100000010011000000000", "0010100000000100010100000010010110000001000", "1000010010010000000100101001100110001000011", "0000000100101000011001100001011110010010100", "0010001100001010100000100101000001001010000", "1100000100100100100011110000100100000111000", "1001100011000011000010000000001010110010001", "0000100011001000001100101110000000000011101", "0011011001000000101000000100000000100000100", "1001100000000101111010000100000000000010001", "0010100001010000001000001010000011001001100", "1010000001101001000010010010010100001000000", "0100001010000000010011100001001000001010000", "1100010000100010000010011000000010101001111", "0000100001001001110000000100001101011000100", "0000000011100001001000000000011100100010100", "0010000010101110100000001000100110100001000", "1000100100100000100100000101100000010000100", "0100000110010011101000001001110000100000101", "0000010000100111100100010010010000100010000", "1000011000110100010000010001000000010010000", "0010010100000000000101000010110110000000001", "0001001010000000100100000001001001001100000", "0010100000001001010000011111000000010000000", "1111000011010000001000000000000000010001000", "0000100100001000111110100100100011000000000", "0010100000001010001010010010010000000100000", "0001000010000000100011010011101100000000000", "1010010101001001000000000010000000000000000", "0001000001111001000110100010000100100000000"};
    int k = 50;
    vector<string> guards = {"44", "47", "34 27 40 43 48 18 46 23", "23 33 11 20 46", "26 8", "30 22 35", "", "0 35 26 24 11 38 21 42 10 39 2", "39 25 24 15 45", "38 37 13 19 36 33", "8 45", "21 30 49", "14 27 20 30", "17 36 42", "35 29 6", "15 0", "31 39 17 1", "39 42 17 3 46", "33 4 11 3", "30 41 6 49 8 38 36", "40 26", "41 15 40", "21 10 35 15", "20 44 38", "13", "12 32 10 13 38 29 36 42", "21 2 40 3", "11 1", "4 21", "", "", "29 35 42 33 14 1 45 32 0", "27 14 12 37", "34 23", "18", "16 27 11 23 5 10 14", "", "3 38 25 47 48", "47 28", "9", "42 16 43", "22 14 31 15 47 7", "18 44"};
    vector<string> agencies = {"44 38 10", "39 33 47 9", "22 40 12 3 30 33 46 43 48 34 23 18 5 27", "6 4 46 11 40 21 16 20 23 33", "8 26 45", "22 4 32 35 48 30 15", "11", "42 39 33 4 11 35 38 24 10 0 23 21 26 2", "11 24 25 45 39 44 15 4 36", "47 37 33 38 13 36 19", "29 0 18 45 8 28 30", "21 49 30", "27 20 1 30 14", "42 24 17 36 5", "45 29 35 6", "24 0 15 37", "41 2 17 48 29 37 1 15 43 9 39 6 31", "42 13 21 46 3 43 17 0 8 2 37 39", "12 11 31 42 20 3 4 33 13 24 41", "41 14 36 16 4 8 6 30 38 1 20 49", "26 40", "2 41 15 40 1 16 9 24", "10 21 15 8 36 46 35 31", "38 37 20 47 44 16 25", "7 4 36 13", "42 16 13 12 29 38 32 48 45 10 36", "39 0 21 25 11 3 2 12 40 49 9 48 6 27", "1 11 41 12 42", "23 30 20 14 4 21 22", "", "3", "14 0 33 27 22 48 45 35 42 29 1 32", "36 27 12 35 37 15 13 0 44 9 14", "13 23 34", "18 20 45 39 4 32 12 47", "16 27 0 17 23 11 5 14 10", "", "36 6 47 3 38 11 44 48 46 34 25 28 35", "18 35 3 42 47 28 29", "35 38 36 22 34 27 9", "43 42 44 16", "14 35 47 22 8 7 29 23 31 15", "40 44 17 16 26 18"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1710;
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<string> cities = {"00001000100010011000011100011010010011000", "00001110000001110000001001000111010000101", "00001001100100000001010010001111101011010", "00000100000010100010001000100001010000000", "11100011000000001010000000010000000100001", "01010001000010010000010010100101110100111", "01001000001000010000100000000000000101000", "00101100000001000100100000011100010110100", "10100000010110000011000001100100101010000", "00000000100100100000000110000000111111001", "00000010000100000110110111000101101110001", "00100000111001011000011000101101001011011", "10010100100000010100010110100100011101001", "01000001000100011010000100001000011000000", "01010000010000011000000110110010101000010", "11000110000111101001101010010011001011011", "10001000000101110000001011000100010010010", "00000001001010000001000000101101100000000", "00011000101001000000100010010011010000000", "00100000100000010100111110010000000010010", "00000011001000010011010011110000110000000", "10100100001110000001101001110001100110011", "11010000000100011001010100100101110010011", "10000000011011100001001001010100011000111", "00100100011010111011100000100000011000000", "01000000101000001000110100010001010001100", "00010100100110100100111010001000001010001", "10001001000000110011110101001001001000000", "10100001000101000100000000110011000010000", "01100101101110001100001100000001110101100", "11100000000000110010000000001000011010000", "01110100001100010110011001011100110000001", "00100100111000100100111000000101010101101", "11010101010011001010101111000111100000000", "00100000111111110000000110110010000000111", "00001111011010000000010000000100100000001", "10100001111100011001011000101010000000001", "10100010010110010000000001000100100000111", "01000101000000000000000101000100101001011", "00100100000100111001011100000000001001100", "01001100011110010000011100100001101111100"};
    int k = 40;
    vector<string> guards = {"28 23 27 31 18 36", "13 7 22", "6 29 5 22", "28 3 17 8", "8 17", "24 10 27 7 12 8 13", "", "6", "33 25 26 21 35 38 34 31", "8 23 32", "10 22 38 23 4", "", "15", "39 20 21 29 24 25 4 5 12", "25 10 27 33 21 31 23 0", "38 7", "8 4 24 13", "21 11 37 30", "13 23 18 24 17", "6 32 9", "11 32", "9 23 4 7 37", "31 17 6 36", "24 7 12 11 37 21", "34 30 11 35 24", "9 0 22 11", "28", "9 13 0 28 25", "35 5 17 4 9 24 16", "17 20 14 33 25", "15 14 32 24 9 11", "", "14 7 32 28", "1 25 32 19 10 11 38 36", "36 17 28 24 15 1 26 29", "11 7 23", "4 15 23", "", "25 19 16", "15 25 38 11 27 36 29 13 0", "25 0"};
    vector<string> agencies = {"29 36 18 12 20 8 28 27 23 31 22", "29 25 8 13 22 7", "6 31 27 0 25 29 13 30 7 22 5", "3 17 7 8 10 6 28", "19 29 13 7 14 17 12 32 8", "7 24 10 28 27 12 3 8 22 13 15", "30 12 9", "6", "26 38 31 21 33 39 20 17 34 13 25 32 35", "8 32 20 19 25 35 23", "7 4 10 22 33 11 25 23 24 38", "3", "15 39", "24 12 39 0 29 5 37 20 25 32 4 21 38", "27 21 10 33 6 25 26 4 38 23 0 31", "13 35 19 12 16 38 10 8 26 7 18", "16 8 20 4 13 18 24", "16 9 26 21 37 7 30 11", "13 30 22 14 17 28 23 25 18 24 32 1", "32 9 6 30 37 20 12", "15 32 28 11", "3 31 23 37 4 9 7 15", "17 29 6 13 36 27 23 0 31", "29 0 10 2 15 24 12 11 7 35 37 21", "16 31 15 34 10 30 35 7 23 11 24 8", "11 9 22 23 0 20", "7 5 23 20 6 28 27", "28 2 21 13 9 25 4 19 14 37 0", "24 5 19 10 35 16 29 0 4 9 17", "22 20 17 14 3 5 33 21 25", "17 6 14 37 24 39 32 9 15 21 11", "18", "32 18 14 26 7 16 28", "23 20 38 10 25 4 32 36 1 19 11 0 24 21", "23 26 1 7 25 36 20 0 17 24 28 15 22 29 12", "23 22 7 11 24 20", "15 23 20 4 30 9 26", "30 21", "25 19 23 38 7 30 16", "33 29 15 24 11 25 36 30 13 10 27 38 22 0", "0 38 23 25"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 2113;
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<string> cities = {};
    int k = 49;
    vector<string> guards = {"19 14 27 45", "12 6 14 17 37 1 34", "16 34", "10 39 23 9", "", "43 21 24 1 22 45 37", "47 7 35 30 40 18 21 41", "5 26 24 25", "35 7 40 15 33 0", "29 17", "27 41 4 33 12 32 28", "0 7 41", "29 28 36", "10", "32", "38 2 21 6 34", "38 22 5 18 12", "0 15 18 26 46 40", "39", "14 11 17 32", "26 8 23 30 38 37", "47 9 1 6 34 12 14", "30 1 2 29 9 48 15 26", "6 13 40 27 29 42 4 24", "41", "", "13 30 25", "15 29 14 5", "", "25 6 8 46 18 31", "", "20 22 11 2", "18 46 42 28 10 30", "16 38 43 18 23 36 37 9", "32 45 34 8 29 28 44", "1 41 38 29 33", "42 18 9 6 21 44 12", "0 47", "11 35 6 24 16 19", "38 13 3 10 5 6 12 36 44 24", "33 35 40 12 44 25 38", "42 26 40 34", "37 42 1", "24 35 25 13 19 16 10", "23", "", "37"};
    vector<string> agencies = {"45 2 33 47 9 10 27 19 16 14", "37 17 6 20 1 12 22 14 34 23 42", "10 48 21 1 15 26 16 34", "35 39 9 10 23", "1", "24 37 22 28 45 42 1 43 21", "40 14 35 36 10 16 47 21 9 41 30 7 18", "14 25 12 26 24 38 5", "15 23 42 7 0 35 4 40 26 16 18 33 22", "17 29", "33 32 12 27 0 28 4 17 41", "37 7 2 31 0 46 41", "39 28 46 29 36 22", "10 6 40", "4 48 33 15 32 13", "21 16 7 34 2 47 6 12 39 38", "5 0 22 16 18 38 26 15 24 7 29 10 12", "47 46 18 40 22 6 0 36 15 27 39 26", "34 8 39 23 27", "30 32 11 45 14 17 19", "30 15 12 35 38 21 8 26 37 23 40 11", "22 14 9 44 47 24 21 12 19 34 6 1 45", "48 6 30 2 41 1 29 44 26 27 4 15 9", "7 37 30 42 4 29 36 27 40 14 6 24 13 43 0", "41 42 0", "14 40", "5 13 12 38 25 23 30", "8 27 14 33 29 5 28 15 44", "4", "1 31 18 25 27 35 43 6 46 8 40 17 2", "21 24 13", "27 11 24 2 22 19 44 32 16 20 0", "40 10 28 33 20 18 42 25 47 30 19 1 46 38 4 45", "37 23 38 18 43 9 21 1 16 36", "16 44 1 29 8 34 40 5 32 45 28", "29 39 22 31 41 12 1 33 0 38", "42 21 6 43 10 12 18 9 30 44 1", "0 47", "16 35 18 19 25 45 24 11 41 6 12 3", "10 9 19 34 38 36 8 12 6 5 3 44 13 35 24", "12 38 35 40 45 25 33 44", "42 3 26 40 27 34", "42 31 43 0 40 5 37 18 21 34 1", "25 16 23 13 10 8 19 35 24 45", "42 23", "", "16 23 41 37 42 13 6 20 9 0 39"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1945;
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<string> cities = {"00100001000010011000101000010010010100000", "00000000001000000000101000101001000010010", "10001000100100001110100001000000000111110", "00000001100000110000100000010010110100010", "00100001001111000000101000101001110000000", "00000000100010011000100010100100000010000", "00000000000000101010001000010010000000000", "10011000011001001000000100000000010000000", "00110100001010100000010001000001000000001", "00000001000110000000000000000100001000110", "01001001100000100001000000010100000000001", "00101000010001100000000000001100110100000", "10001100110000000010100000100100100010011", "00001001000100101100000100000000000100001", "00010010101101010010000101100010110000000", "10010100000000100000001001101000000000110", "10100111000001000000000110100000001100010", "00100000000001000000000000000011110100000", "00100010000010100001010001110000000010000", "00000000001000000010000100101000000000000", "11111100000010000000000000000000100100000", "00000000100000000010000000000000000000000", "11001010000000010000000000001010100000000", "00000001000001101001000000011000001010101", "00000100000000001000000000111010111100000", "00100000100000110010000000011000000100100", "01001100000010111011000010000000100001010", "10010010001000000010000111000100111100100", "01001000000100010001001111000000001011000", "00000100011110000000000000010000100011010", "10010010000000100100001010000000010010000", "01001000100000000100000000000000000010000", "00011000000110100100101010110100000000000", "10011001000100100100000010010010001000100", "00000000010000001000000110011000010000100", "10110000000101001100100011010000000001100", "01100100000010000010000100001111000000110", "00100000000000000000000000101100000100001", "00100000010000010000000101010000011110000", "01110000010010011000000000100100000010000", "00000000101011000000000100000000000001000"};
    int k = 45;
    vector<string> guards = {"40 3", "35 27", "", "3 42 16 25", "1", "8 13 22 17 18 4 43 31 7", "19", "30 26 44 20 14 31", "37 38 39", "35 27 40 19", "8", "31 19 35 5", "23 31 25 27", "36 33 35", "32 12 40", "36 19 43 27 28 5 15 29", "37 34 7 43 1 23", "43 19 35 40 31 1 44", "36 32 33 41 6", "27 7 23 40 11", "17", "4 20 31 11", "41 33", "33 15 8 0 14 35", "32 18 44 22 20 15 5 26 37", "32 7 25", "42 16 15 37 2", "37 40 4 41 8", "9 4", "34 38 17 29 26 7 2", "34 5 1", "40 19 2 7 44 16 17", "17 10 7", "37 21 43 34 2 7", "17", "36 16 37 23 24 18 26", "", "11 6 33", "35 36 11 43 5 10 0", "44 33 21 36 6 7", "32 27 22 20 14 12 39"};
    vector<string> agencies = {"3 27 40 14 16 33 6 7 18", "32 27 18 35", "", "41 43 18 42 14 3 30 37 16 25 31 19", "0 1", "4 41 8 13 17 18 22 7 38 19 25 43 31 36", "19 34 33", "14 16 20 32 37 26 30 44 23 31 43 38", "38 37 39 14", "35 40 0 3 27 19 18 16", "8", "5 37 7 35 31 11 19 32 16", "27 23 25 13 31", "35 0 36 2 42 33", "13 12 40 30 32 29 26", "11 0 9 5 36 15 43 19 33 28 29 27 21", "24 23 25 1 43 12 7 37 13 34", "31 16 1 19 20 43 35 39 30 7 40 32 44", "40 20 34 32 41 36 6 33", "0 7 6 11 40 23 19 27 39 38 32", "17", "39 31 12 20 33 11 4", "41 33", "31 34 14 39 0 15 41 23 36 33 35 8 13", "16 26 11 37 44 22 17 32 15 5 18 20 33 39", "29 5 33 37 25 14 32 31 39 7", "16 27 25 19 30 15 42 2 18 17 31 37 7", "36 8 41 32 37 14 43 24 40 4 16", "37 33 14 4 18 19 31 44 9", "41 27 16 29 7 2 24 33 26 34 38 17", "13 1 5 26 18 34 37", "40 17 44 16 2 19 20 7 29", "17 10 37 7 5 13", "17 23 2 25 21 43 37 4 34 7", "22 17 33", "26 12 24 27 36 34 18 28 42 37 13 6 23 16", "", "39 11 6 26 10 33", "37 15 32 0 35 10 5 11 30 36 24 43", "6 23 17 36 33 44 1 7 21 18 28 42", "15 27 22 12 32 41 14 39 20 8"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1516;
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<string> cities = {"0000010011010101001001000000000000000101000", "0000000000001100111100000100000001101010000", "0000001001010000000000000101000000100100000", "0000000000111000000101100000000001101100110", "0000010001011000001000100000000000011010010", "1000100000000000000001100000000001010000010", "0010000000000010100100000100000010000101000", "0000000000010001000000000000010000010000010", "1000000000000000000010000000100000110100000", "1010100000000000000011000000000010101000000", "0001000000000000000100000000000001000100000", "1011100100000000100000000011010000010000000", "0101100000000010000000000000000000100001000", "1100000000000000000010000000001011001010000", "0000001000001000010000000000100010100001000", "1000000100000000000011000010010010000000010", "0100001000010000000100101100100100001000010", "0100000000000010000000000101000100011101000", "1100100000000000000100100010000100000010000", "0101001000100000101000010010101000000000000", "0000000011000101000001001000000100000000010", "1001010001000001000010000000100000000010001", "0001110000000000101000001100010000011000000", "0000000000000000000100000001000001000000010", "0000000000000000100010100000100000100100101", "0110001000000000110000100000001000000010001", "0000000000010001001100000000100000000011000", "0010000000010000010000010000011100000000100", "0000000010000010100101001010000000000010000", "0000000100010001000000100001001000010000011", "0000000000000100000100000101010000000101000", "0000000000000000111010000001000001001000100", "0000001001000111000000000000000000000000100", "0101010000100100000000010000000100000001001", "0111000011001010000000001000000000000000010", "0000110110010000010000100000010000000000100", "0101100001000100110000100000000100000000000", "1011001010100000010000001000001000000000110", "0100100000000100001001000110100000000001000", "1000001000001010010000000010001001000010100", "0001000000000000000000001001000110010101000", "0001110100000001100010010000010000100100000", "0000000000000000000001001100010001000000000"};
    int k = 50;
    vector<string> guards = {"46 17", "17", "40 46", "40 38 7", "36 38 39 40 37 22", "", "4 47 29 1 25 36 0 26", "23", "39 20 1 40 11 14", "28 6 21 46 39", "22 4", "34 16", "21 38 43", "35 41 1", "15", "19 34 23 42", "44 8 24 13 43 23", "9 14 4 29", "3", "14 18 21", "29 30", "13 35 10 7 0 3 41", "44 23 38 47 18 39 36", "48 15 25", "21 45 12 1 5 19 33 43 30", "", "47 31 7 28 46 1", "23 24", "23 33 43 26", "19", "", "42 15 11 33 18", "28 22", "", "43 3", "8 24 28 15", "45 46 4", "45 29", "40 38 43 45 37 18 3 24 13", "2 46 44 4", "25", "12 49 10", "2 34 28"};
    vector<string> agencies = {"46 23 17 39 21", "39 17", "40 46 29", "36 49 31 38 21 40 7 33", "13 36 39 37 12 40 38 26 19 1 9 22", "26", "47 32 41 1 26 36 29 0 4 3 7 25 31", "23 49 1 20 9 34", "20 14 11 46 40 1 39", "28 48 6 39 46 44 21 43", "12 32 34 21 16 4 22", "16 34 7 29 33", "2 21 43 14 38", "35 1 41", "3 15 9 42", "23 34 19 42", "13 19 8 10 47 24 44 45 5 23 43", "14 31 9 22 19 4 0 29 10 40 49", "11 3 32", "4 18 14 46 40 21 43", "30 39 4 40 29", "3 16 19 36 31 13 41 30 14 21 0 35 10 7", "44 23 25 5 16 39 36 43 47 37 38 18 6", "48 25 15 27 35 49", "30 21 45 12 43 19 5 1 33", "6 42 35 4 43 38 28 48", "47 31 7 1 48 38 9 28 43 46", "29 23 16 24", "43 18 15 23 34 26 45 33", "19 13 40 4", "20 38", "15 25 18 11 33 48 35 42 24 6", "47 6 31 48 28 22 1", "", "43 3 16 35 22 24", "15 10 8 12 26 28 19 24 35", "10 44 25 40 46 5 45 37 29 49 4 39", "38 29 45 2 3", "11 1 3 6 43 24 13 18 45 47 40 38 37 25", "21 26 4 11 49 46 24 2 44", "25", "12 49 14 1 11 10", "33 28 34 31 2 16"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1121;
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<string> cities = {"0000000000100010000000001000000010000110100", "0001000000000100000010100001001100100000101", "0000100000100111000101000000000000010110100", "0100010011010100010001100000000100000100000", "0010000000000000000001000010110000110101000", "0001001000010010010000001000011001010001000", "0000010110010010100000010011001000100100000", "0000001000000000000010100010010001000101001", "0001001000000101010010000001000010000001000", "0001000000000001000001001110001001000011000", "1010000000000000010110100110000101001100000", "0001011000001010001000100000000000100010100", "0000000000010000100011010100100001100001100", "0111000010000000010010100011101001000001000", "1010011000010000101110001000100000010000000", "0010000011000000000010001011001100000000100", "0000001000001010000110100000011000110000000", "0001010010100100000100010001001101010100101", "0000000000010010000110000111000000000000010", "0010000000100010111000010010001001000100001", "0100000110101111101001110100000010001000011", "0011100001001000000010000011000010001000101", "0101000100110100100010000000000000000010000", "0000001000001000010110000001011010011001010", "1000010001000011000000000111010001000100001", "0000000001101000001010001001100001010000011", "0000101101100101001101001000110001000010111", "0100001010000101011001011100011101100010101", "0000100000001110000000000110010000110011000", "0000110100000000100000011011100000000011000", "0100011001000101110100010001000010011000000", "0101000000100001010000000001000010000000000", "1000000010000000000011010000001100100000000", "0000010101101100010100001111000000000100000", "0100101000011000100000000001100010000000000", "0010110000000010110000010100101000000000010", "0000000000100000000011010000001000000001000", "1011101100100000010100001000000001000001010", "1010000001010000000000100011110000000001001", "0000110111001100000000010000110000001110100", "1110000000011001010001000011000000000001000", "0000000000000000001010010110000000010100000", "0100000100000000010111001111000000000010000"};
    int k = 46;
    vector<string> guards = {"31 37 26 41 14", "13 45 7 19 40", "", "0 30", "13 18", "", "20 18 22 26 17", "25 15", "19 16 0 24", "5 37 39 12", "0 11 31 12", "25 5 32 12 14", "", "13 33 12 29", "24 26", "26 11 25 7 37", "16 18 31 43 14 7 34 11", "", "39 41", "36 9 8", "", "44 17 8 12", "", "35 24 6 5", "10", "13 26 25", "27 37 36 21 23 15 12", "23 42 32 3 44", "2 30 39 41 31 12", "", "2 29 15 33", "41 1 7 40 44 4 3", "", "36 10 29 19 21 33 16 26", "", "43 20 25 16 2 38", "29 13 37 28 20", "", "16 38", "28 31 38 24", "26 36", "11 45 42 8 14 3", "38 42"};
    vector<string> agencies = {"31 24 26 41 37 14", "19 16 40 13 7 45", "18 1 26 20 40", "37 30 33 14 28 29 13 26 0", "18 26 37 13 22 30", "37", "22 19 26 38 20 37 17 18 25 0 45", "7 25 14 40 23 15", "6 19 0 16 44 38 24 29 25", "5 8 0 37 39 12", "10 38 18 0 44 12 3 40 11 7 31", "12 5 32 14 11 29 8 25", "26 39 15 24 17", "41 0 30 40 33 39 23 12 29 13", "24 21 6 16 26", "8 19 37 43 2 33 11 7 26 5 25 32", "8 43 5 0 18 34 16 31 14 7 11 21", "", "41 39 32 9", "6 32 36 42 38 15 45 8 22 9", "", "12 17 8 44", "7 2", "22 35 23 13 24 31 5 2 6", "10", "13 25 26", "21 23 37 27 15 36 3 10 12", "44 11 13 42 32 23 33 20 3 30", "2 13 31 18 12 30 36 39 41", "", "40 29 7 2 15 33", "1 44 4 6 3 20 40 7 41", "", "41 26 19 36 16 33 10 21 29", "", "2 16 10 34 15 1 38 20 22 29 25 23 7 43 32", "29 37 25 1 20 28 23 13", "21 39 44", "16 38 43", "15 41 27 31 38 34 24 28 30", "36 17 26", "22 8 29 11 45 20 31 16 14 3 42", "18 33 43 38 17 7 42 16 15"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1441;
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<string> cities = {"00101110000000010100000001001100011100000011100001", "00000100010110110001000000000000000000100000100101", "10010000100100000001000100000010000011000100000011", "00101000110001100001000000010000000100010000001001", "10010000100001000100010000100000010001000110000001", "11000010000000000000110000000011001111000100001000", "10000100101100101010100111101110010100100001101111", "00000000001010100100011001001000110001011000001000", "00111010000001000000001000010000011000010000110011", "01010000001000000001000000000010001011011010101000", "00000011010000000001010000000000001001000001100000", "01100010000010010001100000000001100000100011010010", "01000001000100010000010000000100110010001010001101", "00011000100000110000000101001000001001110101010000", "01010011000001000001101010111101010110110000100111", "11000000000111000000001111010101010100001010000000", "00000010000000000001100011010001011000110000001100", "10001001000000000000010000101001010100100001001100", "00000010000000000000100010000000011101100000000100", "01110000011100101000000010000100011100000000110000", "00000110000100101010001110101001010001000011100100", "00001101001010000100000110010001000001001100010001", "00000001100000110000100000000110101101001000110100", "00100010000001010000110000000100000000000001001010", "00000010000000111011110000000000110000000010001001", "10000011000001011000000000000000100101000000010000", "00001010000000100100100000010001011001000100000000", "00010000100000111000010000100111000100000110110000", "10000011000001100100100000000100011001000110000000", "10000010000010110001001100011000011000011101011100", "00100110010000000000001000010000000100000100001000", "00000100000100111100110000110000011100010011001101", "00000001000110000000001011000000000000000001001000", "10001011100010111111100010101101000100000010000100", "10000100111001001011001000101101000001011000000000", "10010110000000110111001001010011010001000001010010", "00100100010010100000000000000000000001100000110010", "00101101011001000010111001101000001110010000000010", "01000010000101101110000000000000000010010000000001", "00010001110001101000000000000101001001100011110000", "00000001010010010000011000000100001000000100110011", "00101100000001000000010000111110000000001010000001", "10001000010110010000100010011001010000010101000000", "10000010001101000100100100000101100100010010001100", "11000010111000100001101000010000000010011000000010", "00000000100101000001011001010100000110011000000100", "00010111010010001100000110000111100000000001000011", "01000010000010101110101000000101010000000001010000", "00100010100100100000000100000000000111001000101000", "11111010100010100000010010000001000000101100001000"};
    int k = 43;
    vector<string> guards = {"11 6 25 28 4", "22 24", "29", "31 42", "8 11 12 35 37", "14 42 39 19 0 7 3", "14 27", "0 16 28 30 26", "5 16", "", "7 11 8 24 10", "33 19 14 15 0 20", "8", "11 23 19 15 28 40", "", "14 27", "39 14", "1 40 28 0 21 33", "", "30 12", "39 37", "13 25 42 23", "18", "31 29 28 33 36 10", "19 24 37 36 39 25 3", "22 4 8 2 38", "29 38 23", "13 38", "17", "25 22 41 26 16 18", "24 27", "27 13 42 21 9 4 32 35", "23", "", "18 15 11 31 6", "42 37 1 23 17", "17 14 23", "8 24 42 25 20 16 36 21", "21 7 42 6 11 15", "3 40 24", "", "", "26", "9 32 24 10", "16 5 31 40 14 19 8 28", "7 27 11 21 24", "0 5 16", "41 20 19 11 4", "29 34 19", "13 17 30 23 35"};
    vector<string> agencies = {"6 4 28 37 2 11 25", "24 22", "42 20 14 29 12 10 38 2 8 0", "42 31 2 38", "21 35 8 13 12 22 11 17 34 24 37", "27 42 13 0 2 3 19 39 14 29 26 7", "32 24 2 3 31 18 19 14 25 30 27", "3 21 30 28 26 9 16 0", "12 16 5 20", "", "41 24 5 27 8 10 15 38 7 11 9", "13 21 40 15 4 14 33 17 19 0 5 20 11", "42 8", "31 29 28 16 39 40 14 23 5 15 11 35 19", "", "24 14 6 27", "39 14 27 18", "36 28 0 1 4 33 11 8 22 17 40 21 34 37", "5 15", "12 30", "37 6 34 8 39 12 41 15 25", "25 42 13 23 2 10 7", "24 36 21 32 16 18", "29 33 3 34 31 28 14 10 36", "25 41 36 3 6 33 29 37 19 24 7 39 31", "4 38 22 25 12 2 5 8", "10 29 35 31 26 23 38 12 18", "38 13 12 39", "17", "6 16 41 26 12 22 25 23 14 18", "2 8 4 27 24 11", "26 13 21 4 42 27 8 39 9 40 35 32", "23", "13 19 29", "37 7 25 34 18 31 11 21 39 2 6 15", "1 28 36 31 37 9 22 23 34 5 17 42 26", "3 31 17 14 23 29", "21 31 36 8 28 16 20 0 42 25 24", "35 21 7 11 15 39 30 42 6 14", "24 3 40 27 39 21", "41", "35", "26", "34 10 32 18 20 35 21 9 24 26 38", "31 14 1 16 35 39 8 36 40 10 28 5 19", "7 21 24 27 11 15", "0 5 9 16", "11 2 37 17 20 38 41 40 19 31 4", "38 4 23 19 29 34 11", "17 35 27 5 13 7 30 20 39 23"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 2320;
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<string> cities = {"0000000000000000011000110000001000100001000", "0010010000000000011000000000000000000100010", "0101000100000100000100001000001010101000000", "0010100000000000000000000000100000001000010", "0001000000000001010110000000001000000100001", "0100001000100010000000100001100000010000000", "0000010011000001000000000110000000100111011", "0010000001000000000001000101101100000000100", "0000001000001100001000000001000000000001011", "0000001100100100010001000010000100110000000", "0000010001000110000110000010010100001001000", "0000000000000001001010000100001000111000000", "0000000010000100100000010010100010000010000", "0010000011101010010001000000000010000000001", "0000010000100100010100000010000001000110001", "0000101000010000001111000000000110000011100", "0000000000001000000000000000110111000001110", "1100100001000110001001001000000000000000100", "1100000010010001010000000100000000001000000", "0010100000100011000000000001001011100000000", "0000100000110001000000000011001100010000110", "0000000101000101010000000000100000001000000", "1000010000000000000000000000010000100000000", "1000000000001000000000000000110000010100010", "0010000000000000010000000110010010110000001", "0000001100010000001000001010110101010000000", "0000001001101010000010001100000001000001100", "0000010110000000000110000000000000000000000", "0001010100001000100001010100000101000000100", "0000000000100000100000111100001000000110000", "1010100100010000000110000000010000000000100", "0000000101100001100010000100100000000000110", "0010000000001101100100001000000000010101100", "0000000000000010100100000110100000000001000", "1010001001010000000100101000000000000000000", "0000010001010000000010011100000010000100001", "0011000000110000001001000000000000000000010", "0100101000000010000000010000010010010001011", "0000001000001011000000000000010000000000000", "1000001010100001100000000010000011000100100", "0000000100000001110010000010101110000001000", "0101001010000000100010010000000100001100000", "0000101010000110000000001000000000010100000"};
    int k = 45;
    vector<string> guards = {"4 17 8 32 18", "13 37 34 10 41 43", "40 42 12 6 24", "40", "11", "28 17 10 29 31 41", "19 26 14 38", "33 11 38 18", "39 12 37", "37 30 0 32 29 34 28", "3 17 27 23 41 38 33 43 2 14", "9 21 20", "", "12 9 41 17 15 4 26 1", "12 15 34 40 42", "14 22 34 32 2 35", "20 15 34", "14 37", "22 11", "7 4 9 6 16", "33 38 42 26 3", "11 42", "27 8 17", "37 5", "28", "1 32 37 43 35", "", "6 19", "9 23 4", "0", "28 26 6", "35 10 6", "18 40 30", "32 13 18", "13 36 11 10 0 30 16", "6 27 5 34 33 43", "10 40", "", "34", "10 31 36 25 34 38", "7 13 38 4", "2 8", "20 40 18 5"};
    vector<string> agencies = {"19 15 8 0 25 4 18 32 17", "13 10 37 2 27 25 34 43 41", "12 36 33 6 42 40 24", "40 14", "34 11 29", "41 10 13 35 28 39 4 29 17 14 31 26 12", "14 26 38 19", "38 25 12 11 4 33 18 26 42", "36 37 39 43 29 11 12", "40 37 30 28 0 34 23 32 26 31 5 29", "3 27 14 41 37 17 2 33 38 43 13 23 21", "31 9 40 23 26 15 21 20", "1", "17 12 41 9 4 38 21 15 1 34 26", "24 40 35 10 33 42 12 36 34 39 15", "9 32 35 22 14 11 34 27 17 2", "15 20 28 27 24 41 34", "37 14", "22 37 11 31 28", "16 31 4 14 6 37 27 30 7 9 32 38 29", "38 37 3 10 26 2 7 42 33", "11 42 43 24 44", "3 27 17 41 33 35 8 42", "25 31 37 5", "18 28", "17 4 19 32 35 37 1 43 7 27 36", "", "37 33 43 26 35 9 19 13 6", "9 36 15 26 19 30 23 4", "0", "10 41 11 26 6 5 29 28", "17 33 35 32 7 10 6 15", "4 30 19 23 22 16 2 39 40 18 31 20", "35 42 34 18 21 29 13 32", "26 15 1 13 0 36 32 30 21 8 16 44 11 10 19", "14 24 33 43 34 35 4 6 5 27", "38 1 40 10", "", "34 25 7", "10 27 24 34 33 25 36 42 38 0 31 43", "39 9 4 21 7 13 38", "8 2 11", "30 5 28 35 40 20 36 1 18"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1324;
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<string> cities = {"0001001000000001010101001000000011110000001", "0010011011000011000000110001110010001000001", "0100000010000011010110001100100111000000010", "1000000000010001110001001001110011110110000", "0000010010001110000000100011110110000100001", "0100100100000000101001001110100101101001110", "1100000001000001001000001010010010100110000", "0000010010001000000011000000000001000011100", "0110100101100000010101010010101000011001001", "0100001010000001100000000010000000000000000", "0000000010000110100011100000001110110000110", "0001000000000101011010011001100000100000001", "0000100100000101111111110000000101100000000", "0000100000111010011100001010010010100010101", "0110100000100100010110100001010000001000111", "1111001001011000001001000000000100100000110", "0001010001101000000010010010000000000101101", "1011000010011110000100001000001101001100000", "0000011000011101000100010000000010010001001", "1010000010001110011000101010100010010011100", "0010000100111010100001000010110110000001000", "1001010110101001000010100001000010010010100", "0100100000101010000101010001001000000110000", "0100000010011000101000101101010000100001110", "1011011000010100010100010010001100000101100", "0010010000000000000000010000001010000000001", "0000111011000100100110001001110010000001010", "0101100000010010000001110010111000001010000", "0111110010010000000110000011001010000001010", "0101101000000110000010010011001000101011000", "0000000010100000010000101101110110100100100", "0010110000101001010010001000001000000101000", "1111101000100100001111000110101000001010100", "1011010100001000010000000000000000100001100", "1001011000111101000000010000011001001000000", "1001000010100000001101000000000000000000001", "0100010010000010010000000001010010100111100", "0001101000000000110000101000001100001000011", "0001001100000100000101100001010010001001110", "0000010110000000101110011010110101001010001", "0000010100100111100101011000001011001010000", "0010010000100011000000010010100000000110000", "1100100010010110101000000100000000010101000"};
    int k = 49;
    vector<string> guards = {"46 7 33 40", "0 48 34 39", "35 41 12 18 24 10 25 14 43 9", "16 19 34 45 18 35", "43 10", "48 6 35 11", "31 14 46", "32 18 40 17 28 6", "35 36 1 15 26 18", "21 30 24 31", "7 22 15 44 24 18", "46 7 43 15 40 33", "45 13 39 44", "", "20 12 37", "8 6", "23 40 35 25 0", "36 46 11 1 22 27 48 18 35 32", "", "12 46 21 32", "33 31", "22", "25 16 29 39 46 19 9", "30 12 44 16", "32", "3 41 11 10 2 25 5 27", "3 42 29 20 25 5", "3 18 22 29 36 40", "34 11 20 7 47 23 46", "45 7 5 28 12 46 36", "26 3", "12 20", "9 31 27 43", "5 46 21 23 36 37", "", "4 40", "3 21 44 0 10 26 24 19", "1 11 29 40 21 30", "", "44 21 37", "10 8 40", "17 8 39 14", ""};
    vector<string> agencies = {"40 7 43 16 35 22 28 46 13 45 17 27 33", "46 31 5 13 19 39 37 25 22 38 0 48 26 34 28", "10 41 25 8 9 35 18 12 43 26 24 14", "18 23 30 37 16 35 45 19 34", "25 43 17 10", "44 11 45 24 35 48 37 6 15 39", "41 31 14 46 15", "41 19 18 23 1 22 28 17 40 32 0 6 26 4", "17 1 29 8 36 27 9 18 26 45 5 32 35 15 13", "5 31 24 38 21 30 0 7 40", "22 24 15 7 44 18 31 12 23 14 39", "9 29 40 33 43 7 2 15 46 8", "45 41 1 13 21 36 8 39 44", "", "5 39 19 37 12 28 20 43 2", "45 21 8 44 10 16 13 6", "2 23 40 7 25 0 35 36", "48 16 22 27 10 36 32 11 1 35 18 43 25 46 14 31", "", "46 13 21 2 12 32 48 47", "37 8 0 33 31 15 7 19", "22 47 0 1", "19 16 8 25 39 29 9 46", "18 36 44 16 12 0 35 43 38 30 14", "37 47 32 5 29", "2 41 11 8 32 5 34 10 3 37 9 27 25", "5 29 20 33 44 6 15 42 11 36 25 3", "3 12 30 47 29 40 36 38 22 18 16", "20 23 24 47 46 21 34 7 28 11", "5 19 46 12 30 36 7 45 8 28", "26 10 15 11 3", "12 20 38 27 32", "31 28 14 27 5 21 40 0 43 9", "31 46 43 5 41 17 34 36 21 37 10 23", "", "4 40 19", "44 10 21 19 26 3 0 24 46", "27 30 11 40 21 29 1", "", "44 4 37 16 21 7 35 36 34 18 30", "8 10 48 40 23", "39 34 17 4 8 37 14 10 7 23", ""};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 2195;
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<string> cities = {"00000000110111111000100010100001000000101", "00001011000010001010010010100001000000100", "00001001100000100000000100000001001010010", "00001100000000101000101010010001011100010", "01110110010001011000010000100111010010110", "00011001011100101000000010101000001100011", "01001001010100001000000000100111110110010", "01100110100000100000011000010001000001100", "10100001011010001000010000000100100000111", "10001110100100101100000000010000011001000", "00000100100011000001001000010011011011000", "10000110010000000010010000000011100001000", "11000000101001000000100011101000110001100", "10001000001010011100001100011100011101000", "10110101010000010001101100111000000001101", "10001000000001101000110100000001000110100", "11011110110001010010110110111000000100001", "00000000010001000010100110011001101010000", "01000000000100001100000000001101010010000", "00000000001000100000100110010001000000010", "10010000000010111101000100000000001100100", "01001001100100011000001011111000000000010", "00010001001001100000010001100000110010000", "00100000000001111101100000000000100000000", "11010100000010001101010000010010010001000", "00000000000010000000011000010010010100011", "11001110000010101000011000000010010001101", "00010001011001101101010011000110010000000", "00000100000011101110010000000100000100011", "00001010100001000010000000011000100000100", "00001010001100000000000011110001010100000", "11111011001100010111000000000010100111010", "00000010100110000100001100000101000110110", "00011010011011000010001011110010000000001", "00110100011001000100100000000000000011101", "00010110000001011000100001001011100011011", "00101010001000010110001000000001101101011", "00000001011111100000000010100001001110010", "11001001100010110000100000100100101000001", "00111110100000000001010001001001100111000", "10000100100000101000000001101000011110100"};
    int k = 46;
    vector<string> guards = {"6 24 4 13 19", "20 14", "20 17 28 35 34", "22 3 0 7 41 25 39 31 38 2 24", "10 8", "26", "", "5 36 17", "45 1 38", "18 39 7 40", "12", "38 8 21 14 0 13", "6 40 27 21 23 35 37", "14", "19", "25 10 8 26 42 16 17", "12", "14 43 4 26 9", "", "", "16 33 36 27 38", "31 11 22 20", "20 27 42", "37 4 30 1 34", "18 40 0", "", "26 22", "11 43 27 22 37 9 7 35 12 38", "12 21 33", "4 27 16 1 30 8 33", "4 11 22 0", "8 43 0 24 42 29 34", "3 0 1 9 28", "22", "25 41 4 34", "", "", "38 16 6", "37 30 18 24 42 40", "39 30 40 3 5 4 18", "17 36 43 4"};
    vector<string> agencies = {"13 34 14 23 6 0 4 1 18 19 24", "14 29 3 33 25 6 27 37 0 20", "11 42 16 17 34 12 9 41 28 33 35 20 23", "38 21 25 0 17 3 14 41 2 24 22 31 30 39 7", "17 8 19 4 10", "42 14 33 26 8 4", "", "36 42 17 5", "33 1 45 38 22", "18 5 30 33 7 29 36 4 34 39 2 40", "18 12 8 10 13 31 3", "35 21 38 43 0 13 14 41 4 8", "23 37 21 40 42 6 35 32 43 0 36 22 5 45 27", "25 8 34 3 9 37 14 10", "19 2 45 34 40", "15 25 22 34 26 16 45 2 5 8 10 39 17 42", "18 28 12", "14 4 26 36 9 42 43 24 33", "", "21", "31 26 16 33 36 23 1 20 38 11 28 32 17 27", "25 42 20 11 38 40 41 22 9 31", "20 37 44 34 42 27 29", "45 4 16 20 15 34 30 37 12 39 31 1", "40 22 10 37 0 33 18 35 7", "", "26 22", "7 9 37 11 22 43 35 31 36 38 12 34 27", "9 34 29 2 0 24 21 33 17 12 15", "1 45 16 27 37 30 44 33 8 42 4", "0 7 24 35 32 29 26 22 11 15 4 5", "43 24 42 29 34 0 8 14 41", "35 5 9 3 22 28 11 27 1 0", "5 8 22", "30 22 4 25 18 34 38 41 13 29", "", "", "22 38 0 21 6 37 16", "18 32 37 13 40 42 23 30 24", "3 27 21 18 22 40 39 23 4 12 5 30", "16 44 39 43 4 31 36 15 27 34 37 17 21"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1774;
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<string> cities = {};
    int k = 41;
    vector<string> guards = {"11 37", "17 28 10 1 9", "", "", "", "0 9 32", "8 17 29", "25 20", "11 15", "21 37 3 17 16 1", "", "", "9 32", "38 16 28 29 27", "7 18 39 31 9 27 1 26", "17", "8 34 32", "0 35 18", "26 38 29 22 21", "40 23 19 16 32", "19", "14 21 5 27 17", "29 35 31 17 2 9", "5 1 23", "17", "13 1 37 38 4 35", "12 30 19 32 10 4 9 37", "34", "23 40", "27", "40 18", "9 34 3", "36 32 13 37 3", "30 7", "", "20 13 34 23 14", "22", "", "37 33 38 31 2", "15 23 22 34", "38 4 22 29", "23 28", "33 1 25 9 13", "13 2", "9 18 35", "13 16 21 14 22", "1", "15", "32 39 33 19 0 38 26 4", ""};
    vector<string> agencies = {"37 11", "22 9 1 28 37 27 10 2 16 17 11 0 24", "", "", "", "9 19 23 0 2 5 40 28 33 3 32", "29 31 17 8", "10 17 13 20 35 38 25", "15 17 23 36 11 1", "17 3 8 28 21 34 36 37 15 16 1", "15", "38 36 12", "6 3 9 34 16 32", "30 38 28 27 7 29 23 39 16 2", "31 9 18 35 7 1 38 39 26 15 27", "17", "22 8 17 32 6 12 34", "0 18 35 12 9 13", "20 22 28 10 21 12 26 29 38", "19 34 23 17 24 40 16 32 14", "25 5 19", "17 5 37 21 27 2 28 20 10 14", "36 9 31 2 17 23 29 19 4 18 0 35", "23 1 7 5 38", "17", "1 37 13 38 35 4 36", "25 32 10 6 30 9 12 4 24 37 19", "34", "34 23 40", "27 29", "40 37 13 18 23", "12 9 32 34 23 3 19 30 37 6 16", "17 19 37 13 29 36 30 32 3 22", "3 30 7 19", "37", "37 34 13 20 1 14 23", "3 15 22 7 29 9", "26 19", "2 33 37 34 35 38 31", "34 23 31 7 37 15 33 40 8 22 2", "7 29 38 22 21 4", "22 11 19 40 23 35 28", "24 9 7 10 1 25 17 37 36 14 13 33 12 4", "7 13 2", "23 30 12 35 9 11 18", "21 22 16 14 34 30 13 12 29 8 35 27", "40 1", "34 15 23", "33 4 0 38 19 30 39 26 32 21", "0"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1810;
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<string> cities = {};
    int k = 41;
    vector<string> guards = {"0", "18 33 39 12", "9 38 24 4", "10 28 26 36 0 7 35", "26 25", "27 16 11 25 34", "37 22 30 12 5 23", "10 33 27 16 30", "21 26 2 4 17 36 13", "27 33", "8 17 15 4", "10 5 1", "", "1 38 11 30", "16 33 20", "35 14 9 10 28 5 16", "20 16 8", "8 34 28", "", "16 20 3", "2 16", "15 10 4", "12", "1 37 10 24 38", "", "4 33", "10 6 31", "0", "0 16 14 20", "32 2 15 19 12 29", "4 0", "22 34 27 39 19 40 8 11", "13", "5 17 2 27 38 40", "10 39 17 31 3", "36 10 9", "10 33 5 27", "", "29 27 8", "16 40 9 31", "38 30 24 15 40 5", "24 16 37 5 35", "10 3 31 17 14", "11", "36 17 28", "8 18 28 32", "4 12 24", "23 29 8 4 25 26", "24 11 6 32 33 4 28", "35"};
    vector<string> agencies = {"0 39 18", "12 39 33 24 18", "23 20 8 31 14 24 16 38 4 9 32", "26 0 36 29 13 28 10 23 19 7 35", "25 26 23", "0 25 19 20 34 16 24 11 22 40 38 27", "1 22 23 38 12 37 30 24 5 15 29", "27 33 24 18 30 10 16 26", "23 0 36 26 15 13 34 17 4 2 21 40", "27 34 33 22 7 31", "8 24 4 15 26 17 20 0 39 11 23 37 34", "10 28 1 5 23 16 19 33", "33 12 8", "30 4 15 1 7 36 9 11 38", "0 29 20 16 17 31 33", "16 9 11 35 7 37 28 30 14 19 13 5 10", "9 8 16 33 37 20 13 34 30 40 35", "34 28 29 27 8 31", "31", "3 36 16 10 2 20", "35 5 22 2 16 6", "15 10 4 33", "12 35", "37 1 6 16 38 24 25 10", "", "26 12 33 31 4", "10 15 1 31 29 40 24 12 6 4", "0", "0 20 14 21 16 32", "19 12 15 32 40 11 31 29 2 18 4", "23 8 25 4 22 34 0", "22 34 33 8 27 40 38 11 2 19 35 39", "13", "40 38 17 27 25 5 2 14 32 39", "35 28 17 39 33 36 10 0 3 7 31 19", "25 9 23 38 39 11 31 20 37 36 10", "10 22 19 33 5 27", "23 22 10", "20 11 33 38 4 29 8 36 27 25", "14 25 9 40 15 31 29 16 10 6 22 8", "5 36 40 30 38 15 24 11 34 31 2", "16 37 5 9 8 35 12 39 24", "38 31 14 15 1 3 10 17", "11 36 27 4 2", "28 36 17 22", "18 32 28 7 35 8", "12 24 11 33 30 14 4", "29 5 4 12 7 25 23 30 26 8 20", "6 11 16 22 38 33 4 28 24 32", "35 31"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1827;
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<string> cities = {"0000000100100001010001000100000000011011", "0011100111000000010000000000111001100010", "0101111000100100001001100001000010011100", "0110000001100100111000101010000110011001", "0110001100101100011000001010010011000000", "0010000101101111100110000001110000100101", "0010100001001011110011000110100000001111", "1100110011101010000000100000111010101001", "0100000101110010111110101100111101101111", "0101011110010010001100101100101010111010", "1011110110010011100101011001100001011000", "0000000011101110101010100010111011011000", "0000111100010011011010110101000011001001", "0011110000010010000000000010000000000011", "0000011111111100001011001100001100010101", "1000011000101000101110011100001010001000", "0001011010110001001000010100010010000101", "1101101010001000000100000000011000001101", "0011100011011011100000100001100010001101", "0000010011100001010000000011110000010010", "0000011010011011000001101100101010101000", "1010001000100010000010000010000101101110", "0011000111011000001010010011101001000100", "0000000000101001100000100010000010010000", "0001100011100011000010000010001100101101", "1000001011001011100010000010001000001000", "0001101000010100000101111101101001101011", "0010010000101000001100100010110000000100", "0100011111110000001110100011000111101110", "0100110110010000110100000001000010110001", "0100000111010011010010101110000011001001", "0001000010000010000001001000100011111001", "0011100101011001101010010000111101001001", "0100100010111000000001100010101110000011", "0100010111000000000011001010110100011000", "1011000001110010000100010000010100100101", "1011001111111001011011001110101110100110", "0010011010000010111001101001100000011000", "1100001011000100000101000010100001001000", "1001011110001110111000001010011111010000"};
    int k = 50;
    vector<string> guards = {"48 47", "43 40 22 0 21 28", "28 37 30 39 0 17 43 9 15 13 35", "49 11", "38 8 23 44 31", "25 2 24 0 13 43 23", "47", "39", "19 25", "15 12 20", "22 32 48 6", "", "11", "9 48 8 29", "8 45 11 44 32 1", "24 29 0 21 47 27 48 41 35", "19 7 14 42 27 44", "28 43 13", "18 8", "40 5 49 20 35 47 16", "16 31 36 47 40 11 7", "25 44 10 14 33", "5 25 18", "15 25 22 49 6 39 10", "31 42", "19", "48 24 6 38", "44", "", "3 4 13 10 11", "30 14 24 41 18 33 43 25 22 16", "27 34 15 36 24", "44 11 42 37 1 8 25 12", "36 4 30", "29", "12 7", "24 35 4 9 6", "39 5 0", "13", "46 31"};
    vector<string> agencies = {"31 48 13 47 15 42", "35 43 6 26 7 32 28 40 30 39 21 0 22 18", "9 14 30 43 35 13 15 37 28 17 0 12 48 39", "15 39 2 11 27 42 46 49 16", "8 19 44 29 47 42 31 23 48 38 5", "7 2 38 24 25 0 39 43 23 35 17 42 45 13", "42 47 21 34", "39 23", "36 17 25 19", "22 14 39 7 30 12 15 45 20 34 43", "6 48 21 45 32 5 22 28", "", "38 11 23 33", "45 32 9 29 48 8 10", "32 41 11 25 49 38 8 3 45 19 44 1", "20 46 24 47 14 41 0 21 35 29 8 27 3 48", "14 44 42 7 33 19 13 27", "38 43 28 13 49 12", "18 8", "20 49 47 45 40 5 39 16 25 35 44", "11 16 35 7 31 36 47 40 19 21 24 29", "25 10 27 8 44 41 17 48 14 33 11", "4 6 18 5 39 8 43 25", "10 25 7 39 6 49 5 26 32 15 36 22 0 24", "0 32 42 31", "19 23", "20 6 9 37 34 31 24 27 13 48 38 47", "47 44", "32", "10 4 11 49 3 1 24 41 30 26 13", "43 22 0 18 33 14 24 16 41 42 8 47 25 30", "15 7 27 36 24 1 2 34", "12 37 42 1 8 25 44 5 26 34 11", "26 4 31 30 6 12 23 36", "26 0 43 23 9 29 12", "7 12", "15 6 19 11 30 35 4 24 9 27 17 46 40", "29 39 0 5 15 14 32 19", "13", "26 46 28 31 37"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 2249;
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<string> cities = {};
    int k = 41;
    vector<string> guards = {"22 37", "35 28 29 17 10 7 15", "18 30 26 17 33 2", "3 32 35 21 27 8 23", "12 3 37", "26 23 40 29", "8 34 15 9", "", "18 22", "2 19 39 23 3", "28 6 19", "3 27 35", "17 16 1", "", "40 34 0 12", "37 33 32 6", "32 35 19", "13", "19 10 38 18 22 14 9", "", "12 11 35 27 30", "34 36 33 5 19 6", "15 2 32", "1 20", "22 21", "0", "23 38 14 39 11 20", "27 35 28", "29", "4 16 31 13 9 18 2", "28 15 4", "2 23 31 5", "40 20 38 0 36 37", "23", "18 28 31", "22 7 39 1 24", "31 6", "", "27 13 12 36 19 6 15 4", "29 8 14 25", "6 1 18 21 37", "3 17 13 6 34", "9 22", "7 13 5", "1 28", "38 30 6 26 37", "2 0 1", "", "", "0 36 8 32 27 30"};
    vector<string> agencies = {"22 36 34 37 3 4", "3 10 28 7 17 33 35 15 29", "17 30 9 18 26 0 33 2 7 1", "4 36 35 32 29 23 8 6 30 27 26 3 21", "35 24 37 31 3 12 25", "23 26 25 32 40 29 5 1 4 31", "9 6 8 15 10 32 34 31 7 24", "24 25", "22 25 18", "39 3 23 19 15 14 38 2 1 29 22", "40 21 39 32 28 6 19 38 3 16 8", "3 27 35 23 5", "16 1 17", "24", "0 34 14 8 21 12 40", "34 33 37 32 25 21 6", "32 35 20 19", "13 23", "32 14 4 19 7 22 10 38 24 18 9", "", "3 5 35 40 30 39 23 10 12 27 25 11 28", "24 21 33 6 5 0 34 36 19", "15 32 6 23 22 2 0 16 24 29", "20 1 3", "22 37 36 16 21", "9 18 0 40", "22 35 38 20 28 11 23 14 39", "35 17 19 27 31 28", "29 7 5 1 6", "18 27 8 22 2 9 31 13 16 4", "28 40 15 4", "4 7 2 5 23 30 31", "37 14 0 38 24 31 36 4 5 20 17 9 23 40", "23", "18 28 4 17 27 31 24 10 40", "39 0 1 24 5 13 30 7 22 12", "1 31 14 6", "19 23", "27 29 36 15 19 37 6 13 12 28 4 39", "36 14 8 16 21 29 31 25", "0 5 28 18 1 24 7 40 15 10 37 21 13 6", "34 18 12 6 22 3 39 17 13", "38 9 11 22 21", "5 13 11 7 33 17 27 21", "28 1", "35 37 19 27 10 30 6 38 26", "30 36 2 1 31 21 14 11 34 0", "15 40", "20 28", "30 0 21 8 36 28 35 27 32"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 2221;
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<string> cities = {};
    int k = 50;
    vector<string> guards = {"16 32 7 9 31 12 22", "37 9 33 20 21", "5", "9", "25 39 15 41", "18 47 46 35 13 6 21 16", "11 38", "", "48 38 13 47 35 43 39 29", "", "20 10 49 23", "22 28 2 31 19 32", "", "7 10", "4 27 25", "15 48 42 36 14 34 8", "19 14 13 20 39", "5", "3", "19 11 27 16 44 3 24 32 14", "36 25 8", "41", "22", "3 1 17 9", "2 48 22 18 9", "34 49 39 2 26 14", "18 34 42", "5 36 13", "41", "15 30", "37 32 34 16 40 38 0", "15", "9 3", "7 9 8 35 4 17 10 3", "5 22 3 42 21", "", "32 20 14 26 7 6 11", "42 27 33 30", "", "30 2 32 47 15", "7 24 47", "37", "22 27", "49 45 39 19 15 7", "27 23 9", "24 25 43 4 35 15", "12 36 40"};
    vector<string> agencies = {"22 16 9 32 15 7 12 31 1", "0 23 25 2 37 35 22 9 20 10 21 33", "9 47 10 5", "9", "0 8 25 41 45 30 35 48 5 23 39 15", "21 11 47 14 16 35 46 6 37 18 31 22 13 42", "38 35 30 11 0 16 36 47", "26 3 12", "35 48 40 29 39 43 13 38 47 17 24", "", "49 20 14 7 10 46 19 23 38 21 29", "32 22 2 49 19 31 7 28 15", "", "14 11 42 49 18 20 23 7 22 10 30", "4 5 48 27 25 13 21", "33 25 30 42 34 6 48 12 14 13 36 8 15", "20 31 15 10 5 19 13 43 39 14", "5 4 26 22 7 23 46 16 28 42 35", "10 1 9 3 24", "16 19 44 32 40 14 27 3 11 49 24 36", "5 39 2 8 31 36 25", "22 41", "22 25", "3 9 6 20 1 26 17 4", "5 9 48 37 18 22 35 38 47 2", "29 34 22 37 14 39 26 49 41 45 15 2 4", "2 21 34 48 42 8 32 18", "5 0 8 18 44 21 11 36 22 3 1 20 13", "41 1 8 22", "0 30 15", "10 38 24 0 7 34 6 16 40 37 32 14 30 11 8", "15", "20 3 9 37 34 21 48 33", "9 8 7 10 31 49 40 4 3 17 35", "29 44 21 43 22 3 47 4 42 40 5", "", "48 26 14 11 6 32 7 20", "14 30 36 33 42 27", "", "32 30 47 15 2 44", "47 24 7 34 39", "14 37 41 13 29", "2 22 27 48", "48 45 25 17 14 49 7 23 31 2 39 11 15 19 43", "20 36 27 42 9 23", "15 10 39 35 25 24 48 29 4 22 43 42", "40 42 36 12"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1798;
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<string> cities = {"0000110000000101000011000110100000100000", "0000111010000010001000010000101000000011", "0000000000000010101101110000000100000000", "0000000110100010001100010000100000011010", "1100010100000000100001010000100110000000", "1100101101000010000010000011010001001000", "0100010000000100100000000110100100000000", "0001110000000000001000010000011000000010", "0101000000000000000000011010010010110001", "0000010000010000011010000001000101011101", "0001000000000100000000000110000000100000", "0000000001001010100000000000110000000000", "0000000000010000110000000000000010101001", "1000001000100001000100100000100100010010", "0111010000010000000101011000011011100110", "1000000000000100000001000100000010011000", "0010101000011000000000101010001100100100", "0000000001001000000011001000011111000001", "0111000101000000000100000110000001000010", "0011000000000110001010010100101000001100", "1000010001000000010101011000010000000001", "1010100000000011010010100001000010101000", "0010000000000100100001001011000010000011", "0111100110000010000110001001001000101000", "0000000010000010110010110011100110000000", "1000001000100001001100000000000101001000", "1000011010100000101000101000110000010100", "0000010001000000000001111000100000010011", "1101101000010100000100001011000000100011", "0000010110010010010010000010000000000000", "0100000100000010110100010000000100000100", "0010101001000100110000001100001000001010", "0000100010001011010001101000000000000000", "0000010001000010011000000100000000111010", "1000000010101010100001010000100001000010", "0001000011000101000000000011000001000100", "0001010001001001000101010100000101000010", "0000000001000010100100000010001000010000", "0101000100000110001000100001100101101000", "0100000011001000010010100001100000000000"};
    int k = 40;
    vector<string> guards = {"15 20 4 2", "", "27 24 37 7", "27 5 25 14 2 26 30", "24 2 25", "9 26 18", "11 19 21", "35 9 19 21 28", "11 3 36", "0 21", "35 0", "27 18 17", "30 26", "14 13 21 5 31 38 1 24 39", "31 35 29 0", "31 13 3", "17 24", "8 17 4 13", "20 26", "10", "34 27", "24 16 14 8 12 36", "20 31 16 9 33 3 23 0 39", "24 30", "39 25", "27 28 25 14 38", "25 24 12 13 18 27", "38 37 30 5", "39 0 1 24", "28 10 7 18 6 31 26", "37 8 2", "3 18 4 35 28", "23 15", "6 16 21 37 7 19", "1 27 14 39 37 31 11", "", "", "14 7 32", "2 37 22 34 10", "30 26 35 29 9 38 34 25"};
    vector<string> agencies = {"30 21 25 26 19 20 2 4 16 15", "", "27 24 7 37 35 29 4 25", "29 5 18 14 27 2 26 17 24 6 30 10 25", "8 24 2 4 21 25 11", "17 26 21 14 8 18 1 9", "37 34 19 25 11 29 6 28 21", "6 28 35 9 23 19 18 21", "36 11 3", "21 12 1 34 20 38 30 13 39 6 2 29 15 0", "0 20 35", "27 17 32 18", "15 30 34 35 5 25 22 26", "21 24 25 37 38 14 9 5 31 39 1 13", "5 31 29 20 35 0", "25 1 9 26 13 3 31", "20 6 14 17 26 18 39 2 10 24", "13 8 17 4 23", "14 26 20", "14 10 5 13 17 1 38 22", "31 19 34 27", "11 8 16 14 24 12 19 33 26 36 30", "23 8 39 16 20 1 33 0 24 31 9 3", "30 24 9 28 27 4 26", "18 39 25", "25 27 14 38 5 32 28 30", "24 1 27 12 2 18 13 21 25", "37 30 5 20 1 0 7 22 27 14 39 16 38 3", "5 1 9 2 30 39 0 24 8", "28 31 6 7 26 10 5 20 18", "35 20 2 17 19 37 27 29 8 16", "26 35 18 28 27 14 29 32 38 4 3", "15 23", "16 35 37 26 19 7 27 21 4 28 6 2", "31 27 4 39 14 37 38 9 10 1 11", "", "30", "14 6 13 7 32 2 34", "37 30 18 2 25 34 22 20 10 31", "26 25 38 39 9 30 35 34 17 21 29 27"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1450;
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    vector<string> cities = {"01001010010001011100011000111111110100100101", "10100001100001000110100000000100000110100111", "01010001100100000001101100001000000011010001", "00100000010100001111110100000011000010011000", "10000111001000000001000000010000100100000010", "00001000011000100101100010101011010000000100", "10001000011010100011010101010101001011000010", "01101000001000010001000000100000000101001110", "01100000000110111101010001010000100110001010", "10010110000101001000110100001010101000001010", "00001111000010000000100000001000000100000000", "00110000110000010000001000001111000100101100", "00000010101000001100101011010010100001000110", "11000000010000111000100000000010000000100110", "00000110100001010001001000001010000001101001", "10000001100101100100001010100011110111011001", "10010000110011000000000100110100100101001010", "11010100100010010010100001001011010000100101", "01010010000000000100010010000010000011011100", "00111111100000100000010100010000001010100000", "01110100011011000100010100100100001000100101", "10010010110000000011100000100100000000000100", "10100000000110110000000100000000010000001001", "00110010010000001001101010001000101110010000", "00000100000010010010000100000001100010101100", "00000010100010000100000000000000010100000001", "10000101000000011000110000000001110000000101", "10001010100010001001000000000001001101001001", "10100100011100100100000100000100000000011001", "11000010000100001000110000001000010000010001", "10010100010111110110000000000001000010101001", "10010110000100010100000010110010000000000100", "10001000110010011000000110100000010010000100", "10000100000000010100001001100100101010000111", "00000010010000000001100100010000010011000110", "11001001101100011000000101010000000001000000", "01110010100000010011000110000010111001101010", "00100011000010111010000000010000001110000000", "11000000000101100101100010000010000010011100", "00110000000000010010000100001100000000100000", "00010001110100111010001010011010000010100100", "11000101000111000110110010100001111000101011", "01001011110011001000000000000000011010000100", "11100000000000110100101001111110010000000100"};
    int k = 48;
    vector<string> guards = {"4 37", "0 42 45 46 22 21 26", "", "", "39 46 1 30", "29 8 24 5 26 33", "20 32 47 15 39 33 35 23", "28 42 46", "43 19 45 33 9 8 15", "", "18 42", "1 19 7 22 0 12", "10 45 47 37 30", "26 34 0", "34", "8 31 22 38 25 4", "21", "", "37 47 31 3 43", "11 44 22", "42 7 29 10", "22 18", "44 43 46 33 40 34 11", "6 46 36 4 26 9", "31 9 14 38 13 8", "4", "", "7 30 9", "18 39 33 21 8 34 45 11 9", "27", "44 31", "18 41", "39 6 11 41", "19 43 6 38 15 18", "", "30", "", "25 26 36 20 9 22 12", "20 37 7", "37 12", "41 42 4 10", "5 8 33 45 26 34 31", "38 11", "23 34"};
    vector<string> agencies = {"37 41 4", "21 1 5 42 43 22 8 46 19 0 45 26", "", "", "39 9 1 30 29 46", "29 14 33 24 39 34 5 27 23 26 13 32 19 8", "21 30 47 32 5 20 35 33 39 23 15", "42 28 46", "13 33 8 7 45 19 43 9 24 15", "", "35 6 30 26 25 18 9 42 23 27 39 40", "17 7 22 37 30 12 43 41 19 0 1", "36 45 37 11 47 10 3 30", "34 11 40 0 44 17 26 43", "34 22", "22 8 29 19 9 31 17 4 25 38 16", "21 22 27", "", "47 43 20 29 3 24 31 40 37", "20 5 22 35 12 18 11 44", "10 20 42 29 16 7 39 1 8", "32 18 22", "43 40 44 34 23 46 5 20 33 42 11 24", "36 32 47 35 9 4 18 46 6 26 42", "2 23 31 14 20 8 28 38 13 9", "4", "22", "16 30 9 28 27 7 2", "9 21 12 34 11 8 18 27 33 39 28 45 24 3 35", "27", "3 9 31 44 7 16", "41 5 18 29 33", "6 12 11 41 39 17", "18 25 21 43 38 6 32 15 19", "27 34 44 17 23 35", "8 30 21", "21 22", "9 1 32 36 25 12 22 18 15 20 26", "20 14 7 37", "37 5 34 12 24", "7 20 15 37 4 42 10 41 16 33", "26 20 5 31 21 8 19 45 30 33 44 34 23", "11 47 31 42 28 38", "24 40 23 41 6 34 29 7"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1992;
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    vector<string> cities = {"0110101110000100111000000101100100111010", "1011101000110001100001110010100011011000", "1100001000001000100010101001001000011001", "0100101000101110010010101001011100100101", "1101000101010101100000001001100000001010", "0000001001001101011011001000010011010100", "1111010000001001111111111110000011101010", "1000100001000110011110000100000111110100", "1000000000011110101010010111001101101000", "0000110100011100101000001110110101000010", "0101000000000011001110010010111011011001", "0100100011001110110100010011011010001101", "0011011011010100000101001101110111110000", "1001110111011000001000100001000011100001", "0001000110110001001101011001001101101001", "0100111000100010111111001010001100010100", "1110101011010001000000000101110100100110", "1001011100010001001011111100001011110110", "1000011111100111010100111101100100000110", "0000001100111011001010011011010110101000", "0011011110100001010100101100110001001000", "0100011000001011010000110110001000000001", "0111001000000100011011001110001010011101", "0100001010110010011101001001000100010100", "0011111001001011011110110100101011101000", "1000001111001000111011101010010000111110", "0100001011110001000101100100101100001100", "1011100010011110101100010000011001011000", "1100100001101000101010001010010000101101", "0001010001111000100110000101100101000101", "0011000010110011010001101011000110110110", "1001000111001011101100010010011011110011", "0100011100111100010100101000001101000000", "0100011111101110010010001001010110111000", "1001001110001110110100001100101101001110", "1110010100101001010000110101001101001000", "1110101010110010000110101111100001110110", "0001010100010001111000110110111000101011", "1000101001000000111000000100001100101100", "0011000000110110000001100000110100000100"};
    int k = 40;
    vector<string> guards = {"38", "", "", "33", "19 38 3", "1", "37 22 23 24", "3", "27 7 25 39 38", "27 12 21 26 19 16 17", "37 8 19 15 16 3 25 35 33", "3 17 11", "", "29 7", "24", "27 39 29 12 25 17", "10 30 12 32 2", "", "28 27", "9 31 16 29", "2", "2 21 8 6 18 1 26 10", "8 28", "33 24", "1 10 38 24 0 29 17 20", "29", "0", "32", "27 21 10 0 37 36", "6 27 22", "11 22", "17 39 1 28", "3 35 20 1 19", "", "", "29 6 24 30 12 23", "14 9 26", "30", "16 17 32 22 31 35", "6 18 37"};
    vector<string> agencies = {"38 33 9 6", "16 28", "", "33 36", "3 19 38 17 9 16 6 37", "1 7 2 6 18", "35 23 4 24 13 21 22 37", "0 28 3 12", "39 33 6 15 12 8 7 27 25 11 28 38", "12 18 36 21 17 0 26 19 16 38 27", "25 32 15 19 3 8 10 33 12 35 27 16 37", "9 17 3 20 5 23 21 7 11 24", "36", "38 6 7 4 29", "2 24", "1 12 27 17 13 25 39 9 29", "7 32 13 10 8 30 12 2", "15 36 10", "28 9 18 1 27 35", "13 11 30 31 1 29 10 9 16", "2 16 30", "16 8 33 18 1 17 15 23 6 2 26 21 10 11", "8 28", "33 3 22 2 21 24 6", "17 29 10 1 38 34 30 24 0 20", "8 29 1", "10 0 7", "16 20 39 37 32 28", "8 27 10 25 5 7 21 37 38 35 0 39 36 11", "22 27 23 6", "32 22 11", "6 18 39 1 17 28 38", "3 10 35 39 1 11 32 20 36 19", "", "", "7 6 24 28 34 18 5 12 29 30 23", "14 27 9 26", "21 30", "32 11 9 15 31 17 35 16 22", "24 12 6 18 35 37 9"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1874;
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    vector<string> cities = {};
    int k = 44;
    vector<string> guards = {"10", "39 43 12 24 35", "22 38 29", "1", "42 37 14 38 35 18 43", "21 8 0", "35 41", "37", "30 5 11", "35 39 29", "", "40", "27 23 18 34 1 41 3 14 38 35 42 9", "2 27 31", "7", "17 37 32", "9", "31 17 43 34 27 6", "32 2 5 18 7 37 10", "35 43 22 15", "1 9 16 37 35 29 6 4", "10 12 6 7 25 40", "1", "18 0 29 5", "39 15 12 31", "32 7 36", "", "17 3 23 36", "", "28 8", "", "25 12", "40", "41 9", "22", "15", "20", "7", "29 12 41 25 4 21", "", "31 42 22", "21 5 2", "31 6 5 10 2 0 33", "13", "37 15", "37", "5 7 17 15 11 32 34 19"};
    vector<string> agencies = {"19 3 10 28 32", "28 35 39 22 24 15 12 43 21 18 6 23", "40 22 30 38 29", "1", "42 0 38 41 35 3 22 18 37 12 40 43 5 14", "21 18 3 13 8 1 42 37 0 16", "41 6 35", "37 32 4", "16 41 27 5 2 30 11 28", "39 22 29 35 42", "", "40 17", "34 8 41 38 9 42 3 10 23 14 27 18 2 1 35", "27 31 2", "7 32 20 33", "34 17 1 37 32", "9 31 12", "27 34 12 40 39 41 6 43 17 31 19", "37 25 7 33 32 2 21 5 18 0 10", "35 15 43 32 26 14 28 10 9 31 22", "4 18 24 42 6 37 29 16 35 9 1", "43 5 36 40 10 6 14 21 41 7 25 35 12", "33 5 21 22 36 1 9 19 38", "29 5 39 42 3 0 24 21 41 32 18 16", "39 12 31 15", "27 32 7 3 6 36 9", "", "17 36 23 3 18", "", "28 22 8", "", "13 21 25 12 34", "28 14 8 40", "41 30 37 9 12 3 31", "22", "15 23", "9 12 20", "29 42 7", "29 25 6 18 27 26 4 41 13 12 34 1 42 19 21 36", "10", "5 3 31 42 22 14 18", "0 21 2 30 5", "39 6 31 5 10 17 33 0 1 2 18", "13 11", "15 37", "36 37", "32 5 7 11 34 35 15 17 19"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1222;
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    vector<string> cities = {};
    int k = 50;
    vector<string> guards = {"", "30 14 48 43 21 18 40", "22 4 23 44 27", "30", "33", "0", "1 34 32 5 11 31 19 44", "29 13 41 0 21 46 38 5", "44 48 19 41 4 25 16", "11 1 12", "32 43 49 3", "27 13 1 17 7", "4 28 26", "47", "19 22", "17 47 29 28", "13 41 4 1 11 28 16 9", "", "49 1 9 4", "14 46 0 12 16", "", "35 23 32", "26 12 48 35", "4 8 28 21", "40 28 25", "25 29 44 16", "31", "5 3 12 27 45", "", "8 40 14", "3 18 7 47 45", "22 18 2", "18 36 29 7 22 6", "15 48", "40 20 8 36 42 3 23", "23 13 19 49", "44 18 24", "12 42 41", "38 28", "47 41 40 6 9 30", "21 16 4 41 37 8 40", "30", "0 21 19 41 49 1 33", "32 28 20", "33 18 2 48", ""};
    vector<string> agencies = {"43", "30 28 14 18 48 43 5 21 24 49 40", "23 49 25 2 22 27 35 4 33 45 44 13", "31 30 32", "33 26", "33 1 0 8", "11 19 6 31 32 1 4 44 5 49 34", "10 13 38 0 46 5 21 16 29 23 41", "19 4 41 11 44 16 6 25 48 20", "49 1 46 8 11 3 29 31 39 12 0", "32 37 49 44 30 43 29 3", "17 11 43 7 27 1 13 26", "9 28 20 26 4", "31 2 26 47 44 10", "1 11 22 19", "2 17 43 47 29 45 4 42 28 41 37 0", "27 13 1 48 37 16 41 9 28 34 4 12 33 11", "", "15 9 41 49 32 1 4", "16 17 7 45 12 37 43 14 46 0 34", "", "19 35 18 42 23 32 36", "12 39 48 35 30 32 26 24 40 36 23 15 0 20", "8 35 4 28 44 36 15 21 13 34 45", "21 28 25 40 29 45", "44 29 16 9 25", "8 43 14 31 39", "19 45 3 17 27 40 9 5 12", "37 38", "14 24 8 31 13 40", "25 34 40 47 6 19 43 7 18 45 3", "1 22 32 2 43 18 20 41", "7 6 22 4 29 18 46 36 25", "15 48", "40 42 36 20 23 28 3 13 4 8", "13 18 19 0 41 30 23 1 49 36 24", "21 24 12 44 18 48 34", "41 8 42 4 12 32", "28 38 19", "47 19 41 9 14 16 6 30 40 24", "7 37 19 16 4 12 41 24 20 40 21 45 8", "14 30", "5 27 1 49 46 41 21 26 4 36 33 2 19 0", "20 2 28 14 16 32 26 24", "48 16 35 33 0 7 18 23 40 2 45", "27 46 3"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1311;
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    vector<string> cities = {};
    int k = 45;
    vector<string> guards = {"13", "30 13", "15 1 16 12 40 8 19 42", "10 20 5", "21 26 43 1", "10", "34 9 13 20 28", "28 22 42", "", "1 30 16 0 36 20", "22 27 37", "", "", "31 3 7", "", "42 40 24 36 20", "8 29 1 43", "18 33 42 11 2 10 1", "40", "2 39", "43", "33 38 10", "", "", "7 4 34", "40", "31 33 0", "28 19 39 43 8 26", "40 38 44", "41 18 36 12 44 16", "27 42", "18 11 12 9 36", "40 24 4 9 16 11 30", "26", "42 39 20 26", "10 1 23 19 4 31 21", "1 21 23 22", "7 41 3 35", "29 8 3 12", "42 37", "", "3 4 42 11", "15", "41 25", "27 18 37 10 17 34 43", "28 40 21 14 41 12 26", "29 18 19 41 44", "28 13", "20 26 28 16", "19 27 11 2 28"};
    vector<string> agencies = {"13 36 26 2 23", "19 41 20 24 13 14 30 31 42", "28 8 3 16 29 15 12 1 19 20 40 25 42", "23 16 40 24 37 10 25 15 9 20 5 18 26", "1 26 43 21 32 6", "10", "9 38 20 32 34 24 13 28", "28 42 23 32 22 37 14", "8 41", "16 36 30 2 25 19 1 35 0 34 37 20", "41 22 27 35 39 37 15", "", "15 23", "32 7 8 10 40 14 17 2 44 31 3 42", "28 43 12 31", "39 21 42 32 2 24 20 13 5 40 25 34 36 14", "25 21 8 1 12 23 43 6 29 5", "14 30 6 31 18 33 39 42 10 1 2 11", "16 40", "2 39", "31 8 43", "17 34 38 4 6 33 42 8 10 9", "27", "", "4 7 34 12", "44 40", "6 31 33 0", "5 14 8 18 40 31 26 43 28 42 19 39", "40 42 38 22 20 31 44 5", "32 44 12 36 39 16 2 18 41", "12 42 27", "11 40 36 38 12 9 13 14 18 33", "4 30 9 14 40 33 13 11 32 3 35 44 43 16 24", "25 26 39", "20 26 39 4 18 29 28 42", "18 21 8 31 35 4 19 1 23 11 10", "23 21 40 1 22 10", "9 3 41 17 7 34 20 12 35", "23 40 21 1 29 35 12 24 10 39 16 3 43 8", "37 42 8", "33 29 34 15", "19 3 17 8 4 14 34 11 24 42 40", "14 41 36 15 42", "41 1 25", "34 10 18 17 27 40 37 43", "0 38 12 13 40 22 21 37 28 17 14 41 26", "34 44 1 29 18 19 41 27", "13 28", "30 20 31 26 28 42 16", "2 19 44 27 28 11 35 30"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 2022;
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    vector<string> cities = {"0010101010000000101000000100110100010000", "0011000010110011000000111000101000000000", "1100000001010010100000000001100000100000", "0100110000100001011011100001100000000000", "1001011010100010000010010001111110000000", "0001100100010111000001010101111000000001", "1000100000000001101100000000010000000100", "0000010011000100001000110010001001000000", "1100100101010000110001010000100000110001", "0010000110100001000100100001000001100000", "0101100001000000101001100010100000001001", "0110010010001000100000110101100000000000", "0000000000010001110000010001000000000100", "0000010100000000100000010100000000000001", "0110110000000000000100000110101100000000", "0101011001001000100001100000000010101000", "1010001010111101000101001000000000010000", "0001000010001000000000011001001000000000", "1001001100100000000000100000001000100111", "0000001001000010100000100100010000110100", "0001100000000000000000000000110100000000", "0001010010100001100000100011000000000000", "0101000101110001001101010100001101000001", "0100110110011100010000100001000100111000", "0100000000000000110000000101000100000000", "1000010000010110000100101000000100000110", "0000000100100010000001000001000110010000", "0011110001011000010001011010100000010010", "1111110010110010000010000001000000010001", "1000111000000000000110000000001000000000", "0100110100000010011000100000010101100100", "1000100000000010000010111110001010010011", "0000100000000001000000000010000101000110", "0000000101000000000000100000001010000000", "0010000011000001001100010000001000001110", "1000000010000000100100010011100100000001", "0000000000100001000000010000000000100000", "0000001000001000001100000100001010100001", "0000000000000000001000000101000110100000", "0000010010100100001000100000100100010100"};
    int k = 43;
    vector<string> guards = {"22", "26 25", "2 30 4 38", "7 3 34 14", "36 15", "", "27 23", "27 15 3 17", "31 14 30", "13 9 2 30 20 0", "17 37 29 16 12 13", "17 28 3 22 31 27", "19 3 27", "25 21 22 26", "23 9 8 2", "38 28 2 34", "11 2 10 1 14 13", "12 38 30 5 18 41 21", "16 18 3 38 31", "37 33 29 32 30 36", "", "13 35 3 17 27", "41 3 14", "38 32 8", "9", "8 32 27", "25 38 24 10 9 8 11", "13", "18 9 39 42 33 36", "17 27", "14 36 22 11", "6 5 37", "38", "36", "38", "34 42 11 20 32 26", "15 21", "19 8 26 28 11 24", "11 33 5", ""};
    vector<string> agencies = {"22", "2 26 25 0 35 12 22", "6 38 27 25 4 2 30", "14 3 15 7 39 34", "23 22 36 15 25 14", "", "27 23 4", "17 3 14 42 15 27", "14 19 30 31 4 2", "32 0 2 13 9 5 20 11 30", "17 36 10 13 29 18 12 37 16", "10 17 28 27 3 22 25 31", "21 36 6 7 19 27 3 34", "10 14 32 22 24 25 26 29 8 21", "9 8 23 27 15 38 2 18 13", "38 17 39 25 28 32 41 15 10 34 2", "11 1 14 32 41 8 10 13 9 2", "4 38 8 5 21 30 18 41 12", "6 38 20 25 3 30 37 10 18 31 16 9", "30 33 13 32 18 40 24 0 29 7 41 36 37", "3 34", "4 17 12 5 29 13 39 27 3 25 26 35", "41 14 40 3", "6 18 38 2 23 28 32 27 3 36 8 9", "8 9 17 18", "8 27 24 9 5 0 14 23 30 4 11 32 42", "8 34 6 2 25 24 11 20 38 22 10 9", "13 16 21 11 18 29 4 20", "8 40 36 42 39 9 11 18 33", "33 29 27 10 16 12 17 24", "20 34 22 18 16 14 11 3 36", "39 25 11 37 27 6 24 13 30 4 33 5 38 42 36", "38 33 37 25", "36 22 31 6 1 28 10", "4 5 38", "32 34 26 42 11 20", "14 15 40 21 23", "38 8 17 28 11 19 37 24 26 13", "16 33 14 11 5", ""};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1307;
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    vector<string> cities = {};
    int k = 40;
    vector<string> guards = {"38", "", "28 4 35 15 30", "21 11 35 12 1 9 39", "35 30 16", "12 22 10 9 15 28 18", "13 8 39 9 36 19", "10 29 18 31 28", "26", "37 13 8 2 9", "6 22 16", "20", "", "23 13 24 2 18", "8 37 22 11 31 39 4", "0 8 10 39 30", "37 39 11 25 0", "14 19 12 37 30", "27 15 5 16 6", "4 28", "", "29 14 5 35 30", "2", "", "27 12 4", "30 32 0", "0 32 29 28 5 17 39 2 18", "12 5 25 34", "36 14 2 24", "33", "24 15 7 0", "7 8 13 2 10 32", "39 19 0 31", "3 36", "36 33 27 22 38 25 24", "", "4 16 5 15 26", "26 16", "27 23 8 25 30 11 13", "26", "35 20 37 0 33 36 1 14 28", "5 13 22 36 2 24 19", "34 1 25", "30 0 33 17 31 2", "1 14 39 25 16 12 10 38", "27 14 15", "35 28 6 31 29", "36 15 20", "31 12 22 20", "24 16 39 14"};
    vector<string> agencies = {"38", "20 6 0", "4 35 15 13 28 30", "35 30 9 25 39 22 10 1 2 21 12 11 31", "35 16 30 20", "30 10 28 18 12 33 9 16 0 37 22 15", "19 32 9 36 39 8 17 13", "31 4 7 33 29 28 10 18", "26", "34 13 37 29 8 38 23 5 17 2 6 9", "37 16 6 19 38 22 23", "20", "31", "4 23 2 24 20 13 18 38 16", "31 39 3 37 28 26 22 4 8 11 13", "14 8 1 30 39 19 10 6 0", "17 6 0 39 22 25 24 19 20 11 13 35 37", "30 2 19 12 37 14", "6 15 16 27 14 5 33", "23 6 0 28 18 5 15 4 3", "35 17 39", "37 25 19 24 35 5 13 10 30 29 14 17", "2 34", "24", "27 29 20 4 1 12 22 8", "31 28 20 32 38 1 24 30 0", "18 29 19 17 28 5 34 4 32 39 2 0", "33 25 5 12 34", "12 2 24 28 14 36 27 15 31", "37 9 33", "22 2 19 26 10 7 0 15 25 24", "8 13 16 32 2 7 15 39 34 5 10", "21 31 18 38 0 1 39 33 19", "3 11 31 36", "25 16 23 36 30 22 33 38 0 32 24 27", "", "33 5 10 15 26 16 4", "6 27 26 35 16", "13 11 8 27 30 23 6 25 29", "26 33 1 18", "35 20 14 37 36 34 1 6 0 33 28", "2 6 36 16 4 22 8 24 5 34 19 28 13 14", "25 27 34 12 1 23", "30 2 18 0 29 33 39 19 31 17", "38 36 39 15 25 9 10 16 17 14 12 1", "20 39 33 2 0 27 14 15 28", "6 31 29 19 35 28", "36 30 15 6 20 18 25 38", "34 22 20 31 12 29", "24 34 19 39 14 20 26 11 16"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 2297;
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    vector<string> cities = {"000110", "001101", "010011", "110000", "101001", "011010"};
    int k = 1;
    vector<string> guards = {"0", "0", "", "0", "", ""};
    vector<string> agencies = {"0", "0", "0", "0", "0", "0"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    vector<string> cities = {"011", "100", "100"};
    int k = 5;
    vector<string> guards = {"2 4", "2 0", "1"};
    vector<string> agencies = {"2 4", "2 0", "1"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    vector<string> cities = {"01", "10"};
    int k = 7;
    vector<string> guards = {"0 3 4 5 2", "0 2 3 1 4 6"};
    vector<string> agencies = {"6 3 1 0 4 2 5", "0 5 6 3 1 4 2"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    vector<string> cities = {"0"};
    int k = 9;
    vector<string> guards = {"5 1"};
    vector<string> agencies = {"1 7 4 3 5 2"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    vector<string> cities = {"0111111111", "1001111111", "1001111110", "1110111110", "1111011111", "1111101110", "1111110111", "1111111011", "1111111101", "1100101110"};
    int k = 3;
    vector<string> guards = {"", "2", "0", "2 0 1", "2", "1 0", "0 1", "2 1", "", "0"};
    vector<string> agencies = {"2", "0 2", "1 0", "0 2 1", "1 2", "1 0", "1 0", "1 0 2", "", "0"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 63;
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    vector<string> cities = {"011111", "101101", "110110", "111001", "101001", "110110"};
    int k = 1;
    vector<string> guards = {"", "0", "", "", "", ""};
    vector<string> agencies = {"0", "0", "", "", "0", "0"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    vector<string> cities = {"0000111001", "0000100100", "0001010011", "0010111111", "1101011101", "1011101011", "1001110111", "0101101000", "0011011001", "1011111010"};
    int k = 5;
    vector<string> guards = {"4 0 1", "2 3 0", "1 4", "2 3 4 0 1", "0 2 4 1", "0", "", "3 1", "4 3", "3 4"};
    vector<string> agencies = {"4 1 0", "2 4 3 0", "4 3 1 0", "3 0 2 4 1", "2 4 1 0", "3 0", "2 0 3", "3 1 0 4", "4 3 1", "4 3"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 59;
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    vector<string> cities = {"0000000", "0000000", "0000000", "0000000", "0000001", "0000001", "0000110"};
    int k = 2;
    vector<string> guards = {"1 0", "1 0", "1 0", "1 0", "0 1", "1 0", "0"};
    vector<string> agencies = {"1 0", "1 0", "1 0", "1 0", "1 0", "1 0", "0"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    vector<string> cities = {"000", "000", "000"};
    int k = 8;
    vector<string> guards = {"1 6 7 3", "3 0", "3"};
    vector<string> agencies = {"1 4 3 0 5 6 7", "1 6 0 5 3 4 2 7", "6 1 2 5 3"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    vector<string> cities = {"0000", "0010", "0100", "0000"};
    int k = 1;
    vector<string> guards = {"", "0", "", ""};
    vector<string> agencies = {"0", "0", "", ""};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    vector<string> cities = {"0111111111111111111110111011", "1011111011111110010111111111", "1101111111111111111111111111", "1110111111111111111111111110", "1111011111111011111111111111", "1111101111111111111011111110", "1111110111110111111111111111", "1011111011111111111111011111", "1111111101111110111110101010", "1111111110111111101111110111", "1111111111011111011111111111", "1111111111101111010111011111", "1111110111110111111110111111", "1111011111111001111111111111", "1111111111111001011111111011", "1011111101111110111011111011", "1011111111001101011111101111", "1111111110111111101011111111", "1011111111101111110111011111", "1111101111111110101011111111", "1111111111111111111101111111", "0111111101110111111110111111", "1111111011101111110111011111", "1111111101111111011111101101", "1111111110111111111111110011", "0111111101111100111111110011", "1111111111111111111111101101", "1110101101111111111111111110"};
    int k = 21;
    vector<string> guards = {"", "5 3", "", "", "8", "", "", "6", "", "", "", "19", "9 16", "16", "", "", "4", "", "10", "", "", "17", "14", "", "", "", "5 9", "13"};
    vector<string> agencies = {"", "5 0 3 4", "19 20 10", "9", "9 7 8 5", "10", "", "6 9", "11 2", "11 4 13", "9", "19 14", "9 16 0 8", "11 16", "", "", "4", "18 1", "15 4 5 10", "12", "16", "17 19", "3 13 14", "16", "20", "", "13 9 5", "13"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 360;
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    vector<string> cities = {"0111110111011011111101111011001111111", "1011011111110111101111111111011001011", "1101111111111111011111111111111101111", "1110111111111011110111111111111111111", "1011011011111101111111111111110111011", "1111101111011011111111100011111110111", "0111110111111111011011001111111110110", "1111011011111111111111111011111111111", "1111111101111111110111111111011111111", "1111111110111110111111111111110101011", "0111101111011110110011111111111111111", "1111111111101110101111111111111110111", "1011111111110111111111111110111010111", "0110101111111011111011110111111101111", "1111011111111101111111111111101111011", "1111111110001110101111111111111111101", "1101110111111111011011011111111110110", "1011111111101110101011111111111111101", "1110111101011111110011011111011011111", "1111110111011011000011111111111111111", "0111111111111111111100111011111111111", "1111111111111111111100111111111111111", "1111110111111111010111011110011111111", "1111100111111111111111101111111111111", "1111101111111011111111110111111111111", "0111101011111111111101111011101111011", "1111111111111111111111111100111111111", "1111111111110111111111011100111111111", "0011111101111111110111011111011011110", "0111111111111101111111111011101111111", "1111011110111111111111111111110111011", "1011111111110111110111111111011011111", "1001111110111011111111111111111101101", "1111100111100111011111111111111110111", "1011011110111101111111111011110111011", "1111111111111110101111111111111101101", "1111110111111111011111111111011111110"};
    int k = 20;
    vector<string> guards = {"6 10 5 15 1 19 0 12", "16", "0 15 3 10 11 14 6 1", "17 16 4 8 14 18 1", "17 6 1 18", "6 7 3 0 17", "5 18 0 4", "10 14 3 16 4 19", "15 16 12", "2 11 9 1 7 16", "17 19 4", "17 1 14 13 8", "19 16 13 2", "11 13", "12 15 18 5", "13 1 11 6 10", "15 19", "17 7 10 16 6 19", "16 8 11 0 3 7 19 10", "7 1 5", "4 18 10 8 2", "10 7 11 2", "16 7 2 5 13", "13 1 9", "0 14 7 13 2 6 15", "7 6 9", "19 4 14 15", "6 2 3 7 13", "17 11 14 19 15 3 0", "11 1 0 13 19", "6 18 19 9 0", "9 17 11", "2 14 18 13 4", "10 7 17 4", "18 14 11 0 16 6", "7 19 2 12 16 17 15 4 8", "3 2 13 1"};
    vector<string> agencies = {"1 6 19 5 15 10 17 12 0", "12 6 16", "0 14 15 11 3 1 6 10", "13 16 5 15 12 14 4 18 17 8 1", "17 18 6 13 1 8 2 7", "4 7 2 16 6 17 11 0 3", "0 15 1 5 18 12 4", "4 14 17 3 19 10 13 18 16", "13 6 16 12 15", "2 16 3 6 9 7 14 8 11 1 12", "19 13 5 17 4 16", "8 14 17 1 6 9 13", "14 13 2 8 19 16", "2 11 6 17 13", "13 18 12 16 15 5 1 0", "1 8 7 13 16 15 6 10 11 14 12", "11 15 1 8 19", "19 7 17 6 14 10 16", "7 3 16 0 10 1 11 19 8 6", "1 5 14 17 7", "18 2 5 4 13 6 8 10", "7 2 10 11", "1 2 16 13 5 7", "3 16 1 18 13 17 9", "13 2 5 7 15 6 0 19 14", "6 7 15 5 9 3", "16 15 14 19 1 4", "7 3 6 13 2 5", "0 19 17 3 14 15 11", "13 0 17 19 11 6 1", "16 18 11 0 6 9 19", "17 13 10 5 9 11 4", "13 14 10 17 18 4 2", "1 3 15 19 17 4 10 12 18 7", "16 4 14 18 3 11 0 6", "16 12 19 8 4 13 2 7 15 17", "2 13 0 1 3"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 4312;
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    vector<string> cities = {"00000001000010010101101111100110100110000", "00101000100010100000000001010110010010101", "01000100011000110000110101111100101010010", "00000000000111100111100100100101101111110", "01000111111100000111000100000101100000010", "00101010100000110110010010000001010101110", "00001101000000100111100010000010000101011", "10001010100011101001110100101111001100000", "01001101001101010011000010000011011001000", "00101000000001000000111001000010000001101", "00101000100010001101011011111101000001010", "00011000100000101011110100111001111110100", "11010001001001100001000101010011001011000", "00010001110010110101010000100001111110010", "01110111000111001100011000000011010110000", "10100100100001001111001011101000000100010", "00000001001100110000000100101001000001110", "10011110001001110001100010010101011000010", "00011110100100010000111000111011000101000", "10011011101111010100100100101000100100001", "10110011010100000111010000001111101000101", "00100101011101100010100000011101111000011", "10000000011000110010000111010000001101001", "10111001000110001001001000010100100000001", "10000110101000010100001000001000010000000", "11100000011010010000001000111001000101000", "10110001001101011011000001001000001101100", "01100000001110000110011101000000110111010", "00100001001100011011110011100000001010101", "11111001001000000100110100000000100000000", "11000011110010100010100000000000000100100", "00011101101111101110110001000000000000011", "10111000000101000001110100010100000010010", "01000100100101100100010010010000000001110", "00110001100111000100111000101000000001000", "10010111000101110011001001110010000001000", "11110000000111100000000000011000100000010", "00010110111010001010001001110000011100001", "01010100010100001000100000101010010000000", "00111110001001011100010000010001110010000", "01000010010000000001111100001001000001000"};
    int k = 44;
    vector<string> guards = {"21 42 15 0 20 32 2 28 43", "0 29 8 4 43 14 24 17 7", "18 10 34 4 9 29 6 31 11 42 8 37 15 20 23", "35 10 6 28 22 23 39 20 19", "38 11 26 15 41 7 9 40 21 33 4", "40 22 26 43 23 18 39 15 20", "41 9 5 3 17 25 40", "26 3 40 32 33 16 7 14 39 29 30", "12 24 29 28 16 19 11 3 27 30 31", "41 5 26 16 1 17 2 35 8 43 22 12 40 4 15", "30 27 8 11 31 34 1 18 19 43 20 38 26 28", "6 25 40 16 1 37 20", "21 30 3 29 23 2 33 39 15 34 7", "42 32 43 2 25 7 16", "25 8 38 2 27 14 9 39 17 1 42 18 19 30 12 37", "24 2 23 26 13 31 5 30 10 34 22 39 0 40 16", "15 9 8 41 3 10 22 24 26 39 33", "16 40 5 37 25 11 41 10", "40 16 21 31 0 18 14 34 5 42 4", "37 21 11 32 25 4 20 35 5 9 15 33", "25 3 29 0 13 32 26 2 31 24 35", "36 0 14 15 9 12 23 43 26 11 30 20 4", "43 13 3 29 9 20 23 34 19 10 37 32 11 31 1 28 7", "39 38 13 9 31 20 40 34 0 1 24", "41 0 28 31 22 33 29 25", "19 39 22 27 13 23 41 35 18 33", "9 25 0 21 29 22 5 43 15 20 26 34 32 42", "35 28 42 39 23 0 24 40 8 27 38 18 25", "2 4 13 29 20 19 9 26 21 16 39 17", "24 32 19 26 38 37 12 15 7 41 18 6 25", "7 27 24 2 36 43 22 19 11 3 38 18", "2 34 32 40 8 14 1 9 36 43 35 39", "19 12 37 43 35 41 10 13 34 30 16 40 25 22 39", "8 0 24 34 1 12 37 3 22", "33 34 42 8 16 43 28 17 20 14 41", "37 30 16 38 26 34 22 42 33 7 41 13 8", "3 26 32 25 10 27 21 19 4 38 0 37 28 20 42 35", "3 31 14 42 9 11 5 36 8 43 35", "26 37 36 3 13 21 42 22 20 40 16", "10 7 2 33 4 37 24 16 41 17 18", "12 4 37 41 27 25 10 1 20"};
    vector<string> agencies = {"28 0 2 15 42 32 14 20 43 21", "38 43 8 4 0 24 14 7 29 17", "42 18 34 31 37 3 9 15 20 29 6 11 4 23 10 16 8", "23 19 10 22 20 28 39 6 35 24", "41 4 33 11 40 15 38 21 7 26 9", "43 22 18 34 15 20 26 40 39 23 24 14", "40 3 41 25 9 17 5", "16 21 40 29 7 26 30 32 14 3 33 39", "12 28 11 16 24 29 3 2 27 31 30 19", "43 35 41 4 26 12 16 8 40 17 5 2 1 11 22 15 42", "30 34 28 27 8 20 19 26 24 1 11 4 38 31 18 43", "40 42 25 20 1 29 16 37 6", "23 21 33 5 3 7 2 30 29 39 34 15", "25 43 17 7 42 16 2 32", "18 42 37 34 25 14 38 8 17 2 30 19 12 39 1 27 9", "0 13 22 40 24 39 16 30 34 2 23 5 26 31 10", "1 33 15 24 22 8 9 26 41 10 39 3", "37 35 25 40 41 16 11 36 5 10", "0 31 18 34 4 16 40 5 21 14 42", "33 20 32 9 37 35 5 15 41 11 25 4 21", "0 13 2 35 3 25 29 31 26 32 24", "7 0 6 20 23 37 34 26 15 4 24 30 36 43 11 12 14 9", "9 10 1 28 37 3 20 41 23 13 43 19 11 34 31 29 32 7", "0 38 40 13 34 24 39 1 31 9 20", "0 25 22 41 33 29 28 31", "39 13 16 19 35 33 23 18 22 27 41", "0 31 25 9 5 43 29 32 34 21 15 22 26 20 42", "0 42 40 27 8 24 28 23 35 18 38 39 25", "39 29 20 9 4 21 17 16 19 26 2 13", "26 6 41 7 12 15 37 25 38 19 18 32 24", "3 8 19 11 7 38 36 22 43 18 2 24 27", "39 1 43 2 8 40 14 9 35 32 34 36", "13 40 25 16 34 39 41 22 12 19 42 30 43 35 10 37", "0 34 8 3 37 1 24 22 12", "17 20 43 41 8 16 34 33 14 28 42", "41 33 16 34 26 8 38 37 7 42 30 13 22", "25 37 21 27 30 28 38 42 20 35 3 0 4 10 19 32 26", "9 35 26 3 14 31 36 11 42 5 8 43", "21 16 20 37 26 22 40 42 3 13 36", "10 4 37 17 41 18 24 33 7 16 2", "27 37 4 25 10 41 12 20 1"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 5444;
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    vector<string> cities = {"01111111110111111111111111101011111111110110", "10111010111101111111111111111111110111011011", "11011111011111010101111101010111111111111101", "11101110111101110111111010100111111110110101", "11110111011100110111111111011101011101111110", "10111011011101111111110110010011111011001101", "11111101011101111110101101010011111111111111", "10101110111011111111011111111011101111111010", "11010001011111011111011111011011111101111001", "11111111101111111111111111101110111111111011", "01111111110111110011101011111011111110101111", "11111110111011111111111100111100001111000111", "10100001111101111110101111001011111111111011", "11110111111110111111111100111111000111011111", "11011111011111001011111101011011100011111111", "11111111111111001110110110111111111111101010", "11000111110111110011111110010111011111010000", "11111111110111010011111101111001111111111111", "11011111111111111101111101110111111000111111", "11111101111101101110111110111011111111111101", "11111110011111111111011111111111111100011101", "11111101110101111111101101111101111111101000", "11111011111111101111110111011011111011111110", "11101111110111111111111011110111111010110011", "11011101111010011001101101000011111011111011", "11101011111010100110111110101110111111101111", "11010001011101010111110101011110111110111111", "01101111101101111111111100101111111111101010", "11001001111111110101111001110011111111011111", "01111000010101011010110101110001111001101110", "11110111111011111011101111111000111111001010", "11111111101011111111111110011100111011101111", "11110111111010110111111111111111011011101111", "11111110111010011111111111111111101111110100", "10111111111110011111111111111111110111111111", "11111011111111011101110001111010011001111100", "11110111011111111101011111111011111001101111", "11101111110111111101011011011111111110101110", "10111011111010110111011111110101111111001110", "11111011110011101111101110101000011100001001", "01101111111011110111111011111111101111110111", "10111110001101100111101001101101111111101000", "11001011011111110110001111111111101011101001", "01110110111111100111100111101001101010011010"};
    int k = 21;
    vector<string> guards = {"7 19 12 10 17 16 15 4 5 2 9", "6 17 16 12 1 19 5 14 7 10 8 9 3 2", "2 3 17 19 12 4 8 18 20 6 5 14 1", "3 16 17 12 19 9 5 10 7 8 6", "16 10 17 19 11 3 6 13 12 8 5", "18 17 15 2 14 13 1 3 19 0 10 7", "18 7 16 13 8 19 6 3 17 11 0 14", "7 1 16 18 6 11 15 20 10 3 19 12 8 13 2", "14 4 20 19 5 12 9 0 16 1 18 6", "9 16 13 18 17 8 6 19 2 7 3 1 11 15 4", "7 15 17 13 0 12 20 1 14", "8 4 2 16 1 6 7 11 19 17 0 14 12", "3 20 16 17 15 14 8 7 18 10 11 0 1", "11 2 20 7 8 6 0 13 4 3 1 14 12 16", "0 12 5 17 4 11 6 9 3 18 7", "9 15 0 13 20 4 17 10 6 2 1 18 5", "0 20 14 19 10 13 6 4 3 16 17 7", "4 16 5 14 11 8 0 9 17 6 19 10", "4 17 12 19 9 15 6 2 0 7 18 8 1 20 10", "3 0 8 11 13 4 2 16 20 1 5 14 7 12 17", "5 18 3 16 17 15 0 13 14 2 10 7", "8 5 15 3 16 19 9 12 0 13 11 6", "15 9 2 0 4 11", "4 13 10 0 12 5 6 8 18 16 9 17 11 20 7", "14 19 11 13 17 20 15 9 2 18 4 1 10 5", "1 4 14 18 10 8 9 15 16 7", "18 2 19 16 12 4 13 6 5 15 8 20 9 1", "19 11 16 14 2 5 15 1 6 20 3 10", "17 15 9 4 2 19 13 5 6 12", "11 4 13 17 1 0 15 3 14 19 10 7 18 2", "8 1 9 6 2 3 19 20 11 10 13", "1 2 11 18 14 20 17 13 5 12 7", "2 11 6 8 18 0 7 16 15 14", "2 3 1 16 8 14 5 19 0 4 6 15 12", "20 3 18 9 5 11 13 19 2 0 15 14 8 7 6", "11 16 5 19 18 20 2 6 8 3 7 4", "5 15 17 2 10 14 3 4 12 13", "6 12 14 15 8 18 1 19 13 3 16 2 9", "8 19 12 2 20 3 1 5", "5 7 14 1 9 18 15 12 0", "15 3 0 16 14 6 9 19 4 2 8", "18 16 15 4 17 6 19 9 8", "2 20 14 10 15 18 4 0", "13 12 9 20 16 5 2 15"};
    vector<string> agencies = {"10 19 2 7 1 4 15 9 3 17 12 16 5", "20 6 14 10 1 19 7 9 17 8 2 16 5 12 3 13", "8 16 3 18 17 19 6 20 13 14 5 11 12 2 4 1", "7 12 20 9 3 8 10 6 4 2 14 5 17 16 19", "19 5 3 12 13 6 17 11 10 8 18 1 16", "17 14 10 12 6 2 18 4 0 8 3 19 15 1 13 7", "17 9 1 14 11 0 6 8 19 18 3 13 7 16", "14 7 11 19 20 15 16 3 17 5 1 13 2 18 6 8 4 9 10 12", "20 12 16 5 0 18 14 9 6 4 19 2 1", "3 10 16 11 19 7 20 4 13 1 9 15 17 6 2 8 18", "7 14 20 4 17 0 1 9 18 11 10 15 13 12", "11 8 19 4 1 14 2 5 9 0 6 17 12 16 7", "14 20 11 7 16 13 10 6 3 8 18 1 4 17 15 12 0", "16 19 11 12 13 8 5 20 3 14 9 15 7 17 1 4 2 0 6", "5 1 3 0 9 11 6 7 4 12 18 17 10 13", "4 14 13 15 17 16 1 2 9 20 5 6 0 10 19 18", "19 14 20 7 16 3 10 2 0 5 6 4 13 17", "14 9 16 11 19 5 20 0 4 15 6 10 8 17", "1 4 19 2 12 15 20 6 17 7 13 9 14 10 8 0 18 3", "5 0 13 7 16 11 3 14 17 8 19 12 6 4 20 10 15 2 1", "14 18 0 10 19 5 1 15 2 7 13 3 4 17 16", "12 9 2 19 16 20 1 15 8 13 3 11 18 14 0 6 5 7", "17 2 4 15 0 9 7 11 8", "7 9 10 0 12 17 19 16 6 8 4 20 5 13 18 11", "9 20 15 8 11 13 14 19 0 1 4 18 17 10 2 6 5", "17 10 4 9 1 15 14 16 18 8 2 7", "10 5 0 19 16 1 18 4 20 6 15 12 8 13 9 2 17", "3 14 5 16 1 6 13 8 15 10 18 0 19 20 2 11", "6 7 9 16 18 2 12 11 1 17 15 4 19 13 5 8 0", "1 16 13 15 19 4 2 20 17 18 3 14 0 10 11 5 7", "10 8 19 3 18 11 20 7 6 16 13 1 2 5 9", "1 11 13 17 14 9 12 5 10 18 2 7 20 3", "11 18 8 16 0 12 6 17 7 14 19 15 2", "5 4 19 14 8 7 6 1 15 0 3 16 11 2 12", "11 2 5 0 15 13 4 8 20 14 6 3 9 18 19 7", "4 19 18 3 5 8 15 11 20 2 16 7 6 14", "13 11 3 14 4 12 5 10 8 17 19 15 2", "9 20 1 16 8 3 13 14 4 6 5 15 18 12 2 19", "3 20 11 18 12 8 6 1 2 19 9 0 16 4 13 5 17", "17 13 18 15 6 1 9 0 11 7 12 5 14 3", "19 16 9 4 0 12 2 8 13 15 3 6 14", "18 6 1 9 17 15 3 0 10 14 4 8 16 2 19 5", "10 17 14 0 20 16 11 1 4 2 15 18", "5 9 8 15 7 16 13 18 20 2 19 4 12 6"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 6285;
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    vector<string> cities = {};
    int k = 15;
    vector<string> guards = {"4 9 7 3 14 8 10 6 2 12 1 0", "12 7 3 8 11 13 14", "14 8 10 9 11 12 0 4 2", "9 5 0 1 10 14", "11 3 0 2 5 14 1 8 4", "4 0 9 13 8", "4 7 3 9 1 14 6 12 8 11 0", "10 2 11 4 7 5 9 1", "5 3 14 8 11 6 13 2 9", "0 9 2 8 11 7 12", "12 8 9 1 0 13 10 7", "2 9 12 1 7 5 6", "11 5 6 10 1 13 7 8 12 14 2 0", "0 2 3 14 4 9 8 12", "3 12 7 13 14 6 1 10 5", "14 13 0 7 8", "2 8 7 0 13 12 10 9 4 14", "0 7 8 6 14 5 3 12 9", "6 4 2 14 7 1 0", "1 7 8 4 3 10 0 9 2", "5 7 10 6 11 2 12 9 3 14 8 13", "1 3 11 12 8 13 4 2 9", "13 14 0 9 1 3 8 11 10", "3 7 12 13 9 8 1 10 6", "4 10 8 6 14 7 0 9", "14 4 11 5 0 7 9", "0 8 14 4 12 3", "12 13 2 11 9 4", "13 6 0 14 10 2 11", "4 14 5 9 11 13 1 6 0 7 2 3", "9 13 11 10 14 0 3 7 12 6 5", "4 13 5 8 11 7 9", "8 2 12 1 0 4 6", "9 1 8 14 5 12 10 6", "12 9 2 6 1 7 8 13", "13 12 9 10 6 2", "2 3 14 10 5 6 8 13 7", "11 4 8 2 6 9 1 5 13", "12 9 5 0 6 1 14 11 2", "3 2 0 5 9 11 4 12", "12 6 11 10 1 0 14", "6 3 0 8 4 7 9 1 5", "3 5 10 6 12 4 1 11 0", "9 1 13 6 10 7 5", "2 0 13 9 3 11", "1 6 0 7 14 8 12 4 13 5 2", "10 0 7 1 12 11", "10 12 1 14 8 7 6"};
    vector<string> agencies = {"14 12 4 1 7 13 3 8 10 0 2 9 6", "0 12 3 8 11 9 14 13 7 5", "14 8 2 11 9 4 0 12 10", "9 0 10 1 5 14", "11 2 1 6 4 5 3 0 8 14", "3 13 8 9 0 4 12", "4 9 0 7 11 14 3 12 8 6 1", "10 9 5 12 11 2 4 7 1", "6 5 3 2 11 9 14 7 13 8", "10 9 0 7 8 2 11 12", "2 13 7 9 1 0 12 8 3 10", "9 7 5 6 1 12 2 11", "2 8 6 13 7 1 0 5 14 11 12 10 9", "12 9 6 0 3 8 4 14 2 1 11", "6 14 10 3 2 5 11 12 1 7 13 9", "2 6 8 0 14 13 7 5", "13 7 10 6 4 2 8 0 14 12 9", "7 10 9 8 0 14 6 11 12 3 5", "6 7 4 0 5 1 14 2", "2 3 9 4 8 10 1 0 6 7", "3 7 11 5 13 10 14 12 9 8 6 2", "4 13 3 2 11 1 12 8 9", "3 14 11 10 13 8 9 0 1", "7 6 13 9 10 12 3 8 1", "8 4 11 0 10 6 7 13 14 3 9", "9 14 5 4 8 10 7 1 0 11", "4 14 12 6 2 0 3 8", "14 8 12 11 2 4 13 9 10", "12 3 6 0 14 2 11 10 13 8", "0 14 5 13 3 6 9 4 11 7 2 1", "6 7 0 3 9 13 5 2 14 12 11 10", "5 7 2 9 0 13 8 6 4 11 14", "4 6 14 1 2 0 9 8 12", "12 5 10 8 6 1 9 14", "7 9 13 2 8 12 1 6", "4 13 10 9 3 2 6 5 12", "10 3 14 7 6 13 8 5 2", "11 3 9 5 8 13 2 0 1 6 4 7", "5 9 14 12 2 11 0 6 1", "2 5 0 12 14 11 4 9 3", "13 12 1 0 11 9 6 14 10", "1 3 5 6 0 14 7 9 8 4", "10 13 3 1 5 6 0 11 4 12", "9 11 8 5 6 13 10 7 1", "2 7 0 10 11 3 13 9 8", "13 5 7 0 4 14 2 10 8 12 1 6", "12 10 0 11 1 7", "7 10 12 1 14 4 8 6 13"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 7547;
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    vector<string> cities = {};
    int k = 23;
    vector<string> guards = {"21 7 14 12 9 8 10 6 22 15 11", "18 9 11 10 22 15 13", "1 18 21 16 19 3 5 9 11 14", "1 5 8 10 6 11 16 19 9 14", "20 11 16 15 13 9 22 8 6", "0 16 5 17 19 3 6 13 9 18", "20 8 3 15 10 14 4 6 11", "6 12 13 2 9 15 3 17 22", "18 17 6 16 19 14 4 7 2 13 20 22", "18 19 16 21 2 10 20", "5 14 20 11 13 22 12", "11 2 7 22 3 1 15 18 9", "14 4 1 10 20 22 11", "11 7 9 6 5 20 14 2 17", "9 1 22 10 17 2 21 11 14 8 5 7", "14 4 8 6 3 11 21 9", "14 15 3 20 7 2 16 0 17 5 1", "12 15 8 6 20 7 14 13 18", "3 4 12 1 22 18 16 6 14 2 21 9", "20 3 4 22 6 18 0 9 1 11", "19 13 0 9 5 16 12 10 2 6 8 3", "19 4 10 3 5 17 9 8 11 21 18 20", "9 20 8 22 21 17", "2 0 19 22 1 7", "8 12 5 19 7 6 21", "0 4 18 17 20 7 3 12 21 16", "13 14 9 18 20 1 10", "18 21 7 17 13 1 8 11 0 3 16 4", "0 12 21 2 3 7 5 6 11 20", "17 9 11 7 13 5 0 18 3 1 6 10", "19 14 6 13 17 22 1 18", "5 18 10 8 12 17", "6 0 4 11 8 17 1 22 19 15 21 12", "6 15 22 19 8 18 14 21 9 11 17", "10 11 3 2 9 14 18 12 1 21 6 15", "3 21 2 8 11 9", "5 9 14 7 2 4 17", "12 17 13 18 14 19 16", "22 6 20 7 1 14 21", "2 12 10 17 11 15 8 16", "17 10 8 21 14 15 12 19 2 18 22", "15 13 14 3 16 20 9 12 18 22", "14 8 13 0 1", "3 21 9 14 6 2 13 16 7", "9 20 11 4 22 16 10 2 7", "17 15 20 2 5 0 21 4 19 13"};
    vector<string> agencies = {"10 7 8 15 13 20 9 18 1 6 12 11 21 0 14 22", "18 13 17 22 9 8 21 10 11 7 15 0", "5 13 9 15 3 22 21 1 19 14 18 11 16", "16 9 18 17 10 8 19 14 5 12 6 11 1 3 20", "8 11 13 14 22 9 4 10 6 7 12 15 0 16 20", "9 18 13 6 10 11 7 3 16 17 0 19 5 8", "3 18 14 16 17 20 6 11 4 2 15 10 21 13 8", "18 2 12 10 17 6 14 19 3 13 15 9 22", "13 16 1 6 2 11 20 7 14 19 0 17 4 18 9 22", "20 14 22 16 6 13 8 19 11 10 2 18 21", "20 12 9 6 22 5 4 11 14 13", "2 1 6 12 22 7 9 3 11 15 18", "10 16 1 5 3 20 0 11 22 4 7 14", "14 11 6 4 8 9 20 7 2 18 5 22 17", "7 13 5 21 17 4 11 3 9 20 10 14 8 1 22 2", "21 12 11 16 6 4 8 5 14 9 22 3", "0 15 10 13 17 18 20 1 3 5 16 14 2 7", "3 7 12 14 8 2 11 15 16 20 6 18 13 21", "6 9 14 22 12 3 1 18 16 21 2 10 8 4", "7 4 1 8 20 22 6 9 18 13 3 17 0 11 15 12", "0 5 16 8 6 2 10 12 19 14 9 3 13", "4 18 14 9 10 21 5 8 20 17 11 19 3", "17 20 12 9 16 22 14 8 21", "1 19 21 7 6 2 10 22 0", "3 16 17 7 5 19 10 8 14 21 15 6 12 13", "21 12 2 18 8 4 20 0 7 3 16 17", "20 14 18 13 1 4 9 10", "4 21 8 17 16 11 13 1 3 7 19 18 9 14 22 0", "2 0 17 9 3 4 22 12 11 10 6 7 21 20 5", "7 17 20 18 3 0 6 13 5 22 1 10 9 11", "6 13 19 0 1 14 18 17 7 22 20", "7 13 5 6 18 8 12 10 19 17", "8 4 22 0 17 11 1 6 15 21 12 5 19", "6 15 18 21 5 9 13 17 11 0 7 22 4 12 19 8 14", "12 15 22 9 18 1 20 6 2 11 3 0 21 14 10", "22 11 8 15 5 9 7 0 4 2 18 13 21 19 3", "17 3 4 22 14 8 2 5 7 19 9", "2 3 12 19 20 13 16 9 0 18 10 17 14 7", "14 3 18 21 7 20 1 22 16 6 11", "15 2 6 0 16 9 10 1 8 12 17 5 3 11", "14 4 7 18 13 2 22 21 17 20 6 12 15 10 19 8 9", "1 6 13 16 3 14 8 2 11 20 15 10 18 22 12 9", "13 7 1 8 18 0 14 16 21 22", "21 14 16 2 9 13 6 7 3 10 15", "11 7 1 20 0 18 16 2 22 17 21 9 10 4", "21 2 4 19 13 0 20 18 5 17 10 15"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 9903;
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    vector<string> cities = {"0111101111111111111111111111110111101111", "1011111111111111111010111111111111111111", "1101111101111111111111111111111111111111", "1110111111011111011111111111111111110111", "1111011110111111111111111111101111111111", "0111101011010111111111111111111111111111", "1111110111111110111111111111111111111111", "1111101011111111111111111111111111111111", "1101111101111111111111101111111111111111", "1111011110111111111111111111111111111111", "1110101111011111111111111111111111111111", "1111111111101111111111101011111111111111", "1111101111110111111111111111111111111111", "1111111111111011111111111111111111111111", "1111111111111101111111111111111111011111", "1111110111111110101110111111111111011111", "1110111111111111011111111111111111111111", "1111111111111110101111101111111101111111", "1111111111111111110111011111110011111111", "1011111111111111111011111111111111111101", "1111111111111111111101111111110111111111", "1011111111111110111110101101111011111111", "1111111111111111110111011111111111111111", "1111111101101111101110101111111111111111", "1111111111111111111111110111111111111111", "1111111111101111111111111011111111111011", "1111111111111111111110111101111111111111", "1111111111111111111111111110111111111111", "1111111111111111111111111111011111111111", "1111011111111111111111111111101111111111", "0111111111111111110101111111110111111111", "1111111111111111110110111111111011011111", "1111111111111111101111111111111101111111", "1111111111111111111111111111111110101111", "1111111111111100111111111111111011011110", "0111111111111111111111111111111110101111", "1110111111111111111111111111111111110111", "1111111111111111111111111011111111111011", "1111111111111111111011111111111111111101", "1111111111111111111111111111111111011110"};
    int k = 39;
    vector<string> guards = {"9 30 7 31 24 5 4 26 10 18 13 23 20 33 32 12 36", "7 26 37 29 24 2 15 19", "19 31 7 10 27 14 25 32 0 8 21 5 13", "37 35 14 25 29 0 27 36 9 33 13 31 24 11", "19 6 24 7 14 25 0 3 38 15 21 5 1", "11 7 12 34 28 18 25 9 6 27 17 30 38 29 14", "28 6 0 31 5 24 22 33 34", "30 19 12 3 7 4 22 32 17 5 37 9 1 25", "0 3 23 14 12 19 36 28 32 27 7 2 29 13 30 16", "32 18 35 6 30 12 38", "20 4 2 38 17 10 32 7 13 33 21 27 30", "13 28 21 25 37 17 29 35 2 18 24 36 0 23", "33 8 38 31 21 34 25 10 30", "14 13 11 20 30 28 5 10 6 9 1 27 32 25 38 18", "0 1 27 24 9 33 18 8 19 13 10 16", "2 20 26 6 18 11 0 7 31 27 15 35 28 12", "19 14 33 2 38 3 30 28 36 21 12 24 23", "19 22 27 31 26", "0 33 29 3 2 4 18 31 16 34 15 6", "24 15 37 7 6 33 3 23 18 8 32 10 14", "36 24 21 16 15 19 8 11 26 3 10 35 32 2 9 33", "38 21 12 16 29 24 13 6 0 8", "17 24 28 37 4 36 2 25 27 29 0 26", "23 35 5 32 22 21 7 10 0 9 27", "19 37 21 27 31 34 9 8 10 7 13", "25 38 0 23 19 13 11 21 17 27 18 1 30 32", "19 35 16 0 29 33 28 38 27 26", "19 12 0 23 20 31 32 16 36 15 11 7 3 10 37", "15 38 13 1 25 17 8 19 21 5 16 10 2 3", "4 21 27 5 30 23 14 13 33 24", "3 24 7 11 26 34 14 33 10 36 8 18 30", "7 33 16 11 25 15 19 10 31 13 5 26 23 9 38", "21 35 10 36 30 23 9 26 22 6 33 27", "0 24 23 11 9 31 1 18 10", "26 9 25 17 13", "12 25 28 7 6 17 14 20 36 27 30 38", "1 21 25 2 11 35 4 3 6", "3 16 35 15 9 25 36 11 10 37 5 22 23", "32 11 36 21 2 13 33 10 17 6 28", "19 23 29 2 10 25 31 9"};
    vector<string> agencies = {"36 24 16 4 7 26 31 9 20 13 30 5 12 33 23 18 32 10", "15 2 24 19 7 26 37 32 29", "14 8 21 31 5 27 7 19 0 32 10 25 13", "27 9 31 25 5 29 11 37 33 18 13 36 0 24 14 35", "28 7 1 21 14 24 25 6 0 15 19 13 38 3 5", "12 11 9 7 27 18 6 29 14 38 28 25 30 34 17", "38 1 28 32 22 0 33 24 6 5 34 31", "12 25 9 37 4 22 30 32 17 7 3 5 19 1", "29 14 2 13 23 30 12 7 27 16 28 3 11 32 36 19 0", "30 6 32 26 35 25 18 38 31 12", "13 21 2 17 20 32 33 27 6 38 7 4 18 30 10", "0 24 29 28 25 18 17 13 21 35 26 37 36 23 2", "33 30 8 21 25 31 34 38 4 10", "25 1 18 14 13 11 28 32 30 20 38 5 6 19 10 9 27", "27 31 10 9 18 1 16 33 8 19 34 13 0 24", "28 6 0 15 2 12 20 18 27 31 26 35 7 11", "21 33 1 28 2 24 12 26 14 36 19 23 3 38 30", "26 19 22 31 27", "29 16 6 3 31 18 33 5 15 4 2 0 34", "7 14 21 9 10 8 32 33 12 18 24 15 37 3 29 23 6", "26 2 9 21 11 33 19 6 8 10 16 35 15 32 36 3 24", "24 1 13 0 12 29 8 38 6 15 16 21", "24 29 12 26 2 25 17 27 36 28 4 35 37 0 13", "35 23 21 10 0 5 32 9 7 27 22", "9 10 7 21 13 27 19 34 8 31 37", "25 38 11 36 1 18 23 32 19 27 21 17 30 13 0", "28 27 0 19 33 38 16 29 26 35", "3 11 12 36 32 20 19 7 37 31 10 0 27 23 16 15", "25 17 38 10 19 5 9 1 16 3 21 2 8 13 15", "21 23 13 24 4 30 27 0 33 5 14", "26 24 14 28 34 7 18 10 0 11 33 13 30 3 36 8", "9 23 26 20 11 15 19 16 33 10 5 38 7 13 25 31", "21 24 22 33 23 35 30 36 26 9 6 10 27", "9 11 10 23 31 24 26 0 18 1", "26 25 5 13 17 9 28", "28 8 36 26 7 25 30 6 5 38 14 17 20 12 27", "25 35 3 11 13 2 6 4 10 21 1", "3 25 10 37 9 35 11 16 36 22 23 5 15", "10 17 11 6 36 21 32 15 33 28 2 13", "25 29 9 23 2 31 10 19"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 12250;
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    vector<string> cities = {};
    int k = 29;
    vector<string> guards = {"23 26 12 21", "7 6 18 11 15 3 12 5", "12 18 3 13 8 26", "13 0 24 25 4 18 9 28 3 16", "5 10 2 16 14 23 27 20", "4 23 28 11 2 8 1", "26 25 2 24 7 3 10", "24 15 19 10 21 28", "8 14 27 13 9 23 2 17 3", "14 6 2 17 10 25 18", "8 13 22 6 16 24", "8 17 20 11 1 14 18 23", "3 11 18 15 28 12 8 7", "11 20 5 4 0", "2 18 14 6 16 24 11 13", "3 20 15 18 27 26 28", "25 7 17 10 11 3 5", "4 12 6 17 10 28", "15 23 1 14 11 7", "15 4 20 26 5 27 0 19", "2 12 15 17 3 1", "4 8 22 13 21 0", "2 15 7 9 8 4 26", "11 4 21 15 22", "7 22 4 14 9 17 12 18 3", "13 14 5 4 2 26 9 10 0", "27 2 12 14 24 19", "1 22 7 4 9 26 28 18 8 27 11 21", "19 25 5 8 2 15 3 22", "22 6 21 19 2 16 15 20", "28 23 2 4", "12 20 0 14 28 25 6 9", "10 15 24 12 23 13 7 5 9 17 19 20 25 6", "1 11 24 16 5 26 9 19 20 23", "11 3 4 6 26 1 24 13 21 9 2", "18 27 6 5 8 26 11 20", "3 1 27 24 13 20 0 14", "11 18 6 13 14 27 1", "15 23 9 4 3 0", "22 14 0 15 11 25 28 21 20", "25 28 0 1 24 23 9 18", "16 7 22 27 21 13 25 10", "27 25 8 22 26 7 15 18 0 4 13 5 2", "27 24 4 9 10", "20 25 6 5 2 4 18", "9 5", "28 26 12 16 25", "14 3 21 0 18 9 10 15", "4 16 18 20 24", "11 12 22 16 2 5 25 26 4"};
    vector<string> agencies = {"12 10 26 9 23 2 24 15 5 21 0 22", "5 15 12 18 6 28 7 26 11 3", "8 28 12 3 16 9 26 11 18 10 13 1 27 5", "25 4 18 3 8 16 6 13 20 28 0 23 24 17 27 9", "15 22 2 23 27 6 14 3 5 20 11 16 10 18", "2 26 4 28 19 9 17 23 5 1 27 8 22 11", "6 25 3 26 4 15 18 7 24 10 2", "3 15 26 11 4 17 21 20 0 28 19 16 24 10", "4 14 23 25 27 15 3 13 17 9 8 2", "20 27 2 13 14 6 10 17 18 25 4 8", "8 6 26 10 4 19 12 20 15 24 13 16 22 27", "18 17 19 23 1 20 11 14 8 25", "28 21 17 10 9 12 15 3 1 8 18 23 20 7 11 26 16", "5 14 9 7 26 11 16 20 0 21 4", "6 4 23 8 27 14 16 13 2 21 24 19 18 11 7 26", "20 9 18 28 0 3 8 27 26 10 15", "10 1 19 3 16 5 6 11 4 17 7 25 2 15", "6 22 12 28 17 25 15 10 9 19 4", "23 7 21 26 15 11 8 14 1 27 13 2", "14 15 19 20 16 4 0 26 5 13 11 8 27 10 28", "17 12 2 14 13 3 22 25 1 16 15", "4 22 0 8 27 17 12 5 13 15 21 25 9", "6 2 5 26 4 8 0 27 28 7 13 9 15", "28 16 7 4 27 15 22 0 26 20 11 21", "7 9 18 12 17 23 4 24 28 14 3 22", "14 10 5 0 24 26 22 28 12 27 2 9 13 4", "19 25 26 14 15 9 23 27 12 22 7 24 10 2", "18 22 27 7 28 0 4 11 26 1 8 12 6 16 9 20 21", "5 17 8 7 1 15 3 25 2 19 13 22", "7 4 28 22 20 16 21 1 8 19 6 9 15 12 2 18", "0 28 2 4 11 19 12 23 1 24 27 9", "28 6 11 13 12 20 19 25 16 24 14 9 0", "17 15 6 16 9 13 21 12 10 24 8 7 23 18 20 19 25 5", "28 19 7 16 15 11 1 3 5 20 22 9 13 23 24 26", "14 2 22 6 9 10 28 24 27 18 17 4 11 13 26 21 1 3", "6 8 5 27 28 1 20 11 18 2 26 7 21 19", "10 24 20 9 4 0 27 14 13 16 3 1 8 18 17", "10 1 13 14 7 12 6 18 27 20 11 4", "4 9 28 15 25 16 3 0 12 21 22 13 23", "20 11 6 4 3 18 14 28 7 22 25 19 15 0 23 21", "10 23 19 21 26 24 22 0 18 28 3 25 1 11 9 2 20", "7 21 22 14 27 23 16 25 10 13 20 6", "13 18 27 11 15 4 12 5 2 8 25 0 1 22 26 7 28", "27 4 20 9 10 22 24", "27 26 1 21 3 7 23 2 11 25 6 20 5 4 18 15 12", "27 15 9 20 12 21 28 6 5", "16 11 8 22 13 12 28 26 25 1 23", "25 9 10 22 21 3 18 0 28 14 16 15", "0 3 20 13 10 16 27 19 15 23 24 26 11 18 4", "11 2 1 0 12 14 20 16 22 5 4 25 26 18 9 13"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 13620;
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    vector<string> cities = {};
    int k = 29;
    vector<string> guards = {"20 15 4 13 1 26 25 18 2 19 17 3 27 14", "28 16 24 23 21 18 15 25 19 10 0 17 6 1", "17 12 27 21 1 19 14 4 25 0 23", "7 4 3 1 24 11 14 12 9 18 23 10 26 5 0", "25 18 19 21 7 9 11 14 23", "13 5 14 11 27 0 12 16 25 26", "10 19 20 21 4 14 24 18 17 5 27 28 2 26", "1 10 2 0 3 20 11 25 6 17 22 8", "17 24 6 18 9 27 12 20 19 28 8", "23 28 20 15 9 6 16 4 12 3 10 17 27", "15 20 7 24 26 12 8 1 13", "24 4 11 6 5 3 27 20 0 16 25 7 17 8 26 13 2 14", "17 27 22 20 14 9 3 24 10 16 23 25 15 12", "10 27 21 20 3 22 12 4 5 23 0 18 11 25", "27 9 25 26 15 10 0 24", "4 9 1 27 26 11 13 18 0 2 14 23 21 16", "14 16 25 19 8 2 3 5 23 28 10 6", "15 21 17 5 14 8 7 24 4 11 2 10 18", "17 25 4 6 18 11 16 15 20 27 5 10 9 28", "13 26 7 19 8 21 0 27 5 15 18 28 9 24", "13 3 4 27 25 20 26 28 18 5 8 1 2 22", "9 19 22 27 11 13 21 17 6 25", "1 7 12 28 11 13 8 6 4 25 5 19 22", "16 1 6 22 11 0 12 7 8 19 14", "17 8 20 15 28 26 3 22 1 9 23 11 18", "28 24 2 18 22 1 5 11 3 0 10 27 8 4", "21 4 12 6 2 19 3 14 26 9 16 28", "28 10 4 14 12 19 11 24 0 7 13 8 16", "27 3 18 4 6 11 24 8 9 20 22 14 21", "28 26 1 22 13 2 0 16 18 20 23", "23 21 19 5 4 10 18 20 12 11 13 8 15", "25 9 22 15 27 28 4 26 0 7 24 16 14", "11 6 1 13 19 27 9 21 16 24 15 14 4", "24 2 27 12 26 4 7 20 9 6 10 25", "4 17 8 15 24 19 21 14 6 20 7 18 22 26 11 13 3", "10 5 12 26 4 2 0 18 13 16 9", "24 10 16 15 1 28 3 4 8 7 19 11 2 22", "24 12 6 28 4 15 1 13 2 7 0 14 16 21", "11 18 3 20 8 23 21 10 25 28 5", "1 6 2 4 24 21 13 10 20 11 15 22", "5 2 24 10 19 16 3 28 20 14", "27 12 18 11 21 20 26 9 14 10 15 1 22 24", "5 9 23 12 11 26 10 25 24 2 13 22 8", "10 7 27 6 25 4 24 11 9 23 18", "22 4 3 23 18 12 15 26 10 24 7 11", "1 19 27 4 21 13 11 25 2 10 18 23 26", "8 23 7 20 1 6 17 19 12 14 3 25 0 28"};
    vector<string> agencies = {"1 19 25 2 26 4 15 3 14 8 13 18 20 17 27", "25 13 17 19 0 1 18 23 9 21 6 10 15 16 24 28", "0 1 19 14 24 21 25 17 8 12 27 20 23 4", "24 5 18 4 3 20 9 7 23 0 26 14 10 11 12 1", "11 20 9 21 18 14 25 19 5 6 7 1 23", "27 14 5 25 13 12 15 21 11 16 26 0", "28 19 16 27 21 18 20 3 22 26 14 2 17 7 10 5 4 24", "25 10 24 20 11 1 6 2 16 3 8 17 13 0 22", "24 14 20 9 19 8 18 27 28 6 12 13 17", "15 6 20 11 23 5 16 17 12 3 28 27 10 4 9 25", "13 12 26 7 24 15 6 20 19 1 8 11", "2 26 13 3 17 24 27 8 25 20 16 18 11 7 4 14 0 5 6", "15 22 1 16 10 24 23 25 14 12 11 28 17 3 27 9 20", "11 22 3 4 12 16 0 5 25 21 20 26 10 27 8 23 18", "15 25 19 2 24 17 28 9 27 26 10 14 20 0", "13 26 16 19 21 9 18 2 14 23 28 27 11 0 4 1", "5 25 16 8 3 28 14 23 19 6 10 2", "10 8 11 15 7 18 21 2 4 17 5 27 14 24", "9 20 5 16 17 10 27 13 28 25 15 6 18 11 7 4", "11 8 0 19 27 7 15 24 3 9 28 4 26 5 21 13 18", "5 20 25 26 6 28 9 18 2 13 22 1 8 27 14 4 3 23", "6 21 27 28 11 10 25 22 9 19 17 13", "4 25 6 22 1 5 13 12 11 19 7 8 28", "1 8 4 12 22 6 14 7 16 11 19 0", "26 18 9 3 11 23 20 8 28 21 1 22 15 17", "3 22 5 2 0 7 28 18 24 16 8 12 4 1 10 11 27", "2 16 4 14 21 24 27 19 28 6 26 3 9 12", "4 10 0 13 7 19 11 16 28 24 8 12 3 14", "27 3 4 20 18 22 11 9 8 14 21 24 6", "26 0 18 28 25 20 13 22 1 16 23 2 14", "11 10 13 23 19 21 5 12 20 4 8 18 15", "8 25 4 26 27 24 9 0 15 28 11 22 16 7 14", "11 13 14 4 21 9 1 16 19 27 7 24 15 6", "9 24 26 10 12 2 5 4 25 11 7 6 20 27", "17 20 13 11 7 21 15 19 26 4 24 22 18 6 28 14 3 8", "26 12 16 9 10 2 4 13 18 5 0 28", "22 28 3 27 15 24 4 1 16 11 8 19 2 10 7", "16 0 14 7 2 24 6 21 13 28 15 4 12 1", "28 21 14 18 3 11 5 20 23 8 25 10", "6 15 24 11 14 22 21 7 1 20 4 2 10 13", "16 4 24 12 20 14 28 3 10 19 2 5", "10 25 9 12 14 19 27 21 22 7 24 15 20 1 11 13 18 26", "10 25 13 26 11 22 5 6 2 23 8 9 12 24", "10 18 11 24 4 7 9 23 27 26 25 6", "22 24 7 23 1 0 11 12 3 4 15 26 10 9 18", "26 6 21 18 27 4 23 13 1 25 11 2 19 10", "6 20 17 8 1 3 25 4 23 14 10 19 7 0 28 12"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 14111;
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    vector<string> cities = {};
    int k = 27;
    vector<string> guards = {"19 14 5 3 23 17 13 2", "23 14 22 8 0 6 13 15 3 4 12 21", "15 24 1 3 12 21 17 6 19 22 8 25", "2 21 15 8 16 10 4 0 20 9 25 23 19", "26 10 5 13 15 23 3 11 16 22 17 9 21 20 1", "26 20 24 9 14 17 10 13 0 18 21 2 22 19 23", "20 6 13 25 14 2 24 5 26 10 22 7", "2 5 12 22 17 25 1 18 6 4 9 10 20 19", "0 11 3 14 19 8 23 17 25 26 7 2 1 15", "8 6 18 9 2 10 5 17 23", "6 24 11 4 2 17 10 0 14", "16 13 21 22 18 20 10 15 17 9 5 7", "16 21 3 0 12 26 9 24 14 17", "15 18 11 22 16 23 26 5 4 20 6", "16 17 20 13 23 18 12 1 4 9 22 14 7", "3 4 21 9 24 18 17 5 1 8 23 16 11", "13 14 8 5 1 11 19 26 15 12", "26 16 4 14 12 21 15 1 19 22 17 8", "16 21 13 17 24 3 5", "24 8 15 13 23 9 2 7 14 5", "12 1 25 5 17 19 15 20 23 22 21 16 13 9 0", "24 18 23 17 14 6 16 8 21 22", "14 24 7 17 1 8 0 4 6 9 21", "5 11 24 14 18 19 15 16", "22 7 16 26 18 4 17 23 8 19 1", "21 14 19 3 25 5 10 12 2 11 15", "4 9 2 14 22 7 8 11", "23 24 19 18 21 11 1 12", "5 1 23 0 24 11 10 25 20 19 7 9 6 4", "8 13 24 25 7 1 21 9 18 3", "20 0 6 7 11 23 22 19 17 15 26 16", "18 8 21 23 10 6 12 5 25 4", "13 19 15 9 14 0 24 26 4 1", "13 10 5 8 3 12 7 21 15", "9 17 21 22 8 14 23 20", "15 11 21 8 10 23 4 5 19 18 0 9 12 22 1 26", "19 7 1 14 18 4 11 25 16 17 15 20", "7 21 3 18 23 12 11 4 10 8 15 20 5", "10 3 26 18 17 9 7", "4 8 19 21 6 24", "25 18 13 4 12 1 9 10 11 23", "3 12 2 22 15 23 16 0 18", "13 5 18 19 15 7 1 14", "8 14 12 7 13 24 19 17 10 1 3 21", "24 12 17 16 2 1 3", "19 16 4 26 2 0 8 24", "26 18 13 4 3", "5 10 1 9 16 17 26 2 15 11 0 3 8 13", "25 19 21 2 18 11 4 10 8 16 13", "1 3 21 13 25 0 11 8 15 5 17 4"};
    vector<string> agencies = {"5 25 2 17 7 18 3 14 23 20 19 13", "10 12 14 23 21 0 3 8 15 13 4 6 22", "1 25 12 8 19 15 4 18 21 7 22 6 3 24 17", "16 20 10 21 8 23 2 0 25 9 11 4 19 15", "22 16 17 3 9 4 26 23 11 1 5 20 13 21 10 7 15", "19 24 20 15 10 22 14 0 21 2 17 3 18 13 26 9 23", "10 14 20 6 15 7 25 26 13 24 2 22 1 5", "2 19 9 17 4 22 1 25 20 6 18 10 7 5 12", "25 17 11 23 3 2 15 26 7 14 12 19 8 0 1", "24 17 6 18 9 23 5 8 10 2", "11 13 10 2 0 4 25 14 24 17 6 19", "20 7 25 21 16 17 5 10 15 18 22 13 9", "4 12 9 0 21 16 17 26 14 24 3", "15 9 18 4 6 11 5 26 23 20 16 22", "18 9 1 22 20 23 4 16 14 13 17 12 7", "24 7 1 15 18 8 9 17 16 21 11 23 4 5 3", "5 7 12 15 26 13 8 11 1 19 14", "17 21 26 8 1 14 22 4 19 12 15 16", "21 13 5 17 16 24 3", "9 14 24 5 7 18 25 15 8 23 6 2 13", "25 23 9 17 16 15 22 21 0 13 1 12 20 19 5", "22 21 23 19 24 17 3 6 16 18 14 8", "17 9 21 1 8 4 6 14 0 7 24", "14 0 20 19 11 18 24 5 16 15", "19 22 17 16 18 26 1 4 8 23 7", "25 15 21 11 3 12 2 19 0 5 14 10", "7 9 22 4 21 11 14 2 8", "23 11 1 19 18 12 26 24 21", "23 10 7 0 5 24 4 9 19 25 11 20 1 6", "15 24 13 18 25 7 9 3 1 8 21", "22 0 6 11 15 17 20 23 16 7 26 19 8", "23 16 10 5 12 25 21 8 4 18 6", "19 15 0 26 12 4 9 13 14 1 6 5 24", "9 8 14 12 5 13 10 16 7 21 15 3", "6 21 1 0 24 20 23 17 8 22 14 9", "12 5 21 9 26 8 18 4 22 23 15 1 10 19 11 7 6 0", "20 14 18 19 4 11 23 16 8 15 1 17 25 7 13", "5 15 23 2 11 7 21 3 12 10 20 4 8 18", "9 16 10 17 18 3 7 26 6", "21 24 8 4 9 19 6", "11 13 23 25 3 9 4 18 10 12 8 1", "8 22 0 1 15 3 18 5 2 12 16 25 23", "9 18 14 1 7 19 2 13 15 5", "10 19 12 14 17 3 21 7 8 24 1 13", "24 2 17 16 3 1 19 20 12 8", "0 8 24 14 16 26 4 22 2 19", "4 5 26 3 24 21 13 18", "9 5 3 11 15 0 16 2 10 26 13 8 17 1", "13 10 19 4 25 18 2 8 21 11 16 12", "0 8 4 5 15 13 17 1 11 3 21 25"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 14508;
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    vector<string> cities = {};
    int k = 31;
    vector<string> guards = {"24 13 9 11 0 4 6 30 23 29 17 25 22", "12 8 7 26 10 9 1 5 22 18", "1 16 26 0 27 18 15 25 11 19 23 7", "20 5 19 0 18 14 24 22 15 13 23 1 26", "26 4 17 1 23 13 27 14 12 6 8", "24 21 30 19 16 6 11 4 20 18 2 14 1 12", "15 12 24 26 25 29 2 5 13 22 8", "15 19 11 18 25 17 0 28 7 20 12 13 16 27 21", "6 23 19 8 17 10 14 13 3 28 16 27", "3 7 24 6 12 5", "19 10 1 23 7 30 3 14 16 11 26 12 2", "29 23 9 22 21 26 8 0 10 25 30 18 5 2 11", "22 28 17 7 29 11 2 3 13 18 30 4 19 21 12 10 26 1", "12 1 29 14 19 30 21 4 22", "6 1 19 20 7 22 10 2 17 3 18", "11 13 0 5 3 19 20 22 26 23 12", "21 26 1 25 30 13 28 14 3 27 7 4 0 19 8 10", "26 8 22 3 12 24 23 30 18 7 9 1", "24 26 2 28 14 10 3 7 16 25 27 4 9 6 19", "22 2 9 26 12 5 8 18 7 14 16 0", "2 22 24 18 19 21 15 8 16 25 1 20 6 26 17 12 4", "8 10 29 6 3 11 9 2 17 19 4", "21 22 25 8 3 0 30", "0 21 10 14 22 13 15 16 26", "26 3 14 29 4 18 2", "28 21 17 9 18 8 13 5 2 15 10 1 26 12 20", "29 20 1 24 0 27 4 21 19 28 14 11 25 15", "28 9 17 10 7 3 21 20 22 8 15", "6 15 17 20 3 11 25 28 10 9", "24 17 4 10 28 30 8 9 29 27 16 19 5 0", "3 28 10 25 1 27 20 19 22 8 16 2", "21 16 6 8 2 22 0 26 20 28 27 13 23", "11 6 23 7 16 5 14 8 25", "21 27 13 16 4 3 7", "2 7 17 4 8 24 29 27 26", "9 3 29 0 8 20 19 11", "2 10 28 1 20 23 11 12 5 29 17", "13 29 19 7 14 12 22", "0 11 2 15 12 22 14 3 7", "29 5 21 26 16 11 30", "21 5 2 8 28 9 25 24 30 11 14 19 29 15", "16 27 20 8 1 14 24 28 13 2 26 21", "11 12 28 23 5 0 13 21 29", "11 21 24 20 9 15 16 8 26 12", "12 24 17 1 10 8 5 21 13 27 15 2", "12 1 18 10 9 28 3", "9 15 25 2 8 14 28 1", "19 29 2 12 11 14 20 27 25 26 1 7 3 16 17 4", "15 18 16 22 25 27 20 11 13", "25 13 24 12 9 18 0 11 6 20 2"};
    vector<string> agencies = {"13 29 30 9 4 24 22 25 17 6 0 23 11", "22 10 12 7 9 26 8 18 5 1", "19 0 25 27 15 18 23 7 26 16 1 11", "22 0 19 5 23 20 18 13 15 24 28 14 1 26", "1 12 27 13 14 23 8 26 6 17 4", "18 19 21 1 12 14 20 11 4 30 24 16 6 2", "29 5 15 12 25 22 24 26 2 8 13 17", "12 17 25 19 16 28 21 13 20 11 7 15 0 27 18", "13 10 28 8 19 17 14 6 27 23 3 16", "5 24 7 12 3 6", "30 1 11 23 2 19 10 12 16 7 26 3 14", "22 9 30 21 18 26 29 0 25 11 8 10 23 2 5", "30 22 19 9 29 3 21 11 12 26 17 10 7 2 28 4 13 18 1", "12 29 1 19 22 30 14 4 21", "20 6 17 7 10 3 19 1 18 2 22", "26 13 22 23 11 0 12 28 19 3 20 5", "19 21 10 8 13 30 1 28 25 3 27 4 14 0 7 26", "26 12 3 8 9 7 23 1 18 30 24 22", "27 14 24 16 3 9 26 10 28 19 25 4 2 7 6", "8 18 12 16 26 25 22 14 7 2 0 9 5", "25 26 4 21 16 12 1 19 18 8 22 15 2 20 6 17 24", "29 3 9 19 4 17 6 10 2 8 11", "3 28 21 30 25 22 0 8", "21 16 15 14 0 13 26 22 10", "18 26 2 3 29 4 14", "18 12 1 10 8 15 2 20 17 21 26 28 13 9 5", "20 21 24 25 29 0 27 4 28 1 19 15 14 11", "22 8 7 3 17 10 20 28 21 15 9", "3 17 11 10 25 6 15 20 28 9", "8 28 27 5 17 10 29 0 30 24 9 15 19 16 4", "17 27 16 2 10 8 28 19 20 25 3 22 1", "26 23 21 8 20 0 22 13 28 6 16 2 27", "25 16 10 8 6 14 7 11 5 23", "3 13 16 21 4 7 22 27", "26 7 24 29 17 8 27 2 4", "20 3 17 19 11 29 8 9 0", "20 5 29 8 23 28 10 12 2 17 1 11", "12 29 22 7 14 19 30 13", "14 0 15 11 2 3 20 12 7 22", "26 16 21 5 30 29 11", "2 11 23 19 29 21 30 28 24 5 25 9 8 14 15", "16 24 8 26 27 23 2 20 4 28 14 13 1 21", "13 21 23 5 28 14 11 29 0 12", "15 11 16 9 20 24 21 12 26 8", "8 5 17 12 2 27 21 29 1 13 10 15 24", "3 18 28 1 7 10 9 12", "1 15 25 14 28 9 2 8", "17 20 2 19 27 4 25 14 16 1 3 7 12 29 26 11", "18 27 16 2 11 20 13 25 15 22", "0 12 20 6 25 9 18 13 2 11 24"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 16973;
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    vector<string> cities = {};
    int k = 42;
    vector<string> guards = {"8 3 1 9 10 23", "4 3 23", "6 5 8 1 3", "3", "3", "3", "3", "3", "", "8 3 1 9 10 23", "", "8 3 1 9 10 23", "", "", "8 3 1 9 10 23", "8 3 1 9 10 23", "8 3 1 9 10 23", "3", "8", "18", "18 8 3 1 9 10 23", "18", "3", "2 8 3 1 9 10 23"};
    vector<string> agencies = {"8 3 1 9 10 23", "4 3 23", "6 5 8 1 3", "3", "3", "3", "3", "3", "", "8 3 1 9 10 23", "", "8 3 1 9 10 23", "8 3 1 9 10 23", "8 3 1 9 10 23", "8 3 1 9 10 23", "8 3 1 9 10 23", "8 3 1 9 10 23", "3", "8", "18", "18 8 3 1 9 10 23", "18", "3", "2 8 3 1 9 10 23"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 916;
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    vector<string> cities = {};
    int k = 10;
    vector<string> guards = {"2 3 4 7 8 9", "1 2 3 5 7 8 9", "0 1 7", "0 3 5", "0 2 3 6 7 8", "0 4 5 6 8", "7", "0 3 4 8 9", "0 1 2 3 5 6 8 9", "0 2 3 4 7 9", "5", "5 6", "1 2 7", "", "0 3", "3 4 7 9", "5 6 9", "9", "0 4 7 9", "2 3 5 9", "0 1 2 3 6 8", "1 2 4 6", "2", "1 2 8", "0 7 9", "2 3 7", "0 5", "1 3 5 6 8 9", "0 1 4 5 6 8", "1 2 7", "0 3 5 9", "2 3 5 8 9", "0 2 3 4 6", "0 1 3 5 7 9", "1 5 6 7 8", "3 4 6 9", "3 4 5 6", "0 1 3 4 6 9", "0 2 3 5 6 7 8", "1 7 8", "0 2 9", "7 9", "0 2 3 5 6 7 9", "1 3 8 9", "0 2 4 5 6 7", "1 2 6 7 8", "0 1 2 3 8 9", "1 2 6 7 8 9", "4", "0 6 7 8"};
    vector<string> agencies = {"0 1 2 3 4 5 7 8 9", "1 2 3 4 5 7 8 9", "0 1 2 3 6 7 8 9", "0 1 2 3 5 7 8", "0 2 3 5 6 7 8", "0 1 2 3 4 5 6 7 8 9", "1 3 4 5 6 7 8", "0 2 3 4 5 6 7 8 9", "0 1 2 3 4 5 6 8 9", "0 2 3 4 6 7 8 9", "0 2 3 5 6", "1 2 3 4 5 6 7 8 9", "1 2 5 6 7 8 9", "0 1 2 4 5 6 7 8 9", "0 1 3 4 5 6 7 8 9", "0 1 3 4 5 7 9", "0 1 2 3 4 5 6 7 8 9", "0 1 2 3 6 7 9", "0 4 5 6 7 9", "0 1 2 3 5 6 7 8 9", "0 1 2 3 4 6 7 8", "1 2 3 4 6 7 8", "0 1 2 3 4 6 8", "1 2 3 4 6 7 8", "0 1 2 6 7 9", "1 2 3 4 6 7 8 9", "0 1 2 3 4 5 8 9", "1 2 3 5 6 7 8 9", "0 1 2 3 4 5 6 7 8", "1 2 3 4 6 7 8", "0 2 3 4 5 8 9", "0 1 2 3 4 5 6 8 9", "0 2 3 4 5 6 8 9", "0 1 2 3 5 7 8 9", "0 1 2 3 5 6 7 8 9", "0 3 4 5 6 7 8 9", "1 3 4 5 6 7 8 9", "0 1 3 4 5 6 7 8 9", "0 1 2 3 4 5 6 7 8 9", "0 1 2 3 4 6 7 8", "0 1 2 3 4 5 6 8 9", "0 1 2 4 5 7 9", "0 1 2 3 5 6 7 8 9", "0 1 2 3 6 7 8 9", "0 1 2 3 4 5 6 7 8 9", "0 1 2 3 4 6 7 8", "0 1 2 3 4 6 8 9", "0 1 2 3 5 6 7 8 9", "0 2 3 4 5 6 7 8", "0 1 2 3 4 6 7 8"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 913;
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    vector<string> cities = {"0001001000010001010000000000100000100000", "0001000000000000000000000000110100010000", "0000100010001000000000100000000000000000", "1100011001100000100010000010100100000000", "0010001100000000000000110000111000000000", "0001000001100010100000010000100000101001", "1001100000010000000010111000001010110000", "0000100001000000000110000000001000101000", "0010000000011001000000000000000000000000", "0001010100101001000000000000000010000110", "0001010001010000001010000000001100000101", "1000001010101000100000000100110011000100", "0010000011010000100000000101100000000000", "0000000000000000000000000001000000000010", "0000010000000000100001000010101000001000", "1000000011000000001000000001010000000000", "0001010000011010000000000000000000001001", "1000000000000000000001010000110010100000", "0000000000100001000000000010000000000010", "0000000100000000000000010010001000000000", "0001001100100000000000000000001000001110", "0000000000000010010000000000000001100001", "0010101000000000000000001000000101000001", "0000111000000000010100000000000000010100", "0000001000000000000000100000000000000100", "0000000000011000000000000000000010100011", "0001000000000010001100000000000000001000", "0000000000001101000000000000000010001000", "1101110000011010010000000000010000000000", "0100100000010001010000000000100011010110", "0000101100100010000110000000000000011010", "0101000000100000000000100000000000000100", "0000001001010000010000000101010001000000", "0000000000010000000001100000010010000001", "1000011100000000010001000100000000000110", "0100001000000000000000010000011000001000", "0000010100000010100010000011001000010000", "0000000001110000000010011000010100100010", "0000000001000100001010000100011000100100", "0000010000100000100001100100000001000000"};
    int k = 10;
    vector<string> guards = {"0 1 3 4 5 6 7", "1 6 7 9", "3 4 5 6 7 8", "3 5 7 8 9", "1 2 4 5 6 8 9", "0 1 4 7", "2 3 5 6 7", "0 1 2 4 9", "1 2 5 7 8", "0 1 2 3 4 6 7 8 9", "0 1 2 6 7 8 9", "1 2 5 7 8", "2 3 4 7 8 9", "0 2 3 4 5 6 8", "2 3 4 6 7 8 9", "3 4 6 7 8 9", "0 3 4 5 7 9", "0 1 3 4 5 6 7 9", "1 3 5 7 8", "0 1 2 3 4 6 7 9", "6 8 9", "0 1 2 3 4 5 7 8 9", "0 1 2 3 4 5 6 7 8 9", "2 4 6 7 8 9", "0 1 4 5 6 7 8 9", "1 2 3 4 7 8 9", "1 2 3 5 6 8", "1 2 3 4 5 7 9", "0 1 2 3 6 7 8 9", "0 4 5 6 7 8 9", "0 2 5 6 9", "5 7 8", "0 3 4 6 7 8 9", "0 1 3 4 6 8", "0 1 3 5 6", "0 2 3 4 6 7 8 9", "0 3 4 7", "0 4 5 6 7 8 9", "0 1 3 4 5 6 8", "0 1 2 4 5 6 7 9"};
    vector<string> agencies = {"0 1 2 3 4 5 6 7 8", "0 1 6 7 8 9", "1 3 4 5 6 7 8 9", "0 3 5 7 8 9", "0 1 2 3 4 5 6 8 9", "0 1 4 7 8", "2 3 5 6 7", "0 1 2 4 5 7 9", "1 2 3 5 6 7 8", "0 1 2 3 4 6 7 8 9", "0 1 2 4 5 6 7 8 9", "1 2 3 5 7 8", "2 3 4 7 8 9", "0 2 3 4 5 6 8", "0 2 3 4 6 7 8 9", "3 4 5 6 7 8 9", "0 1 2 3 4 5 6 7 8 9", "0 1 2 3 4 5 6 7 8 9", "0 1 3 4 5 6 7 8", "0 1 2 3 4 5 6 7 9", "4 5 6 7 8 9", "0 1 2 3 4 5 6 7 8 9", "0 1 2 3 4 5 6 7 8 9", "0 2 4 5 6 7 8 9", "0 1 3 4 5 6 7 8 9", "0 1 2 3 4 5 7 8 9", "1 2 3 5 6 7 8", "1 2 3 4 5 7 8 9", "0 1 2 3 5 6 7 8 9", "0 2 4 5 6 7 8 9", "0 2 3 5 6 7 9", "0 3 5 7 8", "0 1 3 4 6 7 8 9", "0 1 2 3 4 6 7 8", "0 1 3 4 5 6 7 9", "0 2 3 4 6 7 8 9", "0 3 4 6 7 8", "0 3 4 5 6 7 8 9", "0 1 3 4 5 6 8 9", "0 1 2 4 5 6 7 8 9"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 491;
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    vector<string> cities = {};
    int k = 1;
    vector<string> guards = {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""};
    vector<string> agencies = {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    vector<string> cities = {"00100111011101011111110011011101001010010110011000", "00100101010001010010101000010100100100111000110111", "11011011111111000111000001001010101100010111100111", "00101000111010111110101101101011100010000100010110", "00110100111001001000101111101101100011101010001010", "11001001001100000011011111110101000101111000100001", "10100001100111011000011110101100000011011010110001", "11100110110110001110100111011000011100000001101001", "00111011000111110001101010011101001100101000001100", "11111001001101010110000100110000110010010101101110", "10111100010000101001110101111011111010010111110000", "10100111110011001001001110011001100110101101100110", "00110011100101011010100001110010100100110010000111", "11101010110110010011110111000011101010100110000000", "00010000101000000000101001100110101101010100101110", "11010010110011001111110010111001010111111101101111", "10011011001110010100010001000111011000110100111011", "10110001010000011010000011110001011010111101111010", "11110101010011010100110101111101100111001000000010", "10100100101101010000000111000100000000011011000000", "11011001101011110010010101011000001110000111111011", "10000110001001011010100100111111001010011100111100", "01011110100100100000000001101111000100001111101001", "00011111011101000011110011001011111001001001011010", "10001111100101010101000101100010001010000000000110", "10111101001011101111101110111110110111011010100011", "00011110011010110110011011001111100101010000000001", "11000101111110010110110001001100000011100011100011", "10111011101100010010111101110010101111110010001101", "11001110100000101011011001110001001110110101100110", "00110000001011101000011111101000101001011100000100", "10011100101101011110011100100100010111001001111101", "01111000011111100010000101101010001001011010010010", "00000001011000011100000101000001001011111001100100", "10100001101001101100110110001110110111001101011010", "01100101100110110010101001101101001011100010001111", "10011010011101010110110011011101011101011100001010", "00001110000000110010000101111011111110111011110100", "01001100100111011100000000011100010101011000010111", "11100110011010111101010001101110110011100111100000", "01001110100100010111011101000011111011100100110001", "10110000011101111100111000000110001010011010111100", "10101010001011000001101001011000100101010100111110", "00100001011100010101101100010101011001010000011001", "01100111011100111100111001010101010001011110010100", "11010010001000001100110100000001101001101111100010", "10001001110000111100111100001001001110000111000010", "01110000110110110000010010001111010101100110100011", "01111000010110111110100111010100101110100010011100", "01100111000010011000101001111001000100101001000100"};
    int k = 50;
    vector<string> guards = {"4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 10 11 13 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "0 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 25 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38"};
    vector<string> agencies = {"4 5 9 12 17 18 19 20 21 22 23 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 25 27 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38 40 41", "4 5 9 12 17 18 19 20 21 22 24 29 31 38 40 41", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 33 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 10 11 13 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "0 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 25 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38", "4 5 9 12 17 18 19 20 21 22 24 29 31 38"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 234;
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    vector<string> cities = {"010", "101", "010"};
    int k = 1;
    vector<string> guards = {"0", "", ""};
    vector<string> agencies = {"0", "0", "0"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    vector<string> cities = {"01110", "10110", "11011", "11100", "00100"};
    int k = 1;
    vector<string> guards = {"0", "", "", "", ""};
    vector<string> agencies = {"0", "0", "0", "0", ""};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test67() {
    vector<string> cities = {"01100000", "10010000", "10010000", "01101000", "00010110", "00001001", "00001001", "00000110"};
    int k = 1;
    vector<string> guards = {"0", "", "", "", "", "", "", ""};
    vector<string> agencies = {"0", "0", "0", "0", "0", "0", "0", ""};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 67: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 67: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test68() {
    vector<string> cities = {};
    int k = 50;
    vector<string> guards = {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"};
    vector<string> agencies = {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 68: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 68: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test69() {
    vector<string> cities = {"00101011101111110110", "00110111101010111010", "11010101011111100111", "01100100111011111101", "10000111011011011111", "01111011111100011111", "11001100011111111111", "11101100101101111011", "11010101001100111111", "00111110001101011011", "11111111110011101101", "10100111110011111111", "11111010001101001100", "10111011011110111100", "11110011101101010111", "11011111110101100111", "01011111111111000001", "10111110101111110011", "11101111110100110101", "00111111111100111110"};
    int k = 20;
    vector<string> guards = {"1 3 4 5 13 14 15 16 18 19", "8 9 10 11 14 17", "1 2 3 7 8 9 10 11 12 13 16 17", "0 1 2 6 15 17", "0 1 4 5 8 11 12 13 19", "2 3 5 6 11 13 14 17 19", "0 2 4 5 8 9 10 12 13 15 16 17 18 19", "2 6 13 15 16 18", "1 2 3 4 7 10 11 12 13 14 17 18", "1 3 4 5 7 8 9 10 11 13 15 16 17 18 19", "1 2 4 6 9 15 17", "1 4 5 6 8 9 10 11 14 15 17", "0 1 4 5 9 10 12 14 16 17 19", "0 2 3 9 12 13 18 19", "2 8 9 10 12 15 16 17 18 19", "0 3 4 5 6 7 8 9 10 12 14 15 16", "1 2 4 8 9 14 16 17 18", "2 5 6 7 9 10 15 16 18", "1 2 3 5 7 8 11 12 13 15 18", "0 1 2 4 5 6 7 10 11 14 15 16 17 18 19"};
    vector<string> agencies = {"1 2 3 4 5 6 9 12 13 14 15 16 18 19", "2 3 4 6 7 8 9 10 11 13 14 17", "0 1 2 3 4 6 7 8 9 10 11 12 13 15 16 17 18", "0 1 2 4 6 11 13 14 15 16 17 19", "0 1 3 4 5 7 8 9 10 11 12 13 17 18 19", "0 1 2 3 5 6 7 8 9 11 13 14 15 16 17 19", "0 2 3 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19", "1 2 3 6 8 10 11 13 15 16 18", "1 2 3 4 6 7 9 10 11 12 13 14 16 17 18 19", "1 2 3 4 5 7 8 9 10 11 12 13 15 16 17 18 19", "0 1 2 3 4 5 6 7 9 10 12 13 15 17 18 19", "1 2 3 4 5 6 7 8 9 10 11 12 14 15 17", "0 1 3 4 5 7 9 10 11 12 14 15 16 17 19", "0 2 3 4 5 6 7 8 9 12 13 16 18 19", "0 2 3 4 5 6 8 9 10 12 15 16 17 18 19", "0 3 4 5 6 7 8 9 10 12 13 14 15 16", "0 1 2 4 5 7 8 9 10 11 13 14 16 17 18 19", "2 4 5 6 7 9 10 11 12 14 15 16 18", "0 1 2 3 5 7 8 9 10 11 12 13 15 16 18", "0 1 2 4 5 6 7 8 10 11 13 14 15 16 17 18 19"};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 1049;
    if(result == expected) {
        cout << "Test Case 69: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 69: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test70() {
    vector<string> cities = {"010000000", "101100000", "010000000", "010000000", "000000100", "000000010", "000010001", "000001001", "000000110"};
    int k = 2;
    vector<string> guards = {"0", "", "", "", "0", "0", "", "", ""};
    vector<string> agencies = {"0", "0", "0", "0", "0", "0", "0", "0", ""};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 70: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 70: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test71() {
    vector<string> cities = {"0111", "1000", "1000", "1000"};
    int k = 1;
    vector<string> guards = {"", "", "", ""};
    vector<string> agencies = {"0", "0", "0", ""};
    NowhereLand* pObj = new NowhereLand();
    clock_t start = clock();
    int result = pObj->placeGuards(cities, k, guards, agencies);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 71: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 71: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    test67() == 0 ? ++passed : ++failed;
    test68() == 0 ? ++passed : ++failed;
    test69() == 0 ? ++passed : ++failed;
    test70() == 0 ? ++passed : ++failed;
    test71() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=19849563&rd=13750&pm=7891
********************************************************************************
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
 
using namespace std;
 
#define SIZE(X) ((int)(X.size()))
 
const int maxnode=20000+5;
const int maxedge=1000000+5;
const int oo=1000000000;
 
int node,src,dest,nedge;
int head[maxnode],point[maxedge],next[maxedge],flow[maxedge],capa[maxedge];
int dist[maxnode],Q[maxnode],work[maxnode];
 
void init(int _node,int _src,int _dest)
{
  node=_node;
  src=_src;
  dest=_dest;
  for (int i=0;i<node;i++) head[i]=-1;
  nedge=0;
}
void addedge(int u,int v,int c1,int c2)
{
  point[nedge]=v,capa[nedge]=c1,flow[nedge]=0,next[nedge]=head[u],head[u]=(nedge++);
  point[nedge]=u,capa[nedge]=c2,flow[nedge]=0,next[nedge]=head[v],head[v]=(nedge++);
}
bool dinic_bfs()
{
  memset(dist,255,sizeof(dist));
  dist[src]=0;
  int sizeQ=0;
  Q[sizeQ++]=src;
  for (int cl=0;cl<sizeQ;cl++)
    for (int k=Q[cl],i=head[k];i>=0;i=next[i])
      if (flow[i]<capa[i] && dist[point[i]]<0)
      {
        dist[point[i]]=dist[k]+1;
        Q[sizeQ++]=point[i];
      }
  return dist[dest]>=0;
}
int dinic_dfs(int x,int exp)
{
  if (x==dest) return exp;
  for (int &i=work[x];i>=0;i=next[i])
  {
    int v=point[i],tmp;
    if (flow[i]<capa[i] && dist[v]==dist[x]+1 && (tmp=dinic_dfs(v,min(exp,capa[i]-flow[i])))>0)
    {
      flow[i]+=tmp;
      flow[i^1]-=tmp;
      return tmp;
    }
  }
  return 0;
}
int dinic_flow()
{
  int result=0;
  while (dinic_bfs())
  {
    for (int i=0;i<node;i++) work[i]=head[i];
    while (1)
    {
      int delta=dinic_dfs(src,oo);
      if (delta==0) break;
      result+=delta;
    }
  }
  return result;
}
 
class NowhereLand
{
public:
  bool G[60][60];
  int placeGuards(vector <string> cities, int k, vector <string> guards, vector <string> agencies)
  {
    int n=SIZE(cities);
    for (int i=0;i<n;i++) for (int j=0;j<n;j++) G[i][j]=(cities[i][j]=='1');
    int R=0;
    for (int p=0;p<k;p++)
    {
      bool E[60],S[60];
      memset(E,false,sizeof(E));
      memset(S,false,sizeof(S));
      for (int i=0;i<n;i++)
      {
        istringstream sin(guards[i]);
        for (int v;sin>>v;)
          if (v==p)
            E[i]=true;
      }
      for (int i=0;i<n;i++)
      {
        istringstream sin(agencies[i]);
        for (int v;sin>>v;)
          if (v==p)
            S[i]=true;
      }
      init(n+n+2,n+n,n+n+1);
      for (int i=0;i<n;i++)
        addedge(i,i+n,1000000,1000000);
      for (int i=0;i<n;i++)
        for (int j=i+1;j<n;j++)
          if (G[i][j])
          {
            addedge(i+n,j,1,1);
            addedge(i,j+n,1,1);
          }
      for (int i=0;i<n;i++)
        if (E[i])
          addedge(src,i,1000000,0);
      for (int i=0;i<n;i++)
        if (!E[i] && !S[i])
          addedge(i+n,dest,1000000,0);
      int tmp=dinic_flow();
      R+=tmp;
    }
    return R/2;
  }
};

********************************************************************************
*******************************************************************************/