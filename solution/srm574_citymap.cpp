/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=12479
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class CityMap {
public:
    string getLegend(vector<string> cityMap, vector<int> POIs);
};

string CityMap::getLegend(vector<string> cityMap, vector<int> POIs) {
    string ret;
    return ret;
}


int test0() {
    vector<string> cityMap = {"M....M", "...R.M", "R..R.R"};
    vector<int> POIs = {3, 4};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "MR";
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<string> cityMap = {"XXXXXXXZXYYY"};
    vector<int> POIs = {1, 8, 3};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "ZXY";
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<string> cityMap = {"...........", "...........", "...........", "..........T"};
    vector<int> POIs = {1};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "T";
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<string> cityMap = {"AIAAARRI.......GOAI.", ".O..AIIGI.OAAAGI.A.I", ".A.IAAAARI..AI.AAGR.", "....IAI..AOIGA.GAIA.", "I.AIIIAG...GAR.IIAGA", "IA.AOA....I....I.GAA", "IOIGRAAAO.AI.AA.RAAA", "AI.AAA.AIR.AGRIAAG..", "AAAAIAAAI...AAG.RGRA", ".J.IA...G.A.AA.II.AA"};
    vector<int> POIs = {16, 7, 1, 35, 11, 66};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "GOJIRA";
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<string> cityMap = {"C"};
    vector<int> POIs = {1};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "C";
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<string> cityMap = {"KK"};
    vector<int> POIs = {2};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "K";
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<string> cityMap = {"CBC"};
    vector<int> POIs = {1, 2};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "BC";
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<string> cityMap = {"GGGG..GGGGGGG..GGG.GG..GGGGGGG.GGGG..GGGGGGGGGGGGG", "GGGGGGGGG.GGG..GGGG....GGGGG.GGGG.GG.GGG.G.G.GG.GG", "GGGGGGG.G.GGG.GGG.GGGGGG.GG.GGGG.GG..GGGGGGGGG.GGG", "GGG.GGGG.GGG.GG..GG.GGGGG.GG.GGGG.GGG..GGGG.GGGGGG", "GGGGGGGGGGGGGG.GGGGG.GGG..GGGGG.GGGGGGGG.GG.GGGGG.", ".GGGGGGG.G.GGGGGGG.GGGGGGG.GGGGG...GG..G.G..GG.GGG", "GGGGGGGG..G.GG.GG..GGG..GGGGGGGGGGGG..GGGGG.GGGGGG", "GG..G.GGGGGGG...GGGGG.G.GGGGGGG.GGGGGGG....G.GGG..", "GGGGGGGGGG.GG.GGGGGG..GG...GGGGGGGGG.G..GGG.GGGGGG", "..GGGGG.G..GG.GGGGGGG....GGGGGGGGGG.GGGGGG.GG.GG.G", "GGG.GGG.GGG...GGGGGG.GG.G.G.GG.G.G.GG..G..GG.GG.GG", ".GGGG.GGGGGGGGGGGGGG.GGG.G.GG..GG..GGGGG..GGGGG..G", "GG.GGGGGGG...GGGGGGG..GG.GG.GGGGG.GGG.GG.GGGG...GG", "G...GGGGGG.GGGGGGGGG.G.GGGGGG.GGGGGGGGGGGG...GGGGG", "GG.GG..GGGGGGGGGG.GGG.GGGGGG..GGG..GGGG..GG..GGGGG", "GGG.GG.GGG.G.GG.GG.GG.G.G..GGGGGGGGGGG.G.GGGG.GG.G", "..G..GGG.GG..GGGGG.G...GG...GGG.GGGG.GGGGGGGGGGGGG", "GGG..GGGGG.GG.GGGGGGGGGGGGGG..G...GGGG.GGGG.GGG..G", "GG.GGG.G.G.G..GGGG.G.GGG..GGG.GGG.GGGGGGGGGGGGG.GG", "GGGG.GGGG.GGGGGGG.GG..GG..GGGGGGGGGGGGGGG.GGGGGGG.", "GG.G.GGGGG.GGGGGG.GG..GGG.GG.G.GGG..GG.GG.GGGGGGGG", "G.GGG.GGGGGGGG.GGGGGG.GGGGGGGGGGG.GGGGGGGG.G..G.G.", "GGGGGGGG.GGGG..GG.G..GGGGG.GGG.GGG.GGGGGGGGGGGGG.G", ".GGGG.GGG.G.GGGG.GGGGGG..GG.GGGG..GG.GG.GG.G..GGGG", "GG.GGGGG.G.GGG.GGGG.GGGGGGG.G.G.G.GGGG..G.GGGGGGGG", "GGGGGGGG..GG..GGGGGGGG.G.G.G.GGGGGG.GG.GG.GGGGGGGG", "GGG.GGGG.GGGGGGGGGGG.GG.GG..GGGGGG.GGG.GGGG.GGG.GG", "G.G.G.G...G..GGG.GG.G.GGGGG.G.GGGGGGGGGGGG.GG.G.GG", ".GG..GGGGGGGGG.G.GGGGGGGGGG.G.GG.GGG.G.G.GGGGGG.GG", "GGGGGGGG.GG.G.GGGGGGGGGGGGGGGGGG...GG..GGGGGGGGGGG", ".GGGGGGGGG.G..G.GGG..G.GGGGG.G.GGGGGGGGGGGG.GGGGGG", "GGG.GGGG.GG..GGGGG..GGGGGGGGGGGG....GG.GG...GGG.GG", "GG.G.G..GG.GGGGGGGG.GGGGGGGGGGGGGGGG..GGGGGGGG.G.G", ".G.GGGGGGG.G.G.GGGGG.GG..G..G..GGGG.G.GGGGGGGGGG.G", "G..GG.GG.GGGG.G..GGGGGGG.GGG...GGG.GGGGG.GGGGGGGGG", "GGGGGG.GGG.GG.G.GG.GGG.GGGGG.G.G.GGGG.GGGGGGGGG.GG", "G.GGGGG.GGG.GGGGGG.GGGGGGG..GG.GGGG.GGG..GGGGGG.G.", "GG.G.GGGGGGGG.GGGGGGGGGGGGGGG.GGGGG.GGGGGG..G.G.G.", ".GG.GGGGG.GGGGGG.GGG.G.GG.GGGG..G.GG.GGGG.G....G.G", "GG.G.GGGGG.GGGGGG.G.GGGGGGGG.G.G.G...GGGGGGGGGGG..", ".GGGGGG.G..GGGGGGGGGGGGGGG.GGGGGG.GGGG.GGGGG.GG.G.", "G.GGG.GGGGGGGGGGGGG..G..GG.GGGG.G.GG.GGG.G..GG.GGG", "G.GG.GGGGGGGGGGGG.GGGGGGGGGGG.GGGG.GGG...GGGG.GGGG", "G.G..GGG.GGGGGG.GGG.G.GGGGGGGGGGGGGGGG.G..GGG...GG", "...GG..GGG..GGGGGGGG.G..GGG..GGGGGGGGGG.G.GGGGGGGG", "G.GGGG..GGGGGGG.GG.G.GGGGGG...GG...GG.GGG.GGGGGG.G", "GGGGGG.G.GGGG.GG..GGG.G.GGG.GGG...GG..G.GGG..GGG.G", "GG...GGGGGGGGGG..G.GG.G.GGG.GGGG.GGGGGGGGGGGGG...G", "G.GGGGGGGGGGGGG..GGGGGGGGGGGGGGG....G...G.GGGGG.GG", "GGGGGGG.GGGGG.G..GG.GG.G.GG.GG..GGGGGGGG.GGGGGGGGG"};
    vector<int> POIs = {1875};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "G";
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<string> cityMap = {"ZZ.Z..W.WW.ZZ..ZW.ZZW.Z.ZZZ.Z.ZWZ.ZZW.ZWZZ.ZZZ.WZZ", "Z.ZWZW..Z.ZZZWZ..Z.W..Z.ZWZZ..WZWWZ..ZZ.ZZWW.Z.W.Z", "ZWZ.ZZ...Z.WZZZ.ZZZZZ..ZZZZ.ZW.ZWZWZ..Z.ZZZZWWWWWW", "Z.ZZZZZWWWZ.WZZW.WZW.W.WZZWZZZZ.Z.ZWWWZZZ..ZW.ZZWZ", "..ZZZ.WW.ZZWZWZ.ZZ.WZ..ZW.ZZ..Z..W.ZZZ.WZ.ZZZWWZ.W", "ZZZ.ZZZ.ZZ.ZWWWW..ZZZZW..ZWZZZWW.ZZ.W.ZZ.WW.Z.ZW.W", "WWW..ZZ..ZZ.ZZZZ.WWZWZZ.WZZW.ZZ..ZWWZ.W.W.WZWZZZZ.", "Z.ZWZZZ...WWWZWWW.Z.ZWZZW.Z.WZZZWZ..ZZW.ZWW.ZW.W.Z", "Z.Z.Z..ZZZ.Z..WZ.ZWWWZ....W.ZW.ZZ.Z....ZWZW...WZ.Z", "W.ZWWZZZZWW.WZ.Z..W.ZZZ.ZWWZWZZZZW...Z.ZZWZWZZ.ZZZ", ".ZZZWZW.WW.WZ...WZ..ZZ...Z....ZWZZ.WZZ.ZWWZZWW.ZZ.", "ZZZW.ZWWWZW.WZ.Z.ZWZZZWZZ...ZWZ.ZZZZZ...WZWZ.W.WWZ", "ZW..WZ.ZWWZW..Z.ZZZ.WZZZ.....ZWWZ.ZWZ.WZ.W.ZWZZ..Z", "ZZZZZWWZZZZW...W.ZZZZZW.W.WZZZWWZ.WZZ..WZ.ZZZWWZWZ", "ZZZZZZ..WW...ZZZZZW.W.ZZ..ZZWW.ZWZ..ZZZZWZWZZWWZ.Z", ".Z.WW....ZWWWZ.ZZZWZZZZWZZ..Z.ZWZZ..WWZ.ZZZ.ZW.Z.Z", "WZWZ...ZZZWZZZZW.Z..W.Z.ZZ.ZWZ.ZZZ.WZZZ...W.ZWWWZZ", "..ZZZ.ZZWW.ZWW.WZWZZZZ.WWZW.ZZW.ZZZ.ZW...ZWZ.ZWZZW", ".ZZZZZZW.WZZZZWWZWZZ..W.ZZ.WZZZZ.WZ.ZZZZZWZZ..WZ.Z", "ZZZ.ZZWWZWZZW.ZZ.ZZZZW.ZW.ZZZZ..ZZ.W.Z.ZWZZWZZ..ZW", "Z..Z.ZZZWZWZZWZZZZ...ZW.WZ.Z.WWZZW.Z.Z..ZZ.ZZ....W", "WZZZWWZW.Z..ZZ...W..ZZZWZZWZ..W.Z.ZZZWW.ZZZ...WWWZ", ".WWZ.Z..ZW..ZW...WZZZ..ZW.ZZZZZ.WWZZZ.Z...W..ZZZWZ", "Z.Z.WZZZ...Z.Z..WZ..Z.ZZ.ZWZWZZZZZ.ZWWZZ.Z.W..ZW.Z", "W.ZZZW..ZWW.Z.Z...Z.ZZZZ...ZZ.ZZWZWZWWW..ZWZZWWZZW", "W.ZZZZZZ.Z.Z.ZWW.ZW.WZZZW..Z.ZW.W..ZZWZ.ZZ.ZWZ....", "ZZZZW.ZWZ.ZZZZZW.ZZZWZ.WZWZWZZ.W.W.W.Z.WZZ.WZZWWWW", ".ZZZWZW.Z.W..Z.ZZWW.W.ZZ.ZZZ.WZWWWZWZZ.WZ...WZ.ZZ.", "WZ..W.Z.W...WZ.ZWZ.ZWZZ.Z.WZWWZWZ.W.WWWZWZWZWZ..W.", "ZW.ZZW..WWZ.Z.WWWZ.WW..WWW.ZZ.WZZZWZZ.W.WZZ...ZWZ.", "ZZZZZ..ZZZ..W.Z.WZZWWW.ZZWZZZZZ.ZWW..ZZZZZ.W..ZZZ.", ".ZZZWZZZWZ.ZZ...WZWWZ..W.WZZ..WZWW..WZZZ....WZ.WWW", "ZWWW.WZ.WW.WZ..ZZWZ..Z..ZZ...ZZZ..ZZZZZW.ZWZWZZ.Z.", "W...ZW.ZW.ZZW.WZ.WZ..Z..ZZZZWZ.ZZZ.ZWWZWW.ZZZ.Z.ZZ", "..ZZZWZ.W.ZW.ZWZZZW.WZWZZ.ZW.W....ZZZ.ZZ.W.WW.ZZZ.", "WZWZ.WZ.ZZZ.WZWWZZW.....ZZ...Z..Z.ZWZZZZZW.ZZWWZZZ", "..WZZZ.Z.ZZWWWZWWWZZ.WWWZ.ZWZZ.Z.WWW.ZZZZZW.WW.Z.Z", "ZZW...WWWZ.WZZW.Z.WWWZZ.WZW.W.W..Z..ZWZZWWZZ.W.ZW.", "ZWZZZWW.Z...ZZZZZZZZWWZZZZZ.ZZZWZW.ZZW.Z...WZ.WWW.", ".ZW.Z..ZZZZZ.WWZW...ZWZZW..ZWZ...WW.ZWZ.WZ....Z.Z.", "ZZW.WZW.Z.ZZ.WWZZZZZ.WZZZWZZZZZ.ZZ.WZZZZWWW.W.Z.ZW", "..WZZWZZWWWWZW.WZWWZWZ.WZZ.ZZ.ZWZZZWWZ.W.ZZWZW..ZW", "..W.WZZZWWWZWWZWW..ZZ..WZZZZZWZWWZZZZ..ZZWZZZZZW.Z", "ZZZW..ZWZ.WZ.WZZ..Z.W..ZZ..Z.ZW..ZZ.ZZZZWWWZW.WWZW", "WZWZZ.W.Z.ZZZ.ZZWZZ.ZZWZ.ZWZ.ZWZZZ..ZZWWWWWZZWWZWZ", "ZZWWZZZ.ZZZZZWWZWZ..ZZ...WZZ.W.WZZ...WZZZZ.W.ZZZWW", "ZWW.ZZ.ZZWZWW..Z..WZ....WZW.ZZZ.ZWZ.Z.Z.WZWZZZ...W", "ZZ.WZZ..WZWWZ...W.WWWZZWZZ.Z.WZZ..ZW.ZZ.ZZ.ZW.WZ.W", "ZZ..WZZW.ZWZZZWZZ..Z.ZZZZWZZZZZWZ.Z.WWZZZZWWZ..Z.W", "WWZ.ZZ.Z..ZZ.WZWZW..WZZZZ.ZZZ.ZZW.ZZWZZWWWZZZW.ZW."};
    vector<int> POIs = {1133, 632};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "ZW";
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<string> cityMap = {"WPWDPZT.PPT.PPRPDWPWPPJWCPTPPPDDTWDGTPTPWPPJWPRJDJ", "PJPDPTCPWPXRTPZ.DPWPDWPWW.PJWDPGJPPPWZWJGPWPPWPPWD", "WZZTXPJWPDPPJTWRPPWTPWTWWWTCPWWRWTPWPTRDTRWWPPDRPP", "WCJPDRPPWJCPWWWJWTPWDWT.WPDPPPTCJTJTJJWJTWPJPPWDPD", ".PPWJPDWPXPJJDTWRPXTW.WTTPJDRW.WPPJTPJJPXJDTWRTWPP", "DPDJDXDDZWPWJ.DXPXDWJZTZWRWPJDXXWWRPJPPDTPTPWPPPWG", "XJJ.DGWPJPZPDZXGPDTGPPJTJWPPWWWD.GWJPPPXPPPJGPPWDJ", "TPPDPTDJWWPWWPJWDWTRPWPPPPWT.TPPPGRJJPJWWPPPZPWCPD", "WPTPPPRTDPTXPWPWXPWWPPTDXJPJXPPWJWPDDGPWPWPDPJPWWR", "PZRGWDT.ZPRTRPPWWPWDTWPDPRWPPTWWT.DPPPTDPZWJJXDRPJ", "PJPRPJTJJPPWWJDCPJWJPWTJTWRJPJWJJTPDJJPJWPPTPZPWP.", "PPTPPDJX.DPPWDPRCRPDJPPCGWJWPPPTPTTPPDJPPPTDPWGZDD", "DPJWTWWPPPPPJPPTJWJPTJWRZWPPWDZDWRW.DWWJWTPWPXPJWT", "ZJWPWPJWDJPRWWCWJWDDZTJTD.WPDPWWPDWTWTRTDPWJPDPWDT", "PPJPPWGWDJPXWWDPJDWTPTP.PWT.DTWP.TWTWJWWJDPPZ.C.DP", "WWTPW.PPPPWXDDDRPGTJPWPPPPWPTXTJDPPTJDPPRDWPPZPJRP", "TTJRCJPWXWPPPJPPWGWTP.JP.JTPGTTJPWTJJTPTPTJDDPPPPW", "JXPPWDWPRPDPJWWTPRWTWDPPJTJPWT.TDWTTPPJWJ.PTWDWWJJ", "JWPZPWCPJ.WTCWJPWWGPPJTPDWPXDWPPJRPTDTPTWWDWTTPTTT", "PPWPPTJJJGPWDPWPPPPPCP.PWZPXRGPPRPDRXPZTWC.TPPJZJD", "PTRWPDP.DPRWDJPJPPTTWDJJJPTTTWWWPPPPWPDPPDJDJPPZPW", "JTRDPWRJWZJPDPDCPPPWCJDWWGWPPWCXPDPWWWPPPT.TRTPJ.P", "TRWDJTPDJPCPGWWTWPJPPJJWPTT.JWJWTTXJWTZWWJRWPJDWPT", "TXCTPPTCPPWPJWPWWPTPTJXPPZGTDJWPJJPJDJPPDJPGWDPPTP", "ZDJP.WJPWDDPDJJTWWPXWTJWDPPPPJTPTDRPJDWGWJWZJWPPTW", "R.WTWWWCWDTJZPWTTRPZJWGPCRJTWTPJCPPWT.PPPPJJDPZPDT", "PJJZJG.TDPPPRPTPGWJTTJPTPDP.PPWPDPJT.ZDDPRWWDT.PPJ", "PWWWXRPPTXPJWCDJWWPWJPPWDTRJDWJJTTRPWDTPWZJGDDWWPP", "JWCJTPPTJPPC.WDDWGWTTWTXDWPPPTDGPT.PDPJPTWPPPTDJJW", "TWPTCZWPW.TPZPWPZWWDTPWPPDTDPPXPPTPJZPJZJJJPPTPPDD", "XCPPPPWWZPWDTZDWPPDZPWWZPTGWJCPPZPTWPRPGPJPDTCPPPW", "WTPPPPWJPDDJDTWWWPWWPTWTJTDWJTJPDGPWPDRTPWPPJJDPJZ", "CWPW.PJG.PDJDDP.WDDWDPPDPJPPTJPWWPWDWP.JPWWWPDJJPT", "TDPDPPPPPTJDPJPJ.TTJPPPXDPPPT.WWXRPWTTJWDPGTXWPGPP", "WJZDPPWCJWXJDWTDTPXDWTTJDPTPPTPRWRPDJWWXPJZXRWTWDD", "WDWDTPWWWWPPPPPTGWPWTRGPPPTPWPDPPPWPDRWJPDTPCPPZDJ", "WPTPPDWTDTXJPWJPT..WCPPTTTWPW.ZPPWWJXTWJDDPTTWPWPJ", "TPTWP.WPJWRP.WTJTZWWCPPPPDWWZDJWPWDWPD.PPRWTPWPRCW", "TWPTJGPGTTPPWW.TTWPWWWTWTPTDWJJJTPDWPDJPTWWRPXGJPJ", "WPWPPPJZZTPPTCTPDDJWPTT.TJR.DXPDTRJDTTPPPDPWPGPWDP", "PPPZWWPP.PPPJJJWTJPJJPWWTRPXPRGJPCWTPPPTWTZWPZWPJT", "WWPPXJGPRTWPWWDPPDWPPR.WWPTWDDZWJTZPPDDDJWPDWTTTTP", "J.J.PPPDDWRWTPPTPPTDWPPZP.PWPWPDXPDDWRPTTWJZPWDRDP", "PWRCJWTPDPZCCJWCPWWXPPDTWPTDGWDJXPWZDPDDDTWPDWWPPP", "RPJTWPPPRCPDZPTPWDPPWDDWDJZJJPTJPWRGWW.TTPTJJGXWTJ", "PWTCTPTGZPPTWWPPPZWDWPCZGJGPGTPWDJXDTDGJPPPWZTTWPZ", "TRRWTWWTGJWTWCWPWGZDWTCWWPZPDWJPJPWPWCZTPPWDTDJPTP", "J.PTZJWPRZDJDPJZJWWPWPPZTDWDPPTPWJPTDPTWWWTPRTWRWT", "PDCWPPWJWTPTJTDDPWTPPPPGPCPPPDPTJPGWZPPTDWWDPDTPJR", "CTPDPPZDWCDZPWPGWPJXDWWPWWWPWPTDDPDWRPWJWDXGGPGJGT"};
    vector<int> POIs = {743, 268, 55, 284, 310, 58, 89, 83, 63, 480};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "PDCJTXRZGW";
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<string> cityMap = {"IIPYYLFQRMYMHTLNXPTFXDAVFBTTFLMYYHWNFHMLDRPNTRYFLM", "FQHYHIPZTTQNTALQTVRIBFDXTHLT.THTTQAAHNQXY.ITVZBNL.", "MRLIHXLTTIBLAMYNYLHMANYMALMMA.FYLAYMNIATYWXPTFZALH", "LEETDNHXDYAPD.HAQMUMLTYILNNXMMYHYXTTBCWLIBXUNALLZL", "HYUHKIIILZNBHAMY.HNIHHHQMLSARFBCZNYMREMWNYYIYAHTHH", "ITXMXULM.FHAMAMNZZLKLYXHMMEAQNFYXLNYXHHAIPHTWHIWUM", "MLMRAZWALPIMMHMTZMIMNBVHXHHHAT.MIYQLRAVLKTYTYLIHTX", "NLHMYZTNNLTXMZITLQIYQMYNZLLMRFATTIDTIKTLTEPMYBMT.L", "YAHLTLZFLIUHZMHYTYBMMHTHKMNYHTTL.NTLTY..XFRXYZTZTU", "HMMMLDPH.LNRPHAURX.MH.MYKVMMTYQHIMPYYLMXMZIAYAYKWN", "UBAKMTNIMMBDUZHRATMXUSMPHWXMYMZYRTMEKPNKHAALKFTTQZ", "BMMLMMLNHFQHAMFKZVACPFKFYMBMWDVXYFATKNYMFYDANSTLXD", "MAUMXTZMLFMYHLIBQMRLYMQMTWTFHMLNDILITYLMYZIZHYKFTM", ".FAXALLHYYH.UYTYNYHMMYLITBLDQULTBTZXLTXL.ITU.MBHLU", "..MFHLHT.YTLWTWNBMQAIHCAATNYNXTECWYZLEFXMYFLNZMMPN", "LKLUMNRRMZETDXYLZTLTNIHTRMVXHQZHTMTQTFPAAUH.YNRMNM", "WMNLBXTYXMHQRWKYTXIZNHZTR.HTAKARALFXMLRTQKZ.MMQMHN", "FXFTNNHIATUALRAYYPHFYFXTHNWYHTBDWRQLLMTZCKLT.TPTAA", "TTIIIQLXFEMZYKQTH..NYLYAMMMKMFYMTYZNNVNMMLWPLQ.YXP", "KDMTPFHFXBLIMTZHUWPHL.WLNQIQAMTFXTXATN.LLIQLXVLKFN", "MQLMUILISUF..QXYQLQYMUTTWYIT.THSBIIWTNTTAXRZMZITTL", "TTTXZLYMMXMXEMRLXQFLY.WLMDYMZL.M.HZRRQTTHAMMNLWQMM", "LZYTEHVNMHNMFYZQYDFMVM.XLKBHLMNHUMNMLFMDLTMULXS.WN", "QQTBLN.ZNFHZHYH.AZBQZVYYXYMZZNIIMMXLCMZUFRMLERMHLS", "Y.HTISHTM.BXTHATQNTUUNKBLLIAYPYQTWNM.LQUTCMQNNHTRX", "QHIE.YALLAITHE.QUZH.ULTWHVEHZUMTYFYZHKFCQEEMTFTRLA", "KXDWNNHMFUQMTLMCMMYLDZKPMTYMM.HNIWTTXNLT.NMDTUYPMF", "HIVTITAHATTIHXRIQARTHLMDHBMTPZTKT.WYZZIPLZZTIBXXDS", "THIBNBMYKIPHCYTAHHBTTWZTEAQMHNNXTYTHETAIINUTHYYZFR", "TTRZTADBBZATTXLYXFMBMQLTLZFHHIFFFZXN.MLITHMUHLPZNT", "DBYLHHFZHAT.ATZHPYYATTAKL.YMTYNLYUYTZNHHVHETTNTDQT", ".ILNAHILTTLMMFNTUTIAMLTNBHTYFTVLMULFDLUW.LAYHTDTMA", "MMITQHUYTMXAFLMTYLNYMMNMMLLLLZZLMBTXNXITYZAYC.FLII", "NHIEYQMQNRUKTQXQWPHUUAYTTMHSUWTMAMKPBNXLIYNMMEN.FN", "YLNZNNLMTNLTLFWLHXRBLMN.FYH.ALMH.HYXV.PVMPTWXLMTTI", "THRLCAKMXHMMHHPFHFQV.MLWPTNQYMWZYZTLDAMNYIMIXLLNLP", "IRZQYXCKHSZHNA.TTIZFMQMRHHKMULMTMMBKT..TNMMLZLTMBR", "NLXTWLLUBYXHNNYBYWNLYHBTNLXH.YBZDBFYLKYHTTIQBYKBT.", ".CT.TTTH.MYYTFYIU.TYYMYATXXNBQUXYYULYTMMLAKLPNAXLH", "ZLHWBYFZPZKRFETTTKL.HBDAHMHPYXBIAMMHYFINYLTWHPTLML", "PHCENAHMTZMNRK.TAIDMZWBRYZHFLLLNTNWPLTBYLRQNWAZMBL", "ALITW.MMLNHQE.AAMLLTIM.PLIYTXMHBTLS.VKFNMTLZBAZTTT", "MLKATTXFY.TLRMMMHZNPWRMPI.YLTFFHYQTZMKZTY.AXYMHYPH", "IMMNLHMMYFTTBMUYRXEFQINHLMSHIYHULMLWMNMHKMUPKIKXIH", "ATZHRXFRYMHLTZQX.LTYRWVX.LTTNNDWCLUNLBMMMLMFLMYILL", "XPMAMLYHAFTNSLELHPMUHKPEMHFNMNMYTIAYIBHBBTMNABMYMN", "HIKATHZMMTMLNHXLTYZYVXTLHFZMZLLLYTBZ.N..TQKRMMEMMY", "RZYQNHLKNLYTURFLUUFLVTZTPTTRIQMYUTYMTHLTZRATLPZDFH", "HTLMNAAHAHKMNDLNQL.MMAHXXKYZZZMASQPTHTARLMWNF.LHRH", "QXPYLRZTNXMTUTZHTNLYLERL.LPAYTPLMZTHTMMUHLFFNLTDRT"};
    vector<int> POIs = {25, 101, 117, 111, 196, 56, 76, 64, 186, 279, 52, 147, 31, 15, 58, 17, 238, 61, 38, 67, 278, 104, 95};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "VXAZHKQRYTWNESPCLUDBMIF";
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<string> cityMap = {"OOWHUQVQHUQQFYVNOIUOGCXDHXEELHXVQDQLPXQEPDQNAFJGNV", "UUHYUXUMQRVJQUVQPXNGUDWGXJUMXXVENQZUUVLZBHNUNUNLFH", "NVHXNQJXAUXQNJUJXQOMDPHAUVUDUXDDJQQVXMXIXNMQZQXMXP", "LMEUXBJUVNMIHJMAXLVFUUQUXXNXOWUXQXAXULQQFVJLVXNYNL", "IOEUPXXQNOONNAJUPIQLPWLULTVYQUDOWULJOXXAJNOKCPQOEQ", "XXPONNUXVMDRWPHXIXDDVGUNIUNVNGFHNMDNLBPXGPUHHNVPUV", "IWJZDLQBUIPDXDYJDUYNMEEXDPVXAXVDHINFJXJUOXXBOUVXXU", "JVXNXXXQIXNUVRXSXDXLHMJVNXXOPXQXAZPBVDXFXMVFXOLQJF", "LPHXUXXXVDAQIILLLYQXADJNUQNNNVLUXJXNDUQNLRXDIBXVFG", "GNUUXQNPXNBXGABPJAQNGVOUNQJHOJDLROXXLJAUQQUXHVUOYX", "XXPMWXAIXJOLUPDWQROULOMXXNVNPXXJXALHQDUHGLLQNXMUXX", "XUQVMUPLUDXJNLXLWJWLQWXLDDVXOUVXNZXONOXNUOHXMONPIQ", "RQFURUOOQXXXVXNOUGXPXRFJUULQQXLXQDFSXALGXPVPUDXXUX", "FONDUDVXDQVQNOOXPPWBEDUUZXUSYOLXPOGLEXNHXEXVXXPUUE", "LNHYXMUQXXNXQXMDXVNVXNXLMDEQOJPUGLNLULBVBNULVAXVRX", "NOUXUJMXNUNGXDQTCXOXBQMHFGLAOULNNPJUQGBJJLBZPXBAIN", "VAAUQVPNXLUBHQDYUXIXLBDQAAUNUXUDXEGUNWUIIADQMOQDFB", "VPPXNMAAVHDOZFUPIL.DVVLXINVQUBXXOAPNOHOQUQWVVDXNNJ", "XXOUNDMROXMLHABXJCOUUUXPMBIQVILUQOPDXRJJXUHPYOONXP", "UQIXAXXWVEHRHTUPXUPPIXQDXLIPQQIONLQUIQJDQGNECLHQOX", "QHFXJUAXPRLLNIQWVYUDVQEUHVUXVUYVNQJUXQNJGLQUAJPNXU", "ZPXXGFJHHWGUGXOPQONDFQLWXUCMAQITXJPUFDXGAXXUXDMXNX", "YUGFWXUUDLIAUGXVQULAEMPQHQXBQXUPLUQAUXBVXQNXUBHLYU", "EXNHJDVXOENDFDXVVXVNXVNJLNXXXJUDZRULNJQOMXQPJSVVHB", "QOVNUUQNDGQVHNVSJUQDOFFDJZCXGDXBXXVWXOQEBUPUUVUHUB", "OOPUUAZLXDVROIPXLXDNOXAUVUMOPJFUFUUXUNFVBPMSJOPXQU", "LXXUVAIINLHXZNDDXXAQTXDGUNXDLLUIHPOFQAQQGUHJBHLEOZ", "NUNXALJVOXGJTQBAOVHFZRIDDMAZXUZMADJPMPUXYUVGUVNXLU", "NHULJPHUVJJXPTLXFXJE.ISLNHVPILYNQXQNJNGXOGROXUMTHV", "PMODXVLPDMUMPGFBHPDLUBYLHDNNVOJQXFANXJPQQOPHUBNQXL", "VXOQDNOHAOILNFNOAAFXJNVGFBOGUPUDXUVYIXXHXYBLDFREJQ", "UIIQLWDXXBPDXVLDQGQPOIZQPAXQIQRLVXTNAIXOLNXFDJLAIQ", "FPLANDDNVNUUDQAFVGUAUMUXUGQVQJVLNXAYIQVMMNHTDWUVNU", "XLNUJXGDVHEVUDXRHOHNPXUXANUEIXIXVZPUJUBPJDQUVXHPXX", "BUVAXDDGXAVAHJUNFTQEUNQZLXFENSHUXXUDGVODWXTQINBXGN", "AQXODLHNFQHQUVGRWBVXDJOGNQOIXXVMDPPHIWJAFQUBHQUNVX", "YFDXGDLOFJLQUQVXXLUXVXXMXDVBVAPPMANFXGHUUXFFPJLLBX", "OUULAVUUQUXXXGQXWQOFNHDXJVGXLFPXNFVAUEOOGNDXMXOUXO", "OFVAWPNWJXDAQUAXUUXYUPOMLOHHVUOPNUVNPROQHONNNXPUJO", "PUUXXXDPQEUUMJMONFXXOJXLUXTXDUQUNGHJBQXFHPINUXLAUV", "FEFDBIVQLUMGMPXIJLMXQWQAPAUOXNMXUOFJAUXXQGHUHMBGGO", "WVPHEXJVQDFHDALNNMLUVAGGRJDFQQYYUUZMJULUJVGDNHANIP", "RHUQUOHAUHALXDUUDLXOMBDEVQUOLXYMNQUQHNVHXXFNPANZNA", "VJLQXSGUGVFNVLTUJVYAUXGOMIYUIPQXJMQXXAOQ.MDNXFMXIQ", "DHUEUXHTVXXALNUPGJJWNLQXOUPNUGJXNXXXWUOPMUUXXUTNWV", "IWWLYEGFJXQVERXUNHLXHQDXHVXQXHDBXJXVXXFDXGNXJHAJNU", "MFXHUAGVAHUDXOIVRPQLDFZDUXULBOPQUVNOLRBINHLXAOHUQM", "BJXFOXXVXWVXCQUVQBLXQOXOLOMFVGLINUMHBUHQNUQYLUGUNN", "HXUBGUXHQFJQXJPNGXFALQXPRLMDGDHQRGXBWXVXMXVXLXUXQX", "UUU.ULIUFOOXXLUIQHQAXNUXXUHLDQVXGQWBXUEUQAXQPWVUUU"};
    vector<int> POIs = {371, 76, 66, 151, 30, 135, 24, 103, 40, 8, 1, 73, 58, 104, 184, 126, 16, 31, 38, 9, 91, 125, 72, 275, 177, 112};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "XGIVRLZHWCKFBJQDTYESAOMUNP";
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<string> cityMap = {"EOCUYRYRCOEQCYURUMRQEEYQCRQMUYUUPOOOROURQPUQYURRQR", "RCYORQRRYREQGYCRECEUUCEOQGGGOORRYGER.OEEORYCGGRUER", "ERMQRQEYEEGGCCQERECEEYOUEOOUYOOQYOYEERGYEEO.RQGUEE", "ERURYQRRGURYRCMREEYQQYROUYGRERCYUOQOORUEEC.QEUQMYR", "OGERQORQREQQUQEQCYCRQEQROREOUCGEMOQRMGURQGRRRPQCYO", "QRCQEUURUREQQORUUOQEGRCECQYMGERRUEOUOCYCQMRRRYROEQ", "OEUQUQREYRRUEUQYRQMRQYQRUCRQTCOQQEQ.REOQYROUQOU..Y", "RURQCRUUGRPOEMRREGERCYMUREGRYOQCQGRO.RQEER.CRYRYQR", "EGERRYQCUQEGOREQGGQRRQCURQEROPYRQRQCYGGCOERQGUOGOE", "EUYEQRUEQUQCMEOEOCOYRRRUGRRRGOGGQOCQEERYEOGYROGCRE", "RCURROQGUEUROOQOCROYRGUGECYROGOORRORRCERQQRYOCRBRR", "ORGRCRQUQYURQQERYRYRQUQEERRGEQGEURGUGQRYQUQOURCECQ", "RYQRRQREOQGYRCOOMQYEYQOEGORRRQQUCOQOQQGORU.QYOMOUE", "ROCCQYQOQYRQQQRQCEGQREQUCQOQRGM.EQYEYRRORRQRRQRQUR", "REUQQRRUQQMEEEERQYEREUEMERQR.EEUCOURUORRQRQRORCUMG", "YQEOQQRGRCERCRMECOQEGURRREQOUQRGUOEQRE.QEMCGORUECE", "QQEQYGGCORUER.YEYOEUEYQMRQEQROERRCROEEEQOMRRGMQERO", "CRORQEECRQORGRERMGOOOQUQQQMCORRRQRQMOCYYEQOOUYUQUE", "CCOREEQQYOOYRCQRREMQMOUROUYOQUUQRGEQQGGRUQOCQORREU", "RYUEOORRCRUOYERERCEQRMGOYEMRQGQRQRQGRYRUOYEUOYREEQ", "OMGCUQYOYEUOEQCUURPBOQQGRE.MRRCOORR.EREUQEYEQEEPUQ", "URYOEERQOROCRQUQRQRURRRCCYOUROCEQCQREREUQYEUEUCOOU", "EQYRQQEYREUMEYQGEEEQURRROR.GYQQOQCERCOEGRUQCMGEERE", "QGOGURQQPGERCOYOQGURRGRGRRRCERYYRE.EEECREEEEYOOCOO", "GRROYORURRREUOQGCRQR.RQMRGOCEQRYOREYGCEYCYYRQOCQOE", "OQGRCUOQRRERRUOCRUYPOQYYRCERGCRUYEGUGCRCQUEEECRG.Q", "QRQM.QUQQEUUROGRRQYEGEQUEQCRMQYGGRQCUOYPUCQQEMRRQE", "EQRM.OMEGYGGUUCYEORREQOGROCYRERERUROEQEGRREROCEQRR", "RREUMRQURCEGQEMERCQQGRQQCYRGRQEEOQRYEQEURCGQEQ.ERR", "REGYREERURGQ.MEUROGRRQRRUERUEEYEREOYGOEORORQR.REEG", "EGRURQRERRRRRMECEMQGRR.RUYOYYYEECGREYRUCUOORQUQORO", "QERRQRERRQUQQUYQEOEQCEQRQEMOYCCMOCQEUGQEQEGUYYEOQR", "PEC..QORQOQEQRYOEUGECEYPRCCEMYGRERQRQYQQ.ERYECGRUR", "UEMQQGGQOOGOGUQRQCQYYUMOUOQOGUOYEEUYQCEQRRQQUCRQER", "UERUYOROQEYOEROGEOGMGGGMRGRYOQREERCCUORRRORRECQOQQ", "EREEYRERRGMYEQEERGR.EQRURERCORRYROGR.YCQERMRQRG.ER", "EGRRGRRRUYMUQGGERUEEYYERRQGOUQMRRQGRORCEPGMEERUMEG", "RRCRECRORQGOMRMQYEYQRUOQQGRGEUQ.OMRROOEGMOMRRYRGRG", "GOYGOQOGMEOUCRREORCER.CCEGQRRRRRUYEOROQGQCERGQQUOO", "QOEOQGGROYORRGGERRORYUEORYORRURUEQRRGQERQYGEUQOQQG", "RRQRRRREGYCYQRYRQEOUGQOMRERYCYQURRUOREYRERRRREUYCE", "CQYQUQYRQRROQUROYEYUOEEUCRYOEEGQRQCRUREUOREEYROORY", ".MMCYMCUMRCCQCRYQEOQQRERRRCOERQQGYOGYEQERREGRRQQQC", "ROUYRRCORQRYRE.YOCQEQYEYORQQEOYRUEPGRQOGQMQEROURRR", "EGCRORYCQQQQYYGEERQCGOEGOQUCOGYEEEEYERGQQEREGOMQQQ", "RQEQQRRMOOUORUURCYUUYEYYRRRQOMYOEQOUGRYOCC.RUCQR.U", "GROYORYRRGCURYRYUQEPEEORQOMERERQYMERRQYEEYOQRRGQOQ", "ORQMYRRCRURRCRQOGQQYRQOYQQMGERRMQRQRMQOGYRGOQUCROR", "RMUQEYRQYRQRORYRRORYYGGQUGQQGEORGUQRGQEUREOORQQOYR"};
    vector<int> POIs = {15, 164, 203, 2, 557, 376, 202, 1, 81, 356, 185, 271};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "PCYBRQUTMEGO";
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<string> cityMap = {"LL..L.L..L.L.LLLL.LLLBLLL.L.LBBL....L..LLL.LL.L..", ".LL..LLB..LLLLLL.S..LLLL.B...LL.L...L.L.L..LLL..L", ".L.L.L.LLLLLLL..L...LL.B......LBLLL.LLBLLLLL.LLLL", ".L.LL..L.LB.L.LSLL..L.L..SLLL..L.L.L.LL..B...LLLL", ".B.LLLBLL.LLBL.L..L.LLLL.L..LL.LB...BL.L.LLB.LL.L", "LL..LL.L...LLLLL.LLS.LLL.L.LLLL..LL...LL...LBS.LB", "...BL...S.LLLL..LLLL..LL.L..LL.LS..LLLL......LBLL", "LLLL.L.L.L.L.LB.LL.LL.LBB..LL..S.LL...LLLL..BL.L.", ".L..LL.L.LL.L...LLL.L.LLB..LL.....L.LLBLL.LBL..LL", "..LLLL.LLLLB.....LL..S.L..L..LL..L.LL.LBL...LSL.L", "LLLLLLLLLL.LL...LLL.LL..LL....SBBL.LLL..LLL.L..L.", "L......L.L.B.L.S.LL.L.LL....LBLL.L..L..L.BB...L.L", "L..LB..LL....LLL..S..B..L.L.SLB..LBLS..LSLLBLLLL.", ".L.BLL....S....L..L.L.LLLL.....LL..L..LL..L.L..L.", "LL.LL.BBLLL.LSLLL.LL.B.L..L.SL.L.B.L.L.L...LLL.L.", "LBL.L.L...SLLB.L..BL....L.LLLLLB.LLL...LB.LBL.LBL", "SLLLLLL.LL....LL.LLL.SLLLL.LLLB..LL.B.LLL..L.LLLS", ".L..LL.LL....LL..LBL..LL.LLSS.BL...L.LLLL.L.LL.L.", "..SL.L.BLS..L..LB..L..LL.LLL.L..LL.BS.LLLL.LLLLLL", "LLL.LLLLLLLLL.LL.L..LL.L.LLL..LBL.L..L.LL.L.....L", "...LSLLLS...L.LB.LLL.S....LLL....LB.LL.....L.LL.L", ".LL.L.L...BLL.L.LSLBLLL..LLLLLL.LBL.LB.S...L.L...", "..LL..L.L.LLLSL.L..L.LL.LL.LLLL.LLSS.LL..L.LLL.SL", "LLLLLL.LBB.LL...L..S.L..LL.LL.LLL.LLL.LSL.L.L....", "LL..LL.L.LL.BLL.BSLLLL..LLL....L..L.BS.LL.LLLLLLL", "BB...LLB....LL.BLL..BB.LL.L.LL.LBSL.LL.B.L.LL.LBL", ".LLB..LL.LSLLSLL.LL.LL....L.L.BLLLLL...S..L..L.LL", "S...BL.LLBS.L.L.BL.LLL..L.LLLLLALL...LLLLLL.BLLLL", ".LLL...LLLB..L.LLL..B.L..B.L..L.BB...LLS....LLL.L", ".LL..L.L.LL..LLL...LLLS.LBB.BLLL.LL....L....L...L", "S...B.L..LL.L.L.L..L.L..LL..SL...BBLLL.LSL.BLLLL.", "L...LLL..BLBL.L.S.L..SLB.BL.LLLL..BLLL.L.B.LB.LLL", "L...L....LLSLL.B.L.LL.LL.L..LLLL..SLSL.LLSL....L.", "LS.LLLSLLLLL.L..L..LLL...L.L.L.LB..BL.LL.LBLBLLB.", "L.LLBL.SLL....SBLL.LLL..LLBL..LLLLL..L...L..L..L.", "B.L.LL.LLL.L.....LBLL...LL.LS...B...BLL..LLLL...L", "L.L.L.LL...LLLL.SLL.LLL.LAL....LL...LLB..L..L..L.", "S...LL.LBBLL...L.LLLLBBB..LLL...LL.BL...L.S.L.L..", ".B.L.LLLS..LLLL......LBB.LLL.B..LL.LSLL..S.BL.LBA", "LB.LL.BL..S.L.LLLB....LLSS....L.L.L..BL.SLLL.LBSL", "LL.LL.BLL..LS.L.LSLLLLLL..LLLL.LB.B.LL.BL..LL....", "LLL....LSLLL.L.L...L....S..LLLSL....LLL.L.LL.LLL.", ".S....LLLL...LLLLBLSLLL.LL..LSSL.BL.B.L.LL.L.LL.B", "LLLLLL..L..LL.L..L.LL.LLB...LL.L.L.S...SLL.L.LBLL", "LS.BLL..LLLLL.L.BLS.BLLLSLLLL..L.LLLBLL....L.SSLL", ".....L.L..B.L.....L.......LLLL..LL..L..L.L...BL..", "SBLL.L.L.LALB.SLLS....L.L.LLL....L.....L.LL.BS.L.", "LLL.L...L.LL.L....LSBL..L..LB.LBL..SS.LLSL.LSLLL.", "SLL..LLLLL.LL.LLLLLLL....LLS...LL.LL.LA.L.L.LL.L.", "L.L..L..BLLLLL.LLLL.L...S..L......L..LLL..L.LLL.."};
    vector<int> POIs = {159, 5, 102, 1146};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "BASL";
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<string> cityMap = {"NXNXQHXQQQ.QHQXQXXQQHCNHNHQQHXNXXXCQQQHXQXQQXXHQQQ"};
    vector<int> POIs = {5, 20, 2, 14, 8};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "NQCXH";
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<string> cityMap = {"N", "N", "N", "N", "X", "N", "N", "N", "N", "X", "N", "N", "N", "N", "N", "X", "N", "N", "N", "X", "N", "N", "T", "N", "N", "N", "N", "N", "N", "N", "X", "X", "N", "N", "N", "N", "N", "N", "N", "N", "N", "X", "N", "T", "N", "X", "N", "N", "N", "N"};
    vector<int> POIs = {40, 8, 2};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "NXT";
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<string> cityMap = {"BKZKATSYBTLCFJOLOKFLXOHQU", "CGJSZXBACQPXGJOQQQC.KQDTT", "CKKEYKRUCDZIEJNLLEKOCQIPP", "ZQKFXCIOLKAKSDYQHIJEDAOTK", "CZJKDSIOAXEYFJKAKXOB.ZXTQ", "FDDXEZJYLQQJYJLQE.YAYAMZZ", "KCYDDRKDZJKQOKUDEKZKOOSBF", "XJKDANFPNOLKMFJLGDDUIKPIQ", "KQYQKKUFCSKLDZUADKMJDBDAO", "DU.YYLPHJDEKJQCDXJVXTJESK", "JQKAYSKKZUKLL.OZHZQQQTCSO", "UZJLHYNY.GADOAKCXSKZJKKLK", "DY.ZJKAXJOKFJUTIDUKLFKNKJ", "KJECUOJDKDETJVPXCCYJSHKUE", "BKHEDQQEKSKEICLGKZOSKHYDS", "HTUNKYKQRKJJZJYZOKXXZMULY", "UDCOD.SQEQXHQQLZQCYOAUKBZ", "ZOEKK.NFNQDCQQCKQKZXKODQL", "KSIZCLZQKQQSKHQLKDQZWQXOX", "AABAJQXSQZSQQKYFKFJALLC.T"};
    vector<int> POIs = {4, 69, 30, 14, 19, 17, 33, 21, 23, 20, 7, 10, 8, 24, 25, 26, 2, 1, 34, 5, 9, 12, 18, 3, 45, 11};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "MKZFSUDXYAPINCLOVWJGBTERQH";
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<string> cityMap = {"MWMSMFIWJYQZKCZRAARJWRWVJ", "TJOZPWYVEPWRMPVMJMLFVOMVA", "IFXOYEHXWOCVNZAKYMARCCYOC", "YWHCYOAOJLVAYMIYMOAZOWIIA", "KYVPFIPWWZAVOKUUOMMYYRYET", "VWKWFAZMZTIJZWYCAXPRMHMAV", "APRWBXAAVJKMYTRMYRWZWWVOJ", "VUMCEODIPQAKBNPRYACMWAZBW", "ZXJSKMFYWMYWYMWWMWPLAJIYW", "ZVAYRVOXKMMZSVCFYMOSRYWDW", "SWMPYRXPAKLOJWWMJPCOAKOMJ", "MWCOCXAHYCHWAWRYAJIMLHEME", "HECVZKWECLVPMWZWCCOZMXYDO", "PXZYYYCYPCKZVJCJEKYMZWOYJ", "IRMLFZJWPRRYCOQVMZXORSWVO", "SMVOCRZOZIVKLXRIYZOPMTWVW", "MKKZROYYYCKRVWTZLMMAUHWVM", "OZYZMOOWIOOKACKFMATWYWYOH", "FAUEJVXTIWAUSXOWLCWCEARML", "CETYHWJIYODWZZZFLMXOYOXJM", "MLJMOVHCYJLWOPHJZYMVJAOTZ", "REKYFIOMWJHSWZMAVJOKAXMMZ", "ZTVDXMRCXYWWAYLWEASOBCZPG"};
    vector<int> POIs = {19, 32, 4, 1, 15, 45, 5, 22, 37, 58, 50, 13, 26, 10, 38, 28, 17, 3, 31, 12, 14, 2, 11, 20, 6, 56};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "XVBGLODKAWYHRSZJIQCFENTPUM";
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<string> cityMap = {"BUWXJJKASOJSKPJWAPKLDGJKTTWYAAXJOMXNXXTAWLWKJSGUXK", "YABXKWXKDGJXMXXPDIJXXQJKSOHIXHJUVSXKJMTKWMXDIHXWJG", "HAPASKHPKACXUJSXUADDLIAGGXJXKYFTYPCKKANKXFDKGWJDKL", "KXYGXOSBUYOMSAGUAJAXXXJAAXDMUMYNAJATBXAAYVTKCPYJAH", "JKSJYSTCTSITJWSSXAULGGXODTPXGJGYWSSJPXDIYXKXXPJIKW", "JAJXWUAWXAUAPXDXUJACYSJXXWHFUCAUXPSOADDAJXADOYXXXV", "AGTUPWXJUXSUDIQJPVTWSJAWWCUXOLGWTFUYXUDJAODWQVGVFF", "UYGMSHABXDMWYJGJXEJGJAUCMKMBUCDJUOAWIXITXJDYAXLJXX", "AYDDDVUXASXKJXXMXHMGWTFEAQGKADKUXMMXTDJXKJDGKCXXUX", "HSJXAWHNDJPMAJIXWYMJJKKKIXXOSTOSTLATXWSOJXHXHJYPJY", "XJXAAVVKTDSAWJGZXNBXWVLUEMASXXAXKIMXDADKXXCDAYJMXJ", "OHKAGGIKMYPTKSWUOJMFSHXAAAOXPJFJUSDXAMJXIDPOJLKAXM", "CSMJSGTSKMXAPFDHDWXLCTKXUPJMICXKAKXYMDPKDUUTCXVJST", "DTFAJUBJDLBCSJOABBIJBTKGAYNXKJFUSEIATXKPHAUDAOCXLA", "UAXIDMUOVMADUSJAVAJUKCYLYCAXOXAJFTAJAXTKUSPSXAXPJV", "PKEXHGJWSTJXGYMABKXXXJNXDKDAJBXNJVXXHKXKHGYXIKUXFO", "BISMVYAKJWTDUJAJWXXJJWKJLBXPXJOKIJSYOKXAOJJAUJKHJL", "JKALHTWJPTALUADUUUJXOMDYAJUFJSZXKBXXJSXSAAASPSWGJO", "GKXAXKGDXJKAGTVDJJDDAWGIXSXKMXUAUXJAXKIGKALTXSAAXJ", "HTADTDUPLGVOXSVAOVKJOJYSFSMPWOXTPAXKYEAAFOIGDJAJKM", "SVXGAOGMXOYWXCXAPGXUJXYKFUXPAXWGOXNJDHXDXAYXSASPFX", "XKAWXKCNQSKDDHXLXXUJGSJFVXDDAIPXYLDPHKJXJXTTJLXVUY", "JJXSOVAADXSAQYKSBIDJAAXPUAXUAJXCMXKMJTKXXUZAKYJYTN", "KMJXKJCMUUKAXPSXWJKKWYKPODAKHMJASVWVIHTXOSYAPJJPNV", "IXDPXGKHXJWOSTXXAAUBJABJADPAHJJENAXPXXGXKAWAKYYKXJ", "AAOJUJDDWCPTDXGAAJNMOXADKUUAAUXZXDKSDUTJASCWTXJSJK", "JPXJIDAXXKKXLANVKOSTSTYSUSICSOHEKBKDPJKTAASSFDTAHH", "YQULJDUAUJKUAYJOMHXJXJCHJDJAXPKAGNMJDXUSAKJZKMIJTW", "JJCSXCJJSOWJJMKAJNLWWJJDDNWJXXKCDAPXTDPAVKUKKAXOAD", "BAAAAYJSAJMIMIDMFWOAUSWJXKTTXXHTXAYDSTUSHMUKGXKNGJ", "GXDEKDSAXXGIOYTJPXXXJIJKJVOXSYWGSGSXJJUYYKWVAXLDWG", "XFYWSXHCSEMDIPTSXPMASBSWGXXMTJJLUPJUMWXAJHFCWKUDAJ", "NJIMVAYOYDXJCIUFYKKXKTXODVJFJFXXFVTDKAUKJXXXPUUGYX", "ATJJYSPCKXAAFDUXCXGWXJWJKAGHKWXCYVDDKAHJSGJSMKSMFA", "DKWJYKJSXXXJJFDJFHCHJLVUDJYFJUUMDOXUSSXSGAAAXMWSUX", "JXSTXUGJJALYKYIQAJJKJXKUXXDXATPSVJAKJAKXXUXUADZOAD", "UVBCBMUSIAWXHJXYDGDTAXJAVAUJJHAOTIAZODMXPPYUYDAJGY", "VMUXXXXDYSVXAKUASKAFYXXJLXXAXDPMGBOPKKDMAVXKIMDXXX", "GSXJMNTAPPLAEASNKPDKDDXDUOAADFMDXCOUTXOAGAXPUPKXAK", "KSADQJASXGCOPJAADSYXMKJHXSWXJODOKKSAYUKUWABTIJKAXU", "IVXKXEKAFJJAXGJMPKJSSAXJXXJEJNAKPKBPSJJXNGIJJDJAKA", "WLUGFDLAJAGYGUYTCJJXODAAIOJOJXYTPDTXWTOLKJXUJAKHGA", "DUJXCYXOXNFKTXAJHXFFXOGHPAXLGUBRUDPXSXAKHJJAHGEHDU", "MHTFUGDPKLATSYJOKYLPXYJTMADAJAKVJXKEWJJSDXXJDMXJSF", "CSWYAJMAJDJXFTXCPJFGJVPYVWBTQKPSJKMKZTNXJAFXAWKMOI", "JYUXGJAKKAPDJKJKNTIXQAAYVDCKYWAGOXJGIDAODIDXXAXKJA", "NAMWGJPOVGWKIACBKCBAVXAYFKIIUXWCXXKXLLJIJPLAFKWHAF", "KNXXHJCVCYKJKOWPHTWLJXWKJWDJAJLJJJSLODPHDDDKSGIPWX", "ACOXSKDKIICQWIWIPXXXKJWUAXAAPVXSKXIIICJJNAPJJLMWFX", "MHUASAJATJJJBKUAJJXAKNMUAWLJAXDYXLJGDJOXMXOACXHADS"};
    vector<int> POIs = {63, 264, 85, 1, 86, 12, 54, 81, 49, 15, 121, 286, 147, 127, 342, 90, 92, 31, 79, 88, 8, 33, 59, 47, 51, 189};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "IAGRTQCMFEUJDSXYWNOPZBHLVK";
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<string> cityMap = {};
    vector<int> POIs = {2500};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "X";
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<string> cityMap = {"EJMJEMMEJJIJJEEIJMIEMEIEJJEJEIJJJJJIJMJMJJMEJMJEJJ", "JIJJEMEJEJEMJJJEJMEIJJEJJMEIQJQJJEMIJJQJJEEJJMEEJI", "IIEJIMEIMJJMEMJEJJJIJEJJMJJJEMMIIMEEEMJJEJEJEEIIMM", "JJIJEEJIEJJMJJJEMJIMEIJJMEQEEJEJEMIEEIJIJIEMMEJJIJ", "IEIEIJEMEJEEIEJJEIMJIQEEJIJMMEEIJEEJEIJEJJJIIEJEJJ", "EMMEJJJMJIMJIIIEMEEEMEEIJJEQEIEJJJMEEQIJJMEJEEEJEI", "JEJMIIMIQJJMEMQEEJEMIEJEEMIJJEEEJJEIJJEIJEIJIEEJIM", "MEJJEJJJEIIMMEJEEEJJJEMJIEEEEJJIMEIJEJIQMIMMEEMMEE", "IJEIEJJEEEEMJJJIJEJIIJIJEJIMIMMIEIJQMEIIMJEJMEEJEE", "JEMJIEJJEEQJMEMEEMEIJEIJJEEQEEJMEJJJJQQJJEMMMEMMJJ", "JMEJJJEEJQMJIJMEMMIMMJJJJQEIMIMIEIQEEJEJEJJJEMMIIJ", "JMIIMJJEEEJEMIEMMMJJJIMEEEEJIMIEMJEMIEJJJEEJMEIEII", "JEIMIJIEJEJJJJJMJEEEIEEMJEEIEMJEMMJIJJIEEIJMIEJIQI", "JJMEEQQEEEEEJQJEIEIMJJEJIJIEJQIEEJJEEIEJMEIEIMJEME", "JMJIJEJMJJJIJJIMEJJMIMJEIEJEMEIJEJEJJEEJJJMQIIJMJJ", "IIJEJIJMEEJEJEJEJMJMIEMMMJIJEEEIMJIEEJMMJMJIJJJJJI", "EJJJJMIJEEJEIJMIMJJJEIEJIJEEEEJJEMMEEQJJMQEMJEJEJJ", "JJEJIJMIJMEEEJJQIJMMIJEJEIJEQIQJMIMIJMIIIEJQMIEJEE", "MEJJJEJJMJJEEJEJEEJMEEJMJMJEEEJMMJJJIIQIIIIMJJMJJJ", "IJIEMIEMMMIJEJIMIIJMIJMMIJMEIJIIMJJJJEJJJMEJMJEJJI", "EIJEIJMMMEIIEIJJJEEJEMMEEQEIIJEJEMMEIEEJEEIEJJQIEI", "MJIJJIJIEJEEQMJJJJMJIEJJJJJEMJJIJMEJJIJJIEIJEEMEIE", "EJIEJJJMIJMIMJIIEJQIEEEIEEQMMMJMIEMIMJJEJEJMEJMEEI", "EMEEMEMMIMMMJJJEJIEEIJEJEJEMMJMEJJQJIJMEIIEJJMEEJM", "MEJJEEJEJMEEMEJIMMJEIIMEEIIEJJJMJJIIJEMJEJJJJEJJMJ", "IIIMIJJEMIJJEJIMEJEEJJIJJMEEIJIJEIEEEMIJJJIIEEEMEJ", "MMIJJJJMJQMJEJEJMJIEIEMEJJJEJMEIEJEMJEIEJJEJEJJIMM", "MQJJJMIEJJJEEJJEEEJJJJIIMJEJIEEJJJEIMEEMIEIJJEJIMI", "EMEJJEMEEIIJJIMJIJJEEIEEIMMMMJJMIJIJEJJJEJJJEJEIME", "JEEJEEMEEEIJEEEIMJEJIJQIEJJJEJEIJEIMIIMEEEJMJMMIJJ", "EIQJEEJEQMEMJJIEJJJQIMEJJJIJJIEEEEMEMJJJJJMIEEEMEM", "JJJJIJMJJMJMIEEJJJJJMJEEEIJJEJIJJIJIJEJJEJEMJIEIJI", "EIEJIMEEIJIEIJEJJJJEJJQEJJIJJEMMEIJEJEIJMMEJMEJIIE", "JJIEJJEJEJJJEJJEJIJIIEMJIJJJIMMIIEEJMJJEJIMEIEMEJE", "QEJQIJMEIEEJJJEIJJIEIJJJEEEEJJEJIEMJJEEJIMJEIJMIJJ", "JIIIMEJEEEEEIJJJIIJJJJEEMEJJMMIJEJIJIIMMMMJJEJIJEM", "JMEEJEMEEIMIIMEIJEMEJJMMEJEEMEMMIEIMMEIEQMJIEEEEME", "MJIJEEIEJEIMMJJMJIJIIEJJEMEJJMEEJJEEJIMJIIIJJJJJIQ", "IJMMIMMIJMMMIQJEJJJJJEQJEEJJJEEJJJEJEIJJJIJJEJJIEJ", "JJMJEMMJJEIJMEMEJJEJIEEJMJQIMJEEJEIIMJJJJJIEMJJEEI", "IMIMMJMMEEEJEJIEMJJEJIIEEJJJMJJJEMEIJMEJIEIIEEIMIE", "JMMMIJJJEJJEEEMIJMJJEEIJEJJEMEIJMEJJIEQJIMQEIIMIMI", "JMIJEMIJEMMJMEMIMMMEIJJMMJMEIJQEJMMJJMJJJEIJIEIIEM", "IMIIEMEJJJEJEJJEEEJIIEIEJMEQEIIEEEJIIJIEMEEEEIEQJE", "JIEQEMEJMJIIMMJJEMMJIJJJEJIEJIMEJJMEEEIJJJJEEEJIEE", "EMJMQEEJEJEIJJIJEEMEEMEEJJJMEEQJMJIJIMJJEIEJIQQJEE", "EEIEJEJIJEEMMEEJIEJMMMEIEIJIEJMJEEIJMQEIJEEMJIEEEI", "JMIEIJJJMJIEEEJIEIJMIEEJMIIEEQJJMIEJJEJQEEJEJIEJIM", "MIJEEJEMEJEIMMJEEJJJQEJEEEEEIJJJJIJJQIEIQIMMMJMJME", "EMMQEJJMJMEMIMJMJJJMEIEJEMJEJMEJMJMJMEJEEEJEEEIEJE"};
    vector<int> POIs = {417, 434, 721, 68, 860};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "MIEQJ";
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<string> cityMap = {"CFWEVCFABWYGCQCMQDDFQYQDRCOFQVFMQW", "MWVOMQPTMQHQECBRCEQLPYPQQRCFOQPDYC", "RDACOQCFCDCDCRRQSSQBHCYXCQGQDSMMMC", "ODPCCPRYQPPDHQCORQDCWTQLLPXYQOORAQ", "CCQOWCQDLLCBVSCCPMIXJWCPBVCQOOCMXL", "MCTTMOFRPDLQQMQMCLCQDMOHARCQCROMDO", "AQDOFUQQBOPWCPLHPRHBWQVPPRFQYDDRQV", "BOQPOMMPOPPQDMFPMPRCQFOCQOCDCFAXGW", "BOQYQPADCQLWCOOLSDSPOMQCWFQMJOQPMG", "DMSDDGCCYHWQCDCOCYVHRMHPCOROPSDPBC", "PPQUQPMCCQQHSBMDXDGJRDPLLDWQFRMFCB", "LFQVFQVQGQVCHCRCBPOCRMTQMDCJCOSCSS", "CFWLWPMRAYCCQBGQPCQYWYMMVSDCXPDPCQ", "LQBQCQPPWXVCMMBSMPCDWCLDALBZQQUMEC", "OBMDDQBCQOXCQMCDSOLSLCPODPQCVRYSWA", "PMOOCPQQQRRXQYDQCBQUPPCPCODMODMBQQ", "QBRDQCOQCCBRQSXCLRQBXOMOMPQCVVOYPS", "CFDTAQPSDFUCMMRPPQDFLCOCSCPMOMQMQW", "ALQUCQQMQOOYSWVFSMFOIQPYCDQCMPSSXD", "OVQOBPDDRFCYRHRYQRYQMLOFBQQPOHDPBV", "RQDDAQCOLRTCDPQPVAHSQIDQQQMCWHPPOP", "CPWFQDCPQMRLFXLMMQSVWOBCRDHDSYRCRL", "PTDYCQLMFDFCLRRQPODOQLGMLCODDCQDMC", "OZLPQCDLMOCOQFQLQDDLQQBQCRMMHPFCRD", "SOQSIOLHODTFOWCAPMLDQQCQTRCSOLCIJL", "PALQUDZVFQOHDFAOTCDVFFOCJWCPZVSXOW", "CSBGLPDIZDSMCPFQDDVCOFWQDCDPPOOADP", "TOLWDMCQQMCMWBPQOMOCCROBSMOVQSRFCX", "DPBDQQCLSSESQDDAIOMQDWDRQOBAVPCVDR", "AVQOHMPACDRDDDRBMXWVTMDYPPCCBPIDPP", "MGCXPMCPCOCPHFDFSQMCFQQRWVCCCQXVYC", "SSCOSQOPRQCCCCAQCDAEDCOQRDDAQBPCPQ", "QUDMLXDPQPAYDMDMDRSQCCQLVDARLMQPDD", "QUAODOZTBCLCTLUPQB.CDMRCOFDBDY.APS", "OPCQQTCDXCLPQSMMCROMCHFRDXRXMQMCWC", "DUBQHGGPRYFBPDSQW.MQCCQOHQPPMDDQYP", "YFTMPFMCVQSOBPCPOCVLMRXDQBYCADPBCC", "PVDDCQTOFWCFFMQRQCSCMQQRFYMSCVVQDL", "BCPEQMPDOMQVCMRDQPOVCAQOPMCAPLRCQD", "SPJDCPSPRQVMMVSREFVIQWCLLPAMFCDDCP", "QOORBDQMCPQJDPDBRODDOPFABFHCRCPYAP", "QLPVCRPPVVRHMMOFEMHMQPXRPQIQBCBCOL", "FRMFGRPMDODCDDODODHQJXMRBDAQARDMSG", "DYACBBQRBDMPCPHCPMQWPSCQQFPCWDQPPA", "BHOQQPZROVWPDWFRDPDQCCBUPQQYCGIRRB", "LAXCCDOOTBQUOPCBLQPOMMQDMQMQMPVSTO", "SFREMMQRCQBVOPQYVQPOBCPFHDQOODCXOC"};
    vector<int> POIs = {57, 211, 10, 37, 31, 13, 11, 85, 120, 148, 50, 152, 62, 40, 7, 20, 205, 9, 119, 42, 59, 28, 16, 63};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "SQEYHUIRMPVDBAZTCJOWLXGF";
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<string> cityMap = {"YPRPMMUMMXMMPIDMZPTPPUDCDXYUUTDZTARVZYTT.RMUAMVX", "YVZXDRYDZPXZDCPUMRTUYIYTD.DCCUURMVRYMXM.BDRDRVRT", "RT.DPCZZRVZRRTVUUMUXPITTVTRDZYTUTRZSYVMPDTDVRAYM", "XDCRYZTYZZT.UUYP.VDBTMDMRCUVDRIRZMPYZRTYVRYPRDYM", "ZTTYPTXPRXTZBD.PPVUTDMPXVUXRVUPMAYI.MUURMR.RRP..", "TP.TUYDZRYPMZVUMXYVRYDZZIPDPMXYRYTXMDYXVDVTVUVZR", "PDADUVYMRZPYVURZPMV..MPBRMCXRRU.VR.CYMUMYURVZYTT", "ZPCZTMUDSVXYTZTPRRVMDY..TRUUVRYYUZRCDZTPDDZV.RYZ", "BRPTYYUPVRCARRXTYXMUCRMTTAPTTPIPMPTUVZPZMMUXDVVZ", "PZYYTRTYPRTDCPZRYRU.M.ZMDTYDIMUM.PTDRXZVM.ZZXXTU", "TTVVTTZYXTUXUUZ..ZUDZMPRVPTTUDUPRVZ.YZUMRU..VXIX", ".YT.TVUPVDRCPVRTTMPDZMCU..PDMRDZZCMPZSMDMMYMXVZV", "RZTUTDYYVTDDZMMTMZPT.VZPMVMMYTUPPTPV..M.UYYP.PVR", "ATTZTVYZRRYMZYUTRZZZXYPVZTDVRTMMUMTVA.UMDXXRZZIU", "MDCPCD.VTD.ZPRY.UP.MRPRYRUTZYUXMYXMCCVTUVRMRYTPT", ".VUTCURMMTZX.UPYMUUPPTTU.YXPTDPTRRPVBRTYDDRZMUVD", "PUPZRPU.TXXDZMCMTMCZXYR.BDZDMMMCMMRRXZTPTPZUTD.M", "PPYYZURUYZUUXDIPZMUMYXRDPRYCVRMZTMUDVZRTRDMPDPVT", "MTZZMSDUYYPMMDUCDURRDYDYMZMT.TUPUYP.RXMZMDPDMDMD", "VDRMMZZUXZZYPMYPPPUUDVTIZ.RDZPUTYUMVSDXU.CDTXPR.", "TTVYXXUZYDRDZZXYVRMYITPDTV.UUMPDVTUTTURTMYMT.MCR", "PZYMRUDVVZTVTZTRZRZZMRDRUBTMTRZCTYDPVZRTTVPUTZYI", "YVCUDPMURCTUM.TPZMPTZPRZRVTZCZXVZ.TUTYUVVMUVRDYV", "ZRPTTUZYZPMCRDDRYRPRYMZTXRZTTTDTPV.PVVRUDT.XRDI.", "ZRTVPUDUPMZUMRYXDDR.UUYZUURD.YX.TVCTTPPUYUMMTTZM", "MYXRUPDUVZVUMPZTMYPTRPTTTCRRZYBRRV.VMDRYYTPM.RTM", "PMTTPIUUYMMMRMXAVRMPPRZVYPUDZUMRUUPDVRM.MZRUZMRV", "DXCMZ.PBRYMPMCDRTTZPMZ.BUZCY.RZZYRBRX.YYMTZVTTMP", "YZTYMUTYTUDTRDB.UCDXTXDRRM.RMZRRZYRTYPUD.DYMMUY.", "UXAMPPZDRUPYY..UPMIZYRDCXYTPCDTADZMUTRIUUPYSPYIM", "PTRY.DRDRVTTDYVYRDZMXVUYTMVYYTPXYZDAZTURYPRRR.VD", "XYUYYTZMDBZTMVMYRPVRRZMYPYVSURVCPVPTDTRXTMRCDVXM", "DCCCUVPMCZVT.ZTUUTZ.RYTZCURMYVMZRVRDVMUD.UIVPZTT", "YIT.P.XVYTYURXTCZRPYMUXMDYMZTVVYP.PZDMZU.DV.I.PT", "XTTYM.XTRPMRTYZZUDURUY.UYZMYCVXUZVZCURSZZYZTTZRV", "DPUMYMTVZTZTVRDDYAD.DYVDPVTZMMUZTVRMTAYMPRPUSZYX", "MMZMZ.VSMZZRTIMUZ.RYUTZCP.UPD.MPTRDMMCTMZPVZTZRM", "PTDCPRUTXYXYTZDR.ZZMT.ZAXVVDPMRVXPAPRMTMDRC..YMT", "MPZU.MMYMYPPVTCT.PZDTMTVPMXRTDDTPMZTMTTVYTTMYXRM", "UZCYRSU.DDZDRRMRUYP.MUV.DTRMZUBRDIXR.TRMCYYRCPDD", "T.TMVZXPPSVUMXXTBMSD.UMZTPCTPZPUTUPMTRRUPTVITZBV", "TZM..DTTTRCRMURPXMTUZDRAZZ.XZVTDD.Z.TUZVMTVZVURD", "URYMTTVRZVUMYMVDYPVRPPZTP.ZDPDR.YPDPTA.TYMAMXDUY", "UUZPTURMM..YXMMPCRU.PRZPVRPPRVPDMZYDPMYCYRCVVUYI"};
    vector<int> POIs = {151, 17, 205, 20, 179, 191, 13, 166, 242, 184, 229, 65, 219, 88, 26};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "VBZAYPSDTUMCRXI";
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<string> cityMap = {"ZFFMFFFPFFFWOPWAFFPPMFFZFPONMEMMAFFAWP", "EFFEFAZFOFFFRFMFFFFWFFWFFAWPFFMWFWFMWM", "FFFEFWFMFFWPPWEWFFFFWPMMPPEF.WEFFWWMMP", "WMEZFZFAMEWZPABWWZOFFWMMEPREERWFREFEWF", "ZEFPFWDFNEFFOPAFFOMOFRFFFFPFNFEWPFOOWW", "FWFFFFWNFFFFWEDAPFFWFMOBEWFFPEW.PFFMZE", "FPEWFPWFFWFPWWFW.LFFEZFPBL.O.FWWWPFF.F", "FUFFFEWWFFMPFEPPPEOFFFMFOFWWW.FNFMFOWF", "FMWMFWWFNWFFFWFEFFWFWEPWFPEFMEFAEFFMFR", "FPDPMFFFFOFFEPPFPFFUFFEEFMFMFFFEFFMFFW", "MOFFFFOFWWFFAFFUFFRFFBEUMEAPWFEFFFFWMR", "FWNWFWREFFFFFFMAPFWEOEEWUFEFFFW.OEPMWF", "ZPWNRFPEFEPFMRWF.EFORFFFWPFFAZEFMFEMOF", "RWFOWPMWMRFWAZPPEFFWFAOMPWWOMAPFFWDFZZ", "EFPFFEWFRNFWFWFFWRZWRFEEEFMEOEPWEEOUWF", "FWPAMFFFWFAOFFWFNWEPPEFFMOFMEFFMO..DFM", "RPWWWFEWEFWMWFFFMEFWFEEFFFMAWFEPEFPPMM", "EFFFFOWFFFEWFPMWM.WPMFFFN.RFAWOOEWFEFO", "WPWOOFEPOEWFFNFEPFPWOFFFFPDMWBM.AAWPWM", "WPFMAFFPFPEFPEMEWPOFAF.PPF.FEFFFWOPPMN", "PFFFWFAMPEFRFFFFFFOFOWPPMMBFEMPFO.FAPA", "AWWEWNFPFWFFA.RWOFFMWWEFAWFMW.MPDAWWWE", "FFEEFWWOMMEEMDPFFFWFWAWW.FZFWFWWPFPOPW", "MFWWMOFDFFPFAOW.FFFPWWFWFW.FMWFFEFPFEW", "FFWFFPWFFWOFFOMFOFFPFPFMWEEF.PWFOPMFFF", "POFWWMMFUPFFFWFOFPPPPWFFUFPFD.MFAUWNW.", "AWMFFPFFNFFWFFPFFFWFFPEEFFFFNPEFFFMFFF", "PMWAFREWFFMFFDPMWFWFRFFWPFPWWDWOWRMFEM", "MWMMWFPMFPEFFFFUEWPNFWM.FEWMPWEOEFFEFA", "MFMEWMFFEEPWE.WFEFMFMMFMFEEFWEFOFFOFFF", "NWFFFWFFF.FEFEEWFFFFFFWWEFFWPFMAFFWMMO", "FMAWPFFEEFW.WMMFFWNMFZEPEFPWDFMFFFZFFZ", "AUFFFZEFFFFWFAFFEFPWF.AMFFFMRMFFWWPEWF", "FPWMPPPWEMRPDFFFMOFMFEMOFELFFWWWF.OMFF", "WLFWMMFFFFFWFFF.WMEMFMFMP.PWNMEWOMFWWW", "FLFFPFFEEFFREOPFUWFENFNEWFFWOPMMFOPFPF", "EF.W.PFWLP.PEPFWNOOAMFFPFMNWOODWWPBMFP", "FFFFEWFPFAOFFFFEWZPZFEAFPPDEFFFFPFEWWR", "FPWMEWWMWDPODAFDWFPNFFWMFPPMOPOFFFMEFF", "WFAFPFPFOWWFFFMWUOFWFNWFMWPPWPPFAFPWWF", "DFFWFPOPEWMPFEWE.FFFWAFFWFWFFMZMFMNFFF", "OFFROPWEFZAFEPFOPPAUWFFMFFWPWFWLOPPFPO", "E.FMPFFEZPMMMWWFFFWEFFODFEDMFFFWFPMOWP", "MOWFMPFFFOMWAFFMPMMFAPPPFMBFFFEWPEFFPZ", "MFORM.MFWPMMOAMEPMOFFFWFPWEFEPMRWFFFFW", "EMFPWWOPWFNLEOFWNEFWWWZPEAFMERWFLFLPFE", "MEMMNMPWRFEWWPWEFFWOFFPEFPWPEFFRFFMMFF"};
    vector<int> POIs = {8, 639, 167, 56, 31, 34, 91, 279, 28, 14, 10, 22, 194, 174};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "BFEANROWZULDPM";
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<string> cityMap = {"GVVUUWVQGCJCGLXUWXTUVKUVUVLLW.MNQTVLJGCZLUGGMV", "UU.EYZWJUZMXZOENLZELVVVWJULVGXWTGVGVJDUGTVVENU", "GLOJGTYGVZLVUU.MZGZZGEVCJGYVLCM.XZCLGQXCMUWUZV", "QLVOGOGZLJLLVNWCZJUGZGUOGQMWULMNLGEEXYCVZCGQWJ", "LTVXKMMMUZEMLYVYLMUJMWYJLDTYYWZQUUZZVX.ECTVVQV", "LMVVCXMGYV.NL.MCUGOYTFTCMVCUOZGGQLLMEEJXVZJLCY", "XYGTVZMMVUEUVWNUUEVWGUWLMMCWZUWJLJZWXXLBLGGQYT", ".YLJLUXLWYMVLJYVVNVTUCGJC.XV.YJQYXXZOCVLVVWZLG", "YUZXYUXWXGMJKNJUUVLJYLEVGMKGMJXQGQCXJXMXQVBLGY", "BUJUU.VGUW.VUVNLUNJJGGXUUMVLGULJLZTXUMFULGOWOC", "GMGZECVGJWJXVJMTXMJWVVULTVCEVZMLJJLXXJULLYYFVZ", "CYLMNMENWVUMMUJJLDQQFYJGCLJXKGGBGFTUCUZGVLYWCY", "YELUQEOMGYGULW..VUUZCTGELEZKJXLLXUCGMJTZUMXZVM", "XCUVXQYCYN.GVGONXTLXCYVLMUGTXYYFYTUJUXWLLXMFOV", "MYTVLGZTWYJMXYNCYGGUJZVYEUFXUCVQ.TLCYOYVTZJUVZ", "MTZ.YCOZMG.UYUGVWWVWWCZUVGGUXOUZOCZZOCYVLVVTZZ", "KZLUVMVZCJJMGMVYUCZJULLGMLJUUQUVUCVBYOVMJYFUXX", "OZWVOWWNWZQGFXUMZUUZVVQCUJLVLZCCYYCYCMXLVJTMYY", "QXOGLUZZVBJGUUUVUUUEQYJGJZGGYLUGVCULVUVMEVLCZM", "LUMGVYGULLKUTJJQVMLUZGLVUVTOELVYCXVCOJBMYOGBLJ", "CZYZZZTEJUECTUYX.UYMYVMJEXGZVEUXJUEQXBVXUJLZCU", "TWXMXJJYXLETMUMUGVOQWTLUQLEGTXWVGVUG.GUJCJMGWV", "VZDTMXZGCZGXUQZOVTQXCUZJLTZUYQYZVCNTUU.YGJVJTK", "ZOGUQFCECCCVZVXNNYCJZYZGJOVVGMULGZJVVYWYXXTUVU", "VXZUZJVCY.ZGYMLTYULUUXVVLYXYEMVQGUTFLWWVUJZYXT", "OVVVJUTQBUWMVWX.VVMZXXVJGVXVVLXXLJVUNZJMWVUMXG", "BYMTUOUEXGYMJNG.JOXCNLUXVCZMXTGGUWJUEOLCXGMJXY", "UBOVXCMJWUZCYGTVWVVJJTFZVLVCQGQVLLGLGLGVMUCBVL", "LXYXGLMGWYYYC.QZGXVXCLVVXVTLLMVXCOYEOJGEZJULQN", "MGTLWVKVML.VYZWZZWCXVVWFLZJVXYNMZLV.JYMBXYVL.J", "OVZOUXZJKXZLMGVJKLKLLLMEGGKZTNBUXNMLBOUZZLLQW.", "UCGVJTUVTQVUYULVYVQTWJXGJNLXVLETZXULLBUMTCLVYC", "TJCOXELGQEXGBVMMZNLJJVWJVLWXKOWTMTUGJVQUOLKXGB", "UVZJZLVZZVVLTLZUMGGGVCTVZKUUQUJTGBZWWNWMGUVMCC", "YWGDLMXLVMMXMGYVCVZZLULCYJLXCZUBLGLUCVMLXTXEYZ", "YJYEUULNZZMTODUQTZBMWTXGZGYVETLYJOYLMGZWZJWUXJ", "ULGWXZXBMGTEBGVZGVUWTNYLONUZYCVJWGCVVQUOUGLXCU", "YLTEUXLCUGUVJQUOUNCEUCGYUVZMZBWYJXV.XVWLTZJQLU", "LUUOY..QCJVCLLUVGMMTGVVJYYWOZUGZUUVYVZJWXMVOQL", "LTXBLKELEJ.ZTEUFLLKXJEZYYVCUOJGXZBGUMUCTWOJYMU", "Y.GUYCBJMGLMDMDYXTBVUXXLOUXLUZMGKVLCMLXGVUWUMO", "ZGUCVUUEQGXNLGTGYBUVWBCM.LWVXYZUQMTVZVOQGUVVBU", "TUOULVLVYOOUYYUWZUXLQVYGUUUJTUBZUCUUCKLZYLVULT", "KLOXZJJGJZMLUOZFZJL.JCVTK.UNVGGYVKBXMZCUYVXUWF", "VUCLEXJZVGYKCLLVYUUETGUJJQCCGZMVLQLLUL.V.QGUZG", "ZUFGZTWUWMULLQLWXUVGFLUQLXLEFGVVUUGJOLTVWCGMML"};
    vector<int> POIs = {131, 110, 134, 61, 34, 20, 59, 88, 25, 194, 36, 233, 129, 85, 126, 149, 231, 168, 56, 8};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "JCXOBFQTKLNUYWMZVGED";
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<string> cityMap = {"JCP.CJJKFPJUJOJFOUKPOPPFPVPOOPFKO.V", "KJOUFJOMFU.OMOPPPFOPU.PCUUCFUOFVKCV", "KPPJFPOVVFKJPJKKKKJOPOUUUFOSOOUFOJU", "OOJUOOPKPFPS.POCOPCVOKKPOVKPPOHOOVP", "OKOCJPJK.CKMOFPKOK.P.PSUPUSF.JUPOFK", "PUFMCJFOOUUOP.JOUPUPOU.OUOPUOOOOKUV", "CUPOPO.FOFOFPMPCUOJOOPJPOCJKF.MJPOJ", "SJ.MPUP.OKKUPUCCUCSOU.JJOPOCOUOOMFU", "OKOMMCOUJV.JOOOOOFCJMOOUVJJOOOVOPJO", "KFOPPCUCFKHM.JOPOUOKUJUFJ.OHPVKCKPP", "P.CFOPJMJKOOF.MPPPMFOUK.OUUO.O.OOJC", "OOVCUOKOMUOJUCOVPJKOUUOKJCFPJPO.OPP", "PKUOJPVFVUCOFKPPUF.U.OVHFPOOUPJOOUF", "SUOOUPCPOKMCU.OPPOVJKPFPOUKFOOO.JPO", ".OOKUPOKOOUCPJJPOUOO.CJKUC.PK.OPUUH", "FOVUPU.UKJSFVKOPCP.MOO.F.POKCPOJCKP", "MJ.OVKKKPJPPCOFOKO.U.KFVJKOCPOUUFOU", "FHUCFKOPKUKFJJOMP..UMCJPUJFOPOOVUUJ", "KCUVPVSJUPMKCCCOOUKCOOPUUPUJPPKFJJO", "JUKKOPPO.POOFU.OCUKFUOPPKUHKUJCUFOU", "CJOMOUFOCCO..OJCPOOUOOUPPJF.OJUCUOJ", "KUOUOUFOJUOJJKOUPOOFCPCOFPPOCUCSOPU", "KPKKCPJVPUP.HJUU..FFJKMOCUPCPUJ.S.K", "JPPC.CPCPUOKVK.UOJOFPMOCOHMKVFUKJ.J", ".VC.O.POJPOOPMCSFJFFPVCOKJPKCKPPUOJ", "OOJJOSCUPOFPFOKVOUUJOFPFOOPPOFOOOFF", "OUPPPCOJMUJPO.FO.OHOU.JUUFKPUCPOKOU", "P.UO.OOOUPFKOJUPOPUJKO.PJPFUO.KKOP.", "CUOUKUPP.PVFJ.UHOOOOCPUUVKFJPFUKOKP", "MU.VPKPUPPOKFPOJMJJUPCUVPKO.OCJOPPP", "PFKMFUPVVPFOJCVOUPOPOOPHUUOUJPMOPFO"};
    vector<int> POIs = {239, 12, 96, 13, 75, 177, 103, 144, 32, 84, 40};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "OHKSCPJUMFV";
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<string> cityMap = {"YBFYPYPSSTAUKNTKPASDTFGLKASSGBTDBG", "TTNKGWSWEPOFXAOATYOTGCMLLKCWFVGNAT", "AGXFOXCBNWFCNKXTNPFCNFESXFGGAKGYXJ", "XXNLUALKHOGNECXKOSDOAKLGKFTXCGKXOG", "KCXXTOOGPGXPFNSPPXKFYXFGMGGKAMALNF", "CXTKLTGFNKTXFFLSFLAFKTXSGXVXYTXSNC", "OUSOXGSWCLJMGCATGFJFXGMGDKLGNCWBGU", "PGKAEXDDVYJCNKANUAGAJ.XTXXTTJXKDNL", "OFLFFKGMOTWSXGKVQKDXYSCXALFCPSGNXT", "ATGFAYSGGLKALWAABXTXNSUXPSSN.SGTYS", "NDXGAPHGGC.PBGGGWKGMTOGSFATAFCGCNF", "GYXXAFKALWFLTKPFFXKKLFXAXYAXCGKNNC", "JTFXWANPTFALKAAGA.YLAXKFLPCNXFXAEX", "LXA.AFKNGXMOXGPDXOSYGGXXAUKCNFAXKL", "TXXFWOYUFFPTKCTAPSACBAHLLTXGXDLKXX", "NETMAOTYOYNXXNATGDYSGYOTBNEAAOYYAF", "KOGGTFKPLWYANNXXFSCXNSCLXXACAGLALG", "YSGGFNTFXXAPXOFXKGLFSKABUFXOXAGTKC", "PYIPTMKXYAGPOLLNHAAJSNYKWXUETFUNTB", "XXBTGTTXAAKAJWJJTEAN.FKKBYSYFG.KFN", "AAX.GXGGCNPFAXAKUHUXOSXOLCTWUSXAKG", "SNXFOXNSLMLCFWLPXJNXYLKNWGYGXFCCBU", "LWCYYGSPXWOBCGNEAWFPXLLXGJXAOLEATC", "GBXOTXTBGSTAGCYKOYAYKXFTGGKTTUFTWK", "OO.GOAXNKHPOUTCNSYXJCGOJYFNPEXXXSC", "LFLUUANDDKYGJFWFAWTAUKXAGTCSWXAXGK", "FWFNMGENNFGOYJGEXXOGU.LJLSCFAKFGBT", "NUAKGKTXLFYXXPKAEXSOTFFXOCGAUFPXTN", "GBAFAGTWKA.IXXGYKCBSTNAFAGFAATALLN", "KASYXCBFLFLXKLFSCLMLOGLTFWG.FSGXTO"};
    vector<int> POIs = {70, 69, 6, 1, 23, 47, 21, 4, 2, 13, 15, 93, 57, 28, 100, 33, 44, 43, 118, 18, 14, 58, 48, 83};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "TKHQUCBVIMEALWGPOYXJDNSF";
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<string> cityMap = {"FQFMISFKBADMB.BFS.M.B.KVMBGV.MBA.IAVFMBDIMIMBQMMM", ".KMIRIGFMSFKKIFSSBMKBIBMMMFSAGF.KAKB.MFGQ.MMFIQGQ", "IMKDIKMABSKKBMIGIQQAIGMBKMAFMD..QSFD..BMVBG.FFFFA", "MSMMGSBVSFBBGMFM.GISIDMBMBRMMIFQQDFFMVAMFBSIBKM..", "MFBBIV.SMKQ.IM.II.BM..MMBMB.IIGFBBGMMFM.QFAIDBBMA", "A.B.K.BMMIM.VBKMMKM.GBIM.MBM.BFFMAFADB.MFIM..RB.F", "DKQDDKSG.MIBAVMFIAMGV..MFBKBK.GQ.D.MQVRMIFR.FDBBF", "FPRVBKG.V.BKIMBFMMGBFBVKIAD.Q.GMMKQI.VBVIIBK.IBGK", "KBMBMKGIBKMQBIBQI..V.GF.FAMSBVMKQ.BBBKIFF.MFMBVGD", "K.FKBMGKFPKRGMFB.S.ABDMBMS.MMFBMRBBMBD.G.B.QQKMFB", "G.MBSMSF.MBMSKBQIIIQ.MMVMMSFIGVS.GMQFBM.BDQSBFVMF", ".MMMBSQBQBBBDMMRABMIBKMDFBQRQVBMMMMFIAVQMSISSBMDI", "DRFQ.IIGMFMSB.BBBGI.MQKFMDA.MSISMFMD.IQKFQBMMBMVI", "KMFKIFFKIDFBBGFFIABSMM.AMFMBF..MGFI.FMBFIVKIQ.MKF", ".KIGMAFB.KQ.M.DFMBKBQBBMBMPSBAAFMBVFMA.MMKMIFMFMF", ".P.R.B.M.BMAAMFQBBBMBM.BMABFKVG.BGDBGVBQMFBBBMBBF", "..FKMIQMMKMMRGQMIIDVMIS.B.DQFBGIVFRBA.MIK.MMIGFQK", "MFBFMBIIBMFAMDBBF.PBKFRMMMMMBBGMMKQQMBF..IIB.BKR.", "FMAQ.BIIMKMFBSFMQFSBBM.VFBQ.MBBKMDKMBKK.KRIMR.RKV", "G.IB.BQMQVMMFAQAMVMQSMMSBGFRQQKBFM..DSSBMSDKIBMVB", "IIMBMMKSB.M.AFK.F.G.VMQKBBB.SI.GBQDGMBMV.BDG.VI.K", "MMMBBKF.ASSBF.BQVBSMM..R.GQ..R.MGFIISRMVAKMFMMKF.", "GBMAMBADQ.SIM.FKMRFKM.BMMABBK.MSBIA.VMMBAFGMMIQKB", "RSM.AMIBFDBBAK.BK.GIAIBSMBMD.KMRFM..IDQMMFMVMIFFB", "MVFMG...DBBKMA.MIVBFMMSBBM..S..IMM.FFK.DSBKBB..BM", ".AMMFKRKBMM.MDARBSQMD.MBGMAVIMBFM.VMPFIGK.FMISGBM", "KBMKVVKSMDBFBIVADBAAKRBIMMGBQVMFS....VRMSIGBF.KKQ", ".BDQDDBMMMIFDABQ..MBQVDRS.VBMB.IBV.K.FD..MM.IBSAK", ".IKBMQIIIBSG.RKQFF..MFMMG..KBBAMBFBMGDSAIRMFMMBSD", "VIFFKIMP.VM.RR.DA.BAQFMBMBQRBM.GDRI.FIAVFFKFVVBMS", "FFBMBMQBMBKB.MKSMMMIMSGSAMIAFIVBAVF.IBBISIAM.RB.B", "MIIKGMKFSMMAMSI.IFIFMM.MGKQV.IBIA.M.VVMSBBKDMV.BM", "MMK.S.QIMGMIFIGDSMSMBBMFDMAS.QIRMGSBVMV..MQMMB..M", "MFKIM.BFIQIKBB.A.BVFKBFBSMQ.KMI.BQK.KV..MVB..FMIF", ".GMRQMA.IVGVB.MPMFSBMFM..B.FK.DFBBSKR..MMF.AKBBMF"};
    vector<int> POIs = {136, 73, 71, 60, 165, 72, 117, 81, 41, 8, 80, 256, 333};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "IVGDFAKQRPSBM";
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<string> cityMap = {"XKXK.COFSXFHLOCXWCCVRQ.RNOLKKRKXOPHRMULKKKKSX", "KX.WK..PMBZQKWGBJODKB.KQCQ.KH.OQR.COCIGQHKKOX", "WBGLCKQRCKNXLRPJMK.DXKKR.JHKWBDSKAKKGWCOKRPDR", "LCXDWCLKXOKL.CLOBKCCKL.HWR.KLLMZOOKWLRKBCKKXK", "OCLXXLDKODMRROCKCPLKQCVKCQXDKOGGC.LKK.JVSXKFW", "DKDOCW.CRXKKVRVHQCLKXCC.XDGQCDADLCDXCJKP..K.K", "RBKRVDNBXB.DZNXBXHKKFH.HPJKOKFOQL.X.MQKQCDXRK", "CLA.KC.G.KCXICFKKKLCKWRGRCAKWNCCXKCFKXCLDKKX.", ".RXDMRKDHKCKGCCVKCNQO.CQKBXLQRDKCKWCXCDWOCULK", "L.KKRMVOKKFMQMDPCKD.DKKBKO.JKBXDZKVVBZ.FLXCCR", "DXMKKKWVKVOVDVKMCMW.IRWMKMKWL.CLHCCVHQNM.XQPP", "XFKLRCCKOB.LPOMDDIXLCKWGVXK..CCKKCQXSCHDKOMOD", "BWLXWCK.CKRCCXJSCZRKKKCQQNXHFGQBCMBLKCCXBDSKL", "XWKKOHXRKMBDCKKRXK.JOKKBCCLOCFUFQKWKKKNQ.CXRO", "MXHWKC..KCSXXLKC.K.C.COM.N.OLLKDOKCOXXL.VCG.L", "MKRKHNQLLVFMORC..SMBLDKCKFLDZWWXM.CVDGLCMLIKK", "RHKDXHGIM.XKCCQDQC.RXCCCCLCQDRHFLCCILUKDWRX.H", "XBKCKNNSNUMKKRW.G.KKMK.OJVKDXTKCWVKXWHVDX.KNP", "RCKKMDAXO.RKCKKCMKXOVPKA.KQXCCCLC.O.OMXMXKKUO", "RMRL.L.PNRKK.KOCX.KLXMAQUXRCWKDHL.CQLK.ILKAXK", "LDKOWLDKCCXAHPUCOKXVBKKC.KWOQDKCZO.XCMLXOOMLK", "VKXMNMOOMH.RUK.CKKISHWOOMNFCSQQKDKCCKWMKXLLKF", "IXK.NPGCRNKMCKLKHLVXVCUCXKUDLCLUWDXKCKCQKLVKK", "KSHCKCKKDKWCQQWVSKRWLXQQK.KKXWPCKNNKRKKSAKKDC", "HCWCV.OKKKQHKXW.DKXWKMW.KZRK.LNMGCCSLKCMCXEFM", "WAMUKQORL..CBOWLCCMAQKMLRQKDLKKXWX.GWKK.DKDQD", "CCKXIKBKDLJXZOBKOOLKCKMCJXVJKOIV.ZJXWXOKORPKL", "XCWX..IMDKCSLLAODH.PC.DD.BSKXRKCKUKDQKKKKBIWB", "IU.S.VXKCH.OKOVHKKX.XQS.LXOXKKDLUCRWCLIRK.KXV", "CXIKNNLCCQCKKWPF.XCCHPXR..QHZKKKSL.KRQAVH.XIK", "POH.ARHCD.KLKCCMGWOKKDDXDHKRDKC..B.BLLCRWKRCM", "COKCGQDOLKKW.OKKKHBBKSDQHXULCRHUSMLSNR.ACK.KW", "JKXKOWWKKFKWKKLRKFI.QHBCRKK.XCC.UOQOLVCDL.RLD", "RKKKDKKQKUKHQCIK.KRCKCVBXQBCCWK.OXKKKXCKKKXXK", "VSXBQOURGXTBRKWCAKKR.QQDW.OCLXKKLDXDCKFL.FVB.", "XWKQKQQKLRPLCLKKXJFO.LXGLXXXMKCBKKLKDRCG.NDMQ", "CCWTUKODGXDCFKKGKDLLKQDOMKOCC.CCIVXGKOLACBKSR", "GDSGKBWGKX.O.LCCZ.BXSLKL.WVDBCLXLDCCC..WDZCPW"};
    vector<int> POIs = {59, 46, 131, 85, 22, 21, 3, 200, 26, 27, 1, 66, 76, 28, 42, 89, 45, 30, 18, 14, 24, 328, 16, 70, 112};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "MBXOUITCFNEQRSVDHGAZPKJWL";
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<string> cityMap = {"NL.LLFNEFKTLZTLNLLTETLACFENLLBBEFZBNBFF", "FTZFBNCFCBTKEEETBTFFBBNELFLCBTGFFLEZLFL", "FLFLTTFLTNKNLBFNBNBTLLTLLOLNLFLBTFTBEFE", "ZFEBLFCLTLLBFGEFEBLAFTFERFEBFOFLTFLLFTN", "FTLLFNCELTFELFBZNKLZTNBBZFLEELBLLKFFEAF", "KCLFETFTLZFGBLKTLEGFBEFFTZLLAETZELLFNFB", "NBLFFTLBOTTRFCFLLLTTLFLLL.LFBTLTBFLFTRF", "TEZLBCLBLTFFBLLFFBFFBETLFFLLZFBELCELLFC", "LEFEEFENFLEEBFFNLLEFEFLLBEEFNEBBFEGTLTN", "TLCBFFZBZZLEFBNNNLTEEFFLLFFBBLLTFEFFFFL", "LLLRFZFFNFFNECTBFBTLTBTBBTTAETFFEEELLFZ", "FFLLNFFLETEORETTLLZFBTTLLCFEZLLBTEEFEBZ", "FBEZEEFFBKFBLLEFFNBLFRNLFFRLFABBNFFEFFL", "LFFEZFFFOFBCLLLTEEFBTLGFLTFNBLFFENEZTFF", "FNBFKFLTLBFBZZBTEL.TEFB.NEBFLLBFFFTFBLE", "LZ.FBLFLBLLTFTFOLBCBLRFTFFCEFFBLLENRTBT", "TOTTLNLZNTFF.LCEFFLNLFFBLZFFFFLEFBNZFBL", "KTTNFFBFLCTZFZTREFFENELTLNKNCLZFRTFFFLF", "CLGBEZFTTFLLTBLZNLFLBFEFALTFLELLZNENFEL", ".LLLLFLNEFLFBBFZBBEELBZBFFFNLCBELBLLFLN", "FLLLEFEEL.ZFTTTNLBEENZFTANEFFKBLFLNBTFL", "FBFFZFFLBLTTELEFBLNONELEFTBLLENSFTLBLCF", "FNEOLLLZLFLTBFZZLFLLFLNE.CBRRLFEEFBFNKF", "RTTFLFFELTELCTNNCZLAKLBEFLLLFBZTLFZZLFL", "FNEBFBLBTCLZFFFFTLETZFEF.EZLZLCTFZLKB.T", "FNCFBTTNBFAEELLBFEFZCLFFTBEBLLALLLELFNF", "BTFBLFENFTLFLETLFFTBLLTTBFLKZFNBLEENBFL", "FBEFLLFTZFOB.LGLELBBNLLFLOEFBNNRFBFZFL.", "FBFFF.ZCLTEBLTFLENOTEFLAFFFLBFATKLTBLTK", "EZBZFLTLBFLLELBBLEELFBEFFTELBECFFFBNOOK", "EFZCNFEFFTFFLEEELREFLTLBFBBFFFBLLBNLNLE", "LEFNLNFBKBEFLLZ.FBTEBFTBFTZTFBLFLCFFFLL", "FTFEFCLEKLLETLTEGLFKFBFZTNLNFOFTFBLNZFB"};
    vector<int> POIs = {15, 16, 35, 82, 65, 9, 22, 150, 277, 146, 308, 133, 1, 13};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "ORCNZGKBLEFTSA";
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<string> cityMap = {"GEGQELWGGUEGQQQBIIBUUGGIGG.UIG", "IEI.WIQIGGGQGWIIQGGQGIGIQEGBGB", "EBQJ.GQQGGIIIUUIGIIIBIGLIGGGIL", "IGIIIWUIGGUEGQGQLQBEBGGQQLWGWW", "UIIIQGIQLIGQUQBQQBBGGLIUQQIGIL", "II.BGQGBEGEGBBI.QIIGGGQWLGQIQB", "BIQLIQQUGUIEBGBLGEQQULWQQGIGGU", "GJGGLEQQGUQIGBLQIIIUGIJIBGQUIG", "GQGLIWWLGWGGGL.UGEIGWUEUGBQGIQ", "IGQGQBGGIGUGGIEGLLUIBJGILGGUWL", "LIIIGQI.BEGGGUEGIIQGIILGWQGEGI", "BIWGGQEEI..UBBGB.GGIJBEIUGBBWQ", "WIQQGGQBQI.QEUWIIGQGIQQGUQGGEG", "IGGBEQJIILGIGQBIIIEGBIIGEGGIBI", "IIBEUQGQIEEGGQIGIQQGIQIIBGGUQG", "GUUGGIBGGQGGIGQIBGUIGIBIBIGIBI", "GIIIIGGGIJQUIEUEEQGEGGIGEIJBLW", "IW.ILGGBIEGUQJUQGWWQGIB.EUWIGU", "UIQGUGIGIUGIUBIQIGGQUEGIGGIWGQ", "LJEUQGGGGEQQIGIEBQQQQEIGIQQIJG", "QIIQBUGIJI.BBQGWGGIBGBJGGGBIIG", "GEQI.JWEGIEJGIGQLIGQGWBIIGQLQU", ".GGGGGQGIGGIIUJUGEQEGIQBGQEBQG", "EGIGGBGJGQGQEGBQUJGEWIL.GGUQII", "GGGIUUQIQLBGELEQEGQQGWIBBIIGEG", "GQEQGLQGGUGGIGEIUGQIEJIEJGIIE.", "GGGIQEBIGWQQQIGGQQG.JQGQGQGEBG", "QBIBBIGEQGIGGIQGGQGEEIGEQEGGGQ", "EGEELGQQGGGEGGLBGQQGWGLIUQGQIR", "JGWQQQGGQ.IGGBGWIIGBIGQLGQUQJG", "EIILIGEGIGGBGQQIQI.EUIEWGGGBGE", "IIEI.WGGQGIWWBLBI.GWGBQBUIWUIU", "IELIGGGIGIGGEIUGIGQIGIEUBQQWQI", "IIGIIWWGIEGEGBIEGGQIEGGIQLGBGL", "IIEWGQLQBUGGEGBWGQWBGIIEWQQWIJ", "BIIEQGBGIUGUI.BEUIIGGEIBIGIWGB"};
    vector<int> POIs = {49, 43, 223, 161, 24, 90, 1, 88, 309, 68};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "WLIQJERBGU";
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<string> cityMap = {"DBRLBBBDRDRBNBNBYZRBBZNDARBYZXBBRZLA", "BXBBIDNZBBNTB.ZXDDBRXBZBBBIBTDYBDNRB", "BDNNBDDNBBBBDTBBNDBIZRRBRNTBZDNBIXBB", "NNXDBNBBADBNYDZDNAIBNBABBBTBNDARXT.D", "ADBBRZRDLIBBZBBNBNBDBNLTBDBYYBXRXNAB", "BDBNLBZZZZBTDDDTDBTZZBABAANBYBZBBXBY", "BBRTBDDNBBBNZDBBRZZNTBRNBLBBDNTBYZBR", "NBBTRBBBBBNXBBBBLRBNDBRZTTDTBNYTDBNA", "RRDND.ZNZNDZDDIBBDBNTRN.NXDTLRBBTBTZ", "DNNNTIBRNNBZZBIBATDDR.ZNZDBINZBBBBBR", "ZBARXTAZBBDNRTBZBDABDTDRBBABBATNDBBD", "BNRBBBZBBBNZDDNDYBBZBDBBDYDBARBXDYNB", "DBZBDZNNBBYBRDBZNRBTALRNBDYBRRTBN.ZD", "RBNDBBBDNXDABIBDRTBTBDZY.DDZRDBZBYRT", "BZZB.BBDDNDBBNTDBRBDRNBBBZBBRYBNAYBD", "BTNNDBBBBZIXBNTNTBBTZDZNBDNDDNBBDR.D", "ZANZDBNZBDNNAYBBBZXITZBBIDNNBDRTBRNB", "BNDABBXXDNRBBNRRNABBBBNZBBYTRBBZTXNX", "BDBNDNNDTDBBBDNBBRNDBTBZTBBRTLTATBIB", "NBBDRDBTBZDDDDBZDNBNDDDANBBDBBDNBRNR", "BTBYZDZNDBNRDBBBIBLNNZLDDRRRYARBTBRA", "BRRRDBBRBNBXNBBBDBBTX.BBTDZBDNZTZXDT", "NBBBBBIB.DXDINDTZBBDBBAINBRXZBRNBDBN", "BBDZBRRDR.YYBDBBBRNBRRZBDBBBXANRLALT", "RBBRBBZXBRBBB.NZBNBIRTDBDNADZRRDRALN", "IIBBBABBYDBBRZBZNBRBBZBNNBIYXNI.NRRN", "ZZDBTDTNDZNZABAABDBNZABDNDBLBNZBTNAB", "NBBBTBBIYBZBRXNBTTBBIDNNZDBRXBLRNDDB", "DDANRZYBZDIIRRRNBBTRTZXYDNBBTBTDBNBR", "BBNRDBBNBBNRDTZNYBTTNBBBRBRDZDBRALDB", "BRNRNBBZDNBNBDTRNBBBXBRBBDBDDABBANBD", "BNNBTBRB.DBRDBBZBNNZNAZRNNBBBANDBBBB", "BDZ.IZDNDNBBZARBBBNRDYIXBBLARDRNZZLT", "NDBBNDBDDXYRAZXADDXNBBRBZBDRNBBDZLBZ", ".ARBBNARNDINBRBLBBDBBBDBBZRBBBAZZZBB", "BRDTBBLRXRZTDBTZBZDIYIRZNNBBDBATBYIB", "DBBBBZBZYRNBZBIRBRBBBRRYBBXRBZBTNBRN", "BNRBDB.BABRRBTBXTDDLNBBBBNBRZBZBAZB.", "ZBRNTDDZZTDNL.ABNTRDRBDNBATBBBBRBBZR", "NBYBZBBNBYBNDDARLBBDBIZBINBRBR.BZDBB", "BBXBTIBTRANBADBBDADYBBBRYBNDBZRXBBDR", "TNBZDRBBDRRTN.BRNNTBRRNBBDDTNNBBBBRB", "BNNADTNBZBNZNBIBBBBTAIYNDDBDABADBZBR", "BBBBNNDNRBADRBNBTNNBNDTZBBXBNANZBDRD"};
    vector<int> POIs = {95, 42, 216, 133, 43, 69, 535, 40, 158, 205, 26};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "TYDZXABIRNL";
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    vector<string> cityMap = {"HKZXLXXZOLLLHNUOVXXVV.NXVLHVXKVXXVVGHTVKPPXTGVTU.", "UXVNVVLTBHTGOUTVVXLKKGVUBOTVBNOTLUUVUGLTLUGZTXXXT", "LNULXXTNLTXTVTUVLTKNHGXOOHXXVZVXXTXUVLUOOTOLUPULT", "GN.TKTVXTXLOOOGPQNLLL.PPLXPKPTQVLKHZXVKTTXOOTZ.TX", "XHXVVPTXLZMVHTLXTZLGOTGXXXH.TLV.VLXQGTOLGOLVKVBXT", "LTH.LUZOVXXQXTTOOHLUKPLVXLUXLLLTZXOVTX.XLGTOLBQXO", "XVTTXLLLLPKNVVVVUTUTHGKTTHTTLLNTXULXVOUKLXBVTVTVG", "VBVVUPUVQTTTPTOLVGVTLXXONKKNXTTULLTNXHKZBUOVOTVTK", "GTXLOUTHULXVZGTUGTGGKNVGTTTKTVUOXTLUTTXTHPUOOVPKK", "XGOGVXVNVVXHLXXTZNXNGGLUUNVQVPUTLLTTLVOOXUXV.XZVX", "GOVXLLZVNG.UTLOLTTLLXZUVZXVQGOXGVOLVXVTTLQTXUV.ZT", "XUUNVTXPNXLGTOPLTXTHVTTOXVXTVKTLTX.MTXTVTOUVMVKQV", "TLVTVLUXTTXXLTVXVTQTUVQHBQKXLTLNUTPNKVTG.HXPVGVUV", "VQV.VZOLTLVVGLQXXTNLTGOPBXOLLZMOLTLLVM.XPXGGVGVOV", "LNP.VTVXLTUXLVKMGTHTVLXUPGLUOXVVVXOKLXLPT.GLNVXXV", "TTPPUTPPBTVUTVTTXQGLGTXXOXTZXTUXNVLXLMTVTHHKVVOLL", "VGZXGKPXLTVLLTVTBLTPZHUVOVBUXGUTVUVTBT.TTNXTTTVVG", "NXVZVPPTGTLMVQUHLXUPOHGLUMTLZLUTLHLUGUXT.XNOPTOVK", "LLZZTBVKOXLXVTOUXVVPVLULLTXVOPTLTOLZVKVO.XTTOVVGL", "XXMXVGULXUVXTXOMVO.VOLXLLXBHGXXUXTVXVXOKVLXLUZTOO", "VXKLNOOTOPTXLXOBNUKTOVXVVZLUTLVOKLXNHTOVTVMVPVNVU", "NOUQTNLVTZLOZX.UVPTBGHZU.XTTTUNXTTVLBTXZT.LLVTOOP", "TPLNPVBVHNLTGVUUOVVOTLQVXXVLXUOXONQTGGTGTGGNTLTXM", "NTUUGTXLXXLV.UVVXXGULULXXVTQVUXLTTPUTVUXGXTVMXVZV", "VVVNNXHPX.UVXVLXOQVUXNOOPPOTUVXXNTOTLVVXTOVXTTMTG", "XKOTOOUTGLLNVXUXKVP.XLGVTXVTULHNZGVKLGLVZXTVUXXHL", "XMOXPTOTVTPVVTGNLXXVTVVLTNLGBUGNUZ.ULTONVTLULVVTU", "GMXOVO.NTTOGTXX.LOTXOGPUVOKVPTONVTVXZOLLNVOTTXTOO", "OQQTPXXVPVTPQLXKONBOKTXT.XNKKGXXH.XVVVXPXQKXVHHXO", "VLLVTLLPQBXXTUTGVTGXKTXOVOUTLLULVHVTVOMLZVGTZLXXX", "GVVGGT.XLTTGXLVLQVVXOOTTTKK.TVNTLXTNVUVLTOULOX.UV", "GVXL.HGTLOTVTVLGLVNGVTHLVKXXK.XGVLTLUXGXX.ONLOVTL", "TTGTXVKTPTGOXXKLMGVLTVOZPVTVPGOTVLTTUQTLLXOTLXLUO", "VPLVTG.KVMVMTOVTTUXVXTPVVLVQQPVVXZXHPZLUXLXTOPOUT", "LGXQKHOGTQMVVVLGOOOLVKTTUTVLGGTTHZLKLNLVTUMTTTTMT", "VXXVQPLGGXOMVVVTBOTOMLTGXPXLTGPZVOMHTXVLLLLLXXOTL", "TPQTVGVUXXV.ZZMHTHVXXOXXGKVVPTXLXGZLXUVLOQQTGTVGP", "XGVGUVVTLZVVLUMTTOVVOXOXLXNOVTLXLMTNHULTTUZVU.VGP", "XTKXLTTLOVXTLTOTHVTGHU.OOZZVLXXVNX.VKUTUONTVXOXHV", "LVUXGOXGTVGUUUUUTUHXVVVNTOGUUQTNVUOLOVGPXXUZOXXTH", "VVXLOKKTPKLVPTVUXOULXVTNGVGUUXNXTVLTOLXZVTLMPOPUG", "KTTOTKLTTVHLLVXZOVGLU.NVXXGGVLGXPXVTBVLTXXLTOPTXV", "GXXLTVXOZVLVULUTQTOVUTONLTVKLVVKVLVPGXTZLGOVVTTHL", "T.GHVUXVXLTNOZPGTHTOGGXUGXOVKMZVUVOXXXVUOLLXOTOTU", "LXKVLOVOZVKTUZVUZLXGUTLGVOLKXPUUGVGTTXVLTTTVVKVLX", "XTVXGUHVTLKOGTOVHOXXVHUXL.NPQOLPUGHLVTUVXVPUPGTVV", "NOVONXTTTGTHNLKLVXLNXVVTUOMVPOQTVLBLVHTVTXULUMOMG", "VMXXOXGVKVZLOKVXOQTVHKZTLVZXLTQLBTLNUOOXVUVGTNGXT", "LXVXLGNXVLVHVTNNTOQGXTLGXVXPTVKOLVVNGTLN.KNXLTUVU", "LGVTUXLLUULPK.GPXOLVMTVMLXXVUXGBU.OUTLOXTTXMKMXZP"};
    vector<int> POIs = {381, 171, 44, 28, 40, 194, 67, 375, 91, 66, 82, 152, 87, 289, 333};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "VUQBMOZTPHKGNLX";
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    vector<string> cityMap = {"IPVVXJAVIVVIUGGUNVCIGOGIUCOVNVIVCNJC", "VJOUUOIGVCGCUIICQIGUU.XCNUGANOONUVGV", "JVV.VNJVNOPCNVIINVIVOVUUNIVCCUNJVUCI", "JCGIUCUIGCINFVVVCUPJGICGPVXJCVUUVVIG", "VVCCVIVUOUKVUVOOVNGUUVUVVUVCIIIIVPGC", "CUVVUVVGVCCUGUCCXIPUPIIIJONVAXVOVUVV", "PJIUVVCICJUNGCIVIJIGGINVCPINVCKVVGPG", "UKNVGVNNPIUJPVVUQGKVGIVGCVUUUNCJUGKP", "CNICXUGXVCGNIGOIVVVVJVVGCNCVJCCININV", "CIVVUUCIUPCVJUUCUUGCCPPIINOGVVGVVCVV", "OGIINUNJONCIICGVOCOP.JCCIOUIPUVVGKG.", "KGUCVOUPIIOOJPVVPPVVVNUVOONKCJIUCUJC", "ICVVUGCVOVUCNGGOOIOGCCPOPOCIC.GVGVCC", "VUGIVOUCOGPCIIPVNVUVOXUIIUXOCVVUOUGX", "IGCCJIGCOVUIUQVCGIGCKPNCNVCPVOVOJVVG", "ONCUVUVNVNCVPVKIJOJCUCOVJGUNIUOIXVOI", "KNCUV.VINUVCNKVVJNCQIOGNUUIICOGFGOVU", "OOUUONGUIICVVVGCVOVVVOVCUKVNUCGOGUIV", "GNVUVOOGVGNCUUGPVFIGOVCNJCCNCUIOGUJN", "UGUUCCUPGICVNVOUNVVUJVIIICGCOOVCUUCC", "CPCVJJVNKOCGGVACOCVUCCVUVVCIUVUUUIXJ", "UGXGUIQKPVGGCUVUNIPCCUVIUCNC.VGVVIUC", "JCPUUJVOGIOVUVGIVVUVUUGCUPUNVNVUVIUG", "CNUUVCIGUJVCUIICICJKCVVVVVJPPCCUCOAJ", "JUUOGOUCNOGGCOCVNVOUVPNGJCCVNIINCIIV", "VGVPGCIGGJUVPCIPVNIUKIPUOVIJNOKVNPVC", "VOVIGVCVCUIVGCVVUPUPVIVUIPUCVUCJPNOU", "UUUJI.OPCCVVUCGPIUCGNNNVOCNUPCOJOCIG", "GVUIICIUVGVCPPOOPJGVVUCVOJIXCFOCCVVJ", "VVVPVOUGINVGUCIUVVOIOUCAUNIUGOVVGIUN", "NIOIUCVGUGOXINCOVVOCOKVUCIPVIUVNCVUI", "IUVIVIGCOIINPVCNKIVGGIVGNJIUOCVUGCGI", "VUNGIONUNUCUJXUICGVPIUGCOCUNNIOVVCUV", "VGG.GUVVCCVIKCPVIUGIOUOCGIUOUXUJINIU", "OCVUICUVVPCVUOVCOUVGVIIICIIUUIVIUUKN", "OGOVJUGUVCCVCCUNIJNIUUPOJIVUVUUVUVUN", "CUCUIVNOGCGCCIOUIVGVCICACNUNOGUNCGIG", "UCIUXNCVIXVUNONCOIVONVVCUOCIVOGCIICG", "UUINIUGVCGCUXIOJJVIOGUGVCNVVGVUGKOIU"};
    vector<int> POIs = {116, 4, 103, 59, 20, 61, 273, 136, 5, 212, 175, 23, 7, 201};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "OFNJXPVGQUIKAC";
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    vector<string> cityMap = {"P.PPPP.W.LBLFP.PLOWLLBBLWFBPB.BFLPBPPP", "HL..WP..LW.WZ.PPPBFPLWWH.YP.FWWBL.LP..", "OPPLLBP.PPPOBPPPZPOPWWPL.BWWL.OZWW.PPB", "PLWJ..LPP.PPYPP.PBPPPVLZLWPPBPBVSFPWBZ", "BSFS.WWOPWLLLBB.BZBWZBPPW.PPZPBWPLWBLB", "P.W..FFFPFSPLO.OBLLSPB.JBP..PPW.WZLLP.", "BP.LPJWLPPWBGFOPWPPPBSPW.WLWLVPLPBWO.W", "VPFLPP.W.PP.B.LPZOP.LOBHOVPW..POBWPPWP", "OWSOPPP.LBLLLWLZS.BWW.FBPPPFFWPPP.PPSL", "V.PF.BPBLLLLLZPLLWP....WWB.PP.B.LBPLWF", "WPPJPLBPPPPZP.ZLWPLBWWSOWPVPLPBP.S.ZP.", ".WB..PZPPBLL.PLWLWBSLPVLBPW.WPLZW.LGPP", "WPOPPP.PBLPHWWPFWLL.ZWPBBPWWLBWPZFPLPP", "PBPW.FW.PBOPLBBPGB.ZWLLWFPPPLWVWW..WL.", ".H.P.LZLLLLWHPZL.PPPSPPWPLPPLL.OBLWWPW", "PPLPLLOB.LPPPBWSPOBWLBPPLLPBPPVZPBLLPS", "BLPPBPLGLPY..PLZBFWBPHLB.WWW.PPBWFOP.B", "WPBBPPPLBWVPBPBBWPZOLWPLPPWFBB.PPJBOBW", "VPPBPSBPSJPPWFPPJFPWOPPVLWB.PWLV.PLSPP", "LPWPLPFLPW.FPP.PLPPPSWPLPBOSFZLWWLBPYV", "BLPBPSPWWFSWPSLBJJPBV.GFL.OVOLPPPPLVPP", "BPWYPWPPO..PPWSPLWPPLPPOFPWGPLBLFBPWBL", "PO.PBPL.BBLPPPPWB.PLPL.WJB.BPF.PPPZPGW", "GLVJLB.OPPPPOOPLPPZBLBZP..WBPZPB.PBP.B", "LLVLOPBPBBPPWOWPLZPLOFW.OPWBPPLLPLBPLW", ".WFPLB.VPBBBWWLJP..BWLBPP.FW.BOSSW.P.W", "WLFLBPZL.P.PFWLPWLPZ.S.WPJ.PP.JPPBPSOB", "W.WVPP.PW.PPOWPZZP.B.P.LPWBBW.LJ.WPPPL", "WBWLPPBHJ.PZPBWOBPBVOZLJPPPOLFWPBBFPLP", "O.BWPLPPP.O.ZPPW.PBBZPPBPZPFPYVFWLPH.W", "PLL.POWBPPLWWWPLWPLWPWOBPBLPP.LWLLPWBF", "LWLBWHSLPOLL.ZPBPPLLP.LBW.L.OPLOL.PPLP", "POB..LWOLZBBPLOWFLWLPJ.P.FZLLPWOW.OLPS", "LW.B..VOWOW.SBBBPPW..B.OO.BPGF..LGG.PP", "PLBVPLZWLPPPL.B.PFLWPFLPPPP.PBPLLLPBVB"};
    vector<int> POIs = {61, 11, 50, 196, 160, 31, 10, 382, 171, 6, 18, 44, 27};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "OGFLBSHPWYJZV";
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    vector<string> cityMap = {"XNA.NXNIGXEV.A.T..I.T.VKVAQNPFEQANN.", ".C.CAAC.NNIEXEINX.XTQ.EE.AFFICATSEAC", "CQATTN..N.TCQAIACNZQ.E.ACFSA.NQTAIIT", "VNQIJETCTTCE.CXVAZJXCQ.ZNAP.V.ECKEXN", ".EC.QI.VNNQXXAFTCNRZNNX..PTVCQICKAAX", "AEKNNCSQ.CXAANFX.XXCQVNIVCF.TQAAGVAP", "K.NAZFXAA.NTJIAXEQ..A.QAATQGQT.XNCTN", "ZZT.C..NTVCA.ZT.KFVEXAX..ANQV..QTA..", "Q.NRANI.K.A.NAVEACPEP.TZJEXNAANVXAAT", "SQX.FAECENEAVVAEQ.TVGTNCTXC.TNEKJNAA", "QNTCNCZCT.Q.J...JAZXQNNJAXAVT.QAT.NT", "CFFCAN....JNS.XCTTCTPTNTNANFQ...XE.I", ".IAC.TAAQTEAC..PZCPVQTX.ENGENNTPNATN", "NFQTETFJAAAKA.K.TJIR.NA.QXNJ.CQKK..Q", "NTTJ.TI.IIN.TXNQFQNTXQZTVTX.J.TCKAXE", "TTEVEECQTAIX.XENAZAXTZ...CTT..N.Q.C.", "XACQTNA.ACFZV.VF..TAACATAFANAAQNGJJ.", "NECQA.EQ.NQFCNKTEQXTIC.Z.TTA.TFA.N.F", "TNNQNVQQ.ASTG.XZEXF.XET.IP.ACQEXFNN.", "NJXFVNAAC.XNANCZQICNXXSCTAQ.TCATEA..", "XVAPENV.C.QQACI.FNGI.QQSKNVJ.VAQCTKN", "CVVEQCT.N.KAXT.XI.ATFKFQAT.NTIFCAI.N", "IXQTAEFNZAKGAX.TK.QKV.RXA.ZTNC.TAQV.", "TXE.V..AAN.V.KQPQXR.QTNFRTA.EZ.QAAT.", "X..IQANTJCXX.A.QCQQCEFAZA.ZINZNT.NFQ", "TPTTPRQQT.V.CFNA..EVXVA.CKENKXKQAQQP", "NTV.T.KANTKTNNTFA.QNQXET..NQ.XN.QKVA", "VVQNAEAS.NCIQA.ANACQVFET..XTQZQQKRN.", "QVQPCGAEACJAJKTACICQVF.QC.AQP.XQQAA.", ".NAANVAACXCTAVQTTNVX.ANSNN.XQVJQCATQ", ".KAT.N.I.A.NG..AIX.CTTCX.VAVNNNNZN.T", "KN.QJ.XENQQTFQAF.T.XEETZSQE..NCTVAAA", "AA.QTIGACTIIVXVV.AKNN.KAEN.CATNIKQQE", "QTE.A.V..TAXNX..PZXEATNT.NAANTVNTXNC", "IAQ.NNTAVZIA.AZAT....CIGQNTQ.N.ANZJC", "V.NTE.FTITQAQ.TNTNCNANXKKT.TC.NI.AET", "AVNK.AQTKCKXC.F.FA.FENQVE.TN.Q.K.QTA", "AFXFNQKTTQ.QQQKVVCTZ.QXPT.A.EK.CTA..", "TGZ.TTANXXATNQQ.AN.VA.J.ANCNGEAT.NA.", "AJ.NKEIVFTQ.VIXXQ.EVTIC.AJ.AKQJ.J.QF", "IENNQCKEAQKSAA.NANETXQNVTFQJVATAFQCC", "KQTNE..XS.PCNNQ.XTNVE..EAQVTPCNTCKAA", "PNATEQAN.T.TNNZSNCQCPQA.RKQQAGINTNPE", "AAKI.AQT.XNI..IA.FTNXVT.XTCT.N.VACKN", ".AJKACA.JX.VJECNXPXNNAVX.XCSEANTTQPK", "XCQNATK.TCTCTACQXXQ.PAZ.FEQNQ..QQCEN"};
    vector<int> POIs = {16, 173, 33, 81, 208, 51, 100, 112, 53, 36, 9, 15, 56, 149, 77, 185, 28};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "GTJEAFXCIZRSKQVNP";
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    vector<string> cityMap = {"FTUBRYJTTLQY.LUCLCCTPFXTLTCSWSCQJTQWW", "LCFRGFGGCJGHJJ.TFCGPCFJDY.CUBBGCRCCLM", "F.HTWDCTAGLUJHRJGSGHGTIGWJRJCCTQCLITY", "RAJG.JGWCRRAGEGHLEHQEGWCTJLPFTETJJGCI", "JGIALHC.QGSCRTTGLALYWGCHTCGWGFCRRHLUY", "QITGJUWGTJCTRGTTGXRWCUJCCG.CCGCQGUI.E", "GIGHWLCTGHGLSJGCNYFTLGRQHYMMCAGEYYRTA", "BJCDJCCCGEWLMBSIMKHLGMTHACFHEYXHTHBP.", "KTXULGHHHGLQBYEQF.CHJGRICFHRBJGTLGSFC", "YTFBGH.YGUGCLMPHJIGKJTYGFLJTMG.HTLAQG", "LTCTWWQW.GJKMLCMILTQJXFCALUGJ.RGLLHJT", "TJUFFHHUEJDCTTYTCWCKCCP.CJHFY.ZUGXWTL", "EJGULSYTBMLCHJGLITHGUCEGLLWGTEYLLBTBF", "JFCHCJHRJKGLCJFGGAREMGWHC.THKJGPNRCGH", "DWTKWRGECHJLLEHEGGCCKQGMCCYUJGCGGJLTK", "AGJQFCJSGGGFRGUTCUJMGJWTCEIBGFWEWLGTG", "BQCLIUTHGUYQLMU.AHLLCPGRELCGRTJBCCCLG", "HPHTGC.GUCJCCYAJTYGTEXHRGI.HHLHBQBMUG", "WJJLQTITCHCDEHCMTQMHGJPGQAHCGCLMCHSCT", "CCGGTTCRBWYCBJHTUJCTCRHHSJGYCCNYCCKJC", "JWHHJUHTYCCRCGIQLITY.GMUJCHTUWREBTTJG", "CLTURCGGHAUWLICCAWMYMGLTFTKTQLKGKYGYG", "TJTCGGUGGYFGCJTTKIJRCLKCPCJYHYMHG.CAD", "TJTGRGGEICHGHHTLCFLWG.LHGCGWUTR.P.FAG", "JAYFGRMG.XCLTHGGTHGHFBJLQHGXJJGHTCHGW", "HTGHPTCSJJCFGMBCGECLEJGTCJHLJJCQKCRCG", "ARGYFCRFGGT.TGHUCGGGGGTHUET.CGTBCICG.", "MJTITGGCJHCQ.HTCGKGFFJSCUYJMTLGHGFCMI", "C.LGQHFHHHHJKGHHYCG.TGCTGAPTBACYGHMEG", "HGGRGTHNCCHTTW.XGHCTTCEJMQPUWMWTYQUTG", "PITWFCEMLJUYUCGKCGFBWMZGLTCGNJGGCRCGJ", "LTQWHLEMZTMHCTTFCECCXJGMGWMRFWGLTGG.E", "GK.RGTWLGEFBWGJCMCTRLGBJWRLJGPTXLLCCQ", "QCIGHPWLJTHQLWJQGURWEGXLCMGWGTCWWIWHY", "AGCMLCTQMCJHHXXKAQFGRGFEWSPWHIRQECRQW", "LGRFBFTUCPLTMGRGJQCCEG.HHGGRCLPCBHQTR", "GFCTHTTTTLGQEKTCRGIETJQJ.CCUCFGECGGEF", "LTGLJCGMETCMTCTPLLUJGGQQTHGJGTLCQRBEG", "HHTCESCHHLHQTL.CHTJFCCHHLQHGQCJG.QHR.", "STEJGHJCJIAFXCGCJHYHHQJPKJHFUJHGGFCTG", "PGDTCYHTUTULKGGCCC.CYEGGMFTFPQHGTKCGC", "JUFLGMLLEKFTLCKTCHLWGFTHGGCUFCCKLTJLH", "ETCCHIGSLGLGMHLTGFGRWRFFGGLCGCLQQAWHG"};
    vector<int> POIs = {47, 48, 3, 107, 27, 49, 54, 17, 154, 57, 234, 5, 30, 58, 25, 64, 29, 45, 128, 8, 31, 16, 110, 204};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "MUZLAEQSTRGNBWPFKYHDIXJC";
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    vector<string> cityMap = {"RVDJPRXX.NP..JCXXWNXJWAXFXXVRFCVPXFUPNFNO", "JVAVPXWQA.WXJJF.DXZXOFWNQJPRP.WXXJXNQJPXI", "UXDNHDVJXWQJAYAXIR.WWQWFJVCUIXYWPXZQVPXAX", "WVJPAJILXXIXAXXPWOAXOWAWUVJQX.AUWXNJ.XARJ", "PNXF.VOADRVUPXCYNXWAFXZWX.VPVAXY.ZOYNPVXX", "JAXNVHPODRAPALWNWJVJFJNXXIXUXYWXNZYWJIWVN", "HUW.CIWILXUNRYCIJDWJNPA.JAVYQRXXXOJJRQXPJ", "FXPNWWAIXVOJUUVYXNCJNWVUXQHVXAAIXJFFXJXJX", "WWWRYOUJRPQPWCOLOVC.RVNXJXPDPXQAVNDWWPI.N", "ZAXXNXXRAXPXXJXRVUVJVDXWUXXXAAXAWXNXWXARJ", "V.PNWJJNWNNPZQPXP.PNJIXXNVNQXUVJ.WAUXHXXF", ".J.VXJPXWX.WOPXWOXAJJWXQVVNX.UXJNPNARQJVR", "NJ.RQRXRPJXHPWHHXHVVYXNXPYRRYXPJJXJXAXXXP", "RURHVYVRXJVAXINIVXXXXOALHXPVNAJXJPAZAFWPL", "VWAHOXXYYXXJXXLUXPVJXQXXXFUNPWNJRPWHXIXXX", "NJXNXVWNVXVAHPJOFWJVZCNVFVJYWVQPQPJXJXAXU", "OJAVULFXJVXVNCXPX.OPXADXANNXXRARPWJWRCICH", "JJWWOXJXUVX.N.NVYJWUDNXZIU.XFXXVWPWPNXJXQ", "QANXXXNOPNJPPXVOPWVI.NRWOVXXXLVOPHPYXIUPA", "OVFUPWJ.WPICRX.ANJWRRIWPZXVVPXXXPOOPNU.VX", "OXLSXAHWJAJIOKXXXOXAPJHNXXWALANXXXXVVZPQX", "LJPWXDXXJXVVVWVANLSFWJWVXIYAJFWJANP.AXXQQ", "VVRJPXXXXNVYU.ARVNYXJXDW.IAIYIXXLLDJVAA.U", ".XJJXXXPSUJCAYDJJZQNQIVPXDQZJAWPRJXA.AQYP", "VQPLPJDXAVSW.XXOOL.PAIVXR.IXJDVCYNJNXXNWX", "QAVXNXPXYXVNXRVXJYQNLV.VCPXAXXJPVRUPAJCXW", "UVDS.ORVZX.V.XVLVXJIVY.XVALVXXYVYFNXXXNNN", "HVWVNXLAXPVCDWPXOA.DXXAXXCFIPWLVIHDRUAAWN", "QVLXIPNWWX.IVWYNVAYRXXUXPYXVX.PRAAXLVOX.X", "JXVQXQXWPPNNXXROXAYPJXU.VIRXIXFJOIIRPVHQX", "WXXQXJNAQPOXJPRXONPZXOWXXNWHXJ.L.XYRLJRJO", "PJ.JXXVAPLAOYAOJXLQNQZFYUPWXRQJWCIYNPRPAW", "ULXVXWPCOXRUVWVQYVOACUPZVRJAVWJYVVVJJQJXA", "QRUPXXIPXOXNLPRXVNXPRAAPFIJDRCXVXFIXXAPWJ", "VYQUPDXVXO.AYVJPJAU.NPIVDRNANRX.PUX.JVVXX", "XRLJRCLXXYJ.XUXLOJXXWIAPRAXRJINPXJFHYRALR", "PJVWQ.ILXDUKXXLJXVRJPPQVXXOXIPWYVJUXVPVVO", "A.XXP.UDIPXPXOPNQXXXIYAJUODNADPRAVPXXWXVV", "UOVJIVJPHOVAXXLXRXUPXUXLJXXXPXXIYRANAVX.X", "QIXAJJHVQWXPPXQXXAPWCVJCXPVVRWAUYJV.JPYXU", "IOQUZNXZXNXQJYRRLSVPIRARXNXXPFPZOC.JDRUXZ", "PZVOVXXYHXXQAJAX.DARXLYJRCOURCJYPRHXXXIVA", "DVPPVJQJXAPFANVXUCXNYRAYXAXCPUVZWXYHXYNFV", "HXVNAYVJXXXYXX.DVCUQAONVIOAJX.UXAXWXFVXIP", "JIQP.RYWWLXOUAJWAA.NVPXPWJXIWADVXQPXANFXX", ".ZRVXPAQJXJJXJ.ZIYLZJYOFAOWUPW.QXNUXXZSPQ", "VIJXNS.V.VACXXQJXPJVJJ.WCRAPV..WWAJUJXNUJ", "XFJPVVXDAAVAIRFLRVWJOPJPVXXCXDPLPXXAVPVAY", "FVPLYVDPOUAYXFAXLXAJFNRXX.APROAAUOJXVPYYO", "XLUIXYNLCARIPWJUAJRAVYCWWPUCAAJXJVAARJPXX"};
    vector<int> POIs = {68, 71, 8, 28, 2, 176, 119, 62, 66, 39, 166, 181, 41, 405, 29, 72, 38, 48, 111, 149, 92};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "OYSZKJWQICPVFXHUDLNAR";
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    vector<string> cityMap = {"YRHRRGBHCCTRRCTCRCRYW.BRRBHGHHYLCRYR", "HHRLCLCBGWLBWRATC.WGHRBRBGBBTRBBBLRR", "CRLTBGCCGHLHCYBTB.RTRXYCHXHGCBRRLRXR", "YRRAGRCTA.RRCBHHTTHLGR.CRLBOTCBCCGLR", "TGTWHTCRRCLCTYBRCOAXHYRRACXCLR.ROCBY", "CSRRRHYHTHHRCYYXRGRRGXHO.TYRHCHLBLCY", "CYRBTBCCBCG.CGGVGLWYBHRYGHGTGRRRCC.C", "BCRACWRLTWCTTBWCAGRHLHGCGHCBGRXOTRWA", "WHAHRBBYHWCTLBCXHOCWGHWHWCRHCTWGYBAG", "LOCBTBAROAHCHCBGTRYGBHBRCYHHYRGWBBHX", "YBHYGGYCRLCRRGRCYRTWGHRLLBYRWYGRYBYR", "BHBTRLHRCRGCHRYBYRWOWRYRYLCHBHXHGYGC", "CWCRYWCWRB.GHBRRWHHLRGRHBYBBTGLRBGCH", "RRRLTGGB.RCBXRHROHBHRHRY.XYWGGWWLBYL", "RRWYBGAYHCTLLHBBTHYXRBHGHYLWTGRHRCRR", "RXHHWGRCBLRHA.YYRRYRWLLHGLCYWYWOWHAR", "HRRGBCRLCHXHCBRTY.WGSAGCLBGR.RCRGGWC", "RRBYHGOHAYBRRHLRRCBRBWRBTBRTYRCYGBRH", "YR..HYRYWCWGBXRWYRRRHRBYRXHWRHBWBYCR", "BCRLWRRLCGBHRLBRCWLBRXYRRCGWBYAGLBHO", "RYTRGCBX.BARGHVORCLRTRRYGORHTYTRKHYL", "GWRRYLBCGTRXOCBGYRRGHCYRHWYBTBACOYBW", "RHH.VGBHY.CC.XYLBCRCRHGWBLYCHAWRHRCR", "BTBGABTBLRCB.BRRHRTCXTTHWGYBWYHHGBGH", "LYLGYHBGBBWAGBRHRYHBRY.OBLYBRX.RYBGC", "RGH.GRYLBCLYHWCCRCHRHRCROCR.R.HRBRGL", "CGRCHYHYCTRLBCCHYTTBYHWH.WGRATRRSYGQ", "RL.CRRCLCYVWBRCBCRLXGRYYOAGYCYHOGCRH", "W.XLBLRHWCHRH.HORBRHRBYTHRYRGTLCGYBL", "BOBLYC.BCGTHY.RCTCXYRLYRGWRRYCRHR.ST", "TRRXLBWRRRGGRBXBBYRCHGBRRCRYGHGCTOH.", "BARWHCYGRCKBTRLCYHYXBBRWGSCCO..RWBYW", "RGGBBC.GYBGHTHRCRWWLBTRGYLBWRRGRRWHT", "XHLTCWHCWHCGRYW.CLGGRGGLTHBWHRRGGWLC", "XGSCCBOCBRXHRCARYTR.CCRCRGRRTTRCLCRY"};
    vector<int> POIs = {76, 116, 136, 4, 6, 139, 114, 26, 1, 27, 248, 33, 2, 149, 68, 75};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "LGHVSBYOQARXKCTW";
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    vector<string> cityMap = {"PTQXV.KNXXNSKSKKPPGVN.LNJTJATKTNSGJPSN", "GSNGKVGSVKNNKTGPTKGGGNGSSKPJNXSSNTKGKG", "NJKVPPGPKNAGPWYQKGSKNSQGKVSSPNKNVSAKGP", "VPKGGGNJGSXKN.GANNAJSGJJVPNVYKSNTKSGNN", "KKQNXNGGW.QSKPS.GAKSNNPGPGNNTLKGVTPKKK", "NKGNPGNNGVTGVNPKAGQG.VTPSPKSGXNWGNJPVK", ".XNPPKSSNNSYTKNPTPJGPNGPK.VTGNKG.VPVVP", "PQPG.TQXATGANXGGVKSGGNTNGSGVGNNSPWPKSG", "NNGPKTSSVQPVQKKXNKQSGVVGTAKANNSSASPKVP", "XGGGNJTNKP.QAXAVGYNPPXNGVNVQPKSTJPPXVV", "PPVVSGVQNAXAGKVNXNPSYNJYNNASNLTPPXKVPK", "NSQGPSGGGNK.TGTSYTPNGPGNGKKNNSQPGJSSGG", "NTKKNNANVGGNPPGXNVJNNNQ.GNPKGPNSGTPLNV", "SPGPXSGKTPJSKXNQGXNXGVTNNNNASXSG.PPKSK", "PVSKXASJSPPGNKGLJP.AYTXVYVN.KQG.N.TSGG", "XPTIVNSNNPVS.TPGSG.AGPSPNSKNSNSVNGSJKG", "PNKTGSNGGPKTNVQNANPGAXVKPNAATPNNSPGNSG", "GGNNPYXKKKNGAGPNNNPPNSXGNGX.KVKAQTKSPK", "SVLNANNG.GNGNANGTKPKXVGN.GKKXKQGKSGNPP", "GGNASNNGPPWXPPVTPTYX.NNYAQT.N.NJPKPKGJ", "VVPGSGTGTKGKKNLQXVNKKNGTQNKNNGAVQJSWVG", "SPNVPPXNTANNXTVP.PPTAXKSKKTGSNJGJKANPK", "GKSVVTXYGJNGQSGGJGNK.KAKNSKPQKVTSSNNAP", "VPKNNN.SPQNAKPXGPXGPSJLSXPNTVNGSSNGGGG", "WXPVNPXPKVYGLS.TNJKNK.PNKKKKKAPXGGPQGG", "LGKGKPTPALVPGGG.TPGPGGSXPNPYGX.AJKNXGX", "PKXYS.NTNVNNKNNPTSQXPYNSKSPNTNGPPKV.GK", "JTVNVTWVG.XKGAPGSPGNNSNJVNGNNKNNNGANPN", "KNNNPNKGTKTPJPNK.XYGNGGPNKSTGPNSSAPNIS", "AA.PPK.YYXNTSKNXVPPQSAG.VNQNJVSVNXSAAQ", "JKTT.PSPSSGPVXQXXTNVP.S.SV.GSPVVNGTPST", "NGNPSGSNNGNXKPPKPGVVQKXQKGPJPSPSNNK.SS", "TPNSPP.TVTSWAGNJSNPX.TPXJVKJPGSVPSTNKG", "GPVVNNG.PNNGGXNPTXKNTGYPPSGGYNYJSAGSKX", "NGN.PGGVNPGVNNAS.TVPNGTJKQPGPATNVTLSPG", "SSGNNPVKPSVGGQNPKNGKXPJGPKPPGYKPVTGGYS", "PIQXSNSKTKAGXQXSG.TSPX.KA.PAPNPQAAPNPY", "PVPKNGKNASVYNXKXVKGTNYKKTVNPNVKAPGSAXJ", "TSPYNNPYK.WAGVTAVKKKNKGPNPLKTKTNTN.XG.", "NGJGKKLNPPKPSN.KPNPKVJXPNJVJNKSPPPKNPW", "GGNTSXSKNGNGSGWNKYNXGKPPS.GT.NNKKVVPTN", "QPSKQNKGTVTGGPSKP.SSAPJNNNTGNGGPSNTXNP", "VPTKNG.PX.NGKLGSGASTPPPNKAGVGXKJPNTPXS", "W.TNNNGGKNNTNNSNGSXPVASNPPNPQTAPGP.JYV", "GNXTGG.VNQQXXXSGQP.TGNPXNY.SNSPGSTKPAG", ".KNGVN.SNTLVAAGWAGTJKNNTGK.NKKXNNNTSXS", "YGSLGXAVVPSPXGLN.NKGSGGYGGNATQWJPXPNWQ", "KPQPNGJS.JGPKPVSNNNSNAPNVGNNKNSSPSJNGG", "JJASSNKKVSLGSTQ.SXKTGGSPX.NNJGTKGGPGPT"};
    vector<int> POIs = {58, 3, 178, 35, 115, 96, 196, 77, 310, 267, 246, 120, 52, 19, 16};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "JISYTXKANGPVQLW";
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    vector<string> cityMap = {".YZWBWSZAFBABMYABLWZZWZCFAPSQBYCCGZAPSGP", "ZAMSPPSPWGPFZFXSGGLMBSFMLPLQGBRAPPBAPWZG", "SBRSMFZFXFMMMJALMPSFOBASALDMAMBMABWMWYZP", "QRWSYDZMPZPLMWPWAWSALQAMBFLM.APL.AWZWZFM", "MSBMBSYSZBOXPACWSJWPFPBMWWSQFSPMWZYMMSDW", "GSAFYBZMPBSMPBSAGAYCZWARMBMMWMMSQSBSLSCG", "SGYACBMQAOMMYCSAMPLAG.PAMAGRZGBQQSABSOBW", "RWBWPYAGBPMWRPYMYZFMMCCCGMRRBPOWPGZGQPRB", "MRBRSMSSSPPWQWBZWZABBPDGWMPMFYLSBARPYCSA", "MBSPWGMSRWSASPAM.GSPOSAAZPLMDMMMWPLMBBBG", "MZLSGYMMQZBWGWAAGWGZAMAWSAAPAPRBSSYYBWMA", "LGAMACBBMSSWMZQXDWRBAGSOSSSZQPSBBCAAGGAY", "PSPQBMWAABSFSZQQWBQSWMZXSABMBYSFBSWBQPQR", "BPFYMAMBAWFSCZPSBMPBQSYZAYOSASOMPAAJBLAW", "RMPPPWQZSAASWWCZPLSWBPMMMSASFPAAWGYBMOQL", "MMYLMBWMBSDOOQYCAPSAASZRSGPBFRLBSYXFWPBR", "ZWWCZS.FWCGBFZZYCSGAB.ZOBWAAFGAWLMQARCMA", "PXSPAYAPBALRXSWSYRGSMSMLGALZASGPGBFZMGWP", "AWD.RYAFFGGOSZYSPPWFQBAAGWLSQMZG.GQRSMMQ", "WBAMLWSAYMAGQZMZMWBMGOABRBZAYGBWJADQWSYA", "QWBABJGPSLLBYOBMBSWSFGTBBSMZMBFFPOAABBMS", "RBMGBAACWAWYAPWFZSSARMRBPQAASLMSAFMPSWWW", "ZFBWPACABPQMMZSSZAMAMOPPMSGZGWQMCPAAASRZ", "QCQMFZWBWR.MAWSFGAASSPABGMBRAWGSBFWAMMAZ", "AAZASASWABMAMX.PQAFWSYBBORLSAAYXABWYGZSS", "GBASSMAAPSYAPPBSWMRBPBWBSPBAGOSSRSAAAPCW", "WBPLQMR.WAYPALCYSYGRABBSQOMAWMSBBSPQOAYZ", "MLZOSBMBCBABZLSWBMMYGZSMPMMWWFSZMQZSBMMA", "WZYAQGLLMSGBWWLSGWGAXWPGZA.MGYMMYCWMMMMB", "AASGGZBCSZSMBGGRFBALPLGAWAPGLSMPFPSLSASP", "BZZPWRMFBBPSZGMMLOWCRCAABSPALSSWBBBAWALS", "SAAAPBZMWCGAZMYBSLGGBAYPBMQLSBABGAMAFQSW", "BWSALYZBPTMPSYMAFPRPZBWOMMGPBRADABRGFWAZ"};
    vector<int> POIs = {80, 140, 33, 78, 2, 47, 25, 105, 151, 10, 54, 45, 49, 169, 44, 112, 5, 11, 147};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "GBCZTFOPSDYQLARWJXM";
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    vector<string> cityMap = {"KXZXLVUVJJLVIF..LU.XXXUVMLZAV.X", "XKS.AIIKIVFSUVIIJLKJKLMUHL.LIXX", "IXLXIAXA.XSIX.IZMJULXLURLUXX.VI", "LLRXXII.ZXLLMXVXUURVLJIKURLIK.L", "IXADR.LILLIXZLLZLUKRGAXXLRVTVIM", "U.RX..LH.HXVEIEXF.V.LEIJFIX.Z.X", "XIIZLXU.LHLJLV.LXTHZGLXIXX.USXI", "XRUSXL.XHKLDLZ.RXX.ZV.XAZXAH.DF", "ZLRKIZLZRX.FKUGU.LLMMXRKDUXX.MM", "AIZ.XKXZHVUIVXXIXKALXF.IAHXAZXX", "XKVUTGVX.LFAIZGURTUHIXLVMZDXLU.", "U.L.IZZRXLIL..LZXGKIL.UKR.LTSVS", "VZZ.LGTVMILIVXLKLLISXSXL.TGSLIV", "UZHXILVUKIKLIUKKAXLMI.ZJLKL.VFU", "LSLGIUGI.XXXKDXVKKXLXTKIU.IMULI", "XUZXULZXZXVILEXZXXIKJLFIKIV.UZL", "LXMH.L.XGJXKFRXSXXK.FIX..URXAXL", "LXIXLKLIJI.IEULFZX...LLXG.UXX.R", "XIXXUMXAK.VLLSFXS.LIZV.XIXKUZJI", "XKVLIMXXXIGXIGUKLUSLSIXKSLHS...", "IGX.HLLHJXXSRLMXZMAZHZULIXXXLIX", "ZLHXUXIXI.IVIIZHMLLLZ.ZMLKIJGRZ", "UAFLXIXXXIAKHUIXL.ZXXVA.LXKL.R.", "KXALXI.LXF.XH.IA.Z.X.L.JVL.LVXL", "LALGGRIGXIJUZAIZJLLZI.GIKU.AUUZ", "IXIMXLTK.XKXUXIXMIXLIIIZVUXHXKK", "IXULSXUXZLGVUXIUXMLKHLKLXHAUGUX", "KVMAUGLLFUILGIIZXVGZLX.JXX.XVGV", "VLULFXXLLIVVFXSU.ZTIIIMLIGXASIZ", "UXLXUZL..ZZXHTX..X.TZXXZXXZGIE.", "XIZVVUEXXS.XXKGAH.LSLXK.HLLXLKM", "T.LZK.XXJIZL.LGGZAIFTXVXALTLLLX", "AIRRLAUFKXIVLHFZILIHKLIX.MXHZT.", "L.ZZUEX.SLAGHLLLIIIIHXLLTRILIZX", "..LDZUAKEDKUILXLGVTZHLJILL.XSUS", "KXLXL.FXSUI.XI.X.IIH.ILTIXHKSVF", "LKIZZASLXLL.LVLFXXUAX.ATILXZULX"};
    vector<int> POIs = {129, 8, 27, 26, 75, 34, 30, 170, 74, 9, 54, 21, 60, 33, 202, 25, 38, 20};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "IDMRZHSLUEVJKGXFAT";
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    vector<string> cityMap = {"MNNWHNUH.GNUNUPFWNNENSQEHNKZPHKHERWEUQKEHM", "PPNQHQKR.WHHW.QPWKANRUWBEEB.NTZHQTNU.BBBMN", "HQ.NVNUHPWBG.KMHMPHHNNBWWZUU.HBNQQKENKWGNE", "HUHRZWQHZHNHHNEZNSHKMZNKHKBNKNQKSUNDNNEKTH", "NKHWPKNGENUQAR.NHHVQUPKEEUEP.ZBQNGHBMNWERH", "QBRNKQWZMHMHUMW.BZEKNQ.N.MEHHBMTVWHTP.N.QH", "ETQPKHBHWHSH.N.PEEKEHH.HHHEB.HKBHQPHHHZB..", "NHSPHB.BK..HEDEQHVNEMPAHSZMNHEKHHPPDWQKPWL", "ZEQNFZTQQRZENHBPHHHWPKHKHHPPFHWWPKKNH.ZHHQ", "EDU.MTHUWQRHH.PWHWNDMHKGPHKZMFZMRPS.KPK.DZ", "NF.EWENP.MWNGMNEHWEKKFTF.HHUG.GMUENQHZQ.HP", "BHPBWEHQUBPDPWUPWSSMLZHPN.EHQQNGPPH.KZQEWZ", "WWHZZKPKWHZ..NNUWWZHWMKMPWUWBHWMH.HSNPNP.Q", "THHBSGDHHBBMGKUEDZNHUKHPNQTHHPFKNSMQWWQBUQ", "HEGAQHBHHAWNH.ZWWBPNMHKDTPQEDTWQNKESPK.WHF", "NBKZHHBZHQNHDHPPHHHHHNHHHEHHHQV.QEUSHZSWUV", "EHPHHHTN..HNUTZWEGHUQUQZPMUNNPMPTHSTK.QPHP", "EHWNBUKUEBQBTWW.HK.QPHUEQHH.HHHH.REHENHRGP", "HHQHKUEDNHWZHQ.KUHHPNZFKHUNPMBLBPUGU.DQHFW", "MKNHBENDLWPTKHB.ZSZWHHGHHHBMPHZUWWKHHWHENG", "NNGKUNHHBGWBPDHNUNSTWQUHZBNBHHBPSHDMDNU.DW", "EHHMHQWKBHPN.ZTLBKHHW.EFRPUMUQPMUKAQZUNHBB", "WHH.HHMHQH.WPPEDFNKQDZQ.ZUWFHBMKUZZ.PWKQFQ", "KWHHHT.QGZHHN.HPQUN.ZESHSEWHHP..KQUPGBWHHH", "MHQZVWHHMMWMTTKPEPGHUNGPHUNEHQNKHH.HTEANKK", "HKHGWSNSUPHRHHUHUUDMUK.ENUMKWKHMKZENKNWNM.", "ZMVUWAZGNKSHPHHHFNH.NWZZEZDHHHKUEBWNEPTBMT", "M.KPWSAKHHHH.SDHQHSKQWS.ZHSNHNWEUUPHPGWQNN", "PVBKPQ.PKHQVS.PNUBEBHHSEWHUWSEMPSGQHPVPBHN", "MKUPFZHVUEGKHMHHZHNH.KHWZKUHPMPKHN.PEPNNEG"};
    vector<int> POIs = {12, 243, 24, 74, 86, 88, 58, 9, 54, 73, 30, 17, 115, 27, 33, 59, 93, 5, 14, 70};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "VHDEKWBAMQGFNTSZPLRU";
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    vector<string> cityMap = {".NBUSUHN.UBUXHUHHHX.SUGNNBXSH.", "UHGUH.N.NNSH.XGXHHHGBXNNNHX...", ".X..BVIB.NNBNNNGNHNS.NNX...ENN", "HNGEGXV..NN..HBNNUHH.HX.SXSGBX", "H.B.BXBGHUUXHXNNGH.NGHUHSNBV.N", "G.H.G..NX.HBN.HSXX.HUXB.BNHUG.", "N.UUNUEXSXBU.GUGGUH.HS.BIN.NSU", "HSBGXXH.XBSNHXH.HBHXNEBUHEUHG.", "SXBX.HUNHNNHNUHHN.SHHNUUSU.NXX", "BUBHUG.HNNGNEUXBUS.HGNXHH.XGNN", "SGH.EX..X.X.X.UB..NH..HXUUHHNH", "SNSNXHXXGNB..G.HU..B..HINXUSBN", "NU.XUGU.GHX.GHGHGXUXNHNHNGHGUN", "NHG.HNN.X.XHBB.XGSHGBGXUN.NUB.", "HXSG.XNHBNHHGBUNHNX...NSB.UHHH", "B.INXGHXGS.HUHHHU.X.GU.NNUHBXH", ".NUSHNHHUXXNH.GGBHHXHU.XNNNN.U", "NUG.HNUHHGNGGHNUNN.GH.B.NEBBXH", "BX.UHX.NUXNBNBUXXHHNNXGN...UNG", "NXGBNHNNSXN.NUNNBGSNXHBGXH.HBB", "GXN.HHHE.GBBGBH.HHNNG.NXB.BSGB", ".NNHNXSU.NSHEHVHBHXNNNHU.NBBUG", ".BNGGXHGXHUNSB.NBNBUBNUGNUINHS", "GHN.NHUNNXGNXBV.UNNH.SBGUBNG.H", "N.NGNXUHGNHU.HBU.NNNBXNGBBBVGU", "NN.BBNXHNVNXGXHG.GXN.XNBHBUB.N", "...NXSSNBNNXUUXG..HSXGXHUHHX.U", "..XNGXUHBBN.XXNNNXBNGX.BNNXN.N", "HU.UHGXNNNXNSXXHHHSXNH.XBNUNN.", "NGXSSXSH.NNNHUBN..G.NNBN.NUXUU", "GSH.HGXU.BGNBUHXH.HXHBXG.B.HH.", "BUSHXXNXUNNNXGNS.X.HNH.H.UBBUU", "BGUHGGBUNHHUHHNUNUNNHHVSGBHHNH", "XBX.NXNUNS..NGH..GHNNGNX.N..NS", "G.UNUNBS.BHHX.HSN.NSU.BBUNNB.N", "BN..NBNBN.UNNN.G.XNNHHUH.HBBBN", "HBG.H..GUGNX.X...HSHXNNHGXS.NS", "GXBHBVBX.X.HXNXUS.N.GUUNG.SNB."};
    vector<int> POIs = {9, 134, 112, 5, 113, 103, 57, 182, 10, 229};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "VXUIBGSHEN";
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    vector<string> cityMap = {"MHIQCILTMOTIMPWMMPVTSMMOLWCGMMHSI", "PMQMJLOSWMIMIHMMCMSCPOLLCMIISJOSM", "SWLYPMCCLOPIM.HQIMSLOOOQMICTITMOT", "OMLMTQMHSTCMQOMQMSLMMIICCM.QMQMSM", "CSOIMMTII.PSMCLSMQWMSPTHPVQHIIHUS", "MOSCMTC.QMMSSI.QMSIWPHSTP.C..MMQO", "UM.MWQMUMOIMICHQYVSPCLCSCMIHPMMML", "SJSCQVMCWOMIMLHSMTCOMJSCMMQMMQSMO", "LUWSGSMMMMOCMICMPCPIJTSMSCMCCPHDQ", "SOMSVJJICMMMHMJPMJSGLMCCSOIPSMSMP", ".J.MSCMQIMTGCMMTPCMLMCMCHILMSCUMO", "ISOMHWCVMMMCPMI.SSMMMMLPM.PCLPOMM", "HICOOQPCLJWMMWLMVIMMOSMSRMCMWCCIC", "CPSMMQMJOCMJSCVCUMJJMMOJOSPCMCJLI", "OMQCOMMPHMMLQIVSWYMHIIPMCMMMCMCCS", "HPDMOTSHQ..TIIOIMMHCIIVCC.WMIQMSQ", "MITLMISOMMSIMM.MMICILMMMTOLHCMMCM", "PI.CPCIMMPIIOJSMSIMMUUIJMMIPMCCYC", "CTMMCLOQSMQVMITLMTHWQV.LSSMCHOLLS", "HMCCOLPQMMOMPMPQTSHCMPPOTMHS.LIUM", "SVICCMCSMOOMHMCMMHS.MC.OMLHCMSM.I", "GPMLMMJLCLSQMHPMMJLCMJIVSCM.HSQ.C", "MHMQMIHTOMOILQMQMMOPMMCMLQLMIMJIG", "MMMOMCJQTTJMOWSMIMPJMHHHOMOSCIOMM", "SOGSSQQQMMCCCSMHHOICTCMSMPMCMCPMC", "SOGOOCIQMMGMMOIJPMCICMWCVWTMGPOMC", "CTSHSIHOSJ..OJIQMULMPCCCWHCSMQCOW", "TCMMMSMLMMGM.MSMMMC.MOQMOCOOMOQCC", "MGQLOLSOJQWOMJMMPIISQ.SMTMSM.UQTI", "LTM.MDJMMMSMMMMILMMSOMCHQMMCMMPTM", "MHMJMMQQGMQCGHMMWMLI.OCPCTCMLSCMS", "MMHCQOOCCMOTMLS..YCJMMMIIIQOMMCMM", "MVCCMCMMLPDWMLO.CCMVMICSQCMOTVOOS", "IOSOMCLMOJSOSOMLOLHHWLCJICYMJSMMS", "MTMIGSO.THIT.MMMSCPCLMSCSHMICUMPP", "MSL.LPMMMJIPMHCSQMYLCMISPVMMLCMYI", "MJHPCOQCPTCMMMMVMSLPMLULMHOVMMMMI", "OOSJMMCLMICOCIC.ISMDIOQMCMMMHHMMM", "WPQQSLMILOISIGCPMSMMOSOMLHCCMMMI.", "PLCMIOSMLPIOMJW.MRMMHTPLMMCJMMCOM", "CCSSQ.SMCSMMCQMMLHOMOMWLSULWPOCCI", "VRL.OSCMCIPJQLRMHMMCMICOTPLMMICHP", "MHMUOMIHCWCLMPOOMUOJOIOQOM.JC.MCO", "CIMJCISIMWMSMMSCUMWCMJOCICVMCI..M", "MPLMIL.MCIMM.CMHMCIOJSCMMCOMCMCIM"};
    vector<int> POIs = {32, 4, 8, 48, 81, 17, 23, 64, 408, 117, 185, 16, 5, 68, 72, 124, 45, 118};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "WRYJLUVHMOCGDQPSTI";
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    vector<string> cityMap = {"ZGZCBE.ACEGUBYEGSGBBGUDEGSBSUQGCTRRSD", "SKVPEEHOSBENU..CGS.BKRCGCBGSS.CRGEGSR", "SBCEECHBBCCYCBUBYGQEKGBVBYRCSBCCBBUSC", "ARBSCUUUBUSE.BRC.EBEPEBBGGBBCCREDUECC", "E.EHYCG.TEEUGRCBPCGRYUVYSQCBBDUQBE.YB", "BECPCEBCDRZQRQEYBGEEEBG.KHSGKNJHUGCYP", "CGDGPCCT.YJGENEETERBUQGCCGCCVGGEDCUGY", "HUUBRPCYNSUHEPGQCSSCJHNGGKBEZDGEBPEUB", "BBGBECDCNCCEBUQQGHEBBBRB.DB.HUKHBUQE.", "BGGECNEUUBQSCUCCGQBQS.NGRCQBRESBYRSDS", "QEYRYTBGYRQSSGBGGERHBUBCGRBDTDUCCYGU.", "GQHBGCSGRYECB.UCUSBYGYSBECGNBCQBGUURC", "RGBCHEDCYCBBGVBESCHEUGCTTSBVEUU.BBDDU", "BN.SJBRNGGV.UQESGCCBSBHQ.BDGGSBCPHCYC", "UDEJSTR.SUCP.CE.CHSE..URDPDURSUEEQDPY", "UCYQBBCGJBGSKDQU.UHRCBR.TEKBBCEUDCGDD", ".ECCBUSDCDSBGQBDEDGUECDUEBHNSJ.U.KCVN", "BYBSBGBBCE.RUBUASSCBESBBGQUGBDGG.PCSB", "UCUCCEUERUHUUCYQSSRQURHPPCGEECCRCBRGC", "YHD.BGBQBBEP.GEUYD.BJKQSCNBBCCUCRSGCB", "GDTISC.CUBUGBECGDHUPRBBBZPCEBCUONHYGB", "HVDUDBYYUBYCNGSQBQSCBQ.PEQBEQHUGHEHBG", ".GCBGPECCBBTUEBCJSBBNBG.BEYHPDCP.UEGC", "PSUSECBBCSCDCBBBBESB.OQACHSCSUYRCEQTY", "DHDBSBBEARYUSNGG.RQGBGSCBSBBYECQGBYQB", "YUGQHIC.UNCSDC.EPZCKNDESSSBVEUBBCSUGR", "YTRKHPYGAESBGCHOBCEG.GNECYCEUBBO.B.BG", "UBOUCUVCCVE.DCBUUTC.ENDCSYSCK.BCPDGEB", "DESQ.RCCUBRBCBSBPCEDBBCRDYBUTGG.SUESG", "GQUCJGBCRDHSCESUYVEBGGBYQUEGBOYEUUQNB", ".BCESGBGPQ.UHCNQJDBCHQDSTEDCVCUYT.JPE", "UQSE.CBBDUDSDCCQSYCC.CEUUTGDCZUQUR.EC", "HNC.UEGUES.BIBUSQQBOUEHOCSYYJG.QGDRCU", "QEDYPQDCBNBRCY.GBUBSCCBUBGHEUCCCGKUCS"};
    vector<int> POIs = {19, 7, 3, 117, 14, 41, 13, 15, 114, 170, 185, 52, 56, 9, 111, 91, 31, 26, 60, 54, 6};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "TZIGVHJKECBRQOUSPNDYA";
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    vector<string> cityMap = {"KRXPWKKXKAKKKKXTXTPRATIKRXXZ.XJKKK.IKXKXX.JR", "XIRPVXIVXXXA.PKXKKJXVVKTKKTKR.RVKKRHKTKKAA.K", "KRXTKXKKXKKT.VTKRKXVTXPKPKAIXKIKIJRTXRKVXK..", "JKKKKXTKVKKKKKXVKXKXKKXXKKMKKKKXPI.IKKIXFAPV", "KKXXKRXRKZ.XTW.XKKXXK.XXKXKRK.KXKKVRKRXTKKKT", "RRARKRKII.XPVKKK.KJKVVXTVKKVRKKXZKXMZKXXKKRV", "KJKXZT.XTKR.KKPKIKAXKAIKKXPKJXKTPKKKKKMPKTJK", "ZXJ.XZKVJKV.KKARXXRKPIZKKXVKRIKP.XXXTVXWIMKK", "KVRPIIXXXPRKKIXIIRKXKZKAKKKKXXK.PTKKKJXXK.KM", "KKXRKRP.KX.T.VXKK.KJXKKRKPKKRATKKXKPIJKJVKAK", ".XKRTXKTXVMXIJRIPPJAITVKXXKK.XKRA.JRKIVVIXKX", "RAVTIZAXAWTKRXVPTTKKK.KRVKTXJJPTXIRJKKXRXKI.", "VJXJKA.TKXIVKRXFJJRKXPXRKRRRXRXRK.XTKJXKKJTX", "KKKKXVTIKTRVKJXXXTKKXKIK.PKPVIXKKXKKI.K.KKKX", "XVK.TRRXKKIIKTJATK.VIKIXPRXKVRKKKXPKXXTXRXIK", "KHAKRKWXKKRXTXKRRXKXJWFKXXKKIRJTIXXKPKKXPKVV", "XVKJXKVJXKRKZPITXKKXKV.XRPIZP.RPKXKXPXRKPXTX", "KPRKXRTIITTKKKJKKFKKIXXXJKKXXKXKTPKRZ.XKAPAX", "..KTXKXTZXPVKPKXKXKRIXJVXXKKIJXKXKXIKKIXX.KZ", "IKZKXKVKIKIIKATKRTXK.TVTIIIK.PI..KRJHXZKTJKP", "RK.KPRKRXKKJKAKXRTIKXKPJKAXJK.KXRKKKXXJTJKXX", "TMKVKXAAKKKKXPPVXRRXKRKXKXFP.KPXPXKRTXJV.KKT", "KVXRZAXKK.IXAMRKIXKAXKKXRJ.PKAKKKVXPZRRKPTKX", "KKPVVKKXKRKXKIK.IKPJMKKIAMKKKXXRT.XKJXITKKKI", "KKKXTKKKXJKT.TI.KKXKXPJVTKKRKZKPVKHKKXXKXXXX", "KRXKZZIKVXKPK.XRPIT.ITVRX.XXJKKRXPKKKRK.XXXA", "XPPAPXPIKKKV.VITJRKKIXRKAJIPKKRAIKKVTXIITRXV", "ARKRM.XKJKKRRKKAIKAXXXP.KKKKMKVTPXVFJJKR.RJT", "KXXX.KRKXKTX.X.KTXPKKKAXPJXJIKPIJXXRXJKTIJXZ", "RKK.KXRPKJKAPXARFPKXKRRFAJK.XXFXXZXKTVTTKXKK", "KKKPKTXKXPAKKTKKKXXRKXKKI.JRPKKIRKKVTKKVXAKX", "KKZPKTKKRRXVKVXKTTJMVPXJRKITKKPIKPTXKTAPKRTV", "TVXKP.JV.V.KIXX.PKPTKVRIKVKTKKXTIXK.PRWJXXZV", "TAITXKTPXJ.IXRTXXKXKKRK.RKJKIPPXXKPTXKRKKKXX", "FKKKWKKKKXKAXKJKAPKXJKKTXRTRXKKXTTKTXKWXMIKK", "KKTTKRXKVX.ZTXKKRRAKPMRTKKRXVKIKKKKPKKXTKWXF", "RKXJAVXIKX.JXTPPRRPKKKKRPKXKKKXXXZKKJVJKIPAK", "KTKIIXARKXP.K.VXRXPKKKKA.VXVKXXITXRPRMKKXIRR", "KXKIKXAPTFKPXK..TK..XKARZ.AKTKPRKKPX.RAIXXTR", "RKRXXXKKKXKVKKRKKPXRKKPPRXPKX..XXTXRTKKPPPRJ", "IIKRXZVTTKITVXKPPM.KKKRKA.ZXIAPIX.KKTRJXKKRP", "TXPTKPIKIKVKJKZRRKIZXJTRKAKKKXXVKKKKXIKAPKKI", "PXITT.ZTRTKKXRVKPKRXAKAKKKRKJZ.PKP.XRVXVVKK.", "IPWAKKFIRHKKKTKKPKKKVXJXKTXVARKXTJTXXRXZXKKR"};
    vector<int> POIs = {168, 608, 126, 351, 11, 17, 5, 84, 116, 13, 68, 136, 97, 36};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "RKPXWMHJIFATVZ";
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    vector<string> cityMap = {"HYYDGV.G.VIVSYZ.GXGMVYVYVYMVZHD.HYEVYEYGV", "GPXGZGQGXSXHZGGPVVVQXYDGYYPHY.VYWPVIVQXPV", ".ZYXQDPVM.YSZV.YMVVXGQHV.ZXVVQZYPYX.DEP..", "VGGYGYIVDQD.XGYVQYPM.YVYYQIXVYXGVGEVYPV.X", "Q.YZXYQGGXE.V.GESPYGZ.PDPGSZGDPQVYGQ.PXS.", "QVZ.GVXSYVQZV.PYPGGYYXY.VV.PQZGV.IIHZZPMS", "PPQGVHHEZGV.PHIQYVYPVQY..VP.Y.XHGEYVGVEHI", "VMWW.SYM.Y.YYGXQY.YPIYQYDXEY.GY.QYMMGXE.Q", "QYEVVX.DMXV.YEVDVGVQYHVYGMQYPZEYQVSYYVXMV", "MYXVPXVPZZY.GTGVSVVP.XVITVQV..GZYG.DYYGXP", "QXPHVYGYXXHVQDXVMYZYY.QVYSMZQV.VVQYYMXGXY", "GYSGDYHQ.HZGMVP..PVMYEZ.IV..XDSVMXEQMXXXY", "V.PDHP.G.YYWYPZ..DQVPGP.DY.EE.PPGZDQZVDPD", "YVQMQYQXYS.SGGZPD..Z.GV.YVQXPMGPXXVYGDPQV", "PVVYYMY.QGXGGGQYGV.IVVHQGYVGXVZDQ.MMEHXI.", "...TDIVVYMHYYSYVVGXHVXSDX.YGYQGZMMZQGMIVZ", "YVGVIMYIGDSG.GPYXVYQZMGZYPXMY.PQPPXYVDIPQ", "VYZGSMYG.VEXQQVIZXYWYE.QXYP.YXXPY.VHPXEXG", "PMYIMYVXPMDVXYVPDXXEVMD.XXYSPGX..VX.X.IQP", "YV.PS.P.GEXXGYDVYV.YSYIVXM..EIPGVGGXGPYVM", "SMGDHIHYYPYX..GGY.ZVYPYV.VPMVVGYYQVEXEEQG", "DXPPZ.V.VGSXYM.IMY.GDQXZHX..YVTZPPVD...GG", "VDYVXQXYYVVYZVQXYZMXYVYVYXVGQVVDVQDYVH.XT", "E.V.GHQM.Y..H.YXVQQP.YQ.XZG.Q.ZYXPSYP.VXG", "YSESPGPEHGXSXPVGYYSVX.IIYPXVGQVQXWGGVQYSM", "..VH.Q.ZVVEPPHPPVGPYEYVXGQYY.GYGX.ZPEVYVV", "ZIYPYQDXMY.SPHVVMVYPVVVPPXYPPXYSV.PPV.ZYX", "DZGEYXHYPYVGPVVPQ.DPVXSQDXVYXGGXVVDXHYPYV", "QPYVXYVV.XPYVXIPVMSYIYPDMPVQXMEVMQ.QMQVZH", "VDZQVGYYMHZYZPS.QPXVDIVXGY.YV.VMPGMMQGV..", ".VPVVTPYW.QSYGHXY.PPIYVYMXXVMYGPQGVPXYZZG", "YQZVPVQHMMYX..D.GXH.EQ.HQM.YYXQEZYXDHXVPG", "YYVXGMYGYED.ZWYXPSEYXIYPYV.MGMY.ZXXPPXQHG", "VPV.VQMSQSZ.ZPDWV..SYVSTQDYESQYISEQVGYMQY", "PVVYVPXPXQGQXP.GQXIQYYYVSY.YZHYVEDXEHQZEG", "EYHVPEEXYMQEG..IPYDZPVGVIQVPVPGYYXDGZZVIY", "YQQYZYHGVYZGTVX.YVQXZQMXXYVMVGSYVZQGQHVVV", "PZIYPVEEH.SSSVXZYY.PYXPPYPVYMEDMMYYPYHYGV", "PMPPXVVYPMZXS.VPVYZHYYPVQD.YGM.VVM.IYIMVY"};
    vector<int> POIs = {245, 52, 50, 41, 235, 51, 143, 142, 111, 79, 9, 58, 8, 138, 76};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "YESIVHXPQMWDTGZ";
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    vector<string> cityMap = {"VCZYXPPDDPPKQGDFXDTPSPADVSWXUXUDAPUDPAFFVSCQSIA", "VZFZPVDFPPFXJXGWGBAOSFPGDFUNZBGPHXYPSPDIQDGQPGP", "QVSISWDFNCPQPDOPASFSCUXGDGKOFQCPPGUSSSPQXCCCGDG", "WWUWAFCYPVAACPRFYAWGRPFDPVM.UVFSPPCUCOQFFQDFCCP", "WUXPUNWPDPWCUQFQQQWFIYRPVPFHQDWCDYXPKAKFUGRYPFS", "GYASCOFSSWPFPFWVNDVUQAUXHYKHAPADQCPQQPASVNPPDVZ", "SWWQCGDTPQFAPLARDFCGUPXTCPAPQAMIVPACVNTCRDARFQA", "ZDFAOSPCXPCNPUOPFPPUACNXAFPUADAAZDPZAVZVVSUZDPL", "PUAPQDDQOXVUFPYUPPCYDNCPQUQFFWAWSDPGAQPCFDSSRZW", "OXWSPSKVPAOQDQPWPSAIPCFMMSGPVMWOAWRDQAPOSFAPBUA", "QP.NFWFP.YGOAFDPPDAZDPYQDQUAFSPPDAZXDPF.PQFCAZQ", "DPXOPDCZUAOSSXPNPCPPKQVWPFPAPCDDOVZNWCQKPQDOUPQ", "VDDFSPWDWDMPXDAAPSPPQKCFPPPDAPWSPVPVUPXDSTVZAQJ", "RQPFFYPPHFSZCZDOPQPQUTBBDPNVAGQFCGDCPQSDPJQQSPG", "MDPXTPQGSQRMPFSVPFPQIADPVDCANGQZPFFUHCQDVPSPXPW", "KSUSVPDAAQYGAPZAAXDCACPQFVAPWFKASCPIPIQQCFIACCW", "CSAFFPXDAFWPCAYCPSPRQVPPVCPVHTQWFADFDGFQBDWHHCP", "FQZFASPWAWWCWWWPAWH.CCQPPSFFADXQZTPRFFPZPOCVHDG", "GTPFPDVS.PHPDQWDFWPRQKZWPDPPSSPPSVDGQKXPPFVTQAP", "CQZQDDQYPROXFKVGWFZJXCFPACZQUARPQFDPDDPQXFFIPUC", "FRDFVAPWDTWNCAFPAXWCAQVGNCCHAPJOCPDMATYPCVPAQPA", "HAPAPQCDSCDSCPQPVZADUWVCPQCTDVKKPPVCPQCSAWHFWDF", "NNKUAPPFFRPAAAFQPWPACTXPIUVODPSPFQPTCPAKAFPPADV", "VPNQRPDPPCPQDQQADPAUXCADFQPVSCQQNPFNPPFVUXAUPDW", "FCCAOFVPGUCDWHAVDVPFCQWCPDZUUCAFQHZOFXPHUFDPAAP", "PYPQKHVKPVFVPCUHCPQWCFWAXNPAAPPPWPVXUPCAFPFSDFU", "XFFXGCRQQSWFUPCSWDNAWUZPCDDQKWVFPDYUSKQFDCDDPVC", "AFZCDAACUKFWCVPAUDWVTPAVPSCFSKAQCURWPQDGARPBYUD", "AYFVCDSJKWSFUVRAZVDCDFAUPWVPYSPPHCKSPWPKPAFAQFQ", "VAPPAWPYPRKHZKGUWQPAXPUKXRYFVASKPUHIFDQOAVWJVFC", "ADACPQDPQSVSDPDAPQSPPUPOPUDDZVWADSAPSDVFNFCZVVA", "OCCVCPPWCFWFDQFVUPUCCXDXPSCQHFTOCADUPRZAPAKKPPP", "ADKPADFQAPCPAADKDXPAPDQQSWHKGAPFZAATOPAPSOIIPPO", "PPWFFAP.TPSZGAUXKZPMQVQQPSCNCPDICPQQVAQZAAUHUYP", "FPAPWAWPVGSDFSQPXUZPFDCCCQABXPADGDQOYPPDXJCYUAQ", "ZPQAPSRQUCCPDDUVJPVTQFQXFDFCPVCHAVWNWDPPCCPRQWU", "XPAWFVWVPFXSPPOFWQSGRDPCKVCVAYPDPCPDUPPFDPZUDDC", "PPKOPPPPMCCYAWDXAWWOCWWDWPZCSVKGVFQATJXSPSVAPSC", "PUFPCHQFAPCACZSDPCFVZAPI.QISRWQDUSJCAHDDVAGVVWG", "AODDNQDRVRZQQFADXVGAOAKSVPPDCWAP.PPPFKXNAZOFPCU", "QQKCQFPIRPSYVDUSPCFCSCCKPACWDUAFQAACQYHCDDPPNVC", "ACCVPPXSSGDPUFNPRROWVZPCOGRSAVCWPXZKUASWRNPABRQ", "GPFPDTFAUAGKGPCFMCAAPGAAFPFRPSQAPHP.QQDSSAPDFCW", "ADUVWDDQCPNPVFPAFQZDRCCWVVCDUDDDQJTOYVPWDSVADFC", "HCPAQVRDQNKQPYQRSUQPUPXVAKPOQPDQFUVAPCZDPUFARZF", "FRPQUCQXOQXKUQFUGZAVQQPXPVDRWRPGPQFPCYUAHSRDQAD", "QYWQPQZAPDFGUAGPDASDPPUGUQFVDFUDCWKSDOSVDRPZDDA", "PCQVWPHPVKFPMGFFQCGFYPWWCDVADUFPOPSFWPPVSCCDPSD", "FDWUZPZMMPADGPSWARFXXPQAPZNPFPPATZVSADFFNFAFUQD", "CPWOXSVPSQSWWDADPFSQJCXAURUCQVUVMQPWQGFADZXWPCK"};
    vector<int> POIs = {16, 67, 9, 174, 50, 63, 35, 203, 52, 46, 118, 183, 37, 60, 177, 399, 116, 212, 13, 102, 19, 2, 128, 25, 34};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "MXBQRZNDKOSFYGCPWAJUILVTH";
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    vector<string> cityMap = {"MFKNXNNWXXXCTTKXW.F.TCXUWNXNNVCM.WXWXKCXKXNMKK", "MMXCNKXNTTMNNX.XFCCCXMCFFNFUXWCCCMFNKXWTXUNF.X", "NTNNNNTTWX.VXMFNFXTNKXMKXNXUFXXXCFV.NTXFCNNXFK", "X.NXXCNXXWNWVMFXNCNCXXC.X.UF.X.NCNKMFCC.KKNNCU", "X.NTTC.NMMKTTCTXWNTMXCNNXWXUWNNKNXFXC.WTXUXXXK", "FKFXXN.XWTFXNNKKKXKNUXWXKNFXXFFXXTNCXWTWXW.TNN", "NKXUFXCXNXXCXC..XTTUXNF.CTT.FNCFNNXFMTTMFCCXXU", "XUXMNFVNCWNTXXNMKM..NKK.F.NUNTTFKNKTTNXXNNNN.X", "KWNUUNNNXXXTKNXX.NNN..MCX.CKNNK.F.C.NNCVFNKNXN", "XCXXTMN.XU.WNTMW.UNNFNVNNWNKXNXNXT...K.XWCCNNN", "XMNFCU.CUCNNXXMK.TKXKCNNTTXNMWU.T.NX.NFXXXNKUX", "..FWXMXNTTNCXXKC.M.FNUXXNUCXNM.MXNX..NXC.XTNXC", "XKXFUTXWMNN.XWKXFTWM.NXXVKCXMKNUM.XCKXXXWTNXMF", "FMKWCT.CNWTFN.FXUWKCNMXXXUMNTXNXXN.XMTTKMMW.TN", "CFNXKCUUXFNFNFWWXCFCCXC.TT.WNKKCCKNNW.NFF.WXTN", "UCCCU.NCXFMNKUMWMKUXX.MTKNNNTNXKTWFXCXNXTWNKTX", ".KCCNUNXNUUNXKF.WWFXFKTNTXXXC.UXFUKNMKNTNXFKTX", "KXCXXXWX.CNWNFNUXW.WXNU.XCNXXNV.FKXW.FKTFNXNNC", "CCNXM.TWKWXXCCNN.WF.XMFFXXKT.XNTTWKFNMWVKXXCTW", "TTXFNN.MX.FXFNNKWXWXFXNKTXTKXKC.XXKTXFTTXNFKXW", "XTM.WWWNX.XKNTMUFNN.XXKNKXXXNXUXXXNXXTKTWKNXTU", "FN.KNCTW.WNKKTM.FWN.F.XXCKXTFXWNNTNNXNCFTWXNCC", "WXXNKNXVNNNMMCNUMNCUCXNXMKWM.K..TMXXTUWFNFNFTF", "U.KNXXKWNXXUFNCWNC.UTKXNFXXXNXKNFWN.MWXCMWNNNX", "WCUXT.XXKWC.XCNXNMNTCNNMXKFXUNTFTXTC.NXNCXWTMM", "XNXNNXVMXFFXFXTCXNXMCMFKK.FKXTUXUNNNXXNKKNCFUN", "M.M.XNUNXXXKWWXKKVXXNFKWTFXCNXX.WNKKTKKCXMXXXF", ".UTMXKMW.M.FUMCKXN.XFKX.WNCXWXKXMNX.CF..NCXXNX", "CFCCNXNFN.NTXKWNCTCNFXFNU.FFWKKXMWTFKCKNCXFXCT", "XXCMTKXFKXFXMKXNF.WWXKKCNCUFKWCWKNKTMMCWNCK.NU", ".CTWMKMWXXXWNKXXUMCN.CKXNXCKKXXN.XU.NXXT.UTXTC", "T.XWNWFFW.WTWNKWMXTWTFKKNXXWMTXCWXWNXKXMNXXKMX", "XCTNXXMNUXKNCXKXWNXTKKXXFXXNXMUNTXXKXKXNXNNFUN", "M.KUXWNN.N..UNNNCNUTCFTMNNX.NTX.XNXNKXWKKXXWXC", "NNNKCMNXTTNTX.FTMNXXXWKTFNCCUCMTWTFFXC.KM.MN.W", "FKFXXMNNWNNNXXKKKNWN.XTT.KXXCNXTKWWXFKNUXXNMNC", ".X.FCF.TTNFKMMWVNXXFUX.NNTNMWCKWNXXXF.MFMNXWT.", "FMTXX.CCNUKTFFMKCFXW.FF..NCXTTNXUN.TNXXTNKKX.F", "UWNX.CN.WFMUNXTNCWXCCCUNXUXNNXWXXWXTFKWN.TKCMT"};
    vector<int> POIs = {148, 14, 164, 79, 129, 388, 108, 141, 152, 322};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "TVKUWXMFCN";
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    vector<string> cityMap = {"HL.DYIHHE.H.IEIDLYIYHE.E.TYHLDEID", "H..HYHHHEY.HE.ILTHDTDIL.DDEDIESDI", ".DHDDTIYXT.LHHHIDXI.YEHDDDEETEDY.", "Y.DLDHEIHXDTD.IIYIYY.DDHDS.TYYYEH", "YIYHTDYDSYT.EEHIYTD.HEHYT.DIIYH.D", "ED.HYDY.HELIDYYH.DIYEYHIYYDTY.YDE", "DDYE.HSHEIYHSH.DHDEDZYI.YHLITDHDL", "ITEIEIEELETDTDDHYDDIZDYYDDHDIDIIY", "EDEEIDHDSYYDY.HDYYEHY.YII.EEDIIY.", ".DHHDEYDTSYH.HHLYHHTY.HTHDSDDHEEE", "..HD.EYESI.YTYYDEZTEIE.EDEYHTHEDY", "DYIEHYEY.DLEDYDY.DYYDTL.ITIYXDTEE", "YDTIDD.DYEZYDD.Z.IE.HTYIDHHI.YDSE", "EDDE.D.XLHE..STDHSDIHHHSLYYTDE.II", "S..DSDDYYDHSHSYYHEHHIDTDII.E.LTHH", "IEDIYLHDEIHSDY..HSEETEITYXDIYYSH.", "DDTHEHXHYTYDYEHHSYHYDTYID.HDYYHE.", "HY.DLHYSDEDYDI.HDEEEEEDLSDDYHYLH.", ".DS.ID.YYIIIDEEHYELHIYIEDYXYHDSDY", "TDDTYTZESDIE.Y..D.E.HHH.TYIHSD.DD", "E..DHYYDIYD.DTISYIED.DDHEDDHDT.TH", "YSDD.HS.IE.EEHZLE.LEXTDDELETYYHDT", "D.EYX.DDDYEHD.Y.DIII.SDDY.DLDH..T", "EEEYYEHYYTTDYILDH.DEHDZYLEDDYDHHE", "YHIYIEYEY.IHD.YSH.LYYTEHHT..HSYTI", "YYHHEEIEDDHYYH..SI.DYII.YESLE..LE", "EYDDISYYDYXDYYEEEXYEYDLIH.ITEYDDH", "H.DEHHDEIY.DSHHHZ.TD.HHHIEDYTHLST", "YD.YZDHHIYEYLDH.DDHEHDD.EHXY.EHYZ", "ID.YHL.DDDIDYE.IS..LYD.E...DE.DSD", "ZEHLDTHED..EDHDII.IYDDYY.TEEDD.Y.", "YH.EDY.ZIXYTHH.IEEHYDYZYEDEDH.HS.", "DEYEEDIDIDDHDYDI.HYH.DEHIIYEDHDYT", "DIXEESH.IHTZDIYTHD.T.DX.Y..YIDIIE", "HY.YDHYYEYYYHEIEDXID.H.DLZYD.D.YD", "ETETIEDD.YHTDYYDD.D.D..HDEIDD..L.", "IHEYEELDHETDTYDIEYTEYDH.YEL.DDLHE", "EYIDDDEZEDXIDDIYLYZDY.IYIDHLIYDD.", "DSYEEHDHHYIEDE.EISDYLTDYS.HI.DHHD", ".IDYDHEYHIEDD.IYDLY.HI.SDYIYDE.YI", "..IDYETID.TSD.HYDTIDIEDHE.DDLE.DD", "EEYDITE.SDYDD.IDHII.THY.H.TIDITDX", "DDHDY..H.YTDIIE.LD.IS..YXYTDHYDDE", "EED..YEEY.YEDIDEIEEIEYE.DYE.IEYLH", "YYHDZDDLIS.SIYDDED.YDIS.HE.XD.EEY", "DHYHEDEDEHIY.YI.HT.YYDHD.DI.D.YHY", "EEDIEIDDHY.H.DYEIYI.Y.XY.XDDHHDHD"};
    vector<int> POIs = {243, 199, 23, 19, 52, 50, 81, 157, 203, 317};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "YHXZSLTIED";
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    vector<string> cityMap = {".O"};
    vector<int> POIs = {1};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "O";
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    vector<string> cityMap = {"M....M", "...R.M", "R..R.R"};
    vector<int> POIs = {3, 4};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "MR";
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    vector<string> cityMap = {".BBX"};
    vector<int> POIs = {1, 2};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "XB";
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    vector<string> cityMap = {"AIAAARRI.......GOAI.", ".O..AIIGI.OAAAGI.A.I", ".A.IAAAARI..AI.AAGR.", "....IAI..AOIGA.GAIA.", "I.AIIIAG...GAR.IIAGA", "IA.AOA....I....I.GAA", "IOIGRAAAO.AI.AA.RAAA", "AI.AAA.AIR.AGRIAAG..", "AAAAIAAAI...AAG.RGRA", ".J.IA...G.A.AA.II.AA"};
    vector<int> POIs = {16, 7, 1, 35, 11, 66};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "GOJIRA";
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    vector<string> cityMap = {".A", "BB"};
    vector<int> POIs = {1, 2};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "AB";
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    vector<string> cityMap = {"...", "AAA"};
    vector<int> POIs = {3};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "A";
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    vector<string> cityMap = {"..", "AA"};
    vector<int> POIs = {2};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "A";
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    vector<string> cityMap = {"..M.", "TTTM"};
    vector<int> POIs = {3, 2};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "TM";
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    vector<string> cityMap = {".A"};
    vector<int> POIs = {1};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "A";
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    vector<string> cityMap = {"..MM"};
    vector<int> POIs = {2};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "M";
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    vector<string> cityMap = {"MM", ".."};
    vector<int> POIs = {2};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "M";
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    vector<string> cityMap = {"...", "GGG"};
    vector<int> POIs = {3};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "G";
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    vector<string> cityMap = {"AB", "BC", "CC"};
    vector<int> POIs = {1, 2, 3};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "ABC";
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    vector<string> cityMap = {"....", "MMMM"};
    vector<int> POIs = {4};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "M";
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    vector<string> cityMap = {"M....M", "MMRR.M", "RMMRMR"};
    vector<int> POIs = {5, 8};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "RM";
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    vector<string> cityMap = {"..", "TT", "MR", "MM"};
    vector<int> POIs = {2, 3, 1};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "TMR";
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test67() {
    vector<string> cityMap = {"AABBB..."};
    vector<int> POIs = {2, 3};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "AB";
    if(result == expected) {
        cout << "Test Case 67: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 67: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test68() {
    vector<string> cityMap = {};
    vector<int> POIs = {460};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "A";
    if(result == expected) {
        cout << "Test Case 68: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 68: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test69() {
    vector<string> cityMap = {"..", "MM"};
    vector<int> POIs = {2};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "M";
    if(result == expected) {
        cout << "Test Case 69: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 69: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test70() {
    vector<string> cityMap = {".Z"};
    vector<int> POIs = {1};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "Z";
    if(result == expected) {
        cout << "Test Case 70: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 70: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test71() {
    vector<string> cityMap = {".A", "AX"};
    vector<int> POIs = {1, 2};
    CityMap* pObj = new CityMap();
    clock_t start = clock();
    string result = pObj->getLegend(cityMap, POIs);
    clock_t end = clock();
    delete pObj;
    string expected = "XA";
    if(result == expected) {
        cout << "Test Case 71: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 71: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    test67() == 0 ? ++passed : ++failed;
    test68() == 0 ? ++passed : ++failed;
    test69() == 0 ? ++passed : ++failed;
    test70() == 0 ? ++passed : ++failed;
    test71() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=22764934&rd=15494&pm=12479
********************************************************************************
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
 
using namespace std;
 
#define REP(i,n) for(int(i)=0;(i)<(int)(n);(i)++)
#define RREP(i,n) for(int(i)=(n)-1;(i)>=0;(i)--)
#define SZ(c) ((int)(c).size())
#define ITER(it,c) for(__typeof((c).begin()) it=(c).begin();it!=(c).end();it++)
#define FIND(x,c) ((c).find((x))!=(c).end())
 
 
class CityMap 
{
public:
  string getLegend(vector <string>, vector <int>);
};
 
string CityMap::getLegend(vector <string> cityMap, vector <int> POIs) 
{
      string ret="";
    int a[30] = {0};
    bool b[30] = {0};
    REP(i,SZ(cityMap))
    {
        string temp = cityMap[i];
        REP(j,SZ(temp))
        {
            if(temp[j]!='.')
                a[temp[j]-'A']++;
        }
    }
 
    REP(i,SZ(POIs))
    {
        int j;
        for(j=0 ; j<26 ; j++)
            if(a[j]==POIs[i] && !b[j])
            {
                ret+='A'+j;
                b[j]=true;
                break;
            }
    }
 
    return ret;
}
 
 
//Powered by [KawigiEdit] 2.0!

********************************************************************************
*******************************************************************************/