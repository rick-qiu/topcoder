/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=4678
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class ABCPath {
public:
    int length(vector<string> grid);
};

int ABCPath::length(vector<string> grid) {
    int ret;
    return ret;
}


int test0() {
    vector<string> grid = {"ABE", "CFG", "BDH", "ABC"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<string> grid = {"A"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<string> grid = {"BCDEFGHIJKLMNOPQRSTUVWXYZ"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<string> grid = {"C", "D", "B", "A"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<string> grid = {"KCBVNRXSPVEGUEUFCODMOAXZYWEEWNYAAXRBKGACSLKYRVRKIO", "DIMCZDMFLAKUUEPMPGRKXSUUDFYETKYQGQHNFFEXFPXNYEFYEX", "DMFRPZCBOWGGHYAPRMXKZPYCSLMWVGMINAVRYUHJKBBRONQEXX", "ORGCBHXWMTIKYNLFHYBVHLZFYRPOLLAMBOPMNODWZUBLSQSDZQ", "QQXUAIPSCEXZTTINEOFTJDAOBVLXZJLYOQREADUWWSRSSJXDBV", "PEDHBZOVMFQQDUCOWVXZELSEBAMBRIKBTJSVMLCAABHAQGBWRP", "FUSMGCSCDLYQNIXTSTPJGZKDIAZGHXIOVGAZHYTMIWAIKPMHTJ", "QMUEDLXSREWNSMEWWRAUBFANSTOOJGFECBIROYCQTVEYGWPMTU", "FFATSKGRQJRIQXGAPLTSXELIHXOPUXIDWZHWNYUMXQEOJIAJDH", "LPUTCFHYQIWIYCVOEYHGQGAYRBTRZINKBOJULGYCULRMEOAOFP", "YOBMTVIKVJOSGRLKTBHEJPKVYNLJQEWNWARPRMZLDPTAVFIDTE", "OOBFZFOXIOZFWNIMLKOTFHGKQAXFCRZHPMPKGZIDFNBGMEAXIJ", "VQQFYCNJDQGJPYBVGESDIAJOBOLFPAOVXKPOVODGPFIYGEWITS", "AGVBSRLBUYOULWGFOFFYAAONJTLUWRGTYWDIXDXTMDTUYESDPK", "AAJOYGCBYTMXQSYSPTBWCSVUMNPRGPOEAVVBGMNHBXCVIQQINJ", "SPEDOAHYIDYUJXGLWGVEBGQSNKCURWYDPNXBZCDKVNRVEMRRXC", "DVESXKXPJBPSJFSZTGTWGAGCXINUXTICUCWLIBCVYDYUPBUKTS", "LPOWAPFNDRJLBUZTHYVFHVUIPOMMPUZFYTVUVDQREFKVWBPQFS", "QEASCLDOHJFTWMUODRKVCOTMUJUNNUYXZEPRHYOPUIKNGXYGBF", "XQUPBSNYOXBPTLOYUJIHFUICVQNAWFMZAQZLTXKBPIAKXGBHXX"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 19;
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<string> grid = {"EDCCBA", "EDCCBA"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<string> grid = {"AMNOPA", "ALEFQR", "KDABGS", "AJCHUT", "AAIWVA", "AZYXAA"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 26;
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<string> grid = {"ABCDEFGHIJKLMNOPQRSTUVWXYZ"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 26;
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<string> grid = {"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH", "IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII", "JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ", "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK", "LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL", "MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP", "QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ", "RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT", "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU", "VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV", "WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH", "IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII", "JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ", "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK", "LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL", "MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP", "QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ", "RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT", "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU", "VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV", "WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 26;
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<string> grid = {"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<string> grid = {"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH", "IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII", "JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH", "IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII", "JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH", "IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII", "JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH", "IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII", "JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH", "IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII", "JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 10;
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<string> grid = {"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH", "IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII", "JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ", "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK", "LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL", "MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP", "QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ", "RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH", "IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII", "JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ", "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK", "LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL", "MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP", "QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ", "RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH", "IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII", "JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 20;
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<string> grid = {"ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWX", "BCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXY", "CDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ", "DEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZA", "EFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZAB", "FGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABC", "GHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCD", "HIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDE", "IJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEF", "JKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFG", "KLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGH", "LMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHI", "MNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJ", "NOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJK", "OPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKL", "PQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLM", "QRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMN", "RSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNO", "STUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOP", "TUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQ", "UVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQR", "VWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRS", "WXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRST", "XYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTU", "YZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUV", "ZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVW", "ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWX", "BCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXY", "CDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ", "DEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZA", "EFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZAB", "FGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABC", "GHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCD", "HIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDE", "IJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEF", "JKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFG", "KLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGH", "LMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHI", "MNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJ", "NOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJK", "OPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKL", "PQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLM", "QRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMN", "RSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNO", "STUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOP", "TUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQ", "UVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQR", "VWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRS", "WXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRST", "XYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTU"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 26;
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<string> grid = {"AABBCCDD", "AABBCCDD"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<string> grid = {"AXCXEXGXIXK", "XBXDXFXHXJX"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 11;
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<string> grid = {"AXC", "BXX", "XXX"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<string> grid = {"AEF", "BDG", "CHI"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<string> grid = {"ABCDEF", "XXXXXG", "XXXXXH", "RXXXXI", "XQXXXJ", "PXXXKX", "ONMLXX"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 18;
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<string> grid = {"ABCDEF", "XXXXXG", "ABXXXH", "RCXXXI", "DQXXXJ", "PEFGKJ", "ONMLHI"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 18;
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<string> grid = {"ABCDEF", "IJKLMG", "HRQPNH", "RGSUOI", "FQTVWJ", "PEDCKX", "ONMLBA"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 24;
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<string> grid = {"HLKIABCBDINAYXUVUHIKMZXGZZCEFLXWHTMLXWFRPUVGBCBFOL", "IGFFRCDEFPOMZAWCQGJUORYWYZYVMNJYUPZYUVSZYWOMIRAPNM", "TWXEDQUWRSONLADGFFXPYSEXSSXNOAAIJVMOJTJNXRNKJQSMIF", "UYCDELVXYZTMKKHEAEWYOBDCWVTLKAVFHXWXYNKLLUSQYWTZSH", "ZWQGNFLCQUNTPIJYDEZVCDBVONZRJAECWSPVZBMEOTTRVWXYOI", "HTWMWHMKWVWZSMZCZBIJREFDPQYSXJSTUYQSPNKLDESNTSZPKQ", "WZYXVJIOUWYXKTIWLITSPQGCMHEHKSRXWVOGLOMEARWUXFYZWW", "WXSUQKCYZGGZYWXTPORQMLJHMDWOLMWQNZNKLMAGFQUAVEZWXO", "PXSTYXWTKFSXOVSYUPSNOKGIJPNDFQNQPIMLJKJBYZGYXWIXZP", "AZLRKVONLJZYSMZTYEETUVXAZNDXUCFGHTJMUOQRDNUWZCMAYM", "BXKMQQPQRXIQRYWKSSFZYTGYMIUYZUESHFGLNPZSTHVEELOQST", "KEOPRIYZSLHNUXCRIFRYWUHIXWVAMYDDXLKFEJKHGUWDCIPPRZ", "DOVUZXWVGFUMFOKQPOXXWVLKJPZSSCWZCNJJYVILMVZYWBOOTY", "IYWWNYRKHTWVBJKLPVPAWRJGHYYRVDBPLBIZUFEQVYZXAVZVUM", "EXQSXKNJLZXRABBLMOBXTONMWXIKHLNAHAPQTLEORXZEFYWKBA", "LPUGEDHRKMYTCCFKLNYULSULNMBFGQOPUCNESRRPTBELOFVKDA", "KTSUFFDSXWWXSMUTSYWVQRBULCCVSPGHTNDQSMQSYWMKBEUWBL", "XYNMKJBWYVIPUVIKZRDPTRTGVUAZWOOGMOQPSZXZVUHCDBZYXA", "FKOLIAAZBRZFOMRKTQNVUSPYZWWYABWZUTPRQYEVAAMIIJRPBI", "KELHBAGDCYFKZNLKPYVWRZXONXMATRKXWTASPKJYZWTUJRSPOE", "NXZKYFBBXKJLYDIHJVLXYVLMVINMBFGMRVIHGOLISXVGHUSRNG", "ONLXVKIIWVIBCDGFONMIFBKHKJZCEWLHNZYDUFHHVYKLVNTNIM", "QRSYITOPMLUBKYGZLRQPZEMUPQPDFXZOPWXWHBOMYZJWXYPWLK", "SPGTXDGQKOALWVFHYMOKYVHITVAVCYPDVSZTVLDLHIZRZTRXMG", "QSZQCBERTJXXXIUEHGLGDXGIJAWAFHDUTIYNOCKEGGESRSZYLH", "CTYIHFWOAJIYYNTLJUMEFZFFDXMSBIFIGWIXRTWFICFYTUVKTI", "BVZYGECBAKZVROSKQLKDEHCESCYCJCLRVHJKUSRLJBAXFGMRHL", "KBDVFDYHOPRQUTPWXWVFBDORKOZZXMSQRKPJVWYWMGFGHDHGOM", "JOPGCLEZJQMSYOVUXHGVPKQJEAUYNWYXPLZMYUVXTNPJDZFPJN", "MYXWHIZPQLTVWARTNDZIQRDCFPORTZWYOMNXZTSROONPQEYIFZ", "NUZJJXOTSRSYFQWVWTGWXSHLGNWPYRWNONFDACTZYKLUVOXZYX", "CTRKHIBUVYXTLIPGEXJIYTMOMCVQKQRSDGTCBMWUICSWOWYVWV", "BPSLDIMWWWSYZRNOQYNKLMNKLZWUSBKFGCRBOETHCBVRXICTON", "ANIVBJKXUTSRLPQRWOZMCUWSJFYXVWEYNTQXCFXSDQOYQEBCIJ", "JMOUWLYZWZYZBDFVUWBZJVTXVXYYZUXZLFHFEWRQNKJZLFGDHK", "IPNTXDZYWVTRGXKZSTACBJWXWSWZMLLKKIGZSVPOMUFIKTSRNX", "TSBMYNVSXRUHIVYTREDAIONPYWKONKMXPTYHUTSNXLIWCUZPMO", "AXJMRZAIOHONLWVUNMJIUGYRXZVSPINORSUXWMRGIJKZBYPSLS", "WXFJHBNHGIXYRXZBIOZYFCWOLMYZBCXENFHVUVQONMDAUAVUTL", "CEIGVSCEFUWSZYSHRYXXKJIQNTHZDHBTZGEDWSPWPGFTVIDECK", "AHRNTRDMGTVPJGRDQTWVBCDPSRDGGIHYXWBXYABMNQRWACFVUT", "ZFOQBVNAFJKTVBCLPZPVDBDOFEGOLMOPVRAVZXLFJGBCXYOXWS", "CGEAAWUSPLSWLGNOTTUCDLNNBHPKJNLNGKALYEDNHIMLZZVYNF", "JDABZPPCDRNYZPOYQTBCKJMARQIRYOUJOHMNFJOLMNPSYUZUJG", "IKLYYWBSGNWQQOWZASGIABFEFQRSLTXZPEYIWPUKKIONZYXWHI", "HHIZXURAHPOVWRMBWLRJBCGGTZVWTUWYMHYZKVTSFXMPWRTUPR", "JKMNTUTSLQTOUXLKCPQNIHIDBOYXZJPNXVKTZHRGWEOZFVDOYW", "DMNMZVWXRGHZYTOFMOOLJZYXOPYZIYUUZNRBQRHBCDRWHEUKMN", "CWXLIUTYPDIJKRSNJNMKPTMZZYXHJKRTWYSPMIUXSQSTZIJZXW", "XYZRKJZNOACOGQOHIKLITSVRXYZVHHMSXPVUKLOZYLMUKYCYTS"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 12;
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<string> grid = {"IRQPDNTCDIAUQYZTIHGYUSZZYWQRETCAWZYXUZXUNGBAVXYZZK", "XWOMVXVUFJKSVTSRIFZZTQOYXWBZUGDEKWXMPYWVLOWCWSETLZ", "CYVWYZTWYLOWUMDCJCYKVBXKZXVCDVGLIJLFZUHBZKXSDZRGYM", "ZDULZGSPXOMYHLEFKLMUTWAHAYDUEFZHJKCHTRPLYYUUTQGONV", "AQRUNQRRVMPQRSEUXTNSVOAGFPPSTYNQIJGDQSFQZTVOMQRMTU", "PWXYZVOUXJUWKDTTTYRIPMLKNOQWHOPDFFICPGHBCSLKLVSTNR", "TVTGSNUPZNVWVUXZZKJQHVJMNMKJIXCBGHFCAOIBAQRMWVUIDQ", "USFBIJWUYWWCXYWYXLQIOZHLWLCNFZWCKJZWVBQCZFZWXVUTEP", "VQRHKMTZXXRQZTZVOXJUWTEKXLABFGILAIYUCRJIEGVYFWGSBO", "WEPHLSCKYIGASRNMLKVTRMFBJTSRVUXMZHXVCRKLVUVXZHRONA", "ZXODKRQFHHHEDFHFMEOCQRAGCOIKZWZPVYZWUQPMFOSYEAQPFI", "YNNBJLPSRQXBZGEFDNBPSUQUONJLYRSUZYIQLTONKPWPVDVMHJ", "MJACNONYLOXTJJGJEBAEFTSVEKMZFKPTTFHDDHFLMAUXQALLKB", "LKBAHOGSXWULSNICIAABUZFIWLKYGELZPQETNSAIEBTRYIKKLG", "XZMAPCNLKQVHORIHDCAUYXNNJXAUJFCHXFHBKQGHDDHSGHJEDM", "UYSPQMWVQKYKWZQMFVSTZUYNLYVTKEEDXILMIHRBMEGFEGJBNU", "HROOZXKJUXYZJCSGUERSYXOZZRWEICIJVKNOGAELCNVMTAWORS", "JQDDSYDIWTXOFDYHOQRLWXTROUQXYHZUWZKPXTDDZYWUSEBTTQ", "PKGFEAPQHVJGEVLNPBPHGUSMLPMAZGYXTYQLZTSRYFXDIGYIUQ", "OBLIMBOFUQKHFJMMABSEGQRKKLABBDWIENMPVUQZRXZJZPZVJF", "DMQKHDEIRHJKEGCLKTDQFIJDJBBTCTEDZNOQOJKACYBWKLYKDU", "KJDRIACEROKONLYBTJCZMSOEDIABCWNJWSPSIHMPMAVKNFOXVK", "ZYXTSICENMJHPGZQPIBXQRPUHSCBDLMOVNVFGUQOCQPUYZYWSN", "HMWVKEZEXWUKLHWGHOMNLKWXYZKFEUJKWREUCRQUSUVZZZYZOR", "JVQTNVACFVXHMTFQYWYDOFVHIMNTGOKTJXEBVJVPTWYOXXYVDP", "ZYWPOSBXDFGNISMEXBAITUQDHTOSPHVJZYYAWNWLZXZVWVWRUO", "GXNOVPRMEEZJXRTDCWVBECBRXUYXWKKWIZGYXDYXYLAYNVSQPG", "MZXXVIQZJDKYYIRGZHGFDCAQIKPNOQJQOHFGZXZIEKPXZUTYXQ", "TJZYVJPAGEDLJSTFIHVYCNRHJZOMNRUPKCEDNPFBQCBROPLWZS", "UZVXMZCIHACMORBAEHEYZYMGDWYASTJIDAGCOMAEDGSLONWOVD", "VUTWYDLJIQUVDCDKCNDTXJFXYETZMLKGEAAEBABBFHZLMSUPFW", "XQSAIEMNPDRWXEMPQTSOUWVZNFDNHWVFIXJZHDVTLFKGCLHIVI", "ABZUHRVOYKSWAVYNPRSHSKUTGOOHCBXKIJYLACEWYKXJAKMUQP", "ILQOOQYRSXZTUWXZWRSDNTRZWRQPONZYGDMPYHORZURWDETNRA", "KNMRPTMORTOCAXHXIZTXMSMQYXQRMKNDYFOZVUPQXZMCABDBUW", "TOXZSWPNQSDVBYZQZYYUKIIHSCSEFOMQHEOWVYTLYIRBXZCEXV", "QUYRQVQIJDTEJQSXVCVDHDGVZXWDPJLUIKLMZTRXZZHSTVJXPY", "RFVPGJPYXCUHFPYWBBRIHLXVIULOBHIDJKLMSOQYGGAPUZYGNZ", "GIOYITSLJOPPQZJUWYSLQTYWLUPRNCAEUHJYNPMXRFUOCKFHUW", "HNMEPCURNQROMRCCXUZXZSZWQKGQDNAFGIGVRRYQWVTRNMNEFS", "AKGEDABXDMVUNBDSDVKJHWXYIJBCEBMILIWSUTPZYQNQSXLXWK", "BBWIXWUZLXWJGSEYEWZVUZYZYTDZXFGKJJJVQTSZXMPTVUMSUE", "BCDXWYZTGKYQGFJLZWIRWYMGFGKHGFJOZHSXUOIJWDUEZISMFC", "AEYUXRSJYUSHPOZYXYXSQXJNDEIXZQPYMTRZWVGHIVFWEYVGKA", "AZFGYRKZWVZILTUPRWRJOEKBMIJYYRPVXZZSUMFELYGFZWXLHJ", "ABIPQMSVXYACKMQTVIBCDYJLULKKXXUOWVPNNKDIZBXWIWMJII", "CDWLNTXJTDODWXNUAPQYZXAVCVULQSTNTWQMXOZJWYTVYSVUOR", "UEKGHYVJWSRNMXDBMNRAHGWPGFTPORHMLYDKLWPXORSUKVPOYQ", "TOFYZWYXYZQLVJEPXNMNZBCDIZONFHNAIEEHIUTPBSTLEJYNZP", "SPZGJKXPOMCRKHIYFGHJYXALEJTMKGOGHDACWSRAAIMZIFMWVU"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 21;
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<string> grid = {"KJZRAZGTXRVUUXYAYXZAERLIDZVUSOGFTYACGMYXGMJYEIRQOZ", "VLZSZVUVSWXZWWZCFVIBUFOKJYMRTLBZEGDBKQNFLNZXFSHGPN", "WYRWYWWUTPYRFEVCQLKHGPOPXMOLQKXYFHGJFRBCQRTWYTEDCG", "XNONFXSTHOQMHKSUOPMBXYZJKFPHJJSGYHMIMEYAJUVYLUUOBH", "ZRMOZYMRPPJILSTTRLOCLVQXJRQYZTFRQKOPWZNOIHFGZRNFIE", "XYVJHZKOQOFACTUMIYANZUNTSNTRBCDYPLOUQYSBLGNQWXHGYJ", "YWKKJIIJBNBIWDVNLRSXMEHUVZYMZWZMBEJMVRCDHQFGCDUZYX", "TZXIMXKEDLMVAXWJKZXLDFCIFWXYTVLQNKLOSWWOPRBEHIJLWV", "OSREANGGKEYCEBYXYWKAGDABYWQWXURCXNGPTZQJNLICDSLKNM", "VYFKPZGABJIHZZCIGJEBAXCZSKUVIBQYZTQLYSPZXMUFWURRPO", "UHGAOYIIZGAUGDVJIHIEFWUGLMSJCCHCVWAVWXYDNTVZRUPSQY", "QIHCRJXAYBVTKFETYMSHGCVADXIPGUANMBBDIVQEZWVYVOTTUW", "JJNSKWRWXWDUNLPZXSNRLPJCEFLONQOBZDABCTUYRSNWXDLSRV", "GETUVQXSYUVWDMYXTYRKEQMYZWGRTJPFEOYARDEVXTDSFQPLLW", "HRMNNPWXYZBZRSVZHQJOKLNSLJHVQRGXNNZQMFYKUESCYUZOKC", "TSQKLTHVQDEZUYZGPIDJFEQRMKEEWKWLMOPNGVTLPABTZANJAH", "UVPSMSUCMFHOLMWHFDCIFYSTNRZJXIJKROHQHDWZMNLYSMLGXW", "WUTNRIDKBIFNPJLEEACERTURQPSYHGVESTPRRKVWYOXULHIFYX", "CXVZTLEYAFMQMKFDAABQSUVXYTLNFDAFRSMWSJLZXSPEKJGSRZ", "MRWZKSZVMKVRQPOECZYPTSQXUWYMCERJHKHLVWNNYQONKYFOBS", "WYHXYGWXBHWXUVILOXWNUZXZVXPZADEFJZLFXSROOJKYALPWBT", "UXILXFSDAWYTQWMSRPNVMLKVWXWMFDGIXYZQUYJQZNXYZLXJVU", "AEKMVBRSSZZDXOTEISMZIJHTSFGCPCTYVVXRSZKGBCOWSRFGLH", "BCZNNYNRTUXXVUVJTLDHGEGRTSQSROZUBOWZTKCCWVRPVUOIHE", "NMPOZXPQVHZYWXAWXZCFVIACBWRSTUMAZEXTSJLMPKUCDELPFR", "BIQVBLPONOKDIGOXYHGGGHDKNOXWWVVXZNQPGRLMJEQSSRMNGH", "ARUDFUKJRMLCBJNFBAAIFBPMLUYUXHGYOMJOJZYJZFFTWXVOKB", "STZGCUIFGIJGSMDCBKBDCBDEFIHCGIEJRPCBSIWXYVCAYZMPRL", "CBOCKNQEHKKJMVMRQMOEAQSYAGYFBJALNSLXUDHGXWDQNJUSZM", "ZYQLMOPTSTEIKLXNSWNFPTUBXBCDEAKLOWUYLPTIVXUKCBITUY", "XUTULKMUADUHQPOVVXIBNVWYCHEKACGPXQVKZNOUFZYRJIZTXU", "GFYTVXJKXAQORAUZYUDFLYXKJINJIVAQOYODPHRQPZFUSTJPWK", "XGZXWQPJLRNPBSTZTQERSZTLFQMXOUWRZDXVKTNNKZYAVHIVVL", "UWSOZHWVXSTCUXCZSLSNQYIWHEDCOYCSFWIYJLMLKSRXBYXYGF", "VXORYXCUTRGDTVWCMAZWWPSQVIEDBUZOTKXQPOISGEDTCBWEES", "SYZNADBPKTFSTSBJIUVYZOTUSZECAWRISMYZVWZHFFDTANCDMG", "DHKRGECNIWXJRDNGHIJKWVUTRQMFBVQKHSHIKULYRQEOKMIONH", "JJIHWFBHAVKKTQOPHIRGXXXSWPNGGDRUMXRGFJTKPXWVNJHPID", "IFASKLYAMBYFUPLVZMVFYZJRQZKJEFOVRQOAKYIHMZYSRINOQW", "WJYIRQOLNCIGMJUXYBYDEAQKLZISLMRDKSZLJCGQRITKJXZUXV", "KOPRABVCTZHPOTLGSZTUNPNLHGRCKJDFIZTDBIHESQUSEHVYUU", "NBSTUVWURXYOQNMHEMPDBGJMGDFABHBUWPYAAADCTPNAIOPNSI", "MVEDYXWAVWPXRGJBLKMAFDTFOCVWXCLVYYXTUTZGUALMNQRSER", "VUTBCDBEOWTKFNVWLYJAEUBPSYSYZSUZSRZVWXYXWFMMXGZUQL", "XYZSRIGFRMSCEOFDZHIOBCVUTVUYZVTTPQFCEYCXMQLLJYVJMN", "WULMJHGYXBJRABPDQBNWCBDWJQOXWUQZYQBCFNWBYZPEKCKGHF", "PVNKJSRWOLCQQLGRZTWGGAFLXNOXSTDNQXUTSGVXVJHZDMLXYF", "OPIVZTFQPMPDKJMNUYZHFBIHKYNPQEMALMWHHKFGNUSXSMQRGD", "GJSTWZXCKIELIEMURVXWECJJZYWJSNLKFEOPJJFBLTHWUUSOMH", "AQTUWXYRTGFKZPHEQSWYZCHKLEUVLROIJZYAADESRQZYXTMLLJ"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 26;
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<string> grid = {"TBABACYFBDEUTPQJZNLZALCMXWFCBCGXYCMWHTJVFALRJAZBHI", "RUCWCDWHGCZZORSZOMYZNBFYVWDJBFWUZTLIGVUWBLNQNIBCFJ", "POQDEEUHGFYWVPOBPRXNGRTRZOHHIJKSSXWPRCBEFAOROPACKV", "JHDRFFPTJDCSQKIUUWSJSJSOQPXGRIKNRYZYQDGYYLLNSEDDLU", "IHIETGHPKBEIPMZVFVGHKAGDZYMTDITNQXPYEFXHJHKWGFECMT", "BJYFAYHIMPVCDXYGECGLMPFEABZSWZRPZYQOYRNKLGXHZIGNNO", "AZZXZVWIQKXWZTUWZXDOXVYMASIVYXKDBYJTZXZSVMKYBFJMPY", "WMLOWJJSTMSYSMAFBRPYZWAXLVOAZXTLWXTOWYUTUNLCDEVKQQ", "LVPQTLKUASHRLNERCMSXYXYHIKKWBSUSVPLSUWXXOZPGMLSRSR", "VWURPSEFVLPQPOFDEXBQFZGKILHTCUVWRBATBDTWJLMXWYZWJN", "NZZTCHAYKWMNERLKDFSQJBLJEECMBJYZWDPRSLHNKSYVXTXYXB", "RXYZGDIJJLZUSSOTNZGHIXWBGFBRKBIPLHOQFIZBKHYYIUSRZA", "YXDLYWYTVMWXTWVUWSYKJYZUGAPAALFOAGIADECJMLCDVKQTBC", "BZWTUXGSNZYFHBXZGXYLPRTOLUBHMNAHMLJIXCPZPQYWVLOPNP", "LNSHNWYPOKEGCHYFEXCZOTYPVCUMLBETNKTWFQJYLZPXLKNWOP", "ORFOPXQABKJYPPRKMNWBYZOQDWVOCDRFOJQMYKBUXWVLCDVIBV", "QPCGQRUTPOJZXWZVRVWXRQOZXEHZJQGSRPRXUVSNGNSUEGLFUW", "XVHTRFGAQSTYVVFOIZXWHKPIWXYGHHNSTRVWWVZRDFXTFDSTTZ", "PYUVZNIHFRLWUOPINMYVLVYTVUZJGVZWWUYXNWYCECQPGBARYV", "ZJHMUSJKTJQESQHALMSRUZWXCSRKFWYZVXNVXYZDZBOIHFPQNK", "KNGBTLVWLOPRRXWJAKQTOKLFPDIHELORWYUWHIEVYAAZEKLGMP", "VSMONUGBMMNQXDGFASMXIIJQOLFJDMEWVZDEFJZHUKYDWCGFUA", "WTRLMBHFZPNZPZCHBYWJUTHRGFKACBDFJQNMSTGTIITBCWIHEB", "YXUKLMLUPWTOLIIFTXVEZVSHNSGUPBJIARLMRWFJYGARTVNERD", "ZVXVANTAVXHXHKDLEUZFNWWURUTSRQLKSUIMBEZYKDQBKRWUBC", "TSWZTSGFLBWYWTMQRICVMUSWTSTUVXNCKTVJPUONLLNPYLXXTQ", "CBXYDFEXKVZXUPOFHJKTSVPQWRQAZYLBWEFOOCPKMJKQFZZJVW", "ADGHCGUJNUYZOPWGANOPQKWZTCNPNMJKVTPGBXRYIMESLHEYXU", "KFIHIWVCMUJZNJIVGDLAZYXWUSYKIFYFGJINADBSZHNKSIRPKI", "MNORXMGKLIZVWBDHEFBAZWXZZTRVNSZCLKLPQTUQVWOQTGSTHK", "LKIYQLRMLUHJUEACKRSUVUYKQSQPOYABRDXEZVSXVYXUQKVGFE", "ZKLAZCSUNTVTKYBQMJTXOMJNOQOPKWHBEUVYYXCDEWVCJHVYDU", "ZMHMSAVYOQHEZZXAAIJGAIEDZZQDMIGDJFZJWTECBPZYXZIZXC", "RXZTBUXWSPMYQVAHFDCFBLMCXUGHHFUKGGAIVHSAYXWTWXYJBA", "SYVUQMYAQDXNRUPNMPEBAHABWFUIMNZTSOQHVGIVMZUSZVVUDA", "TUVXNZRSEHWVOTTOQGDXQVGQETEBLYZYJRNVTUYLCIHTUUOJRG", "HGZGMPQMLUBHUJLXRFZRWZUFRSFKANXPXRSWUSTKPJDNQVLMLY", "IDWYFKSKVFGRQRUYWZRVZTPQRGIVFFORWTPMNTSQKBMOPRPJZX", "KJXUODRNTSOPWZMVWEYYJLVKZHOUMZMHXSQHICQRLLJJPZOTUW", "YIGQEACYZSPNQAGAIEXVOKKMQTWJYLPIZXRIJODKGAIOQRYTYV", "XHJLPDDCKNMKBHABHJWLBNGLRYVUAIJQYUWKXNEJKHNQPMSJWO", "OYMKCEZGHLJNQCEAOKKZBCKHMREZGKGHUADCCCFJSTSMDGJFRN", "TRJFABFFHUQXWPMNQZHABDIZNSSYLDFBVZXWTDARUPUOAEFKDR", "SQDQCDEVNOLZYVFDYROEEXYXPTPXWMATCDEWUXEFVHVLNIAZUS", "PCPHIEKXJMPMDIGEUIPFSUWZIRUVINOQNYVSZBCWMZXMYVVUYV", "AYHMOZYCSLHQENWVHTERGVYJQHGLHFPWZBRQTMAXJZAXYXZWTP", "VWZYNJMTUVCERVUISZLHTVXKJPOEAKNQTVIEUGAXYIFFXPXYSJ", "YXITXRUQFPNDSWWTWXYIZBUOQNYWBURTRQPDEVWYZGDEYZPEII", "PZCWZXVOJIHWYZKLUNOPQGHRLVSZVOTXYOKCFWXZRBCUVTPAJL", "JKVDDYRMLKALUYYKQIHRSNFKUXWXYMWVTZNBANBCEATSLQZONM"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 12;
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<string> grid = {"ZYZEBCPLTFHPKIOHZJDLXRSTEEDABBGJMALMNLBAABCGOYZKJY", "XSFLDIQURJOLQJXNMJKHVWZGHIJCLFIJLIQRRKIVDEFZHOJWPT", "UGGHRRJMVWTNTRFLSRBMLNPVNCKQFHKLTJSGASYKMSQGHIWKVU", "PEJIUQSZPXRUTSZEDUJNOCSFVVPLGCNMSVFTVNXZTMNZWXVXMO", "DFJGYJKOYXVXOTUTNTVRPABDWZOMTDROUWWWUONFUSWXYASUTL", "CAKVKHGJSTHWUVUXWWSBQFPHTUSTUSYWTXSXPQVYXNVXUVPRAS", "ANKHIFIWCRWVUWGYFLZGFEVXDLMQNVSZVUYZYUXZYZYSWZGARJ", "DMZXDNODBPXVTYZRZNZYNQZCKZXCPWZRRRZXZWGERLGPWAKJII", "SJYWTSOAXYMSQJNPQIVYSYIJZJBJJPXOVSTOVMFMCDMIVMLWHM", "RPWQVPQCBIZLQPGOPQUSXTYUIEKYQZZYOPBUXWNSTLLJNYZGDA", "OZJRSUDCGAGKYZLIVAZFFZUXHLYDCYQPNZOITVTRPMZOWTATFE", "YOPURTEBPRSJIEKWWUDEICWVNMZZBTSCMNTVSJQTQKPYUVSZHI", "UMNUVINFZODHDFVTXXKJMZUOBHOWYXBBLMKWIRNOPWRSXWJEYJ", "LSWZWSXYZCXHGBSWYNPONYXAWNZFIAWHIZRZVHSMQIHYWPYZFN", "NKRYZTZVUGIVBATUZILQRFYWTVRQUVGSVYYJWGFRHGOKCAXPGI", "DEJYVOYMHFJTWXVTQYXUESTYVQSSTOGXXZXYZZYWUEPMLSTMMK", "BCXSWUPSLBYKYSRYLKSWIGPUPZUWCBFHISTPRWUVDTSRQPLNSL", "ZYWXVRGBCDZLZPQRMOBOJOPOLZUVHODEJMSQQSLCBSTUIKOLRD", "CXZYSHACEMMVMNHYESQEPKNRJSTGBIDCMNOPEDNPRJVEFHWXNQ", "UWIPRNMFHLCAUOFZTURXRQEMTUYXCCJVMJJBFXCQOFZXEGYYZJ", "VUVPQLHGKGFDPTRDRYXKNFQSKVZBLKWQPLVGXYBDENYDFOZUZA", "SRTREKCJFCEGHJSVPQUZVVRPODARMHIHSGHYZAGYIOMJCBNFBH", "INOZYLJGHFNIKLZWMXYRWTYINMENPJYSNMKJBDZLCADFYLOJIA", "STMWXOKABGVQEJKLQNWGXKSZLKFOQMKOIQPIAFDEBOVUJCPQAK", "RNXTPSUVUZCAIYLCJIGSYYMAQJGURVTKSEUMXGJFGNZYJKRMIL", "OQSUVXQWRTDQHAKBDHHRDRSRIHXYWUJILTVZXIVHBQSSKDASUX", "DOQQYWXEZQFRPNBDGIMNQBATUWZXYRNMWRWPOLJKLZDRUXWRVY", "NLHZPKUYNHSAMOLEFJKPJHCVMZKMZPOVYXQNMSJGNJLVYVEGQZ", "MJIGLWLJMKJTCZJMVZLKGFVAUPFPIRNZZZPGVIYZOKMOLJHTRO", "QWVFNKZELCUWHYIOPQUZYYZOPTZTUBCKLYWDHWQPWZQOKZIPSL", "TUVEJORINODYGSXHGTTJLCNVSZXYCTSGZVXECDDOYVPRYZHQGE", "OWKDCSQAPREFIRWDSWJVYXMTUOWMDFRXVQHZHEYPUXSHVXYGKF", "GJYCTABYYQSVBAUVPRAUBZRQPTNGPHGQWUTGIJKQTSAABEFSLP", "HHIBWNVRZXTYTAOANETBTSWZXDCCZJOPLSBXWDTLDRBOCDVUTQ", "LSTVOUTFVSZZSQPIHPDCDZXYVRQBLJKKJCEDCTUDCZCIYXVMLJ", "MNOQBMQSUDKYXUOLORSWEJLMSODBAVSFIHAYSWETABDGKWTNMR", "UPMTQNJREFJLBWVRMTRFPCNOJENOABEMTILKQRGEUUWQYNMOGD", "VZYMWGAABIWXDMSPUMNGABPQFMPTRDNJLONPJNHGYXTOLWXZEF", "RITXLQOCFZYBCIZYLKKIAZEYUJLQUOSYVRPNOIBCQZZJYUYWAB", "HESKMPRDVUMVUHZXRSTLDCYVZJITWVFZXSGYVTIBPRGAQCWJIM", "CGLGHSDJMSTNUGVYWYXASRXUWSIQXEGVWTZXVUJJEJUZBLVXYP", "HBFHVTUNRPSVTSXAZVXWQWVZGXRAYHRCDWYWWRLMOTVYWUFGSZ", "OQJECAWVQJKPCRUDUWVUTSVXYHCZIQBSPUVXWVENPSYVXHTNZV", "RTKBBDXZJGFDGQGEXTPRORQSBBKCDAPKTQUVZEUIRGZYUSGOUY", "SOUWXQTYYUCQOPMFXYSLQQOYTRQDBOJZYVSTYTNINQXWTEQMXT", "UTZZYMUXZTBOKNKNFQWXXNOFZPNQNIWIUTWXLRSMROPKODZNLJ", "DCAYXUSRGSLADLMTUVRYDMJICSLMIHQXYSGHKPXKSVULNRYWKY", "GKDGBTQNJHEMMNKHEAYCOLJHECMKJTUZVBPFNRTWVTBNMSXEJB", "JEFAVTMAICGLCAJGWXBPMJKABDEMPRCWAJLOCPPQUSFRQPOSDI"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 12;
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<string> grid = {"KVWXYQABMWPGDPQLUTUTNMRYZWBFDPONWZQMCXRMCOSUUTNMK", "ADUSZTMCXYIHMOKRWVVYKLGZXVJZGLMPYXFOWUYLNLPVWOSLJ", "BCTRZWKEDZTSRIFGNXTIOPKFIWKZWVQRSTZNTWVZIKIJWZRPE", "YXWQPOLFKRSPRQKEKCHGEQRJTTTSLNRSOUVHYXKJORSEYQQON", "SZEDINGMOQTYPONCDZDFXLMSULBCRQSLTXXWZFELBYTRSRWTY", "WYCBDERNOZUKWVYSTAZNPQXDWXKHFACKUWSYAONMZWVYTRUXY", "XVJGFQTPNTYZBVRLUOUBTXZZYQGLMOJIFHQOMHPVWZFIJYUIZ", "KIHKVPAQRSEXUOQMGVADCCZVIDFMNNZGZJKLNCVWUTMLKABVG", "NPLYZLOZRELSYSLZWFEEIABQGKLKOSOXYKHFDSUXPQSPTCWFH", "QOXYZNMATKXEFJYXKOHHJCQRUDHXZTPMLIZLJTZVURZVURPXI", "NRPWJLHCBJKDMQJHJIFLKPMTNVWZYWRNBYZVIYTUTXYQPBGYK", "SULPKIGFAHCAABGFTFJLMOTEFAYNZXNOVXYZZSQHVCKLOCZZZ", "LTONRFCDERMJCAHUWTIINJUCDFWXYQHJPQTXWPONGIQRDMCYY", "KGJCNOEWSYRDEZPKZSJHDHIAWEVZYXHGNTZHELOYWDPUVEXTV", "HKLMPUVFOSTXYZRQJYYAGFHGFKLUTZCQYSGYINPVTGEITKFSA", "ATNOWXCLNVWSYGMSXXQGCBBEJJTMXYROZBDXXWSTHCDBHIJGT", "NPUVZBAMURSIRHHLKWWIKTUIHSSOVWNOAACYWVKIOECGQZHPZ", "OPQYWYOSYLNKUIGNIJVRSBOBCRQFSMKISYZHUYSJXEIBNPMNQ", "SRAEWXPQTMWXUQJAJMQUTPNNYWPYNMLJUCFRTLRHVFAKMVZTW", "KJIFKVONUIXFZNYKFAPXCAOTZVXVUFGZCDFSFEIQKZGXWQUTS", "DLWANLYMVWJYPOWKLERSPTYZVWLFEBZYXEANHRTUANGZYWPQL", "TVYXBCZTHIIQDZYXOPOPMQVMQPAKXDCEQODVMOJLSHMZNSOBK", "SUFZZWVAFGAOWIRUSQXLGURKINMBUZDCNGHYNZYRQTITUQWUT", "RXVVXYUEABAEHDETFRWYMYUWKVOMAVABMGHZUXSQOEUSWVGED", "QWYUHMNTPBBBGFNBEHVCZRXKSFWJYZLLKIWTUZYPSXYBXYZFB", "GZVUTRQESMBOQWCDPZUSYMJILXXNRSEKGVLXUVEFOWZYJICSM", "ERQJTSPRPONLMNOMFQQTZZCDMVYUOTUHPLYVYHFQZNZKXKEYL", "GILKZONGQJKJKSEGREPROJBHFZDAOPIVORUZYZKPOZMFKSQZX", "HPJMNONHKRITMLFDHDJONKLTOPTUONZHJBBAXFJLWYCLRNGWH", "MNCDZUIMZKJHWURCEQCZYMNPRSXWXYMLJCACUWKTURXWSTVBF", "LKDCYRQPYELGXYZTFEABWITUVMVUSWOPKFHTVJLNZVWVUPQKJ", "GFJTMXKXTANMQXLIJAXQTYZUSSRUWXXOFJISHWMSSBIFYOYMA", "ABHFULWSWQXDMRPHQKFVRWXHTQPVZXBYGQRTGLRNTKJHNYXQK", "ACGCLDKRVVYLSNORRPLGOYZJVXZOQYSZXPTDFXMMLKLMEHXJL", "GDDHNZCUIZKZAOSTUWHSTNOBYWULXWZSVUOQPZNXZHJDIGJKM", "QZQFYJBLYYXWZGEOLZXIRMCNNMPKRJMQXXLNFOYYVSWXWFRQN", "WXRSWXMNXWXXLCMNPYIJKLHJKOZQSGNOYWKAIHZUPOKZUGMOP", "OVSTTQYRWROMXWWKTRXWYGIBEFRRTRPZFECURWAQQPLIHAFNV", "LWUPSRTSUYONIDJXTUQSKUFCEGQJYUWGJCVWJQKIMRRMNYETO", "ZTVZOKYTVZXFGAHICXYPTJIHDFPRWVHTNBAWXJHHBVGUVXZCX", "YPVXNYXSTUGARSNGEBNZLOAEKMNOQDEWXYXVSNGFBRSTWIJYM", "HOIMVXRBEFBCPQLMFKLAESDJILMVONVGZJYZORMECQFCHJRIT", "FGNULQCABDWSTTVKJHAPABCFDCLUCDKQTZMJRLVUYEDAKDTUV", "RBTVPZFHCMTUTUPGKHZYQEGDPHVMTSLMOGYISQXWDEBALXRVX", "QSHIONIUNNLSLONYHJLWVFHIIQNQVMPIEFHHCBYVAXFGAIJPO", "PNKHMHOVTOKSKBAIZIITUGMLWJOZYQLOKDWIFZRUBYYYHKQNO", "OJHWJPGFLPRDICJEHAIITJLSZUWXVNPKRACZEGHBTJRHGFFTN", "CGJKVKDZOYGQNGHFUBTLRSGMTYZTWUMNKJJIUBGVHSIPEZYNW", "BFZMXWCYZULEJIGGCUMRPYNWSUCUZSVLXCYFTVFDQROHZSXXV", "EADGZYBATWVKQGFAILKNXZXTVQBARQPWZZLXWGEUQPNTZWTJI"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<string> grid = {"AFHNFBCDCYXWMLVXYJHATUYXWVYFEGHIGDWXYPRZAABBCEINYY", "IHOPBEJESUZUVNOZAIBBCSVRXLHGXYJIHAVUCOOXYSSRDTWVXZ", "JKDXQISMYWTRQDRTHBJXZVUWQMRWVUZSTNTYEDPSETQOURBNWK", "ENLVRYQZXQGSECQRCDCLYFTSMZBUEYOMQPJAZHPWZMNPZZYXJV", "OMMUVWZWWUBFUVSSEDSYMKLURQMCFUTRTNOLKWVVMYLWSFWIEO", "RKAFTWYXVJTMXZFHXLRWVBMEVLNGFZVZZBMCGFUHPSKBEGHVUN", "LJSZQDJIYRHINYGJNMHXAUXWZSPHIVYWGJNHOQEZIJPIIFBRBT", "ZYVWYSHZRZGJVHNMLGFXYSYYFRQNUGFHXRQVPBDXBMNEJWVQCA", "MWUQVWTTUSPKESIFEAFAZQPRSYRTKYWEYZSTJACCVJLHZXSTRP", "LVUHZUMVYRQOLDSGOPICPOQOLMOSAMDTWXNTKNDABAAFPQGHUQ", "SQGQYQLXVTNRONFHJNTAQRSNKUNHOBCQPQYZLJEBNBIQOZYIVG", "RFJFVOPGPNSWPMMKTFXYCLFMQWZJPNLJEFUYGLUOCMCERXVOYT", "EYGEKYXQLOMYVLKCGBAKZKLKJEGOKQRFEJEPXHVTPDZSTWWZZX", "NXSRVUTBJGLWUTDJHVCMFTRQLDFHQSMLBSVWOZUNDCBGUUSYAC", "MIPWTMSUHIQOAJCIZQPNJRHUVWZNQPSQPUAXGYWVCVFNYCXRDL", "LQZSXURTVSRPMCKHRSOLMKEQBZXXWJNQOSTBCFXSGTRZQOJGQA", "ZKPYOMPYOPTVKLGHITTPKLFLIIHKUVWXNZDHAYRRQLSRNPFODC", "HFHIJOIXZLUWMXYVUQUKTNMVWHJGLNYLUMIGEZTQPQTMSIMENF", "ALGZXKKZJALNBOAZRWPNMIHXVHGEMZWKELGGSUVKYZNRITZUHM", "BAXJZYLZWKPMNPQRWLOECMYWKUROAAJAIHUZPXJHHXTZUVYVFD", "ONMUUTRYPHIQYWUUTVABNOXQTLPNFIHTBACZXIIEGWYXXXWWCE", "PGVWJJSQGEDJTSWVYSBAKZYDSYCEPRFCDABWYARBFHXTWROXRA", "ASRKXYZEFFFIURPQZARBJSHCGRSQVUQKIBCVLQUTIYUVSPCPLP", "BZCHJFDDHUHAYXOYJCPQCDFGQOPPRWYPLHUNPKFVXZTQJHOMNJ", "CLBIGCKVCTSMZPWNKOMGKQPHPPOSOXJZOGTQJORAWVQFUNKJPO", "FNSRBYWRBAEGCYQYHLNPPNYXIJTWXSPEJYSRIHTQUOWEQYMFFQ", "GPOTAUXPLAIVXRZKLYWQCADWIUVVTRTDANRSZVOVTNDAXPUUSR", "FHPCGYTZSBDWIQPMFIXUZSEGLYZWUYUWCQVLTJKLMNXGYOVWDA", "EHXDXFVZTYCTSQHNMHDCMNOMXOZAXQXVNBAUGIANPYMPQAXMKY", "WILWEISYRZXNXWVEFGCABJZYZYHCUYJYZXIHGHENOSZSBYZLIF", "LOFYKTPXMVUMYUJMDAALAKLXFUVXZNOTIGSFXUTSONDCRZBDMM", "NRPELLWLPLRZGIZBDOBGQBQTWLPLMPSXUAELMWORQFEUVAYXPO", "TSDEGZSVBZTHIIYFTXUCDNRSUVVTJQRWSCDCNYUPWFEWOGUSFO", "YZCKMRLPABDXVRWURSNLGHWHUTUIHNMRTEBUZMXZYXEXNZDERP", "ZVYBJPQRQZCTSAQDQPMFITXEENGFMBAQXZEVWLWIVGIEDBQZUV", "YVGBAOCULKYWEPICBHJJGTDRKMVGEDZWVYONTZKJPNFIZCAUVZ", "ZBSZZAATKOIXVSOMAGIKPFCBAWNHLDPBKLRSLYVQMONHFBBYWY", "QREYWSQWPLNXBFNLCCBQLPOSTZGFIKQRCUHIYXWRLTOGEACSXM", "LPXUSQPSTSJUYEYZUZXRSONRLYCJIOKRTEOZWIAKSRUZYDRQCO", "BWVTROPBGRTKVYSUPYZTUNFQONKLPLOSQPWVYFJFCJVMBXHGDP", "CNMIMJCTAAPQYWZGHKNVHQCPWVMUUTIOLMUTNGPEIJKCDNWTQJ", "DEGULKDXNLRAXLBXHKLZXLAFHXZWADRPQKUOSROHKNTEMLVSBL", "QFRVXZXHIKBSZYGMNMCDJSNAYGXYGCMJJMNPQQVNSSOPEUTPNA", "OSQUWNFGUJLSXXFVKOSARCACBFWBPNVBIEZMXSUQWRZYSIJDON", "TWLXYZMUPMANTWBAUTRQDCPQZYVMNOZAHQYXYTUXZQXVRHITQQ", "XZMHUQLDOQNQWUVTXZJGEOSTJZLJZPGSDGFZWVTBYIWWULYVFC", "HYGRTSMFURMLPRUEMYLNNYYXUSTYNMHFWFKVUOCSRHJUXVHHGE", "CBSWVLONAXSYFKIHRKHMNPZVYXRXOLKVUONAMNZAPQKTKTMNBD", "HOPXYHSBWCYHFUDGPVJIOSTEVWFWBICSTPMLDJHEFNMLSXWVXY", "FMNZGIDABSZQGSOLZJILRHIBVEQEZLNFRHQCKUDCFEHKYZOPZH"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 10;
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<string> grid = {"ABCDEFGHIJKLMNOPQRSTUVWXA", "ABCDEFGHIJKLMNOPQRSTUVWXA", "ABCDEFGHIJKLMNOPQRSTUVWXA", "ABCDEFGHIJKLMNOPQRSTUVWXA", "ABCDEFGHIJKLMNOPQRSTUVWXA", "ABCDEFGHIJKLMNOPQRSTUVWXA", "ABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXA", "ABCDEFGHIJKLMNOPQRSTUVWXA", "ABCDEFGHIJKLMNOPQRSTUVWXA", "ABCDEFGHIJKLMNOPQRSTUVWXA", "ABCDEFGHIJKLMNOPQRSTUVWXA"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 25;
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<string> grid = {"KCBVNRXSPVEGUEUFCODMOAXZYWEEWNYAAXRBKGACSLKYRVRKIO", "DIMCZDMFLAKUUEPMPGRKXSUUDFYETKYQGQHNFFEXFPXNYEFYEX", "DMFRPZCBOWGGHYAPRMXKZPYCSLMWVGMINAVRYUHJKBBRONQEXX", "ORGCBHXWMTIKYNLFHYBVHLZFYRPOLLAMBOPMNODWZUBLSQSDZQ", "QQXUAIPSCEXZTTINEOFTJDAOBVLXZJLYOQREADUWWSRSSJXDBV", "PEDHBZOVMFQQDUCOWVXZELSEBAMBRIKBTJSVMLCAABHAQGBWRP", "FUSMGCSCDLYQNIXTSTPJGZKDIAZGHXIOVGAZHYTMIWAIKPMHTJ", "QMUEDLXSREWNSMEWWRAUBFANSTOOJGFECBIROYCQTVEYGWPMTU", "FFATSKGRQJRIQXGAPLTSXELIHXOPUXIDWZHWNYUMXQEOJIAJDH", "LPUTCFHYQIWIYCVOEYHGQGAYRBTRZINKBOJULGYCULRMEOAOFP", "YOBMTVIKVJOSGRLKTBHEJPKVYNLJQEWNWARPRMZLDPTAVFIDTE", "OOBFZFOXIOZFWNIMLKOTFHGKQAXFCRZHPMPKGZIDFNBGMEAXIJ", "VQQFYCNJDQGJPYBVGESDIAJOBOLFPAOVXKPOVODGPFIYGEWITS", "AGVBSRLBUYOULWGFOFFYAAONJTLUWRGTYWDIXDXTMDTUYESDPK", "AAJOYGCBYTMXQSYSPTBWCSVUMNPRGPOEAVVBGMNHBXCVIQQINJ", "SPEDOAHYIDYUJXGLWGVEBGQSNKCURWYDPNXBZCDKVNRVEMRRXC", "DVESXKXPJBPSJFSZTGTWGAGCXINUXTICUCWLIBCVYDYUPBUKTS", "LPOWAPFNDRJLBUZTHYVFHVUIPOMMPUZFYTVUVDQREFKVWBPQFS", "QEASCLDOHJFTWMUODRKVCOTMUJUNNUYXZEPRHYOPUIKNGXYGBF", "XQUPBSNYOXBPTLOYUJIHFUICVQNAWFMZAQZLTXKBPIAKXGBHXX"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 19;
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<string> grid = {"ABCDEFGHIJKLMNOPQRTUVWXYZ", "BBCDEFGHIJKLMNOPQRTUVWXYZ", "CCCDEFGHIJKLMNOPQRTUVWXYZ", "DDDDEFGHIJKLMNOPQRTUVWXYZ", "EEEEEFGHIJKLMNOPQRTUVWXYZ", "FFFFFFGHIJKLMNOPQRTUVWXYZ", "GGGGGGGHIJKLMNOPQRTUVWXYZ", "HHHHHHHHIJKLMNOPQRTUVWXYZ", "IIIIIIIIIJKLMNOPQRTUVWXYZ", "JJJJJJJJJJKLMNOPQRTUVWXYZ", "KKKKKKKKKKKLMNOPQRTUVWXYZ", "LLLLLLLLLLLLMNOPQRTUVWXYZ", "MMMMMMMMMMMMMNOPQRTUVWXYZ", "NNNNNNNNNNNNNNOPQRTUVWXYZ", "OOOOOOOOOOOOOOOPQRTUVWXYZ", "PPPPPPPPPPPPPPPPQRTUVWXYZ", "QQQQQQQQQQQQQQQQQRTUVWXYZ", "RRRRRRRRRRRRRRRRRRTUVWXYZ", "TTTTTTTTTTTTTTTTTTTUVWXYZ", "UUUUUUUUUUUUUUUUUUUUVWXYZ", "VVVVVVVVVVVVVVVVVVVVVWXYZ", "WWWWWWWWWWWWWWWWWWWWWWXYZ", "XXXXXXXXXXXXXXXXXXXXXXXYZ", "YYYYYYYYYYYYYYYYYYYYYYYYZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZ"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 18;
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<string> grid = {"YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW", "VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV", "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU", "TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR", "QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ", "PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM", "LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL", "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK", "JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ", "IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII", "HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH", "IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII", "JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ", "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK", "LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL", "MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP", "QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ", "RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT", "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU", "VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV", "WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 25;
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<string> grid = {"ABCDEFGHIJKLMNOPQRSTUVWXAZ", "ABCDEFGHIJKLMNOPQRSTUVWXAZ", "ABCDEFGHIJKLMNOPQRSTUVWXAZ", "ABCDEFGHIJKLMNOPQRSTUVWXAZ", "ABCDEFGHIJKLMNOPQRSTUVWXAZ", "ABCDEFGHIJKLMNOPQRSTUVWXAZ", "ABCDEFGHIJKLMNOPQRSTUVWXAZ", "ABCDEFGHIJKLMNOPQRSTUVWXAZ", "ABCDEFGHIJKLMNOPQRSTUVWXAZ", "ABCDEFGHIJKLMNOPQRSTUVWXAZ", "ABCDEFGHIJKLMNOPQRSTUVWXAZ", "ABCDEFGHIJKLMNOPQRSTUVWAYZ"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 26;
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    vector<string> grid = {"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH", "IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII", "JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ", "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK", "LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL", "MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP", "QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ", "RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT", "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU", "VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV", "WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD", "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH", "IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII", "JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ", "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK", "LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL", "MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM", "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP", "QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ", "RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR", "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS", "TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT", "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU", "VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV", "WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 24;
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    vector<string> grid = {};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 26;
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    vector<string> grid = {};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 26;
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    vector<string> grid = {"BCDEFGHIJKLMNOPQRSTUVWXYZ"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    vector<string> grid = {};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 26;
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    vector<string> grid = {"ZYX"};
    ABCPath* pObj = new ABCPath();
    clock_t start = clock();
    int result = pObj->length(grid);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=15231364&rd=7227&pm=4678
********************************************************************************
#include <algorithm> 
#include <string> 
#include <vector> 
#include <list> 
using namespace std; 
#define forn(i,n) for(int i=0;i<(int)(n);++i) 
#define forsn(i,s,n) for(int i=s;i<(int)(n);++i) 
#define forall(i,c) for(typeof(c.begin()) i=c.begin();i!=c.end();++i) 
 
class ABCPath { 
public: 
    int length(vector <string> g) { 
       int dx[8] = {-1,-1,-1,0,0,1,1,1}; 
    int dy[8] = {-1,0,1,-1,1,-1,0,1}; 
        int res=0; 
        vector< vector<int> > m(g.size(), vector<int>(g[0].size(), -1)); 
        list<int> qx,qy; 
        forn(x,g.size())forn(y,g[x].size()) 
          if (g[x][y] == 'A') { qx.push_back(x); qy.push_back(y);  
            m[x][y] = 0; 
          } 
        while(!qx.empty()) { 
          int x = qx.front(); qx.pop_front(); 
          int y = qy.front(); qy.pop_front(); 
          forn(d, 8) { 
            int nx = x + dx[d]; 
            int ny = y + dy[d]; 
            if (nx >= 0 && ny >= 0 && 
            nx < m.size() && ny < m[0].size() 
            && m[nx][ny] == -1 && g[nx][ny] == g[x][y] + 1) { 
              m[nx][ny] = m[x][y] + 1; 
              qx.push_back(nx); 
              qy.push_back(ny); 
            } 
          } 
        } 
        forn(x,m.size())forn(y,m[x].size()) res >?= m[x][y] + 1; 
        return res; 
    } 
 
}; 
 
 
// Powered by FileEdit
// Powered by CodeProcessor

********************************************************************************
*******************************************************************************/