/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=8413
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class TheBestName {
public:
    vector<string> sort(vector<string> names);
};

vector<string> TheBestName::sort(vector<string> names) {
    vector<string> ret;
    return ret;
}


int test0() {
    vector<string> names = {"JOHN", "PETR", "ACRUSH"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JOHN", "ACRUSH", "PETR"};
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<string> names = {"GLUK", "MARGARITKA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"MARGARITKA", "GLUK"};
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<string> names = {"JOHN", "A", "AA", "AAA", "JOHN", "B", "BB", "BBB", "JOHN", "C", "CC", "CCC", "JOHN"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JOHN", "JOHN", "JOHN", "JOHN", "CCC", "BBB", "CC", "BB", "AAA", "C", "AA", "B", "A"};
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<string> names = {"BATMAN", "SUPERMAN", "SPIDERMAN", "TERMINATOR"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"TERMINATOR", "SUPERMAN", "SPIDERMAN", "BATMAN"};
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<string> names = {"IVAN", "PETRO", "STEPAN", "OLEG", "IHOR", "VOLODYA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"VOLODYA", "STEPAN", "PETRO", "IHOR", "IVAN", "OLEG"};
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<string> names = {"A", "AABABAA", "ACAAA", "AACBAAABC", "AACBAA", "CAAAAACC", "AC", "C"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AACBAAABC", "CAAAAACC", "AABABAA", "AACBAA", "ACAAA", "AC", "C", "A"};
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<string> names = {"CAAAAABACC", "ABAACA", "BCA", "C", "CAA", "ACAAABCCA", "AAACAA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"CAAAAABACC", "ACAAABCCA", "ABAACA", "AAACAA", "BCA", "CAA", "C"};
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<string> names = {"CACAA", "ACAAA", "BBBABBCB", "A", "AAA", "ACBAA", "AACACB", "B", "AAAAB", "CBACA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"BBBABBCB", "AACACB", "CBACA", "CACAA", "ACBAA", "ACAAA", "AAAAB", "AAA", "B", "A"};
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<string> names = {"BACAC", "CAACBCA", "ABABAB", "ABACBAA", "AAA", "C", "BCACC", "AAACCACC", "BACCA", "BCAA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AAACCACC", "CAACBCA", "BCACC", "ABACBAA", "BACAC", "BACCA", "ABABAB", "BCAA", "AAA", "C"};
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<string> names = {"CCCBBB", "ACCCC", "ACA", "C", "A", "ACC"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"CCCBBB", "ACCCC", "ACC", "ACA", "C", "A"};
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<string> names = {"AAACC", "CACCBBC", "AAA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"CACCBBC", "AAACC", "AAA"};
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<string> names = {"CBABC"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"CBABC"};
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<string> names = {"CCA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"CCA"};
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<string> names = {"A", "A"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"A", "A"};
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<string> names = {"A", "A", "ABCABA", "CBAACAC", "BAC"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"CBAACAC", "ABCABA", "BAC", "A", "A"};
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<string> names = {"LILOKJMQML", "LKIIQIKIIIOMPOIOQOQOORNKIK", "QNQIJMIONIKIMI", "PRRRNKQKIMIIIQMNIO", "IOKKMPMIRMMPIKM", "NIMMKOQNRJKIMIQKL", "MOKIQIOQIQKNQMQKRKQII", "PQRNIIQRMORMONOKIMPM", "LLMNKIOIMOQNNOIQQKMKRI", "QOQKINQQMNQIQO", "OQIROIMIIJQNKOJO", "NNMKIIKINIKIII", "NMOOMMKQIIIIKMOKNQNKIMQPNI", "KIJPIIMIQIMNIKIQOJII", "KIMIINOKKPRK", "MKNPNQIOOQLOJNOIOMNNIMNIRKQQ", "IOILNMPKOQIIIMIRII"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"MKNPNQIOOQLOJNOIOMNNIMNIRKQQ", "NMOOMMKQIIIIKMOKNQNKIMQPNI", "LKIIQIKIIIOMPOIOQOQOORNKIK", "LLMNKIOIMOQNNOIQQKMKRI", "PQRNIIQRMORMONOKIMPM", "MOKIQIOQIQKNQMQKRKQII", "PRRRNKQKIMIIIQMNIO", "KIJPIIMIQIMNIKIQOJII", "IOILNMPKOQIIIMIRII", "NIMMKOQNRJKIMIQKL", "OQIROIMIIJQNKOJO", "QOQKINQQMNQIQO", "IOKKMPMIRMMPIKM", "QNQIJMIONIKIMI", "NNMKIIKINIKIII", "KIMIINOKKPRK", "LILOKJMQML"};
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<string> names = {"IRKLQIIQPMOINOOKMNIQ", "QNOIIILMMILJ", "INMOJPROIQ", "KIPIOQIIPKPKIQNNMIQNKO", "OPIKNIOOKQININK", "IQRKOKKQKJ", "KIMIMQPKKOIORK", "KLNQNKOIMQPNLIMNN", "IOQIOIJNIM", "MMMIRKINMJNIMI", "PIMOONOOKMIKMN", "OMILQORKIOMIKIMKM", "KQIJMQKOOOKNOMIIK", "OINMKOQINK", "IIIIMQMKMNNI", "IIMMJIIIKOQORNQJIMNOQOKIOLR", "NNINMKINROQQIOI", "KIOIIKMLNIKKQOMIMOMKIIMMMP", "OOMOQIKIMLKOQQ", "OOMJIIORIQIQRNRQIK", "RIMIJNLIOK", "IQIQIOMMNQIKQQONNO", "IIOIIIMOQOOMIQPNIOLK"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"IIMMJIIIKOQORNQJIMNOQOKIOLR", "KIOIIKMLNIKKQOMIMOMKIIMMMP", "KIPIOQIIPKPKIQNNMIQNKO", "IRKLQIIQPMOINOOKMNIQ", "IIOIIIMOQOOMIQPNIOLK", "IQIQIOMMNQIKQQONNO", "OOMJIIORIQIQRNRQIK", "KLNQNKOIMQPNLIMNN", "KQIJMQKOOOKNOMIIK", "OMILQORKIOMIKIMKM", "NNINMKINROQQIOI", "OOMOQIKIMLKOQQ", "OPIKNIOOKQININK", "PIMOONOOKMIKMN", "KIMIMQPKKOIORK", "MMMIRKINMJNIMI", "QNOIIILMMILJ", "IIIIMQMKMNNI", "INMOJPROIQ", "IQRKOKKQKJ", "OINMKOQINK", "IOQIOIJNIM", "RIMIJNLIOK"};
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<string> names = {"INIKIKPRIO", "IKKJQIOJIMKRI", "RKKKKIOIOQ", "IIKPINOMKILNQP", "IMOOILOOMR", "MMQQNLIOKIKINLMIPININQMKM", "IPNQPQMQOIIJMJIKKONQIMKK", "IMOIQIRNQNKIPINQKOINMINMQQ", "OKIKOKNMQOINMILNIPQKIM", "KMNMKOIMMN"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"IMOIQIRNQNKIPINQKOINMINMQQ", "MMQQNLIOKIKINLMIPININQMKM", "IPNQPQMQOIIJMJIKKONQIMKK", "OKIKOKNMQOINMILNIPQKIM", "IIKPINOMKILNQP", "IKKJQIOJIMKRI", "IMOOILOOMR", "RKKKKIOIOQ", "KMNMKOIMMN", "INIKIKPRIO"};
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<string> names = {"LPPIIIINQMMIIIIMIIMIKI", "IIIQQINKIOKOMQINN", "IJNJOPMRIKP", "QINQOIIINIPI", "MIKMNIINROPIOKOKLIPMLLNNI", "KKNMQKMIIOKIMIKINIIMNI", "KQINMOIQKO", "PKIOLPIIOINOIOR", "IKLIRLNMNMPNQO", "QKLKPMKKPIIIIMIIOIIQNN", "QJMPQQIOIKNOILIIKR", "IIKNRIIKIQ", "OOQIOIIKOM", "MPNIINKOQOQIO", "KNOIPKMQROKIIKIOII", "KNOMIOOOMONQRI", "QQIQIIIOPI"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"MIKMNIINROPIOKOKLIPMLLNNI", "QKLKPMKKPIIIIMIIOIIQNN", "KKNMQKMIIOKIMIKINIIMNI", "LPPIIIINQMMIIIIMIIMIKI", "QJMPQQIOIKNOILIIKR", "KNOIPKMQROKIIKIOII", "IIIQQINKIOKOMQINN", "KNOMIOOOMONQRI", "PKIOLPIIOINOIOR", "IKLIRLNMNMPNQO", "MPNIINKOQOQIO", "QINQOIIINIPI", "IJNJOPMRIKP", "KQINMOIQKO", "OOQIOIIKOM", "QQIQIIIOPI", "IIKNRIIKIQ"};
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<string> names = {"NILIQNPLOI", "IIIQIIMJOQIIPIMN", "OOMORJIKOKLRN", "KMRMMNQMMK", "MKIIJOIQKJIKIPKIIORJIINOMIMIM", "MNIQIJMIMIIOIIIOOIMLQNK", "NOIIOIMMNMOMKQQNMIMI", "MRKOQMLPMN", "QNILILKOOKIIOKNINIRQIMNIOQMK", "OOMKIKIMOKLIQQOKMMMLMIIIMJLIO", "KRIQQJKIOIOKROIKPLKO"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"OOMKIKIMOKLIQQOKMMMLMIIIMJLIO", "QNILILKOOKIIOKNINIRQIMNIOQMK", "MKIIJOIQKJIKIPKIIORJIINOMIMIM", "MNIQIJMIMIIOIIIOOIMLQNK", "KRIQQJKIOIOKROIKPLKO", "NOIIOIMMNMOMKQQNMIMI", "IIIQIIMJOQIIPIMN", "OOMORJIKOKLRN", "MRKOQMLPMN", "KMRMMNQMMK", "NILIQNPLOI"};
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<string> names = {"OMIROQIJMMJIIJ", "MKIKOQIIIMJRIOLMMIKM", "JOHN", "PQKOJIKILQ", "NKMPLMJIIPIPNKPIPNIIIIQOMIKL", "JMIMIMQIKMQRQQIR", "IMQLOPIQLQ", "NMROIQMNMMIIKMIQIMQQNLKN", "KMMMIJIRIIIMINJMRMILIININIIK", "NKMPQQIKPQNIOQRII", "PKKPMLMIOMMNMLNIQNPNIIII", "KNQKIKIIRMNLKOOIKOLOOK", "IQRIMIIQJI", "NNIMQINOOMMQKIOIJKKIONON", "KRINIIKJJRRIMIOR", "KOMQIMOROK", "JKLQQQMOIKNOOONKQLIJKKKRK", "OORJOKNOIIKOKKNQOKIIOQOM", "OQMILIKOIIKNK", "INOKNKMRKIIMIQKJIIPJNKQN", "JOHN", "QOOOQQOLII"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JOHN", "JOHN", "NKMPLMJIIPIPNKPIPNIIIIQOMIKL", "JKLQQQMOIKNOOONKQLIJKKKRK", "KMMMIJIRIIIMINJMRMILIININIIK", "NMROIQMNMMIIKMIQIMQQNLKN", "OORJOKNOIIKOKKNQOKIIOQOM", "NNIMQINOOMMQKIOIJKKIONON", "PKKPMLMIOMMNMLNIQNPNIIII", "INOKNKMRKIIMIQKJIIPJNKQN", "KNQKIKIIRMNLKOOIKOLOOK", "MKIKOQIIIMJRIOLMMIKM", "NKMPQQIKPQNIOQRII", "JMIMIMQIKMQRQQIR", "KRINIIKJJRRIMIOR", "OMIROQIJMMJIIJ", "OQMILIKOIIKNK", "QOOOQQOLII", "IMQLOPIQLQ", "KOMQIMOROK", "PQKOJIKILQ", "IQRIMIIQJI"};
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<string> names = {"ONQOORJIJIMKQ", "RPKIIINRORQONQQQNOIOMIKPILI", "NQIIOIMKRIOIMQNOOJKRIIQMK", "QRQIIIQKNIIQQI", "KIIQIIQKOONIQIRM", "MMIIMKRKQIQIIO", "LIQKQRNRQOMKMQO", "IIOPPOIKPR", "LKQRKONKKI", "QINQRKKKKKLIIKMOIMKI", "JNRIQONKIQIOOKIIIIRKIKI", "IIOIOIOIMOIIILKNIINI", "IQPLPIIJMJ", "MPOOOIRKIIIIMOIIOKLNN", "KJQMLKOLJIMINROOROMN", "MQKIMKOKNNLJMNIQKIKN", "OIIOIPOIRI", "OOOQNKMQJIKJIIOQ", "KOQIINIILO", "KNOKOMLIOK", "NKNRIIPIKN", "INNNOIKIQMIMOOPIQQIIIQIPNMIOO"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"INNNOIKIQMIMOOPIQQIIIQIPNMIOO", "RPKIIINRORQONQQQNOIOMIKPILI", "NQIIOIMKRIOIMQNOOJKRIIQMK", "JNRIQONKIQIOOKIIIIRKIKI", "KJQMLKOLJIMINROOROMN", "MPOOOIRKIIIIMOIIOKLNN", "MQKIMKOKNNLJMNIQKIKN", "QINQRKKKKKLIIKMOIMKI", "IIOIOIOIMOIIILKNIINI", "LIQKQRNRQOMKMQO", "OOOQNKMQJIKJIIOQ", "KIIQIIQKOONIQIRM", "QRQIIIQKNIIQQI", "MMIIMKRKQIQIIO", "ONQOORJIJIMKQ", "IIOPPOIKPR", "LKQRKONKKI", "KNOKOMLIOK", "NKNRIIPIKN", "OIIOIPOIRI", "IQPLPIIJMJ", "KOQIINIILO"};
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<string> names = {"JMPNJIOIJMNMLRKMIKIM", "QJLJLQRRININQOJQNMPL", "MIOILMIJNQKOKNMMIPIMIOLIII", "OOIQOMIKQKOINJKI", "MIRKQNIIKMIMOM", "IQRQPLKKPOIMQOK", "IQQNOKOQQO", "MIINQKOKRJ", "IINOIIKMMQKQIPJMQO", "KMKOROJNMRKIMQNNKQIMIQIQKQ", "OKIKOIQIRROMQPIJKIQI", "KNIIIKPIQNOIKOQMNOQK"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"KMKOROJNMRKIMQNNKQIMIQIQKQ", "MIOILMIJNQKOKNMMIPIMIOLIII", "QJLJLQRRININQOJQNMPL", "OKIKOIQIRROMQPIJKIQI", "KNIIIKPIQNOIKOQMNOQK", "JMPNJIOIJMNMLRKMIKIM", "IINOIIKMMQKQIPJMQO", "IQRQPLKKPOIMQOK", "OOIQOMIKQKOINJKI", "MIRKQNIIKMIMOM", "IQQNOKOQQO", "MIINQKOKRJ"};
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<string> names = {"QINIIIQRIMNOM", "IIRIMKLMINOQIJJINKMQ", "INMJOIKOIQIOKMKPNIIKIOIIIR", "IKPMQMNMJOPRKIIMJIQIQN", "KIIMMIJPIM", "MPIIMIKJIII", "KLNPPLMMMIMLILRJNNOKNIIJMK", "IIIIIMKPOIIIIIKQMOOI", "MMKIKINKKM", "QKJNQQINION", "NQOIIONOIQIKJNNKLI", "KMIQIPLLRKIIO", "RIOMOINLIMPKOIOLMKIOOO", "PIINNMPIIN", "MINIQIIQMINQJQKMIJIOQOQKN", "IMIKNPIIMQIMPIJQMI"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"KLNPPLMMMIMLILRJNNOKNIIJMK", "MINIQIIQMINQJQKMIJIOQOQKN", "INMJOIKOIQIOKMKPNIIKIOIIIR", "IKPMQMNMJOPRKIIMJIQIQN", "RIOMOINLIMPKOIOLMKIOOO", "IIRIMKLMINOQIJJINKMQ", "IIIIIMKPOIIIIIKQMOOI", "NQOIIONOIQIKJNNKLI", "IMIKNPIIMQIMPIJQMI", "QINIIIQRIMNOM", "KMIQIPLLRKIIO", "QKJNQQINION", "PIINNMPIIN", "MPIIMIKJIII", "MMKIKINKKM", "KIIMMIJPIM"};
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<string> names = {"IJINMJIKONIKIIRPIIIN", "RIMINRMNLKKOI", "QPINQMIKMKNNMMMKMQOILPMIKM", "QOKJJMLIIO", "KNIKIQOPRIIMJLNQQMMQKK", "IMMQKLNIQQIINIIMINKJ", "NLIOMMKPKIIMIIL", "KLOILIONJN", "LIMOOIRKQM", "QQPLONKNIKJLQQPQKMLOKRLQPK", "QQMIMNOQQLNQIILIQNIOIOMNRO", "IILQILQMIIKINQIIIIQI", "ILIIMJIIMKOIMMIRII", "IJKINQKIRQIOQMN", "PINOIQNNIL", "QOOQQIIOQKMO", "INIIQPPILQIOMNI", "MMLKKIKOPPNOILPNIKMKPIOIIOIO", "MLMILOONIO", "OOKPLNQILI", "IMMONIMMMMNIKN", "INKRIQIMIQNIQOKLOK"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"QQPLONKNIKJLQQPQKMLOKRLQPK", "QQMIMNOQQLNQIILIQNIOIOMNRO", "MMLKKIKOPPNOILPNIKMKPIOIIOIO", "QPINQMIKMKNNMMMKMQOILPMIKM", "KNIKIQOPRIIMJLNQQMMQKK", "IMMQKLNIQQIINIIMINKJ", "INKRIQIMIQNIQOKLOK", "IILQILQMIIKINQIIIIQI", "IJINMJIKONIKIIRPIIIN", "ILIIMJIIMKOIMMIRII", "IJKINQKIRQIOQMN", "INIIQPPILQIOMNI", "NLIOMMKPKIIMIIL", "IMMONIMMMMNIKN", "QOOQQIIOQKMO", "RIMINRMNLKKOI", "LIMOOIRKQM", "OOKPLNQILI", "PINOIQNNIL", "MLMILOONIO", "KLOILIONJN", "QOKJJMLIIO"};
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<string> names = {"SLRECEUHKMDGCSHMOCGCTVVVHEKOCGCMMKGRCSCSOOQJG", "CLGGJMEGHCGQOSURVDECGCUEPGSEMUCSKCKORUGUEVOKCC", "JKLHMMKLGILGSRIOCQTGFPQROMSMQSURHSCKUOGOLMUSKOCHU", "KGRUMUSSKMVIMGCCNUROSDSHRGOCCECRCOMCCRGSIQGOKCCM", "MOQSORUROCGKTRCOCDTCCGCUCGRCECKSNMCOCGCCRSEEJ", "LOGOHJHKCISKPSDHSMIQRRMGRCVEUKCSCPHGJOSKCCCGCVC", "MPMECOHCGJCGGJJCETHSGKCKMCLOFUMCKJGSMHIIOGRCKU", "RSCCCFGGMFDCRGSNJLSCUOCJCSKMMTOTECKRRGCKROSST", "CORCSSOKMHMRECKLOSEEKODOCGMGKJEOICIVEOPHKHESMQK", "JRPCGRHMSKMSCNHCGGGGMLOCRQNRCGCTCGSSHSSEGCEGRIGMP", "KSLOCIGMOMGOQEKCNQKESISOHIQCCESCHQOIKCHECCMCQK", "GOQHRCCCQGDMMMOIKSVRKNCGHSKSOCIPLRHCRGECRLSUKCICE", "CSMCOQPRCEOKSQCGIGEMCGGGJISGIKCOMGPESKKSIGDCCI", "VMKMKLRLKCELCGMNHFCSECUCUCSQQRUMOUKIRRSCCSCMM", "GSKSSGCKJRCSPECCFCGCRQSOCCHCOMEJLCSCEENKCSNMGEV", "CLOOEOCSCSKCCEJMRSGEMFRKJCGSICFSIGLGQKUHPCSEMECH", "PGCTMRMHKGOGMTRUTKGUSCCDGNMEOSRKMGEEMGSCKMVHKHEM", "JMRKOSMRGCRQKKIOCOSERGKSCRQCFRCTKECQOGHGESCQGRJO", "JDEROCHGOKCCFKGCFTJCMCCRKGGCMMCQCCQCECCCMKKCH", "OMIESGUCHRCDRDSTQVCOJKMRUSCMCRMJMQMOGHMMHLIJMIOS", "OFCJGPFHHMEOHQUOQMCIOMGMECRCMQRMOUCRQSCUOSTOMS", "FJCCSCHSMSVCOFMLFRGHGTRUSKEPEJQEEJCCMCQCMIMCKRR", "UDQTUKCICEHSCPCMOVMCOHLMMEMUISUMSMCEIGQJHCCHOI", "UIKMSERSMTEQKVSECCOCSCCERIGCIISGIHKVMKKCKCMMSTCDC", "IFCVPMCUVMRCPMURTPSCMMCUCMQNSKCCJCQRIIGSLNMOIOPV", "REGLQQRKGGOGOMCDSMKEDCOMJOCCIVDMCRSQCGCQQHCUCNQCQ", "MCSCMMSIMGPUHEHICMSCQGHQSGEUURGCGCGVOSUGFTGHKRCF", "CPOISEMCSERCHCLKCQHCSKGOISGOCECGSOPCUKSEGGGPGMCC", "QNPMSOLCKKNEMSCSOVICOJFOSMGMCUICQUJQOCQICRQFQCS", "GCLIKCNGGDCMNGECOSUCCCGNLCSFGGMOGTUOSNMECFURO", "GTFGDMMJCTHOTCJHCCCMKSGCEPNGCQMQKCEQKVKUMLCGK", "FIJCUPURQVICUGHGGMCOQCUCGUUHFOHEQGGMNCVCCCGMHNQV", "QCPCCHCHCCOROGTKKCEJKHCSULCMTOOJQFQCSGGRGFHCK", "HJRCMCCOHKOCEMCVGRPEISMOSPSSOCKLMQCMKNCRHCGKMHS", "IGGUECICNEOMIHSHELCHCCODNVLCGCSVOSGUMGSLIENOP", "KKKGSCORSSIHOUPMNOOOLOSIVDSOHSCMEIEEHUSOCCIKI", "QSUQCPCOIMCOHEMRSOHOGLEMCGCUODCCJNROKRKSSSKKS", "PCCOFTRGIGHCCMPMCNMMCICCCVSHKSIVDCNCGOKVJOCCCH", "LSLKSRKKKRICIQMEJCFCRKCCSCQELMSMQKHSINOLCMUGOKVKC", "MMKOHCCKKCOCCUMMKEIIHCKMLGGQMCQOVOKCKCCSPCKEKVR", "VUSQEGKSMCSTTICOTLPOKVEIREOCUMHKVOOOOOPMMOGICG", "OMNRLCKSHOMKMSIOMMMCVOCOCCMSCICSCQSCMCPORCCRC", "MKTPJCCNQNGJSISMVOCMCCQSCCSOFHRODKGPOSFDCGCHVS", "SVSQRGUOMQOIOHRFDGRCKOCORICCICJSMVMSISUROGKDCODC", "MSKESKMCHMCFSORIESGFCSERERVCMTCEHMRRHSCOCKGCGS", "SJMKKMCCUCTRGMSSEMMSIGHCCKSMMDQTRNCIMNGRQPVOGCOM", "GKNPNPKVVMRCRKSDUHGTPGCSMFQMDRKOSOHGGMJMQMIPCC"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JKLHMMKLGILGSRIOCQTGFPQROMSMQSURHSCKUOGOLMUSKOCHU", "IFCVPMCUVMRCPMURTPSCMMCUCMQNSKCCJCQRIIGSLNMOIOPV", "VUSQEGKSMCSTTICOTLPOKVEIREOCUMHKVOOOOOPMMOGICG", "OMIESGUCHRCDRDSTQVCOJKMRUSCMCRMJMQMOGHMMHLIJMIOS", "SVSQRGUOMQOIOHRFDGRCKOCORICCICJSMVMSISUROGKDCODC", "SJMKKMCCUCTRGMSSEMMSIGHCCKSMMDQTRNCIMNGRQPVOGCOM", "QNPMSOLCKKNEMSCSOVICOJFOSMGMCUICQUJQOCQICRQFQCS", "OFCJGPFHHMEOHQUOQMCIOMGMECRCMQRMOUCRQSCUOSTOMS", "GKNPNPKVVMRCRKSDUHGTPGCSMFQMDRKOSOHGGMJMQMIPCC", "LSLKSRKKKRICIQMEJCFCRKCCSCQELMSMQKHSINOLCMUGOKVKC", "PGCTMRMHKGOGMTRUTKGUSCCDGNMEOSRKMGEEMGSCKMVHKHEM", "JMRKOSMRGCRQKKIOCOSERGKSCRQCFRCTKECQOGHGESCQGRJO", "KGRUMUSSKMVIMGCCNUROSDSHRGOCCECRCOMCCRGSIQGOKCCM", "KKKGSCORSSIHOUPMNOOOLOSIVDSOHSCMEIEEHUSOCCIKI", "MCSCMMSIMGPUHEHICMSCQGHQSGEUURGCGCGVOSUGFTGHKRCF", "GOQHRCCCQGDMMMOIKSVRKNCGHSKSOCIPLRHCRGECRLSUKCICE", "FIJCUPURQVICUGHGGMCOQCUCGUUHFOHEQGGMNCVCCCGMHNQV", "QSUQCPCOIMCOHEMRSOHOGLEMCGCUODCCJNROKRKSSSKKS", "VMKMKLRLKCELCGMNHFCSECUCUCSQQRUMOUKIRRSCCSCMM", "UIKMSERSMTEQKVSECCOCSCCERIGCIISGIHKVMKKCKCMMSTCDC", "JRPCGRHMSKMSCNHCGGGGMLOCRQNRCGCTCGSSHSSEGCEGRIGMP", "HJRCMCCOHKOCEMCVGRPEISMOSPSSOCKLMQCMKNCRHCGKMHS", "REGLQQRKGGOGOMCDSMKEDCOMJOCCIVDMCRSQCGCQQHCUCNQCQ", "LOGOHJHKCISKPSDHSMIQRRMGRCVEUKCSCPHGJOSKCCCGCVC", "MKTPJCCNQNGJSISMVOCMCCQSCCSOFHRODKGPOSFDCGCHVS", "RSCCCFGGMFDCRGSNJLSCUOCJCSKMMTOTECKRRGCKROSST", "UDQTUKCICEHSCPCMOVMCOHLMMEMUISUMSMCEIGQJHCCHOI", "CORCSSOKMHMRECKLOSEEKODOCGMGKJEOICIVEOPHKHESMQK", "CLGGJMEGHCGQOSURVDECGCUEPGSEMUCSKCKORUGUEVOKCC", "OMNRLCKSHOMKMSIOMMMCVOCOCCMSCICSCQSCMCPORCCRC", "FJCCSCHSMSVCOFMLFRGHGTRUSKEPEJQEEJCCMCQCMIMCKRR", "MSKESKMCHMCFSORIESGFCSERERVCMTCEHMRRHSCOCKGCGS", "SLRECEUHKMDGCSHMOCGCTVVVHEKOCGCMMKGRCSCSOOQJG", "MMKOHCCKKCOCCUMMKEIIHCKMLGGQMCQOVOKCKCCSPCKEKVR", "CLOOEOCSCSKCCEJMRSGEMFRKJCGSICFSIGLGQKUHPCSEMECH", "CPOISEMCSERCHCLKCQHCSKGOISGOCECGSOPCUKSEGGGPGMCC", "IGGUECICNEOMIHSHELCHCCODNVLCGCSVOSGUMGSLIENOP", "MOQSORUROCGKTRCOCDTCCGCUCGRCECKSNMCOCGCCRSEEJ", "KSLOCIGMOMGOQEKCNQKESISOHIQCCESCHQOIKCHECCMCQK", "GSKSSGCKJRCSPECCFCGCRQSOCCHCOMEJLCSCEENKCSNMGEV", "GTFGDMMJCTHOTCJHCCCMKSGCEPNGCQMQKCEQKVKUMLCGK", "GCLIKCNGGDCMNGECOSUCCCGNLCSFGGMOGTUOSNMECFURO", "MPMECOHCGJCGGJJCETHSGKCKMCLOFUMCKJGSMHIIOGRCKU", "CSMCOQPRCEOKSQCGIGEMCGGGJISGIKCOMGPESKKSIGDCCI", "QCPCCHCHCCOROGTKKCEJKHCSULCMTOOJQFQCSGGRGFHCK", "PCCOFTRGIGHCCMPMCNMMCICCCVSHKSIVDCNCGOKVJOCCCH", "JDEROCHGOKCCFKGCFTJCMCCRKGGCMMCQCCQCECCCMKKCH"};
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<string> names = {"CKKRSOSKKSGCCHKESELDCMHSMCOGGKOKCTDGUIOGESVIDH", "GVOCGKHROKCGCUMKOKIOCESMKCLVIGKJMNOCUCOHCCCOJM", "KRSCESKGRSUEIFMSOCDSMCDKFOCRKKCHMCCUVMGHSQMCV", "CQOFGMHIKMDDCHEGKCHGDSMESCKCSOGETRMCEMSMCCLCETQK", "GRGDSTVOMCGDCKCKRECCGQMNTMGQTCCGCONMCMOFRJJFGG", "QCGFCFVDHRIORCMNGOCCMCCGOTSMCCCCEKGSSMGQOCECHOEGK", "ODHKUCRCSRHKSMMSHIMKCODHHOPCOGCKCTPFLOMCSVCIG", "IMHPCGJOSMSFQOCSISTMCHHQJCCHQCHMKCCKGCRUDKOGCNC", "IKSKORMQMORTCCGKCGJCNUQCOMFSCOMHCCSSMKHCEHUCCGKC", "DMRQDMOSRCOCCVJCCCHVCGMRLGRFOOSMKTCHKGCEGOHRQQG", "OGKSCPJGCOGKSEDNGPCCSOHCECKSJVCMQNFRUUQGKOOCQQ", "KEFHCUKCCHCMGCHODHPCSGGOJOMCGMCPOPSMFCSHNHPMG", "SSMVEKGKKTPIROHCODPUKTUOQPIOVPUJOUUGCGHSUUFHK", "MCFMKRCSCSGRLICCPUCFKQMCECHKCMCMKMMPCMQNCMGOSM", "QGCVMCMDOMHKOCVKMIUGHJMRSCURRMFKSIUKCMSUEGICRCC", "KTTMPKCSQRCQGFOEMOIJTHSCPJRMEGOTCSCCICSGPGCFS", "IHCSSSOJFRKCPCCQGSRCQQGGHCERCROVMUMGCKHCUIEPSOTRM", "CQNKKHUSGOQGEKOOKGSGCNQCKNCEMUJSUMKUGOHCCEQOC", "GLPCMNOMKOGQRDDCSSOECHGUJICSKMUMQMPMTOOGCOSCGGLFC", "MEMCMKKKIHSOGUEOORGNGCQMGTIKMRGHVSRQSDERMICSDNK", "HCKSRCKCCKEKMCIGGOLICCCFKHCEKCEKKESQEUCOHCUCMHSG", "QJSCCRCVHKCMGCGEOGCSCSQCKCSOTLQHMOOIEMSLEKHCO", "KOSGMOCFKCGFSQGKKOMCMRJFMMOKKMJEJMCVCOOQIMMCC", "GKHSIKGPCSJCMDCPOHRIROPUJHMCCCEFUPCKOMKCUFUQR", "KGCMOCOHSEROCCCUTSCKMIMCSMREOSVSRMIDICGSQUQTIRC", "MPHNOSCICDOPENORCHCCSOPKSECCCOEECCGGHFOSCLMMCSTCI", "IUTCCGMKSCTOSJDSRCTGGFCMCISEQMHPEMMEMOSUKRVGC", "ROFCJRNGICFKCIHPMCJMHSDJHKCSCGRCNFRCIQCJERCMCCKJC", "DKMGQCCHHKMSMORHMPCOSRRCOCRQKFCKLMJSHHEGUMCCCO", "ERGCCIKUMIENCKILKCECCCMOMCOCECOSCCDCCMQMCGRUMKKOS", "VKUTCEPGJVMUMEEIMSFUMGLICFHKKKMVSECRHUMCQFKKT", "HNMGGGJSQCSEHUSGMMNMROCVLLOPMNKKUGIOKKEOGCGCECMM", "CCMMKKMSCGSRGOLOLCRMLNRTCQTCCOCQCIHCCURSKTMKESPMU", "DJCMRGQEJUKICICUKQIRLSRCUOSCMNNKRGUSHGOUKQGCUOGO", "TOKKHSRTDMQGCSHGGGKGSOCFOQREICOPKCHGCKTGEQVGCGC", "OQHUMCNGIIHSSGEPSSOCSUIMEHOSURTCSCKQURMCJCKOSCDS", "CGMCDROCCKOCSFOKJKQUUMIJQHLLQKGGUKUNOMRSLDSUMED", "FOCHCMEGCHKCMKTMQOMQMCMVKEQQRCMDSCTMGCMCORGIUSS", "NGSKSTVCPCCPQUSTLQFGGHCUGQOCOOKVICUCUSOCCEISIMM", "OFCQMGCRMDQMQCUEQRNRGCHCCQMHLDCMFHCTGOGOMRUCKK", "SSKFCMGLKCHMRUCOMCDKMCGKSRTKMKOMRHUHCCDFOQCVG", "ICCDMIHFMGCHGOCCKIVSKMOCNTMFGEPCMGKSOIUTKCKKNFHCC", "SKSFJIUQCOCDGCCDLMJTKCMOKGSMTSECRPJOCCUNCHDGCHGO", "HMECGMDCSKTVGMCGHRSIKKMQCSNICUMOMJCURDCKGUOMMC", "OCGIUQMCKOKKCCKOSSSCOGOIOIMHJKCGQCCMCUJLEHOPIMG"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"SSMVEKGKKTPIROHCODPUKTUOQPIOVPUJOUUGCGHSUUFHK", "OQHUMCNGIIHSSGEPSSOCSUIMEHOSURTCSCKQURMCJCKOSCDS", "DJCMRGQEJUKICICUKQIRLSRCUOSCMNNKRGUSHGOUKQGCUOGO", "CCMMKKMSCGSRGOLOLCRMLNRTCQTCCOCQCIHCCURSKTMKESPMU", "IHCSSSOJFRKCPCCQGSRCQQGGHCERCROVMUMGCKHCUIEPSOTRM", "NGSKSTVCPCCPQUSTLQFGGHCUGQOCOOKVICUCUSOCCEISIMM", "KGCMOCOHSEROCCCUTSCKMIMCSMREOSVSRMIDICGSQUQTIRC", "CGMCDROCCKOCSFOKJKQUUMIJQHLLQKGGUKUNOMRSLDSUMED", "MEMCMKKKIHSOGUEOORGNGCQMGTIKMRGHVSRQSDERMICSDNK", "GLPCMNOMKOGQRDDCSSOECHGUJICSKMUMQMPMTOOGCOSCGGLFC", "QGCVMCMDOMHKOCVKMIUGHJMRSCURRMFKSIUKCMSUEGICRCC", "HNMGGGJSQCSEHUSGMMNMROCVLLOPMNKKUGIOKKEOGCGCECMM", "VKUTCEPGJVMUMEEIMSFUMGLICFHKKKMVSECRHUMCQFKKT", "FOCHCMEGCHKCMKTMQOMQMCMVKEQQRCMDSCTMGCMCORGIUSS", "IUTCCGMKSCTOSJDSRCTGGFCMCISEQMHPEMMEMOSUKRVGC", "OGKSCPJGCOGKSEDNGPCCSOHCECKSJVCMQNFRUUQGKOOCQQ", "DMRQDMOSRCOCCVJCCCHVCGMRLGRFOOSMKTCHKGCEGOHRQQG", "KTTMPKCSQRCQGFOEMOIJTHSCPJRMEGOTCSCCICSGPGCFS", "HMECGMDCSKTVGMCGHRSIKKMQCSNICUMOMJCURDCKGUOMMC", "CQNKKHUSGOQGEKOOKGSGCNQCKNCEMUJSUMKUGOHCCEQOC", "KRSCESKGRSUEIFMSOCDSMCDKFOCRKKCHMCCUVMGHSQMCV", "IKSKORMQMORTCCGKCGJCNUQCOMFSCOMHCCSSMKHCEHUCCGKC", "TOKKHSRTDMQGCSHGGGKGSOCFOQREICOPKCHGCKTGEQVGCGC", "GKHSIKGPCSJCMDCPOHRIROPUJHMCCCEFUPCKOMKCUFUQR", "OCGIUQMCKOKKCCKOSSSCOGOIOIMHJKCGQCCMCUJLEHOPIMG", "SKSFJIUQCOCDGCCDLMJTKCMOKGSMTSECRPJOCCUNCHDGCHGO", "SSKFCMGLKCHMRUCOMCDKMCGKSRTKMKOMRHUHCCDFOQCVG", "DKMGQCCHHKMSMORHMPCOSRRCOCRQKFCKLMJSHHEGUMCCCO", "ODHKUCRCSRHKSMMSHIMKCODHHOPCOGCKCTPFLOMCSVCIG", "OFCQMGCRMDQMQCUEQRNRGCHCCQMHLDCMFHCTGOGOMRUCKK", "CKKRSOSKKSGCCHKESELDCMHSMCOGGKOKCTDGUIOGESVIDH", "GVOCGKHROKCGCUMKOKIOCESMKCLVIGKJMNOCUCOHCCCOJM", "KOSGMOCFKCGFSQGKKOMCMRJFMMOKKMJEJMCVCOOQIMMCC", "IMHPCGJOSMSFQOCSISTMCHHQJCCHQCHMKCCKGCRUDKOGCNC", "ICCDMIHFMGCHGOCCKIVSKMOCNTMFGEPCMGKSOIUTKCKKNFHCC", "MPHNOSCICDOPENORCHCCSOPKSECCCOEECCGGHFOSCLMMCSTCI", "QJSCCRCVHKCMGCGEOGCSCSQCKCSOTLQHMOOIEMSLEKHCO", "MCFMKRCSCSGRLICCPUCFKQMCECHKCMCMKMMPCMQNCMGOSM", "GRGDSTVOMCGDCKCKRECCGQMNTMGQTCCGCONMCMOFRJJFGG", "QCGFCFVDHRIORCMNGOCCMCCGOTSMCCCCEKGSSMGQOCECHOEGK", "CQOFGMHIKMDDCHEGKCHGDSMESCKCSOGETRMCEMSMCCLCETQK", "ERGCCIKUMIENCKILKCECCCMOMCOCECOSCCDCCMQMCGRUMKKOS", "ROFCJRNGICFKCIHPMCJMHSDJHKCSCGRCNFRCIQCJERCMCCKJC", "KEFHCUKCCHCMGCHODHPCSGGOJOMCGMCPOPSMFCSHNHPMG", "HCKSRCKCCKEKMCIGGOLICCCFKHCEKCEKKESQEUCOHCUCMHSG"};
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<string> names = {"RCCRMCCCMNNRGKRHCUCMMFHTOGCFMRKMTJCUGSCUCHRUG", "SDSRSMCCSMHOCQNKCSOGCCOVSGQCSDCCUCCSHPKOCVKUP", "PHCCHCSHKMCVRCCUKPKCVSKQECMVSGGMGGMIIKIVCCKRMM", "COSCMMUKCKMHVCOQSCMGCOTGCIESKKTDGCREFSNUUMUSQ", "KCSUCROMKGCMGCKUTCSKSRDVOGOEHKOHGGKQMMSCHHKLS", "SEECCISCGPKCMMCUKHCTRFRIRFCKKHHMRGPSTDSEKNPVE", "EHECSQKFOJCCOGFKIUKCCCORCKOKMHGKGHIOKKCJPEHJMCH", "MKMMCCPKDGMSKSTCDECPKCMOEGCGVIOSKVRORGKCCICOHO", "KHLKRSKFGGCCHHEHGCKDCSMGCGPQEQCEQCRHESQKICHMTCGLC", "UQCHMOFQESSSGIMOGCUOSCMGHKKMEKKCDICREUJKCKEEG", "QSSLKCNPGLMDVFEMTKOGOGCVDHOCQSGPPMKNCNDKQEMFH", "RSCHMNCFMGQSCJKERIKCINSKSIQCOKOUOKMRFECODSJMCCH", "MESCOMEGOGCGEOMRODQFCCITTRNUSRUKOVKTKMMMEGRHKC", "KKSRKCQCUOCMMHKGQPCCCMMKCESIGUEHMTCKCMOCOEGJMF", "EOGMSTCMNSGKKCCGEJDFVOKRQIOGOCVKHEULCCCOKSCVOHC", "MEETKKSCSCSUMSRGELOSIKGSCHICIHCCDOFVSUFCEVHTR", "OCGCCSGTVKGSGIDDRGCMKFCGOCRQCKQCNJGGVPCSCKCMPG", "OCCGOQCOCUHSNCLKUDCUCKEOCOHQOVKCKDRMGUGCTDTGSSGH", "KODGKGRDFCOEIGRCJOECMHSSEGRFPFMCTCNKCOOCSMORC", "VCGCRMCCCCEIJSQMCOQQOCKUCCTKOMCQCOMTCQCSCIHCMO", "CSQRMKMCCGSSOCUOGCUEKCSGGDCCOENIUCKCNOCMUOCSHKUSK", "ITCCDECGCTKUCSGNCUGCHQMMGNMKUOFEOCKGMCHCRCQHJM", "JMGNCGPOKGQTCKPKSMIRKHKNOGCEJSJCOMCISGOOCSKQC", "VKFOKOHCORVMCRGMCKUNQNKJUVCQPCGSSHTCKCSOOOHMECLS", "CLGINCTMSHTMKSHCHCKHCKKSUPCOCHQVJFOUSICRRSIESTJO", "CMGGLGQCCJDEGMKRCOMHCCCHVKNQPKMHCEJVUCQIOMLDOCM", "PUCHGKGLJKGONSCCTCCCGSSCOJUQICGHGCIHRMMCGISKGMM", "CQCOSOUMQCGMOCJUQCIVCHKRSMTHHGSTGORJRCMGORPGK", "NCUEJKCMEQOMMSMCOMGEFIOFCHOKREIOECMIKSEFQCCPOMF", "SOGSIEMGHKLKIMCCICMIDCHQQCMPKKGCPCGVGMEQSMCCG", "UUKKFOSGJHCMSIOHPOCHSOSGQMCOMMGCDOMISGLCRMKCM", "OIEGOVCQQOIOGESCKOUOUJEJLKCHNCOOEPCUOOKCQNUOSGM", "NRHCFUCSCPGHGMGGUMJKMMCICCSJCMECCCPHTCMKMHCCCC", "CGUDCOGOECKGMLHKUEKOVOGIDISOGIVJTSHQSOUQRGGQEK", "COCCSCCSKMOMCOPGCPSETRRRKOOSCCEMCCNCREKPKOPIHCJD", "OCNKNESCKKVKCEHDEUCKNMDLPCMUHSCMRICGKOSCOGKMM", "DORCISUKSKKSRMVCCCCVOKSKSQFGCJECOCOIECGTUOUKU", "CSCGRMLSCKCCCKITHKMGIQHSMCMOLUMCCMMJRLSCLSCGG", "CMCRCMSRKNDMCCCPECOKGMOHMKLSURHGCGICSMCMGGEPHDKR", "LGONCIKQQNMGKGCIQOCCOOLHCCOVUKGCRGLOKPUMUKNMCJNCC", "ERORESCKCVHCIIKMKPIHSDOHSKKDUSLRDHERIRMCHCIKG", "ELNIOKCSSMORKKOCKMCOSONRGESFKCCTRCURNGCGSSOJOF", "KLCKCCEMCRCMCSNHCCMCCCMUQCSCCPHCGSCPMVCCFPJQO", "CROOQILPOCGGGUIHCMSMFEMKSMMSMSEJSCORDFLKQCDPRERO", "CMGGHEHRNRCFGRCHPCRCCDNJPKCCQKSEQMIRQOMNKSCGJ", "SFMMGCSGKCHMUCCJMOGGECMCOMCJGKUGQPOEOOKMGCGJHK", "SKVSHKHEUCUGPRSGCIOCHCUMVUCDCOSUFUNCEFLSROOIUE", "LMRVRDVOTEJMUCCUNHSSCUCCCMMICFCQIUKRCTUKGNKQC"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"VKFOKOHCORVMCRGMCKUNQNKJUVCQPCGSSHTCKCSOOOHMECLS", "CLGINCTMSHTMKSHCHCKHCKKSUPCOCHQVJFOUSICRRSIESTJO", "OIEGOVCQQOIOGESCKOUOUJEJLKCHNCOOEPCUOOKCQNUOSGM", "SKVSHKHEUCUGPRSGCIOCHCUMVUCDCOSUFUNCEFLSROOIUE", "CROOQILPOCGGGUIHCMSMFEMKSMMSMSEJSCORDFLKQCDPRERO", "CQCOSOUMQCGMOCJUQCIVCHKRSMTHHGSTGORJRCMGORPGK", "MESCOMEGOGCGEOMRODQFCCITTRNUSRUKOVKTKMMMEGRHKC", "ELNIOKCSSMORKKOCKMCOSONRGESFKCCTRCURNGCGSSOJOF", "LGONCIKQQNMGKGCIQOCCOOLHCCOVUKGCRGLOKPUMUKNMCJNCC", "CGUDCOGOECKGMLHKUEKOVOGIDISOGIVJTSHQSOUQRGGQEK", "CSQRMKMCCGSSOCUOGCUEKCSGGDCCOENIUCKCNOCMUOCSHKUSK", "COSCMMUKCKMHVCOQSCMGCOTGCIESKKTDGCREFSNUUMUSQ", "LMRVRDVOTEJMUCCUNHSSCUCCCMMICFCQIUKRCTUKGNKQC", "DORCISUKSKKSRMVCCCCVOKSKSQFGCJECOCOIECGTUOUKU", "OCCGOQCOCUHSNCLKUDCUCKEOCOHQOVKCKDRMGUGCTDTGSSGH", "SDSRSMCCSMHOCQNKCSOGCCOVSGQCSDCCUCCSHPKOCVKUP", "KCSUCROMKGCMGCKUTCSKSRDVOGOEHKOHGGKQMMSCHHKLS", "UUKKFOSGJHCMSIOHPOCHSOSGQMCOMMGCDOMISGLCRMKCM", "RSCHMNCFMGQSCJKERIKCINSKSIQCOKOUOKMRFECODSJMCCH", "MEETKKSCSCSUMSRGELOSIKGSCHICIHCCDOFVSUFCEVHTR", "QSSLKCNPGLMDVFEMTKOGOGCVDHOCQSGPPMKNCNDKQEMFH", "COCCSCCSKMOMCOPGCPSETRRRKOOSCCEMCCNCREKPKOPIHCJD", "EOGMSTCMNSGKKCCGEJDFVOKRQIOGOCVKHEULCCCOKSCVOHC", "PHCCHCSHKMCVRCCUKPKCVSKQECMVSGGMGGMIIKIVCCKRMM", "JMGNCGPOKGQTCKPKSMIRKHKNOGCEJSJCOMCISGOOCSKQC", "RCCRMCCCMNNRGKRHCUCMMFHTOGCFMRKMTJCUGSCUCHRUG", "SEECCISCGPKCMMCUKHCTRFRIRFCKKHHMRGPSTDSEKNPVE", "MKMMCCPKDGMSKSTCDECPKCMOEGCGVIOSKVRORGKCCICOHO", "ERORESCKCVHCIIKMKPIHSDOHSKKDUSLRDHERIRMCHCIKG", "CMCRCMSRKNDMCCCPECOKGMOHMKLSURHGCGICSMCMGGEPHDKR", "PUCHGKGLJKGONSCCTCCCGSSCOJUQICGHGCIHRMMCGISKGMM", "NCUEJKCMEQOMMSMCOMGEFIOFCHOKREIOECMIKSEFQCCPOMF", "OCNKNESCKKVKCEHDEUCKNMDLPCMUHSCMRICGKOSCOGKMM", "VCGCRMCCCCEIJSQMCOQQOCKUCCTKOMCQCOMTCQCSCIHCMO", "CSCGRMLSCKCCCKITHKMGIQHSMCMOLUMCCMMJRLSCLSCGG", "UQCHMOFQESSSGIMOGCUOSCMGHKKMEKKCDICREUJKCKEEG", "KKSRKCQCUOCMMHKGQPCCCMMKCESIGUEHMTCKCMOCOEGJMF", "CMGGLGQCCJDEGMKRCOMHCCCHVKNQPKMHCEJVUCQIOMLDOCM", "CMGGHEHRNRCFGRCHPCRCCDNJPKCCQKSEQMIRQOMNKSCGJ", "OCGCCSGTVKGSGIDDRGCMKFCGOCRQCKQCNJGGVPCSCKCMPG", "SFMMGCSGKCHMUCCJMOGGECMCOMCJGKUGQPOEOOKMGCGJHK", "ITCCDECGCTKUCSGNCUGCHQMMGNMKUOFEOCKGMCHCRCQHJM", "KHLKRSKFGGCCHHEHGCKDCSMGCGPQEQCEQCRHESQKICHMTCGLC", "KODGKGRDFCOEIGRCJOECMHSSEGRFPFMCTCNKCOOCSMORC", "SOGSIEMGHKLKIMCCICMIDCHQQCMPKKGCPCGVGMEQSMCCG", "EHECSQKFOJCCOGFKIUKCCCORCKOKMHGKGHIOKKCJPEHJMCH", "KLCKCCEMCRCMCSNHCCMCCCMUQCSCCPHCGSCPMVCCFPJQO", "NRHCFUCSCPGHGMGGUMJKMMCICCSJCMECCCPHTCMKMHCCCC"};
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<string> names = {"ELKCHOQGSRKMIMMPCKOOMLGSECKCPCGOHHKCSSOCSGDCOR", "SJOCGCNSNSQCFGIHICKVRHFJCSUKIHUHUOGMQFEOLFMCHLO", "LKGHCSKPMPJEILCKKJKCTSCIGGCHSQCMREUCGEOCOKCCI", "IKMOCHSQELDQEUCIICQGRJTCCDKMIQOFUQMKCCQKGVMCS", "COCETKOSSSKOTSGHIMMGQLOHCCRMGSDIKCMCHCMDTUKQFHQ", "PSMRCLMUGLKGMMDPRMDGKMQKMCURTMECNCVCKILVIHHSSCFC", "SMCIHGRJOPSCCOUCUSLQMSUQKFSCECURDHUCPFGCUCOHMGM", "MMMCTVJHHSCSKNGUMOHGENMGRGCJCHGDNCCMSOEIUKCPS", "QOCOECDOEHUQEOCCEMMLCIDQUMLMRHDOUCGFMRECGKLURGMGH", "HCSGEJOVVOKCSMHUECMVQCOKSVPKFRJOOMKMSCUOHSVGK", "KMRFRJCGIOHKMCHOGGRGCOOCQKMGVCCPKOSKOMQVLCOCM", "OKEUGCUGHDRCMKCHOSDCLFKHQOHUOSFMHCKSSKQMLSRSI", "CQCSRRLQCDECKGMCSUCMNHKMUCTUMQCGOGIKUSVSVMHOCKQSM", "JPEKIGVSISCUCKPCCMUNMKCCLOLNRHCPOKCGCKCMKKHQSCOMM", "GCCHRMCCSCNOKEKRVCOVMFVECEDGGMOGQCPUCGLIRMPKSGC", "KOMFKUPVKCLEKCCUSSUKSECNSEKOMGQFMNKMMCVOGGSKH", "KRCOCJECGLCCSOSCHKEQUCSCUGHGGDSHJQCIKEHPGMIOG", "MMMSUKMTMUURQHRSCHTHSSKVICOJCCNGKRKQOFPCPSCFS", "GCQHDIEHETVSMCQCNERTPMKMCCKHOMGCMDMICGKSCQHVH", "SSMJUTCSULGNFUGSEDCUKSUNVDRKOEJJMGGCQCGTSMKOMQCUS", "GHKQGCMUNCGHGQOCUCDOSSGGOCOSSOMFGCCEJCGTMVJIND", "CCHMOOHSCTUKCCTCONPQMSMQNVSSVLSCIMCCGOGUEOTCKC", "DCKHCCCGCIGIKOHTMCMCECITEJCNMOCICFKMHCCGQVJEC", "COQVGCUGLCKCKHGQGHLCKCSICOCCMGCEOCECOOCKHGKKR", "SFMVVGRJIKHKCUQDRIILMGKSCIIMNSCIOCHOSOCCUUOSCD", "HIOMOSUVUICQOCCKOLCHOGOQGOGROKSCHSFCCCOFEDHMKIG", "TCVMUCCCJFHMQEOVQNCCNQCOHGCMSEUCKCUMGKCEMISIS", "OQHQCCMOQCSQSTCOSMSDCSCSHOSDCKIKKGMDCIMKRGMGCH", "MSCCHUCCQCCEOKOPEKCOHQDNCSPRLKOHOCGNRSCECQCMUCQE", "GCCGIGEKGLOMMCCRDCQJKRKCCGGOMSTKCTFMRJCLHEEGDCEC", "HOHDOCCKKMDCQCSCUKGLLHQVOKLRQHSCCQHMHPCMKEUOOK", "SCTCGOCCOKSNVHTUOORKCCONRETPOCGKGMECRMKKCSPKCCUC", "MSKKGNGQCTUOQMNSVCRFGVKKESHSMEHFSONIIFDMCHOCHGH", "KUCQTCQOIERNOSDUVCGVCEELQESJGUOKQCCCSORRHUCCS", "KSGOQQMEHCVGQRECUUUUEDHEUOKGCIOCKKJLOSCNNMGESQG", "HMMSESPSGCRKNRUOUGQKKMCSEEGKCOMCVLKSGDCDNENGMF", "CKKOKHKIGQERHPOUFMSOISECCTOOQECRMSHKCJPIICMEIKC", "SSKCKCJHQKLGCOCRDOMSSMKQKOIROKKRCKLJSCCHKUJOI", "SOGRVSISUGTHCCGEOLCCOUFDRMROKHCOTMIECCGQKCHFRGSC", "LHMDHKLOMOECVSINPKKJCCQHNJKSSOKVEFHMCMUUISGFOPI", "FFFRQUCOMSSMGHSJKQGSOKQCCGMPCJUHCSVIGCCJLRUSGKCR", "OCSHKOGOTVKKCGQSHMGQCKERLFSFGKMMKOMQNKSGUGOQKQIUM", "CCMJTKMVSKJRSNTCJEEUCSCCGIMGHPMUICVSKMGUCQPGGM", "RHKCCCCCEEMGMGKQCPKMCGSURKCCCTCCCIDKGKOMMLVQC", "GSMHURMVHGQKUGGGKGNKKMCEKIORQCOQKHKEHSCSGSLOOOC", "OSKDSKLQNNQOGEQKRCUTCGHKRNCLGEMMCOGKFOIGOVPCCUM", "GCOMLOCGLGSCCCCCCKMGUNSFMMGCKCHRCHCKQSIQCROGJGCQ", "SICLCQGUICHSSKOIGVCSCKMCTRKQCKOCMKCUSUQCOOKMMICOM"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"SSMJUTCSULGNFUGSEDCUKSUNVDRKOEJJMGGCQCGTSMKOMQCUS", "OCSHKOGOTVKKCGQSHMGQCKERLFSFGKMMKOMQNKSGUGOQKQIUM", "CQCSRRLQCDECKGMCSUCMNHKMUCTUMQCGOGIKUSVSVMHOCKQSM", "MMMSUKMTMUURQHRSCHTHSSKVICOJCCNGKRKQOFPCPSCFS", "HCSGEJOVVOKCSMHUECMVQCOKSVPKFRJOOMKMSCUOHSVGK", "SICLCQGUICHSSKOIGVCSCKMCTRKQCKOCMKCUSUQCOOKMMICOM", "FFFRQUCOMSSMGHSJKQGSOKQCCGMPCJUHCSVIGCCJLRUSGKCR", "PSMRCLMUGLKGMMDPRMDGKMQKMCURTMECNCVCKILVIHHSSCFC", "CCHMOOHSCTUKCCTCONPQMSMQNVSSVLSCIMCCGOGUEOTCKC", "GSMHURMVHGQKUGGGKGNKKMCEKIORQCOQKHKEHSCSGSLOOOC", "SMCIHGRJOPSCCOUCUSLQMSUQKFSCECURDHUCPFGCUCOHMGM", "KSGOQQMEHCVGQRECUUUUEDHEUOKGCIOCKKJLOSCNNMGESQG", "LHMDHKLOMOECVSINPKKJCCQHNJKSSOKVEFHMCMUUISGFOPI", "SCTCGOCCOKSNVHTUOORKCCONRETPOCGKGMECRMKKCSPKCCUC", "OSKDSKLQNNQOGEQKRCUTCGHKRNCLGEMMCOGKFOIGOVPCCUM", "KUCQTCQOIERNOSDUVCGVCEELQESJGUOKQCCCSORRHUCCS", "MSKKGNGQCTUOQMNSVCRFGVKKESHSMEHFSONIIFDMCHOCHGH", "KOMFKUPVKCLEKCCUSSUKSECNSEKOMGQFMNKMMCVOGGSKH", "SFMVVGRJIKHKCUQDRIILMGKSCIIMNSCIOCHOSOCCUUOSCD", "CCMJTKMVSKJRSNTCJEEUCSCCGIMGHPMUICVSKMGUCQPGGM", "JPEKIGVSISCUCKPCCMUNMKCCLOLNRHCPOKCGCKCMKKHQSCOMM", "COCETKOSSSKOTSGHIMMGQLOHCCRMGSDIKCMCHCMDTUKQFHQ", "SOGRVSISUGTHCCGEOLCCOUFDRMROKHCOTMIECCGQKCHFRGSC", "OKEUGCUGHDRCMKCHOSDCLFKHQOHUOSFMHCKSSKQMLSRSI", "SJOCGCNSNSQCFGIHICKVRHFJCSUKIHUHUOGMQFEOLFMCHLO", "HMMSESPSGCRKNRUOUGQKKMCSEEGKCOMCVLKSGDCDNENGMF", "SSKCKCJHQKLGCOCRDOMSSMKQKOIROKKRCKLJSCCHKUJOI", "QOCOECDOEHUQEOCCEMMLCIDQUMLMRHDOUCGFMRECGKLURGMGH", "CKKOKHKIGQERHPOUFMSOISECCTOOQECRMSHKCJPIICMEIKC", "HOHDOCCKKMDCQCSCUKGLLHQVOKLRQHSCCQHMHPCMKEUOOK", "HIOMOSUVUICQOCCKOLCHOGOQGOGROKSCHSFCCCOFEDHMKIG", "OQHQCCMOQCSQSTCOSMSDCSCSHOSDCKIKKGMDCIMKRGMGCH", "KMRFRJCGIOHKMCHOGGRGCOOCQKMGVCCPKOSKOMQVLCOCM", "MSCCHUCCQCCEOKOPEKCOHQDNCSPRLKOHOCGNRSCECQCMUCQE", "ELKCHOQGSRKMIMMPCKOOMLGSECKCPCGOHHKCSSOCSGDCOR", "GCCHRMCCSCNOKEKRVCOVMFVECEDGGMOGQCPUCGLIRMPKSGC", "MMMCTVJHHSCSKNGUMOHGENMGRGCJCHGDNCCMSOEIUKCPS", "IKMOCHSQELDQEUCIICQGRJTCCDKMIQOFUQMKCCQKGVMCS", "TCVMUCCCJFHMQEOVQNCCNQCOHGCMSEUCKCUMGKCEMISIS", "GHKQGCMUNCGHGQOCUCDOSSGGOCOSSOMFGCCEJCGTMVJIND", "GCQHDIEHETVSMCQCNERTPMKMCCKHOMGCMDMICGKSCQHVH", "GCOMLOCGLGSCCCCCCKMGUNSFMMGCKCHRCHCKQSIQCROGJGCQ", "KRCOCJECGLCCSOSCHKEQUCSCUGHGGDSHJQCIKEHPGMIOG", "LKGHCSKPMPJEILCKKJKCTSCIGGCHSQCMREUCGEOCOKCCI", "GCCGIGEKGLOMMCCRDCQJKRKCCGGOMSTKCTFMRJCLHEEGDCEC", "RHKCCCCCEEMGMGKQCPKMCGSURKCCCTCCCIDKGKOMMLVQC", "COQVGCUGLCKCKHGQGHLCKCSICOCCMGCEOCECOOCKHGKKR", "DCKHCCCGCIGIKOHTMCMCECITEJCNMOCICFKMHCCGQVJEC"};
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<string> names = {"HCVKKDMUSMOHSGKTRDCCSIGMGCKTCCROKHJHGIGESOLRC", "JCKQCRFIRNCKGUSQSRTNISCGGCCMSOOMCKMGGMOHMRKCC", "MOIOPGVCHLQVJSUKICOKNOGKIGDPHRFCILMJCDFRMCRRMP", "UGSUGGCHVMODGMMCMRGGKCMPCCCPKSVHECUCPCSQSGKTCCH", "UFGCMFFSNMOHTOMCRQQHKJOSCGFGOCGSCHGKKCUICSSOE", "DHRGJOMVELMNKGCGCOECRCSHDOOMGQHRFKKSCSHECQMTROS", "JSQKQGLCQKMPGMMMUGIFCUECGSPCGVCCCJROCQMCCCRHC", "EGMQEOMMRDGGGMHMCETMCMSHMETMVOVGSQCOSCNJRSVTOO", "PCHUOORTCMCESUKIGKGSOCMGCKSKKCQUCDNKRSCJIKCSCGOMK", "CCKNSNRJFSKGMEOFTOCHNKKKFPCPIVKUGQLFGHOESTGJFOCE", "CGTKUTOOIOGHKRPHCPMKRIMVNICGOLRSJCCCICCCCURRGPHSC", "LLGKMMQGRJQSDVFPRCSCKNMUMQKMCRCMVMGSTCFQLQOGJ", "GLGROGLTORFSKCSGUKPGPSVDJCNOHCISIOIGCSCIOVJEP", "MCJCQMICKVRMRMSSOJNMOCPSMEOKGCOGOSCLVDKHIHIIECUC", "JLCDFPMCSCKNCHOIGQGCCPMHMOCORSPCSOKKCPONSCSMHCGN", "HCQMSJRICCUPCOQSKIMICGSOVUIEHKCJCGMQRUMOGVEKRH", "UCGIOSGNCOKDUICHEHFOMGCKOKKOQGOSOFOMCKCPMHMDS", "FMCEOCSICSUCKFCIOJMQMKOTICGRCKJGMCLGPOKOKKKHR", "CCSCISCMLSSOOMCCKMHSOCGOGCCCUMKRUEELEGOSQSOUKC", "PCGROUGMQCKOGUQKICPQOLCUOGLQMJUTMKCECROCLTGHMCKS", "ECGKOFRSOCOCGNGLKPGPCCUOCCCTSCCOCVQOROMCVREMUMO", "KGFCRCEMECMGVMMSMEECCSKMSCGGOGCLFSCMCFKMOMSGO", "SSKEIQMMGVEOCSCOIPSLUJGQSKCDOGCSDUMCRMMKRMFOKOCK", "EGJCJNGCEKRSRCFPPDGLCCRMUUCSHSNMVMOMKOGCCSJGOCKG", "SKEKOUSEDCMEOPIMGHJSHUDLMCCJRKHOCSQDICOREOMPV", "PIMSQSDUCOCSKPSRGGCPRCHPOROCKJDCKIHFILLCGCCHQG", "SEQCEMPTJRKCCGGCRCRSCGMMKEPHSPMCIMMKQHKCKGOOCC", "FUOEOGKFIGVKKTRKILCKSQKSSTMMCCQMCCMCSNHCNCLQU", "RIGGSKTOISPCOSSIGGCEVQCCHNGSMCNHKMKHCKHKISOEDC", "UCQOOIQCMOGTCDIQTOKCQOITRRUMHOGCTKMISHQRCCSKOOEOH", "MMUCJVGCRSCMVECSVSOCKGOHDCMLKUHMGDHCOOQOMLMGKJKC", "CERHGONKGGOLUGPQJOCUCCRCCQICRCGCCKRSRNUSRHCJR", "PGTEKSCCCGCKCLMMMCKNCCJOQVJOCQIKCNCCKHOKCMCIONQ", "JVCKVMDIRSMCGTMMGCDEPCMCCMKNCTGSIMMRHFFINUCUQQH", "GCSGSKNOOLNNSJKVQVGLQSPCEPKNKKOOMUCQLCKJCCOFHGIK", "CCKMKQQCGQEOMCNSLOLCUKFQENCCGSMNHGCDHITORQHCC", "CCCSRRHUTMMCGTDCMHUGETHQSCEMIOGIGIRONCTKHJMMC", "QEGPCJCGORROCRGCVGDONCOTCGDIUUKCEMRCCEGMEMMQGGSME", "DSCMMMGRJEKUSROHHCMKESLGGRGKPVGOMUMUUDQVTQMCSCGN", "IKOHDCRVUKKOMSCOCLIQQVQHGMNISOEIHKSHNFCOKCPFOSKOU", "KQKVMRIMTNMMCGKGEEUVKSHIPCGMCCICERMFNDMCGMCGSCR", "CKSVMTHSCCLIGCMPNMQRMKECLHSVESKGICCKKFCOSUOKL", "VQCICCCLKHEHQOESDCIGNCOOCSKQSCGIIUJUNMKMCUGCPSC", "CQGNOEUCSSHCRVCSHPHUGGNMPCSKVCUGCMHONJSCLGOKI", "ODSMCCOEPSCHSNEDTKOIGKCHCLCDVKKKQOCTQVKCCVQQHORCC"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"UCQOOIQCMOGTCDIQTOKCQOITRRUMHOGCTKMISHQRCCSKOOEOH", "DSCMMMGRJEKUSROHHCMKESLGGRGKPVGOMUMUUDQVTQMCSCGN", "IKOHDCRVUKKOMSCOCLIQQVQHGMNISOEIHKSHNFCOKCPFOSKOU", "PCGROUGMQCKOGUQKICPQOLCUOGLQMJUTMKCECROCLTGHMCKS", "EGMQEOMMRDGGGMHMCETMCMSHMETMVOVGSQCOSCNJRSVTOO", "GCSGSKNOOLNNSJKVQVGLQSPCEPKNKKOOMUCQLCKJCCOFHGIK", "SSKEIQMMGVEOCSCOIPSLUJGQSKCDOGCSDUMCRMMKRMFOKOCK", "LLGKMMQGRJQSDVFPRCSCKNMUMQKMCRCMVMGSTCFQLQOGJ", "CGTKUTOOIOGHKRPHCPMKRIMVNICGOLRSJCCCICCCCURRGPHSC", "PCHUOORTCMCESUKIGKGSOCMGCKSKKCQUCDNKRSCJIKCSCGOMK", "HCQMSJRICCUPCOQSKIMICGSOVUIEHKCJCGMQRUMOGVEKRH", "MCJCQMICKVRMRMSSOJNMOCPSMEOKGCOGOSCLVDKHIHIIECUC", "MMUCJVGCRSCMVECSVSOCKGOHDCMLKUHMGDHCOOQOMLMGKJKC", "ODSMCCOEPSCHSNEDTKOIGKCHCLCDVKKKQOCTQVKCCVQQHORCC", "GLGROGLTORFSKCSGUKPGPSVDJCNOHCISIOIGCSCIOVJEP", "ECGKOFRSOCOCGNGLKPGPCCUOCCCTSCCOCVQOROMCVREMUMO", "CCKNSNRJFSKGMEOFTOCHNKKKFPCPIVKUGQLFGHOESTGJFOCE", "MOIOPGVCHLQVJSUKICOKNOGKIGDPHRFCILMJCDFRMCRRMP", "CQGNOEUCSSHCRVCSHPHUGGNMPCSKVCUGCMHONJSCLGOKI", "FUOEOGKFIGVKKTRKILCKSQKSSTMMCCQMCCMCSNHCNCLQU", "DHRGJOMVELMNKGCGCOECRCSHDOOMGQHRFKKSCSHECQMTROS", "JVCKVMDIRSMCGTMMGCDEPCMCCMKNCTGSIMMRHFFINUCUQQH", "EGJCJNGCEKRSRCFPPDGLCCRMUUCSHSNMVMOMKOGCCSJGOCKG", "CKSVMTHSCCLIGCMPNMQRMKECLHSVESKGICCKKFCOSUOKL", "CCSCISCMLSSOOMCCKMHSOCGOGCCCUMKRUEELEGOSQSOUKC", "JLCDFPMCSCKNCHOIGQGCCPMHMOCORSPCSOKKCPONSCSMHCGN", "UGSUGGCHVMODGMMCMRGGKCMPCCCPKSVHECUCPCSQSGKTCCH", "SKEKOUSEDCMEOPIMGHJSHUDLMCCJRKHOCSQDICOREOMPV", "QEGPCJCGORROCRGCVGDONCOTCGDIUUKCEMRCCEGMEMMQGGSME", "JCKQCRFIRNCKGUSQSRTNISCGGCCMSOOMCKMGGMOHMRKCC", "KQKVMRIMTNMMCGKGEEUVKSHIPCGMCCICERMFNDMCGMCGSCR", "CERHGONKGGOLUGPQJOCUCCRCCQICRCGCCKRSRNUSRHCJR", "VQCICCCLKHEHQOESDCIGNCOOCSKQSCGIIUJUNMKMCUGCPSC", "CCCSRRHUTMMCGTDCMHUGETHQSCEMIOGIGIRONCTKHJMMC", "RIGGSKTOISPCOSSIGGCEVQCCHNGSMCNHKMKHCKHKISOEDC", "UFGCMFFSNMOHTOMCRQQHKJOSCGFGOCGSCHGKKCUICSSOE", "PIMSQSDUCOCSKPSRGGCPRCHPOROCKJDCKIHFILLCGCCHQG", "HCVKKDMUSMOHSGKTRDCCSIGMGCKTCCROKHJHGIGESOLRC", "UCGIOSGNCOKDUICHEHFOMGCKOKKOQGOSOFOMCKCPMHMDS", "SEQCEMPTJRKCCGGCRCRSCGMMKEPHSPMCIMMKQHKCKGOOCC", "FMCEOCSICSUCKFCIOJMQMKOTICGRCKJGMCLGPOKOKKKHR", "JSQKQGLCQKMPGMMMUGIFCUECGSPCGVCCCJROCQMCCCRHC", "CCKMKQQCGQEOMCNSLOLCUKFQENCCGSMNHGCDHITORQHCC", "PGTEKSCCCGCKCLMMMCKNCCJOQVJOCQIKCNCCKHOKCMCIONQ", "KGFCRCEMECMGVMMSMEECCSKMSCGGOGCLFSCMCFKMOMSGO"};
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<string> names = {"GORMIVSUCGFCICJSCERCCGKGMCPKPQCHHLSFCDGDLCCDN", "OCKPPCCLGKDKGIOIQMIHSLKHSOCTQQICKGGDSIEHCFSILSOCQ", "CTICRCLDIFNKOEMSKQCTSRESMSKSCRUMFPCKCSGGKIOSNS", "JLIGRIDQSPHTCURQLSMSMGCCMOHSCKGGCKOSDPUTOCCQMCSV", "OEEOKEESKSIKCGSEKCMKCUGGIGSTGSSSQODSKMRTCEECMPCR", "IVMOUPEOFCSECKCNCCOCPPUIICCMNHFCHCKRKKKCECKCM", "OCKGGCRCGMHUCRDOGRIMOQSLTHMCCKIKECNOGGMOJECOICC", "MSUSSRCUDDLKNRFORONNCTPKSHCMGGCJGCHCRQDOGCKMK", "GERMGNICQCSRQKKRQPPRSMIKRMCNJFCCJHCCUMHONOMOICCCO", "OSOGCFMESULDGMQSCGCSQMNCGCIKMKMNMKJQKHSCVMKGE", "CLMOGVGHKGSGGCCCJFOSCORCKGIKHMUROOOFKVCCKUCTOCMO", "ONTCPERUMOCKDSGTQCGCMCMGCCSOUHDCCHKKPOTROPLKC", "HLQSIKCMDLHECGOSDKMSMKFKOCMMCHEVHCCEMPRRSSKQSQC", "SKSQCOUCNSSKHKEMESCIPOQRGGIKIQCUCKOFCEKUPTRII", "GSHORCMHHCQUTECIMINIGUFSMGSCGFCHCOCJPLCRHCCCC", "MQGMCMFICDCERCKMKLCMSKDOEDMFKIHLFKMKMRFQRUQICR", "CKCUKSSHOQUGKCOISMCEGSKECHUCQCQEDGGEJCHMCSMNT", "NSOMQVGMMMEKCUNROCSHJOGKCOKFHIUOCCOSCFCCHMUUCRCSC", "TCKSHLGSOKGHMUMHEICCIEHCSUEUPCCEKHGSKGFKGGCKKGGFO", "GFEOCLFIQCVCEOCJCDKMKGSUSQRMPIUPOENODRUPKLECIUK", "OMEOQTQKISGLGSCCKCMDPJGOIKDCHCSSSKSCMHSSNSISS", "SEMGSKOPGCHCCHMOMLHKISICJEVCGOMECJMCIPGNRDCRC", "GCGOVGMTTUSMOCRKUSCKKHEESGGVCCCLMDKOTRSHCDCOR", "CMUUHKTPKCOCSEHQUUCRHCCSCCMGTQDKTGEKLOMRSVCNSSMTH", "RQSQSHCGMOMJRGCQVCCCKCKIMKSUQMMGRHDOHSPUMCPCS", "MSCSCHNSJEJRMGGKMRSTTNUGHKCRRGUHHOTCGOLCMEGOKOGQM", "QEGFKGECGUEEQESLSVSRFGIOJCOUCSCRKUOQOKJMRMOCUCTR", "LIQOOIMRSGCQMETSKCFKIHGQQCKCTMSMMCGCFGEMQSGOC", "SCCMQCCOKRLISRCMGVOHCEQSTCVECSCUMEKMKSMCCIHGJROCK", "CCHUKCHTMSKCTLCRGHUSMCCGMIMJKGOICKUCECQSCCEME", "ORCVPGQJSVRKSNOTCLFIMORPTGFEICLQNRGSMMVQCSKGCM", "HQKUQQCCGHCGTGSCTKSTCKKSSGIEMCCCOGCINGUOHGTCOK", "UCCKCCISSOJCKCCCROCDKSQKIFEVOLEUHHFCHCRORCCUCL", "KURTCIDQGCEMHGKGSCNCVKKKUCODFSQGLOGOCEMGOGQECMO", "QHCGJNCTMMEMKCKKSTUMCCKGCCOSIRRCMTCKDSCHRUROO", "FCPJGQFUJDRMSGSOQCCHCNOOSCHMMCGGCGKUKHKCIOKQH", "RGJGVJGNDGCCHVCHFCOCCCCCHULMUVGPCURCOFGTGSUCC", "HOMOTCOLKUUGCSCPVQOJUHSHQSCSSGCCCUHMISJHQMUMC", "SMOHUQFCKJCSCQFQOKGTGCQMSRQHITRKFLMQUCNKONMCTCC", "KMSCEHOGLMORCOKRKEEMSUJKOOGHHFHSHOSGKOEKCOGDRC", "OCMCTGKCQQKCICKGHFMOOVUECHCOIMILMGSRGIOCULQDHCOI", "CJOFKEPOCSKIOPMQFCMHLGEOCCOCHCGVNPNOEVMRNQRMK", "KVSMGCCCKDMUVSHOCUVLCKLKKGLHQOTPLIKSSGGHKOMKLGOG", "CQLSOKGCQKEMCMUSOFGMGSIGRCCSCQSKIKIQFMEKCPECQ", "ECFPMOGMSECHCGSMCNOPIOCSMCOCHGMCCGLIJVTQRKCKGOLCO"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"CMUUHKTPKCOCSEHQUUCRHCCSCCMGTQDKTGEKLOMRSVCNSSMTH", "ORCVPGQJSVRKSNOTCLFIMORPTGFEICLQNRGSMMVQCSKGCM", "MSCSCHNSJEJRMGGKMRSTTNUGHKCRRGUHHOTCGOLCMEGOKOGQM", "JLIGRIDQSPHTCURQLSMSMGCCMOHSCKGGCKOSDPUTOCCQMCSV", "QEGFKGECGUEEQESLSVSRFGIOJCOUCSCRKUOQOKJMRMOCUCTR", "KVSMGCCCKDMUVSHOCUVLCKLKKGLHQOTPLIKSSGGHKOMKLGOG", "HOMOTCOLKUUGCSCPVQOJUHSHQSCSSGCCCUHMISJHQMUMC", "SMOHUQFCKJCSCQFQOKGTGCQMSRQHITRKFLMQUCNKONMCTCC", "NSOMQVGMMMEKCUNROCSHJOGKCOKFHIUOCCOSCFCCHMUUCRCSC", "CTICRCLDIFNKOEMSKQCTSRESMSKSCRUMFPCKCSGGKIOSNS", "GERMGNICQCSRQKKRQPPRSMIKRMCNJFCCJHCCUMHONOMOICCCO", "RQSQSHCGMOMJRGCQVCCCKCKIMKSUQMMGRHDOHSPUMCPCS", "SCCMQCCOKRLISRCMGVOHCEQSTCVECSCUMEKMKSMCCIHGJROCK", "OEEOKEESKSIKCGSEKCMKCUGGIGSTGSSSQODSKMRTCEECMPCR", "SKSQCOUCNSSKHKEMESCIPOQRGGIKIQCUCKOFCEKUPTRII", "GFEOCLFIQCVCEOCJCDKMKGSUSQRMPIUPOENODRUPKLECIUK", "OMEOQTQKISGLGSCCKCMDPJGOIKDCHCSSSKSCMHSSNSISS", "CLMOGVGHKGSGGCCCJFOSCORCKGIKHMUROOOFKVCCKUCTOCMO", "OCKPPCCLGKDKGIOIQMIHSLKHSOCTQQICKGGDSIEHCFSILSOCQ", "GCGOVGMTTUSMOCRKUSCKKHEESGGVCCCLMDKOTRSHCDCOR", "HLQSIKCMDLHECGOSDKMSMKFKOCMMCHEVHCCEMPRRSSKQSQC", "MSUSSRCUDDLKNRFORONNCTPKSHCMGGCJGCHCRQDOGCKMK", "QHCGJNCTMMEMKCKKSTUMCCKGCCOSIRRCMTCKDSCHRUROO", "OCMCTGKCQQKCICKGHFMOOVUECHCOIMILMGSRGIOCULQDHCOI", "ECFPMOGMSECHCGSMCNOPIOCSMCOCHGMCCGLIJVTQRKCKGOLCO", "KMSCEHOGLMORCOKRKEEMSUJKOOGHHFHSHOSGKOEKCOGDRC", "CJOFKEPOCSKIOPMQFCMHLGEOCCOCHCGVNPNOEVMRNQRMK", "ONTCPERUMOCKDSGTQCGCMCMGCCSOUHDCCHKKPOTROPLKC", "OSOGCFMESULDGMQSCGCSQMNCGCIKMKMNMKJQKHSCVMKGE", "HQKUQQCCGHCGTGSCTKSTCKKSSGIEMCCCOGCINGUOHGTCOK", "KURTCIDQGCEMHGKGSCNCVKKKUCODFSQGLOGOCEMGOGQECMO", "LIQOOIMRSGCQMETSKCFKIHGQQCKCTMSMMCGCFGEMQSGOC", "CQLSOKGCQKEMCMUSOFGMGSIGRCCSCQSKIKIQFMEKCPECQ", "TCKSHLGSOKGHMUMHEICCIEHCSUEUPCCEKHGSKGFKGGCKKGGFO", "CKCUKSSHOQUGKCOISMCEGSKECHUCQCQEDGGEJCHMCSMNT", "MQGMCMFICDCERCKMKLCMSKDOEDMFKIHLFKMKMRFQRUQICR", "FCPJGQFUJDRMSGSOQCCHCNOOSCHMMCGGCGKUKHKCIOKQH", "OCKGGCRCGMHUCRDOGRIMOQSLTHMCCKIKECNOGGMOJECOICC", "UCCKCCISSOJCKCCCROCDKSQKIFEVOLEUHHFCHCRORCCUCL", "RGJGVJGNDGCCHVCHFCOCCCCCHULMUVGPCURCOFGTGSUCC", "CCHUKCHTMSKCTLCRGHUSMCCGMIMJKGOICKUCECQSCCEME", "SEMGSKOPGCHCCHMOMLHKISICJEVCGOMECJMCIPGNRDCRC", "GSHORCMHHCQUTECIMINIGUFSMGSCGFCHCOCJPLCRHCCCC", "IVMOUPEOFCSECKCNCCOCPPUIICCMNHFCHCKRKKKCECKCM", "GORMIVSUCGFCICJSCERCCGKGMCPKPQCHHLSFCDGDLCCDN"};
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<string> names = {"CNIOCRGMSKCUGCSRKSJKCOCSVVICQECGCNCGSEQOORQUCTOSC", "CIRQCURPQMKOKMKUKKTMERITRSSUKRKMNKCGDEKQMEMCC", "SKMSHMIKMKVTOKFKIKOCQKJCVSCMCOCNSCKHHGMOQSGKCQ", "GPHICHECMCIMFCCRCSRCSCCQQMCPUKTNCCGKOUGUCLCSGVT", "SOLPMUKRPLPCGIMQPMCGQCCFCGSSGICGMGCCCDEMIMOIK", "MMGCGKOEMICMTICHJSCVICLVSGOUSGCKNLDSKSGCCSKJRGMGF", "MPMOUIMGCQQGHGJICSNVGORCEUCKUKFHSTOHCMGQCSMSLEKCC", "DCSTKGGRKCGJGSIURSSSLKKCIFIRRMGCDGOEMNUGUGCKGSO", "IOTCVGCRSTCJSMCTTMFGRCODMTMCHGQJOEQGCSNQKRHSCHG", "CUKFGGCEUISGCCJOCOPGITSTRINCHCGTCPGHMFMGFKHHMP", "GGESLULJCCJGUIFUCECMJSMCCSCSPSCECHVUOSNCSCEIE", "CGGQOGCRUCMICIGMIGVPSIMOMMGQGMQFOOCCSMMHSCQCT", "CECEHOQFHICMJGKPKHCCCCQCSHMCVEQTISOEDMMCIDGHR", "RCVPQECRELUNGQCKEKKEKUHGOSCCCVRGNFHDLEORGHEMO", "GKMCMCGSSKSCLUGGNECCJERUVISCVLGRMSMKCQMPKONOPSSGU", "OGKHMCROSMCICCCCMRCCCTLGOSJCCIMCIQRQOCLNHCCQS", "HDTKNFOSMKGVUVNHCMNPHUDGCMNEIPSURRMGEGKKCJSSQL", "ICSVSVUKCUSCJRKCHFKGIOTMCGVMRCKGCRCGICQMGRKEHOCM", "MRVCVSCEOOSORSMOVOQCIUHNCHSGNSSOCKGCROSKCCSKHMH", "MLCSMMCCUCKKJCDCDCMGFSHSCCMOCCNCJCMCQCGCIGSPOUC", "EPSSDCDIOSOQGIUMQDCKCSGPKMKKGSIKCGFPKQSMGSQPCLGO", "MCVCUCRSNRIMCQCHCRIOKKMCCCCDCCIHCHCLMGIJSGOGCHKT", "DKQECCPUDPIFPFTOISGCCSCCCKCEFSGMSGFCKUGGSSSCIIMO", "KOOFQKORHOUCCMOCRRGGCOPMHGEKCKPPMNGGICCUMMMSSICCC", "MOKKGDVHSCDLGSRSSCGMQHPKKFKCGCGCGOOSGGCTOMCMCCGO", "DCUCCPCSMREMJEMCMKLGIOCNLCQGUREHVGGECCQCCQKGMGK", "ORGCDGCSKHSCGOSICSIKOSNITMLMCCKUCMCQISVRUECOM", "EGCRGKPGMUCFMORNSIMERQSCQJJGCGCFKIKCROGGCVCMOMO", "MEHCCCCROVHGECEJCUGRJCPRSQMTREQCRCJCICCJFJGHCRCUH", "MCMUCKCGTHPRIQOOHCMOOKUKHQQMUSJCSGHESVCCKQSELSQM", "ISSQIQCIGCSIEKECQIGKGCUCOCGGMKRKOTKMUKOHCQMIOU", "CGRSPCSNCOKGRKJJDSPGRQICHORCCKOICRQNCHCSCCKCCMMKI", "KCOFCGIMIIKQCSKKCICGPCPDEPSMLOKDDHDRKKOCQCGSMCMG", "CMGCVHIKOFKRECMUCMCUSTKGRGMGSCQGIFSEOICJMECCGKST", "UJNFHTDSQQRCKGMHKOKGQGCKCJSCHCCJCCCUORIMMMJTFK", "COORCKSRQCMNCGSHJDSQCVGIHMIDSSCCMUDGPMEQTMKSUP", "CGUKCSQUFOOHCMHTTEMOSJMFSCUCMCUDOVOCCGCQOKKGP", "GMOCOGMQGTLSCEGGCUMVCLUMKCSOIRCSEUPICMICGLCGQCHKM", "ECUCQSSJKRRIOMSLLQCRSTMGEUSCLOUPHCKCGJCVSGRCHVIQC", "GIOQGEJSTCLSFKOLGHKLREOOMHCFVMHHRCCLMICCQLECSCERM", "QMSTSHSTSMCCUESHCFCCGMCEJCOKTPMIGEGMCCMUCCUMV", "MUGOHRSROSCQLCESOCMGCMKCUKNFMMCOCOECUMCRNSKRILSMG", "HCMCJSQSMLOQEHOTKSGMKHDNOUMKNSGCSHKMGSPKGCCGPCRTJ", "KDUELMKMCMCSTEVQCVCMGOGSOJGCQPQRCUGGRMHCMCEEOUI", "PUEOCKMKCCNOCOUSEKUGESFGVGCKVNKQPOJMGKICSPIKIC"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"GKMCMCGSSKSCLUGGNECCJERUVISCVLGRMSMKCQMPKONOPSSGU", "ECUCQSSJKRRIOMSLLQCRSTMGEUSCLOUPHCKCGJCVSGRCHVIQC", "MRVCVSCEOOSORSMOVOQCIUHNCHSGNSSOCKGCROSKCCSKHMH", "MCMUCKCGTHPRIQOOHCMOOKUKHQQMUSJCSGHESVCCKQSELSQM", "MUGOHRSROSCQLCESOCMGCMKCUKNFMMCOCOECUMCRNSKRILSMG", "HCMCJSQSMLOQEHOTKSGMKHDNOUMKNSGCSHKMGSPKGCCGPCRTJ", "CNIOCRGMSKCUGCSRKSJKCOCSVVICQECGCNCGSEQOORQUCTOSC", "HDTKNFOSMKGVUVNHCMNPHUDGCMNEIPSURRMGEGKKCJSSQL", "CIRQCURPQMKOKMKUKKTMERITRSSUKRKMNKCGDEKQMEMCC", "MPMOUIMGCQQGHGJICSNVGORCEUCKUKFHSTOHCMGQCSMSLEKCC", "EPSSDCDIOSOQGIUMQDCKCSGPKMKKGSIKCGFPKQSMGSQPCLGO", "IOTCVGCRSTCJSMCTTMFGRCODMTMCHGQJOEQGCSNQKRHSCHG", "COORCKSRQCMNCGSHJDSQCVGIHMIDSSCCMUDGPMEQTMKSUP", "SKMSHMIKMKVTOKFKIKOCQKJCVSCMCOCNSCKHHGMOQSGKCQ", "DCSTKGGRKCGJGSIURSSSLKKCIFIRRMGCDGOEMNUGUGCKGSO", "ICSVSVUKCUSCJRKCHFKGIOTMCGVMRCKGCRCGICQMGRKEHOCM", "MMGCGKOEMICMTICHJSCVICLVSGOUSGCKNLDSKSGCCSKJRGMGF", "GMOCOGMQGTLSCEGGCUMVCLUMKCSOIRCSEUPICMICGLCGQCHKM", "KDUELMKMCMCSTEVQCVCMGOGSOJGCQPQRCUGGRMHCMCEEOUI", "KOOFQKORHOUCCMOCRRGGCOPMHGEKCKPPMNGGICCUMMMSSICCC", "PUEOCKMKCCNOCOUSEKUGESFGVGCKVNKQPOJMGKICSPIKIC", "CGUKCSQUFOOHCMHTTEMOSJMFSCUCMCUDOVOCCGCQOKKGP", "ORGCDGCSKHSCGOSICSIKOSNITMLMCCKUCMCQISVRUECOM", "ISSQIQCIGCSIEKECQIGKGCUCOCGGMKRKOTKMUKOHCQMIOU", "GIOQGEJSTCLSFKOLGHKLREOOMHCFVMHHRCCLMICCQLECSCERM", "CGRSPCSNCOKGRKJJDSPGRQICHORCCKOICRQNCHCSCCKCCMMKI", "CMGCVHIKOFKRECMUCMCUSTKGRGMGSCQGIFSEOICJMECCGKST", "CGGQOGCRUCMICIGMIGVPSIMOMMGQGMQFOOCCSMMHSCQCT", "EGCRGKPGMUCFMORNSIMERQSCQJJGCGCFKIKCROGGCVCMOMO", "MOKKGDVHSCDLGSRSSCGMQHPKKFKCGCGCGOOSGGCTOMCMCCGO", "GPHICHECMCIMFCCRCSRCSCCQQMCPUKTNCCGKOUGUCLCSGVT", "QMSTSHSTSMCCUESHCFCCGMCEJCOKTPMIGEGMCCMUCCUMV", "UJNFHTDSQQRCKGMHKOKGQGCKCJSCHCCJCCCUORIMMMJTFK", "DKQECCPUDPIFPFTOISGCCSCCCKCEFSGMSGFCKUGGSSSCIIMO", "RCVPQECRELUNGQCKEKKEKUHGOSCCCVRGNFHDLEORGHEMO", "MEHCCCCROVHGECEJCUGRJCPRSQMTREQCRCJCICCJFJGHCRCUH", "CUKFGGCEUISGCCJOCOPGITSTRINCHCGTCPGHMFMGFKHHMP", "GGESLULJCCJGUIFUCECMJSMCCSCSPSCECHVUOSNCSCEIE", "KCOFCGIMIIKQCSKKCICGPCPDEPSMLOKDDHDRKKOCQCGSMCMG", "SOLPMUKRPLPCGIMQPMCGQCCFCGSSGICGMGCCCDEMIMOIK", "DCUCCPCSMREMJEMCMKLGIOCNLCQGUREHVGGECCQCCQKGMGK", "MCVCUCRSNRIMCQCHCRIOKKMCCCCDCCIHCHCLMGIJSGOGCHKT", "OGKHMCROSMCICCCCMRCCCTLGOSJCCIMCIQRQOCLNHCCQS", "MLCSMMCCUCKKJCDCDCMGFSHSCCMOCCNCJCMCQCGCIGSPOUC", "CECEHOQFHICMJGKPKHCCCCQCSHMCVEQTISOEDMMCIDGHR"};
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    vector<string> names = {"HSUMICGGIURCFESHIOKJSVOKRMCSSMOOMMCCFNSUOGCPQCCTD", "TMCCVKCUSICKCMOMSCSCMSKSERQCTOGSOOCMLFROMCRSUGCC", "CCQTKMMHKNCQCEVKECKSMIUPQHGRSOUMLSHFMLROVMUICKI", "RSCRKSCECGMCTNKMGSURCOUOUSOJOCMOERGESNPHUNCCGCD", "KGFMQMCUHHCGHCGKGKRCEGCRGTKGCHMSSMGMVCCCERCHGPE", "TOUECMRUCOHNCHCCSVVOCJJSSCCSTTCMPMKCRSORQKFOMMOK", "RSMUGRISCQGNROQIKMJCMQCCCQEEEKNGMKGCQSEKOCODSNM", "SRJTLCOLMMSOMKCSHCGOKJKGCJMGKUHLKDMOMJCEMFOTG", "GDEMNKKHMMGEORGDOEOKUJPSUCMCTUSCRCOCUGMGQKCCGKRSI", "MGIQGQCSCKCCSQICCTORPCJKOGCHDODCOMCCEQCQSIQMQP", "LDHOFUICKROCGMGIEEKHUDGGMQHKCLMHCEHUDMDCOUHSFCCG", "KOUHCSFMQGGRMTJVSHNMSQECIOIHCONMMTCOCTISHKKGS", "RKQHMSKCOKVCOROSOOUIOSRUUSRSGROGUVCKNGRCPCSON", "GNSCSKKQCDMPSKKOCRKCKTCCLORHCEDKGCHFFJGCSCGOCUI", "ICCCUDSHCGOCJCHGMCGVMFGRVMGREGMJTJUMCQCSKKMCC", "RKJMHKCOIPRCUOMQTOVDRKCMGLCGDOUKUECFMGCVGQDSG", "CCOJKCQUUSSPTSSPSCQEMGCICIHMTOKCPQQOGENOEGKCJMEVT", "JCSHMKMSMSCUGCRQCKOCSCMSKCCCQIGCJTSTKEUUDIGQGCFN", "MGLCTJEGGKHGKECLIELKKFPGGQOMMMUGTCCEOMCGMMVHMQIHD", "OCVLMPKFOMCOVOCPCCCECHCCFCOJCCMICIEOOCRMMUFEGKVF", "GCCGKMCSCMKINCGHCMKRSFKRKKOMRGQCSSGCSCMHCODCSGKP", "EKFKJKDOCCGMCOOOOMJGGUJRVSHPRCMJRQLGJCODIGOKIFK", "HRKRRGHLCMIVGRUKIKSOMOVSCKKHMECFGSEICKGOKLOGSFKC", "CREKOLTCGMUOCIPMOPSKCCDTCQKOCCMKSIJRCRUCGVOUUKIJ", "CGGGMMCCCGELCKISMQJCHCEOQGCRVTPISOSCCCCCJKPOOTGSK", "QECCOICMCIKOOKRUCCCRTCECCOKFQCRFSKMJCCMTSMCGMNH", "MCEPNPOCDUCHENMRGCLCCNCCDQEOSMKFCNCHEVSCGCOHRLOHC", "HKUGFHCRIQHMKEGERHTKCORSSMQMOCOUQUCECSIMGCCRMU", "SUOQUMRVCKKDCCOGUTCTMGHJGNJOCHGCCFMOOHICUCSPMCECC", "MQEIOVUCUGMOMGVQRJVRUSHICHMHIHCCMMMSHCSCSSDGLCUM", "JMHMKEVOISJECMMTFMGCOCCTRMIRMKUIHQKLCSMMHNIKK", "IOEOLUTRGHDQUFNUUGURGCRKSGSIMVGDKCHIINGOCGJQF", "MTCMHMGMKMQKUSDCNMKQECKCCFSJIGCPCOMCCEFQGIJPN", "OIQOONGMCCNICIOSSGCPMCGGCOKHKIQMCPQCGLSCFJMKR", "OHMLPCOMGMCQOCVMKCEJMFUCEGOSDEHKGCPKGUDSUTIOE", "CEECCECLGKOUOCCSJQTTCPOSEDNSOCOFTCCEGSCLCCCDICC", "CKREKGKCCNTKJCOUEUORNKCCMMOCOCSSMRCGNCRORGRKR", "MJOSVNGJLCGRRGQUKFSSSCCOGQCCSLKHGKCHGCGCFIQICKUK", "OUCSMCCGJORSOOMMFSKKOJKCCILOCGQCDHQKCELICJFSL", "HEMQCDRGRTKMOKCCMOGCGCSGKSGHLICCKHONMKSGMULKOT", "MSIEUVGNCDFIKKVMHRQQORKOCCCSCHCCGRLCCCOKOSVETCCJ", "OCQCGIRLCMSNURIQMEFMVGCCOCLTOOKMOIHMCMRHOOGSCIVEF", "HOEKUSCCCMGVCGIKEIVCCDFHISSOGNCCCCGCKFSOEUCSKS", "CMIEHCDUUHCMSGCHSGCRIPOIMOMQCCFSRGGCQVHTSOUGSVL", "GNVHHOGMQHKURSUHHQRFTOORICUCCCGCCCRRUICOCIUPHPSLJ"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"RKQHMSKCOKVCOROSOOUIOSRUUSRSGROGUVCKNGRCPCSON", "TOUECMRUCOHNCHCCSVVOCJJSSCCSTTCMPMKCRSORQKFOMMOK", "CCOJKCQUUSSPTSSPSCQEMGCICIHMTOKCPQQOGENOEGKCJMEVT", "GNVHHOGMQHKURSUHHQRFTOORICUCCCGCCCRRUICOCIUPHPSLJ", "MQEIOVUCUGMOMGVQRJVRUSHICHMHIHCCMMMSHCSCSSDGLCUM", "HSUMICGGIURCFESHIOKJSVOKRMCSSMOOMMCCFNSUOGCPQCCTD", "CCQTKMMHKNCQCEVKECKSMIUPQHGRSOUMLSHFMLROVMUICKI", "TMCCVKCUSICKCMOMSCSCMSKSERQCTOGSOOCMLFROMCRSUGCC", "CREKOLTCGMUOCIPMOPSKCCDTCQKOCCMKSIJRCRUCGVOUUKIJ", "OCQCGIRLCMSNURIQMEFMVGCCOCLTOOKMOIHMCMRHOOGSCIVEF", "RSCRKSCECGMCTNKMGSURCOUOUSOJOCMOERGESNPHUNCCGCD", "GDEMNKKHMMGEORGDOEOKUJPSUCMCTUSCRCOCUGMGQKCCGKRSI", "KOUHCSFMQGGRMTJVSHNMSQECIOIHCONMMTCOCTISHKKGS", "CMIEHCDUUHCMSGCHSGCRIPOIMOMQCCFSRGGCQVHTSOUGSVL", "HRKRRGHLCMIVGRUKIKSOMOVSCKKHMECFGSEICKGOKLOGSFKC", "HKUGFHCRIQHMKEGERHTKCORSSMQMOCOUQUCECSIMGCCRMU", "IOEOLUTRGHDQUFNUUGURGCRKSGSIMVGDKCHIINGOCGJQF", "JCSHMKMSMSCUGCRQCKOCSCMSKCCCQIGCJTSTKEUUDIGQGCFN", "RSMUGRISCQGNROQIKMJCMQCCCQEEEKNGMKGCQSEKOCODSNM", "SUOQUMRVCKKDCCOGUTCTMGHJGNJOCHGCCFMOOHICUCSPMCECC", "MJOSVNGJLCGRRGQUKFSSSCCOGQCCSLKHGKCHGCGCFIQICKUK", "MSIEUVGNCDFIKKVMHRQQORKOCCCSCHCCGRLCCCOKOSVETCCJ", "RKJMHKCOIPRCUOMQTOVDRKCMGLCGDOUKUECFMGCVGQDSG", "JMHMKEVOISJECMMTFMGCOCCTRMIRMKUIHQKLCSMMHNIKK", "CKREKGKCCNTKJCOUEUORNKCCMMOCOCSSMRCGNCRORGRKR", "EKFKJKDOCCGMCOOOOMJGGUJRVSHPRCMJRQLGJCODIGOKIFK", "SRJTLCOLMMSOMKCSHCGOKJKGCJMGKUHLKDMOMJCEMFOTG", "HEMQCDRGRTKMOKCCMOGCGCSGKSGHLICCKHONMKSGMULKOT", "CGGGMMCCCGELCKISMQJCHCEOQGCRVTPISOSCCCCCJKPOOTGSK", "MGLCTJEGGKHGKECLIELKKFPGGQOMMMUGTCCEOMCGMMVHMQIHD", "GCCGKMCSCMKINCGHCMKRSFKRKKOMRGQCSSGCSCMHCODCSGKP", "OHMLPCOMGMCQOCVMKCEJMFUCEGOSDEHKGCPKGUDSUTIOE", "MGIQGQCSCKCCSQICCTORPCJKOGCHDODCOMCCEQCQSIQMQP", "OIQOONGMCCNICIOSSGCPMCGGCOKHKIQMCPQCGLSCFJMKR", "QECCOICMCIKOOKRUCCCRTCECCOKFQCRFSKMJCCMTSMCGMNH", "OUCSMCCGJORSOOMMFSKKOJKCCILOCGQCDHQKCELICJFSL", "MCEPNPOCDUCHENMRGCLCCNCCDQEOSMKFCNCHEVSCGCOHRLOHC", "GNSCSKKQCDMPSKKOCRKCKTCCLORHCEDKGCHFFJGCSCGOCUI", "OCVLMPKFOMCOVOCPCCCECHCCFCOJCCMICIEOOCRMMUFEGKVF", "MTCMHMGMKMQKUSDCNMKQECKCCFSJIGCPCOMCCEFQGIJPN", "ICCCUDSHCGOCJCHGMCGVMFGRVMGREGMJTJUMCQCSKKMCC", "LDHOFUICKROCGMGIEEKHUDGGMQHKCLMHCEHUDMDCOUHSFCCG", "HOEKUSCCCMGVCGIKEIVCCDFHISSOGNCCCCGCKFSOEUCSKS", "KGFMQMCUHHCGHCGKGKRCEGCRGTKGCHMSSMGMVCCCERCHGPE", "CEECCECLGKOUOCCSJQTTCPOSEDNSOCOFTCCEGSCLCCCDICC"};
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    vector<string> names = {"OCUCGUCMOKLHCHKHKGQGUCQRCQLQOEPGOOCOTIKKSSURGEIGT", "CGELHIOKCCIIHGNMMQFCKNVNCSCOOJNMISCCCCKKKUHKEEVQ", "ESKSHQGGSSLCVVGOKCCFEOGOMUSQMGINGMCMOMRUGSJVSTOI", "CEKDRSCSOGKCQIOCTMIQCMOKKSHUTEIDMHMCESCLMKOJMC", "EOKOMMCNNEHUSNRCSCICGUPHLOCOQOCRPMHNSKFIICDCG", "SCSGCHJMIQKGOOSCIGRMCCCGCIKOTGMKTCOLMSICKCCHSCOM", "JCGCNTOUCCUKHRCOFRCGHSMKJCCTRSCCRMCKCCKKCHJMG", "CFQEOMVORIMOCJCCISCLOFONHMCSGGLQCJKSOEOCGHEOMLES", "EGCMCSEICICVCMGHKHHKCRGCSURMJKKKCRKKQCRMIHKKKKVGC", "CISQEQDJCULUGIMJSMFEGULRGILQVHMCCKKMGKQKSCHHGMCN", "LKGECCCSPRSSVKMPKCEMSGKFCTRFUSCCCSOQPCOHMCSRSC", "CCUVMVCTCSCPCSCONSKORHSQCMCGQCPSFRLICLQOTEVMI", "KCFMMUMVCSRNGDCCCFGCCCMLICJISMOOOSNFCMSUKSNGOKC", "KCCGLCHGHGCCLQESERCHCQKGKKNCCGKSKIECCECMORCOUSKCJ", "RUCMJEGKMKGEVJISNMMCCKRNCKUHOKRRCVCSSCGUPHCKMCECC", "NCSCRNUORKKNUKVCDSEUCGKOOHDSMEGROCRCOSCCSCHCG", "KCRSICGDHONUKEMQNDGCMEOQPRECPMOMRKMPCPPQHCMKQ", "IRCQCHERGKSSIMHKTESGDQMCOUMNCOMOCGVOFIJUGSQTS", "HMVKMKUSMOMICGSKRCCUMQPCIMCGMCHMOMKHENUVRQMSKTSG", "KPGKIIVOQRHSMURPCOOCCQDHMSNCECHHFHNCCGCCKGCGQ", "ECCLPUPGGCOOCMGNSCUGVKHCDCCHROERGMSEPOQCHUCQG", "CKGRCJGGOCCCSKHEGCMRIPCKCLKKUMRSTMULEPCSUVMOM", "MVFGCCCGGCJHCCGOCKSRSOGECJPCLKEFESCEGIKSQKQOLEHOC", "IQSKCOKSGTFGUUSOMNJSRMJKKOFMCDLCCUOMCSGKECJOSLHRM", "ORCGCCICRSPLCHCNKCKHIUHEKIIHMIGGFRMRGOUGLOKCQVOS", "NMSSDCCOSCCSKMCCQMJODCCIONCGFCDCFMKUKCTSQMSCN", "UGSRRVRSLLOOCOCSNTCMHULNCMHVTPFEURSKOLKLSCUVSTQ", "HCNGQMTCQGPKSMKCQLRIJEKMTSSEOLMGNHGQTTCGKQCOC", "CCKJCCMESKCVFCOSRIJCFMMHHECRHDLECUVHTDRFCQJCIOKO", "NMCMGIUIQEJGVMLICCJCSEKUTJSKKMCGCPCGOEGCOMSQC", "QROMIGOPCGRSCCICKRKGGCRKNHCKVKMRMCCFFCQCDCCNSCG", "MCSCFCIKIIOCSCQRUMMQQCCOQCHFHSNGOSQOCSEMPFNMF", "VMOJOGIKOUCGMQEUCRGPMMMCHCUGSSMOREQCMOSCJUULCMF", "MPMSKHGCDSCRCIOCCQRKFGSCMDPGHDJGEKPOMRSCRMOIIDC", "CJKRJCKMGRISOCKERCMUFOMHTRSCCFKOKJSGHQCKCRMHKOMR", "GCQSRQQGCKSCOKRGILHCRCICMLHOMSDRRKQCDIGHCOIGOELLV", "MDHSFFCKKCDOMCLUOKCKKMOCNCSLOSCNQJCRNGUQKUMTMGK", "CCCQMCOORGQGSUMFCKCMSIDSICEDMCEOCUSJOMCGSGSMFCQG", "DCEHVCUUCSCMCKQGROQMGKMCDHISCSCCMOGUKCKLMEUGHO", "EKUVNOPQMSMJEGOOCKMOQSSSCUOGLKQRUKCOCEECPVKJIC", "CDSCOGCCCESSHCECHSGMMCSGMGDCOGGLGCGCEOQSKTJCKGSGU", "UUCJDCHCGVMQOCSSKUMCRCCSGFTPRJKQJRCKKHERIMGLV", "SKMRTCCKHOMFCHGCIRIVHUCKSMRGJSUSCKIELORKSOODHSUGF", "SCHOCUUJSOCMUMSSCCORCCPMCCSRNVRFDRQOCJMKLOHSKCHC", "OOQCSIRCOUKESCGCJJCSGKCKOKCCKDRIRJKISQOJMOGCSP"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"UGSRRVRSLLOOCOCSNTCMHULNCMHVTPFEURSKOLKLSCUVSTQ", "ESKSHQGGSSLCVVGOKCCFEOGOMUSQMGINGMCMOMRUGSJVSTOI", "HMVKMKUSMOMICGSKRCCUMQPCIMCGMCHMOMKHENUVRQMSKTSG", "IQSKCOKSGTFGUUSOMNJSRMJKKOFMCDLCCUOMCSGKECJOSLHRM", "SKMRTCCKHOMFCHGCIRIVHUCKSMRGJSUSCKIELORKSOODHSUGF", "OCUCGUCMOKLHCHKHKGQGUCQRCQLQOEPGOOCOTIKKSSURGEIGT", "EKUVNOPQMSMJEGOOCKMOQSSSCUOGLKQRUKCOCEECPVKJIC", "VMOJOGIKOUCGMQEUCRGPMMMCHCUGSSMOREQCMOSCJUULCMF", "SCHOCUUJSOCMUMSSCCORCCPMCCSRNVRFDRQOCJMKLOHSKCHC", "CCUVMVCTCSCPCSCONSKORHSQCMCGQCPSFRLICLQOTEVMI", "IRCQCHERGKSSIMHKTESGDQMCOUMNCOMOCGVOFIJUGSQTS", "CJKRJCKMGRISOCKERCMUFOMHTRSCCFKOKJSGHQCKCRMHKOMR", "RUCMJEGKMKGEVJISNMMCCKRNCKUHOKRRCVCSSCGUPHCKMCECC", "GCQSRQQGCKSCOKRGILHCRCICMLHOMSDRRKQCDIGHCOIGOELLV", "LKGECCCSPRSSVKMPKCEMSGKFCTRFUSCCCSOQPCOHMCSRSC", "MDHSFFCKKCDOMCLUOKCKKMOCNCSLOSCNQJCRNGUQKUMTMGK", "HCNGQMTCQGPKSMKCQLRIJEKMTSSEOLMGNHGQTTCGKQCOC", "CISQEQDJCULUGIMJSMFEGULRGILQVHMCCKKMGKQKSCHHGMCN", "UUCJDCHCGVMQOCSSKUMCRCCSGFTPRJKQJRCKKHERIMGLV", "ORCGCCICRSPLCHCNKCKHIUHEKIIHMIGGFRMRGOUGLOKCQVOS", "KCRSICGDHONUKEMQNDGCMEOQPRECPMOMRKMPCPPQHCMKQ", "CFQEOMVORIMOCJCCISCLOFONHMCSGGLQCJKSOEOCGHEOMLES", "CKGRCJGGOCCCSKHEGCMRIPCKCLKKUMRSTMULEPCSUVMOM", "OOQCSIRCOUKESCGCJJCSGKCKOKCCKDRIRJKISQOJMOGCSP", "NCSCRNUORKKNUKVCDSEUCGKOOHDSMEGROCRCOSCCSCHCG", "KCFMMUMVCSRNGDCCCFGCCCMLICJISMOOOSNFCMSUKSNGOKC", "MCSCFCIKIIOCSCQRUMMQQCCOQCHFHSNGOSQOCSEMPFNMF", "EGCMCSEICICVCMGHKHHKCRGCSURMJKKKCRKKQCRMIHKKKKVGC", "CEKDRSCSOGKCQIOCTMIQCMOKKSHUTEIDMHMCESCLMKOJMC", "CCCQMCOORGQGSUMFCKCMSIDSICEDMCEOCUSJOMCGSGSMFCQG", "SCSGCHJMIQKGOOSCIGRMCCCGCIKOTGMKTCOLMSICKCCHSCOM", "EOKOMMCNNEHUSNRCSCICGUPHLOCOQOCRPMHNSKFIICDCG", "CGELHIOKCCIIHGNMMQFCKNVNCSCOOJNMISCCCCKKKUHKEEVQ", "DCEHVCUUCSCMCKQGROQMGKMCDHISCSCCMOGUKCKLMEUGHO", "MPMSKHGCDSCRCIOCCQRKFGSCMDPGHDJGEKPOMRSCRMOIIDC", "ECCLPUPGGCOOCMGNSCUGVKHCDCCHROERGMSEPOQCHUCQG", "NMCMGIUIQEJGVMLICCJCSEKUTJSKKMCGCPCGOEGCOMSQC", "CCKJCCMESKCVFCOSRIJCFMMHHECRHDLECUVHTDRFCQJCIOKO", "QROMIGOPCGRSCCICKRKGGCRKNHCKVKMRMCCFFCQCDCCNSCG", "CDSCOGCCCESSHCECHSGMMCSGMGDCOGGLGCGCEOQSKTJCKGSGU", "MVFGCCCGGCJHCCGOCKSRSOGECJPCLKEFESCEGIKSQKQOLEHOC", "KPGKIIVOQRHSMURPCOOCCQDHMSNCECHHFHNCCGCCKGCGQ", "NMSSDCCOSCCSKMCCQMJODCCIONCGFCDCFMKUKCTSQMSCN", "JCGCNTOUCCUKHRCOFRCGHSMKJCCTRSCCRMCKCCKKCHJMG", "KCCGLCHGHGCCLQESERCHCQKGKKNCCGKSKIECCECMORCOUSKCJ"};
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    vector<string> names = {"MKCSRDKUSGCORKICCUHMOOMVNGCSLCJTRSOUVCSJOFOOMUEU", "FCCSOSCGHCCCRUCKGKFCCSCMOUKCIPIICCQGCGOIQCJOM", "GGOCCSMIICFSOLGVKSGRCMGMSMQSDMSOJQSFRSSKQOCSTO", "QHOUSSHSOUHGTMEVOPCIKNKPQKSOCRKLRCHCDVCGCSQSOGR", "ESOOGCCQNRHMCTMGGKGHICCMCDMCKRSGEREGRCORRIGMKOLL", "CRKJCNKGUTCRMGHGDCHKMGTVSCQIGNGFMKKGVOMROECJGCGKS", "NLEPICTKCHOMDSKCMJCKSCCVCIOHOCSRRRDCJKIJNSOCKS", "QMUSECECPEJITSKVCTFUQTCLEOCMOCKCNFUCOSOMCUROSFIFH", "OCOMCCKCCKCCHMOOGKEKUKMCRQKKKSMCCMCHVNIMERJCSGN", "GCHDLCIGRQMMDSGEFOPCNCMOCRVIHKSUSJCLOGGPSRGRM", "MEHKUSEMCNESQLCLCGHKMMSRMMLGKGRHMFUOONCCIKRQC", "CHRICSCHMQSKCROHSPPQMSCQDECKCCRCKCSMKGCOSSEGEM", "QSEOCKQGSUMQSFEOQRRCCNTJCGUVGCCSVGSCUKKEGSMMEFKGS", "KKOTUHOIGOCQQECHKOOCSRCDGOMSEHHCSCEOIQOHQGGKHGCS", "GEMVNRVCOHOEMHEECFPOJGNEOCOMCSMHUECRRECVMCOOMRCMN", "JROMEROMKICRSIGOTGLSHKKMSKRHQSSKLCGCMIPQMSEMG", "KCCLUGDSMCGDERQCEKOGVKGSKSEIHSOCCGOFMKGGKCLCMQ", "CSKCRGJGTJEDVKOJTOKSVCLCKCNSOCGOSKOGRRMROQMSMCCS", "CICKOCQCCKCGSKSCOOCFDSUUOFCESPDHKCIROCDOGSMLK", "SGCFMNCSCSLCKCKLPCCDKIMFGMUSMKCOMSQOCJUKNCVIMMMM", "CUCHFUCORLCRHHNUCIHQCTDRRCCEHSFCCMGQRESNOEKUC", "EKMOCCRUMKKTCNLGGCGQFCOPSMUSDRKHOCFCOCSPKMOGOMT", "MOUGCOEKKMSPKMRKLUKMUSCCJMUJCPRJDCKUVGCESPCGHQCK", "HCCILIRMKRLRRUGECMUEUSMIVHSEURHDRHHJMCGEFHHTO", "MKFIMCTJEICGCQUUKMOGLHCNGGMMGOCOCMEGKSERGPMKROG", "CHCHCKORKEMQCTFCRFMPOGRDEJGCRUOCGVHIKCJCECKRU", "SEVRGGFKSCMMRCSJCSCKOMTCULCCSUKOSQKLCSICUDISS", "MFPOMQIKTMKRKLQNOQCRFGCMSUGGICPEDCSGJCFGMLKCGKMO", "MCDCHNGOUEIIHKHPMNSMFRCRUGQMCFCHISCLCVQEHGDQM", "CRQGCOSCEMOCCCSPDMQKKKFGDSGCDHSKVSICRKRKQMOSC", "CCTSLGRHMQFCSHJCEKESCGDQICQJPGRMKUOQEUIOGCCKRHQ", "RCICMSCCROJMERCVGMCVMGOCOERKNCCKGQCRVKSCEIIQRIEO", "ISIHCNEMMHGQCLVCRSNCCCUSGKMQSMQIMCOCGCROGEECS", "CSLMGGOKCUHMQUTHOSGGRGSKKSCGKOUFMQIGRSKUCCPFH", "VHOICCCCUGCKILCJCKVCJKKMDTUDQIMSOKOPMKJTTTCKMO", "CSUEHEDSSVCQGKKFSROQCSKSHGOEMGOKOMSMKCMOUCLMR", "GSSCLURGMOMOGMSKHCDIVROGGCCCCPRSCGKQCCSMKCKSKJSK", "HORGCHKFCERSLLGOFOOOMHHOIGORVMHOGICOJCLSSMUHCVMS", "LPKOCHJCKSSCGVQSCCGQCCSOSCCTMDCKCCOHLJOGMDJCSRCHH", "CIISSUNCHCSLCMVKHHGCCCFMGCROHSKQCKFGMKROSECCT", "OCMCJVTSMGCGIRCCTOCDKUCORHKRMNSOMKCRUPIPKKHJPTOMK", "TSPKMTCGGKIERCGCDSLCKHGSRKCOGHGUPESGPHUDSQUEG", "CQSORCMCKCMSFCMSMCMKVVKQCCMNOCIESTRCEMRMHMRRO", "CCSCSTSCUNKSTGCMDOQCIFTRCCLEKSIFOMQSTKMPSJPUM", "CKKGRCCCDQOMVCGCIPMMUKKGCOKGCJOKGVUCUCGCICMJS"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"MKCSRDKUSGCORKICCUHMOOMVNGCSLCJTRSOUVCSJOFOOMUEU", "QHOUSSHSOUHGTMEVOPCIKNKPQKSOCRKLRCHCDVCGCSQSOGR", "OCMCJVTSMGCGIRCCTOCDKUCORHKRMNSOMKCRUPIPKKHJPTOMK", "QSEOCKQGSUMQSFEOQRRCCNTJCGUVGCCSVGSCUKKEGSMMEFKGS", "CSKCRGJGTJEDVKOJTOKSVCLCKCNSOCGOSKOGRRMROQMSMCCS", "GGOCCSMIICFSOLGVKSGRCMGMSMQSDMSOJQSFRSSKQOCSTO", "QMUSECECPEJITSKVCTFUQTCLEOCMOCKCNFUCOSOMCUROSFIFH", "MOUGCOEKKMSPKMRKLUKMUSCCJMUJCPRJDCKUVGCESPCGHQCK", "HORGCHKFCERSLLGOFOOOMHHOIGORVMHOGICOJCLSSMUHCVMS", "CCSCSTSCUNKSTGCMDOQCIFTRCCLEKSIFOMQSTKMPSJPUM", "JROMEROMKICRSIGOTGLSHKKMSKRHQSSKLCGCMIPQMSEMG", "CSUEHEDSSVCQGKKFSROQCSKSHGOEMGOKOMSMKCMOUCLMR", "SEVRGGFKSCMMRCSJCSCKOMTCULCCSUKOSQKLCSICUDISS", "CSLMGGOKCUHMQUTHOSGGRGSKKSCGKOUFMQIGRSKUCCPFH", "GEMVNRVCOHOEMHEECFPOJGNEOCOMCSMHUECRRECVMCOOMRCMN", "EKMOCCRUMKKTCNLGGCGQFCOPSMUSDRKHOCFCOCSPKMOGOMT", "GSSCLURGMOMOGMSKHCDIVROGGCCCCPRSCGKQCCSMKCKSKJSK", "CQSORCMCKCMSFCMSMCMKVVKQCCMNOCIESTRCEMRMHMRRO", "CRKJCNKGUTCRMGHGDCHKMGTVSCQIGNGFMKKGVOMROECJGCGKS", "SGCFMNCSCSLCKCKLPCCDKIMFGMUSMKCOMSQOCJUKNCVIMMMM", "MFPOMQIKTMKRKLQNOQCRFGCMSUGGICPEDCSGJCFGMLKCGKMO", "VHOICCCCUGCKILCJCKVCJKKMDTUDQIMSOKOPMKJTTTCKMO", "RCICMSCCROJMERCVGMCVMGOCOERKNCCKGQCRVKSCEIIQRIEO", "HCCILIRMKRLRRUGECMUEUSMIVHSEURHDRHHJMCGEFHHTO", "KKOTUHOIGOCQQECHKOOCSRCDGOMSEHHCSCEOIQOHQGGKHGCS", "CCTSLGRHMQFCSHJCEKESCGDQICQJPGRMKUOQEUIOGCCKRHQ", "TSPKMTCGGKIERCGCDSLCKHGSRKCOGHGUPESGPHUDSQUEG", "GCHDLCIGRQMMDSGEFOPCNCMOCRVIHKSUSJCLOGGPSRGRM", "MEHKUSEMCNESQLCLCGHKMMSRMMLGKGRHMFUOONCCIKRQC", "ESOOGCCQNRHMCTMGGKGHICCMCDMCKRSGEREGRCORRIGMKOLL", "NLEPICTKCHOMDSKCMJCKSCCVCIOHOCSRRRDCJKIJNSOCKS", "MKFIMCTJEICGCQUUKMOGLHCNGGMMGOCOCMEGKSERGPMKROG", "LPKOCHJCKSSCGVQSCCGQCCSOSCCTMDCKCCOHLJOGMDJCSRCHH", "CHRICSCHMQSKCROHSPPQMSCQDECKCCRCKCSMKGCOSSEGEM", "CRQGCOSCEMOCCCSPDMQKKKFGDSGCDHSKVSICRKRKQMOSC", "ISIHCNEMMHGQCLVCRSNCCCUSGKMQSMQIMCOCGCROGEECS", "OCOMCCKCCKCCHMOOGKEKUKMCRQKKKSMCCMCHVNIMERJCSGN", "CUCHFUCORLCRHHNUCIHQCTDRRCCEHSFCCMGQRESNOEKUC", "MCDCHNGOUEIIHKHPMNSMFRCRUGQMCFCHISCLCVQEHGDQM", "CIISSUNCHCSLCMVKHHGCCCFMGCROHSKQCKFGMKROSECCT", "KCCLUGDSMCGDERQCEKOGVKGSKSEIHSOCCGOFMKGGKCLCMQ", "CICKOCQCCKCGSKSCOOCFDSUUOFCESPDHKCIROCDOGSMLK", "CKKGRCCCDQOMVCGCIPMMUKKGCOKGCJOKGVUCUCGCICMJS", "CHCHCKORKEMQCTFCRFMPOGRDEJGCRUOCGVHIKCJCECKRU", "FCCSOSCGHCCCRUCKGKFCCSCMOUKCIPIICCQGCGOIQCJOM"};
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    vector<string> names = {};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    vector<string> names = {};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    vector<string> names = {};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    vector<string> names = {};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    vector<string> names = {"A", "AAABAAB", "AAABAAAAABBBBBAAAAAAAAAAB", "AAAAAAABAABAABAAABA", "AAAAABBBAAAAAABAAAAAAAAAAA", "BAAAABAAAABABBAAABAABAABAAAABABBABAAAA", "AA", "ABBAAAAAAABAAAAAABAAABAAAAAAABAAAAABABAAB", "ABBAAAAAABAAAAABAAAAAAA", "AAAAAAAABABAAAA", "BBAAABB", "AAAAAAABAAAAABAAAAAAABAAABBAAABBBAAAAABABBAAA", "ABBAABABAAAAAABBABAAAAAAAABAABAAAABAA", "BAAABBAABBA", "AAAAAABABAAAABAAABAAAAB", "AAABAAAABAAABBABAABBBAAAAABAAAAABABAAABBAAABAAABA", "ABAAAAAABABAAABAAAAAABAAAAAAB", "AAAAABAABBABAAAAABBBAABBAAAAAABBAA", "AAAABAABABBAAABAAAABAAAAAAABAAABAABAAAAAA", "AAAAAAABAAAAAAABAAAAAAABAAAAABAAAA", "AAAAAABBAAAAABAAAAAAABBABAA", "BAAAAAABBBBABAAABBAAAAA", "AA", "AAAAA", "ABBAAAAAAAAAAAAAAAA", "BAAAAAAAAABAAAAAAABAAABAAAABBBAAABA", "AABBBAAAAAAAAAAABAAAAAABBAAAAAAAAA", "AAAAAABBAABAAABAAABAAAAABAAAABBAAAAABAAABAAA", "BABAAAAAAAAAA", "AABABAAAABB", "ABAAAAABAAABAAAABBAAAAAABBAABAB", "ABAAAAABBABAAAAAABABAAAABAAAA", "AAAAAAABBABAABABAAAABAABAAAAAAA", "AABAAAABAABBABAAAAAABAA", "AAAABBABBABAABAAAAABAAABBBAAAAB", "AAAAAAAAAAA", "A", "AAAAAAA", "ABAAAAAAAABBABB", "BABABAABAABAAAAABA", "BAAAAABAABBABAAAAABABABBBBAAABAAAAAAA", "AAAAAABAAABAAAABAAAAAABAAABBAAAABAAABAABA", "BBBABABBAAAABABAA", "ABAAAAAAAAAAABBABABAAAAAABAABAAABAAABBAAAAAAAAAAA", "AAAAABBAABAAAAAAA", "ABAABAAABAAAAAAAAAABAAAAAAAABABAAAAAAAAABABAABABB", "AAABABA", "BAABBBAAAAAAAAABAAAABAABAAA", "ABBAAAABBBAABAABAAAAAAAABAAAABAAABAAAABB", "AABAAAAAAABAAABAAAAAAAAAAAAABABABAAAAAAABAAAAA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AAABAAAABAAABBABAABBBAAAAABAAAAABABAAABBAAABAAABA", "ABAABAAABAAAAAAAAAABAAAAAAAABABAAAAAAAAABABAABABB", "ABAAAAAAAAAAABBABABAAAAAABAABAAABAAABBAAAAAAAAAAA", "AAAAAAABAAAAABAAAAAAABAAABBAAABBBAAAAABABBAAA", "AAAAAABBAABAAABAAABAAAAABAAAABBAAAAABAAABAAA", "AABAAAAAAABAAABAAAAAAAAAAAAABABABAAAAAAABAAAAA", "ABBAAAABBBAABAABAAAAAAAABAAAABAAABAAAABB", "AAAAAABAAABAAAABAAAAAABAAABBAAAABAAABAABA", "AAAABAABABBAAABAAAABAAAAAAABAAABAABAAAAAA", "ABBAAAAAAABAAAAAABAAABAAAAAAABAAAAABABAAB", "BAAAABAAAABABBAAABAABAABAAAABABBABAAAA", "BAAAAABAABBABAAAAABABABBBBAAABAAAAAAA", "ABBAABABAAAAAABBABAAAAAAAABAABAAAABAA", "AAAAABAABBABAAAAABBBAABBAAAAAABBAA", "BAAAAAAAAABAAAAAAABAAABAAAABBBAAABA", "AAAABBABBABAABAAAAABAAABBBAAAAB", "AABBBAAAAAAAAAAABAAAAAABBAAAAAAAAA", "ABAAAAABAAABAAAABBAAAAAABBAABAB", "AAAAAAABAAAAAAABAAAAAAABAAAAABAAAA", "AAAAAAABBABAABABAAAABAABAAAAAAA", "ABAAAAABBABAAAAAABABAAAABAAAA", "ABAAAAAABABAAABAAAAAABAAAAAAB", "BAABBBAAAAAAAAABAAAABAABAAA", "AAAAAABBAAAAABAAAAAAABBABAA", "AAABAAAAABBBBBAAAAAAAAAAB", "BAAAAAABBBBABAAABBAAAAA", "AAAAABBBAAAAAABAAAAAAAAAAA", "AABAAAABAABBABAAAAAABAA", "AAAAAABABAAAABAAABAAAAB", "ABBAAAAAABAAAAABAAAAAAA", "BBBABABBAAAABABAA", "BABABAABAABAAAAABA", "AAAAAAABAABAABAAABA", "ABBAAAAAAAAAAAAAAAA", "AAAAABBAABAAAAAAA", "ABAAAAAAAABBABB", "AAAAAAAABABAAAA", "BAAABBAABBA", "AABABAAAABB", "BABAAAAAAAAAA", "AAAAAAAAAAA", "BBAAABB", "AAABAAB", "AAABABA", "AAAAAAA", "AAAAA", "AA", "AA", "A", "A"};
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    vector<string> names = {"AAABAAAAAAAABAAAAABBAAABAA", "ABAAAAAABAAABBAAAAAAAAAAABAAAAAABABAAAAABAAAB", "A", "ABAABAAAAAAAAAABBAABAAAAA", "BAAABAAABAB", "AABBABAABABBABABBAAAAAAAAABBAAAAAAAAAABAAABAA", "ABABAABABA", "BAAAABAAAAAAA", "AAAAABBABAAAAABABAAAAABBABAABAABABAAABAABAAAABA", "BAAABAABAABABAAAAAB", "ABBAABBBAAAAABAAAAAABABBA", "AAAAABAAAAABAA", "AAABABBAAAABAAAAAAAAABAAAABABABABAAABB", "BBAAAABAAAAAAABAABABAAAAA", "AABAAABAABABAAABAAABBAABAAAAAAABAAAAAAAAAAAAAB", "AAAAAABAABAABAABAAAAAAABAABBBAABAAAAAAA", "BAAABBBAAABAAABA", "ABAAAAAAABABAAABBABAAAABBAAAABBABAABAAABA", "AAAAABABABAAAA", "A", "AABAAAAABAABAB", "AAAAAABAAAAAABAAAAAAAAAAAAAAABAAABAAAAAAABA", "AAAAAABAAAABBBAAAAAAAAAABBAAABBBAABAABAAAAABABA", "AAAABAAAAAAAAABBBAAABAAAAAA", "AAAAABAAAAAAAAAAAAAAAAABABAABAAABBBAABABABA", "AAABAAAAAAAAAAABBBABAABAABBAAAB", "BAABAABAAAAAAAABBBBABAAAAABAAAAABAABAAAAA", "BAAABAABAAAAAAAAABAABAABAAAABAAABABBA", "ABA", "ABABBB", "A", "AAAAAAAAABAAAAAA", "AABBAAAAAAAAAABAAAAAABABBBAAABA", "BABBAAAAAAABBBBABBAB", "ABAABABABBAAAABAABB", "AAAABAAABAA", "AABAAAAAAAAAAAAAAABBAAAABAABAAAAAAAAAABABBAAB", "AAAAAAAAABAAAAAAAAABAAAABBAABAAAAAAA", "AAABBAAAAAA", "ABABBABAAAABBAAAA", "AAAAAAAAAAAAAABBAAABABAAAAABAAAABAABAAAAAABAAAABA", "AAABA", "AABABAABAAABAAAABAABAAA", "ABAAABAABAAABBABAAAABABAAAA", "AAAAAAABBAAAAAAAA", "BAABAAABABABBAAAABAAAABAA", "AAAABBAAABAAAAABAAAABBBBBAAAAABAB", "B", "BBBAABAABAAAAAAAAABAAAAAAAAAAAAAAAAAABAAAAA", "BBAAABAABBA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AAAAABBABAAAAABABAAAAABBABAABAABABAAABAABAAAABA", "AAAAAABAAAABBBAAAAAAAAAABBAAABBBAABAABAAAAABABA", "AAAAAAAAAAAAAABBAAABABAAAAABAAAABAABAAAAAABAAAABA", "AABBABAABABBABABBAAAAAAAAABBAAAAAAAAAABAAABAA", "AABAAABAABABAAABAAABBAABAAAAAAABAAAAAAAAAAAAAB", "AABAAAAAAAAAAAAAAABBAAAABAABAAAAAAAAAABABBAAB", "ABAAAAAAABABAAABBABAAAABBAAAABBABAABAAABA", "ABAAAAAABAAABBAAAAAAAAAAABAAAAAABABAAAAABAAAB", "AAAAABAAAAAAAAAAAAAAAAABABAABAAABBBAABABABA", "BAABAABAAAAAAAABBBBABAAAAABAAAAABAABAAAAA", "BBBAABAABAAAAAAAAABAAAAAAAAAAAAAAAAAABAAAAA", "AAABABBAAAABAAAAAAAAABAAAABABABABAAABB", "AAAAAABAAAAAABAAAAAAAAAAAAAAABAAABAAAAAAABA", "AAAAAABAABAABAABAAAAAAABAABBBAABAAAAAAA", "BAAABAABAAAAAAAAABAABAABAAAABAAABABBA", "AAAABBAAABAAAAABAAAABBBBBAAAAABAB", "AAAAAAAAABAAAAAAAAABAAAABBAABAAAAAAA", "AAABAAAAAAAAAAABBBABAABAABBAAAB", "AABBAAAAAAAAAABAAAAAABABBBAAABA", "ABAAABAABAAABBABAAAABABAAAA", "ABBAABBBAAAAABAAAAAABABBA", "BAABAAABABABBAAAABAAAABAA", "AAAABAAAAAAAAABBBAAABAAAAAA", "AAABAAAAAAAABAAAAABBAAABAA", "BBAAAABAAAAAAABAABABAAAAA", "ABAABAAAAAAAAAABBAABAAAAA", "BABBAAAAAAABBBBABBAB", "AABABAABAAABAAAABAABAAA", "ABAABABABBAAAABAABB", "BAAABAABAABABAAAAAB", "ABABBABAAAABBAAAA", "BAAABBBAAABAAABA", "AAAAAAABBAAAAAAAA", "AABAAAAABAABAB", "AAAAAAAAABAAAAAA", "AAAAABABABAAAA", "AAAAABAAAAABAA", "BBAAABAABBA", "BAAAABAAAAAAA", "BAAABAAABAB", "ABABAABABA", "AAAABAAABAA", "AAABBAAAAAA", "ABABBB", "AAABA", "ABA", "B", "A", "A", "A"};
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    vector<string> names = {"B", "AABBABAABAABAAAAAAABABAAAABAAAAAABAAAABBA", "AAAAABABAAAAABAAAABAAAAAABAABAAAAAABABABAAABAAA", "ABBAAA", "BBAAABB", "ABBAAAAABABAAAAAABBAAAAAAAABBAA", "AAAAABBABAAAABAAAAABBAAABBBAA", "AAAAAAAAAABBAAAAABAAAABABBBAAAAABAAAAAABA", "BAA", "BAABBBBAAAAABAAAAABBAB", "ABAABB", "AABAAABAABBABAAAAAABAAABBA", "AABAABAAAAABB", "AAAB", "AABAAAAAABA", "AAAAAAABAAABAAAAAAAAABAAABAABAAABAAAAABBABA", "AABBABAAAAAAAAA", "AAAABAAABBABAAAABAAABAAAAABBBAABBBAAAABAA", "AAAAAABAABAABAAAAABBBAABAAAAABAAAAABAAB", "ABABAAAAAABAAAABAABBAAABAABAAAA", "AAAAAAAAAAABAAABAAAABAAAAAAA", "BAAAAAAABBAABAAAAAABBBAAAAAABAABAAAAAAAAABAB", "AAAAAAAAABBAAA", "AAAAAAABAAAAAAABABAA", "AAA", "BAAABABBABA", "ABABAAAABBA", "BAAABAAAAAAAAAAAAABAAAABABA", "AAAAAAAAAAAAABAAAABA", "A", "ABAAABABBAAAAAAAAAAAAAAAAAAABBABAAAAA", "AABAABAAAAAAAAABAAABAAAAA", "AAAABBBAAAAAABABAABAAAAAAAAAAABAAAABAABAABABABB", "A", "BABABBAAAAABABAAAAAAABAABAAAAAAABAAB", "AAAAABAAAAAAAAABAAABABAA", "BAAAAAAABABAABBBAAAAA", "BABAB", "ABABAAAABAAAAAAAAAAAAABBAAAB", "AAAABAAAABAAAAAAABAABBABABAABAAAAAAAABBAAAA", "AAAAABBAABABABBBA", "AABAAABBAABABABBBAAAA", "ABABBBAAAABABAAAAABABAAAAAA", "BBAA", "AAABB", "ABAAABBAAABAA", "BAABABABBAAAAAAAAABAAAAAAAAABAA", "ABAAAAAAAAAAAAAAAAAABAAAAAA", "ABAAAAAABAABAABABBAAAAAAAAB", "AAABAABBAAAABAAAB"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AAAABBBAAAAAABABAABAAAAAAAAAAABAAAABAABAABABABB", "AAAAABABAAAAABAAAABAAAAAABAABAAAAAABABABAAABAAA", "BAAAAAAABBAABAAAAAABBBAAAAAABAABAAAAAAAAABAB", "AAAABAAABBABAAAABAAABAAAAABBBAABBBAAAABAA", "AAAABAAAABAAAAAAABAABBABABAABAAAAAAAABBAAAA", "AAAAAAABAAABAAAAAAAAABAAABAABAAABAAAAABBABA", "AABBABAABAABAAAAAAABABAAAABAAAAAABAAAABBA", "AAAAAAAAAABBAAAAABAAAABABBBAAAAABAAAAAABA", "AAAAAABAABAABAAAAABBBAABAAAAABAAAAABAAB", "BABABBAAAAABABAAAAAAABAABAAAAAAABAAB", "ABAAABABBAAAAAAAAAAAAAAAAAAABBABAAAAA", "ABABAAAAAABAAAABAABBAAABAABAAAA", "ABBAAAAABABAAAAAABBAAAAAAAABBAA", "AAAAABBABAAAABAAAAABBAAABBBAA", "BAABABABBAAAAAAAAABAAAAAAAAABAA", "ABABBBAAAABABAAAAABABAAAAAA", "AABAAABAABBABAAAAAABAAABBA", "ABAAAAAABAABAABABBAAAAAAAAB", "ABABAAAABAAAAAAAAAAAAABBAAAB", "BAAABAAAAAAAAAAAAABAAAABABA", "AAAAAAAAAAABAAABAAAABAAAAAAA", "BAABBBBAAAAABAAAAABBAB", "AABAAABBAABABABBBAAAA", "AABAABAAAAAAAAABAAABAAAAA", "ABAAAAAAAAAAAAAAAAAABAAAAAA", "AAAAABAAAAAAAAABAAABABAA", "BAAAAAAABABAABBBAAAAA", "AAAAABBAABABABBBA", "AAAAAAABAAAAAAABABAA", "AAAAAAAAAAAAABAAAABA", "AAABAABBAAAABAAAB", "AABBABAAAAAAAAA", "AABAABAAAAABB", "ABAAABBAAABAA", "AAAAAAAAABBAAA", "BAAABABBABA", "ABABAAAABBA", "AABAAAAAABA", "BBAAABB", "ABAABB", "ABBAAA", "BABAB", "AAABB", "BBAA", "AAAB", "BAA", "AAA", "B", "A", "A"};
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    vector<string> names = {"AAAAAAAAAAAAAAAAABAABABABABBB", "B", "A", "ABAAAAAAABAAABAABAAAABAABBAABAAABAAAAAAAAAABB", "ABAAAAAABBABAAABAAAAAAAAAAABAAABAB", "BBAAAAABAAAAAAAABAABAAAABAABA", "AABAAABAAAAAABAAABAAABAAAABAAAAAAAAABAA", "ABBAAAAAABAABAAAAABAAAAABBAAAAAAABAABAAAAAABABBB", "AAAAAAABAABABBAAAABBAABAAAAABAAAABAAAAAAAABAAA", "ABAABAABAAAA", "AABAAAAABAAAABBABAABA", "AABBABAABAAAAAA", "AAABAAAAAAAAAAAAAAAABAAAAABABAAAAAAABBBAABAAA", "ABBBA", "ABBABAAAAABAAAAAAABAAABAABAB", "AAAAABAAAAAABBAAAAABBABAABB", "AAABAAAABAABBAAABAAAAAABAAAAABBABAABAAAAAAAAB", "AAAABBBAAAA", "ABBAAAAAABAAABBABBAAAAAAAABAAABBBAAAA", "BAB", "BAABAABAAAAABAAA", "BBAAAABBAAAAAAAABAAAAAABAABBAAAAAAAAAAA", "AAAAAAAAAAAAAAAAA", "AAAAAAABBAAAAAAAAABBABABA", "AAAABBBAAAAAAABAABABBAAAAAAAAAB", "B", "AAAAAAAAAAAABAAABAABAABAAAAABBBA", "ABBAAAAABBB", "AAABABAABBAAAAAAABBAAABABA", "AAAAABAAABAAAAAAAABAAAA", "A", "BAAAAAABBAAABAABBBAABAABAAABBAAAABAABAAAAAABAAAAAA", "AAAAABAAABAAAAAAAAAA", "AAABBAAAAAAAAABAAAAA", "AAB", "BAABABABAAAAAAAAAAABAAAAAAAAAABAAA", "ABBBAAAABAABAAAAAAAABBABAAAAAAAAAABAAAAAA", "ABABBBBABBAA", "ABBABABAB", "BAAABBBAABAAAAABABAAAABAAAAAAAABAAAAABA", "AABAAAAABBABBAABAAAAAABABAAAAABABAABAAA", "AAAAA", "BAAAABBABAAAAAAAB", "AABBABAABAAAABBABAAABAAAAAABAAAAA", "AABBAAAAAABABAABAAAABAABAAAAAAAAAAAAAAAAABAAAAAAA", "BAABAABAAAAAAAAABAABBABABBBAABAAAAAABBB", "AAAAABBAABABBAAAABBBAABABABAAAAABAABAAAABAA", "AAAAAAAAAAABBAAABABAAABAAAAAAAAAAAAAAABABAB", "AAABBBBAABAAABABAAAAAABBA", "A"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"BAAAAAABBAAABAABBBAABAABAAABBAAAABAABAAAAAABAAAAAA", "ABBAAAAAABAABAAAAABAAAAABBAAAAAAABAABAAAAAABABBB", "AAAAABBAABABBAAAABBBAABABABAAAAABAABAAAABAA", "AABBAAAAAABABAABAAAABAABAAAAAAAAAAAAAAAAABAAAAAAA", "AAAAAAABAABABBAAAABBAABAAAAABAAAABAAAAAAAABAAA", "AAABAAAABAABBAAABAAAAAABAAAAABBABAABAAAAAAAAB", "ABAAAAAAABAAABAABAAAABAABBAABAAABAAAAAAAAAABB", "AAABAAAAAAAAAAAAAAAABAAAAABABAAAAAAABBBAABAAA", "BAABAABAAAAAAAAABAABBABABBBAABAAAAAABBB", "AAAAAAAAAAABBAAABABAAABAAAAAAAAAAAAAAABABAB", "AABAAAAABBABBAABAAAAAABABAAAAABABAABAAA", "ABBBAAAABAABAAAAAAAABBABAAAAAAAAAABAAAAAA", "BAAABBBAABAAAAABABAAAABAAAAAAAABAAAAABA", "ABBAAAAAABAAABBABBAAAAAAAABAAABBBAAAA", "BBAAAABBAAAAAAAABAAAAAABAABBAAAAAAAAAAA", "AABAAABAAAAAABAAABAAABAAAABAAAAAAAAABAA", "AABBABAABAAAABBABAAABAAAAAABAAAAA", "ABAAAAAABBABAAABAAAAAAAAAAABAAABAB", "BAABABABAAAAAAAAAAABAAAAAAAAAABAAA", "AAAAAAAAAAAABAAABAABAABAAAAABBBA", "AAAABBBAAAAAAABAABABBAAAAAAAAAB", "AAAAAAAAAAAAAAAAABAABABABABBB", "ABBABAAAAABAAAAAAABAAABAABAB", "BBAAAAABAAAAAAAABAABAAAABAABA", "AAAAABAAAAAABBAAAAABBABAABB", "AAABABAABBAAAAAAABBAAABABA", "AAABBBBAABAAABABAAAAAABBA", "AAAAAAABBAAAAAAAAABBABABA", "AABAAAAABAAAABBABAABA", "AAAAABAAABAAAAAAAABAAAA", "AAABBAAAAAAAAABAAAAA", "AAAAABAAABAAAAAAAAAA", "BAAAABBABAAAAAAAB", "BAABAABAAAAABAAA", "AABBABAABAAAAAA", "ABABBBBABBAA", "AAAAAAAAAAAAAAAAA", "ABBAAAAABBB", "ABAABAABAAAA", "AAAABBBAAAA", "ABBABABAB", "ABBBA", "AAAAA", "BAB", "AAB", "B", "B", "A", "A", "A"};
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    vector<string> names = {"AAAABAA", "BAAABAA", "AAABBBB", "BAAAAAA", "AAAABAAA", "AAAABAABAA", "BAAABAAAAA", "ABBBAAAAA", "ABAAAAA", "AAAAAAB", "AAAABAAAA", "BABBAAA", "BAABAAB", "AAAABABBA", "BAAAAAAAB", "BAAAAAAAB", "AAAAAAB", "AAABAAAA", "AAABAAAAA", "BABAABAB", "BAAAAAABA", "AAAABAA", "AAAAAAAAAA", "AAABABA", "AAABBAA", "ABBAAAAAA", "ABAAAAABAA", "AAAAABAAAB", "BAAABBBAA", "AAABABB", "AAAABBA", "ABABAAA", "AAABBAB", "AAAAAAA", "ABAABAAAA", "BAABAAABB", "AABBAAA", "AAAABABAA", "AABAAAB", "AAAABAAABA", "AAABAAA", "BBABAAB", "BBAAAAA", "BAAAAAB", "ABAAABB", "AAABAAABA", "ABAAAAAAB", "ABAAABA", "AAAAABAA", "AAAABAAAAA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"BAAABBBAA", "BAABAAABB", "AAAAABAAAB", "AAAABAAABA", "AAAABAABAA", "AAAABABBA", "ABAAAAABAA", "ABBBAAAAA", "BAAABAAAAA", "BABAABAB", "AAAABAAAAA", "AAAABABAA", "AAABAAABA", "AAABBBB", "ABAAAAAAB", "ABAABAAAA", "ABBAAAAAA", "BAAAAAAAB", "BAAAAAAAB", "BAAAAAABA", "BBABAAB", "AAAAAAAAAA", "AAAABAAAA", "AAABAAAAA", "AAABABB", "AAABBAB", "ABAAABB", "BAABAAB", "BABBAAA", "AAAAABAA", "AAAABAAA", "AAAABBA", "AAABAAAA", "AAABABA", "AAABBAA", "AABAAAB", "AABBAAA", "ABAAABA", "ABABAAA", "BAAAAAB", "BAAABAA", "BBAAAAA", "AAAAAAB", "AAAAAAB", "AAAABAA", "AAAABAA", "AAABAAA", "ABAAAAA", "BAAAAAA", "AAAAAAA"};
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    vector<string> names = {"AAAAABAAA", "BAABAAA", "AAAAAAAA", "AABAAAAA", "AABAAAA", "AAABAAAA", "ABAAAAAAA", "AAABBAA", "AAABAAAAA", "AABBABAAB", "AAAAAAB", "BBBABAAABB", "AAAAAAAAAA", "AAABBAAA", "AAAAAAA", "AAAAAAB", "AAAAAAAAAB", "AAAAAAAB", "AAABAAAAB", "BBAAABA", "AABBBAA", "AAAAAAAAA", "BAAAAAA", "BBAAAAA", "AAAAAAAAAA", "BBAABAAA", "BAAABAA", "AAABAAA", "ABBAAAA", "ABAAABA", "AABABAA", "AAAAAAAAA", "ABABAAAA", "BBABAAA", "AABAAAB", "AAAABBAAAA", "AABBAABAB", "ABAAAAABBA", "BAAAAAABAB", "AAAABAA", "AAAAAAA", "AABBABA", "ABABAAAA", "BAABAAA", "AAAAAAB", "AAAABAA", "BBABAAA", "AAABAAAA", "AABBABB", "ABAABAA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"BBBABAAABB", "AABBAABAB", "AABBABAAB", "ABAAAAABBA", "BAAAAAABAB", "AAAABBAAAA", "AAAAAAAAAB", "AAABAAAAB", "AABBABB", "BBAABAAA", "AAAAAAAAAA", "AAAAAAAAAA", "AAAAABAAA", "AAABAAAAA", "AAABBAAA", "AABBABA", "AABBBAA", "ABAAAAAAA", "ABABAAAA", "ABABAAAA", "BBAAABA", "BBABAAA", "BBABAAA", "AAAAAAAAA", "AAAAAAAAA", "AAAAAAAB", "AAABAAAA", "AAABAAAA", "AAABBAA", "AABAAAAA", "AABAAAB", "AABABAA", "ABAAABA", "ABAABAA", "ABBAAAA", "BAAABAA", "BAABAAA", "BAABAAA", "BBAAAAA", "AAAAAAAA", "AAAAAAB", "AAAAAAB", "AAAAAAB", "AAAABAA", "AAAABAA", "AAABAAA", "AABAAAA", "BAAAAAA", "AAAAAAA", "AAAAAAA"};
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    vector<string> names = {"BABAABA", "ABAAAAA", "BABAAAAABA", "ABBABAA", "AAABABA", "BBBBAAA", "BAAAAAAAAA", "AAAABAAA", "BAAAABAAAA", "AABAAAB", "BAAAABAAA", "BAABABB", "BABABBA", "AAABABAAAB", "AAAAAAA", "AAAABBA", "BABAAAA", "AABAABA", "AABAAABBA", "AAAAAAAAA", "AAAAAAB", "BAABAAAAA", "AAABAAB", "AAABAAA", "AAAAAAABA", "AAAAAAA", "BABAAAAAA", "AAABABA", "ABABBAA", "ABABABA", "ABBBAAAAA", "AAAABAA", "AABAABA", "AAABBAA", "AABBBAAB", "AABAAAA", "AAAABAAAA", "BAAABAAAA", "BBAABAAAA", "AAABAAA", "BAAAAAA", "AAAAAAABA", "BABAAAA", "AAABAAAA", "AABAAAAABA", "AAABBAB", "ABABABAA", "AAAAAABABA", "BAAABAAA", "AAAAAAA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AAABABAAAB", "BABAAAAABA", "AAAAAABABA", "AABAAAAABA", "AABAAABBA", "AABBBAAB", "ABBBAAAAA", "BAAAABAAAA", "BBAABAAAA", "ABABABAA", "BAAAAAAAAA", "BAAAABAAA", "BAAABAAAA", "BAABAAAAA", "BAABABB", "BABAAAAAA", "BABABBA", "BBBBAAA", "AAAAAAABA", "AAAAAAABA", "AAAABAAAA", "AAABBAB", "ABABABA", "ABABBAA", "ABBABAA", "BAAABAAA", "BABAABA", "AAAAAAAAA", "AAAABAAA", "AAAABBA", "AAABAAAA", "AAABAAB", "AAABABA", "AAABABA", "AAABBAA", "AABAAAB", "AABAABA", "AABAABA", "BABAAAA", "BABAAAA", "AAAAAAB", "AAAABAA", "AAABAAA", "AAABAAA", "AABAAAA", "ABAAAAA", "BAAAAAA", "AAAAAAA", "AAAAAAA", "AAAAAAA"};
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    vector<string> names = {"AABAAAA", "AABABAA", "AAABAAA", "BAABAAB", "AAAAAAAA", "AABBAAB", "AAAAABAAA", "BAAABAB", "AABBABA", "ABABBABAB", "BAAAAAA", "AAABBAA", "AAAAAAA", "ABAAABAA", "ABABAAB", "ABABAAAAB", "AAAAAAA", "AAAAABB", "ABAAAAABA", "BAAAAABBAB", "AABAABAB", "AAABAABAA", "AABABAA", "ABAABAA", "BABAAAAA", "BABBAAB", "BBAAAAA", "BAAAAAA", "BABBAAAAAA", "BAAAAABAA", "AAABABBAA", "AABAAAA", "AAAAABA", "AAABABA", "BABAAAB", "BBBAAAABAA", "AAAAABAAB", "ABAAAAA", "AABAAAB", "AABABAAABA", "AABBAABAAA", "AAAABAA", "AAAAAAA", "AAAABAAAA", "AABAABA", "ABAABAAAA", "AAABAAB", "BBAABAAAA", "AAABAAABB", "BAAABAA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"ABABBABAB", "BAAAAABBAB", "BBBAAAABAA", "AABABAAABA", "AABBAABAAA", "BABBAAAAAA", "AAABAAABB", "AAABABBAA", "ABABAAAAB", "BBAABAAAA", "AAAAABAAB", "AAABAABAA", "AABAABAB", "ABAAAAABA", "ABAABAAAA", "BAAAAABAA", "BABBAAB", "AAAAABAAA", "AAAABAAAA", "AABBAAB", "AABBABA", "ABAAABAA", "ABABAAB", "BAAABAB", "BAABAAB", "BABAAAAA", "BABAAAB", "AAAAABB", "AAABAAB", "AAABABA", "AAABBAA", "AABAAAB", "AABAABA", "AABABAA", "AABABAA", "ABAABAA", "BAAABAA", "BBAAAAA", "AAAAAAAA", "AAAAABA", "AAAABAA", "AAABAAA", "AABAAAA", "AABAAAA", "ABAAAAA", "BAAAAAA", "BAAAAAA", "AAAAAAA", "AAAAAAA", "AAAAAAA"};
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    vector<string> names = {"AAAABCAAAAABACCABAACABCACCAAACAAABCCAAAACAACCAA", "ABBABCACACAAACAAABBBABBCBAAAAACBAAAACACBBAAAABC", "BACABAACCCAAABBBACACCAACBCAABABABABACBAAAAACBCA", "CCAAACCACCBACCABCAAAACBCBACCCBBBACCCCACACAACCAA", "ABAAACCCACCBBCAAAACCBABCAACCACCAAAABABAAAAABCABA", "CBAACACBACACAAAABABAACBAAAAAABCAAACBCABBACABAAABAB", "AAAABACAABCAAABAAAACABAAACAAAAAACBBACBBACAAACAABBA", "AAAAACBABAAABAAAABABABBABBAABABAABACAAACCAAAAABAA", "CACAACBCABACAAAAABAAAAABAACBABCAAAAAAABCCABBCCA", "AAACACABACABCAAAAAAAAACACAAACAAAAACACAABCBBAABC", "BACACBCCACAAAAAAAAABCABABCACABAAAAABAABACAAABAAAA", "CABCCAACCAAAABAABBCAAAAACAAAACAACBAACAAACAAAAAA", "CBCCAACCACABABBAAAAAAAACCBCCAABAAABAACCACBAAACC", "AAAABBCBAAAACACAABCBBAACACBBCBABACCACAAAAABABAACC", "ABAAABBABACAACAAAAAACAAAAACAAAAACCAACBAABACAACAAA", "CAAACCAAAAAAAABACAACCCAABAAAAACAABACBBAAABBBAAAAA", "CAACCBBCAAACACBAAAABBBBBABCAAAAABBBBBBAAABCCCAA", "CABBAABACCBBAACBACAABCBAAAAABAACBACAAACAAACBAAAA", "CAAAABCAAAACABACABCCBBBACABBAAABBBBCCAAACACABBBAA", "BBAAAABBAAAABAABCBBABCCBBBCACAABAAAAAAAAAACBABAA", "ABAAAAAAAAAACAAAACCAAABAAAAACAAAABCCCBAABACAAAAAB", "CAAAABBAAABCACAACABBAAACBACCCBAABACAAAACBBAABAA", "AAAAACAABCCAAAAACABAAABACABCCABAACAACACCAABAABCCAC", "ACACAACACAAAABAABAAABCCACBCAAACAAABCBAABBBBAAAA", "ACACAACAAAABCBABAABAAAACABAAABCAABCAACCBAAAAACA", "CBAABACAACBAAAAABCBAAAABCACBABACAABAAABAAAAACABAB", "CAAAACBBBABCACCBAACACABCCCCCAAACAAAABBAABBABAACCAA", "AAAACBABACACACABBBACBAAAABCAAAAACAAAACAABCAAABCBAA", "ACABBAAAAACABBAAAAAAAACCAAACBABACAAAAAAACCCBABBBA", "BACAAACACACABAAAAAABCABCAACAABBAACAAACCBCAABABA", "AAAAACAAACAABAAACACBCCCCAABAAABAACAAABAABCBCBAC", "ACACAAAAAACACAAAABABBBCACBAAAABCAAACCAAACAABAAA", "ACAAAAAABAACABABAAACAAACCCCCCBBBABAABACAAAAACCC", "AABBAAAABCCAAACAAACACAABAABBAABBACACCABCAAABACC", "CCABBACAAAAABACAACCABAAACBCAAAAAAABABCAAABAAABCAB", "CABAABACBBCBCAABAAABAACABABAABACAAABCAAACABCBAABA", "AABAAACAACBAABAABABBAAAAACACBBACABACAAAABCAAABA", "CAACACABBAABCAABBABCBCBBAACACAAACAABBAABBCBBAAAAC", "BAAAACCCAAAABAAAAAACCAAABBAACBABCBCBBBABAABAAAB", "BCBCAACBAAABABAACABBCCAACAAAABAACAAAAABACBAABAAABC", "ACAACCBBBCBAABABCAABBAACBCAAABAAACACACCABCABAAA", "CAAABACABAABCAAAACAACCCAABAAACBABBBCAAAACBAAAAA", "CBAAABACBACBCCABCAABABBAABBBBACCAAAAAABACAACAAC", "ACCBAAAACAACCAAAAAAAAAABBCACCACBACBCAAAACAAACBB", "AAAACBABCAAAAAAABAAACBACBBCCBABABCBAAACABBAAACA", "ABBAAAAAABACCCAAABAAAAABAABCCAAAAACCAAAABBBAAAAAA", "BAABACACBAABABBCBBAAACCABCBACBABBAAACABABBBBABACA", "AAABABCBAABCAAAAAAAAAAAACAAACCABBBBCAACCBCBCAAC", "ACCAAAABCABBCCBAACABAACCAACABACCAAAAACAAABCAAAAA", "CCABBCCCAAACAABACAAAAACBAAACABAABCABAAAACAACAACAAC"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"CCAAACCACCBACCABCAAAACBCBACCCBBBACCCCACACAACCAA", "CAAAACBBBABCACCBAACACABCCCCCAAACAAAABBAABBABAACCAA", "BAABACACBAABABBCBBAAACCABCBACBABBAAACABABBBBABACA", "CAAAABCAAAACABACABCCBBBACABBAAABBBBCCAAACACABBBAA", "CAACACABBAABCAABBABCBCBBAACACAAACAABBAABBCBBAAAAC", "AAAAACAABCCAAAAACABAAABACABCCABAACAACACCAABAABCCAC", "AAAABBCBAAAACACAABCBBAACACBBCBABACCACAAAAABABAACC", "ABAAACCCACCBBCAAAACCBABCAACCACCAAAABABAAAAABCABA", "CBCCAACCACABABBAAAAAAAACCBCCAABAAABAACCACBAAACC", "CCABBCCCAAACAABACAAAAACBAAACABAABCABAAAACAACAACAAC", "ACAACCBBBCBAABABCAABBAACBCAAABAAACACACCABCABAAA", "BACABAACCCAAABBBACACCAACBCAABABABABACBAAAAACBCA", "CAACCBBCAAACACBAAAABBBBBABCAAAAABBBBBBAAABCCCAA", "BCBCAACBAAABABAACABBCCAACAAAABAACAAAAABACBAABAAABC", "CBAAABACBACBCCABCAABABBAABBBBACCAAAAAABACAACAAC", "CBAACACBACACAAAABABAACBAAAAAABCAAACBCABBACABAAABAB", "ACAAAAAABAACABABAAACAAACCCCCCBBBABAABACAAAAACCC", "ACCAAAABCABBCCBAACABAACCAACABACCAAAAACAAABCAAAAA", "CABAABACBBCBCAABAAABAACABABAABACAAABCAAACABCBAABA", "AAAACBABACACACABBBACBAAAABCAAAAACAAAACAABCAAABCBAA", "ACCBAAAACAACCAAAAAAAAAABBCACCACBACBCAAAACAAACBB", "AAAAACAAACAABAAACACBCCCCAABAAABAACAAABAABCBCBAC", "AAABABCBAABCAAAAAAAAAAAACAAACCABBBBCAACCBCBCAAC", "AABBAAAABCCAAACAAACACAABAABBAABBACACCABCAAABACC", "CABBAABACCBBAACBACAABCBAAAAABAACBACAAACAAACBAAAA", "CCABBACAAAAABACAACCABAAACBCAAAAAAABABCAAABAAABCAB", "AAAABCAAAAABACCABAACABCACCAAACAAABCCAAAACAACCAA", "ABBABCACACAAACAAABBBABBCBAAAAACBAAAACACBBAAAABC", "BACAAACACACABAAAAAABCABCAACAABBAACAAACCBCAABABA", "CAAAABBAAABCACAACABBAAACBACCCBAABACAAAACBBAABAA", "CACAACBCABACAAAAABAAAAABAACBABCAAAAAAABCCABBCCA", "AAAACBABCAAAAAAABAAACBACBBCCBABABCBAAACABBAAACA", "ACABBAAAAACABBAAAAAAAACCAAACBABACAAAAAAACCCBABBBA", "ACACAACACAAAABAABAAABCCACBCAAACAAABCBAABBBBAAAA", "CBAABACAACBAAAAABCBAAAABCACBABACAABAAABAAAAACABAB", "AAAABACAABCAAABAAAACABAAACAAAAAACBBACBBACAAACAABBA", "BAAAACCCAAAABAAAAAACCAAABBAACBABCBCBBBABAABAAAB", "BACACBCCACAAAAAAAAABCABABCACABAAAAABAABACAAABAAAA", "CAAABACABAABCAAAACAACCCAABAAACBABBBCAAAACBAAAAA", "AAACACABACABCAAAAAAAAACACAAACAAAAACACAABCBBAABC", "ACACAACAAAABCBABAABAAAACABAAABCAABCAACCBAAAAACA", "BBAAAABBAAAABAABCBBABCCBBBCACAABAAAAAAAAAACBABAA", "CAAACCAAAAAAAABACAACCCAABAAAAACAABACBBAAABBBAAAAA", "ACACAAAAAACACAAAABABBBCACBAAAABCAAACCAAACAABAAA", "CABCCAACCAAAABAABBCAAAAACAAAACAACBAACAAACAAAAAA", "ABAAABBABACAACAAAAAACAAAAACAAAAACCAACBAABACAACAAA", "AABAAACAACBAABAABABBAAAAACACBBACABACAAAABCAAABA", "ABBAAAAAABACCCAAABAAAAABAABCCAAAAACCAAAABBBAAAAAA", "ABAAAAAAAAAACAAAACCAAABAAAAACAAAABCCCBAABACAAAAAB", "AAAAACBABAAABAAAABABABBABBAABABAABACAAACCAAAAABAA"};
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    vector<string> names = {"CACBBAACAAAAAABCBAABABAAAAAACABBCAAACBAAAAAABCB", "CACAABABCABBCACACAAAAAACBACACAACBAAABBAAABACCAA", "CAACCABCABAACBACCACAAABAAAACBAAABAACABAAAABABAA", "BAAACAABBCABAACBABCBCBACAABBAACAACBBABBBAAACCCA", "AACCAAAAAAABBAABAACABABACBBACCBACBAACBBAAAACCCACB", "CAACBBBCCBCABAAABABAAAACBAAAAAACCAABAAACABBBAAAA", "AAAAAACCAACCCACCCBAAACAACBBCACCACBACCBAABAAACBBCAA", "CCAAAAAACBAAAABAAAACCBACACCCAAABAABCAAAAAAAAACAAB", "AACBBAABABAACBBABAAABABAAAABBABACACBBABCBCABBAA", "ABBABCABAAAABCCACCCAAACABAABBBAABBACBBBAACAACAACC", "ABAAABCABCAACABAAAAAABBBCBBAAAAACAAABAAAACCABAABA", "AAAAAAAABAAABAAAAAAAABAACCBCAAABAAABBBAACBCCBAC", "AAAAAAAABACABBBAAABCCAAAAAAABBCAAAAABACACBBAACBAB", "ABACACAACBAACACACAACBCABACBCAAACBAAAAACACBABAAA", "CAAAACACAAAAAAAAABAAACBBABABAABBAABAABBAAACAABA", "AAAACACCABAAAAABAABBAAAABCAAACAABCAABAAAAABABCAA", "BABBCAABBACCCACBCBACAAABCBAAABAAACCAAAAAAAAABBB", "AACACAABACAAACAACBBBCAAACBBAAAAACCBCAAACAABCBAABA", "AAAAAABCAAACAAAACBACACAAAAAABBCAAAAABAAACBCACACA", "BACCABABAAABAABCCBCCBAACBABAABABAAAABAAAACABAABAA", "BCACBAAABABAAACCAACABAAAACBAACCCBAABAAABBACBABA", "AACAAABCCBAAAAAACABBABAACCBCACBCACABAAACABABCBA", "BCCBCBAAAABAAABACCBAACBAABCABBCCABBACAABAAAAAAAAAA", "CAACAAAACCABAAAABBACBBACACCACBAAACBABAAAAACACAA", "ABCACAACBBAABBABAABBACAABABBCCAABAAACACACBAACBAA", "CCABCAABABAABCCBAABACCAAACAAAAAAAAACBACCAAAABCB", "AABBCACACBAABAACACBAAACCAAAAAAABCAABAAABBBBACAAB", "AAAABBCAAAAAACAACBAAAAACCCACAACAAAAAAAAAAACABACAAB", "BCAAABCAAAAABCAACAAAACCCCCCABBAACABAAAAABAABBAA", "BBAAAACCAAABCAAAAAACBBAAAABAAAAABAABBBABAACAACBAA", "AAAABBAABCAACAACBBAACAAABACAABBBABAABAABACACAAC", "AABAAABBBACAAAACCAAAAAAABAAAACAAAACCABAAACCABAA", "ABBACAAAAAABCBBABACACABAABACCBAAAABCACABBAABBCAB", "ABAACACACCBBCACAAAACCAAABABABAAAAAACBCACCCAABAB", "AAACBAAACBCAAACACBABCBCAAACAAACCCBAAAAABCCACBBC", "AABACACCABABAAABAAAABBAAABBACBAAABAAAACAAAABAAB", "AAAACBABAAACACBACBCABCBACCABACAAAAAAACAACAAABCB", "AACCAAAAAABABBABCACBCCBAAABCBACBCABBAACAACCAACAACA", "BAAACCBABAAABBBACCBCAACABCAAACBABAAAABABBAACBBAAC", "ABBBAAABCBCCAACCACCAAABAAAAAABABAACCACABAABBABC", "BABAAACAAAAACBBAACBBBBABABACAAAACACCBBAAABCACAB", "BCBACAAABABAAAABBCABAACAAABAAABABACAAAABCAACCAC", "ACABBAAAAAABBBCAABCACCCABCCCBCAAACBBACABBABCBAAAB", "ABACBACCCCCBAAAAAAACACCBBACACAAAAACAABACAAAABAAAA", "AACBACCAABACCBACAACBAABAACCBAAACAAACAABACABBACCABA", "BACCABCAAAABBBCAAAABABCCCAABAAAAAACBACAABAAABACA", "AABACAAAABABCAABBBCCAABABACBAABAAAAAAABAABCCACCAB", "AACAAACBBAAAAAAAAACBBABAABBAAAACCCAACCABAAAABAC", "BBBACCACBAAAABAACCACAAAAACACAABBAAACAACCABAAACAAB", "BABABAACCBACACCAACBAAAAABAAAAAAAAABBAABAACCCABAA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AAAAAACCAACCCACCCBAAACAACBBCACCACBACCBAABAAACBBCAA", "ACABBAAAAAABBBCAABCACCCABCCCBCAAACBBACABBABCBAAAB", "AACCAAAAAABABBABCACBCCBAAABCBACBCABBAACAACCAACAACA", "AACBACCAABACCBACAACBAABAACCBAAACAAACAABACABBACCABA", "ABBABCABAAAABCCACCCAAACABAABBBAABBACBBBAACAACAACC", "AAACBAAACBCAAACACBABCBCAAACAAACCCBAAAAABCCACBBC", "AACCAAAAAAABBAABAACABABACBBACCBACBAACBBAAAACCCACB", "BAAACAABBCABAACBABCBCBACAABBAACAACBBABBBAAACCCA", "BAAACCBABAAABBBACCBCAACABCAAACBABAAAABABBAACBBAAC", "AACACAABACAAACAACBBBCAAACBBAAAAACCBCAAACAABCBAABA", "BCCBCBAAAABAAABACCBAACBAABCABBCCABBACAABAAAAAAAAAA", "AACAAABCCBAAAAAACABBABAACCBCACBCACABAAACABABCBA", "ABAACACACCBBCACAAAACCAAABABABAAAAAACBCACCCAABAB", "ABACBACCCCCBAAAAAAACACCBBACACAAAAACAABACAAAABAAAA", "ABCACAACBBAABBABAABBACAABABBCCAABAAACACACBAACBAA", "BBBACCACBAAAABAACCACAAAAACACAABBAAACAACCABAAACAAB", "ABACACAACBAACACACAACBCABACBCAAACBAAAAACACBABAAA", "ABBACAAAAAABCBBABACACABAABACCBAAAABCACABBAABBCAB", "ABBBAAABCBCCAACCACCAAABAAAAAABABAACCACABAABBABC", "AAAACBABAAACACBACBCABCBACCABACAAAAAAACAACAAABCB", "AABACAAAABABCAABBBCCAABABACBAABAAAAAAABAABCCACCAB", "BABBCAABBACCCACBCBACAAABCBAAABAAACCAAAAAAAAABBB", "CACAABABCABBCACACAAAAAACBACACAACBAAABBAAABACCAA", "CCABCAABABAABCCBAABACCAAACAAAAAAAAACBACCAAAABCB", "BABAAACAAAAACBBAACBBBBABABACAAAACACCBBAAABCACAB", "BACCABABAAABAABCCBCCBAACBABAABABAAAABAAAACABAABAA", "BACCABCAAAABBBCAAAABABCCCAABAAAAAACBACAABAAABACA", "BCACBAAABABAAACCAACABAAAACBAACCCBAABAAABBACBABA", "CAACAAAACCABAAAABBACBBACACCACBAAACBABAAAAACACAA", "AABBCACACBAABAACACBAAACCAAAAAAABCAABAAABBBBACAAB", "BCAAABCAAAAABCAACAAAACCCCCCABBAACABAAAAABAABBAA", "CAACBBBCCBCABAAABABAAAACBAAAAAACCAABAAACABBBAAAA", "AACBBAABABAACBBABAAABABAAAABBABACACBBABCBCABBAA", "CCAAAAAACBAAAABAAAACCBACACCCAAABAABCAAAAAAAAACAAB", "BABABAACCBACACCAACBAAAAABAAAAAAAAABBAABAACCCABAA", "BCBACAAABABAAAABBCABAACAAABAAABABACAAAABCAACCAC", "CAACCABCABAACBACCACAAABAAAACBAAABAACABAAAABABAA", "AAAAAAAABACABBBAAABCCAAAAAAABBCAAAAABACACBBAACBAB", "AAAABBAABCAACAACBBAACAAABACAABBBABAABAABACACAAC", "AAAABBCAAAAAACAACBAAAAACCCACAACAAAAAAAAAAACABACAAB", "ABAAABCABCAACABAAAAAABBBCBBAAAAACAAABAAAACCABAABA", "AAAAAABCAAACAAAACBACACAAAAAABBCAAAAABAAACBCACACA", "AACAAACBBAAAAAAAAACBBABAABBAAAACCCAACCABAAAABAC", "CACBBAACAAAAAABCBAABABAAAAAACABBCAAACBAAAAAABCB", "BBAAAACCAAABCAAAAAACBBAAAABAAAAABAABBBABAACAACBAA", "AAAAAAAABAAABAAAAAAAABAACCBCAAABAAABBBAACBCCBAC", "AAAACACCABAAAAABAABBAAAABCAAACAABCAABAAAAABABCAA", "AABAAABBBACAAAACCAAAAAAABAAAACAAAACCABAAACCABAA", "AABACACCABABAAABAAAABBAAABBACBAAABAAAACAAAABAAB", "CAAAACACAAAAAAAAABAAACBBABABAABBAABAABBAAACAABA"};
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    vector<string> names = {"ABACBBAAAACAAABCCCBBAACAAAAAAAAAAAAABCAAAACBCCA", "BAAABAAAAACBBAABBBACBCBACACAAAAACBBAAAACAABCACA", "ABCAAAAAACABAAABCAAAAAAACAAABCCCABACBABBCACAACAB", "ACAAAAAAABBABAAAACBCCAACBCAAACAACAABABABCCCBCAB", "CCACAABACBBACCABCAABCBCBBCAACACCAAAAAAAABCAABAB", "ABBAACAACABAACAACCBAACCAABAABABAAAAAAACACABBAABCBC", "BBCACCCACACAAABAAAABABAACABAABAAAACAACAABACBBACA", "AAAAACACABBAAACAAAAABACAAACCAACAAACACAAABCAACAA", "AACCAABBCBAACCACAAAAAAAAABABAABBAAAAAAAAACABCAAB", "BCAABBAAABAAAAAAAABBCABBAAACABABBAACBCAACCAAAAAAB", "ACBAABABCBBABAABABABBAAAABBAAAAACBACAABAAAAACAAA", "ACBABAAABCABBAAAABCBCAACACCABAABAAAACACABAACAAAABB", "ABACAABCAACAAABCAACABACAABBABACAACAAAABAACAABBACCC", "ACCCBAABAAABAAAAAAABBABAAAAAAAAACBAAABAABCBBABACA", "AAACACCAABAAAAAAABACCBACCAAACAABBAABACAABAAABACCA", "CACAAABABAAAACAACACAAABBCCABAACAAAABAAACCBABACAA", "ACAABCCAABAABCBABBABCBBACABABCCAACBCCCAAAAABABA", "CBAABCAAAACAAAACABAAAACBAABABAAACACAACCCAAAABAC", "ACABCBCCAACBACABAAAACAACAAAABACACABCAABAAABAAAC", "ABBAAAABACABBBCBBAAAAAAACACCACAAAAAAAACACCCAABC", "AAACCABCAACCABAABBBCCCCAAAACBAAAAABAACAAAAAABAB", "BAACCBBACABAABABBBABAACBACABAABAABAAABBABAAACCC", "AAABCBAACACAAAAAABCAACAAAABAABCABAACABACBCACACBAAA", "AAACBAABAABABAAACBBBABAAAAAAABABBACBBCBACAABABAB", "AAAAAAAACABBABCCACCABABBBCAAAAACAAAAABBCCAACBABA", "AAAAAAAACACBBABAACBCBACCACAAAAABBAAABAAAAAABABB", "AAAAAAABCABACAABCBCABACBCAABAABACABBBABAABAACAC", "BACBBCCABABABBACAAAABAAAAACAAACCABBCCBABCAAACAABB", "BABAAABABCAAACCCCAAAABAACAAAABBACAAAACAABCBACAC", "AACBBBACCBACBBCAACAAAABAAAAAABACACBCBABBAAAAAAC", "AABACABBCABBACAAABCABAABABAACBCBAAAAABCAAAAAABCA", "CBAABBCACACBABBAABABBBBCABBCCAAAAACACCCCBAAAABAA", "BAAAAAABBAAABCBABBAAACBAAACACACCABAAAACAAACACAAAA", "CAAACAACBABAACACBABAAAACBAACCABAAABCCBBABBBACCA", "BABAAAAAAAACAAAABAACABAAAAAACBACACBAACAABACAAAAAAB", "ACAACCBCBBBBABCAAABACCCABCBAAABAACCABAAACAAAABA", "AAAACAAAAAACBCCAACBBBBABCCBAABBACAACCACABAABABCCAA", "AAACABABAACAAACCCABAAAABAAABAAABCBAACBBAAACAAAAA", "ABAABAABAABCCBBCAABCCAABCBACBBAABAAAABBAAABABAA", "AAABCAABAACBCBCAAACBBAAAAAAACACABCBCABBAACBCACCAB", "BCCAACCCCAAACAABBCABABABAAAACACABAAAAACCAAABBAAAB", "AAAABABCCAAAAAAAACCACAAAAABABACABAABAAABAAAAABCAB", "CACBAACACCCCBAAABCABAAACAACAAAABABBCBCACCCAAABBBAA", "ACCBBAAABBCCBBAABABACAAABBBABACAACAACBCAAACCBABB", "AAAAAACCAACABAACAAABCABABAAABBAAAAACAACABACCBABCBA", "CABACBCAAAACCCAACACABACAAACBBAAABCABAAABACAAAAC", "AAAAAACAAAAABBACABABABCACCCCAABACAAABACCAAACABA", "CACCAACAAAAACCAACAAACAABCAACABABBAABAAAACAAAAAAB", "CACAAAABACABABCABAAAAAAACAAAAAABBABCAAAAACCCABBBB", "AAABAAAAAAABAAAACBABACBCAABBCBAAAABAACCCAACAACBCCC"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"CACBAACACCCCBAAABCABAAACAACAAAABABBCBCACCCAAABBBAA", "AAAACAAAAAACBCCAACBBBBABCCBAABBACAACCACABAABABCCAA", "AAABCAABAACBCBCAAACBBAAAAAAACACABCBCABBAACBCACCAB", "CBAABBCACACBABBAABABBBBCABBCCAAAAACACCCCBAAAABAA", "ACCBBAAABBCCBBAABABACAAABBBABACAACAACBCAAACCBABB", "CCACAABACBBACCABCAABCBCBBCAACACCAAAAAAAABCAABAB", "ACAABCCAABAABCBABBABCBBACABABCCAACBCCCAAAAABABA", "BACBBCCABABABBACAAAABAAAAACAAACCABBCCBABCAAACAABB", "AAABAAAAAAABAAAACBABACBCAABBCBAAAABAACCCAACAACBCCC", "ABACAABCAACAAABCAACABACAABBABACAACAAAABAACAABBACCC", "ABBAACAACABAACAACCBAACCAABAABABAAAAAAACACABBAABCBC", "ACAACCBCBBBBABCAAABACCCABCBAAABAACCABAAACAAAABA", "BCCAACCCCAAACAABBCABABABAAAACACABAAAAACCAAABBAAAB", "CAAACAACBABAACACBABAAAACBAACCABAAABCCBBABBBACCA", "ACBABAAABCABBAAAABCBCAACACCABAABAAAACACABAACAAAABB", "AAABCBAACACAAAAAABCAACAAAABAABCABAACABACBCACACBAAA", "ACAAAAAAABBABAAAACBCCAACBCAAACAACAABABABCCCBCAB", "CABACBCAAAACCCAACACABACAAACBBAAABCABAAABACAAAAC", "AAAAAACCAACABAACAAABCABABAAABBAAAAACAACABACCBABCBA", "BBCACCCACACAAABAAAABABAACABAABAAAACAACAABACBBACA", "AAAAAAAACABBABCCACCABABBBCAAAAACAAAAABBCCAACBABA", "AAACACCAABAAAAAAABACCBACCAAACAABBAABACAABAAABACCA", "AACBBBACCBACBBCAACAAAABAAAAAABACACBCBABBAAAAAAC", "ABCAAAAAACABAAABCAAAAAAACAAABCCCABACBABBCACAACAB", "ACABCBCCAACBACABAAAACAACAAAABACACABCAABAAABAAAC", "BAACCBBACABAABABBBABAACBACABAABAABAAABBABAAACCC", "AAAAAAABCABACAABCBCABACBCAABAABACABBBABAABAACAC", "AAACCABCAACCABAABBBCCCCAAAACBAAAAABAACAAAAAABAB", "ABBAAAABACABBBCBBAAAAAAACACCACAAAAAAAACACCCAABC", "BABAAABABCAAACCCCAAAABAACAAAABBACAAAACAABCBACAC", "CACAAAABACABABCABAAAAAAACAAAAAABBABCAAAAACCCABBBB", "CACAAABABAAAACAACACAAABBCCABAACAAAABAAACCBABACAA", "AAAAAACAAAAABBACABABABCACCCCAABACAAABACCAAACABA", "AABACABBCABBACAAABCABAABABAACBCBAAAAABCAAAAAABCA", "ABAABAABAABCCBBCAABCCAABCBACBBAABAAAABBAAABABAA", "BAAABAAAAACBBAABBBACBCBACACAAAAACBBAAAACAABCACA", "BAAAAAABBAAABCBABBAAACBAAACACACCABAAAACAAACACAAAA", "BCAABBAAABAAAAAAAABBCABBAAACABABBAACBCAACCAAAAAAB", "CACCAACAAAAACCAACAAACAABCAACABABBAABAAAACAAAAAAB", "CBAABCAAAACAAAACABAAAACBAABABAAACACAACCCAAAABAC", "AAACBAABAABABAAACBBBABAAAAAAABABBACBBCBACAABABAB", "ABACBBAAAACAAABCCCBBAACAAAAAAAAAAAAABCAAAACBCCA", "AAAAACACABBAAACAAAAABACAAACCAACAAACACAAABCAACAA", "AAACABABAACAAACCCABAAAABAAABAAABCBAACBBAAACAAAAA", "AACCAABBCBAACCACAAAAAAAAABABAABBAAAAAAAAACABCAAB", "ACCCBAABAAABAAAAAAABBABAAAAAAAAACBAAABAABCBBABACA", "AAAAAAAACACBBABAACBCBACCACAAAAABBAAABAAAAAABABB", "AAAABABCCAAAAAAAACCACAAAAABABACABAABAAABAAAAABCAB", "ACBAABABCBBABAABABABBAAAABBAAAAACBACAABAAAAACAAA", "BABAAAAAAAACAAAABAACABAAAAAACBACACBAACAABACAAAAAAB"};
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    vector<string> names = {"ABACAACAAABCABAAACABCCABAABCBAAAABCABBABCAACAAC", "CCAAACBAAABCBBACACAACACCAABBBAACBAACAAAAABAAAAA", "ACCCACCAAAABAABAAAACBAACACBACCCACAAAAAAAAAAAACA", "ACCBABBAAAAACACCAAABBCACCAABBACCCAAACAAAACAAABCA", "AACBABABAABCABABCAAAABACAAACAAABCBBABACBAABCAABAAA", "CCACBACBBABABBAAAABACCAABBAACCCCCBBABBBAACABACAAC", "CBACAAAAABBABACAAAABBAAAAABABAABBCAAACBCBABBAAB", "AAAAAAAABABBABBBACBACBCAACCCACBCABAABBBBACCAABA", "ACCACAAAAACBABAACBAACAAABACCACAAAAACAAAABBBBACA", "AAAAAACAAAAAACAABBCCCAAABAAAACBAAABCAACCBCACCAB", "AAAAAAAABBACAABAABCCBBBAABABBCBBCAAAAAACBBBABACABB", "AAABAAAACAAAABACABAACABBCBABCAABBCCAAABAAAAABAA", "BABACBCAACCCBACCCAAAAAAAACACCCBAAAAACCAACCCAAAA", "ACAACCAAAAAACBACAAAAAACAAABAAABBCBABAAAAAAAACAABA", "AAACAAAACCAACBBBCAAABACBACAAACBCABAAACAAAABABAC", "BCABAACAAAABCABAACBABABAAACAACAAAACABCAAAAAAABBBBA", "AABBAABABCAAACCACAAAAACCBACAAAABCBACBBAABAAAAAAABC", "BCAAAACCCAAABABACCAAABAAAABAACBCACBCAAAABAABACC", "ABCABCBBBBAAAAABBAACAABAACAACCAAACAABABAAACBCAA", "ACCBAAAAAABBAAABBACBCBACCCBAABAAACBBAACAACBABCBCBB", "ABBABBCABABBAAAAABBABCACBABCAABACABABCAACAAAABCAA", "ACAABABACACACBAAABBAAAACAAAAAAAAAAABAAAACBBCBAABAB", "AAAACCBBCCACAABABABABBBAAACAAAAAAAACCACBBCCABCBAAB", "CACBCBAAAAAABBBABAABAAABBBBAABAABCCCAABAAACCBAACA", "CAAACBABAAAAACABAACAAAAAAAACAAAABCBCBAAAABABBBA", "ACABBAABABAAAACAABCAABAAAACAAABBBCABAAAACCBBCACAA", "CCAACCCBAABBBCACAACABAAABAAAACACAAAABAACBACABBAA", "ACAACBACCAAAAAAAACAAACCCBAAAABAAAACABACBAAAAABB", "CACCCAACBABABACCAACAAABAABCBACABBAAAABABABACCCA", "AAAAAAABAAAAAABAAAACCAAAABBAAAACAAAACACABCCABBCAC", "ABCAAABCABCCCCBCBBBAACBBCBCBAACAABAABBCAAAACBBB", "AAABABAAABCCCCACAAAABBBCCBAACCBBAABABAAACCACCCA", "CBBABCBACACAAAABAACCABACBCAAAAAABAAACCAAAAABCAABC", "ABAAAACAACACAAAABCABAAAAACABACCCCCCACABAABCCACA", "ABBBABBACBACACABBAAAABCBAAABAAACBABABABABCAAABCB", "CBCAAAAACAAAAABACACABABABAAABCCACCABAABABBCCBAAAA", "CCCAACACCCAAABAAAAACAACABAABBACBAAAAABAAABACAAA", "CACBBCABCAACCAABCBAACCAABABBAACAAAABBCAABAAACCA", "ACBAABACACCACCBBAABBACACBAACAAAAABACACACAAACABCA", "AABCAACCAAAAACBAAABBBCAABCCBAAAABAAAABAAAAABAACCA", "AACBBBAAAACCAABBAAAAAABAABCBCAACBAACACAACBACCABBBA", "CBCCAAACAAACBAAACAACAAAAAAAACAAAAAACABAABBAAABABA", "BCABABBBCACABAAAABBAACCAAAAACCABAAACAABCCAAABAAC", "BCBBAAABBBBBCAAAAABABAAACABAACCCAAACABCAAABCACC", "ABCABCAAAABBAABBBAACAACAABAACAACAACACACBBCBCABB", "BAAACAAAABBACABAAABAAABAAAAABABCABAAABBBACBABAA", "ABCCBBBABACABAAABABAAABACAAACCCBCAAAACABAABBAAC", "ACAAAABCCBAACAAAAACCCAACAAAABAABABAAACAACACBABA", "BAAACABAAAABABABABBCCBAAAAACABABAAAACBACACABBAB", "AAABAABAAAABBBBBAABBCBBAACCACACBAAAACBBAABBAABABB"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"CCACBACBBABABBAAAABACCAABBAACCCCCBBABBBAACABACAAC", "ABCAAABCABCCCCBCBBBAACBBCBCBAACAABAABBCAAAACBBB", "ACCBAAAAAABBAAABBACBCBACCCBAABAAACBBAACAACBABCBCBB", "AAAACCBBCCACAABABABABBBAAACAAAAAAAACCACBBCCABCBAAB", "AAABABAAABCCCCACAAAABBBCCBAACCBBAABABAAACCACCCA", "BABACBCAACCCBACCCAAAAAAAACACCCBAAAAACCAACCCAAAA", "AACBBBAAAACCAABBAAAAAABAABCBCAACBAACACAACBACCABBBA", "ACBAABACACCACCBBAABBACACBAACAAAAABACACACAAACABCA", "ACCBABBAAAAACACCAAABBCACCAABBACCCAAACAAAACAAABCA", "CACBBCABCAACCAABCBAACCAABABBAACAAAABBCAABAAACCA", "CACCCAACBABABACCAACAAABAABCBACABBAAAABABABACCCA", "ABAAAACAACACAAAABCABAAAAACABACCCCCCACABAABCCACA", "CBBABCBACACAAAABAACCABACBCAAAAAABAAACCAAAAABCAABC", "AAAAAAAABABBABBBACBACBCAACCCACBCABAABBBBACCAABA", "AAAAAAAABBACAABAABCCBBBAABABBCBBCAAAAAACBBBABACABB", "ABCABCAAAABBAABBBAACAACAABAACAACAACACACBBCBCABB", "BCBBAAABBBBBCAAAAABABAAACABAACCCAAACABCAAABCACC", "CACBCBAAAAAABBBABAABAAABBBBAABAABCCCAABAAACCBAACA", "CBCAAAAACAAAAABACACABABABAAABCCACCABAABABBCCBAAAA", "CCAACCCBAABBBCACAACABAAABAAAACACAAAABAACBACABBAA", "AABBAABABCAAACCACAAAAACCBACAAAABCBACBBAABAAAAAAABC", "ABBABBCABABBAAAAABBABCACBABCAABACABABCAACAAAABCAA", "BCABABBBCACABAAAABBAACCAAAAACCABAAACAABCCAAABAAC", "AAABAABAAAABBBBBAABBCBBAACCACACBAAAACBBAABBAABABB", "AACBABABAABCABABCAAAABACAAACAAABCBBABACBAABCAABAAA", "ABACAACAAABCABAAACABCCABAABCBAAAABCABBABCAACAAC", "ABBBABBACBACACABBAAAABCBAAABAAACBABABABABCAAABCB", "ABCCBBBABACABAAABABAAABACAAACCCBCAAAACABAABBAAC", "BCAAAACCCAAABABACCAAABAAAABAACBCACBCAAAABAABACC", "ACABBAABABAAAACAABCAABAAAACAAABBBCABAAAACCBBCACAA", "AAAAAACAAAAAACAABBCCCAAABAAAACBAAABCAACCBCACCAB", "AAACAAAACCAACBBBCAAABACBACAAACBCABAAACAAAABABAC", "BCABAACAAAABCABAACBABABAAACAACAAAACABCAAAAAAABBBBA", "CCAAACBAAABCBBACACAACACCAABBBAACBAACAAAAABAAAAA", "AABCAACCAAAAACBAAABBBCAABCCBAAAABAAAABAAAAABAACCA", "ABCABCBBBBAAAAABBAACAABAACAACCAAACAABABAAACBCAA", "ACCACAAAAACBABAACBAACAAABACCACAAAAACAAAABBBBACA", "ACCCACCAAAABAABAAAACBAACACBACCCACAAAAAAAAAAAACA", "ACAAAABCCBAACAAAAACCCAACAAAABAABABAAACAACACBABA", "CCCAACACCCAAABAAAAACAACABAABBACBAAAAABAAABACAAA", "ACAABABACACACBAAABBAAAACAAAAAAAAAAABAAAACBBCBAABAB", "BAAACABAAAABABABABBCCBAAAAACABABAAAACBACACABBAB", "AAAAAAABAAAAAABAAAACCAAAABBAAAACAAAACACABCCABBCAC", "ACAACBACCAAAAAAAACAAACCCBAAAABAAAACABACBAAAAABB", "CBACAAAAABBABACAAAABBAAAAABABAABBCAAACBCBABBAAB", "CBCCAAACAAACBAAACAACAAAAAAAACAAAAAACABAABBAAABABA", "AAABAAAACAAAABACABAACABBCBABCAABBCCAAABAAAAABAA", "ACAACCAAAAAACBACAAAAAACAAABAAABBCBABAAAAAAAACAABA", "CAAACBABAAAAACABAACAAAAAAAACAAAABCBCBAAAABABBBA", "BAAACAAAABBACABAAABAAABAAAAABABCABAAABBBACBABAA"};
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    vector<string> names = {"QOKATOUDCEYDAOOCSDPNVTMWASYAMGQYVOAWSYIAXCYVCARAEI", "JCGAWWAJJZAUQKYENKAUMGYQGWAELOYKADWUAAXCNLEEGLUQVS", "CZAGUUJOPPCHWECUSMEVZKYKQUACPKGGIIANYOOLWGYKYMWRAI", "YIGFUXAGVWXFKCEMIIXIAMYULOKGCKCGUGMUQOAQJKJAKOATXC", "EGNRKACASGIDSYOAKPSMKWAWWXUKOJHAUGVJHUUUOMPKNNWYAU", "JFCGXGRGMUOWIJJELWMKUAAYMNKQHAQEAJAAXUMGHRMMPNSOCI", "YAUBAHQGUMJEOITGYCOTGMABGKCSLQCCVLCBECFPFMUCUCHIUE", "WSHMJEUGXZQGMLQGIVCYDIEEWGINUNASOVYEIUGGTQOGAKCXWG", "YSKRUYBFETKCSUGDFBIKFJAAIEGWTZEKYSIWPGANUNPUMENOGC", "KBWUGKSCEJMYULQQLUOKAIEISECOEMBGMQSAEUPAGEQCEMZAES", "IGXMOWCIIEOSUPVCAAQABOSSYCUWHRGZOQNAAMYSQXXVPCBOKU", "NXWEGWMQSIKYGIKNHEAEAQAEGWIOAMIQWTSEEOUGUISBEEKUEM", "GBKGATGIMCTNXMGOFAKSPPNYKMMQOUWAACHGAIWIMNTEUGCQKU", "ASMEKOKAPPQANEQSTMGUFAUKAMZOSGSBTMMQEMZWQMZMAUNQVQ", "EOSEQAWCGYQNYNEAKOLZAXYQGAWBEWMNMIUANNAUAMKIDHWKPO", "PAJYMAAAJLKFAQGUAAXYXOGAWDCWGCWGKWEEODXKXOMTITYIAE", "HECNEQQSCQKSWRICQYBSSRLENEGUOOAFOGQGAYRTSHFGNISTUS", "GMENMOQBZNYCUEBIAEOGMIOUQSMSAAAMQIAVQGSMWCCKDRGPNV", "WZMBKGTIENKAQGWBAXEOWAGNOWLREPIEEWUDEXYDXXTUSSBAUG", "AAIWMWOGAMNSEUVKIUWFAGIQGAJAEWVBSGAQPKMYZQEBIXRPCP", "SLTKGGKDCTGMAXIWYGAAWAMKEBBGBMPQUOQKANAMHAIUFKAOPD", "YOASQCOSKWQKEASMVPCWFWKCKQAQALAANQWAJSWGUSQIIQUPGA", "GMGISQNGNKEKKAAISQPODSARCLTCQQNMBYHAKRRJOGOUAAIAKB", "EKAAXSIHIEOGXLYWWMVTNIYNMUFAIAAMSUSRUSQAPUKATMYUQJ", "TKQVQAYAGUIBIOGBCUKOMQSGQGOOINANUFAWEGIAOBWAGEACNI", "YYSOHCWYIVTIPYDAPGZGUAWYWMGDUBADQSIHGMOGMOIASICQKM", "QZEOIKCMWWHEQGKKXJEYAZEESNMMGAUAHAAQBFKAYMIEYKQOUN", "WOMEIOVGTWIEECHWQUJGSLAAFIEQMWWGAYQHVOGVIOAQUZAGYN", "ECCFUVIWRJOFEOFIDXSDULBIQQAASAKITNCKMOWIKYMMHGSUBO", "QGHENSWNMNULWMAAXQISAUSUOUAOMPFKBMMWAGHMTAOWAWHXQZ", "AYRKGDQZWKATMILQAISFQNIAYBAABQYDCXKWGIQVUHVGKDBLMY", "ASQTEGOGIGNYBPYQOOQGNAUIGUVGEAAYXIXXGIYCBGMGAIUMOU", "PYWEALELGFYPWSIZJHBIWKOVIAYEYMMPYUJYHMAWACGOPAGIXG", "YBIFKSEBQIABRACPKMKYOIQZQKEAUMIMQGKQGHGYOSASNGUDME", "NMMNYKQMUGKLKIBFTKGTUAYYGCWVYCANBNAQKLAACHCUNMGMKI", "CULURWSWVTMXMYGMHHIMOSTJWDQETCIEPKUASMOLQHAJWAMACS", "KXGIIOOPIYZKTSCAGEGVCEIGCYPUYUEQAMKUOGMSQKTSIYVYCS", "QOKUFGIEIEAMXUYISXJBUUSGUGQMYQFHUWMZTNIEJSWFAOUIEH", "SZQYQUCVAEMIMAWOOZVDCGSNOGYAMUKWYOGNYQQGOMAAUKQAGQ", "ASCJGBAABMEAVHXYAVWNCRCKKYVMMWUWCQAGMIXRRMLEAZQGPB", "GYSZDMCVUWTAYSYGMAANDDNQRCISIUDSEACQZOQTSCYOGNMSAZ", "YSNEIQWUEMWAJWEFKEDSOKGDQEAJAHHQEZQANEBHVEUKWEUOOM", "MJOIYGYIUMRRUSSWUOQOAYVWWIYCYNYBLHUCANCZEHBGWWCKCU", "TJHFMBZONSXSMTSDATBOQWIHGWNHGGKEXKAQVEGOOLOMWCQAMW", "KQAYUSKFXYGSGJWWDYQMAIYIAUAVSPBYGXYISGQEAEIPQCASEU", "UYQNWOUQPLYAFAIMUEISSIGVTIKAWAKMNUVDSXWEEMNHWEQAYA", "AIUSGAUQOQCAHNMGUDMDAGEMEROKOCHQODASKKEEJGOCSTUGAC", "PQSYDQBOADQCAXAYGIDYYDCMOYBSWKVWYXQYQZBERCSAUPUVAA", "WIMCEUAYQNFIUUQGMYOVKKJWCKJMFGDNAOGMPCUGUDGUOYIONR", "MOWVYAAYOFMCGMZNZFRGGMWWTOXDRDRIONMQNAAUQEAIQYNIQW"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"MJOIYGYIUMRRUSSWUOQOAYVWWIYCYNYBLHUCANCZEHBGWWCKCU", "EKAAXSIHIEOGXLYWWMVTNIYNMUFAIAAMSUSRUSQAPUKATMYUQJ", "MOWVYAAYOFMCGMZNZFRGGMWWTOXDRDRIONMQNAAUQEAIQYNIQW", "KXGIIOOPIYZKTSCAGEGVCEIGCYPUYUEQAMKUOGMSQKTSIYVYCS", "SZQYQUCVAEMIMAWOOZVDCGSNOGYAMUKWYOGNYQQGOMAAUKQAGQ", "PQSYDQBOADQCAXAYGIDYYDCMOYBSWKVWYXQYQZBERCSAUPUVAA", "QOKUFGIEIEAMXUYISXJBUUSGUGQMYQFHUWMZTNIEJSWFAOUIEH", "UYQNWOUQPLYAFAIMUEISSIGVTIKAWAKMNUVDSXWEEMNHWEQAYA", "IGXMOWCIIEOSUPVCAAQABOSSYCUWHRGZOQNAAMYSQXXVPCBOKU", "GYSZDMCVUWTAYSYGMAANDDNQRCISIUDSEACQZOQTSCYOGNMSAZ", "ASMEKOKAPPQANEQSTMGUFAUKAMZOSGSBTMMQEMZWQMZMAUNQVQ", "EGNRKACASGIDSYOAKPSMKWAWWXUKOJHAUGVJHUUUOMPKNNWYAU", "QGHENSWNMNULWMAAXQISAUSUOUAOMPFKBMMWAGHMTAOWAWHXQZ", "CULURWSWVTMXMYGMHHIMOSTJWDQETCIEPKUASMOLQHAJWAMACS", "CZAGUUJOPPCHWECUSMEVZKYKQUACPKGGIIANYOOLWGYKYMWRAI", "KQAYUSKFXYGSGJWWDYQMAIYIAUAVSPBYGXYISGQEAEIPQCASEU", "WSHMJEUGXZQGMLQGIVCYDIEEWGINUNASOVYEIUGGTQOGAKCXWG", "YYSOHCWYIVTIPYDAPGZGUAWYWMGDUBADQSIHGMOGMOIASICQKM", "PYWEALELGFYPWSIZJHBIWKOVIAYEYMMPYUJYHMAWACGOPAGIXG", "WZMBKGTIENKAQGWBAXEOWAGNOWLREPIEEWUDEXYDXXTUSSBAUG", "WOMEIOVGTWIEECHWQUJGSLAAFIEQMWWGAYQHVOGVIOAQUZAGYN", "TJHFMBZONSXSMTSDATBOQWIHGWNHGGKEXKAQVEGOOLOMWCQAMW", "HECNEQQSCQKSWRICQYBSSRLENEGUOOAFOGQGAYRTSHFGNISTUS", "WIMCEUAYQNFIUUQGMYOVKKJWCKJMFGDNAOGMPCUGUDGUOYIONR", "QOKATOUDCEYDAOOCSDPNVTMWASYAMGQYVOAWSYIAXCYVCARAEI", "YOASQCOSKWQKEASMVPCWFWKCKQAQALAANQWAJSWGUSQIIQUPGA", "ASQTEGOGIGNYBPYQOOQGNAUIGUVGEAAYXIXXGIYCBGMGAIUMOU", "EOSEQAWCGYQNYNEAKOLZAXYQGAWBEWMNMIUANNAUAMKIDHWKPO", "JCGAWWAJJZAUQKYENKAUMGYQGWAELOYKADWUAAXCNLEEGLUQVS", "YSKRUYBFETKCSUGDFBIKFJAAIEGWTZEKYSIWPGANUNPUMENOGC", "AYRKGDQZWKATMILQAISFQNIAYBAABQYDCXKWGIQVUHVGKDBLMY", "AAIWMWOGAMNSEUVKIUWFAGIQGAJAEWVBSGAQPKMYZQEBIXRPCP", "YIGFUXAGVWXFKCEMIIXIAMYULOKGCKCGUGMUQOAQJKJAKOATXC", "ASCJGBAABMEAVHXYAVWNCRCKKYVMMWUWCQAGMIXRRMLEAZQGPB", "QZEOIKCMWWHEQGKKXJEYAZEESNMMGAUAHAAQBFKAYMIEYKQOUN", "NXWEGWMQSIKYGIKNHEAEAQAEGWIOAMIQWTSEEOUGUISBEEKUEM", "YSNEIQWUEMWAJWEFKEDSOKGDQEAJAHHQEZQANEBHVEUKWEUOOM", "ECCFUVIWRJOFEOFIDXSDULBIQQAASAKITNCKMOWIKYMMHGSUBO", "GBKGATGIMCTNXMGOFAKSPPNYKMMQOUWAACHGAIWIMNTEUGCQKU", "NMMNYKQMUGKLKIBFTKGTUAYYGCWVYCANBNAQKLAACHCUNMGMKI", "GMENMOQBZNYCUEBIAEOGMIOUQSMSAAAMQIAVQGSMWCCKDRGPNV", "JFCGXGRGMUOWIJJELWMKUAAYMNKQHAQEAJAAXUMGHRMMPNSOCI", "PAJYMAAAJLKFAQGUAAXYXOGAWDCWGCWGKWEEODXKXOMTITYIAE", "YBIFKSEBQIABRACPKMKYOIQZQKEAUMIMQGKQGHGYOSASNGUDME", "KBWUGKSCEJMYULQQLUOKAIEISECOEMBGMQSAEUPAGEQCEMZAES", "GMGISQNGNKEKKAAISQPODSARCLTCQQNMBYHAKRRJOGOUAAIAKB", "TKQVQAYAGUIBIOGBCUKOMQSGQGOOINANUFAWEGIAOBWAGEACNI", "SLTKGGKDCTGMAXIWYGAAWAMKEBBGBMPQUOQKANAMHAIUFKAOPD", "YAUBAHQGUMJEOITGYCOTGMABGKCSLQCCVLCBECFPFMUCUCHIUE", "AIUSGAUQOQCAHNMGUDMDAGEMEROKOCHQODASKKEEJGOCSTUGAC"};
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    vector<string> names = {"MQDPBBCCGANQAAUINHGEVAWAARMWWMAAZAMNTQDSADOCBEGACA", "QAHORKAACHOSKKAKDQIYEZNKECUOSXAXQAMKENYSKSHYGGYIAL", "AAJGYUYOWVCHONIEQXSCMAPZOQWNZUAILREJXGAYIEVOFQOASC", "GZDOWCAYCYARBESUEYYCDXQRICAQNQMUAARXMIKDJJQKKEQQOI", "SUQAXFMEAUOPAOGGHEHZZESUIINOKYUOUTQFIWVAENFRXSGIQS", "FKSOUYJLCHODGGNTUGZYIQVWODPGNIWWQEUPIYWDLSQMXMMVUA", "UMMPJCAYBWQLKAOOCSHEYSUEKMEPSCQTESWOYCMOEJYKATWYBC", "AQHQUYAQXPMHOEERPMTAEIAGSAOKGCYMFQAAVPCVAWIQNSIQJS", "YKYUFBJIIHNHCEEOTAKUAKKWURWADSQBOAGKWHTTACDIOUOUTA", "GIIQBUGFCDALWOKAAOHEMEETAQXZSAGHSWNGKMMQECAQAAGACW", "XMIUDYOAKTEUAIAUGJEAIGAKUTDQSZCGIMSULVJCGCOCAFQKPY", "OMQIAASATWRCQMAEWGSYBJEIWCEOCESMVASAQUSWFKBGCMYOTI", "AOTCZJSNGIDINCEAUDBYTGKCBMMKSWGSOOAQIILYGKELKPWOYS", "MAYOUWYAACDOAIABCCOVWAYRQJFKYSASAOEGUUKOAAIMOKRNIP", "EAUIQGMPSINKKAAWOOIWVAKSRIEUYMICMUTNXOQEMWINMHCWZK", "ACGICMCAAMFWGUKNMMBIEDIPMZHAJAZABPIWOCAJGZOUWKMWKD", "YKZUKYGKAEBGENQCKMIZKGQIMCQCUPMISVUDKYNAOUEAOOHABE", "AZFRSWWEERAJMDWPGREGWWXGGYOIGQEGCAIMZNQOOZACEQVUIM", "OXCOQKCCMBAKFJQPAPIQTAKAWGYMQLLIIEYGWWAETNWIDKRCFJ", "NKCKDAAEVTSKDSHAJJPACEGIPIPTJIWMMLUBUYAAAFMVKEECAC", "VJCKCWCXNSVOYGXFQCWXOEFCQFKNWVNICCSEOQOANKEEAWAUCM", "FSMOFUCMSQYUUQEAAEWGQIQTUWQMYEWFQEIQGYXKUFMSLQFJIM", "COACAILOIIHCYFZAEAUNQKANZAQASBEOFNRYKSGPIOSAERAACA", "ADOPYYNZPUVQRAACMCGAQUSUIKMSMKMGWOCUWGAEYKBGEXIBSL", "WVVJRIKNAMAQKMQHCKKJYQXSWUCDEOVVAAFGMIVYICQUEOICUF", "NSNAWASOWVBUDYCAVACSCMOYAGOCXKYGLMBVTWUSCELUAUIKAK", "WVQKVCOQIDAMXYMSZYMOBWWWKWWJOGAFISGJIIYMNCGOOAECMG", "VASMXZQSUEAQRSQJEUSIWNWCSIIZTMAEGWWMRQIZUUECWCVURX", "NCSAWUOEBOUXANVYCQWXVUOZGKAEABASIQTOYWGCESSVWYSQNG", "KFOWZACGYWQXKSGKGNUAAIDVQNAWNUEGHFKNEQBCYGKSMEAMXC", "AKMYQKIOEIKIAKMRCMUQUVINIYESCIYZFBQSNWMYEHRZIQJLCR", "UASQMFMCEKUUCNQMWTSSHMZEKSOSPSQOASCBNGEEKMVRUDQITN", "SOQFEYMCPAGTBSISNWWKMOYLAOQGKHRWNKQTWEGCYCYGLAACIB", "LFIAAYCRNQAYIACLKKMFPGHLCWMAQOSGXKMALDTQGUSZQXNSKD", "AIFAWOQAVGWYNPECYCVZAQKWCQYEZYIYAECHIOHHGEGSOEUQSG", "QAAWKQWAIEGYWUEUQAAIMMYKYFPECACKKOEANPINKLOGAWGJBP", "IAOAGCINCAPGHDKAEIQOCEQBPSYUOOSEECQUQNAMATSQNSKBIO", "GQILXNAOVFSAAKGTBDUWWFEPKIXNQAWAASUDBCACLODQGCGIIP", "GMCHKSSMEGGQFSSQCUTAGOSQGPHAIGNUMBVROWZMYHOUKLPCMK", "WNAULWUMKUEDMQKOACYAUOOFCGENWKCSSQGYUUAQMTTSCGWWOA", "GONWWWUSUQVPUOPAZILQKUIYQSQIMUTACOKSWAQWSTACYYJLVE", "YWIHCANEYMQKGYIVZUXYAIUESMAGSVWGWASUMDMNTBXKJZSIQN", "DUPSBAZZAAGNTZYWDOCUOCBIFAYAMLYEAYAYAQDKICGCTKESHY", "IIWWPRSHJMWJIAMSAUZSRMWUUCZYBYQFUUUYYYCUTEOMOBXGNA", "CAQOEARAYLXGBYABKMSYNBCXQCYFCUACGGJSQKGAQGRTGACMSW", "BGRIAJUICWJUKHMKMAGGSMSUAKMUWMMNEIWYSAGNOANOMHGAAA", "WQGUIDCKJBOPILJHGENOKUASYBRDMECSYTHGQDKFZYCIUBNLAW", "HQZWVEGOOQTIQJAYOUPWSMWOAKOSUQUELXEWCZOTMYKRMOASCC", "AYMOWMGMAFKNKVMKKVTNLQQNUWALKFYQIUMCNNSAUCADCOAAOY", "MQSZYMAFGSKCWOISWYMQEFEBAKAKEEMWAVAJUSAGKFAEBWEESC"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"GONWWWUSUQVPUOPAZILQKUIYQSQIMUTACOKSWAQWSTACYYJLVE", "IIWWPRSHJMWJIAMSAUZSRMWUUCZYBYQFUUUYYYCUTEOMOBXGNA", "VASMXZQSUEAQRSQJEUSIWNWCSIIZTMAEGWWMRQIZUUECWCVURX", "HQZWVEGOOQTIQJAYOUPWSMWOAKOSUQUELXEWCZOTMYKRMOASCC", "FKSOUYJLCHODGGNTUGZYIQVWODPGNIWWQEUPIYWDLSQMXMMVUA", "YWIHCANEYMQKGYIVZUXYAIUESMAGSVWGWASUMDMNTBXKJZSIQN", "NCSAWUOEBOUXANVYCQWXVUOZGKAEABASIQTOYWGCESSVWYSQNG", "FSMOFUCMSQYUUQEAAEWGQIQTUWQMYEWFQEIQGYXKUFMSLQFJIM", "SUQAXFMEAUOPAOGGHEHZZESUIINOKYUOUTQFIWVAENFRXSGIQS", "WNAULWUMKUEDMQKOACYAUOOFCGENWKCSSQGYUUAQMTTSCGWWOA", "EAUIQGMPSINKKAAWOOIWVAKSRIEUYMICMUTNXOQEMWINMHCWZK", "WVQKVCOQIDAMXYMSZYMOBWWWKWWJOGAFISGJIIYMNCGOOAECMG", "UASQMFMCEKUUCNQMWTSSHMZEKSOSPSQOASCBNGEEKMVRUDQITN", "AKMYQKIOEIKIAKMRCMUQUVINIYESCIYZFBQSNWMYEHRZIQJLCR", "AAJGYUYOWVCHONIEQXSCMAPZOQWNZUAILREJXGAYIEVOFQOASC", "UMMPJCAYBWQLKAOOCSHEYSUEKMEPSCQTESWOYCMOEJYKATWYBC", "AZFRSWWEERAJMDWPGREGWWXGGYOIGQEGCAIMZNQOOZACEQVUIM", "GMCHKSSMEGGQFSSQCUTAGOSQGPHAIGNUMBVROWZMYHOUKLPCMK", "WVVJRIKNAMAQKMQHCKKJYQXSWUCDEOVVAAFGMIVYICQUEOICUF", "ADOPYYNZPUVQRAACMCGAQUSUIKMSMKMGWOCUWGAEYKBGEXIBSL", "AIFAWOQAVGWYNPECYCVZAQKWCQYEZYIYAECHIOHHGEGSOEUQSG", "NSNAWASOWVBUDYCAVACSCMOYAGOCXKYGLMBVTWUSCELUAUIKAK", "AYMOWMGMAFKNKVMKKVTNLQQNUWALKFYQIUMCNNSAUCADCOAAOY", "SOQFEYMCPAGTBSISNWWKMOYLAOQGKHRWNKQTWEGCYCYGLAACIB", "VJCKCWCXNSVOYGXFQCWXOEFCQFKNWVNICCSEOQOANKEEAWAUCM", "GZDOWCAYCYARBESUEYYCDXQRICAQNQMUAARXMIKDJJQKKEQQOI", "AOTCZJSNGIDINCEAUDBYTGKCBMMKSWGSOOAQIILYGKELKPWOYS", "AQHQUYAQXPMHOEERPMTAEIAGSAOKGCYMFQAAVPCVAWIQNSIQJS", "LFIAAYCRNQAYIACLKKMFPGHLCWMAQOSGXKMALDTQGUSZQXNSKD", "QAHORKAACHOSKKAKDQIYEZNKECUOSXAXQAMKENYSKSHYGGYIAL", "KFOWZACGYWQXKSGKGNUAAIDVQNAWNUEGHFKNEQBCYGKSMEAMXC", "OMQIAASATWRCQMAEWGSYBJEIWCEOCESMVASAQUSWFKBGCMYOTI", "YKYUFBJIIHNHCEEOTAKUAKKWURWADSQBOAGKWHTTACDIOUOUTA", "YKZUKYGKAEBGENQCKMIZKGQIMCQCUPMISVUDKYNAOUEAOOHABE", "WQGUIDCKJBOPILJHGENOKUASYBRDMECSYTHGQDKFZYCIUBNLAW", "DUPSBAZZAAGNTZYWDOCUOCBIFAYAMLYEAYAYAQDKICGCTKESHY", "XMIUDYOAKTEUAIAUGJEAIGAKUTDQSZCGIMSULVJCGCOCAFQKPY", "MAYOUWYAACDOAIABCCOVWAYRQJFKYSASAOEGUUKOAAIMOKRNIP", "OXCOQKCCMBAKFJQPAPIQTAKAWGYMQLLIIEYGWWAETNWIDKRCFJ", "BGRIAJUICWJUKHMKMAGGSMSUAKMUWMMNEIWYSAGNOANOMHGAAA", "QAAWKQWAIEGYWUEUQAAIMMYKYFPECACKKOEANPINKLOGAWGJBP", "CAQOEARAYLXGBYABKMSYNBCXQCYFCUACGGJSQKGAQGRTGACMSW", "MQSZYMAFGSKCWOISWYMQEFEBAKAKEEMWAVAJUSAGKFAEBWEESC", "GQILXNAOVFSAAKGTBDUWWFEPKIXNQAWAASUDBCACLODQGCGIIP", "IAOAGCINCAPGHDKAEIQOCEQBPSYUOOSEECQUQNAMATSQNSKBIO", "ACGICMCAAMFWGUKNMMBIEDIPMZHAJAZABPIWOCAJGZOUWKMWKD", "COACAILOIIHCYFZAEAUNQKANZAQASBEOFNRYKSGPIOSAERAACA", "GIIQBUGFCDALWOKAAOHEMEETAQXZSAGHSWNGKMMQECAQAAGACW", "NKCKDAAEVTSKDSHAJJPACEGIPIPTJIWMMLUBUYAAAFMVKEECAC", "MQDPBBCCGANQAAUINHGEVAWAARMWWMAAZAMNTQDSADOCBEGACA"};
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    vector<string> names = {"QCKGSWIDCWAJAUFIRLOORAONXXBMEUEIYMLHKAAGGHPPCGCWLI", "IIAPYUUAGXNICXBOQCKMSBIEIGGYQUOCWNINGLQENWMMSMOQCT", "SKZKGCNVAUSSCDRTIKEUBWQZUMQJPHGCEEQBYHAAEIXCKAAJBF", "LWMFENKAAIAQQUFUFUYOVAWOMIISXMYOMAYAKMQCISFMAEGASC", "GDKWGSSELESEMAMLOYKUQAOIAUEEEIQCMSOGSNYGYGPYQQQYRQ", "GGIGAMNAIYASJKANKKGSZWWKCSJQQYYTGIAWJIQUODKAKEWIGX", "ANAIJPEHYKVAADWGESNIIVOMQWFSXOJEEKKVYXQEMIAAOGIUAI", "MATQXCQGTKWDFYERSMGCMDQTKDETYENQGAWXTCYMEWECHAACHE", "EZIOFKNOGDHOOEBOTUYVUKAUGVUEERGBZFWOQKAFPSIYADFIAM", "QKRECSMHTWQQYXKCIVYMMRTSZAPSMNQQFNOSISEABTIYOFCSJI", "AAHTIUMRMCSBEQWMASMSJKISKQRYOKNFEAESGQOYMUEUSGSAQA", "EKUWCGNAOWUFUJGZMIDXFEEBYQTVTOQEGDZOOROWQBOGIOOCOK", "SWGYWYWHAMXSNGGFGAKYCUAASQFEKYZWQTICQUSIIIZAXCWIOG", "KEOQZQXKCUAPWQQYVUQRQQCICKCMMACOYTYGWDJGCAUWBNCALY", "SYWKWYQESACVWUUCWFULWEAKYCYAILECIOAYASIKGMEISZIPHG", "CZZIYEWLMUOGOIEFKWQUSBRRERMWAILIJWMCQUAVSGGAWIGSVO", "ESIKUVLJQOGALAOACUQIPSGGAUQWSCLHUIKAKPCKENMQEKOHNF", "CTSEGMKLAQMICAUUUAUWIMAEQUEXESJUEHFRDQSMIMIQAEGXAN", "OYBAWVMLYJNSCLOHYKUUKDYGIXZKWUEHARBNMCOVCMGHWGCEOW", "KUAYWAJSXUYCEAAAWYHQTUOIORGASUEAXYQPCYCMOAGYGVEMKK", "AKESCRULGEIOIGQINTIESQYHCCSAEDCWIYWWFFFCGRAAQWKOAN", "QCKDIFHMGIWHAECSKIIJGAJQENBQKGAUKISGKAERZTOHRYYXIA", "QWWDEAICIGKOAWMEZDMAQVACYSPANSCZCIQYHQWPFMUOLAFQII", "AWDBSEAGAQZGPMJOPQAABAGHFTHINGJMWPEAMQAPPMAWOIIAUN", "KCAWKAMMUGZTYMCLIGGLBCAFJEUKGOARABYJMIGGGUAXMGSIHL", "MEAKOGEAQSKIAJRIUWYPWHGOPRDAWANAEAUNFMYWAIIAHICSAN", "EAKYEYEQWCNGKULZHNYEQHBDOTSACIYHUHPZLQVKTWLPKJGGDX", "NBAWEQAESUYGXGOYTMKSYBAXEASCAOSUBQGACXOGAEYASGMAST", "MYEMSVWYWWQAEQSNFAUCHAJQZOOYKAZFQASMUATUSSBMQZKEUW", "PIPIQDDKLMACUCJQRBRJNIJAHSKAEMTXGCUGQYIAAUAPUSGKQF", "MHCQORGWOYQAAKGYQCABNEWIVUNGCWQNUEQAJILYZBISWHGURG", "TQKHIYGMIXIANAUAMDEUCWAPAQWIYTKEUAUCHEUGPHQAQEAOOY", "NGADEDCYYARADAIGPIUVWYIHHNDJAQOUQNYTSQAOAPUIXNSAVR", "ELUUNQIWPQNFGIJCYYPQGZUQGMCCNKUQUZAEEEKSMEKAKKIWAO", "MNMMYZBAOKIUQAIKTDXYKDWMMOATYASQUUQGITKKWMUAENACMY", "SMUHMKZMSUAWHGDSOZUQOVGKEUAZIOHVGQSFVIZOEPUFGAITAQ", "AGDFNWPSAGSCKAANFKEAPCPICQJVABPESEZAKUAQDKZDQRAYOE", "YAAKVCMMGEALEAIECFPDYINDAGUSMRKUEICAQVDBHREGOGTOSC", "STUUFMAFUSNOZETLKUKEYYAOOCVGAUQWMKPYOVAUWCWMYEIJEQ", "JMUIRMFPRIIMCJUFKIIABYXIIADPKUAULSPDAISGSTSAWSDISC", "MQFNYLTPYYWCAAGEMTOVCWAKBRRLOSCORUIQTMMETSOEKSGIAE", "LAMDAOCAUCSBRUUWWOKGEASIOZLHYGMATOMNKNNWRAGJSMKREL", "IUOESSYVINEWQCYOHHPGKLWKCOCYIOCSHPOACKNGAESQACKOGW", "PWVUDMAQAWGNPQQIGTAKGAYIKVAWCOZKGAUDYZDRJANCOCWAIA", "AAWNCOSKUWOYSNFEKOKWNKCCAJJUQNSLBKQSXUUOGCYSBCOSHG", "NARYKGIAEIVAOXHASHYEWGAOGCUCCCNMGASOCIDWNIWMMHYQGY", "MVITQAYDCAGXUWAKKSNQIQWIYKAKVMKNIBXAYYMGFNOGYWEEGC", "CEEYPSOIZMDZOKHBNEYYZGSSJMMBKINASWRBWXUIJQEEOPNSWR", "YBZWWOUIDANBJAOCIEIBYYUEWHQQIYACOONHHACIDKBCYADEHX", "MMWSNWKCAMNRLXGICXNWKYUMAIBAUMCCCAWQADAEEAMCFSSXMW"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"MYEMSVWYWWQAEQSNFAUCHAJQZOOYKAZFQASMUATUSSBMQZKEUW", "STUUFMAFUSNOZETLKUKEYYAOOCVGAUQWMKPYOVAUWCWMYEIJEQ", "QKRECSMHTWQQYXKCIVYMMRTSZAPSMNQQFNOSISEABTIYOFCSJI", "CEEYPSOIZMDZOKHBNEYYZGSSJMMBKINASWRBWXUIJQEEOPNSWR", "SMUHMKZMSUAWHGDSOZUQOVGKEUAZIOHVGQSFVIZOEPUFGAITAQ", "SWGYWYWHAMXSNGGFGAKYCUAASQFEKYZWQTICQUSIIIZAXCWIOG", "CZZIYEWLMUOGOIEFKWQUSBRRERMWAILIJWMCQUAVSGGAWIGSVO", "MNMMYZBAOKIUQAIKTDXYKDWMMOATYASQUUQGITKKWMUAENACMY", "OYBAWVMLYJNSCLOHYKUUKDYGIXZKWUEHARBNMCOVCMGHWGCEOW", "EAKYEYEQWCNGKULZHNYEQHBDOTSACIYHUHPZLQVKTWLPKJGGDX", "KEOQZQXKCUAPWQQYVUQRQQCICKCMMACOYTYGWDJGCAUWBNCALY", "KUAYWAJSXUYCEAAAWYHQTUOIORGASUEAXYQPCYCMOAGYGVEMKK", "GDKWGSSELESEMAMLOYKUQAOIAUEEEIQCMSOGSNYGYGPYQQQYRQ", "EKUWCGNAOWUFUJGZMIDXFEEBYQTVTOQEGDZOOROWQBOGIOOCOK", "SYWKWYQESACVWUUCWFULWEAKYCYAILECIOAYASIKGMEISZIPHG", "MQFNYLTPYYWCAAGEMTOVCWAKBRRLOSCORUIQTMMETSOEKSGIAE", "AAWNCOSKUWOYSNFEKOKWNKCCAJJUQNSLBKQSXUUOGCYSBCOSHG", "MVITQAYDCAGXUWAKKSNQIQWIYKAKVMKNIBXAYYMGFNOGYWEEGC", "MHCQORGWOYQAAKGYQCABNEWIVUNGCWQNUEQAJILYZBISWHGURG", "ELUUNQIWPQNFGIJCYYPQGZUQGMCCNKUQUZAEEEKSMEKAKKIWAO", "IIAPYUUAGXNICXBOQCKMSBIEIGGYQUOCWNINGLQENWMMSMOQCT", "NGADEDCYYARADAIGPIUVWYIHHNDJAQOUQNYTSQAOAPUIXNSAVR", "GGIGAMNAIYASJKANKKGSZWWKCSJQQYYTGIAWJIQUODKAKEWIGX", "AAHTIUMRMCSBEQWMASMSJKISKQRYOKNFEAESGQOYMUEUSGSAQA", "LAMDAOCAUCSBRUUWWOKGEASIOZLHYGMATOMNKNNWRAGJSMKREL", "IUOESSYVINEWQCYOHHPGKLWKCOCYIOCSHPOACKNGAESQACKOGW", "EZIOFKNOGDHOOEBOTUYVUKAUGVUEERGBZFWOQKAFPSIYADFIAM", "QWWDEAICIGKOAWMEZDMAQVACYSPANSCZCIQYHQWPFMUOLAFQII", "LWMFENKAAIAQQUFUFUYOVAWOMIISXMYOMAYAKMQCISFMAEGASC", "PWVUDMAQAWGNPQQIGTAKGAYIKVAWCOZKGAUDYZDRJANCOCWAIA", "NBAWEQAESUYGXGOYTMKSYBAXEASCAOSUBQGACXOGAEYASGMAST", "TQKHIYGMIXIANAUAMDEUCWAPAQWIYTKEUAUCHEUGPHQAQEAOOY", "JMUIRMFPRIIMCJUFKIIABYXIIADPKUAULSPDAISGSTSAWSDISC", "ANAIJPEHYKVAADWGESNIIVOMQWFSXOJEEKKVYXQEMIAAOGIUAI", "MATQXCQGTKWDFYERSMGCMDQTKDETYENQGAWXTCYMEWECHAACHE", "MMWSNWKCAMNRLXGICXNWKYUMAIBAUMCCCAWQADAEEAMCFSSXMW", "CTSEGMKLAQMICAUUUAUWIMAEQUEXESJUEHFRDQSMIMIQAEGXAN", "NARYKGIAEIVAOXHASHYEWGAOGCUCCCNMGASOCIDWNIWMMHYQGY", "ESIKUVLJQOGALAOACUQIPSGGAUQWSCLHUIKAKPCKENMQEKOHNF", "SKZKGCNVAUSSCDRTIKEUBWQZUMQJPHGCEEQBYHAAEIXCKAAJBF", "QCKGSWIDCWAJAUFIRLOORAONXXBMEUEIYMLHKAAGGHPPCGCWLI", "PIPIQDDKLMACUCJQRBRJNIJAHSKAEMTXGCUGQYIAAUAPUSGKQF", "YBZWWOUIDANBJAOCIEIBYYUEWHQQIYACOONHHACIDKBCYADEHX", "AKESCRULGEIOIGQINTIESQYHCCSAEDCWIYWWFFFCGRAAQWKOAN", "MEAKOGEAQSKIAJRIUWYPWHGOPRDAWANAEAUNFMYWAIIAHICSAN", "QCKDIFHMGIWHAECSKIIJGAJQENBQKGAUKISGKAERZTOHRYYXIA", "KCAWKAMMUGZTYMCLIGGLBCAFJEUKGOARABYJMIGGGUAXMGSIHL", "AWDBSEAGAQZGPMJOPQAABAGHFTHINGJMWPEAMQAPPMAWOIIAUN", "AGDFNWPSAGSCKAANFKEAPCPICQJVABPESEZAKUAQDKZDQRAYOE", "YAAKVCMMGEALEAIECFPDYINDAGUSMRKUEICAQVDBHREGOGTOSC"};
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    vector<string> names = {"YGAQKRDIMBXUWCEGYQIGMGEDQCSNWWFAMUKCOAGWYRNAQKYEQQ", "PCPOPUASOKLMOFUOAKNJSWYQOPMGAMVUYWUPQSAVNGCMYEYMQY", "SSWSOGKEWMCSDYKSNEBMRDYLNQYHSYUAFHKYRKKMAMICITEOCE", "GXCAIIAUKIMEBDIMAWKSVUYCAOIUCIPOLEWUSMWULOSIQDYVWS", "YMDYTDAOEYZQPQSUQARTXMGEWNEPSGBSUAJYQYWAUUEKMWMSYS", "CSMGIYURSYMYGGIAIYZKAEYCNSEEYZSALYEYAGACVCOACRAGGY", "ZAIIUJWQMIYAOOUUPWUAMPQNZEETHBYSFKKENHASYQIOOSCIGS", "KMSGGWGKNACQWAPFIUFUPMEYQOCIWLWANDANDAJHKQYRWMELCZ", "BKUKSUADUEEQEICGNNLINCKZLYTYOAIFGTDWMOAGYWUIULGCKC", "UWWOTNNNAWGLYEGOLRILXGWYGOKMEVUMIGCJUASYUQAMAKXYKG", "DESKKDADWNRANUASWNOMOHBKMZKENJQAXKATUPWEOKVMEKEIHH", "MKPAVSINAAYLEOYTCAAWOAEQOOTXHWEYQMSASQUAANWXOCBOKE", "ICAAJLEKGGEKGKAIADNGOCLBMWUKGKNSQYYAVKWCVIZXMAAMYY", "IIUQIOAQCKAAPNCMEDULPALAWJEKAIUXUCMCWXVNMUBAYSCWMK", "CFAIASKDYQTEGRBAMACYQGYACKYEARLAUPOMAAPFWSYYSCMQUM", "LOEUFMUBVOYOZKURCMKKADDCGGEMBTYACYGRYGKIDZDUXOITUK", "HYGYQGWACINJXSAQZJCFXGVUYYYCXCYHNGIJWEIJNBWYEEWXGB", "NCUGACIIYVONSDPZNIGEMAYGCALYXSQCKGYACAICJIFOJQQDCQ", "WOHRBAYAQUJWAGFYEGALVQICEQUDKIWQWMVJDIHIGCAOKWYPUC", "QWOCMMMOGAUGARVASXAUNLAVDIDWQEQKKYOGMMDXGQWYXIGWAM", "GINOIARBQYAUIOYMGAAEESWZGYGAAIZCAIYXWYAWRMYAUOGNNA", "KWQURIDGNVSKMMYIKWSNYOMQCGMWRYOCMQLCSTWIMQEHMAUISG", "KFMCRMNVMWSUGMLYKZYSTURZCLIGCIAQKSLUWWALNIWSCKCAYH", "WQAZISQOWYWSAASAXSHGQKCOMXDUJKAYOSSSNQUXGMWOUANGYA", "KOATMWWAIMPCYKYESDBOEWGCUSIEMAUQOOWAAKOYGMKASSUMZK", "ACEOKKPWQFYUDAGSKVHICKWUTCKMKUYLQPYIUGPMJAQHWSQOAJ", "SUENBJIQOYUUAMGVSABASDNXEAGAKCHRQZGYWCRZMNJUWEQEAA", "FVFQMAKIYOEYACAMQASAMYBOXOMIIYUAJGJGFNGXZAWGWGQSNE", "GAUQDBVDNISROBKNRDCSNFKXMSIAIWQBTMMDKOWSKJGAQMYNWK", "ONAAVVQIAWXQQGOEAVOUPAVMAIBPWHAUHRAMQPAMNQBOICSXAS", "AYKALYSWAKUAGYSMDRTCRQCFAFYBYEMGMSAUNQKLNEWAKSFPLA", "GASAPEESGZPGYXAAWWEHQYIYDOOUGISMNEAQWCKNUWTCAQTVSA", "KIKUYBVAISUWKYYSVPKSEYNKKKBSAQCLEGZALITOOWASUQFBBG", "ZZUALGPAUUXPWESWYACAEWIEUQCGWAYKEIWCGPBCJWOFKOWMAM", "WSIIIAJGXNRZQACASCPNAUDXICWTRAHIRSSSIDTUJWAWRILRYU", "GSALOOJSAKMUNANRNMTOGTAMZDAGAQHDCVWSGEICAIMRNGFVES", "DDKQMAAQNTGKNDNTJYKYIZIQYOGOQFIEPIAGBULGXAYMDKDABQ", "EPPQDXYQYMGKSRCXANTNAXKXWUWOGYOCEQGCHRKNGAPCGCAYKJ", "LYTMOOKDJUMAXSGQSKSACEGGGTTXIPMRWYOUUCNBAFFBCIEWQV", "AXSGEIIUUZYNYACOZYFUUYYGMLKRWSCIZQIHXEIQSNLYOAKZIK", "WGEEYSQGSURCAOBIOLMSUYNQCKEZIKJZOQSGYMOZUYWBMKULAL", "POSEEMQMYSYQAUKDGMEGURYVMLWVOAMOWQAAIOEIVYGKPWOUUA", "DKGCLIOZAAULQLIEIEOCTLAGSIUKQKFKKGKUWGQEJCKECWAYOM", "MOAFASYBAKICUUACCUBUGVKKGKOGKKMSMWEUREEFIQESLISNQJ", "AMYUSDEOLHIJAGMEOIUAKNNMKMIWYLIPEXITQYASKAQZIYSEYF", "IUZISCBFWEYMOMSTEVMSEGGOILCACIAOAIWAMIUOYAIETFOCIA", "DYMIKCCICSOWMCEYCXUWYAEQMPMFWNYQMGETQQMANGSARECMBM", "NOWGASIAXWVTSQGQHAPUFVVNAVWCNOCIAWNERGTMIIKUAUGMNK", "KUOUAYMUKCICDEEAEBIWGNTOHOBVMAGXVEJOUAKVQYERYYANNN", "QOKSEPQSOOQCDSLSAODLIDPALGKANLWECNVUPVKAESFIKOAYGU"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"YMDYTDAOEYZQPQSUQARTXMGEWNEPSGBSUAJYQYWAUUEKMWMSYS", "AXSGEIIUUZYNYACOZYFUUYYGMLKRWSCIZQIHXEIQSNLYOAKZIK", "PCPOPUASOKLMOFUOAKNJSWYQOPMGAMVUYWUPQSAVNGCMYEYMQY", "WQAZISQOWYWSAASAXSHGQKCOMXDUJKAYOSSSNQUXGMWOUANGYA", "WGEEYSQGSURCAOBIOLMSUYNQCKEZIKJZOQSGYMOZUYWBMKULAL", "KWQURIDGNVSKMMYIKWSNYOMQCGMWRYOCMQLCSTWIMQEHMAUISG", "UWWOTNNNAWGLYEGOLRILXGWYGOKMEVUMIGCJUASYUQAMAKXYKG", "POSEEMQMYSYQAUKDGMEGURYVMLWVOAMOWQAAIOEIVYGKPWOUUA", "KFMCRMNVMWSUGMLYKZYSTURZCLIGCIAQKSLUWWALNIWSCKCAYH", "HYGYQGWACINJXSAQZJCFXGVUYYYCXCYHNGIJWEIJNBWYEEWXGB", "ZAIIUJWQMIYAOOUUPWUAMPQNZEETHBYSFKKENHASYQIOOSCIGS", "WSIIIAJGXNRZQACASCPNAUDXICWTRAHIRSSSIDTUJWAWRILRYU", "KIKUYBVAISUWKYYSVPKSEYNKKKBSAQCLEGZALITOOWASUQFBBG", "GXCAIIAUKIMEBDIMAWKSVUYCAOIUCIPOLEWUSMWULOSIQDYVWS", "NOWGASIAXWVTSQGQHAPUFVVNAVWCNOCIAWNERGTMIIKUAUGMNK", "QWOCMMMOGAUGARVASXAUNLAVDIDWQEQKKYOGMMDXGQWYXIGWAM", "ACEOKKPWQFYUDAGSKVHICKWUTCKMKUYLQPYIUGPMJAQHWSQOAJ", "GASAPEESGZPGYXAAWWEHQYIYDOOUGISMNEAQWCKNUWTCAQTVSA", "EPPQDXYQYMGKSRCXANTNAXKXWUWOGYOCEQGCHRKNGAPCGCAYKJ", "AMYUSDEOLHIJAGMEOIUAKNNMKMIWYLIPEXITQYASKAQZIYSEYF", "KOATMWWAIMPCYKYESDBOEWGCUSIEMAUQOOWAAKOYGMKASSUMZK", "LYTMOOKDJUMAXSGQSKSACEGGGTTXIPMRWYOUUCNBAFFBCIEWQV", "SSWSOGKEWMCSDYKSNEBMRDYLNQYHSYUAFHKYRKKMAMICITEOCE", "ZZUALGPAUUXPWESWYACAEWIEUQCGWAYKEIWCGPBCJWOFKOWMAM", "LOEUFMUBVOYOZKURCMKKADDCGGEMBTYACYGRYGKIDZDUXOITUK", "MKPAVSINAAYLEOYTCAAWOAEQOOTXHWEYQMSASQUAANWXOCBOKE", "GINOIARBQYAUIOYMGAAEESWZGYGAAIZCAIYXWYAWRMYAUOGNNA", "YGAQKRDIMBXUWCEGYQIGMGEDQCSNWWFAMUKCOAGWYRNAQKYEQQ", "GAUQDBVDNISROBKNRDCSNFKXMSIAIWQBTMMDKOWSKJGAQMYNWK", "CSMGIYURSYMYGGIAIYZKAEYCNSEEYZSALYEYAGACVCOACRAGGY", "KUOUAYMUKCICDEEAEBIWGNTOHOBVMAGXVEJOUAKVQYERYYANNN", "DYMIKCCICSOWMCEYCXUWYAEQMPMFWNYQMGETQQMANGSARECMBM", "SUENBJIQOYUUAMGVSABASDNXEAGAKCHRQZGYWCRZMNJUWEQEAA", "ONAAVVQIAWXQQGOEAVOUPAVMAIBPWHAUHRAMQPAMNQBOICSXAS", "FVFQMAKIYOEYACAMQASAMYBOXOMIIYUAJGJGFNGXZAWGWGQSNE", "WOHRBAYAQUJWAGFYEGALVQICEQUDKIWQWMVJDIHIGCAOKWYPUC", "KMSGGWGKNACQWAPFIUFUPMEYQOCIWLWANDANDAJHKQYRWMELCZ", "AYKALYSWAKUAGYSMDRTCRQCFAFYBYEMGMSAUNQKLNEWAKSFPLA", "BKUKSUADUEEQEICGNNLINCKZLYTYOAIFGTDWMOAGYWUIULGCKC", "QOKSEPQSOOQCDSLSAODLIDPALGKANLWECNVUPVKAESFIKOAYGU", "DESKKDADWNRANUASWNOMOHBKMZKENJQAXKATUPWEOKVMEKEIHH", "IIUQIOAQCKAAPNCMEDULPALAWJEKAIUXUCMCWXVNMUBAYSCWMK", "CFAIASKDYQTEGRBAMACYQGYACKYEARLAUPOMAAPFWSYYSCMQUM", "DDKQMAAQNTGKNDNTJYKYIZIQYOGOQFIEPIAGBULGXAYMDKDABQ", "ICAAJLEKGGEKGKAIADNGOCLBMWUKGKNSQYYAVKWCVIZXMAAMYY", "MOAFASYBAKICUUACCUBUGVKKGKOGKKMSMWEUREEFIQESLISNQJ", "GSALOOJSAKMUNANRNMTOGTAMZDAGAQHDCVWSGEICAIMRNGFVES", "NCUGACIIYVONSDPZNIGEMAYGCALYXSQCKGYACAICJIFOJQQDCQ", "IUZISCBFWEYMOMSTEVMSEGGOILCACIAOAIWAMIUOYAIETFOCIA", "DKGCLIOZAAULQLIEIEOCTLAGSIUKQKFKKGKUWGQEJCKECWAYOM"};
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    vector<string> names = {"HMARNCWTOAGICMEDQQWCAYMAAGCFNOLQXOYTAQWCWRQAQHAAQS", "CQWQANUGWHFMGOKPZSWANECZQCIQORAOCYWSASKCYSLCBEUBMC", "AAUKNDHUWBUSCRKICKBYPWOMSOAMIPIMSSBDIAZSOKVISKDASW", "MEIPHAAHAQNAIDLAIASUAFKWEXIQOMBPGKFKIKQVOQNCHGEOWS", "RQIKUUHUKCQQTMBLWIJHAFZDUJICASAKAUISTEAAIGVKOLEAXN", "YMYMEINAEIJMOAISMYVYJTIUDSNIRMAMSVIAOYBGZCOWCSEXYJ", "OUAOARVJNSHAWOCSFEAQAWUZCAFFNAPGVIHKTMYNAADQHMUAOS", "KEAPQWFMEINBQUISOCAOYAOIEUKUCPYJABOASTWYLSMSIANHSS", "ZBIVUXEDCSUYMWRRJKJCGUCDXMAPWEAXPCUUKEAWUGIANIVOVY", "JNQEEOUYVEBMCGLLMUBWMJAXEBWAVUYVEICESCCNKGCCWWKAQA", "SGOANCGYQESTPMWQWDANHMKEYCFYQTUAXVQWAIKAQFURFIUAUG", "ETIAYXHQPNQKAUQKASKFUOGHOHMQRWMSIALUATLPOGOWNHCYIS", "WUOQNWXYINZOWGYWAGAYZOONAPOMQWMEQSBSBPTGAAGKWIIHSO", "IPEXRQSATUKSIBXAGFAOKWVNUBYMGOUMAQEXIYOAOENZQYGYEK", "ZEHWZGYGETKAYHAUIKGMKCUWAECNUDGIWIMWENKMGISHSAIEMS", "FMZFWYLDJMACHUJEGSXEQKCAXONVKUREQGOOBQSCYOIXOQNQJU", "JTMAOYKUHKPIJVUMMAQIHAHOOOTMYTEJAQBXTGICIOAFCEACTI", "QKWZXCOGGLAELIQTWJAWWYMCSHBSMRYMJAEBISSIBGQYRWYINO", "EOUOSCZWFQSZVXIVGDYZNKONDGOSLXWEBMWHCUEGCAEGXWPCBK", "CAZYCMIEYADQCAXUJEUDGEMAAVMWBSZFMZTASIKUQMYPSVAEEA", "ECYTAABNAQQOMOSKGAFCDPKYTGRGWLHZIEHYROUKCCCSICTSCG", "IECUMMLRUVAUYGYEANSOSMYCIUSOYYSCEGAQQGGOQGMAKNYYOS", "QYLEKOXJEIIGAPKLUPQSIDAQXGAWIAQPAIIGLDQCKAWOZDZSXK", "WXEGCQUCGQSGAQAMGRQWGPYYPTAQXCUAGWTLXKUGGKUOOLWWKW", "YTWOWAYUIMUGMJUAZBBCHXXOLGZHATLAIPAAGEAFAADWLYBASE", "QMWAMDIETGAAMQVYSGNEVJNQKAAJQWJRJUSJNAWQAPETEWEAQQ", "GCQKKCYTEGSGNXOKKKAKOGYQTYQUKIEUCDWYFAWNUUPCQYACTW", "ASNIVOGCAGOGINFEOCCZCCAQWXWWLYYWRELSAAOWDKAAKKFHMJ", "EBIAQUIHMGFOCMOSOQAGUEYOLZAKTOYPIHNQJBWSTVAIQMEAXJ", "ZUAMCUBQYAAQPUSMWOGFWVJUYQUTJNSYAWQOAMECEKAUONMGWN", "SEWKKIKNUOZYAAMYAECIIKNGQIIRLRQWQGLMTEANHYUCFAEQMW", "NEMIHQWKAAAPUXSUORNNSHFAOKMCSUYSAXQKPGEJMEAENWEIAB", "ISFETASNNRUIIANTCFOWUANWYEWUSORAEAQMAYGIICAIQUSGRA", "CAUSAFGAUNGPOAAEJVDCEYAJYMQOGGACDBYYAJVIOYQYIXNEME", "KEKAKZCMBAASWRQKMLOUCBHIAEUAFOAULOKEKMSVCICWMLAMWQ", "TSAKMBGKQGSUKGRAGTOCABVAYIDCCYCDUNYAYCAYAKDQLAQXIW", "ZCNBWDKHQAEGAKMAYYVAMAGUJOIAOEAGFBNWUSKXYVAUCKKOUS", "HSWJOAKACACCESKNKMPKSLAUYBXAMGQYFCHQYIMKUHACAVMBNV", "EVMOIGULSUFNSQAOARMUWYMMZYOCMMNACEJEVIWTTSDCZYIRGO", "MKDKDPSKAQEYLAUOKXDUYOOOCIZMXQNYQOHSCJQJEBCSOFJBEA", "YCZIAWSOXNCAEVKUCEMCACQUIOCIGDDPSBMNCCMNGSSUIIMBZU", "BYRDGGICULOTTDOAHOGJNQUFRAVIOQHQYAUUWOQGAAEMBMKYOY", "OEAWAIPIFOPNSWYJCIGWYGZASGKGGNGNMEMCAVXZMSWUMALKGG", "KWSRMQWNEADWAMKICVQMMAYCCREGWOAGKSEOQEIYKAYDTYAZQO", "QREVMIIMHMHOGMCSWGIQYSOYUSJKNFQUQEMNEGAJLQAAWNHMFA", "VSEUUCCUSUDYQAMMKACEMKYGACAYSNUXDSGHARXUAFGVINTCUY", "NNNKHEQGHORNIQWQXWOSIYISBWUAYCIASZIUVWKQFOUPAIUAAG", "GWICUAGIAKXQWMNUJYOAAAMCAAQAMKZAEOYQTIYVYWIOCRSVUB", "YEBZNONMHAXSCWADEWBZGILGQGACXIEMWGNQPISCEYGFLUEIBG", "MAGIOIKSIEAGAKRAAVVYNAQAYMCKAGDAEYESGOYWCIHNCAVAKL"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"WUOQNWXYINZOWGYWAGAYZOONAPOMQWMEQSBSBPTGAAGKWIIHSO", "WXEGCQUCGQSGAQAMGRQWGPYYPTAQXCUAGWTLXKUGGKUOOLWWKW", "ZUAMCUBQYAAQPUSMWOGFWVJUYQUTJNSYAWQOAMECEKAUONMGWN", "EVMOIGULSUFNSQAOARMUWYMMZYOCMMNACEJEVIWTTSDCZYIRGO", "IECUMMLRUVAUYGYEANSOSMYCIUSOYYSCEGAQQGGOQGMAKNYYOS", "NNNKHEQGHORNIQWQXWOSIYISBWUAYCIASZIUVWKQFOUPAIUAAG", "IPEXRQSATUKSIBXAGFAOKWVNUBYMGOUMAQEXIYOAOENZQYGYEK", "QKWZXCOGGLAELIQTWJAWWYMCSHBSMRYMJAEBISSIBGQYRWYINO", "GCQKKCYTEGSGNXOKKKAKOGYQTYQUKIEUCDWYFAWNUUPCQYACTW", "YMYMEINAEIJMOAISMYVYJTIUDSNIRMAMSVIAOYBGZCOWCSEXYJ", "ZBIVUXEDCSUYMWRRJKJCGUCDXMAPWEAXPCUUKEAWUGIANIVOVY", "EOUOSCZWFQSZVXIVGDYZNKONDGOSLXWEBMWHCUEGCAEGXWPCBK", "FMZFWYLDJMACHUJEGSXEQKCAXONVKUREQGOOBQSCYOIXOQNQJU", "ETIAYXHQPNQKAUQKASKFUOGHOHMQRWMSIALUATLPOGOWNHCYIS", "SGOANCGYQESTPMWQWDANHMKEYCFYQTUAXVQWAIKAQFURFIUAUG", "VSEUUCCUSUDYQAMMKACEMKYGACAYSNUXDSGHARXUAFGVINTCUY", "GWICUAGIAKXQWMNUJYOAAAMCAAQAMKZAEOYQTIYVYWIOCRSVUB", "KWSRMQWNEADWAMKICVQMMAYCCREGWOAGKSEOQEIYKAYDTYAZQO", "BYRDGGICULOTTDOAHOGJNQUFRAVIOQHQYAUUWOQGAAEMBMKYOY", "OEAWAIPIFOPNSWYJCIGWYGZASGKGGNGNMEMCAVXZMSWUMALKGG", "AAUKNDHUWBUSCRKICKBYPWOMSOAMIPIMSSBDIAZSOKVISKDASW", "CQWQANUGWHFMGOKPZSWANECZQCIQORAOCYWSASKCYSLCBEUBMC", "KEAPQWFMEINBQUISOCAOYAOIEUKUCPYJABOASTWYLSMSIANHSS", "SEWKKIKNUOZYAAMYAECIIKNGQIIRLRQWQGLMTEANHYUCFAEQMW", "EBIAQUIHMGFOCMOSOQAGUEYOLZAKTOYPIHNQJBWSTVAIQMEAXJ", "QREVMIIMHMHOGMCSWGIQYSOYUSJKNFQUQEMNEGAJLQAAWNHMFA", "ISFETASNNRUIIANTCFOWUANWYEWUSORAEAQMAYGIICAIQUSGRA", "QMWAMDIETGAAMQVYSGNEVJNQKAAJQWJRJUSJNAWQAPETEWEAQQ", "MKDKDPSKAQEYLAUOKXDUYOOOCIZMXQNYQOHSCJQJEBCSOFJBEA", "QYLEKOXJEIIGAPKLUPQSIDAQXGAWIAQPAIIGLDQCKAWOZDZSXK", "CAZYCMIEYADQCAXUJEUDGEMAAVMWBSZFMZTASIKUQMYPSVAEEA", "ZEHWZGYGETKAYHAUIKGMKCUWAECNUDGIWIMWENKMGISHSAIEMS", "NEMIHQWKAAAPUXSUORNNSHFAOKMCSUYSAXQKPGEJMEAENWEIAB", "ZCNBWDKHQAEGAKMAYYVAMAGUJOIAOEAGFBNWUSKXYVAUCKKOUS", "HMARNCWTOAGICMEDQQWCAYMAAGCFNOLQXOYTAQWCWRQAQHAAQS", "YCZIAWSOXNCAEVKUCEMCACQUIOCIGDDPSBMNCCMNGSSUIIMBZU", "OUAOARVJNSHAWOCSFEAQAWUZCAFFNAPGVIHKTMYNAADQHMUAOS", "RQIKUUHUKCQQTMBLWIJHAFZDUJICASAKAUISTEAAIGVKOLEAXN", "YTWOWAYUIMUGMJUAZBBCHXXOLGZHATLAIPAAGEAFAADWLYBASE", "JNQEEOUYVEBMCGLLMUBWMJAXEBWAVUYVEICESCCNKGCCWWKAQA", "JTMAOYKUHKPIJVUMMAQIHAHOOOTMYTEJAQBXTGICIOAFCEACTI", "ECYTAABNAQQOMOSKGAFCDPKYTGRGWLHZIEHYROUKCCCSICTSCG", "YEBZNONMHAXSCWADEWBZGILGQGACXIEMWGNQPISCEYGFLUEIBG", "ASNIVOGCAGOGINFEOCCZCCAQWXWWLYYWRELSAAOWDKAAKKFHMJ", "TSAKMBGKQGSUKGRAGTOCABVAYIDCCYCDUNYAYCAYAKDQLAQXIW", "HSWJOAKACACCESKNKMPKSLAUYBXAMGQYFCHQYIMKUHACAVMBNV", "CAUSAFGAUNGPOAAEJVDCEYAJYMQOGGACDBYYAJVIOYQYIXNEME", "KEKAKZCMBAASWRQKMLOUCBHIAEUAFOAULOKEKMSVCICWMLAMWQ", "MEIPHAAHAQNAIDLAIASUAFKWEXIQOMBPGKFKIKQVOQNCHGEOWS", "MAGIOIKSIEAGAKRAAVVYNAQAYMCKAGDAEYESGOYWCIHNCAVAKL"};
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    vector<string> names = {"WFFOFANXGPFCAYNVAZNGQESQEUBKNSAVAPUEDAAPMZEQWYWHGK", "MNEWXCOQWEIENNYMPALALOOQYCCCIAUTUYIHZWUUQYYAKTWYZA", "QFYWKGJMSKSNSOIAAFWVAJFATROQMCBSWFQQPAAKKMMGBOGXMS", "NAGSRQUCKKGLGUUEBRDFCVSSIOEEAEMMXLKOWUQLAEQAAAKIWO", "CJZSSUHMUEZESSUKFAAKZAOKMCLQHFMUGIDAFSCDYKWGSGTIYL", "AGLDCGIKOIQJOITVBTGUZQXVQNWGCBACIIUWUZUCHSDWOENXCA", "NSECFHCQDPLOYMKOSNWKCONKKQOSFUSESQCMGUEYQAUDEAWESK", "DECCAEQMIOQSPYOEKDUOAIWPJIOOCMQMTKQGKEJMXSAAAWOWWD", "EIAWWNCDLPWJSOMMYDGUSGCNIRGEIBAGNWWSTQXGBJYGCIUIAZ", "BUQCYLAFROUCBCOWCVGEQNYMEKCCKAKNCOLESAOUXRKYIGMMCN", "CAUEMEEDOSUTGAAQOPAMELDUWGCAOMASMBICNALNYQQKXIWHYY", "MNCEIQOGSSGOAGHQQEYKXXKKNAQQWMKAVITGSWAUMNYGKZXAOQ", "KCYGACMTFMOVAGAQKQVCSTMUNYWAQGCIYNKWTPAYWKEIAGYHKS", "KNXOYFNUSAJPLNIUQGSNAMWKUCNEOOKCQSSYIQAQXOYQOACCKG", "USKWUCIIYITAAFJEOTKAVVWUACUEGENXRAOAAMAWMVPAEEDUXA", "AWQKYAAQUNCDIYMRPACVEMGOWGEZNQZERUUYWASAQNISKMBOIJ", "OIURYKUVAAIGBSYADAKCQHKXPYMIXGKGWRWMEWMYEYOMMROZSU", "XAZANEEGJVYJWXCSDSDQGDUOLUEMCUWRAYPJMAJAOAWRMYAAAW", "ICKYHUWADCSDGBXMLKTCYLAJGDINGYNAHNAFWUEKXGJHSCRYUK", "XSQOMANEYIYKEOVMAGOBBKMINSAQIQGIMKYIAKNYKAMEKEGOAJ", "XMWKWSQQSOYKBQSEEWMOZKCAAPWAKEDMCNXACSHQAPAVYCEEQO", "WZWCZASXOCSANASYAJULZVMVXAOGVSVWXKUCAGIUGEAVYKMEWW", "RZIHDNRNEKHMRGGMAYESMCYGCWCATAYMFEUATIPINWIKVFQNMA", "IQOMANWCRAJOICAYAATKMPYUASCGYCQITCGOVHGCQDGEGQMCOJ", "KQIFXVGSMADPNCJXEAGCWZATVLEYHDPMFUEYDCWJOIFBEIAEAI", "EBYGYDAGILYJEYAGIMJNMYFLMWUMDEWCZGVAMCIRYGIAEOARMC", "HCQWSBBQBKAQQKKWTOKERCYQKYLRUVSYPMWGAOASVOMAMYKONI", "JAPYAKYOGMCEMDQDIFKKABYTUSYOAAUDGNQIMGAIUSQQZYQUAL", "QEZKLECSCAYQEYUPSGYAINKGIAWAWMICFJUEUCGUAHODGYQIPW", "WAJYNVGSOOGVUDOEUSEAASORGAEXGFAHIQGVGGSEIPKDHIQUWM", "TAPHAZLTPAMAUSGOCSWKGCTEAEWUPQOCCKUAKMSQWQOAEJCGMF", "NIGWWEYYJBOAAAHAJMQMEWZZYNGKWQQQAIWWQGCKCSSAMABNLM", "CXZEATSMKKMAJRKANAIGYKGGKQUSCYZKOEOMSAGDUUIIRCMAJC", "YTEESWGLQWMEVRAUAWRKXJACYWMMAWIYYUSYINYIFUMMAXMAKA", "ACOAAWAKLUVIRIIAMQMASSIWTNEIEQYKSYXSWTMAQAZOWFPOAY", "OFQOAWNHGUOWXQYYUPKASWFUAKICQSZEOKMRYJHEQCOPOUWHRK", "NJWWABTOUMPKFKSYYVXNWRSVMMNGGQEAWYQVTLBAYQSVAGSMAI", "WVKEMMSHKAQTOUPIOWGGIDYKWIQEUWOKYUEWYQUIEAGOCAQGSA", "KUQMKTIMPWSASONKWMMYMUMNEXYEDECYIHOJRRQLWXIASXYREW", "AMYMHANUFMAAYUQQYGWAAMMHOQIWACWAQUGEAWGUPWNZAHAOBO", "GFNZNFOOCOEAWAKGWAKIAIVROMANELOCIIKQCWITAKJIUOGQEO", "EFAAYAANYSOYAEGVONPNDXBOSQZOAEQHCSWEWOQUGNIYXAAPYQ", "CUQBWUCWVNTAMQUDMOCNACABMECBDLWIYHAIHMADQMUEASNIJU", "OQNUGAYNMKWQAUSSLEEJAAXZTGIKSLEZYSUKWKGZQHSEAGWGEU", "UCLAIAIASAOIBJOQKWOQUIREHGYAQUKGBQEIAVGCKGSSNGYUUB", "AUKIEYKOMFAZVAEOCNBOGZAVUYAUCENAKFHYKWSXSLWULCFJUY", "AAICCSYRYBUHELEMHYRKDDMUYGZALZGLBNEAVWOOOKJGUWUYNM", "WAELWRWLWMOWYGKNINOYOMOANEKGNNMEIKGUAOQYOAMANOAGIN", "BAJSIAYFYGUQSCKACEAQSRRAUGAGKCWKUITZUYLYXMYCTIGQXW", "MESZAESJAJWWIKUBPNQOGYVSYAMXIIEEBEMGAUZITJZSPGULKA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"KUQMKTIMPWSASONKWMMYMUMNEXYEDECYIHOJRRQLWXIASXYREW", "WZWCZASXOCSANASYAJULZVMVXAOGVSVWXKUCAGIUGEAVYKMEWW", "NJWWABTOUMPKFKSYYVXNWRSVMMNGGQEAWYQVTLBAYQSVAGSMAI", "MNEWXCOQWEIENNYMPALALOOQYCCCIAUTUYIHZWUUQYYAKTWYZA", "OFQOAWNHGUOWXQYYUPKASWFUAKICQSZEOKMRYJHEQCOPOUWHRK", "OIURYKUVAAIGBSYADAKCQHKXPYMIXGKGWRWMEWMYEYOMMROZSU", "YTEESWGLQWMEVRAUAWRKXJACYWMMAWIYYUSYINYIFUMMAXMAKA", "OQNUGAYNMKWQAUSSLEEJAAXZTGIKSLEZYSUKWKGZQHSEAGWGEU", "HCQWSBBQBKAQQKKWTOKERCYQKYLRUVSYPMWGAOASVOMAMYKONI", "MNCEIQOGSSGOAGHQQEYKXXKKNAQQWMKAVITGSWAUMNYGKZXAOQ", "WVKEMMSHKAQTOUPIOWGGIDYKWIQEUWOKYUEWYQUIEAGOCAQGSA", "KNXOYFNUSAJPLNIUQGSNAMWKUCNEOOKCQSSYIQAQXOYQOACCKG", "BAJSIAYFYGUQSCKACEAQSRRAUGAGKCWKUITZUYLYXMYCTIGQXW", "ACOAAWAKLUVIRIIAMQMASSIWTNEIEQYKSYXSWTMAQAZOWFPOAY", "AWQKYAAQUNCDIYMRPACVEMGOWGEZNQZERUUYWASAQNISKMBOIJ", "MESZAESJAJWWIKUBPNQOGYVSYAMXIIEEBEMGAUZITJZSPGULKA", "EFAAYAANYSOYAEGVONPNDXBOSQZOAEQHCSWEWOQUGNIYXAAPYQ", "AAICCSYRYBUHELEMHYRKDDMUYGZALZGLBNEAVWOOOKJGUWUYNM", "AUKIEYKOMFAZVAEOCNBOGZAVUYAUCENAKFHYKWSXSLWULCFJUY", "KCYGACMTFMOVAGAQKQVCSTMUNYWAQGCIYNKWTPAYWKEIAGYHKS", "WAELWRWLWMOWYGKNINOYOMOANEKGNNMEIKGUAOQYOAMANOAGIN", "XMWKWSQQSOYKBQSEEWMOZKCAAPWAKEDMCNXACSHQAPAVYCEEQO", "AGLDCGIKOIQJOITVBTGUZQXVQNWGCBACIIUWUZUCHSDWOENXCA", "NSECFHCQDPLOYMKOSNWKCONKKQOSFUSESQCMGUEYQAUDEAWESK", "NIGWWEYYJBOAAAHAJMQMEWZZYNGKWQQQAIWWQGCKCSSAMABNLM", "XAZANEEGJVYJWXCSDSDQGDUOLUEMCUWRAYPJMAJAOAWRMYAAAW", "CJZSSUHMUEZESSUKFAAKZAOKMCLQHFMUGIDAFSCDYKWGSGTIYL", "EIAWWNCDLPWJSOMMYDGUSGCNIRGEIBAGNWWSTQXGBJYGCIUIAZ", "JAPYAKYOGMCEMDQDIFKKABYTUSYOAAUDGNQIMGAIUSQQZYQUAL", "WFFOFANXGPFCAYNVAZNGQESQEUBKNSAVAPUEDAAPMZEQWYWHGK", "QFYWKGJMSKSNSOIAAFWVAJFATROQMCBSWFQQPAAKKMMGBOGXMS", "WAJYNVGSOOGVUDOEUSEAASORGAEXGFAHIQGVGGSEIPKDHIQUWM", "QEZKLECSCAYQEYUPSGYAINKGIAWAWMICFJUEUCGUAHODGYQIPW", "AMYMHANUFMAAYUQQYGWAAMMHOQIWACWAQUGEAWGUPWNZAHAOBO", "RZIHDNRNEKHMRGGMAYESMCYGCWCATAYMFEUATIPINWIKVFQNMA", "DECCAEQMIOQSPYOEKDUOAIWPJIOOCMQMTKQGKEJMXSAAAWOWWD", "USKWUCIIYITAAFJEOTKAVVWUACUEGENXRAOAAMAWMVPAEEDUXA", "CXZEATSMKKMAJRKANAIGYKGGKQUSCYZKOEOMSAGDUUIIRCMAJC", "ICKYHUWADCSDGBXMLKTCYLAJGDINGYNAHNAFWUEKXGJHSCRYUK", "TAPHAZLTPAMAUSGOCSWKGCTEAEWUPQOCCKUAKMSQWQOAEJCGMF", "BUQCYLAFROUCBCOWCVGEQNYMEKCCKAKNCOLESAOUXRKYIGMMCN", "CAUEMEEDOSUTGAAQOPAMELDUWGCAOMASMBICNALNYQQKXIWHYY", "XSQOMANEYIYKEOVMAGOBBKMINSAQIQGIMKYIAKNYKAMEKEGOAJ", "EBYGYDAGILYJEYAGIMJNMYFLMWUMDEWCZGVAMCIRYGIAEOARMC", "NAGSRQUCKKGLGUUEBRDFCVSSIOEEAEMMXLKOWUQLAEQAAAKIWO", "UCLAIAIASAOIBJOQKWOQUIREHGYAQUKGBQEIAVGCKGSSNGYUUB", "GFNZNFOOCOEAWAKGWAKIAIVROMANELOCIIKQCWITAKJIUOGQEO", "IQOMANWCRAJOICAYAATKMPYUASCGYCQITCGOVHGCQDGEGQMCOJ", "KQIFXVGSMADPNCJXEAGCWZATVLEYHDPMFUEYDCWJOIFBEIAEAI", "CUQBWUCWVNTAMQUDMOCNACABMECBDLWIYHAIHMADQMUEASNIJU"};
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    vector<string> names = {"OMQWAIGYKSWRMREYYVLQMZOZEIGQGSVAESAKASKKPBUTYBGYSD", "AWLMMNKUOUEGGOCFASMAEKAXNECNWBWPQMEOWQKAQDWHAMFEUA", "LQJAGNEUEKSAMGSAARJACYOENOMAPNLCSCTEOAQQIOQYAGCWIU", "AOUUOPKAROCAAKAIDBXGAEHGQQOSOYSVWCOFYNKQSWZUQAGAGK", "YNQZOLGWCATWBHMZVGFOUSAAODQIHAAWIASYETHWQIEIJAUOUA", "IAREIYAGNGOAFDFSDASAAPGWBAWWYWNVAUNMSCCKTQYIAVUJCG", "INQCKMMCZYQASXQZMZUNYIYASZQOINNATWKYNXAQBBYQQEWRRA", "SNWGANQSZKATSGIUKLUEGSJACOYYNNGOAUEDYMIKEOOMKIQDUS", "GMIAOAYWASVURAKFRBNEENOEKMGAOENIIYQJGGOTSYEQTJYPAG", "WFCQGTKBCQXOURIENMOIASLATOIYGSZDYGMQEXEEIFSGSGEAOA", "AYGMWZUQGAMIWSAEKKMEEUIUILSFZGXAESKRDEDGOCICKUYAIM", "WKCNPZBSVMCYIHECEYOCYUWPOPAUMENUSZIZGQHATIBQCWFEDE", "ECUWANMINESOONAVZBYZFOUQWIAKILCWTGGVEQSDEIHAKMAHIY", "NAQSIAARQCJGEMSAOUSXQAGTKALAAOVMATYFGROKCNQFOCOEGK", "ELQTOOAYOZKCKBAMDWBHCOBYAORFVTQSCEMMOMAMOKAEDMTOCC", "URSNWKGGFCLAJVOAHEIQNTJSUASUYIWAAAHUXUTCUCETLMUUIS", "JAXZZMKCQNKQXKGYCWANIAIJKQRAIISIHAUMKWKWHFEMZGWKAY", "WUGIMHONEAGJGOGUKNCUAWSVKAZJXQMFWAICYMAGMKZOUEKKWQ", "SUOQICWIGUJXEBCAIGJKIICAVHQWFAZFWOUUFAKQCNUQNQQTDM", "MAACAGUOLEIIKCOYQAFRAIGRDYYNJCBIDEMYETWKPGOGGAPMSF", "OQLQOEACYMYSUXQWYNSYQVFUKIAEWSCKOAQPYEFGEKJANERSGY", "WFAMAEOASCWYXEMTMWYAPYEVGZAXYUYGCCEAUKGHSKSLRDGNND", "WOHHEXWNGIDUYAYAFANXGNVGHBCYCNQTAUMOAAAYNAYEWLAQEV", "WYOEMIYMQPKAAREEEHKOSLJOWAOSWATWQVQKKGHXSQUUUGAWYA", "BXUFAMUDYYGMQFUAWMUOMIYGIXESSAAULOFKYOCAYNZPZSKEEA", "QUEANWLUQVEUASASAAKAOOGIEUANEMAATRMAWIAKNKUVNQMALS", "EANUAEQAHXAUMPJLOUVGGVATCDSSDKQTMOBKESCMOHQJINALQC", "AOQTBNKLUXYQWNJOBASHSOKACLZTWEOFAWSUIUIUAWEUYGGSKI", "YAJOOYEAAIMBLCMKVUGAQWNAHAIFDWVDGADISQRQWCXOQUUEPA", "SAUQOQQUUNACASKIQSXIFNTTCADQYDKNIHYWEYQMXQOCMSTUVO", "IAFMBMCCTKWCFSAEMJNGMKUAUXRQGNMYGATECNKUSSRBAMWGAI", "UJOPRGBRMUZFSUYYXUKXMESYAKXATSQHGQHKOQMNITWDMINICA", "UWOCMEXORSGKSYAOUPUXKOEPAOYGAITSYOLLXUWAUKDYYYIFCI", "GIOSWEXCGKEOACVECKKIRSAQNMQBPUKFYDQNDEQCEWYAMOFAGA", "MTIVAAWSOARQVAYCNAAQNCEFUMIYSCMGCAVAKWQAUWMLWHJWHC", "QGBXIUICTJMAQQQMVEKKPYCSICDCAGUEYFXUZQECKSODBKQEYY", "EUMEYICFIABIZMRALANQXAAZJCFRWADLKWEYLAKMOSCGAOEIHI", "PAQGBUISODGGYCIAUWUYASQQCNSDOIQMOFUQYWXYACMXOGASWR", "RYIASDMYJNEVNUOWENDODHGAAQMAQIOAOQQKOASNDAKASNWNEE", "UGKQPMMNECWMOHGRQLPSKYRQPXAWYJSGKMYASNIYAVNACQECEA", "NEFAALAMQKSWVJASCLKNSQSWVKVAYMSWPBUQQCKSNEWKJZSAAO", "MAHSLDGACACUIAUMPWEAYIGXUCNZNCAEAQRQCEAAMSBEIYOWKU", "EWAKADEVUSBCEAWWBQKEHAZWOKEAAASHUDAMSOJPBAWOIUVPKJ", "LDVQEWGBAIFSALJMHNLUMHKGOAEQMMWKJHOOUCEOUZHVAVVMAJ", "QOOKCANGVAGKNSVDUOUDWVCUIJMKGAMQMQAOPIOQCYEAYICKWG", "MAQLHATGVYQACYKUTUYPSYSBSUQCQRCAYQACLQYKEHYUIFZEAS", "EACYLQLMCGXEMJHTAYCAYFNEQSAGQQIYMYHOUWNOOYCKPWEEMI", "NMVDWOOWIFWOIKQSEUOUUROGAUAANOSQXJGZYMOYWLTYGCWYCC", "KAWALGEGQSMGMUFWRAMHODQWGAANKGCPYYASKKIESDTAPOAZFW", "GIKOOKPLZWKWYAUZTYNBGYRWEYJMOQEEYCJNWGMEAOKMQMUNUU"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"INQCKMMCZYQASXQZMZUNYIYASZQOINNATWKYNXAQBBYQQEWRRA", "NMVDWOOWIFWOIKQSEUOUUROGAUAANOSQXJGZYMOYWLTYGCWYCC", "UWOCMEXORSGKSYAOUPUXKOEPAOYGAITSYOLLXUWAUKDYYYIFCI", "GIKOOKPLZWKWYAUZTYNBGYRWEYJMOQEEYCJNWGMEAOKMQMUNUU", "UJOPRGBRMUZFSUYYXUKXMESYAKXATSQHGQHKOQMNITWDMINICA", "SAUQOQQUUNACASKIQSXIFNTTCADQYDKNIHYWEYQMXQOCMSTUVO", "OMQWAIGYKSWRMREYYVLQMZOZEIGQGSVAESAKASKKPBUTYBGYSD", "WYOEMIYMQPKAAREEEHKOSLJOWAOSWATWQVQKKGHXSQUUUGAWYA", "OQLQOEACYMYSUXQWYNSYQVFUKIAEWSCKOAQPYEFGEKJANERSGY", "MAQLHATGVYQACYKUTUYPSYSBSUQCQRCAYQACLQYKEHYUIFZEAS", "PAQGBUISODGGYCIAUWUYASQQCNSDOIQMOFUQYWXYACMXOGASWR", "AOQTBNKLUXYQWNJOBASHSOKACLZTWEOFAWSUIUIUAWEUYGGSKI", "BXUFAMUDYYGMQFUAWMUOMIYGIXESSAAULOFKYOCAYNZPZSKEEA", "NEFAALAMQKSWVJASCLKNSQSWVKVAYMSWPBUQQCKSNEWKJZSAAO", "URSNWKGGFCLAJVOAHEIQNTJSUASUYIWAAAHUXUTCUCETLMUUIS", "UGKQPMMNECWMOHGRQLPSKYRQPXAWYJSGKMYASNIYAVNACQECEA", "SNWGANQSZKATSGIUKLUEGSJACOYYNNGOAUEDYMIKEOOMKIQDUS", "WKCNPZBSVMCYIHECEYOCYUWPOPAUMENUSZIZGQHATIBQCWFEDE", "WFAMAEOASCWYXEMTMWYAPYEVGZAXYUYGCCEAUKGHSKSLRDGNND", "WUGIMHONEAGJGOGUKNCUAWSVKAZJXQMFWAICYMAGMKZOUEKKWQ", "JAXZZMKCQNKQXKGYCWANIAIJKQRAIISIHAUMKWKWHFEMZGWKAY", "EACYLQLMCGXEMJHTAYCAYFNEQSAGQQIYMYHOUWNOOYCKPWEEMI", "QGBXIUICTJMAQQQMVEKKPYCSICDCAGUEYFXUZQECKSODBKQEYY", "YNQZOLGWCATWBHMZVGFOUSAAODQIHAAWIASYETHWQIEIJAUOUA", "AOUUOPKAROCAAKAIDBXGAEHGQQOSOYSVWCOFYNKQSWZUQAGAGK", "ECUWANMINESOONAVZBYZFOUQWIAKILCWTGGVEQSDEIHAKMAHIY", "SUOQICWIGUJXEBCAIGJKIICAVHQWFAZFWOUUFAKQCNUQNQQTDM", "QOOKCANGVAGKNSVDUOUDWVCUIJMKGAMQMQAOPIOQCYEAYICKWG", "MTIVAAWSOARQVAYCNAAQNCEFUMIYSCMGCAVAKWQAUWMLWHJWHC", "WOHHEXWNGIDUYAYAFANXGNVGHBCYCNQTAUMOAAAYNAYEWLAQEV", "GMIAOAYWASVURAKFRBNEENOEKMGAOENIIYQJGGOTSYEQTJYPAG", "WFCQGTKBCQXOURIENMOIASLATOIYGSZDYGMQEXEEIFSGSGEAOA", "AYGMWZUQGAMIWSAEKKMEEUIUILSFZGXAESKRDEDGOCICKUYAIM", "LDVQEWGBAIFSALJMHNLUMHKGOAEQMMWKJHOOUCEOUZHVAVVMAJ", "KAWALGEGQSMGMUFWRAMHODQWGAANKGCPYYASKKIESDTAPOAZFW", "YAJOOYEAAIMBLCMKVUGAQWNAHAIFDWVDGADISQRQWCXOQUUEPA", "QUEANWLUQVEUASASAAKAOOGIEUANEMAATRMAWIAKNKUVNQMALS", "RYIASDMYJNEVNUOWENDODHGAAQMAQIOAOQQKOASNDAKASNWNEE", "IAREIYAGNGOAFDFSDASAAPGWBAWWYWNVAUNMSCCKTQYIAVUJCG", "EANUAEQAHXAUMPJLOUVGGVATCDSSDKQTMOBKESCMOHQJINALQC", "AWLMMNKUOUEGGOCFASMAEKAXNECNWBWPQMEOWQKAQDWHAMFEUA", "IAFMBMCCTKWCFSAEMJNGMKUAUXRQGNMYGATECNKUSSRBAMWGAI", "ELQTOOAYOZKCKBAMDWBHCOBYAORFVTQSCEMMOMAMOKAEDMTOCC", "LQJAGNEUEKSAMGSAARJACYOENOMAPNLCSCTEOAQQIOQYAGCWIU", "NAQSIAARQCJGEMSAOUSXQAGTKALAAOVMATYFGROKCNQFOCOEGK", "EWAKADEVUSBCEAWWBQKEHAZWOKEAAASHUDAMSOJPBAWOIUVPKJ", "GIOSWEXCGKEOACVECKKIRSAQNMQBPUKFYDQNDEQCEWYAMOFAGA", "MAHSLDGACACUIAUMPWEAYIGXUCNZNCAEAQRQCEAAMSBEIYOWKU", "MAACAGUOLEIIKCOYQAFRAIGRDYYNJCBIDEMYETWKPGOGGAPMSF", "EUMEYICFIABIZMRALANQXAAZJCFRWADLKWEYLAKMOSCGAOEIHI"};
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    vector<string> names = {"LYQZFCEOLKAEGEOIONDIAEFSAMAVGPMAOIJSKIOABURUDFAISS", "UZSAZEMWUAGKNASQNKUYEGMEAUUKWAFUQUBSNNOSJUAWIZMXGK", "IMNASQANQUPYEIOLEAEWCKSAXLCARWYQIRCKBQWENDMKTGTRCU", "KWAIGGKUQKZZUEGVXKQGAOWCFJAMHYANSUUKAQMDSRZFOKAGUC", "YODKUPMMKRCMYCQZQFERMOILAAKEBKAGTZYYYOYUYSDONNHUCF", "AUNQNUCICXCOEAVGCVFODQKMNASWMAPMQZIKCGWCSVNGIOOAGL", "WAAWOYOUVCBUPAYGJKQACJOJYUASOYNKIEUMMQEAYQASINUKSM", "GAHZGAANKWAOYAAXNUEZAEEEONJIWOJMANTODAEMMMWJJWIGAA", "WINMMEPZAWJOSPKSNOZEWWQCKIOBLOAACTSOZKIEAOUMJWKMIL", "KCCGHNCXEMCQKJJKCQWAGXXOKHYAEXKERKBHWPSQUAULOEOVWF", "OAWUWKJATCKKLCWGQQUPYICQGUJEJKXIGYMDYVOHYYYWYKKQUA", "WSSDYAUKCXSKSUAEANKUSQFQJKHPYEKUBSMEVKGKOBWELVSEWZ", "NIUUIQQPLKADAEANJTZNAMKSSAUMWMAQILZGNYWSQKSGUVWMGU", "DYLQBOUJTCABAOAKBKCIBKKYWYUWBSZKIMOEQEWNAIIENKFAYS", "JGSAADIHQMDMZCWABEWYKPLGQQYQQWRNGECYIGWNCIOGYZNUZY", "QJWCWQKAAAMAWGHABUIUIKUQMEQAPFIMSKWWTFMPWBQSKXOQPP", "EIKACAYUCKOPQAJDJIEXAUEAESXGTVWPIVIAANQABAEKQVKWGA", "XLABAUAIVIAYSXEWVWEAJKYSIWYCCYAYAEXMLQEMAZEOLMPGPU", "AGAUJMOYUUNAKMFPNREPNAYMUQSNJSONARRAGVJVRZIARIEKNI", "NSYQRCTIPQHKGETEYOZCMEEEATNANGOEZAOKUJGEBBUYDLEKAI", "GEQIUABSACISAAHDUAWLKPMHQUNTQEFNPLICCNLNHFTKYXSOQA", "WXYAQUAIKAILYNIHCKAHIWAAUJBGCGAAOWTAAGQWASASSEYFKM", "IOALCGJWKWQYARQGIAPUHJOMJGAFYUMVJYWKBCSFSGMKWEMNOI", "WWAEMIISXOGIIKSOMAUBBFOJAAGSWUAYGPRXCZJAMXAMAAEGAS", "MGCIAJQTSMICNSUIIAGELGQEYGEYRYQTAALALYOMRISNAAXCGY", "KKGLADUWIADJCNBNAAYNIOXSANAKISNAUHGNXGQKABGOQKQAHC", "AGTQIZVVOEGBMSGRUQVUIUELEDUOKZUMAENAKASCUYGSLQKVZI", "VWEAAHRUMQHLLUQYDKYHUGGIUIBLDGJRMFBWSGGRUCMBUKAKYG", "GKETQETSIYNGVOJRMKSAOEBAKACGEYSOYMBAQCOOUNWGUGSSTS", "EKOHGYYOCAEXSCWAAGKQNOIERSENJCMCOAYICAMGTAASWAAUJP", "UMSQCMQEUMYGAXQQMINYAAGJROBQKAYNYAQWSMOEUAAGGSCSTG", "IDYGUMOAYCXPMPCGAFSIYIOKWMSWPYEKPEQAIYOAKKRAOAWVSC", "MQWQCAMRPAGQYGAIAABHQLUYLIWSYCAOKOQLSEAEXHHFNOQRZY", "OGPIDAEMLZMAORHMYCBUSHWDAYALMTDWYSOCTYREOQKOAOJEVQ", "WKGJFQYINIINUAGEXWEKAAMWMKMGZIQBSSOODVNPBLHAMUJQST", "WLAIIPKMYIMYABIQQMMQUKENRUOAKAAYAAKERTANPEIUYANUWA", "MSTFGANKCNCZHOAWAACNWAAAQGKEWLATIJZAYQACEGOHEZIZCE", "GOMHHAWCYAMZKYEYUXUOQCJHWAAFEHXNQKGHWOPCHGIIAAMZOC", "AEYQALWQWVGIOWWLQMAMIMSAOOHGKAAACAYKCCUJAAMMAMWKWU", "WCPOYHMNQUABYOAEOOMAXMYEDUMBPWKAQMOKRKKZISQUZEAALA", "TAQLSPAUEDUBOUOACTONNERERDQCKAWWQINMCMMUKIOVRPAINI", "CAOOJKSCOGTMKMPEMSHOSFEMZLEOCAARNCJATMHMUQTANYSVAN", "MHOKWTRAICAKRSJUMAWJYIFWOUVAMYASNHEDUEPAQVAADQCGYV", "QKUUQNKKSJEQKTPBXSHAADRGAAQGWGCMIUKCLMLUJWWHOJHUCP", "MLCKYCUKEATBICGAYYAYVAINEHNIWWCQUCSYWESNAKWMKCUGMU", "AZAIKCGWWMGSXVRUESNRACANCANPJAKIJSQETIQKJKFYROKSSX", "TIXEWEMHWPYSEBCLQJKCCNYCOGAILGAUXMNAWVISKKLSQNQAKH", "ZMJKKMNOCWYJWAIFXIMUIRYIKISPKTQDFMWQGEJQCMUEBKSAUG", "EACWCKOAKSEKYOYIAQMWWAYHMCCHNMSNBNIECNSQIWXKWIYGAS", "EQMEWVUAAIAYNMLMYMSEEIUSJOOWAEHCNQEOYSRBYKEYUGMMHY"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"OAWUWKJATCKKLCWGQQUPYICQGUJEJKXIGYMDYVOHYYYWYKKQUA", "UZSAZEMWUAGKNASQNKUYEGMEAUUKWAFUQUBSNNOSJUAWIZMXGK", "NIUUIQQPLKADAEANJTZNAMKSSAUMWMAQILZGNYWSQKSGUVWMGU", "WSSDYAUKCXSKSUAEANKUSQFQJKHPYEKUBSMEVKGKOBWELVSEWZ", "YODKUPMMKRCMYCQZQFERMOILAAKEBKAGTZYYYOYUYSDONNHUCF", "AGTQIZVVOEGBMSGRUQVUIUELEDUOKZUMAENAKASCUYGSLQKVZI", "JGSAADIHQMDMZCWABEWYKPLGQQYQQWRNGECYIGWNCIOGYZNUZY", "WAAWOYOUVCBUPAYGJKQACJOJYUASOYNKIEUMMQEAYQASINUKSM", "WINMMEPZAWJOSPKSNOZEWWQCKIOBLOAACTSOZKIEAOUMJWKMIL", "EQMEWVUAAIAYNMLMYMSEEIUSJOOWAEHCNQEOYSRBYKEYUGMMHY", "XLABAUAIVIAYSXEWVWEAJKYSIWYCCYAYAEXMLQEMAZEOLMPGPU", "AGAUJMOYUUNAKMFPNREPNAYMUQSNJSONARRAGVJVRZIARIEKNI", "ZMJKKMNOCWYJWAIFXIMUIRYIKISPKTQDFMWQGEJQCMUEBKSAUG", "IDYGUMOAYCXPMPCGAFSIYIOKWMSWPYEKPEQAIYOAKKRAOAWVSC", "QJWCWQKAAAMAWGHABUIUIKUQMEQAPFIMSKWWTFMPWBQSKXOQPP", "WCPOYHMNQUABYOAEOOMAXMYEDUMBPWKAQMOKRKKZISQUZEAALA", "UMSQCMQEUMYGAXQQMINYAAGJROBQKAYNYAQWSMOEUAAGGSCSTG", "GKETQETSIYNGVOJRMKSAOEBAKACGEYSOYMBAQCOOUNWGUGSSTS", "KWAIGGKUQKZZUEGVXKQGAOWCFJAMHYANSUUKAQMDSRZFOKAGUC", "OGPIDAEMLZMAORHMYCBUSHWDAYALMTDWYSOCTYREOQKOAOJEVQ", "AZAIKCGWWMGSXVRUESNRACANCANPJAKIJSQETIQKJKFYROKSSX", "WKGJFQYINIINUAGEXWEKAAMWMKMGZIQBSSOODVNPBLHAMUJQST", "MQWQCAMRPAGQYGAIAABHQLUYLIWSYCAOKOQLSEAEXHHFNOQRZY", "IOALCGJWKWQYARQGIAPUHJOMJGAFYUMVJYWKBCSFSGMKWEMNOI", "MLCKYCUKEATBICGAYYAYVAINEHNIWWCQUCSYWESNAKWMKCUGMU", "MHOKWTRAICAKRSJUMAWJYIFWOUVAMYASNHEDUEPAQVAADQCGYV", "IMNASQANQUPYEIOLEAEWCKSAXLCARWYQIRCKBQWENDMKTGTRCU", "TIXEWEMHWPYSEBCLQJKCCNYCOGAILGAUXMNAWVISKKLSQNQAKH", "QKUUQNKKSJEQKTPBXSHAADRGAAQGWGCMIUKCLMLUJWWHOJHUCP", "EACWCKOAKSEKYOYIAQMWWAYHMCCHNMSNBNIECNSQIWXKWIYGAS", "KCCGHNCXEMCQKJJKCQWAGXXOKHYAEXKERKBHWPSQUAULOEOVWF", "TAQLSPAUEDUBOUOACTONNERERDQCKAWWQINMCMMUKIOVRPAINI", "VWEAAHRUMQHLLUQYDKYHUGGIUIBLDGJRMFBWSGGRUCMBUKAKYG", "WLAIIPKMYIMYABIQQMMQUKENRUOAKAAYAAKERTANPEIUYANUWA", "GOMHHAWCYAMZKYEYUXUOQCJHWAAFEHXNQKGHWOPCHGIIAAMZOC", "MGCIAJQTSMICNSUIIAGELGQEYGEYRYQTAALALYOMRISNAAXCGY", "CAOOJKSCOGTMKMPEMSHOSFEMZLEOCAARNCJATMHMUQTANYSVAN", "AUNQNUCICXCOEAVGCVFODQKMNASWMAPMQZIKCGWCSVNGIOOAGL", "DYLQBOUJTCABAOAKBKCIBKKYWYUWBSZKIMOEQEWNAIIENKFAYS", "AEYQALWQWVGIOWWLQMAMIMSAOOHGKAAACAYKCCUJAAMMAMWKWU", "NSYQRCTIPQHKGETEYOZCMEEEATNANGOEZAOKUJGEBBUYDLEKAI", "GEQIUABSACISAAHDUAWLKPMHQUNTQEFNPLICCNLNHFTKYXSOQA", "WWAEMIISXOGIIKSOMAUBBFOJAAGSWUAYGPRXCZJAMXAMAAEGAS", "WXYAQUAIKAILYNIHCKAHIWAAUJBGCGAAOWTAAGQWASASSEYFKM", "EKOHGYYOCAEXSCWAAGKQNOIERSENJCMCOAYICAMGTAASWAAUJP", "GAHZGAANKWAOYAAXNUEZAEEEONJIWOJMANTODAEMMMWJJWIGAA", "EIKACAYUCKOPQAJDJIEXAUEAESXGTVWPIVIAANQABAEKQVKWGA", "LYQZFCEOLKAEGEOIONDIAEFSAMAVGPMAOIJSKIOABURUDFAISS", "MSTFGANKCNCZHOAWAACNWAAAQGKEWLATIJZAYQACEGOHEZIZCE", "KKGLADUWIADJCNBNAAYNIOXSANAKISNAUHGNXGQKABGOQKQAHC"};
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    vector<string> names = {"AHAYVBVUAOVUIESYVIYCWDAFWNECOEKZRCCMQJEQACGRCACYUC", "EMWBYQNWIQKJYDKOKAOGTYAEKWAANQEUWGONOUEIYEJSQWGGYA", "NSXMRVGJDMEJZAYSHGVWAAJUSYUEWSUENFAXKEAMQMKWCCMCKI", "QEOESMKCOEMASLRECWAVMQGVTFUUIFACBACWOJAMSSRWFQAKAF", "UAOEHJMGZQUGNKUGWAEUWCEOEADMOJUNYCYGUEKGJHQCURVCJJ", "NRMUWVWKNLTRAASLCLSAYAQVWQLYEOAASUYOMUZWWKWHADVUWM", "UMBYKPUWKIDNCRSQJUOCQTOQSCKABQYKQUCMKIKQDKCBMJUSEQ", "CMOLCWPEFVLBAWQROOWKHCGBWSMNWEKHUZCGVHNNCUEMOAACIC", "ONTAAEZXTLHLJAEIANVJZIAUVAUANHMQUMICWWOAKIRTUBCAYU", "GEYIMAGUEEKVGNSIPEQAVOJSWYLOKYUQNZUZRAZYGBZSXQCLAG", "GOPDUMATCQESZCIYDLKENIQEYUNEOJAACOYKNWIFCCACWEASCN", "KUESQZICUALFQAGYCJUYJAPUNAQSPVEEOEEKAAARQBAYYDAZUU", "DOGCWEWMSTMXTUAGCIKNIZRQLUWLZCJIYMAKXUFQAMVABYAVWZ", "CWQNCEQUSWEYMAQYEFRIAECIDYZWCMHTWKLGOINGJYCAAAWMOH", "UNCPPAAPUMRPAUGWMKGHQMIYZRKXISGGGEKMSSMICLHCHGOCUG", "WOTODYGHOTKYOLAOCWAMPUHUYSWMEZLAECASMCHMOASGUDWTSA", "QLMKAXREJMJQAMAUQAQOOSUAMSMWKMTEYIYMSISRGAWIMWUDIW", "SBXGUGUTWUOOYUIAKEZAGUERQQEQWLRNNNWSUOCMEGGEGTSRAC", "DQVMQSNZMNKUECUSSNOANNLTWYGACGWAHKLGAHMWYAIBKNIKGQ", "AUPUUOCCMAKSWKASEKQSTIJIIWYHIPIQSYICYEIVYJCBFCOSOU", "UKXNUEMKGWYAYKMGCAXAKHQBEMPYVOAVCJJSEBKMWWLRSIAUNL", "EXEASYIZEPOSGOVCVGSBXACEZBKEAIKABQQSAGCWIIGYCSJMHO", "CMOKNNPAAATNOCDQVLSUCAYETUFUALECPYDXASAWNWCAPKJWCG", "GMLYCQPOAGIEZAAQMFVVWSUWCMXASHOSXAQEWXPCHMDIQEGANO", "JWVWIVNPJICWJENEAZISQKQGNQQSTGJAYZASFSESKXUONYCSNR", "IPMQIOQQAMKDSSAIMIYRGYWAAYMBXCAGGOVMACCILFMUCPKPKJ", "FESMYCYRCOQNQSHAICNASQANNPUCPEAKKXCUIUNACFITREASWO", "UFKSAFYAENMSECTWAIKKWUUCYGNEGMXQCKYUGKAKBSGIAQAGOX", "WEAWIQAKOCVRHYUWIPFCQCAZCKATEXUOKCINZAKYAXIINAUJKF", "OGTKIMXOWGOKUSMRSUKNTKKQEGKMNCIMIYGGGLIAOAGEARUQAM", "NAYAUOIYAUNSGEGVBPHFUCIZZAPWYQIYAAZMKAAFVSMRSQZEEO", "YYSOAYWBUCWDNJWCMMFIAIOERFWSKKCAACSCOAWQTWKZUUREKW", "MQACEMCNSUWEWJIUAUAIKEKOGKGAAOOYBRCSFSCYCRNEAAQUAL", "LWNKDURWRCJQWHAAQGLYNIIIQYKAFOBGKIYKQIWAOQZGKGNXUK", "BIDGANRXNMIOGNKSMJLMFSOMAKWQUGMBQSJHBIOKGQGQASRMHW", "HSWHIOGYOIFKGWAYGGMEYKWASUASFZAQUWQPEAOQYWORFADUIC", "OJACVSCCKCEUKYYEAMKAQKYIIGKDCCWAMISHYMYEUAAAUCCEOW", "HIYAAQKGALMYUQSSYFWCDYQVAUNQEXZNEEKOIMKURJBGKBOXNA", "EUMCAJKEQEJBKVTMANGMWQMCZGLMFKYCUCQQASWYAFBWSHMAMN", "NAFGGANNPVOUXMGVBAYRVBGWYRWSZSGDSNDCOYMQYQAGPDXHMQ", "NBYROJIOJUKEIWSMQKMGIGWNPQEOGUJZGALCXBVYXQEASXASFU", "MALIKMQKQKGXIHHAAUSQGSQWXYUAXCRXNYOUAEIGMYSYDPOGLJ", "QIWUJESIUNEAWZYWAIEGKADAWAEAUKACGCAIMYCYNUNAAIANPQ", "UKLYPGPBYANYZKPUCBIQKFYEYCATYOLAOUSNUGHUQVUIKKUCOW", "ICSOQAHSCGCOVOUCEJAPURIEMASOCVQQASCYHYQMMKOSOSVDOY", "ZQNRZITCEDLUYEGSRAHNUXWZESEYIWAMGKCMFZXJAEQOSQQFAK", "ICCNIMASBECCEWKKAMZWRAEOAUWMSMUIIQTASPBKGCRQQXCKDG", "YJSNVGSQUWCSAJISEQQMQOKGKGNSJZWXLEAYRBFSAQXDMQCKKO", "ANCMVEELDGKGYRAIWUEYODAEYURTNCAWEMUITGLNKAOAUJIQMM", "WBGICOVDOCXENQAWMVVAMMACUQLAIIGKTUMENVYWYMAYNQYREI"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"NRMUWVWKNLTRAASLCLSAYAQVWQLYEOAASUYOMUZWWKWHADVUWM", "JWVWIVNPJICWJENEAZISQKQGNQQSTGJAYZASFSESKXUONYCSNR", "GEYIMAGUEEKVGNSIPEQAVOJSWYLOKYUQNZUZRAZYGBZSXQCLAG", "UKLYPGPBYANYZKPUCBIQKFYEYCATYOLAOUSNUGHUQVUIKKUCOW", "DOGCWEWMSTMXTUAGCIKNIZRQLUWLZCJIYMAKXUFQAMVABYAVWZ", "NAFGGANNPVOUXMGVBAYRVBGWYRWSZSGDSNDCOYMQYQAGPDXHMQ", "SBXGUGUTWUOOYUIAKEZAGUERQQEQWLRNNNWSUOCMEGGEGTSRAC", "QLMKAXREJMJQAMAUQAQOOSUAMSMWKMTEYIYMSISRGAWIMWUDIW", "MALIKMQKQKGXIHHAAUSQGSQWXYUAXCRXNYOUAEIGMYSYDPOGLJ", "YJSNVGSQUWCSAJISEQQMQOKGKGNSJZWXLEAYRBFSAQXDMQCKKO", "ZQNRZITCEDLUYEGSRAHNUXWZESEYIWAMGKCMFZXJAEQOSQQFAK", "NBYROJIOJUKEIWSMQKMGIGWNPQEOGUJZGALCXBVYXQEASXASFU", "YYSOAYWBUCWDNJWCMMFIAIOERFWSKKCAACSCOAWQTWKZUUREKW", "NAYAUOIYAUNSGEGVBPHFUCIZZAPWYQIYAAZMKAAFVSMRSQZEEO", "WBGICOVDOCXENQAWMVVAMMACUQLAIIGKTUMENVYWYMAYNQYREI", "WOTODYGHOTKYOLAOCWAMPUHUYSWMEZLAECASMCHMOASGUDWTSA", "HSWHIOGYOIFKGWAYGGMEYKWASUASFZAQUWQPEAOQYWORFADUIC", "LWNKDURWRCJQWHAAQGLYNIIIQYKAFOBGKIYKQIWAOQZGKGNXUK", "AUPUUOCCMAKSWKASEKQSTIJIIWYHIPIQSYICYEIVYJCBFCOSOU", "EMWBYQNWIQKJYDKOKAOGTYAEKWAANQEUWGONOUEIYEJSQWGGYA", "HIYAAQKGALMYUQSSYFWCDYQVAUNQEXZNEEKOIMKURJBGKBOXNA", "UKXNUEMKGWYAYKMGCAXAKHQBEMPYVOAVCJJSEBKMWWLRSIAUNL", "NSXMRVGJDMEJZAYSHGVWAAJUSYUEWSUENFAXKEAMQMKWCCMCKI", "ICSOQAHSCGCOVOUCEJAPURIEMASOCVQQASCYHYQMMKOSOSVDOY", "UMBYKPUWKIDNCRSQJUOCQTOQSCKABQYKQUCMKIKQDKCBMJUSEQ", "GMLYCQPOAGIEZAAQMFVVWSUWCMXASHOSXAQEWXPCHMDIQEGANO", "DQVMQSNZMNKUECUSSNOANNLTWYGACGWAHKLGAHMWYAIBKNIKGQ", "ONTAAEZXTLHLJAEIANVJZIAUVAUANHMQUMICWWOAKIRTUBCAYU", "OGTKIMXOWGOKUSMRSUKNTKKQEGKMNCIMIYGGGLIAOAGEARUQAM", "UNCPPAAPUMRPAUGWMKGHQMIYZRKXISGGGEKMSSMICLHCHGOCUG", "WEAWIQAKOCVRHYUWIPFCQCAZCKATEXUOKCINZAKYAXIINAUJKF", "UAOEHJMGZQUGNKUGWAEUWCEOEADMOJUNYCYGUEKGJHQCURVCJJ", "CWQNCEQUSWEYMAQYEFRIAECIDYZWCMHTWKLGOINGJYCAAAWMOH", "KUESQZICUALFQAGYCJUYJAPUNAQSPVEEOEEKAAARQBAYYDAZUU", "BIDGANRXNMIOGNKSMJLMFSOMAKWQUGMBQSJHBIOKGQGQASRMHW", "FESMYCYRCOQNQSHAICNASQANNPUCPEAKKXCUIUNACFITREASWO", "UFKSAFYAENMSECTWAIKKWUUCYGNEGMXQCKYUGKAKBSGIAQAGOX", "ANCMVEELDGKGYRAIWUEYODAEYURTNCAWEMUITGLNKAOAUJIQMM", "EUMCAJKEQEJBKVTMANGMWQMCZGLMFKYCUCQQASWYAFBWSHMAMN", "AHAYVBVUAOVUIESYVIYCWDAFWNECOEKZRCCMQJEQACGRCACYUC", "CMOKNNPAAATNOCDQVLSUCAYETUFUALECPYDXASAWNWCAPKJWCG", "CMOLCWPEFVLBAWQROOWKHCGBWSMNWEKHUZCGVHNNCUEMOAACIC", "IPMQIOQQAMKDSSAIMIYRGYWAAYMBXCAGGOVMACCILFMUCPKPKJ", "EXEASYIZEPOSGOVCVGSBXACEZBKEAIKABQQSAGCWIIGYCSJMHO", "ICCNIMASBECCEWKKAMZWRAEOAUWMSMUIIQTASPBKGCRQQXCKDG", "QEOESMKCOEMASLRECWAVMQGVTFUUIFACBACWOJAMSSRWFQAKAF", "GOPDUMATCQESZCIYDLKENIQEYUNEOJAACOYKNWIFCCACWEASCN", "QIWUJESIUNEAWZYWAIEGKADAWAEAUKACGCAIMYCYNUNAAIANPQ", "MQACEMCNSUWEWJIUAUAIKEKOGKGAAOOYBRCSFSCYCRNEAAQUAL", "OJACVSCCKCEUKYYEAMKAQKYIIGKDCCWAMISHYMYEUAAAUCCEOW"};
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    vector<string> names = {"IKQNCABDABUMNTCWVPLSQQCMUOWVUUSVGQEKAQAYXEAUOYCCAU", "AMWCCNAQGMYASTILAACLYAHWSYZWVETOCXGAGWAQGYSCJVMLEG", "KQAUIWMNIHMQKOGUVKKWQKOWTJGWDOIWARNYEEQKFFAZAAEGJO", "VRAKCMVAIAGMSFAUMQGWZGLDEPSJGMNNSYNVOIRUAYPIWPOMHL", "AFCBWIJEEOWSGOGEIXGMUNQMYAJKCAAKIICSNCAEWDSINUAYWN", "SOHAQMSEUWCUOEICMYQLUUUOAEUPRVSQSLNQFMQCTYQCTAOYIX", "AEKOOXESCUNFGZWKGMDOUGSLSAAEAFKTBEPQWKMUKAAKKUKYIL", "GKAUIQCMKCOJVAVHMASXEAAAGLSZGFOCNBVNCGAAAONGSUCHMW", "GCZEQAIAEMSUKEAMWVAMWOCGWWGVKVKGGAOBWAWLYEYOZAJFQL", "RAAKIWCGACFALUCKAAINYXKMOECSWCMCEWKMGJUVROEASUACMI", "AYNMMHNJCLAIIMGWOQAEQEVAQNOQXMUEEOIKYKBUAKACCNQWEE", "BYECGCEUEUVRVQUINWMAXQISQDYCTGSAKNUGARYWHBZFQKYWMA", "NRIKAAWKQGEWMFYXVAKGYFOCIUILRNWKKMMQQNCOILAYMKHTSP", "OMWHSAMGCUPDEMIBBHMQATQGAAISRUQHGAEZGOVXOVMOKAWESK", "GGGAXACYAFYGNSCDQOROYAIUAFAARWSSARMNQSPQGXKDCFOWUG", "OEEANWBGZIAGNAMYMZOCABOIDWQUQWMLANOJMANAESKEFAKENC", "KEJUOIIMKVFIFWOWGSCSMLIQIDXHAGNAMMUAIMNLNLTYAMHKCU", "ASCKVKPSMQNXUESQONAERBARACAJVIQQKGEJQCNQUNCYEVPOLJ", "KZUROOGEKVAELKOKAIUZUQBIYKVSSILQANKWTIEQNXLQIDGQPN", "WZLXAKOYMENYHUYOYMYCCNMIBQVUSIKGKEAWSYYCWOCAUSMRXT", "DAKXFQCIRMCAEQAOOSKXSDAEOQVGCASCFSGLUTUWWQYOUISWEY", "SCESEMJKACAIIWGNYGUSKIDYWEWIUUWCMYFGIUGIAXSANYIMAJ", "KYJEIAACIWOEYYSOYUESYCGQAAAAAYJAWLNCNAKKZAANLGZONJ", "ZWZFIWUBAWQYWNHLAAGGYYLUYUZKOMSUWSOSAAGEAIAFGNABJI", "EOYOOVRTJMNTIIGEAEUDYOMQAAQWNNWEKJIADGRCMMLAHDQUSY", "AWGSWQGGCKNECECSKROAKNICESIOAEGYUWQOSMIXMUPLAWIEKI", "ETZUVSSTXMABHMWJALWSXCEEOKWIEQPXXAKKWAMXRSBVMCEAOA", "UEZICBYNGTYMYMQGKUCWVNGDXFAPDMOGYGWICUOXDMAOMASSNA", "IQEIGQYSEAASEOBKEAMJCLSUTTUAAQWEVQBOWUOKPSJWMQKGQB", "VZQJZIWGMURENUAGEIMIUTEYSCGAGCVRKMJBAARYISUMXEBAPU", "LASASOEWSWAAECVKWQGUVAVFWWMANSKGAZBMSDCIGSUOCASNSV", "WZGEISKAYATDJCIGAOWIGQUAMCYVFWDGYKEWYZUCOCZWUGIZYC", "BPSWRWAGSMUERLYZAMQQQOXBKIZNUGAEIYIAGOMMKUMAEHZEQG", "OACNVICMEGUNTMCYGNHAQENWWGEFGAUYWFGDVCMYAUZKWYNKAC", "OQPIWOCYSDLMEWCEGIYWKAYMQKWYQUALMNPAMMXTYMWMWIWCNJ", "KYWTEKAAAMGYZSLNIUEATPSAMGWASXOMAUSXQVJASPPCMRSGIQ", "ASRZYJRLNIMRCOASQHAUSACABTBUYUBGAIMIPGQMUETADFQLES", "AYKAOJAQOSXASJOUGGQSQYJIMYHEWMOAEUULVGGLWIXYSAXKAI", "LPZTELEEANAEGNPKAEKMGKOKBVIVYEEVKPDYIAOUSINEEGAPPU", "AQMDEEQNCAAKOFIHWAKAWSNKGQOUFAFAETAYEMOKIOZAIUAOSM", "KFSAKMCSASENCAKPSLUPPXRAAMGDHWEDANPYIASZEAAAHHNCOJ", "QAYWJMSZICEVXAGFSCXGBFNIKYGWAQWCASUWWYAQOHSWMSQAFW", "QYHANASNQNZGSNNQJWCJZEHEEIYPQVCMKUYQSAJGSMQYKOQMNE", "XQCMHAELUSOWCWGOMTUWDFCDCVQSQKFLGVUHYTIDDYQIGAKIWA", "RMWWGGJLHGGMYOIKLATMADWWVPCIODCQONPZLEUEKWFMUEYOMU", "UUCUOIUAAGRYWFAXNGYIACWEZGTQYINUOMYAIZMNPQAAJCFNQH", "EGOFAOSPSKNYVAKANRVVJCUIKMOOCNGKIWMUKXNAATYOAKCAKK", "OMNBAYHYJCNHUEAGMGNKGQRCLASOAUXEUNFGSUWIQMKYECKFGM", "AIMANQUOUNVOYBUTWNYYNMCECHCOIKQKAVFCFKAKEOWGDFLAQO", "UAAPEISCYUWWAAAHALYCAZEIQSFJGWSIGUGQIAAYOTAOPAOLYR"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"WZLXAKOYMENYHUYOYMYCCNMIBQVUSIKGKEAWSYYCWOCAUSMRXT", "SOHAQMSEUWCUOEICMYQLUUUOAEUPRVSQSLNQFMQCTYQCTAOYIX", "OQPIWOCYSDLMEWCEGIYWKAYMQKWYQUALMNPAMMXTYMWMWIWCNJ", "QYHANASNQNZGSNNQJWCJZEHEEIYPQVCMKUYQSAJGSMQYKOQMNE", "KZUROOGEKVAELKOKAIUZUQBIYKVSSILQANKWTIEQNXLQIDGQPN", "QAYWJMSZICEVXAGFSCXGBFNIKYGWAQWCASUWWYAQOHSWMSQAFW", "BYECGCEUEUVRVQUINWMAXQISQDYCTGSAKNUGARYWHBZFQKYWMA", "WZGEISKAYATDJCIGAOWIGQUAMCYVFWDGYKEWYZUCOCZWUGIZYC", "KYWTEKAAAMGYZSLNIUEATPSAMGWASXOMAUSXQVJASPPCMRSGIQ", "AYKAOJAQOSXASJOUGGQSQYJIMYHEWMOAEUULVGGLWIXYSAXKAI", "ETZUVSSTXMABHMWJALWSXCEEOKWIEQPXXAKKWAMXRSBVMCEAOA", "RMWWGGJLHGGMYOIKLATMADWWVPCIODCQONPZLEUEKWFMUEYOMU", "ZWZFIWUBAWQYWNHLAAGGYYLUYUZKOMSUWSOSAAGEAIAFGNABJI", "VRAKCMVAIAGMSFAUMQGWZGLDEPSJGMNNSYNVOIRUAYPIWPOMHL", "BPSWRWAGSMUERLYZAMQQQOXBKIZNUGAEIYIAGOMMKUMAEHZEQG", "NRIKAAWKQGEWMFYXVAKGYFOCIUILRNWKKMMQQNCOILAYMKHTSP", "UUCUOIUAAGRYWFAXNGYIACWEZGTQYINUOMYAIZMNPQAAJCFNQH", "UEZICBYNGTYMYMQGKUCWVNGDXFAPDMOGYGWICUOXDMAOMASSNA", "DAKXFQCIRMCAEQAOOSKXSDAEOQVGCASCFSGLUTUWWQYOUISWEY", "IKQNCABDABUMNTCWVPLSQQCMUOWVUUSVGQEKAQAYXEAUOYCCAU", "VZQJZIWGMURENUAGEIMIUTEYSCGAGCVRKMJBAARYISUMXEBAPU", "XQCMHAELUSOWCWGOMTUWDFCDCVQSQKFLGVUHYTIDDYQIGAKIWA", "KQAUIWMNIHMQKOGUVKKWQKOWTJGWDOIWARNYEEQKFFAZAAEGJO", "LASASOEWSWAAECVKWQGUVAVFWWMANSKGAZBMSDCIGSUOCASNSV", "IQEIGQYSEAASEOBKEAMJCLSUTTUAAQWEVQBOWUOKPSJWMQKGQB", "EOYOOVRTJMNTIIGEAEUDYOMQAAQWNNWEKJIADGRCMMLAHDQUSY", "AMWCCNAQGMYASTILAACLYAHWSYZWVETOCXGAGWAQGYSCJVMLEG", "GCZEQAIAEMSUKEAMWVAMWOCGWWGVKVKGGAOBWAWLYEYOZAJFQL", "SCESEMJKACAIIWGNYGUSKIDYWEWIUUWCMYFGIUGIAXSANYIMAJ", "ASCKVKPSMQNXUESQONAERBARACAJVIQQKGEJQCNQUNCYEVPOLJ", "EGOFAOSPSKNYVAKANRVVJCUIKMOOCNGKIWMUKXNAATYOAKCAKK", "OACNVICMEGUNTMCYGNHAQENWWGEFGAUYWFGDVCMYAUZKWYNKAC", "GGGAXACYAFYGNSCDQOROYAIUAFAARWSSARMNQSPQGXKDCFOWUG", "KEJUOIIMKVFIFWOWGSCSMLIQIDXHAGNAMMUAIMNLNLTYAMHKCU", "AIMANQUOUNVOYBUTWNYYNMCECHCOIKQKAVFCFKAKEOWGDFLAQO", "AWGSWQGGCKNECECSKROAKNICESIOAEGYUWQOSMIXMUPLAWIEKI", "UAAPEISCYUWWAAAHALYCAZEIQSFJGWSIGUGQIAAYOTAOPAOLYR", "OMWHSAMGCUPDEMIBBHMQATQGAAISRUQHGAEZGOVXOVMOKAWESK", "OMNBAYHYJCNHUEAGMGNKGQRCLASOAUXEUNFGSUWIQMKYECKFGM", "AEKOOXESCUNFGZWKGMDOUGSLSAAEAFKTBEPQWKMUKAAKKUKYIL", "ASRZYJRLNIMRCOASQHAUSACABTBUYUBGAIMIPGQMUETADFQLES", "KYJEIAACIWOEYYSOYUESYCGQAAAAAYJAWLNCNAKKZAANLGZONJ", "LPZTELEEANAEGNPKAEKMGKOKBVIVYEEVKPDYIAOUSINEEGAPPU", "AYNMMHNJCLAIIMGWOQAEQEVAQNOQXMUEEOIKYKBUAKACCNQWEE", "AFCBWIJEEOWSGOGEIXGMUNQMYAJKCAAKIICSNCAEWDSINUAYWN", "AQMDEEQNCAAKOFIHWAKAWSNKGQOUFAFAETAYEMOKIOZAIUAOSM", "OEEANWBGZIAGNAMYMZOCABOIDWQUQWMLANOJMANAESKEFAKENC", "RAAKIWCGACFALUCKAAINYXKMOECSWCMCEWKMGJUVROEASUACMI", "GKAUIQCMKCOJVAVHMASXEAAAGLSZGFOCNBVNCGAAAONGSUCHMW", "KFSAKMCSASENCAKPSLUPPXRAAMGDHWEDANPYIASZEAAAHHNCOJ"};
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    vector<string> names = {"XXXXYXXYXXXYXXXXXYYYYYXXXXXXXXXXYXXXXXXXYXXYXXYXXX", "YXXXXXXYYYXXXXXXYXXXXXXXXXXXYXXXXYXXXXYXYYXXXYXXYX", "XYXXXXYXYYXYXXXXXXXYYXXXXXXXYXXXXXXYXXXYXXXXXXXYXX", "XXXYXYXXYXYYXXXXXXYXXXXXYXXXXXXXXXXXXXXXYXYXXXXYYX", "XXYYXXXXXXXYXXXXXYXXXXXXXYXXXYYXXXYYYXXXXXYXYYXXXX", "YYXXYXYXXXXXXYYXYXXXXXXXXYXXYXXXXYXXYXXXYYXXYYXXXX", "XXXYXYXXXXYXXXYXXXXYXXXYXXXXYXXXYYXYXXYYYXXXXXYXXX", "XXYXYXXXYYXXXYXXXYXXYXXXXXXYXYXXXYXXXXXXYXXXXXXYXX", "XXXYXXYYXYXXXXXYYYXXYYXXXXXXYYXXXXXXYXXYXYYXXXYXXX", "XYXXXXXXXYXXXYXXYXXXXXXXXXXXXXYXXXXXXXYXXXXXXXYXXX", "XXYXXXXXXXXXXYYXXXXXYXXXXXXXYYXYXXYXXXXXXYYYYXYXXX", "YYXXXXXXXXXXXXXYYXXXXXXXXXXXXXXXXYXXXXXXXXXYXXXXXX", "XYXXXYXXXXYYYXXXYXXXYYYXXXXXXXXXXXYXXXXXXYYXXXXXXX", "XXXXXXXXYYXXYXXXYXXXYXXXXXYXXXXYYXXXXXYXXXYXXXYXYX", "XXXXXXXXXXXYXYXXXXYYXYXXXXXYXXXYXXXXYYXXXXXXYYXXYX", "YXYXXXXXYYXYXXXXXXYXYXXXXYXXXXXXXXXXXYYXYXXYXYXXXX", "YXXYXXXXXXXXXYXXXXYXXYYXYXXXXXXYXXXXXXYYXYYXYXXYXX", "XXXYXXXYYYXXXXYXXXXXXXXXXXXXXXXXXXXYXXXXXXXXYYXYYY", "XYXYXXYXXYXXXXXYXYXXXXXYXXYYXYXXXXXYXYXYYYYXXXYXXX", "XXXXXXXXXXYXXXYXXXXYXXXXXXYXXXYYXXXXYXXXYXXYXYYYXY", "XYYXXXXYXYXXXYXXXXXXXXXXXYYXYXYXXXXXXYXXYXXXYXXXYY", "XXXXXXXXXXXXXXXXYYXXYXXXXXXXXYXXYXXXYXXXXXXXXXXYXX", "XXXXXXYXYXXXXXXXXXYXYXXYXYYXXXYXYXYXXYYYXXXXXXXXXY", "XXXXYXXYXXXXYYXXXXYYYXXYXXYXXXXXXXXYXXXXYXXXYXXXXY", "YXXYXXXXXXXYXXXYXXXXXXXXXXXXXYXYXYXXXXXXXYXXXXXXYX", "XXXXYXXXXYYXYXYXYXYXXXXXXXXYXYXYXXXYXXXXXXXXXXXXXX", "XYXXXXXXXXYXXXXXYYXXXYXXXYXXXXXXYXXXYYXXXXXXXXXXXY", "XXXXXXYXYXXXXXYXXXYXXYXXYXXXXXXXXXXYYXXYXXXXXYXXXY", "XXXYXYXXYYXYXXYXYYXYXYYXXXXXXXXXYYXXXXXXXXXXYXXXYX", "XXYXYXXYXYXYXXXXYXXXXXXXXXXXXYYXYXXXXXYXYXXXXXYYXY", "XXYXXYXYXXXYXXYXXXXYXYXXXYXXYXXYXYXXXXXYXYYXXYYYXX", "XXXYXXXXXXYXYYXXXXXXYXXXXXYXXXXXYXYYXXXXYXXXXXXXXX", "YXXXXYXYXYXYXXXYYYYXXXXYXXXXXXXYXXYXYXXXXXXXYXXXYX", "XYXYXXXYXXXYYXXYXXXXXXXYXXXXXXXXXXXXXYXXXXXXYXXYXX", "YXXYXXXXXXXYXXYYYXXYXXXXXXXYXXXYYYXXXYXXXYXXYXXXXX", "XXYXYXXXYYXYXXXXYYXXXXYYXYXXYXXXYXXXXXXYXYXYXXXXXX", "XYXXXXXYXXYXYXXXXXXYXXXXXXYXXXXXXXXXXXXXXXYXXXYXXX", "XXXXYXXXXXXXYXXXXYYYXXXXXXXXXXYYXXXYYYXXYXXYXXXXXY", "XYXXXXXYXXXXXXXXXYYYXXXYXXXXXXXXXXXYXXXXXXXXXXXXXX", "XXXYXYXXYXXXYYYXXYXYXYXXXXYXXXXXXXXXXXYYYXYXXYXXYY", "XXXYYXXYXXYXXXXXXXXYYYYXYXXXXXYXXXXXYXXYXXXXXYXXXY", "XXYXXXXXXXXXYXXYXXYXXXXYXXXYXYYXXYXXYXYYYXXXXXXXXX", "XYXXXXXXXXYYXXXXXXXXXXYXXXXXXYXYYYXXXYXYXYYXXXXXXX", "YYYYXYYXYXYXXYXYXYYXXXXYXXYYXXXXYXXXYXXXXYXXXXXXXX", "XXXXXXXYYXXXXYXXYXXXXXXXXXXYXYYXXYXXXXXXXXXYXXXXXX", "XXXYXXXXYYXXYXXXXXXXXXXYYXXXXXXXYXYYXYXXXXYYXXXXXX", "XXXXXXXXXXXXYYXXXYXYXXXXXYXXXXYXXYXXXXXXYXXXXYXXXX", "YXXXYXYXXYXXXYXXXXYXXYXXXXYXXXYXXYXXXYYXYXXXXYXYXX", "XXXXXXXXXYYXXXXXXXXYXXYXXXYXYXYYXXXXYXXXXYXXXXXXYY", "XXXYXXXXXYXXXXYYYYYXXXXXYXYYYYYXXYXXYXXXXXXXXXYXXX"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"YYYYXYYXYXYXXYXYXYYXXXXYXXYYXXXXYXXXYXXXXYXXXXXXXX", "XXXYXYXXYXXXYYYXXYXYXYXXXXYXXXXXXXXXXXYYYXYXXYXXYY", "XXYXXYXYXXXYXXYXXXXYXYXXXYXXYXXYXYXXXXXYXYYXXYYYXX", "XYXYXXYXXYXXXXXYXYXXXXXYXXYYXYXXXXXYXYXYYYYXXXYXXX", "XXXYXXXXXYXXXXYYYYYXXXXXYXYYYYYXXYXXYXXXXXXXXXYXXX", "XXXYXXYYXYXXXXXYYYXXYYXXXXXXYYXXXXXXYXXYXYYXXXYXXX", "XXXYXYXXYYXYXXYXYYXYXYYXXXXXXXXXYYXXXXXXXXXXYXXXYX", "XXYXYXXXYYXYXXXXYYXXXXYYXYXXYXXXYXXXXXXYXYXYXXXXXX", "YXXXXYXYXYXYXXXYYYYXXXXYXXXXXXXYXXYXYXXXXXXXYXXXYX", "YXXXYXYXXYXXXYXXXXYXXYXXXXYXXXYXXYXXXYYXYXXXXYXYXX", "YYXXYXYXXXXXXYYXYXXXXXXXXYXXYXXXXYXXYXXXYYXXYYXXXX", "XXXXXXYXYXXXXXXXXXYXYXXYXYYXXXYXYXYXXYYYXXXXXXXXXY", "XXXYXYXXXXYXXXYXXXXYXXXYXXXXYXXXYYXYXXYYYXXXXXYXXX", "XXXYYXXYXXYXXXXXXXXYYYYXYXXXXXYXXXXXYXXYXXXXXYXXXY", "XXYXYXXYXYXYXXXXYXXXXXXXXXXXXYYXYXXXXXYXYXXXXXYYXY", "XYYXXXXYXYXXXYXXXXXXXXXXXYYXYXYXXXXXXYXXYXXXYXXXYY", "YXXYXXXXXXXXXYXXXXYXXYYXYXXXXXXYXXXXXXYYXYYXYXXYXX", "YXXYXXXXXXXYXXYYYXXYXXXXXXXYXXXYYYXXXYXXXYXXYXXXXX", "XXXXXXXXXXYXXXYXXXXYXXXXXXYXXXYYXXXXYXXXYXXYXYYYXY", "XXXXYXXXXXXXYXXXXYYYXXXXXXXXXXYYXXXYYYXXYXXYXXXXXY", "XXXXYXXYXXXXYYXXXXYYYXXYXXYXXXXXXXXYXXXXYXXXYXXXXY", "XXYXXXXXXXXXXYYXXXXXYXXXXXXXYYXYXXYXXXXXXYYYYXYXXX", "XXYXXXXXXXXXYXXYXXYXXXXYXXXYXYYXXYXXYXYYYXXXXXXXXX", "XXYYXXXXXXXYXXXXXYXXXXXXXYXXXYYXXXYYYXXXXXYXYYXXXX", "YXYXXXXXYYXYXXXXXXYXYXXXXYXXXXXXXXXXXYYXYXXYXYXXXX", "XXXXXXXXXXXYXYXXXXYYXYXXXXXYXXXYXXXXYYXXXXXXYYXXYX", "XXXXXXXXXYYXXXXXXXXYXXYXXXYXYXYYXXXXYXXXXYXXXXXXYY", "XXXXXXXXYYXXYXXXYXXXYXXXXXYXXXXYYXXXXXYXXXYXXXYXYX", "XXXXYXXYXXXYXXXXXYYYYYXXXXXXXXXXYXXXXXXXYXXYXXYXXX", "XXXYXXXXYYXXYXXXXXXXXXXYYXXXXXXXYXYYXYXXXXYYXXXXXX", "XXYXYXXXYYXXXYXXXYXXYXXXXXXYXYXXXYXXXXXXYXXXXXXYXX", "XYXXXXXXXXYYXXXXXXXXXXYXXXXXXYXYYYXXXYXYXYYXXXXXXX", "XYXXXYXXXXYYYXXXYXXXYYYXXXXXXXXXXXYXXXXXXYYXXXXXXX", "YXXXXXXYYYXXXXXXYXXXXXXXXXXXYXXXXYXXXXYXYYXXXYXXYX", "XXXXXXYXYXXXXXYXXXYXXYXXYXXXXXXXXXXYYXXYXXXXXYXXXY", "XXXXYXXXXYYXYXYXYXYXXXXXXXXYXYXYXXXYXXXXXXXXXXXXXX", "XXXYXXXYYYXXXXYXXXXXXXXXXXXXXXXXXXXYXXXXXXXXYYXYYY", "XXXYXYXXYXYYXXXXXXYXXXXXYXXXXXXXXXXXXXXXYXYXXXXYYX", "XYXXXXYXYYXYXXXXXXXYYXXXXXXXYXXXXXXYXXXYXXXXXXXYXX", "XXXYXXXXXXYXYYXXXXXXYXXXXXYXXXXXYXYYXXXXYXXXXXXXXX", "XYXXXXXXXXYXXXXXYYXXXYXXXYXXXXXXYXXXYYXXXXXXXXXXXY", "XYXYXXXYXXXYYXXYXXXXXXXYXXXXXXXXXXXXXYXXXXXXYXXYXX", "XXXXXXXXXXXXYYXXXYXYXXXXXYXXXXYXXYXXXXXXYXXXXYXXXX", "XXXXXXXYYXXXXYXXYXXXXXXXXXXYXYYXXYXXXXXXXXXYXXXXXX", "YXXYXXXXXXXYXXXYXXXXXXXXXXXXXYXYXYXXXXXXXYXXXXXXYX", "XYXXXXXYXXYXYXXXXXXYXXXXXXYXXXXXXXXXXXXXXXYXXXYXXX", "XXXXXXXXXXXXXXXXYYXXYXXXXXXXXYXXYXXXYXXXXXXXXXXYXX", "XYXXXXXXXYXXXYXXYXXXXXXXXXXXXXYXXXXXXXYXXXXXXXYXXX", "XYXXXXXYXXXXXXXXXYYYXXXYXXXXXXXXXXXYXXXXXXXXXXXXXX", "YYXXXXXXXXXXXXXYYXXXXXXXXXXXXXXXXYXXXXXXXXXYXXXXXX"};
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    vector<string> names = {"XXYYYYXXXXYXXXXXYYXXYXXXXYXXXXXXYXXYYXYXXYXXYXXXXX", "XXYXYXXXXYXXXXXXYXXXXYYXXXXXXYXYXXXXXYXXXXYXXXXXXY", "XXYXXXXXXYXYXYXXXYXXXXYYXXXYYXXXYYXYYXXXXXYXYXXXXX", "XYYXXXXXXXXYYXXXXXXXYYXYXXXXYXXXXXYYXXXYYYXXXXXXXX", "XXXXYYXXXXXYXXXXYXYYYXXXXXYXXXXXXYXYXXYXXYYYYXXXXX", "YXXXXXYYXYXYXXYYXXYXXXYXXYYXYXXXXXXYXXXYYXXXYXXYXX", "XXXYYXXXYXXYXXXXXXYXXXXXXXXYXXXYXXXXXXXXXYXXXYXXYX", "XXYXXXXXYYXYXXXYYXYXXXXXXXXXXXXXYXXXYYXYXXXXYXXXYX", "XXXXYYYXXYYYXXXXYXXXXXXXXYXXYXXYXXXXXYYYXXYXXXXXYX", "XXXXYXXYXYXYXXXXXXYXXXXYXXYYXXXYXXYXXXXXXXXXXXXXXX", "YXXXYXXXXYXXXXXXXYXXXXXXXYYXXYXXXXXXYYYXXXXXXYXXYX", "XXXXXXXXYXYXXXXXXXXXYYXXXXXXXXXXYXXXXXXXYXYXXXXXYX", "XXYXYYXYXXYXYXXXXYYXYXXXYXXXXXXXXXXXXXYXXXXYXYXXXX", "XXXXXXXXXXYXXXXYXXXYXXXYXYYXXXXXXXXXXXXXXXXXXXYYXY", "XXXXXXXYXXYXXXXXXXXXYXXXYXXXXXXXXXYYYXXXXXXYXYXXYX", "XXXXXXXXXXYXXXXYXXYXXYXYXYYXYXYXYYXXXXXYXYXXXXXXXY", "XXYXXXXXXXYXXYXXXXXYXXXXXXXXXYXXXYXYXXYXXXXXXXYXYX", "XYYYXXXXXYXYXYXYXYXXXXYXXXXXXXXXXXXXYYXXXYXXXXYXXX", "XYXXXXXXXYXXYYXYXYXXYXXXXXXXXYYXXXXXXXXXYYXXYXYXYY", "YXXXYXXXYYXXYXYXYYYXXXXXYXYYYXXXXYXYXXXXXYXYXXXXXX", "YYXXXXXYYXYXXXYYXXXYXXYXXYXYXYYXXXXXXXXXYXXXXXXXXX", "YXXXYXXXXXXXXXXXXXXXXXXYXXXXXXXYXXXXXXYXXYXXYXYYXX", "XXXXXXYXXXYXXYYXXXXYXXXYYXXXXYXXYYYXXXXYXXXXXYXXXX", "XYXYXXYYYXYXYXXXXXXXXXXXXXXXXXXXXXXXXXXXXXYXXYXYXY", "XYYYYXXYXXXXXXXYXXXYXXYXXXXYXXYYXXYXXXYXXXXXXXXXXY", "YXYXXXXXXYYXYXXXYXXXXXXXXXXXYXXXYXYYYXXXXXYXXXXXXX", "XYXXYXXXXYXXYXXXYXXXYXXXXXXYXXXYXXXYXXXXYXXXXXXXXX", "YXXXYYXXXXXXYXXYXXXXXYXXXXXYYXXXXXXXYXXYXXXXXXYXYY", "YXXXXXXXYXXYXYYXXXXYYXXYXXXXXYXXXXYXXXXXXXXYXXXXYX", "XYXXYXXXXXXYXXXXXYXXXXYYXYXXYXXXYYXYXXYXXXXXXXXXYX", "XXXXXXXXXXXXXXXYXXXXXYXYXXXXXXXYYYXXYXXXXYYYXXYYXY", "XXXXXYXXXXXXXYXXXYXXYXYXXXXXYXXXXXXYYXXXXXYYXYXXYY", "XXXYXXXXYXXYYXXXYXXXXXXYXXXXXYYXYXXYXXXXXXXXYXXXXY", "YYXXXXXYYXXXXXXYXXXYYXYYXXXXXXXXYXXXYYYXXXXYXYYXXY", "XXYXXXXXYXXXYYXXXXYYXXXXXXXXYXXXXXXYXXYYXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXYYXXXXXXXXXYYXYXYXXXXXYYY", "XXXXXXXYXXYXYYXXXXXXXXXYYXXXXXXXXXXXXYXXXYXXYXXYXX", "XXXYYYXXYYXXXXXYYYXXXYXYXXYYXXXXXXXYYXXXYXYXXXXXXY", "XXXYXXXXXXXXYXXXXXYXXXXXXYYXXXYXXYYYXXYXXYXXXYYXXX", "XYXXYXXXXXXYXXXXXXXXXXXYXXXYXXXXXXXXXXXXXYYXXXXXXX", "XXYXXXXXXXYYXXYXYXYXXXXXXXXXXXYXXXXXXXXXXYXXXXYYYX", "XXXYXXYXXXXXXXXYYXYXXXXXXXXXXYXXXXXXXYXYYYYXYYXXXY", "YXYXYXYYXXXYYYXXYXXXXXYXYXXXXYXXXXXXXXYXXXXXYXXXYX", "XXXXYYXYYXXYXXXXXXYXYXXXXXYXYXXYXXXXXXXXYXXXXYYXYX", "XXXXXXYXXYYXYXXYXXXXYYXYXXXYXXXXXXYXXXXXXXYYXXXXXX", "YXYXXYXXXXYXXYXXXXXXXXXXXXXXXXXYXXXXXXXYXXYXXYXXXX", "XXXXXYXXYYXYXYYYXXYXXXXXXYYYXXXXXYYXXYXYYXXXXYYYXX", "YXYXYXXXXXYXXYXXXXYXXXXXXXXXXXXXYYXXXYXYXXXYXXXXXX", "XXXXXXXXXYXYXYXXXYYYYXXYXXXYXYXXXXXXYYXXXXXYXXXXXX", "XXXYXXXYXXXXXXXXXXXXXYXYXXXXXXXXXYXYXXXXXYXXYXXXXX"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"XXXXXYXXYYXYXYYYXXYXXXXXXYYYXXXXXYYXXYXYYXXXXYYYXX", "XXXYYYXXYYXXXXXYYYXXXYXYXXYYXXXXXXXYYXXXYXYXXXXXXY", "YXXXXXYYXYXYXXYYXXYXXXYXXYYXYXXXXXXYXXXYYXXXYXXYXX", "YXXXYXXXYYXXYXYXYYYXXXXXYXYYYXXXXYXYXXXXXYXYXXXXXX", "YYXXXXXYYXXXXXXYXXXYYXYYXXXXXXXXYXXXYYYXXXXYXYYXXY", "XXXXYYXXXXXYXXXXYXYYYXXXXXYXXXXXXYXYXXYXXYYYYXXXXX", "XXXXYYYXXYYYXXXXYXXXXXXXXYXXYXXYXXXXXYYYXXYXXXXXYX", "XXYXXXXXXYXYXYXXXYXXXXYYXXXYYXXXYYXYYXXXXXYXYXXXXX", "XXYYYYXXXXYXXXXXYYXXYXXXXYXXXXXXYXXYYXYXXYXXYXXXXX", "XYXXXXXXXYXXYYXYXYXXYXXXXXXXXYYXXXXXXXXXYYXXYXYXYY", "YXYXYXYYXXXYYYXXYXXXXXYXYXXXXYXXXXXXXXYXXXXXYXXXYX", "XXXXXXXXXXYXXXXYXXYXXYXYXYYXYXYXYYXXXXXYXYXXXXXXXY", "XXXXYYXYYXXYXXXXXXYXYXXXXXYXYXXYXXXXXXXXYXXXXYYXYX", "XXXYXXYXXXXXXXXYYXYXXXXXXXXXXYXXXXXXXYXYYYYXYYXXXY", "XYYYYXXYXXXXXXXYXXXYXXYXXXXYXXYYXXYXXXYXXXXXXXXXXY", "YYXXXXXYYXYXXXYYXXXYXXYXXYXYXYYXXXXXXXXXYXXXXXXXXX", "XXXXXXXXXXXXXXXYXXXXXYXYXXXXXXXYYYXXYXXXXYYYXXYYXY", "XXXXXXXXXYXYXYXXXYYYYXXYXXXYXYXXXXXXYYXXXXXYXXXXXX", "XXXXXXYXXXYXXYYXXXXYXXXYYXXXXYXXYYYXXXXYXXXXXYXXXX", "XXXXXYXXXXXXXYXXXYXXYXYXXXXXYXXXXXXYYXXXXXYYXYXXYY", "XXXYXXXXXXXXYXXXXXYXXXXXXYYXXXYXXYYYXXYXXYXXXYYXXX", "XXYXXXXXYYXYXXXYYXYXXXXXXXXXXXXXYXXXYYXYXXXXYXXXYX", "XXYXYYXYXXYXYXXXXYYXYXXXYXXXXXXXXXXXXXYXXXXYXYXXXX", "XYXXYXXXXXXYXXXXXYXXXXYYXYXXYXXXYYXYXXYXXXXXXXXXYX", "XYYXXXXXXXXYYXXXXXXXYYXYXXXXYXXXXXYYXXXYYYXXXXXXXX", "XYYYXXXXXYXYXYXYXYXXXXYXXXXXXXXXXXXXYYXXXYXXXXYXXX", "YXXXYYXXXXXXYXXYXXXXXYXXXXXYYXXXXXXXYXXYXXXXXXYXYY", "XXXXXXYXXYYXYXXYXXXXYYXYXXXYXXXXXXYXXXXXXXYYXXXXXX", "XXXYXXXXYXXYYXXXYXXXXXXYXXXXXYYXYXXYXXXXXXXXYXXXXY", "YXXXXXXXYXXYXYYXXXXYYXXYXXXXXYXXXXYXXXXXXXXYXXXXYX", "YXXXYXXXXYXXXXXXXYXXXXXXXYYXXYXXXXXXYYYXXXXXXYXXYX", "YXYXXXXXXYYXYXXXYXXXXXXXXXXXYXXXYXYYYXXXXXYXXXXXXX", "XXYXXXXXXXYYXXYXYXYXXXXXXXXXXXYXXXXXXXXXXYXXXXYYYX", "XXYXYXXXXYXXXXXXYXXXXYYXXXXXXYXYXXXXXYXXXXYXXXXXXY", "XYXYXXYYYXYXYXXXXXXXXXXXXXXXXXXXXXXXXXXXXXYXXYXYXY", "YXYXYXXXXXYXXYXXXXYXXXXXXXXXXXXXYYXXXYXYXXXYXXXXXX", "XXXXXXXYXXYXXXXXXXXXYXXXYXXXXXXXXXYYYXXXXXXYXYXXYX", "XXXXXXXYXXYXYYXXXXXXXXXYYXXXXXXXXXXXXYXXXYXXYXXYXX", "XXXXYXXYXYXYXXXXXXYXXXXYXXYYXXXYXXYXXXXXXXXXXXXXXX", "XXXYYXXXYXXYXXXXXXYXXXXXXXXYXXXYXXXXXXXXXYXXXYXXYX", "XXYXXXXXXXYXXYXXXXXYXXXXXXXXXYXXXYXYXXYXXXXXXXYXYX", "XXYXXXXXYXXXYYXXXXYYXXXXXXXXYXXXXXXYXXYYXXXXXXXXXX", "XYXXYXXXXYXXYXXXYXXXYXXXXXXYXXXYXXXYXXXXYXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXYYXXXXXXXXXYYXYXYXXXXXYYY", "XXXXXXXXXXYXXXXYXXXYXXXYXYYXXXXXXXXXXXXXXXXXXXYYXY", "YXXXYXXXXXXXXXXXXXXXXXXYXXXXXXXYXXXXXXYXXYXXYXYYXX", "YXYXXYXXXXYXXYXXXXXXXXXXXXXXXXXYXXXXXXXYXXYXXYXXXX", "XXXXXXXXYXYXXXXXXXXXYYXXXXXXXXXXYXXXXXXXYXYXXXXXYX", "XXXYXXXYXXXXXXXXXXXXXYXYXXXXXXXXXYXYXXXXXYXXYXXXXX", "XYXXYXXXXXXYXXXXXXXXXXXYXXXYXXXXXXXXXXXXXYYXXXXXXX"};
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    vector<string> names = {"XXXXXXXYXXXYXXYXYYXXYXXYYYYXXXXXXXYYXXXXXYYYXXXXYX", "XXXYXXXXXYYXXYYXXXXXXYXXXXXXXXXXXYXYXYXXYXXXXXXXXY", "XXYXXXYYXXXXXYYYXXXXYXXYXXXYYYXXXXXYXYXXXXYXXXXYYY", "YXXYXYXXXXXXXXYXYXXXYXXXXXXXYXXXXXXXXXXXXXYXXXXXXX", "XYXXXXXXYXXXXXXYXXXXXXXXXXXXXXXXXXXXXYXXXXYXXXXXYX", "XXXXXXYXXXXXYXXYXXXXYXXXXXYXXXXYXXXXYXXXXYXXXXXXXY", "XYXXYYXYXXYXXYXXXXYXXYXXXXYXYXYXXXXYXYXXXXXXXXXXXX", "XXYXYXXXYXXYYXXYXXXXXYXYXYXYXXYXXXXYYXXXXXXXYXXXYX", "XYXXYXYXXYYXXXYXYXXYXXXXXYXXXYXYYYXXXXXYYXXXXYYXXX", "XXYXXXXYYXXXXYXXXYXXXYYXYXYXXYXXYYXXXXXXYYXXXYXXYX", "XXYYXXXYXXXYXXXXXXXXYXXXXXYXXXYYXXXXXXXXXXXXXXXXXX", "XXXXXXYXXXXYXYXYXXYYYXXYXXYYYXXXXYYXXYXXXYXXXXXXXX", "XXXXXXXYXXYXYXXYXXXXXXXXXXYXXXYXXYXXXXXXXXYXYXXXXX", "XXXXYXYXXXXYXXXXYXXYXXXXXXXXXXXXXYXXXYYXXXXXYYXXYX", "XXXXXXXXXXXYXXXXXYXYXXXXXXXXXYXXXXXXXXXXXXXXXYXYYX", "XYYXXXXYXXXXXXXYXXXXXYYYXYXXXXYXYXXXXXXYXXXXXXXXYX", "XXXXXYYYXXXXYXXXXXXXYXXXXXXXXXYYXXXXXYXXXYXXXXXYYY", "XYXXXXXYXXXXXXXXXXXXXXXXXXXYXXYXXYYYYXXXXXXXXXXYXY", "XXYXXYXYXYYXXYXYXXXXXYXXXYYXXXXYXYYYXXXYXXXYXXXXXX", "XXXXXXYXYXXXXXXXXXYXYXXXXYXXXXXXYXXYXXXXXXXXXYXXXX", "XXXXXYXYXXXXXXXXYYXXXXXYXXXXXYXXXXXXYYYXXYXXXXXXXY", "XXXYXYYXXXXYXXXXXXXYXXYXXYYXXXXXXXXXXXXYYYXYYXXYXX", "XXXYXXXXXXXXXXXXYYXXXYXXXXYXYXXYXXXXYXXYYXXXYXYXXX", "XXYYXXXXXXYXYXYXYXXXYXXYYYYXYXYXXYXXXXXYYXXXXXXXXY", "XXXXXXXXXXYYXXXYXXXYYXXYYXXXXXXYXYXYXXXXXXXYXXXXYY", "XXXXXXXXXXXXXYYXXXXYXYXXYYYXXXYXXXXYYXXXXXXXYXXXXY", "XXXXXXXXXXYXXXYYYYXXXYYYXYXXXXXYXYYYYXYXYXYYXYXXYY", "YYXXXXXXXXXXYXXXYXXXXYXYXXXXXXXXYXXXXYXXXXXXXXXXXY", "XXXXXYXXXXXXXXXYYXXXYXYXYXXXXXYYXXXXXXYXXXYXXYXXXX", "YXYXXYYXYXXXXXYXYYYYYXYXYXXXXXYYXXXXXXXXXXXYXXXXXY", "XYXXXYXXXXXXXXXXXXXYYXXXYXYXXXXYXXXXYXYXYYXXXYXXYX", "YXXYXXXXXYXXYXXXXYXXXXXYXXXXXYXXXXXXYXXXYYXXXXXXXX", "YXXYXYXXXXYXYXXXYXXYXXXYYYYYXXXXXYXYXXXXXYXXYYXXYY", "XYXXYXXXYXYYXXYXXXYXXYXXXXXXYXXXXYXXXXXXXXXXXXXXXX", "XYXXXYYXXXXXXXXXYYYXXYXXXXXYXXXXXXXXXYXXXXXXXYXXXX", "XXXYXXYXXXXXYXYXXYXXXYXXXXXYXXYYXXXYYXYXXYXYXXXYXX", "XXYYYXYXXXXXXXXYYXXXYXYXXXYYXYYXXXYXXXXXYXYYXYXXXX", "XXXXYXXXXXXYXXXXXYYYXXYYXXXXXYXXXXXXXYYYYYXXXXYXXX", "XYXXYXXYXXYXYXYYXXXXXXXXXXYXXXXXXXYXXYXXXXXXXXXYXX", "YXXXYXYYYXXXXYXYXXXXYXYXXXYYXXXXYXYYXXXXXYXXXXYXXX", "XXYYXYYYXXXXXXXXXYXYXXXXYYYYXXXXYXXXYXXXYXXXXXXXXX", "YXXYXXXXXXXYYXXXXXXXXXXXXYYYXXXXYXXYXYYXYXXYXXXYXY", "XXXXXXXYXYXXXXXXYYYXXYXXXXXXXXXXYYXXXXYXXXXXXXXXXX", "YXYXYXXXXXXYYXXXXYXXXXXXXYXXXXYXXXXYXYYYYXYXXXXXXX", "XXXYXXXXXXXXXYYXXXXXYXXXXYYXXYXYYXXXYXXXXXXXYXXXYX", "YXYXXXXXXXYXXYYXXYXXXXXXXXXXXXYXXXXXXXYXYXXXXYXXXX", "XYXYXXXYXXXYXXXXXXYXXXXXXXXXYXXYXYYXXXXXYYXXXXXXXX", "XXXXYXXXYXYYXXYYYXXXYXXXYXXYXXYXXXYYXYXXYXXXXYYXXY", "XYYXXXXXYXYYYXXXXXXYXXXXXYXXXXXXXXYYYXXXYXYXXXYXYY", "XXXXYXXXXXYYYYXXXYYXXXXXXXYXXXXXXXXXXYXXXXXXYXXYXX"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"XXXXXXXXXXYXXXYYYYXXXYYYXYXXXXXYXYYYYXYXYXYYXYXXYY", "YXXYXYXXXXYXYXXXYXXYXXXYYYYYXXXXXYXYXXXXXYXXYYXXYY", "XXXXYXXXYXYYXXYYYXXXYXXXYXXYXXYXXXYYXYXXYXXXXYYXXY", "XXYXXXYYXXXXXYYYXXXXYXXYXXXYYYXXXXXYXYXXXXYXXXXYYY", "XXYYXXXXXXYXYXYXYXXXYXXYYYYXYXYXXYXXXXXYYXXXXXXXXY", "XXYYYXYXXXXXXXXYYXXXYXYXXXYYXYYXXXYXXXXXYXYYXYXXXX", "XYXXYXYXXYYXXXYXYXXYXXXXXYXXXYXYYYXXXXXYYXXXXYYXXX", "YXYXXYYXYXXXXXYXYYYYYXYXYXXXXXYYXXXXXXXXXXXYXXXXXY", "XXXXXXXYXXXYXXYXYYXXYXXYYYYXXXXXXXYYXXXXXYYYXXXXYX", "XXYXXXXYYXXXXYXXXYXXXYYXYXYXXYXXYYXXXXXXYYXXXYXXYX", "XXYXXYXYXYYXXYXYXXXXXYXXXYYXXXXYXYYYXXXYXXXYXXXXXX", "XYYXXXXXYXYYYXXXXXXYXXXXXYXXXXXXXXYYYXXXYXYXXXYXYY", "YXXXYXYYYXXXXYXYXXXXYXYXXXYYXXXXYXYYXXXXXYXXXXYXXX", "XXXXXXYXXXXYXYXYXXYYYXXYXXYYYXXXXYYXXYXXXYXXXXXXXX", "XXXYXXYXXXXXYXYXXYXXXYXXXXXYXXYYXXXYYXYXXYXYXXXYXX", "XXYXYXXXYXXYYXXYXXXXXYXYXYXYXXYXXXXYYXXXXXXXYXXXYX", "YXXYXXXXXXXYYXXXXXXXXXXXXYYYXXXXYXXYXYYXYXXYXXXYXY", "XXXXYXXXXXXYXXXXXYYYXXYYXXXXXYXXXXXXXYYYYYXXXXYXXX", "XXXYXYYXXXXYXXXXXXXYXXYXXYYXXXXXXXXXXXXYYYXYYXXYXX", "XXYYXYYYXXXXXXXXXYXYXXXXYYYYXXXXYXXXYXXXYXXXXXXXXX", "YXYXYXXXXXXYYXXXXYXXXXXXXYXXXXYXXXXYXYYYYXYXXXXXXX", "XXXXXXXXXXYYXXXYXXXYYXXYYXXXXXXYXYXYXXXXXXXYXXXXYY", "XYXXXYXXXXXXXXXXXXXYYXXXYXYXXXXYXXXXYXYXYYXXXYXXYX", "XYXXYYXYXXYXXYXXXXYXXYXXXXYXYXYXXXXYXYXXXXXXXXXXXX", "XXXXXXXXXXXXXYYXXXXYXYXXYYYXXXYXXXXYYXXXXXXXYXXXXY", "XXXXXYYYXXXXYXXXXXXXYXXXXXXXXXYYXXXXXYXXXYXXXXXYYY", "XXXYXXXXXXXXXXXXYYXXXYXXXXYXYXXYXXXXYXXYYXXXYXYXXX", "XXXYXXXXXXXXXYYXXXXXYXXXXYYXXYXYYXXXYXXXXXXXYXXXYX", "XYYXXXXYXXXXXXXYXXXXXYYYXYXXXXYXYXXXXXXYXXXXXXXXYX", "XXXXXYXXXXXXXXXYYXXXYXYXYXXXXXYYXXXXXXYXXXYXXYXXXX", "XXXXXYXYXXXXXXXXYYXXXXXYXXXXXYXXXXXXYYYXXYXXXXXXXY", "XXXXYXXXXXYYYYXXXYYXXXXXXXYXXXXXXXXXXYXXXXXXYXXYXX", "XXXXYXYXXXXYXXXXYXXYXXXXXXXXXXXXXYXXXYYXXXXXYYXXYX", "XXXYXXXXXYYXXYYXXXXXXYXXXXXXXXXXXYXYXYXXYXXXXXXXXY", "XYXXYXXYXXYXYXYYXXXXXXXXXXYXXXXXXXYXXYXXXXXXXXXYXX", "XYXYXXXYXXXYXXXXXXYXXXXXXXXXYXXYXYYXXXXXYYXXXXXXXX", "XYXXXXXYXXXXXXXXXXXXXXXXXXXYXXYXXYYYYXXXXXXXXXXYXY", "XYXXXYYXXXXXXXXXYYYXXYXXXXXYXXXXXXXXXYXXXXXXXYXXXX", "XYXXYXXXYXYYXXYXXXYXXYXXXXXXYXXXXYXXXXXXXXXXXXXXXX", "YXXYXXXXXYXXYXXXXYXXXXXYXXXXXYXXXXXXYXXXYYXXXXXXXX", "YXYXXXXXXXYXXYYXXYXXXXXXXXXXXXYXXXXXXXYXYXXXXYXXXX", "XXXXXXXYXXYXYXXYXXXXXXXXXXYXXXYXXYXXXXXXXXYXYXXXXX", "XXXXXXXYXYXXXXXXYYYXXYXXXXXXXXXXYYXXXXYXXXXXXXXXXX", "XXXXXXYXXXXXYXXYXXXXYXXXXXYXXXXYXXXXYXXXXYXXXXXXXY", "YYXXXXXXXXXXYXXXYXXXXYXYXXXXXXXXYXXXXYXXXXXXXXXXXY", "XXXXXXYXYXXXXXXXXXYXYXXXXYXXXXXXYXXYXXXXXXXXXYXXXX", "XXYYXXXYXXXYXXXXXXXXYXXXXXYXXXYYXXXXXXXXXXXXXXXXXX", "YXXYXYXXXXXXXXYXYXXXYXXXXXXXYXXXXXXXXXXXXXYXXXXXXX", "XXXXXXXXXXXYXXXXXYXYXXXXXXXXXYXXXXXXXXXXXXXXXYXYYX", "XYXXXXXXYXXXXXXYXXXXXXXXXXXXXXXXXXXXXYXXXXYXXXXXYX"};
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    vector<string> names = {"XXXXXYYXXYYXXXXXXXXXXXXYXXXYXXYXXXXXXXXXXYYXXXXXXX", "YXYXYXXXXXYXXYXXXXYYXXXXXYXXXXYXXXXYXXXYYXXXXXXXXX", "XXXXXXXXXXXXYXXXYXYXYYXYYXXYXXXXYYXXYXXXXXXXXYXXXX", "XYXXXXXXXXXXYYXXXXXXYXXXXXXXXXYXYXXXXXXXYXXXXYXYXX", "XXYXYYXXXXYXYXXXXXYYYXXXXYXYXXYXXXYXXXXXXXXXXXXXXX", "XXXXXXXYXXXXXXXXXXYXXXXXYXXXXYXXYXXXXXXXYXXXXYXXXX", "YXXXXYXXXXXXXXXXYXXXXYXYYXXYYYXXYXXXYYXXXXXXXXXXXX", "XXXXXXXXYXXXXXYYXXYXYXXXXXXXXYXXYYXYYXYYXXXYXXXYXY", "YXXXXXXYXXXXXXXXYYYXYXXYYXYXXXXYXYYXXXXXXXXXXYXXXX", "XXXXYYYYXXXYXXXXYYXYYXXXXXXXXYXXXXXYXXXXXXXXXXYXXX", "YXXXXYXYXYYXYXXXXYXXXYYXXYXXYYXXYXXYXYXXXXYXXXXXYY", "XXYXYXXYXXXYXXXYXXXXXXXXXXYYYXXXXXXXXXXXXYXYXXYXXX", "XXXXYYXXXXXXXXXXXYYXXXYYXXXXXXYXXXXXYXXXYXYYXXXXXX", "XXXXXXXXXXXXYYXXXYXYYXYXXYXXXXXYXXXXXYYYXXYXXXXXXX", "XYXXXXXYXXYXXYYXXXXXXXXXXXXXXYYXXYXXXXYYXXXXXXXXXX", "YXXXYXXYYXXXYXXYXXXXXYYXXXXXYYXXXXXYXXXXYYYXYXXYXX", "YXXXXXXXXXYYYXXXYYXYYXYXXXXXYXXYYXXYXXXYYYXXXXXYXY", "YXXXXXXXXYXYXYYYYXXXXXXXXXYXYXXXXXXXXXXXYXYXYXXYXX", "XXYYYXXXXXYXXXYXXXXYYXXXXXXYXXXXXXYYYXYXXXXXXXXYXX", "XXXXXXXXXXXXXYYXXYXXYYXYYXYXXXXXXXXXXXYYXXXXYXXXXX", "XXYXXXYYXXXXXXXXXXXXXXXYXXXXXXYXXXXYXXXXYXXXXXXYYX", "XXXXYXYXYYXXXXXXXXXYXXXXXXXXYXXXXXYXXYXXXXXYXXXXXX", "XYXXYXYYXXXXXXYXXYXXYXYYXYXXXXXXXXYXXXXYYXXXXXXXXY", "XXXYXXXXXXXXXXXXYXYXXXXXXYYXYXXXXXXXYXXYXXXXXXYXXX", "XXXYXXXXXXYXXXXXXYYXXXXXXXXXXXXXXXXXXXXXXXXXXXXXYX", "XXXXXXYXXYXXYXXXXYYXXXXXYXXXXXXYXYXXXXYXYXXYXXXXXY", "XXXYYYXXXXXXXXXYXXYXXYYYXXXXXXYYXYXXXXYYXYYXXXXXXX", "YYYXXXXXXXXXXXXXXXXXXXYXYXXXXXXXYXYXYYXYYXXXXXXXYX", "XXXXYYYYYXXYXYXYYYXXYYXYXXXXXXXYYXXYXXXXXYXXXXXYXX", "XYXXYYXXXXYXXXXXXYXXYXYXXXYYXYXXYYXXXYXXYXYXXXXYXX", "XXXXYXXXXXXXXXXXYYYXYXXYXYXYXXXXXXXXYXXYYXXXXXYYYX", "XXXXYXXXXYYXXYXXXXXYXXXXYXXXXXXXYXXXXXXYXXYXXXYYXX", "XXXXXYYXXXXXXXXXYYXXXXYXXXYXXXXYXXYXYXYXXXXXXXYYYX", "YYXXYXYXXXYYXXXXXXXXXXXXXXXXXXXXXXXXXYYXYXXYXXXXXX", "XXXXXXYXYYYYXXXXXXYYXXYYXXXYYXYXYXXXXYYXYXXXYXYYXX", "XXXYXXYXXXXXYXYYYXYXXYXXYYXXXXYYXYXXXXXXXXXYYXYYXX", "YYXXXXXXYYXXYYYYYXXXXYXXXXXXXYXXYXXXYXYXYXXXYXYXYX", "XYYXYYXXXXXXXYXYXYYYXYXYXXXXXXXXXXXXYYXYXXYXXXXXXY", "YXYXXXXYYXXXYXXXXXXXXXXXXYYYXYXYXXXXXXYYXYYYXXXXXY", "XYXXXXXXXYXYXXXXYXYXXXXXXYXYXXXXYXXYYXXXXYYXXXXYXX", "XXXXXXXXXXYXXXYXXYXXXXYXXXXYXXYYXXXXXXXYXXXYXXXYXY", "YXXXXXXXXXXXXXXYXXXXXYXYXYXYXXXXXXXXXXXXYXXXYXXXXX", "YXXXYXXYXXXYXYXXXXXXYYXXXXXXXXYXXXXXXXXXYXXXXXXXXX", "XXXYXXXYXXXXXXXXXXYXXYXXXXXXXXXXXXXXYXXYXXXXYXXYXY", "XXXXXYXXYYXYXXXXXXXXXYYXXXXXXYXYXYXYXXXXXXXYXXXXXY", "XXYXXXYYXXXXXXXYXYXXXXXXXYXXXXXXXXXXXXXXXXXXYYXXXX", "YXXXXXXXXXXXXXXXXYXXXXXXXYXYXYXXXXXYXXXXYXXXYXXXYX", "YXXXXXXXYXYYXXXXYXYXYYYYXYXXYXXXXXYXYXYXXXXXXXXXYX", "XXXXXXXXXXXXYXXXXYXXXYYXYXYYXXXYYXYXXXXYXXXYXXXYYY", "XXXXXYXXXXXXYXYXXXYYXYYXYXXXYYXXXYYXYYXXXXYXXXXXXX"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"XXXXXXYXYYYYXXXXXXYYXXYYXXXYYXYXYXXXXYYXYXXXYXYYXX", "XXXXYYYYYXXYXYXYYYXXYYXYXXXXXXXYYXXYXXXXXYXXXXXYXX", "YXXXXXXXXXYYYXXXYYXYYXYXXXXXYXXYYXXYXXXYYYXXXXXYXY", "YXXXXYXYXYYXYXXXXYXXXYYXXYXXYYXXYXXYXYXXXXYXXXXXYY", "YYXXXXXXYYXXYYYYYXXXXYXXXXXXXYXXYXXXYXYXYXXXYXYXYX", "XXXYXXYXXXXXYXYYYXYXXYXXYYXXXXYYXYXXXXXXXXXYYXYYXX", "XYXXYYXXXXYXXXXXXYXXYXYXXXYYXYXXYYXXXYXXYXYXXXXYXX", "XYYXYYXXXXXXXYXYXYYYXYXYXXXXXXXXXXXXYYXYXXYXXXXXXY", "YXXXXXXXYXYYXXXXYXYXYYYYXYXXYXXXXXYXYXYXXXXXXXXXYX", "YXXXYXXYYXXXYXXYXXXXXYYXXXXXYYXXXXXYXXXXYYYXYXXYXX", "YXYXXXXYYXXXYXXXXXXXXXXXXYYYXYXYXXXXXXYYXYYYXXXXXY", "XXXXXXXXXXXXYXXXXYXXXYYXYXYYXXXYYXYXXXXYXXXYXXXYYY", "XXXXXXXXYXXXXXYYXXYXYXXXXXXXXYXXYYXYYXYYXXXYXXXYXY", "XXXXXYXXXXXXYXYXXXYYXYYXYXXXYYXXXYYXYYXXXXYXXXXXXX", "XXXYYYXXXXXXXXXYXXYXXYYYXXXXXXYYXYXXXXYYXYYXXXXXXX", "XXXXYXXXXXXXXXXXYYYXYXXYXYXYXXXXXXXXYXXYYXXXXXYYYX", "XYXXYXYYXXXXXXYXXYXXYXYYXYXXXXXXXXYXXXXYYXXXXXXXXY", "XXXXXYYXXXXXXXXXYYXXXXYXXXYXXXXYXXYXYXYXXXXXXXYYYX", "XXYYYXXXXXYXXXYXXXXYYXXXXXXYXXXXXXYYYXYXXXXXXXXYXX", "XYXXXXXXXYXYXXXXYXYXXXXXXYXYXXXXYXXYYXXXXYYXXXXYXX", "YXXXXXXXXYXYXYYYYXXXXXXXXXYXYXXXXXXXXXXXYXYXYXXYXX", "YXXXXXXYXXXXXXXXYYYXYXXYYXYXXXXYXYYXXXXXXXXXXYXXXX", "XXXXXXXXXXXXYXXXYXYXYYXYYXXYXXXXYYXXYXXXXXXXXYXXXX", "XXXXXXXXXXXXYYXXXYXYYXYXXYXXXXXYXXXXXYYYXXYXXXXXXX", "XXXXXXYXXYXXYXXXXYYXXXXXYXXXXXXYXYXXXXYXYXXYXXXXXY", "XXXXXYXXYYXYXXXXXXXXXYYXXXXXXYXYXYXYXXXXXXXYXXXXXY", "XXXXYYYYXXXYXXXXYYXYYXXXXXXXXYXXXXXYXXXXXXXXXXYXXX", "XXYXYYXXXXYXYXXXXXYYYXXXXYXYXXYXXXYXXXXXXXXXXXXXXX", "YXXXXYXXXXXXXXXXYXXXXYXYYXXYYYXXYXXXYYXXXXXXXXXXXX", "YXYXYXXXXXYXXYXXXXYYXXXXXYXXXXYXXXXYXXXYYXXXXXXXXX", "YYYXXXXXXXXXXXXXXXXXXXYXYXXXXXXXYXYXYYXYYXXXXXXXYX", "XXXXXXXXXXXXXYYXXYXXYYXYYXYXXXXXXXXXXXYYXXXXYXXXXX", "XXXXXXXXXXYXXXYXXYXXXXYXXXXYXXYYXXXXXXXYXXXYXXXYXY", "XXXXYXXXXYYXXYXXXXXYXXXXYXXXXXXXYXXXXXXYXXYXXXYYXX", "XXXXYYXXXXXXXXXXXYYXXXYYXXXXXXYXXXXXYXXXYXYYXXXXXX", "XXYXYXXYXXXYXXXYXXXXXXXXXXYYYXXXXXXXXXXXXYXYXXYXXX", "XYXXXXXYXXYXXYYXXXXXXXXXXXXXXYYXXYXXXXYYXXXXXXXXXX", "YYXXYXYXXXYYXXXXXXXXXXXXXXXXXXXXXXXXXYYXYXXYXXXXXX", "XXXXXYYXXYYXXXXXXXXXXXXYXXXYXXYXXXXXXXXXXYYXXXXXXX", "XXXXYXYXYYXXXXXXXXXYXXXXXXXXYXXXXXYXXYXXXXXYXXXXXX", "XXXYXXXXXXXXXXXXYXYXXXXXXYYXYXXXXXXXYXXYXXXXXXYXXX", "XXXYXXXYXXXXXXXXXXYXXYXXXXXXXXXXXXXXYXXYXXXXYXXYXY", "XXYXXXYYXXXXXXXXXXXXXXXYXXXXXXYXXXXYXXXXYXXXXXXYYX", "XYXXXXXXXXXXYYXXXXXXYXXXXXXXXXYXYXXXXXXXYXXXXYXYXX", "YXXXXXXXXXXXXXXXXYXXXXXXXYXYXYXXXXXYXXXXYXXXYXXXYX", "YXXXYXXYXXXYXYXXXXXXYYXXXXXXXXYXXXXXXXXXYXXXXXXXXX", "XXYXXXYYXXXXXXXYXYXXXXXXXYXXXXXXXXXXXXXXXXXXYYXXXX", "YXXXXXXXXXXXXXXYXXXXXYXYXYXYXXXXXXXXXXXXYXXXYXXXXX", "XXXXXXXYXXXXXXXXXXYXXXXXYXXXXYXXYXXXXXXXYXXXXYXXXX", "XXXYXXXXXXYXXXXXXYYXXXXXXXXXXXXXXXXXXXXXXXXXXXXXYX"};
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    vector<string> names = {"YXXYYXXYXXXXXXXYXXXXXXXXXXXYYXYXYXXYXXXXXYXXXYXXXX", "XXXXXYXXXYYXXXXYYXXXYXXYXXXXXYXXXXXXXXXXXXYXYXXYXX", "XXXXYYYXXYXXXYXXXXYXYXXXXXXXXYXXXXYYXXYXXXYXXXYXXX", "XXXYYXXYXXYXXYYXXXXXXYXXXYXXXXYYXXYXXXXYXXYXYXXXXX", "YXXXXXYXXXXXYXYYXXYYXYYYXYXXXXXXXXXXYXXXXXYXXYXXYY", "XXXXXXYXXXYXXXXXXXYXYYXXYXYXYXXXXYXXXXYXYXXXXXXYXY", "XXXXXYYYYXYXXXXXYXXXXXXYXXYYYXYXYXYXYXXYXXYXYXXXXX", "XXXYXXYXXXYYXXXXXXXXXXXXXXXXXYXYXYXXXYXXYXXXXXYYXX", "YYXYXYXYXXXXXXYYYXYXXXXYYXXYXXXYYXXXXXXXXXXXYXYXYX", "YYXXXXXXYXYXXXYYXXYXXYXYXYXXYXXYXXXXXXXYXXXXXXXXXX", "XXXXYXXXXXXYYXXXXYXYYXXXXXYXXYXXYYXXXXXXXYXYYXXXXX", "XYXXXYYXYYXXXXXXXXXYXXXYXYXXYXXXXXYXXYYYXXXXYYXXXX", "XXXXYXYXXYYXXXXXXXXXYXXYXYXXXXXXXXYXYYYXXXXXXXXYXX", "XYXYYXXXYXXXXYYXXYXXXXYYXYXXXXXXXXXYXXXXXXYYXXXXXX", "YXYXYXXXXYXXXYXXXXXXXXXXXXXYXYXXXXXXXYXXXXXYXXXXXX", "YXYYXXYYYXXXYXYXXXYXXXXXYXYYXXYXXXXXYXXXXXXYXXYXYX", "YYXXXXXXYXYXYYXXXXXXYXYXXXYXXYXYXXYYYXXXXXXYXXXXYX", "XXXYYXXXXYXXYXXYXYXXXXXXXYYXXYXXYXXYXXXXYXXXYXXXYX", "XXXXXXYXYXXYYYXYXYXYYXXYYXXXYYXXYXXYXXXXXXXXYXYXYX", "XXYXXXXXXXYXXXYXYXXYXXXXXYXXYXYYXYYXXXXXXXXYXYXXXX", "XXXYXXYYXXXXXXXXXXYXYYXXYXYXXYYYXXYXYXXXXXXXXXYXXX", "XXXXXXYYXYXXXXXXXYXXXXXXXXXXXXXXXXXXXXXXXXXXXYXXXX", "XXYXXXYYXXXXXYXYXYXXXYXXYXXXXXXYXXXXYYXXXXXXYYYXYX", "XYXXXXXXXXXXXXXXXYXXXYXXYYXXYXXXXXYYYXXXXXXXXYXXXX", "XYXXXXXXXXXXXYXXYYYXYYYXYXYYXYYXXYXXXXXYXXYXYXYXXX", "XXXXXYXXYXXXXXYXXXYXYYYXXXXYXXYYYXXYYXXXXYXYXXXXXX", "XXXXXXXYXXXXYYXXXXXXXXXXYXXXXXXXXYXXYXXYXXYXXXXXYX", "XXYXYXXXXXXXXYYXXXXYXXXXXYXXYXXXYXYXXXXXYXXXXXYYXY", "XYXXXXXYXXYXXXXXXXXXXXXXYYXXYXXYXYYXYYXXYYXXXXXXYY", "YXXXXXYXXXXXYXXXXXXYXYYXXXXYYYXXXXXXXXXXXXXXXYXXXY", "XXXXXXXYXXYXXXXXXXXXXXYXXXXYYYXXXXYXYXXYYXXXYXXXXX", "YXXXYXXXXXXYXYXXXYYYXYYXXXXXXXXXXYXXYXXYXXXXYXXXXY", "XXYXYXXYYYXXXXYYXYXXXXYXXXXXXXYXXXXXXXXXXXXXXXXXYX", "XXXXXYXXXYXYXXXXYYYXXXXYXXXXXXXXYYXXXYYXXXXXXYYXXX", "XXXXXYXXYXXXXYXXXYXXXYYXXXXXYXXXYXXXXXXYXXXXXYXXXX", "YXXXXYXXXXXXXXYXXYXXXYYXXXYXXXXYXYXXXXXXXXYXYXXYXX", "YXYYXYXYXXXXXXXXXXYXXXXXYXXXXXXXYYYXXXXYXYXXXXXXXX", "YXXYXXXXXXXXXXXYXXYXXYXXXYYXXXXXYXYXXXXXXYXXXYXYYY", "XYXXXXXYXXYYXXXXXYXXXXXXYXXXXXYXXXYXYXXYYXYXYXXYXX", "XXYXYYXXXXXXYXXXXYYXXXXXXXYXYXYXXXYXXYXYXYXXXYYYXX", "XXYXXXXXYYXXXYXXXXXXXXXXXXXXXYYYXYXYXXXYXXXXXXXYYX", "YXYYXXXXXYXYYYXXYXXYYXXYYXYXXXYXXXXXXXXXXXXXYXXXXX", "XXXXXXYXYXYYXXXYXXXXXXYXXXXXXYXYXXXXXYYYXXXXXXYXXX", "XXXYXXXYXXYXXXXXXYXXXXXXXYXXXXXXXXXXXXXXXXXYYXXYXX", "XYXYXXXXYXYXXXXXXXXXXXXXXXYXYYXXXXXYXXXYYXXXXYYXYX", "YXXXXXXXXXYXXXXXXXXXXXXXXXXXXYXYYXXYXYYXXYXYXYYXXX", "YYYXYXXXYXYYXXXXYXXXXXXXYXXXXXXXXYXXYXXXYXXYXXXXXX", "XXXXXXXXXXYXXXYXYXXXXXXXXXXXXXYXXXXXYXXYXXXXXYXYXY", "XXYYYXYXYXYXXXXYXXYYXXYXXXXXYXXXXXYXYXXXXXXYYXXXYX", "XXXXXXXXXXXXXXYXXYYXYXXXXXXXXXYXXXXXXXXXXXYYXXYXXY"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"XXXXXXYXYXXYYYXYXYXYYXXYYXXXYYXXYXXYXXXXXXXXYXYXYX", "XYXXXXXXXXXXXYXXYYYXYYYXYXYYXYYXXYXXXXXYXXYXYXYXXX", "XXXXXYYYYXYXXXXXYXXXXXXYXXYYYXYXYXYXYXXYXXYXYXXXXX", "YXYYXXYYYXXXYXYXXXYXXXXXYXYYXXYXXXXXYXXXXXXYXXYXYX", "YYXYXYXYXXXXXXYYYXYXXXXYYXXYXXXYYXXXXXXXXXXXYXYXYX", "XXYXYYXXXXXXYXXXXYYXXXXXXXYXYXYXXXYXXYXYXYXXXYYYXX", "XXYYYXYXYXYXXXXYXXYYXXYXXXXXYXXXXXYXYXXXXXXYYXXXYX", "YXXXXXYXXXXXYXYYXXYYXYYYXYXXXXXXXXXXYXXXXXYXXYXXYY", "YYXXXXXXYXYXYYXXXXXXYXYXXXYXXYXYXXYYYXXXXXXYXXXXYX", "XXXXXYXXYXXXXXYXXXYXYYYXXXXYXXYYYXXYYXXXXYXYXXXXXX", "XXYXXXYYXXXXXYXYXYXXXYXXYXXXXXXYXXXXYYXXXXXXYYYXYX", "XYXXXXXYXXYXXXXXXXXXXXXXYYXXYXXYXYYXYYXXYYXXXXXXYY", "XYXXXYYXYYXXXXXXXXXYXXXYXYXXYXXXXXYXXYYYXXXXYYXXXX", "YXYYXXXXXYXYYYXXYXXYYXXYYXYXXXYXXXXXXXXXXXXXYXXXXX", "XXXYXXYYXXXXXXXXXXYXYYXXYXYXXYYYXXYXYXXXXXXXXXYXXX", "XXXYYXXXXYXXYXXYXYXXXXXXXYYXXYXXYXXYXXXXYXXXYXXXYX", "XXXYYXXYXXYXXYYXXXXXXYXXXYXXXXYYXXYXXXXYXXYXYXXXXX", "XYXXXXXYXXYYXXXXXYXXXXXXYXXXXXYXXXYXYXXYYXYXYXXYXX", "YXXXYXXXXXXYXYXXXYYYXYYXXXXXXXXXXYXXYXXYXXXXYXXXXY", "YXXYXXXXXXXXXXXYXXYXXYXXXYYXXXXXYXYXXXXXXYXXXYXYYY", "XXXXXXYXXXYXXXXXXXYXYYXXYXYXYXXXXYXXXXYXYXXXXXXYXY", "XXXXXYXXXYXYXXXXYYYXXXXYXXXXXXXXYYXXXYYXXXXXXYYXXX", "XXXXYXXXXXXYYXXXXYXYYXXXXXYXXYXXYYXXXXXXXYXYYXXXXX", "XXXXYYYXXYXXXYXXXXYXYXXXXXXXXYXXXXYYXXYXXXYXXXYXXX", "XXYXXXXXXXYXXXYXYXXYXXXXXYXXYXYYXYYXXXXXXXXYXYXXXX", "XXYXYXXXXXXXXYYXXXXYXXXXXYXXYXXXYXYXXXXXYXXXXXYYXY", "XYXYXXXXYXYXXXXXXXXXXXXXXXYXYYXXXXXYXXXYYXXXXYYXYX", "XYXYYXXXYXXXXYYXXYXXXXYYXYXXXXXXXXXYXXXXXXYYXXXXXX", "YYXXXXXXYXYXXXYYXXYXXYXYXYXXYXXYXXXXXXXYXXXXXXXXXX", "YYYXYXXXYXYYXXXXYXXXXXXXYXXXXXXXXYXXYXXXYXXYXXXXXX", "XXXXXXYXYXYYXXXYXXXXXXYXXXXXXYXYXXXXXYYYXXXXXXYXXX", "XXXXYXYXXYYXXXXXXXXXYXXYXYXXXXXXXXYXYYYXXXXXXXXYXX", "XXYXXXXXYYXXXYXXXXXXXXXXXXXXXYYYXYXYXXXYXXXXXXXYYX", "YXXXXXXXXXYXXXXXXXXXXXXXXXXXXYXYYXXYXYYXXYXYXYYXXX", "YXXXXYXXXXXXXXYXXYXXXYYXXXYXXXXYXYXXXXXXXXYXYXXYXX", "YXXYYXXYXXXXXXXYXXXXXXXXXXXYYXYXYXXYXXXXXYXXXYXXXX", "YXYYXYXYXXXXXXXXXXYXXXXXYXXXXXXXYYYXXXXYXYXXXXXXXX", "XXXXXXXYXXYXXXXXXXXXXXYXXXXYYYXXXXYXYXXYYXXXYXXXXX", "XXXXXYXXXYYXXXXYYXXXYXXYXXXXXYXXXXXXXXXXXXYXYXXYXX", "XXXYXXYXXXYYXXXXXXXXXXXXXXXXXYXYXYXXXYXXYXXXXXYYXX", "XXYXYXXYYYXXXXYYXYXXXXYXXXXXXXYXXXXXXXXXXXXXXXXXYX", "YXXXXXYXXXXXYXXXXXXYXYYXXXXYYYXXXXXXXXXXXXXXXYXXXY", "XXXXXYXXYXXXXYXXXYXXXYYXXXXXYXXXYXXXXXXYXXXXXYXXXX", "XYXXXXXXXXXXXXXXXYXXXYXXYYXXYXXXXXYYYXXXXXXXXYXXXX", "XXXXXXXXXXXXXXYXXYYXYXXXXXXXXXYXXXXXXXXXXXYYXXYXXY", "XXXXXXXXXXYXXXYXYXXXXXXXXXXXXXYXXXXXYXXYXXXXXYXYXY", "XXXXXXXYXXXXYYXXXXXXXXXXYXXXXXXXXYXXYXXYXXYXXXXXYX", "YXYXYXXXXYXXXYXXXXXXXXXXXXXYXYXXXXXXXYXXXXXYXXXXXX", "XXXYXXXYXXYXXXXXXYXXXXXXXYXXXXXXXXXXXXXXXXXYYXXYXX", "XXXXXXYYXYXXXXXXXYXXXXXXXXXXXXXXXXXXXXXXXXXXXYXXXX"};
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    vector<string> names = {"XYYXYXYYXYYXXXYYXYYXXXXXXXYXYXXYXYXXYXXYXYXXXXXYXX", "XYXXYXXXXXXXYYXXYXYXYXXXXXXXXXXYXXXYYXXXXXXXXYXXYX", "XYXXXXYXXXXYXXXXXYXYXYYXYYXXXXYXXYXXYXXXXXXXYXXYXX", "YXXXYXXXXXXYXXXXYYYYXYXXXXXXXXXXYYXXXXXYXXXXXXXXXX", "XYYXXXYXXXYXXXXXYXXXYXXXXXYXYYXXXXYXYXXYXXXXXXYXXY", "XXYYXXXXXXXYXXYYYYXXYXYYXYXXXYXXXXXXXYXXYXYXXXYYXX", "YXXXYYXXYYYXXXXXXYXXXXYXXXXXYXXXXXXXXXXXXXXYXXXXXX", "YXXXXXXXXXXXYXXXXYXXXXXYYXXXXXXXYXXXXXYXYXXXXXXXXY", "XXXXXYXYYYXYXXXXXYXXXXXYXYXXXYXXYXXXYXYXYYXXXXXXXY", "YXXXXYXYYXXXYXXXXYXXXYXXXXXXXXXYXXYXXXXXYYXXXXXXXY", "XXXXXXXYXXXYXXXXXYXXXYYXXXXXXXXXXYXXYXYYXXXXYXXYXX", "XYXXXXXXXXXXXXYXXXXXYYXXYXXXXXXXYXYXXXXXXYXXXYYXXX", "XXXXXXXYYXXYXXXXXXYXXYXXYXXXXXXXXYXXYYXXXXXXXXXYXX", "XYYXXYYXXXYYYYXXXXXYXXXXXXYXXXXXXXXXXXXXYXXXXXXXXX", "XXXXXXXXXXYXXYYXXYXXYYXXXXXXXXYYYXXXXXXXXYYXXXYXYX", "XXXXXXXXXYXYXXXYYXXYXXXXXXXYYXYXYXXXXXXXXYXXXXYXXY", "XXXYXXXYXXXXYXXXYXXXXYXYYXXXYXXXXYXXXXXXXXXXXYXYXX", "YXYXYXXXYYXYXYXXYXYXXYXXYXXXXXXYXXYYXXYXXXXYXXXXXX", "XXXXYXXXYXXYXYYXYXYXXYXYXYXYXXYXYYXYXXXXYXYYXXYXXX", "YXXXXXYXXXXXXXYXXXXYYXXXYXXXXXXXXXXXXXYXXXXXXXXXXY", "YXXXXXXXXXXXYXXXXXXXYXXXXYXXXXYXXYYXXXYXXYXYXXXXXX", "XYXXYXXYXXXXYXXXXYXYYYXYYXXXYXYXYXXXXXXXXXXYXXXXXX", "YYXYYYYYXXYXYXXXXXXXXXXXXXXXYXXXYXXXYXYXYXXXYYXYXX", "XXXXXYXXYXYXXXXXXXYXXYXXXXXXXXXXYXXXYYXXXYXXXXXXXY", "XXXYYYXXXXYYYXYYXXXXXYXYYYXXYYYXYXXXYXXYXXYYXXXXXX", "XYXXXYXXXYXYXXXXXXYYXXYYXXXXYXXXYXYXXXXYXXXXXXXYXX", "YXXXXYYXYXXXXXXXYXXXYXXXXXYYXYXXYXXXXXXXYXXXXXXXYX", "YXYXXXXXXXXXXYXYXYXXXYXYXXXXXXXYXYXXXXXXXXXXYXXXXY", "XXYXYXXXXXXXXXXYXXXXXYXXXXXXXXXXYYXXXXXXXYXYXXXXYX", "XXYXYYXXXXXYXYXXXXXXXXXYXXXYXYXYXXXYXXXXXYXYYXXXXX", "YXYYXYYYYXXXXXXXXXXXXXYXXXXXYXXXXXXXXXXXXXXXXYXXXY", "YXXXXXXXYYXXXXYXYXXXXXYYXYXXXXXXXXXXXXXXXXXXXXYYYX", "XYYXXYXXXXXXYYXXYXXXXXXXXXXXXXYXXXXXXXXYXXXXYXXXYX", "XYXXXXXYXXXXYYXXXXYXYYXXXXXXXXXXXXXXXYXXYXXXXYXXXX", "XXXXXXXXYXYXYXXXXXXXXXXXYYXXXXXXXXYXXYXXXXYXXYYXXX", "XYXXXXYYXXXXYXXXXYXXXXYXXXXXXXYXXXXYXYYXXXXYXXXYYX", "YYXXXYYXXXYXYXXXXYYYXYXYXXYXXXXXXXXYYYYXXXXYXXXXXX", "XYXXXXXYXXXYXXYXXXXXXYXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXYXXYXXXXXYXXXXXXXXYXYXXYXXXXYXYYYXYXYXXXYXYXX", "XXXXYXYXYXXXXXXXXXXXXXXYXXXXXXXXXXXXXXXXYXYYXYXXYX", "XYYYYYXXXXXXXXXXXXXXXXYYXXXYXYXXXXXXXXXYXXYXXXXXXX", "XYXXXXXYXXXXXXXYXYYYYYYXXXYXXXXYXXXXXXXXXYXXYXXYXX", "XXXYXXXXYYYXXXXYXXXYXXXYXXXYYYXXXYXXYXXYXXXXXXYXYX", "XXYXXXXYXXXXXXXXYXXYXXYYYXXXXYXYXXXXXXXYXYXXXXXXXX", "XXYXXXXXXXXXYYXXXXXXXXYXYXXXXXXXYXXXXYXXXXXXYXXXXY", "XXXXXXXXXYXYYXXXXYYXXYXYXXXXXXYXXYYXXXXYXYXXYXYYXX", "XXXXXXXYXYXYXYXXYXYXYYXXXXYXYYXYYYXXYXXXXXYXXXXXYX", "XXXYXYXYXXXXXXXYXYXXXXXXYXXXYYXXXXXXXXXXXXXXYXXXXY", "YXYXXXXYXXXXXXXXXXXXXYYXXXXXXXXXXXYYXXYXYXXXYXXXYX", "XXXYXXXYXYXXXXXYYYXXXXYXXXXYXXXXYXXXXXYXYYYXYXXYXX"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"XXXYYYXXXXYYYXYYXXXXXYXYYYXXYYYXYXXXYXXYXXYYXXXXXX", "XXXXYXXXYXXYXYYXYXYXXYXYXYXYXXYXYYXYXXXXYXYYXXYXXX", "XYYXYXYYXYYXXXYYXYYXXXXXXXYXYXXYXYXXYXXYXYXXXXXYXX", "XXXXXXXYXYXYXYXXYXYXYYXXXXYXYYXYYYXXYXXXXXYXXXXXYX", "XXYYXXXXXXXYXXYYYYXXYXYYXYXXXYXXXXXXXYXXYXYXXXYYXX", "YYXXXYYXXXYXYXXXXYYYXYXYXXYXXXXXXXXYYYYXXXXYXXXXXX", "YYXYYYYYXXYXYXXXXXXXXXXXXXXXYXXXYXXXYXYXYXXXYYXYXX", "YXYXYXXXYYXYXYXXYXYXXYXXYXXXXXXYXXYYXXYXXXXYXXXXXX", "XXXXXXXXXYXYYXXXXYYXXYXYXXXXXXYXXYYXXXXYXYXXYXYYXX", "XXXXXYXYYYXYXXXXXYXXXXXYXYXXXYXXYXXXYXYXYYXXXXXXXY", "XXXYXXXXYYYXXXXYXXXYXXXYXXXYYYXXXYXXYXXYXXXXXXYXYX", "XXXYXXXYXYXXXXXYYYXXXXYXXXXYXXXXYXXXXXYXYYYXYXXYXX", "XXXXXYXXYXXXXXYXXXXXXXXYXYXXYXXXXYXYYYXYXYXXXYXYXX", "XYXXXXXYXXXXXXXYXYYYYYYXXXYXXXXYXXXXXXXXXYXXYXXYXX", "XYXXXXYXXXXYXXXXXYXYXYYXYYXXXXYXXYXXYXXXXXXXYXXYXX", "XYXXYXXYXXXXYXXXXYXYYYXYYXXXYXYXYXXXXXXXXXXYXXXXXX", "XYYXXXYXXXYXXXXXYXXXYXXXXXYXYYXXXXYXYXXYXXXXXXYXXY", "XXXXXXXXXXYXXYYXXYXXYYXXXXXXXXYYYXXXXXXXXYYXXXYXYX", "XXYXYYXXXXXYXYXXXXXXXXXYXXXYXYXYXXXYXXXXXYXYYXXXXX", "XYXXXXYYXXXXYXXXXYXXXXYXXXXXXXYXXXXYXYYXXXXYXXXYYX", "XYXXXYXXXYXYXXXXXXYYXXYYXXXXYXXXYXYXXXXYXXXXXXXYXX", "XXXXXXXXXYXYXXXYYXXYXXXXXXXYYXYXYXXXXXXXXYXXXXYXXY", "XYXXYXXXXXXXYYXXYXYXYXXXXXXXXXXYXXXYYXXXXXXXXYXXYX", "YXXXXYXYYXXXYXXXXYXXXYXXXXXXXXXYXXYXXXXXYYXXXXXXXY", "YXXXXYYXYXXXXXXXYXXXYXXXXXYYXYXXYXXXXXXXYXXXXXXXYX", "XXXXXXXYXXXYXXXXXYXXXYYXXXXXXXXXXYXXYXYYXXXXYXXYXX", "XXXYXXXYXXXXYXXXYXXXXYXYYXXXYXXXXYXXXXXXXXXXXYXYXX", "XXYXXXXYXXXXXXXXYXXYXXYYYXXXXYXYXXXXXXXYXYXXXXXXXX", "XYYXXYYXXXYYYYXXXXXYXXXXXXYXXXXXXXXXXXXXYXXXXXXXXX", "XYYYYYXXXXXXXXXXXXXXXXYYXXXYXYXXXXXXXXXYXXYXXXXXXX", "YXXXXXXXYYXXXXYXYXXXXXYYXYXXXXXXXXXXXXXXXXXXXXYYYX", "YXXXYXXXXXXYXXXXYYYYXYXXXXXXXXXXYYXXXXXYXXXXXXXXXX", "YXYXXXXXXXXXXYXYXYXXXYXYXXXXXXXYXYXXXXXXXXXXYXXXXY", "YXYXXXXYXXXXXXXXXXXXXYYXXXXXXXXXXXYYXXYXYXXXYXXXYX", "YXYYXYYYYXXXXXXXXXXXXXYXXXXXYXXXXXXXXXXXXXXXXYXXXY", "XXXXXXXXYXYXYXXXXXXXXXXXYYXXXXXXXXYXXYXXXXYXXYYXXX", "XXXXXXXYYXXYXXXXXXYXXYXXYXXXXXXXXYXXYYXXXXXXXXXYXX", "XXXXXYXXYXYXXXXXXXYXXYXXXXXXXXXXYXXXYYXXXYXXXXXXXY", "XXXYXYXYXXXXXXXYXYXXXXXXYXXXYYXXXXXXXXXXXXXXYXXXXY", "XYXXXXXXXXXXXXYXXXXXYYXXYXXXXXXXYXYXXXXXXYXXXYYXXX", "XYXXXXXYXXXXYYXXXXYXYYXXXXXXXXXXXXXXXYXXYXXXXYXXXX", "XYYXXYXXXXXXYYXXYXXXXXXXXXXXXXYXXXXXXXXYXXXXYXXXYX", "YXXXXXXXXXXXYXXXXXXXYXXXXYXXXXYXXYYXXXYXXYXYXXXXXX", "YXXXYYXXYYYXXXXXXYXXXXYXXXXXYXXXXXXXXXXXXXXYXXXXXX", "XXXXYXYXYXXXXXXXXXXXXXXYXXXXXXXXXXXXXXXXYXYYXYXXYX", "XXYXXXXXXXXXYYXXXXXXXXYXYXXXXXXXYXXXXYXXXXXXYXXXXY", "XXYXYXXXXXXXXXXYXXXXXYXXXXXXXXXXYYXXXXXXXYXYXXXXYX", "YXXXXXXXXXXXYXXXXYXXXXXYYXXXXXXXYXXXXXYXYXXXXXXXXY", "YXXXXXYXXXXXXXYXXXXYYXXXYXXXXXXXXXXXXXYXXXXXXXXXXY", "XYXXXXXYXXXYXXYXXXXXXYXXXXXXXXXXXXXXXXXXXXXXXXXXXX"};
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test67() {
    vector<string> names = {"XXXXXXXXXXXYXYXXXYYXXYXYXXXXXXYXXXXXXXXXYYXYXYXXXY", "XXYXXYXXXXXXXXXYXXXXXXXYYXXYXYXYXXXXXXXXXYXYXXYXXX", "YXYXXYXXXXXXXXXXXYYXXXXXYXXXYYYXXXYXXXXXXXXXXXXXXX", "XXXXXYXXYXXXXXXXYYYXXXYXXXXXXXXYXXXYXYXXXXYXXXXXXX", "XYXYXYXXXXYXYYXYYXYXXXXXXYXXYXXXXXXXXYYXXXXXYXXXXX", "XXYXXXXXYXXXYYYXYXXXXYXXYXXXXXYYXXYXXXXXYXXXXYXYXX", "XYXXXXXXYXXXXYXYXYXYXXXXXYXXXYYXYXXXYYXXYYXXXXXYYX", "XYXXXYXXYXXYXXXXXYXXXXYXXXXXYYXXXXXYXXXXXXXXXXXYXX", "XXXXXXXXXXYXYXXYYYYXXYXXXXXXXXYXXXXYXXXYXXXXYYXYXX", "XYXXXYXYXXYXXYXXYXXXXXYXYXXXXXYYXXXXXYXXXYXXXXXXXX", "XXXXXYXXXXXXXXXXXXXXXXXXXYXYYXYXXXXYYXYXXXXXXXXXXX", "XXXYYYYXYXXXXYXXXXXXXXXYXYXXXXYXXYXYXXYXYXYXXXYXYX", "XXXXXYXXYXXXXYXYYYXYYXXXXXXXXYXXYXXYXXXYXXYXXXXYXX", "YXXXXXXYXXYXXXXXXXXYXXXYXXYXXXYXXYXYXYXXXYXYXXXXXX", "XYXYXXXXXYXXXYXXYXYYXXYXXXYYYYXXXXXXXXXXXXXXYXYXXX", "XYXYXXXXYXYXYYXXYXXXYYYXXXXXXXXXXXYXYXYXXXXYYXXXXX", "YXYYYXXXXYXXYXXXXXXYXXXYXXYXXXXXYXXXXXXXYYXXYXXXXX", "XXXXXYXYXXXYXXXXXYXXXXXYXXYYYXXYXXXXXXXXXXYXXXXXXX", "XXXXXXXXXXYYXYXXXXYXXXXXYYXXYXYYXXXXYXXXXYXXYXXYYX", "XXXXXXXXYXXXXXXXXXYYXXXYYXXYYXYXYXXXXYXXYXXXXXYXXY", "XXYXXXXXXXXXXYXXXYXXXYYXXXXXXXXXXXXYXXYXXXYXYXYXXX", "XYXXXXXXXXXXYXXYXXXXYXXYXYXYXXXXXXXXXXXYXXXYYYXYYY", "XXYYXYXYXXYXXXXXYXYYXYYXYYXXXYXYXXXXXXXXYXXXXYXXXY", "XXXXXXXXXYXXXYXXXYXXXYYXXXXXXXYXXYXXXXYYXXXXXXXXXX", "YYXYXXXYXXXXXYXXXXXXXXXXXYXXXXXXYXYXXXXXXYYYYXXXXX", "XXXXYXYXXYXXXXXXXXXXXXXXXXXYXXXXYYXXXXXXYXXYYXXXYX", "XXYXXXXXYYXXXYYYXXYXXYXYXYXXYXXYXXYXXXXXXYXYXYXYXX", "XXXYYYXYXYXXXYYXYXXYXXXXXYYYXXXYXXXXXXXXXXXXXXXXXX", "XXYXXXXXXXXYYXXXYXXXXXYXYXXYYXYYXXYXXXYXXXYXXXXXYX", "XXXXXXXXXYXXXXXXXXYXYYYYXXYXXYXYXYXXXXXXYXXXXXYXYX", "XXYXYXXXYXXXYXXXXYYXXXXXXYYXXYXXXXYXXYXXXXYYXXXXXX", "XYXYYXYYXXYYXXXXYXXYXXXXXXYXYXXYXXYXXXXYXYXYXXYXXX", "XXXXXXYXYXXXXXXXXYXYXXXYXXXXXXYXXXYYYXXXXXYXXXXYXX", "XXXXXXYXXXXXXXYXXXXXYXXXYXXYYXXYXYXYYXXXXXXXXXYXXX", "XYXYXXXXXXYXYXXXYXXXYXXYXXXXXXXXXXYXXXXXXXXYXYYXYX", "XXYYXXXXYYXXXXXXYXXXYXXXXXYXXXXXXYYXYXXXXXXYYXXXXX", "XXXXXXXYXXYXYXYXYXYXYXXYYXYYXXYYXXXXYXXXXXXXXXXXYX", "YXXXYXXXXYXXXXXXXXXXXXXXXYXYXXXXXYXXXXYXXXXYXXXXXY", "YXXXXYXXYYXYYXXXXYYXYYXXXXXXXXXXXXXXXXXYYXXXXYXYXX", "XXXXYXXYXXXXXYXYXYYXXXYXYYXXXYXXXXXXXYXXXYYXXXXXXX", "YXYXXYXXXXXXYYXXXYXYXXXXYXYXXXXXYYXXXXXXYXXXYYXXXX", "XXYXYYXXXXXXXXXXYXXXXXXYXXYYYXXXXXYXXXXXXXYXXXXXXX", "XXXXXYXYXXYXXXXXYXXXYXYXXXXXXXXYXYXXXXYYYXXXXXYYXY", "YYYXXXXYXXYXXYYXYYYXXYXXXXXXXXXXYYXXXXXXXYYYXYYXXY", "XXXXXXYXYXXXYXYYXXXYXYXXXYXXXXXXXXXXYXXXXXXXXXXXXX", "XXXYYXYXYXXXXXXXYXXYXXXYXXXXXYXXXXXXYXXXXYXXXYYXXX", "XXXXYXYXXXYXXYYYXXXXXYYXXXXXXXXXXXYXXXYXXXXXYXXXXX", "YXYYXXXXXYXXXXXXXXXXXYXXXXXXYXXXYYXYXXXXXYYXXXXXXX", "XXXXYXXXXXXXXXYXYXXYXYXXXXXYXXXYXXXXXXXXXYYXYXXYYX", "XXXXXXYYYXXXXXXYYXYYXXYXXXYXXXXXXXYYXXXXXXXXXXXYXX"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"YYYXXXXYXXYXXYYXYYYXXYXXXXXXXXXXYYXXXXXXXYYYXYYXXY", "XXYXXXXXYYXXXYYYXXYXXYXYXYXXYXXYXXYXXXXXXYXYXYXYXX", "XXYYXYXYXXYXXXXXYXYYXYYXYYXXXYXYXXXXXXXXYXXXXYXXXY", "XYXYYXYYXXYYXXXXYXXYXXXXXXYXYXXYXXYXXXXYXYXYXXYXXX", "XXXYYYYXYXXXXYXXXXXXXXXYXYXXXXYXXYXYXXYXYXYXXXYXYX", "XYXXXXXXYXXXXYXYXYXYXXXXXYXXXYYXYXXXYYXXYYXXXXXYYX", "XXXXXXXYXXYXYXYXYXYXYXXYYXYYXXYYXXXXYXXXXXXXXXXXYX", "XYXYXXXXYXYXYYXXYXXXYYYXXXXXXXXXXXYXYXYXXXXYYXXXXX", "XXXXXXXXXXYYXYXXXXYXXXXXYYXXYXYYXXXXYXXXXYXXYXXYYX", "XXXXXYXXYXXXXYXYYYXYYXXXXXXXXYXXYXXYXXXYXXYXXXXYXX", "XXXXXYXYXXYXXXXXYXXXYXYXXXXXXXXYXYXXXXYYYXXXXXYYXY", "XXYXXXXXXXXYYXXXYXXXXXYXYXXYYXYYXXYXXXYXXXYXXXXXYX", "XXYXXXXXYXXXYYYXYXXXXYXXYXXXXXYYXXYXXXXXYXXXXYXYXX", "XYXXXXXXXXXXYXXYXXXXYXXYXYXYXXXXXXXXXXXYXXXYYYXYYY", "XYXYXXXXXYXXXYXXYXYYXXYXXXYYYYXXXXXXXXXXXXXXYXYXXX", "XYXYXYXXXXYXYYXYYXYXXXXXXYXXYXXXXXXXXYYXXXXXYXXXXX", "YXXXXYXXYYXYYXXXXYYXYYXXXXXXXXXXXXXXXXXYYXXXXYXYXX", "YXYXXYXXXXXXYYXXXYXYXXXXYXYXXXXXYYXXXXXXYXXXYYXXXX", "XXXXXXXXXXYXYXXYYYYXXYXXXXXXXXYXXXXYXXXYXXXXYYXYXX", "XXXXXXXXXYXXXXXXXXYXYYYYXXYXXYXYXYXXXXXXYXXXXXYXYX", "XXXXXXXXYXXXXXXXXXYYXXXYYXXYYXYXYXXXXYXXYXXXXXYXXY", "XXXXYXXYXXXXXYXYXYYXXXYXYYXXXYXXXXXXXYXXXYYXXXXXXX", "XXXYYYXYXYXXXYYXYXXYXXXXXYYYXXXYXXXXXXXXXXXXXXXXXX", "XXYXYXXXYXXXYXXXXYYXXXXXXYYXXYXXXXYXXYXXXXYYXXXXXX", "YXYYYXXXXYXXYXXXXXXYXXXYXXYXXXXXYXXXXXXXYYXXYXXXXX", "XXXXXXXXXXXYXYXXXYYXXYXYXXXXXXYXXXXXXXXXYYXYXYXXXY", "XXXXXXYYYXXXXXXYYXYYXXYXXXYXXXXXXXYYXXXXXXXXXXXYXX", "XXXXYXXXXXXXXXYXYXXYXYXXXXXYXXXYXXXXXXXXXYYXYXXYYX", "XXXYYXYXYXXXXXXXYXXYXXXYXXXXXYXXXXXXYXXXXYXXXYYXXX", "XXYYXXXXYYXXXXXXYXXXYXXXXXYXXXXXXYYXYXXXXXXYYXXXXX", "XYXXXYXYXXYXXYXXYXXXXXYXYXXXXXYYXXXXXYXXXYXXXXXXXX", "XYXYXXXXXXYXYXXXYXXXYXXYXXXXXXXXXXYXXXXXXXXYXYYXYX", "YXXXXXXYXXYXXXXXXXXYXXXYXXYXXXYXXYXYXYXXXYXYXXXXXX", "YYXYXXXYXXXXXYXXXXXXXXXXXYXXXXXXYXYXXXXXXYYYYXXXXX", "XXXXXXYXXXXXXXYXXXXXYXXXYXXYYXXYXYXYYXXXXXXXXXYXXX", "XXXXXXYXYXXXXXXXXYXYXXXYXXXXXXYXXXYYYXXXXXYXXXXYXX", "XXXXYXYXXXYXXYYYXXXXXYYXXXXXXXXXXXYXXXYXXXXXYXXXXX", "XXYXXYXXXXXXXXXYXXXXXXXYYXXYXYXYXXXXXXXXXYXYXXYXXX", "YXYYXXXXXYXXXXXXXXXXXYXXXXXXYXXXYYXYXXXXXYYXXXXXXX", "XXXXXYXXYXXXXXXXYYYXXXYXXXXXXXXYXXXYXYXXXXYXXXXXXX", "XXXXXYXYXXXYXXXXXYXXXXXYXXYYYXXYXXXXXXXXXXYXXXXXXX", "XXXXYXYXXYXXXXXXXXXXXXXXXXXYXXXXYYXXXXXXYXXYYXXXYX", "XXYXXXXXXXXXXYXXXYXXXYYXXXXXXXXXXXXYXXYXXXYXYXYXXX", "XXYXYYXXXXXXXXXXYXXXXXXYXXYYYXXXXXYXXXXXXXYXXXXXXX", "XYXXXYXXYXXYXXXXXYXXXXYXXXXXYYXXXXXYXXXXXXXXXXXYXX", "YXYXXYXXXXXXXXXXXYYXXXXXYXXXYYYXXXYXXXXXXXXXXXXXXX", "XXXXXXXXXYXXXYXXXYXXXYYXXXXXXXYXXYXXXXYYXXXXXXXXXX", "XXXXXXYXYXXXYXYYXXXYXYXXXYXXXXXXXXXXYXXXXXXXXXXXXX", "YXXXYXXXXYXXXXXXXXXXXXXXXYXYXXXXXYXXXXYXXXXYXXXXXY", "XXXXXYXXXXXXXXXXXXXXXXXXXYXYYXYXXXXYYXYXXXXXXXXXXX"};
    if(result == expected) {
        cout << "Test Case 67: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 67: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test68() {
    vector<string> names = {"YXXYYXXXYXXXXXXXXYYXXXYXXXXYXYXXXXYXXXXXYXYXYYXXXX", "XYXXYXXXXXXXYXXXYXXXXXXXXXXXXXYXXXYXYYXXYXXXXYXYXX", "XXYXXXXYXXYXXXXYXXXXXXXXYYXXYXXXXYXXYXXXYYXXYXYYXX", "XXXXXXXXXXYYXXXYYXXXXXXXYYXXYXXYXXXXXXXYXYYYXXXXXX", "XXYXXYXXXYXXXXXYXYXYXXXYXXXXYXXXYYXXXXXXXXYXYYYXXY", "XXYXYXXXXYXXXXYXXYYXYXXXYXXXXXYXXYXXXXXXXYYXXXXXXY", "XXXXXXXXYXYXYXXXYXXXXYXYXXXXXXYXXXXXXXXXXXXXXYXXXX", "XXYYXXXYXXXXXXXYYXXYXXXXXYYXXXYXXYYXYXXXXXXYYXXXXX", "XXYXXXYYXXYXXYXXYXYXXXXXXXXYYXXXXYXXYXXXXXXXYXXXXY", "XXXXYYXYXXXXXYYXXXXXXYYXXYXXXYXXYXYYXYXXXXXYXXXYXY", "XXXXXXYXYXXXYXXXXXXYXXXXXXYXYXYXXXXYXYXYXXXXXXXXXX", "XXXYXXXXXYXXXXXXXYXXXXYXYXYYXXXXYXXXYXXXXYXXYYXXXY", "YXXXXXXYYXXYXXXYYYYYXXXXXXXXXXXXXYYXYXXXXXXXXYXXXX", "YXYXYXXYYXXYXXXXYXXXYXXXXXXXYXYXXXXXXXXYXXXXYXYXXX", "YXXXXYXYXXYXYXXXYXXXXYYXXXXXXXYYXXXXXXXYXXXXXYYXYX", "XYXXXXXXXXXXXXYXYXXXXXXXXXXXYYXXXXXXYYXYXYXXXYXXYY", "XXXXXXXXXXXYXXYYYXXYXXXXXXYXYYXYXYXXXYXXYXXXXYXXXX", "YYXYXXXXYXXXXYXXYXXXYXXXXXXXXXXXXXYXYXXXXYXXYXYXYX", "XXXXYXXXXXYXXXYYYYXYYXXXXXXYYXXYXYYXXYYYYYXXYXXXYX", "YXXXYXYXYXYXXXYXXXYXXXXXXYYXYXXXYXXXXYXXYYXXYYXXXX", "XXXXXXYXXXXXXXYYXXXYXYXYXXYYXXYYYYXXXYYYYYYXXYXXXX", "XYXXXXXXXXXYXYXYXXXYXXXXXYYXXXXXXXYXXXXXXXXXXXXYXX", "XXXYXXYXXXXXXYXXXXYXYYXXYXXYXXXYYXXXYXXYXXXXXXXYXX", "XXXXXXXXYXXXXXXXXXXYYYXYXXXXXXXXXYYYXYYXXYXXXXXXXX", "XXXXXYXYXXXXYXXXXXXXYXXXXXXXYXXYXXYXYXXXYXXYXXYXXX", "XXXYXYXXXXYYXYYYXXXYXXYXXYXXXXYXXYXYYXXXXYXXXXXXYX", "XXYXXYYYXXXYXXXYXXYXXXXYXYXXXYXXXXYXXXXXXXXXYXXYYX", "YXXXXYYXXXYYYXXXYXXYXXXXXXYYYXYYXYYXXXXYXXXYXXXXXX", "XXXYXXYXXXYXYXYYXXXXXXYXXXXXXXXXXXYXXXXXXYXXXXXXYX", "XXXYXXXXXXXYXXXXXXXXYXXXYXXYYXXXXXXXXXXXYXXXXXXXYY", "XXXXXXXXXXXXXYXXXXYXXXXYYXYXXXXYXXXXXXXXXXXXXXXXYX", "XYXXXXXXXXYYXYXXXYXXXXXXXXXXYXXXYXXXXXXXXXYXXXXYXX", "XXXXXXXYYXXXXXXXXXYYXYXXYXXXXXXXXXXYXXXXYYYYYXXYYX", "XXYXYXXXYYXXXYYXXXYXXYXYXXXYXYYXXXXXYXYXXXXXXXYXYX", "XXXYYXXXYXXYXXXXYXXXXXXXXXXXYXXYXXXXYYYYYYYXXXYXXY", "XYXXXYXXXXXXXYXXXXXXXXXYYXXXXXXXXXXXYYXYYXXXXXYXXX", "XXYYXXYXXYXYYXXXXXXYXXXXXXXXXYXYXYYXXXXXXXXYXYXYXX", "XXXYYXXXXXXYXXXXXYXXXXYYXXXYXYYYXXXYXXYXYXXXXXXYXX", "XXXXXYXXXYXXXXXYXXXXXXXXXXYXXXXXXXXXXXXYXXXXXXXXXX", "XXYXXYXYXXXYXXXXXXXXYXXXYXXYYXXXXXXXYXXYXXXXYXXXYX", "YXXYXYXXXYXYXXXXXYXYYXYXYYXXXXXXXXYXXXXXXXXYYYXXYX", "XXXXYXXXXXYXXXYXXXYXXYXXYYXXXXXYYXYXYXYXXXYXYXXYXY", "XYXXXYYXXXXXYXYXXXXYXXYXXXYXXXXXYYXYXXYXXYXXYXXXXY", "XXXXXYXXXYXXXYYYYXYXXYYXXXXXXXXXXXXXYXYXYXXYXYYXXY", "XYXXXXXXXXYYXXXXXXXXYXXYXYYXXXXXXXXXXXXYXXXXXXXXXX", "XYXXXXXXXXXXYYYXXXYYXXXYXXYYYXXXYXXXYXXXYXYXYXXXXY", "YXYXXXXYXYXXXYXYXYXXXYXXXXXXYXXXYXYXXYXXXXYXXYXXXY", "YXYXXXYXXXXYXXXYYXXXXYXXXXXYXYXYYXXXXXYXXXXXYXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXYXXXYYXXYYYXXXYXXXXYXXXXXXX", "XXXXXYXXXXXXYXYXXXXXXXXXYXXXXXYXYXXXXXYYXXXXXXXXYX"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"XXXXYXXXXXYXXXYYYYXYYXXXXXXYYXXYXYYXXYYYYYXXYXXXYX", "XXXXXXYXXXXXXXYYXXXYXYXYXXYYXXYYYYXXXYYYYYYXXYXXXX", "YXXXXYYXXXYYYXXXYXXYXXXXXXYYYXYYXYYXXXXYXXXYXXXXXX", "XXXXXYXXXYXXXYYYYXYXXYYXXXXXXXXXXXXXYXYXYXXYXYYXXY", "XXXXYXXXXXYXXXYXXXYXXYXXYYXXXXXYYXYXYXYXXXYXYXXYXY", "XXXXYYXYXXXXXYYXXXXXXYYXXYXXXYXXYXYYXYXXXXXYXXXYXY", "XXXYXYXXXXYYXYYYXXXYXXYXXYXXXXYXXYXYYXXXXYXXXXXXYX", "XXXYYXXXYXXYXXXXYXXXXXXXXXXXYXXYXXXXYYYYYYYXXXYXXY", "XXYXYXXXYYXXXYYXXXYXXYXYXXXYXYYXXXXXYXYXXXXXXXYXYX", "XYXXXXXXXXXXYYYXXXYYXXXYXXYYYXXXYXXXYXXXYXYXYXXXXY", "YXXXYXYXYXYXXXYXXXYXXXXXXYYXYXXXYXXXXYXXYYXXYYXXXX", "YXXYXYXXXYXYXXXXXYXYYXYXYYXXXXXXXXYXXXXXXXXYYYXXYX", "XXYXXYXXXYXXXXXYXYXYXXXYXXXXYXXXYYXXXXXXXXYXYYYXXY", "XYXXXYYXXXXXYXYXXXXYXXYXXXYXXXXXYYXYXXYXXYXXYXXXXY", "YXYXXXXYXYXXXYXYXYXXXYXXXXXXYXXXYXYXXYXXXXYXXYXXXY", "XXXXXXXYYXXXXXXXXXYYXYXXYXXXXXXXXXXYXXXXYYYYYXXYYX", "XXXYYXXXXXXYXXXXXYXXXXYYXXXYXYYYXXXYXXYXYXXXXXXYXX", "XXYXXXXYXXYXXXXYXXXXXXXXYYXXYXXXXYXXYXXXYYXXYXYYXX", "XXYXXYYYXXXYXXXYXXYXXXXYXYXXXYXXXXYXXXXXXXXXYXXYYX", "XXYYXXXYXXXXXXXYYXXYXXXXXYYXXXYXXYYXYXXXXXXYYXXXXX", "XXYYXXYXXYXYYXXXXXXYXXXXXXXXXYXYXYYXXXXXXXXYXYXYXX", "YXXXXYXYXXYXYXXXYXXXXYYXXXXXXXYYXXXXXXXYXXXXXYYXYX", "YXXYYXXXYXXXXXXXXYYXXXYXXXXYXYXXXXYXXXXXYXYXYYXXXX", "XXXXXXXXXXXYXXYYYXXYXXXXXXYXYYXYXYXXXYXXYXXXXYXXXX", "XXXYXXXXXYXXXXXXXYXXXXYXYXYYXXXXYXXXYXXXXYXXYYXXXY", "XXXYXXYXXXXXXYXXXXYXYYXXYXXYXXXYYXXXYXXYXXXXXXXYXX", "XXYXXXYYXXYXXYXXYXYXXXXXXXXYYXXXXYXXYXXXXXXXYXXXXY", "XXYXYXXXXYXXXXYXXYYXYXXXYXXXXXYXXYXXXXXXXYYXXXXXXY", "YXXXXXXYYXXYXXXYYYYYXXXXXXXXXXXXXYYXYXXXXXXXXYXXXX", "YXYXXXYXXXXYXXXYYXXXXYXXXXXYXYXYYXXXXXYXXXXXYXXXXX", "YXYXYXXYYXXYXXXXYXXXYXXXXXXXYXYXXXXXXXXYXXXXYXYXXX", "YYXYXXXXYXXXXYXXYXXXYXXXXXXXXXXXXXYXYXXXXYXXYXYXYX", "XXXXXXXXXXYYXXXYYXXXXXXXYYXXYXXYXXXXXXXYXYYYXXXXXX", "XXYXXYXYXXXYXXXXXXXXYXXXYXXYYXXXXXXXYXXYXXXXYXXXYX", "XYXXXXXXXXXXXXYXYXXXXXXXXXXXYYXXXXXXYYXYXYXXXYXXYY", "XXXXXXXXYXXXXXXXXXXYYYXYXXXXXXXXXYYYXYYXXYXXXXXXXX", "XXXXXYXYXXXXYXXXXXXXYXXXXXXXYXXYXXYXYXXXYXXYXXYXXX", "XYXXYXXXXXXXYXXXYXXXXXXXXXXXXXYXXXYXYYXXYXXXXYXYXX", "XXXXXXYXYXXXYXXXXXXYXXXXXXYXYXYXXXXYXYXYXXXXXXXXXX", "XXXYXXYXXXYXYXYYXXXXXXYXXXXXXXXXXXYXXXXXXYXXXXXXYX", "XYXXXYXXXXXXXYXXXXXXXXXYYXXXXXXXXXXXYYXYYXXXXXYXXX", "XXXXXYXXXXXXYXYXXXXXXXXXYXXXXXYXYXXXXXYYXXXXXXXXYX", "XXXYXXXXXXXYXXXXXXXXYXXXYXXYYXXXXXXXXXXXYXXXXXXXYY", "XYXXXXXXXXXYXYXYXXXYXXXXXYYXXXXXXXYXXXXXXXXXXXXYXX", "XYXXXXXXXXYYXYXXXYXXXXXXXXXXYXXXYXXXXXXXXXYXXXXYXX", "XXXXXXXXXXXXXXXXXXXXXXXYXXXYYXXYYYXXXYXXXXYXXXXXXX", "XXXXXXXXYXYXYXXXYXXXXYXYXXXXXXYXXXXXXXXXXXXXXYXXXX", "XYXXXXXXXXYYXXXXXXXXYXXYXYYXXXXXXXXXXXXYXXXXXXXXXX", "XXXXXXXXXXXXXYXXXXYXXXXYYXYXXXXYXXXXXXXXXXXXXXXXYX", "XXXXXYXXXYXXXXXYXXXXXXXXXXYXXXXXXXXXXXXYXXXXXXXXXX"};
    if(result == expected) {
        cout << "Test Case 68: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 68: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test69() {
    vector<string> names = {"XYXXYYYXXXYXXXXXYXXXXYXYXYXXXXXYYXXXXYXXXXXYXXXXXX", "XXXYXXYXXXXYXYXXXXXXYXXXXXXXYXXXXXXYXXXXXXYXXXXXXX", "YXYXYYXYYXXYYXXXYXYXXXYXXXXXXXXXYYXYXXXXXXXXXXXXXX", "XXXXXXXXXXXXXYYXXXXYXXXYYYXXXYXXYXXXXYXXXXYXYXXXXY", "XXXXYYXXYXXXYXXXXXXXXXXXXXYXXYXYXXXXXXXXYYXXXYYXYY", "YYXXXYXXYYYYXXXYXYXXXXXYXXYXXXXXXXXXXXYXXXXYXYYXXX", "XXYXXYXXXXYYXYXXYXXXXYXXXXXXYXXXXXXXXXXXYXXYXYXXXX", "XXXYXXYXYYYYXXXYXXXXYXXYXXXYXXXYXYXXYYYYXXXXXXXXXX", "XYYXXXYYYYYYYXXXXYYYYXXXYXXXYYXXXXXXXXXXXXYYXYXXXX", "XXXXXXXXXXXYXYXXYXXXYXYXXXYXXXXXYYXYYXYXXYYXYXXYXX", "XXYYXXXYXXXXYXXXYYXXYXXXXXYXXYXXXXXXYXXYXXXXXXXXXY", "XXXXXYXXXXYYXXXXXYXXYXYXYXXXYYXXXXXXXXXYXYXXXYXYXX", "YXXXXXXXXYXYYXXXXXXYXYYXYXXYYXYXXXXXYXYXXXYXYXXYXY", "XXXYXXXXXXXXXXXXXYYXXXXXYXYXXXYYXXYXXXYXYXXXXXXXXY", "XYXYYXXYXXYYXXXXXXXYXXXXYYXYXXXXXXXXXXXXXYYXYXXXXX", "XXYXYXXYXYXXXYXXXXXXYXYXXXXXXYYXXXXXXXYXXXXXXYXYXX", "XYXXXYYXYXYXXXXXXXXXXXXXXXXXXXYXXXXXXXXYXXXXXXXYXX", "XYYXXXXYXXXXXXXXXXYXXXXYXXXXXYYYYYXXXXXXXXXXXYXYXX", "YXYXXXYYXYXXXXXXXYXXYYYYXXXXXXXXYXYXXYXXXXXYXYXXXX", "XXYXXXXXXXXXXXXXXXXXYXYXXXXYXYXXXXXXXXXYXYXYYXXXXX", "XXYYXXXXXXXXXXXXXXYXXYXYXXYXYXXYXYYXXYXXXXYYXXXXYY", "XYXXXXXYXYXXXXYXYXXYYXXXYYXXXXXXYXXXXXXXXXXXXXYXYX", "XXXXYYYXXXYYXXYXYYXXXXXXYXYXXYXXYXYYXXXXYXXXYXYXXX", "XXYXXXYXXXXXYXXXXYYYXXXXXXYXXYXXYXXXXYYXYXYXXXXXYX", "YXYXXYYYYXXXYXYXXYXXXXXXYXXXYXYXXYXXYXXXXYXXYXXXYY", "XYXXXXXXXXXYXXXXXXXYXXXXXXXYYXXXXXYXXXXXYYXXXYXYXY", "YXXXXXXYXXXYXXYXXXYXXXXYYYXXYXXXXYXXXXYXXYXYYXXXXX", "XYXXXYXXXYXXXXYXXXXXXXXXXXYXXXYXXXXXXXXXYXXXXXXXXY", "XXXXXXXXXXYYYXXXXYYXXXXYXXXYXYXXXXXYYXXXXYXXYXXYXY", "XXYXXXYXXXXXXXXYXXXYYXXXXXXXYXXXXXXXXYXXXXXXXYXXXX", "YXXXXXXXXXYXXXXYYYYYXXXYYXYXXXXXXXYXXXXYYXXYXXYXXX", "XXXXXXXYXXXYYYXXXXYXXXXXYYXXXXXXXXXXXXXXYXXYXXYXXX", "XXXXXXXYXXXXXYXXXXXXXXXXXXXXXXXXYYXXYXXXXYYXXXXXXY", "YXYXYXYXYXYXXYXXXXYXYXXXXXXXYXYXXXXXXXXXXXYXXXYYXX", "YXYXXYYYYXXXXYXXXYYXYXXXXXXXXXXYXXYYYXXXXXXXXXYXYX", "YXXYXXXXXXYXXXXXXXXXXXXXXXXXYYXXXXXYXXXXXXXYYXYXXX", "XYXXYXXXXXXXXXXXXXXXXXXXXXXYXXXXXXXYXXXXXXXXXXXXXX", "YXXXXXXXXYXXXXXXXYXXYXXYXXYXXYYYXXXXXXXXYYYXXYXYYX", "XXXXXYXXXXYYXYYXXYXXXXXXYXYXYXXXXXXXXXXXXYYXXYXXXY", "YXYXXXYYYYXXYXXYYXXYYYXXXYXXYXXYXYYXXXXXXXXXYYYYXX", "YYXYXYXXYXXXXXXXXXXXXXXYYXXXXXYYXXYXYYYXYXXXXYXXYX", "XXYXXXXXXXXYXYYXXXXXXXXXYXXXYXYYYXXXXXXXXXXXYYXXYY", "XXXXYXXXXYXXXYXXXXXXXXYXXXXXXXXXXXXXXXXXYXYXXXXYYX", "XXYXYXYYXXYXYXYXXYXXXYXXXXXYXXYXXXXYXXYXXYXXXXXXXX", "XXXXXXYXXXXXYXXXXYXYXYXXXXXXXYXXXXXXYXXXXXXXXXYYXX", "YXYYYXYXXYYXXXXXYXYYXYXYXXXXXXXXXXXXYYYYXXXXXXXYXX", "XXXYXXXXYXXXXXXXXXYXYXXXXXXXXXXXXXYXXYYXXXYXXYXXYX", "XYXYYXXXXXXXXYXXXXXXXXXXXXYXYYXYYXXXYYYXXXYYXXXXXX", "XYXXYXXYYXXXXYXXXXXXXYXXXXYYYXXXXXXXYXYYXXXXXYXXXX", "XYXXXXYYXXYXYXXXXYYXXXXXXXYXXXXXYXXXYYXXXXXXYXXYXX"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"YXYXXXYYYYXXYXXYYXXYYYXXXYXXYXXYXYYXXXXXXXXXYYYYXX", "XYYXXXYYYYYYYXXXXYYYYXXXYXXXYYXXXXXXXXXXXXYYXYXXXX", "YXYXXYYYYXXXYXYXXYXXXXXXYXXXYXYXXYXXYXXXXYXXYXXXYY", "XXXXYYYXXXYYXXYXYYXXXXXXYXYXXYXXYXYYXXXXYXXXYXYXXX", "YXXXXXXXXYXYYXXXXXXYXYYXYXXYYXYXXXXXYXYXXXYXYXXYXY", "YXYYYXYXXYYXXXXXYXYYXYXYXXXXXXXXXXXXYYYYXXXXXXXYXX", "XXXYXXYXYYYYXXXYXXXXYXXYXXXYXXXYXYXXYYYYXXXXXXXXXX", "YXYXXYYYYXXXXYXXXYYXYXXXXXXXXXXYXXYYYXXXXXXXXXYXYX", "YYXYXYXXYXXXXXXXXXXXXXXYYXXXXXYYXXYXYYYXYXXXXYXXYX", "XXXXXXXXXXXYXYXXYXXXYXYXXXYXXXXXYYXYYXYXXYYXYXXYXX", "XXYYXXXXXXXXXXXXXXYXXYXYXXYXYXXYXYYXXYXXXXYYXXXXYY", "YXXXXXXXXXYXXXXYYYYYXXXYYXYXXXXXXXYXXXXYYXXYXXYXXX", "YXXXXXXXXYXXXXXXXYXXYXXYXXYXXYYYXXXXXXXXYYYXXYXYYX", "YXYXXXYYXYXXXXXXXYXXYYYYXXXXXXXXYXYXXYXXXXXYXYXXXX", "YYXXXYXXYYYYXXXYXYXXXXXYXXYXXXXXXXXXXXYXXXXYXYYXXX", "XXXXXXXXXXYYYXXXXYYXXXXYXXXYXYXXXXXYYXXXXYXXYXXYXY", "XXYXXXYXXXXXYXXXXYYYXXXXXXYXXYXXYXXXXYYXYXYXXXXXYX", "XXYXYXYYXXYXYXYXXYXXXYXXXXXYXXYXXXXYXXYXXYXXXXXXXX", "XYXYYXXXXXXXXYXXXXXXXXXXXXYXYYXYYXXXYYYXXXYYXXXXXX", "YXXXXXXYXXXYXXYXXXYXXXXYYYXXYXXXXYXXXXYXXYXYYXXXXX", "YXYXYXYXYXYXXYXXXXYXYXXXXXXXYXYXXXXXXXXXXXYXXXYYXX", "YXYXYYXYYXXYYXXXYXYXXXYXXXXXXXXXYYXYXXXXXXXXXXXXXX", "XXXXXYXXXXYYXXXXXYXXYXYXYXXXYYXXXXXXXXXYXYXXXYXYXX", "XXXXXYXXXXYYXYYXXYXXXXXXYXYXYXXXXXXXXXXXXYYXXYXXXY", "XXXXYYXXYXXXYXXXXXXXXXXXXXYXXYXYXXXXXXXXYYXXXYYXYY", "XXYXXXXXXXXYXYYXXXXXXXXXYXXXYXYYYXXXXXXXXXXXYYXXYY", "XYXXXXYYXXYXYXXXXYYXXXXXXXYXXXXXYXXXYYXXXXXXYXXYXX", "XYXXYXXYYXXXXYXXXXXXXYXXXXYYYXXXXXXXYXYYXXXXXYXXXX", "XYXXYYYXXXYXXXXXYXXXXYXYXYXXXXXYYXXXXYXXXXXYXXXXXX", "XYXYYXXYXXYYXXXXXXXYXXXXYYXYXXXXXXXXXXXXXYYXYXXXXX", "XXXXXXXXXXXXXYYXXXXYXXXYYYXXXYXXYXXXXYXXXXYXYXXXXY", "XXYXYXXYXYXXXYXXXXXXYXYXXXXXXYYXXXXXXXYXXXXXXYXYXX", "XXYYXXXYXXXXYXXXYYXXYXXXXXYXXYXXXXXXYXXYXXXXXXXXXY", "XYXXXXXYXYXXXXYXYXXYYXXXYYXXXXXXYXXXXXXXXXXXXXYXYX", "XYYXXXXYXXXXXXXXXXYXXXXYXXXXXYYYYYXXXXXXXXXXXYXYXX", "XXXYXXXXXXXXXXXXXYYXXXXXYXYXXXYYXXYXXXYXYXXXXXXXXY", "XXYXXYXXXXYYXYXXYXXXXYXXXXXXYXXXXXXXXXXXYXXYXYXXXX", "XYXXXXXXXXXYXXXXXXXYXXXXXXXYYXXXXXYXXXXXYYXXXYXYXY", "XXXXXXXYXXXYYYXXXXYXXXXXYYXXXXXXXXXXXXXXYXXYXXYXXX", "XXXYXXXXYXXXXXXXXXYXYXXXXXXXXXXXXXYXXYYXXXYXXYXXYX", "XXXXXXYXXXXXYXXXXYXYXYXXXXXXXYXXXXXXYXXXXXXXXXYYXX", "XXYXXXXXXXXXXXXXXXXXYXYXXXXYXYXXXXXXXXXYXYXYYXXXXX", "YXXYXXXXXXYXXXXXXXXXXXXXXXXXYYXXXXXYXXXXXXXYYXYXXX", "XXXXXXXYXXXXXYXXXXXXXXXXXXXXXXXXYYXXYXXXXYYXXXXXXY", "XXXXYXXXXYXXXYXXXXXXXXYXXXXXXXXXXXXXXXXXYXYXXXXYYX", "XXXYXXYXXXXYXYXXXXXXYXXXXXXXYXXXXXXYXXXXXXYXXXXXXX", "XXYXXXYXXXXXXXXYXXXYYXXXXXXXYXXXXXXXXYXXXXXXXYXXXX", "XYXXXYXXXYXXXXYXXXXXXXXXXXYXXXYXXXXXXXXXYXXXXXXXXY", "XYXXXYYXYXYXXXXXXXXXXXXXXXXXXXYXXXXXXXXYXXXXXXXYXX", "XYXXYXXXXXXXXXXXXXXXXXXXXXXYXXXXXXXYXXXXXXXXXXXXXX"};
    if(result == expected) {
        cout << "Test Case 69: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 69: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test70() {
    vector<string> names = {"XXXYXXYYXYXXYYXXYYYXXXXXXXXYXXXYXXXXXXXXYXXXXXXXXX", "XXXXXYXXXXXXXYXYXXXYXXYXXXYXYXYXXYXXXXXXXXXXYYXYXX", "XXXXXXXYXYXXXXXXYXXXXXXXYYXXYXXXXYYXXXXXYYXYXXXXYX", "YYXXXXYXXXXXXYXXXXXXYXYYXYXYXXYYXXYYXXYXXXYXXYXXYY", "XYXYXXYXXXXXXXXXXYXXXYXXXXYXXXXXXXXXYXXXXYXXYXXXXY", "XXYXXXXXXXXXXXXXXXXYXXXXXXXYYYXXXYYXYXXXYXXXYXXXXY", "XXXXXYXXXXYYXYXXXXYXXXXYXXXXXYXYYXYXXXXXXXXXXXXXXY", "XXXXXXXXXXXYYXYYXXXYXXXXXYXYXYXXYYYYXXXXXXYXXXXYXX", "XXYXXXXXXXXXXXXXXYXXXXXXXXXYXYXXXXXYXXXYXXXXYXYYXY", "YXXXXXXXXXYXYXXXXXXYXYXXXXXXXXXXXXXXXYXYYXXXXXXXXX", "XXYXXYYYXYXXXXXXXXXXXXYXXYXXYXXXXXXXXXYXXXXXXYXXXX", "YXXXXXXXXXYYYXXXYXXXYXXXXYXXYXXXXYXXXYXXYYYYXXXXXX", "YYXXXXXXXXXXXYXYYXXXXYXXXXXYYYXXXXXXXYXXXYXXXXYYXY", "XXXYXXXXXXYYXXXYYYXXXYXXXXXXYXXYXXXYXXYYXYXXXXXXXX", "XXXXYXXXXYXXYXXYXXYXXXXXXYXXYXXXXYXYXXYXXYXYXYXXXX", "XXXXYXYXYXXXYXXXXYXXXYXXYXXXXXXYXYXYXXYXXXXXYXXXYX", "XXYXXXXXXYYXYXXXXXXXXYXXXYYYXXYXXXXXXXYYYYYXXXYXXX", "XXXXYXYXXXYYXXXXXYXXYYXYXXXYYXXXXXXYXXYXXYXXXYYXYY", "XYXYXXXXXYXXYXXXXXXYXXYXXXYXXXYXXYXXYXXXYYYXXYXXYY", "XYYYXXXXXXYXYXXXXXXXXYXXYXYXXXXXXXXXXXXXXXXXXXXYYY", "YXXYYXXXYXXXXXXXXXXYXYXXXXYXXXXXYXXYXYXXXXXXXXXXXX", "XXXXXXYXXXXXXXXYXXXXXXYXXXXXXXXXXXYXXXXXXYXXYXXXXY", "XXYXXXXXXXXXXXXXXXXXXXXXXXXXXXYXXYYXYXXXYXXYYXYXYY", "YXYYXXXYXXXXXYYYXXXXXXYXXXYXXXXXXXXXXXXXXXXYXYXYYX", "XXXXXYYYYXYYXXXXXXXYXXXXXXXXYYXXXYXXYXYXXXYXYYXXXX", "XXXXXXXXXXYXXXXXXYXXXYXXXXXXXXXXXXXXXXXYXXYYXXXXXX", "XYYXYXXYYXXYYXXYXYXXYXXXXXXXXXYYYXXXXXXYYXYYXXXXXX", "XXYXXYXYXYXXXXXXXXXXYYXYYYXYYXXXXXXXXXXYYXXXXXXXYX", "XXXXXXXXXXXXXXYXXXXYXYXXYYXXXXXXYXYXXXXXYXYXXXXXXY", "YYXYYXXXXXYXYXXXXXXXXYXXXXXXXXYYXXYYXXYXXXXXYXYXYX", "YXXXXXXXXXXXXXYXXXXXYXYYXXXXYXXXXYYXXYXXXXXXXXXYXY", "XYXXXXXXXXYYYXXXXXXXXXXXXXXYYXYXXXXXXYXXXXYXXXXYXX", "YYXXYXXXXXXXYYXYXXXXXXYYXXYYXXXXXXXXXXXXXXXXXYYXXX", "XXXYYXXXXXXYYXXXXYYXXXYXXXXYXXXXXYXYYXXXXXYXXXYXXX", "XXYXXXXXXYYXXXXXXXXXXXXXXXXXXXXYXYYXXXYYXXXXXXXXYY", "XXXYXXXXXXXXYXYYXXXXYYXXXXXXXYXXXXXYXYYXXYYXXYXXXX", "XXYYXYYYYXXYXXXXXYXXXXXXYYYXXXYXXXXXYXXXXXYXYYXYXX", "XXXXXYXXXXYXXYXXXXXXXXYXXXYXXXXXXXXYYXXYXXYXXXYXXX", "YYYYXYXXXYXXXYYXXXXXXXXXYYXYXXXYXYYXXXXXXXYXXXXYYX", "XXXYXXXYXXXXXYXYXXXXXXYXXXXXYXYXXYXXXXXXXXYXXXXXXX", "XYXXXXXXXXXYXXXYXYXYYYYXXXXYYXXYXYYXXXXYXXXXYYYXXY", "XXXXYXXYXXXYYXXYXXYXYYYXXXXXXXXXXXXXXXXXXYXXXXXXYX", "XXYXYXXYXYYXXYYXYXXYYXYXXXXYXYXXXXXXXXYXXXXXXXXXYX", "YXXXYXXYXXXXXXXXXYXXYYXYXYXXXXYYXYXYXYXYYXXXXXXXXX", "YXXXXXYYYXXXXXXXYXYXXYXXYYXXXYXXXYYYYXXXXXYXXXXXXX", "XXXXXXXXXXYXXYXYYXXXXXXXYXYXXXYXXXXXXYXYYXXXYXYYXY", "XXXYXXXYXXYXYXXXYYYYYXXXXXXXXYXXXXXXXYYXXYXXXXXXXX", "XXYYXXYXYXYYXXXXXXYXXXYXYXXXXXYXXYYXXXXXXXXXXXXYXX", "XXXXYXXXXYYXXYXYXYXXYXXXXYXXXXXXXYYXYXXXXXXXYYYXXX", "XXXYXXXXXXXXXXXYXYXXXYXXXXYYXXXXXXXXXXXXXYXXYXXYXY"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"XYXXXXXXXXXYXXXYXYXYYYYXXXXYYXXYXYYXXXXYXXXXYYYXXY", "YYXXXXYXXXXXXYXXXXXXYXYYXYXYXXYYXXYYXXYXXXYXXYXXYY", "XXXXYXYXXXYYXXXXXYXXYYXYXXXYYXXXXXXYXXYXXYXXXYYXYY", "XXYYXYYYYXXYXXXXXYXXXXXXYYYXXXYXXXXXYXXXXXYXYYXYXX", "XYYXYXXYYXXYYXXYXYXXYXXXXXXXXXYYYXXXXXXYYXYYXXXXXX", "YYYYXYXXXYXXXYYXXXXXXXXXYYXYXXXYXYYXXXXXXXYXXXXYYX", "XYXYXXXXXYXXYXXXXXXYXXYXXXYXXXYXXYXXYXXXYYYXXYXXYY", "XXXXXYYYYXYYXXXXXXXYXXXXXXXXYYXXXYXXYXYXXXYXYYXXXX", "XXYXXXXXXYYXYXXXXXXXXYXXXYYYXXYXXXXXXXYYYYYXXXYXXX", "XXYXYXXYXYYXXYYXYXXYYXYXXXXYXYXXXXXXXXYXXXXXXXXXYX", "YXXXXXYYYXXXXXXXYXYXXYXXYYXXXYXXXYYYYXXXXXYXXXXXXX", "YXXXYXXYXXXXXXXXXYXXYYXYXYXXXXYYXYXYXYXYYXXXXXXXXX", "YYXYYXXXXXYXYXXXXXXXXYXXXXXXXXYYXXYYXXYXXXXXYXYXYX", "XXXXXXXXXXXYYXYYXXXYXXXXXYXYXYXXYYYYXXXXXXYXXXXYXX", "XXXXXXXXXXYXXYXYYXXXXXXXYXYXXXYXXXXXXYXYYXXXYXYYXY", "XXXXYXXXXYYXXYXYXYXXYXXXXYXXXXXXXYYXYXXXXXXXYYYXXX", "XXYXXYXYXYXXXXXXXXXXYYXYYYXYYXXXXXXXXXXYYXXXXXXXYX", "YXXXXXXXXXYYYXXXYXXXYXXXXYXXYXXXXYXXXYXXYYYYXXXXXX", "YYXXXXXXXXXXXYXYYXXXXYXXXXXYYYXXXXXXXYXXXYXXXXYYXY", "XXXXYXXXXYXXYXXYXXYXXXXXXYXXYXXXXYXYXXYXXYXYXYXXXX", "XXXXYXYXYXXXYXXXXYXXXYXXYXXXXXXYXYXYXXYXXXXXYXXXYX", "XXXYXXXXXXXXYXYYXXXXYYXXXXXXXYXXXXXYXYYXXYYXXYXXXX", "XXXYXXXXXXYYXXXYYYXXXYXXXXXXYXXYXXXYXXYYXYXXXXXXXX", "XXXYXXXYXXYXYXXXYYYYYXXXXXXXXYXXXXXXXYYXXYXXXXXXXX", "XXXYYXXXXXXYYXXXXYYXXXYXXXXYXXXXXYXYYXXXXXYXXXYXXX", "XXYYXXYXYXYYXXXXXXYXXXYXYXXXXXYXXYYXXXXXXXXXXXXYXX", "YXYYXXXYXXXXXYYYXXXXXXYXXXYXXXXXXXXXXXXXXXXYXYXYYX", "XXXXXXXYXYXXXXXXYXXXXXXXYYXXYXXXXYYXXXXXYYXYXXXXYX", "XXXXXYXXXXXXXYXYXXXYXXYXXXYXYXYXXYXXXXXXXXXXYYXYXX", "XXXYXXYYXYXXYYXXYYYXXXXXXXXYXXXYXXXXXXXXYXXXXXXXXX", "YYXXYXXXXXXXYYXYXXXXXXYYXXYYXXXXXXXXXXXXXXXXXYYXXX", "XXXXXYXXXXYYXYXXXXYXXXXYXXXXXYXYYXYXXXXXXXXXXXXXXY", "XXXXYXXYXXXYYXXYXXYXYYYXXXXXXXXXXXXXXXXXXYXXXXXXYX", "XXYXXXXXXXXXXXXXXXXXXXXXXXXXXXYXXYYXYXXXYXXYYXYXYY", "XXYXXXXXXXXXXXXXXXXYXXXXXXXYYYXXXYYXYXXXYXXXYXXXXY", "XYYYXXXXXXYXYXXXXXXXXYXXYXYXXXXXXXXXXXXXXXXXXXXYYY", "YXXXXXXXXXXXXXYXXXXXYXYYXXXXYXXXXYYXXYXXXXXXXXXYXY", "XXXXXXXXXXXXXXYXXXXYXYXXYYXXXXXXYXYXXXXXYXYXXXXXXY", "XXXXXYXXXXYXXYXXXXXXXXYXXXYXXXXXXXXYYXXYXXYXXXYXXX", "XXXYXXXXXXXXXXXYXYXXXYXXXXYYXXXXXXXXXXXXXYXXYXXYXY", "XXYXXXXXXXXXXXXXXYXXXXXXXXXYXYXXXXXYXXXYXXXXYXYYXY", "XXYXXXXXXYYXXXXXXXXXXXXXXXXXXXXYXYYXXXYYXXXXXXXXYY", "XXYXXYYYXYXXXXXXXXXXXXYXXYXXYXXXXXXXXXYXXXXXXYXXXX", "XYXXXXXXXXYYYXXXXXXXXXXXXXXYYXYXXXXXXYXXXXYXXXXYXX", "XYXYXXYXXXXXXXXXXYXXXYXXXXYXXXXXXXXXYXXXXYXXYXXXXY", "YXXYYXXXYXXXXXXXXXXYXYXXXXYXXXXXYXXYXYXXXXXXXXXXXX", "XXXYXXXYXXXXXYXYXXXXXXYXXXXXYXYXXYXXXXXXXXYXXXXXXX", "YXXXXXXXXXYXYXXXXXXYXYXXXXXXXXXXXXXXXYXYYXXXXXXXXX", "XXXXXXYXXXXXXXXYXXXXXXYXXXXXXXXXXXYXXXXXXYXXYXXXXY", "XXXXXXXXXXYXXXXXXYXXXYXXXXXXXXXXXXXXXXXYXXYYXXXXXX"};
    if(result == expected) {
        cout << "Test Case 70: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 70: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test71() {
    vector<string> names = {"CFBAGBEDGCDEFCCDAAFCDAADBCC", "DGDFCCCBCCGEACAFGCGBEAAABAAEEDC", "ABGAFAADBCAEGEEFBAAAEAEGFEAEAFCBCCE", "BBGDGFG", "FCEAAEGGBAAC", "ACAEGADCAAFBAA", "ACBBBEAGDBGBGAEEFEBCAFAAGADBAAEEBACFCG", "BABEGABCAAGEEFBBG", "AABEFADEAEDABFAGECAAGEDFAAEAGCAFDAADFDAACFBEACD", "AAEEACAACAAGACDFBBAFEDF", "FGADDAGDEFDCABCADDGGA", "BCAGAGFDFACFEBAAGAEGCDAEGBD", "CEDAFCCECACFBEFCDAGACCBDADBACEABEBEFAAAGGDFAEAD", "GACABGBBGAGBECBFBAABAAGDAEAAGCAEDEACDABDBACBDGCGE", "EDFCADAAA", "AGDAECEGG", "FACEDAAFEEAFDFCGBDEECBEGAGG", "AABADGBDGBGACCCAGAAAFCEACCDFGBDC", "EGDGAEBEE", "BEGAAEBBAABGDFBAEGGEEDAB", "BFEGCEDAEBGGAEAGDAAGCEBADCCFFDBECGBBE", "GACDEFE", "DCAGDEBCGGFBEFAGCD", "AEFCBFCFFGAGFEAGGADDDEDAAGA", "EBBEADAFFGBGGGBCABFAACF", "GAAEAGFAEDBFFAFCBGGACDGEDCAACDFDAABBC", "AFFBEAAEEGFCAACFEG", "DAADABAEEGBAACFGEA", "FEEFABACFCADGADCAFGFCAFEBACFAGEGFAFFEDAGG", "ACGGEFCGGFB", "GFEAGACEABF", "EGGFCADAFAFAEGBACFBACEBGADE", "BFCDBBCECFEFABEABCGDDBEGDABECEF", "CCECAAFBBBAGCBE", "GCDBEFAAAEGDBADBDGCFBCBABCAACADFABFDDBEAA", "GGBGGCAGACAEGAEGAAGDGAAFCFFBCBADG", "BBAADAGFFGGACAACDFBGFCBDCABGDCEDCCAGCACACAD", "GAFCDDEAEBAEABDAGCEAFBAGBABAGFAABGDCF", "FAFDCCABEECAAEGEDECADAECAFCFACADDEFDGBADAGD", "EEABABACDBDEAEEACAAFACBAED", "ABDDDAA", "AFAAGFCCCFG", "AACEECBCADEGGDB", "AEECBEBFCAAAEDACEGEBBDADGCFDEDE", "DFDFFAG", "GFFCFGGAFEAGBFECA", "ADEGFGCFCGGGFCFAAGDBGABAEBEBA", "AEGEGDFFGECEBCGGCACFBEFDGDB", "CEBFDGCADGFCGFGBDBCEBAAACDAGAGGAAAAD", "DAAADAEDGGADACAEBBGECCAACDAGEAABBBCEEGAAFBCCEB"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"FEEFABACFCADGADCAFGFCAFEBACFAGEGFAFFEDAGG", "CEDAFCCECACFBEFCDAGACCBDADBACEABEBEFAAAGGDFAEAD", "GACABGBBGAGBECBFBAABAAGDAEAAGCAEDEACDABDBACBDGCGE", "AABEFADEAEDABFAGECAAGEDFAAEAGCAFDAADFDAACFBEACD", "FAFDCCABEECAAEGEDECADAECAFCFACADDEFDGBADAGD", "BBAADAGFFGGACAACDFBGFCBDCABGDCEDCCAGCACACAD", "DAAADAEDGGADACAEBBGECCAACDAGEAABBBCEEGAAFBCCEB", "BFEGCEDAEBGGAEAGDAAGCEBADCCFFDBECGBBE", "GAAEAGFAEDBFFAFCBGGACDGEDCAACDFDAABBC", "GGBGGCAGACAEGAEGAAGDGAAFCFFBCBADG", "CEBFDGCADGFCGFGBDBCEBAAACDAGAGGAAAAD", "GCDBEFAAAEGDBADBDGCFBCBABCAACADFABFDDBEAA", "ACBBBEAGDBGBGAEEFEBCAFAAGADBAAEEBACFCG", "GAFCDDEAEBAEABDAGCEAFBAGBABAGFAABGDCF", "AEGEGDFFGECEBCGGCACFBEFDGDB", "ABGAFAADBCAEGEEFBAAAEAEGFEAEAFCBCCE", "ADEGFGCFCGGGFCFAAGDBGABAEBEBA", "BFCDBBCECFEFABEABCGDDBEGDABECEF", "AEECBEBFCAAAEDACEGEBBDADGCFDEDE", "FACEDAAFEEAFDFCGBDEECBEGAGG", "AEFCBFCFFGAGFEAGGADDDEDAAGA", "DGDFCCCBCCGEACAFGCGBEAAABAAEEDC", "AABADGBDGBGACCCAGAAAFCEACCDFGBDC", "BCAGAGFDFACFEBAAGAEGCDAEGBD", "EGGFCADAFAFAEGBACFBACEBGADE", "CFBAGBEDGCDEFCCDAAFCDAADBCC", "EBBEADAFFGBGGGBCABFAACF", "BEGAAEBBAABGDFBAEGGEEDAB", "FGADDAGDEFDCABCADDGGA", "GFFCFGGAFEAGBFECA", "DCAGDEBCGGFBEFAGCD", "EEABABACDBDEAEEACAAFACBAED", "AFFBEAAEEGFCAACFEG", "AAEEACAACAAGACDFBBAFEDF", "BABEGABCAAGEEFBBG", "DAADABAEEGBAACFGEA", "ACGGEFCGGFB", "AACEECBCADEGGDB", "CCECAAFBBBAGCBE", "AFAAGFCCCFG", "GFEAGACEABF", "FCEAAEGGBAAC", "EGDGAEBEE", "AGDAECEGG", "ACAEGADCAAFBAA", "BBGDGFG", "DFDFFAG", "GACDEFE", "EDFCADAAA", "ABDDDAA"};
    if(result == expected) {
        cout << "Test Case 71: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 71: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test72() {
    vector<string> names = {"ADECFEEADBDAEDEAECEBCCDDGEDFEACGCDDACABBCEACGBDAA", "ABECGCBAFEDGFBBCAAEDEAADABAGCA", "BABAAADGAGAFEGG", "EAABGACBADEDGABADADDGACAGCGAACBBAGAAABAGAADA", "DEBAAAADBAFEFEECDDDBCCBEEAAAAGGGABAFCGGAEDD", "EBCBGDFAEFAGFAAEEDFCBAEEAACF", "AADCBEAAAABCCABFBAACEGAGDABEEDCAFCADDBADBGBBBEE", "FBCABAC", "BEGDGCAFFDEGGCFGAABGAGDCGBAAA", "BCEFACAABABE", "DAAEGDF", "AAAFGCAEFAABFECCBAFECAEGADGFGDBBCBGDDAC", "ECEEAAFCFAEBAAGDABAEEAADACBGBEGDFEF", "DAABDDAFDGFDEFEBFADCFECGDAB", "DAACGAGGFEGDFBEEFBCDECAAAFC", "DDFGADBDGFEDDFCFEFDFADAADCABGDCDAADDAGADEEBDABECE", "FGGAAECCGAE", "CECCCFEABDFBBEFECEFFDFECCBAGGBEBBAD", "BCACDFGCFBAFFBEGAAGCCAAACBBFBBFFGEFGDGDGGGBDFFF", "EEAAAFGGBEBCAABFAFDCADBDGDAAFAA", "EDDBCDBCADDEGDFFFCFGDBCADBGFGADEFEAEBGGCADABFGDGF", "ABAFFDEECDA", "AAAECBGDADCADEACGABEFAG", "EGDEADGFAFCDBEDDEFBGGCFCCCFACGA", "GAAEGAAFEDCDAFADCEAAGEBEAEA", "AEBABAAFBDGADFGCCFABCACAEAFFFADCDEBAEFABCCCB", "BAFAACDBFGACFFDAEAC", "AGGFEGAAAGFBA", "FBCACBAGGDGCDBFAACEFEEEADBAEDGDDAGGCDEFEEABEAGA", "DAEEAFFDGAGADAADFAFCGAEECFACCFE", "DAAGDBEAGAEBDDGBGACAFCGAG", "FECCCBAEEGDABGEFFGEDGDDFGDFFABGCFBF", "GAECCGADDFDAGBFFEFCEAFGCDDBDBFA", "FAAAAGAAAEAAAAAGFABDEGGEDDF", "FDFAAGAFBEEBFCAGDGGGGBGC", "AFBAAAAGCADBGFEAAGAEFAADDCCDAGDDDGFACGE", "ABEFBFCBDAADEDEEEAEFFAADDABFF", "ABBGEEEGBDBEGBBEBCAFAGCEAAGBAAABDFACCFC", "GEBEECCAEBFGBCGBECCGCACEDCA", "ADABGEGACFAAD", "EAABABABFAGCGFGAAADCDGAAGA", "CEBAEGAAAGCDAGBCFAEA", "BGDBEGDEEFEAC", "DAGFGDEACBGBAEFDGEFBGAFGCBA", "EADBAAECBDA", "EBAAFCBAAAEAAGBAFEDFGBCFADGAACGDGAABEFFGAEDAEFGA", "CDAAAACGFADGGBAAAECACCGABECECEADECGDFEGDEAA", "GGAFAACEGCG"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"EDDBCDBCADDEGDFFFCFGDBCADBGFGADEFEAEBGGCADABFGDGF", "BCACDFGCFBAFFBEGAAGCCAAACBBFBBFFGEFGDGDGGGBDFFF", "DDFGADBDGFEDDFCFEFDFADAADCABGDCDAADDAGADEEBDABECE", "FBCACBAGGDGCDBFAACEFEEEADBAEDGDDAGGCDEFEEABEAGA", "EBAAFCBAAAEAAGBAFEDFGBCFADGAACGDGAABEFFGAEDAEFGA", "ADECFEEADBDAEDEAECEBCCDDGEDFEACGCDDACABBCEACGBDAA", "FECCCBAEEGDABGEFFGEDGDDFGDFFABGCFBF", "CDAAAACGFADGGBAAAECACCGABECECEADECGDFEGDEAA", "DEBAAAADBAFEFEECDDDBCCBEEAAAAGGGABAFCGGAEDD", "AEBABAAFBDGADFGCCFABCACAEAFFFADCDEBAEFABCCCB", "AAAFGCAEFAABFECCBAFECAEGADGFGDBBCBGDDAC", "AADCBEAAAABCCABFBAACEGAGDABEEDCAFCADDBADBGBBBEE", "AFBAAAAGCADBGFEAAGAEFAADDCCDAGDDDGFACGE", "CECCCFEABDFBBEFECEFFDFECCBAGGBEBBAD", "ABBGEEEGBDBEGBBEBCAFAGCEAAGBAAABDFACCFC", "EGDEADGFAFCDBEDDEFBGGCFCCCFACGA", "EAABGACBADEDGABADADDGACAGCGAACBBAGAAABAGAADA", "GAECCGADDFDAGBFFEFCEAFGCDDBDBFA", "ECEEAAFCFAEBAAGDABAEEAADACBGBEGDFEF", "DAEEAFFDGAGADAADFAFCGAEECFACCFE", "BEGDGCAFFDEGGCFGAABGAGDCGBAAA", "DAGFGDEACBGBAEFDGEFBGAFGCBA", "FDFAAGAFBEEBFCAGDGGGGBGC", "DAACGAGGFEGDFBEEFBCDECAAAFC", "ABEFBFCBDAADEDEEEAEFFAADDABFF", "DAABDDAFDGFDEFEBFADCFECGDAB", "EBCBGDFAEFAGFAAEEDFCBAEEAACF", "GEBEECCAEBFGBCGBECCGCACEDCA", "EEAAAFGGBEBCAABFAFDCADBDGDAAFAA", "ABECGCBAFEDGFBBCAAEDEAADABAGCA", "DAAGDBEAGAEBDDGBGACAFCGAG", "GAAEGAAFEDCDAFADCEAAGEBEAEA", "FAAAAGAAAEAAAAAGFABDEGGEDDF", "EAABABABFAGCGFGAAADCDGAAGA", "AAAECBGDADCADEACGABEFAG", "CEBAEGAAAGCDAGBCFAEA", "BAFAACDBFGACFFDAEAC", "BGDBEGDEEFEAC", "BABAAADGAGAFEGG", "AGGFEGAAAGFBA", "GGAFAACEGCG", "FGGAAECCGAE", "ADABGEGACFAAD", "ABAFFDEECDA", "BCEFACAABABE", "EADBAAECBDA", "DAAEGDF", "FBCABAC"};
    if(result == expected) {
        cout << "Test Case 72: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 72: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test73() {
    vector<string> names = {"FFFAACFAAGGECEEAEEEEA", "BGCECBDFEBEC", "ADABADACFGDDGBBCEADAGEDGBDAAAEACAGADDFAEAADDAGEBAB", "FGCDBAGAACG", "EDAFGADAFDFFFCCACGBECADADCAFECDEAAEG", "GAAAAAA", "FCBFEADABBFAADACFAAAADGCEFAGAAGADDB", "GCCDDFAFECCDDCFAAEEAGBBAFCABAFGEABFDAAA", "FBACCFD", "EAACFDEDBDFA", "FGFBBDADABBEGCGAAAGADGC", "FCAFEDGEBBBCEBBADBAFFCBDE", "GDEGFGFGGAGGBCCCAEFEBBBACDADABFDFGB", "CBDEBADBCDBGDEGFCABEAAFCFACCGAEAAFEDDBCCDFBGCAG", "ADABAFCCFGEAAAA", "AEAGFDAGBBFCDABABF", "ACCGBAGAGCEFAFCAAGGADEEFGCEFFFCDDCAECAFFEB", "CACBDGFCDGC", "CABAAABFBAFEE", "GEGBAFEFADDFFBABFBDFAFAEFECFFGACCBGDB", "BFCCEGEBBEGEGAEBFEFFAAAGBEBDAFDACGAAAC", "DDACAAFFFGAAEBFCFCDEEDCDFDBGAGEGDB", "CCBAEADCDEAAADAAEFBGFGCDEABAGACCADEAGC", "CBGDCFFAAGEFCDFABAAEGBFAAFCBEFBFAAGGBAGCDCFGB", "ADCEGAEFEBCAAAFGAAAGCEAAAEDGAAAGD", "ACEADFFDACBAACFDCCACBDEFAAEAC", "AAFEDEGGCCAAFGAACGDAABECDFDBDDDAAEBGDFFEGGFDFAE", "GACBCFF", "DAGBGCEFFBEDABBGAEAAFBFAAAFAEDDEDCAGGAGDFAG", "AAFEAAGADFCCACBECAADBFAAFAA", "BGBAAADFBGBGFADDDCDEAFCEAGABAEFEAGGEDGACEFF", "BGGGFABGEBCCGCACDCAECDEEBAEDBAFFCFCDA", "AFFEEEDFAFEEAECBAAAAABGEEAAAECFGCEDGFCGCFDGAAECFA", "CAAAAECAACC", "AECCCAEADEAGD", "AGGGBABGGDBGADEECCEEFFGFDEDGAAFDCGBAFAAFAAAFAG", "GGGFFBFAFFCAGAGFBEAEEECAAFDEFBDAFFCA", "BBECFAGGAGDFGEEEEABEBGDEBDEBADG", "DCACBAGGAEFAEAECGCDADAFCAECBAAGAGAEEB", "AEEGBCGEFDFFFGABCBAFACGCAABAFACFGCEAFGBEAGA", "DADDAGCEBAADCEEDDBEAFAC", "GGEGADA", "EAEBGFDGGCBFFBCDGAEAAABFADFBBAEGGBAC", "BGCBGDB", "GCGADDGADFAACFGGFCAFDACCFFCBAFBGCAEGFDDFCGDAC", "GGDGDDAAGADGAFAFFDAGBDGAFFFGEDBGCBEBBCA", "DEADGAGCAEBAEDF", "CEBBGACADGEFACDB", "CFCDECDBACGBADF", "AGABFDCABDFAAADCDAAFAGAAFGGGEDBECFCEAGBD"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AAFEDEGGCCAAFGAACGDAABECDFDBDDDAAEBGDFFEGGFDFAE", "AFFEEEDFAFEEAECBAAAAABGEEAAAECFGCEDGFCGCFDGAAECFA", "AGGGBABGGDBGADEECCEEFFGFDEDGAAFDCGBAFAAFAAAFAG", "GCGADDGADFAACFGGFCAFDACCFFCBAFBGCAEGFDDFCGDAC", "CBGDCFFAAGEFCDFABAAEGBFAAFCBEFBFAAGGBAGCDCFGB", "ACCGBAGAGCEFAFCAAGGADEEFGCEFFFCDDCAECAFFEB", "BGBAAADFBGBGFADDDCDEAFCEAGABAEFEAGGEDGACEFF", "CBDEBADBCDBGDEGFCABEAAFCFACCGAEAAFEDDBCCDFBGCAG", "AEEGBCGEFDFFFGABCBAFACGCAABAFACFGCEAFGBEAGA", "DAGBGCEFFBEDABBGAEAAFBFAAAFAEDDEDCAGGAGDFAG", "ADABADACFGDDGBBCEADAGEDGBDAAAEACAGADDFAEAADDAGEBAB", "GGDGDDAAGADGAFAFFDAGBDGAFFFGEDBGCBEBBCA", "GEGBAFEFADDFFBABFBDFAFAEFECFFGACCBGDB", "GGGFFBFAFFCAGAGFBEAEEECAAFDEFBDAFFCA", "GDEGFGFGGAGGBCCCAEFEBBBACDADABFDFGB", "AGABFDCABDFAAADCDAAFAGAAFGGGEDBECFCEAGBD", "BFCCEGEBBEGEGAEBFEFFAAAGBEBDAFDACGAAAC", "BGGGFABGEBCCGCACDCAECDEEBAEDBAFFCFCDA", "DDACAAFFFGAAEBFCFCDEEDCDFDBGAGEGDB", "EAEBGFDGGCBFFBCDGAEAAABFADFBBAEGGBAC", "EDAFGADAFDFFFCCACGBECADADCAFECDEAAEG", "GCCDDFAFECCDDCFAAEEAGBBAFCABAFGEABFDAAA", "BBECFAGGAGDFGEEEEABEBGDEBDEBADG", "DCACBAGGAEFAEAECGCDADAFCAECBAAGAGAEEB", "CCBAEADCDEAAADAAEFBGFGCDEABAGACCADEAGC", "FCBFEADABBFAADACFAAAADGCEFAGAAGADDB", "ADCEGAEFEBCAAAFGAAAGCEAAAEDGAAAGD", "ACEADFFDACBAACFDCCACBDEFAAEAC", "FCAFEDGEBBBCEBBADBAFFCBDE", "FFFAACFAAGGECEEAEEEEA", "FGFBBDADABBEGCGAAAGADGC", "AAFEAAGADFCCACBECAADBFAAFAA", "DADDAGCEBAADCEEDDBEAFAC", "AEAGFDAGBBFCDABABF", "CEBBGACADGEFACDB", "DEADGAGCAEBAEDF", "CFCDECDBACGBADF", "BGCECBDFEBEC", "ADABAFCCFGEAAAA", "AECCCAEADEAGD", "CACBDGFCDGC", "EAACFDEDBDFA", "FGCDBAGAACG", "CABAAABFBAFEE", "GGEGADA", "GACBCFF", "BGCBGDB", "FBACCFD", "CAAAAECAACC", "GAAAAAA"};
    if(result == expected) {
        cout << "Test Case 73: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 73: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test74() {
    vector<string> names = {"GGEBEBCEGDFFFFDAAAG", "BAAEEAA", "CFGAACDBCDDDFAACCGFEAFCAFFBAFCG", "ADAAGCAFDEABAD", "GFGDAAABGAEACGACGEAAFACFAECDDDBGEGEFFGCDFE", "GAADAEEGAGBEFFGAAFAEFFAECCAEFBGAGADCBEGG", "ABFCADACADEEABCAABCFFDEDDGDBGFG", "DBCCEAEABCEDEAG", "DFAGCADGAAAEGFA", "CAAFDABCBACAAADAEDAAFBDADDADACB", "ACDDABCFAFCFBAGDBACBCDAAAAAGCCE", "ACGADGABFG", "CGEFAEAGBDBFACEFBCEGBDGAAFADCAACDBABBADFDCFCDAFDEC", "FEEBFDDAAAAAAAFCGFEEECBDADGFEFBAGBBEFCBED", "ABEDCFABEFFBACDDA", "BDCGFFADCDACCABDBFAAFGGEADEAC", "FGGCCBCACABAAFAAFAACDAFEFEE", "EABBADBEGACDAABBAGAEGABAACDGFCBDDGDADEF", "BGEGGCAAEGGAEEACGADDFBEGGAAACFA", "ADBAFGBAAAGGFBBGFAACGACBCACGGAACBGAA", "EDAAFBF", "AEBAAAAADFBCGAABEACBCGGCAEDAGEFABACAAAEDACCAEEA", "EGEAEEADGDE", "EACGFAACAAFFGAAFAABDBCGD", "GCBBCAEAGDEF", "FDECEFBAGCGADBFBBCECBGCAFAADGECCAEACGDFAC", "CGACCAAGACEAAFDDBADGCCGCCC", "CDACACCABFAACABA", "GFAFDCBFDGA", "AAFGBDAFDAABEACAFABAACGBBGC", "AAGBDECDBECCFAFGACFDCAAEDADDA", "GBDCDAG", "DCDDGBE", "AEFBAEGEABEAFCEAFCDAACAFAFA", "GDFFBAD", "AACFAGAGEDDAADDEDADDEEBADCBEEACFDCBDACECDDAAA", "EDAFCACFEEGAEDFABBADADADFCCF", "FEDCABAGEGCAGFEDCEDBDDEACBCEFCDAGEAECBE", "AFGGEBAEBFFCCDGGACCBACAAEADEDADFCBDAC", "GCABCGCDGEGBAAC", "AGBACFCACDEBCE", "FEAAFAGDECCEEBAACFDDEBCACDFECEBCAEBDCFFE", "ABBAAADBDBAGAC", "AFBBABBEDACBDAGBDADBDBEAEADBACAFGDE"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"CGEFAEAGBDBFACEFBCEGBDGAAFADCAACDBABBADFDCFCDAFDEC", "GFGDAAABGAEACGACGEAAFACFAECDDDBGEGEFFGCDFE", "GAADAEEGAGBEFFGAAFAEFFAECCAEFBGAGADCBEGG", "FEEBFDDAAAAAAAFCGFEEECBDADGFEFBAGBBEFCBED", "FDECEFBAGCGADBFBBCECBGCAFAADGECCAEACGDFAC", "FEDCABAGEGCAGFEDCEDBDDEACBCEFCDAGEAECBE", "FEAAFAGDECCEEBAACFDDEBCACDFECEBCAEBDCFFE", "AACFAGAGEDDAADDEDADDEEBADCBEEACFDCBDACECDDAAA", "AEBAAAAADFBCGAABEACBCGGCAEDAGEFABACAAAEDACCAEEA", "AFGGEBAEBFFCCDGGACCBACAAEADEDADFCBDAC", "EABBADBEGACDAABBAGAEGABAACDGFCBDDGDADEF", "BGEGGCAAEGGAEEACGADDFBEGGAAACFA", "ADBAFGBAAAGGFBBGFAACGACBCACGGAACBGAA", "CFGAACDBCDDDFAACCGFEAFCAFFBAFCG", "ABFCADACADEEABCAABCFFDEDDGDBGFG", "AFBBABBEDACBDAGBDADBDBEAEADBACAFGDE", "BDCGFFADCDACCABDBFAAFGGEADEAC", "EDAFCACFEEGAEDFABBADADADFCCF", "AAGBDECDBECCFAFGACFDCAAEDADDA", "ACDDABCFAFCFBAGDBACBCDAAAAAGCCE", "FGGCCBCACABAAFAAFAACDAFEFEE", "AEFBAEGEABEAFCEAFCDAACAFAFA", "CGACCAAGACEAAFDDBADGCCGCCC", "GGEBEBCEGDFFFFDAAAG", "AAFGBDAFDAABEACAFABAACGBBGC", "EACGFAACAAFFGAAFAABDBCGD", "CAAFDABCBACAAADAEDAAFBDADDADACB", "ABEDCFABEFFBACDDA", "GCABCGCDGEGBAAC", "DFAGCADGAAAEGFA", "DBCCEAEABCEDEAG", "EGEAEEADGDE", "GFAFDCBFDGA", "AGBACFCACDEBCE", "GCBBCAEAGDEF", "ADAAGCAFDEABAD", "ACGADGABFG", "CDACACCABFAACABA", "ABBAAADBDBAGAC", "GDFFBAD", "DCDDGBE", "GBDCDAG", "EDAAFBF", "BAAEEAA"};
    if(result == expected) {
        cout << "Test Case 74: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 74: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test75() {
    vector<string> names = {"EAFGFGFECFDEAFEAECAEBCACFCDDCEGCEDCABBBCEAEAGCCF", "GFAEGAFGCDAACDACDDFBAAFGGBGACAGBAGAGEFGAFDA", "CCCGABGFCFFEABAAACACDAACCDFAABGAFGC", "BACCCBFBEFBCABDCEDGCBBBA", "EEDADAGBBCEAEABCFEEADBDCFAACFAGADAAGD", "AAEAGECGEBCBDABGEBA", "EAEBEFAAFGEFCGCADDAADFDBDBG", "CACADBEEFDAGAAGDBGABCAABCEACBADDGBFBFCCDCGE", "EACFCBEBFAFFGBGGFCECGGECCAAFACCDAAGABEDA", "CAABCBFFEADCAEG", "FEAEAACEDECECGAEFAGACCAFDCFGG", "FACGDBABADFDEFFBGCB", "DCAGACBACAAGGADCDBABAGAGGAGBFDACAAGBEADAFAG", "FAAAABEADFECEAACAABCACG", "CAEGFAFAFGEAGF", "FACEADDBGGABBAACAAAAEAFFFEDCBBAGDFEGFACFACA", "EACBFAEBE", "AEFFBECEEAABCFFAADAGBAGAGADFBAFCGDBFDFCBGEB", "CFGCADA", "DAAGCDAAAGEFFBAEABBC", "BAFFAACDC", "EBCAFEGEDAAAABGGGDABGCFAGABFFEBFAAABCCGBEADFACDBF", "GCFBGAEEBFABDAAFBBFCAGEBCDDEABCAAFACEAAAAGDAB", "EGAFCAA", "FAFCFCAABBBEAGABFABDCAFGGDAABE", "DBDEAGAEAGFBE", "ABGFAFFFFECCACDEBAGGDBFDGADBBDEFBFCFCEFBACA", "BACAGAABAAGBAEAAFDABA", "DFGGAFG", "CABFDEFFBBADFG", "EECACAEFEBAAAAAAD", "BFFGAFFCGCAEFAACCAADGEBADAGDBEABAECEEFG", "BBAAFDBBFBDCFFAAFFDEGAC", "CDAFAAF", "GAAEGECEAGBGADCFAFDEFCGGEFA", "EEDBEBAEBEBDEEAAFDFDDEBAAAGDA", "EGFEGEBAEFAEAFFDDCDGBBA", "EGEDAEGDAAAACFFAEBAACAAGBGDDAEEAAAAAFEAD", "ACEFEEAEGAAEDACAACEBGDDAFGFCAADCGDGDEFG", "AGBECFCDGF", "GEFAAFAGEBACFAABFFCFDAAGEFCGCAEGAEAFAGF", "DCCEGAGBFECDFGCCGCFGCEAAB", "FCDGADGAACFA", "GAACECBGAAGFFGADGEAGAA", "BFBFGEBFCCEAAFAABCCCAAAGBBADECFGAADDBEGDA", "GDDBGGADAG", "AAGAAGFDDECAAADBDAAADAFGAABAAGFECDECEDADE", "DCCDDCGCFBFFCGEGDDGDACDGABD"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"EAFGFGFECFDEAFEAECAEBCACFCDDCEGCEDCABBBCEAEAGCCF", "EBCAFEGEDAAAABGGGDABGCFAGABFFEBFAAABCCGBEADFACDBF", "ABGFAFFFFECCACDEBAGGDBFDGADBBDEFBFCFCEFBACA", "GFAEGAFGCDAACDACDDFBAAFGGBGACAGBAGAGEFGAFDA", "AEFFBECEEAABCFFAADAGBAGAGADFBAFCGDBFDFCBGEB", "GEFAAFAGEBACFAABFFCFDAAGEFCGCAEGAEAFAGF", "ACEFEEAEGAAEDACAACEBGDDAFGFCAADCGDGDEFG", "EACFCBEBFAFFGBGGFCECGGECCAAFACCDAAGABEDA", "BFFGAFFCGCAEFAACCAADGEBADAGDBEABAECEEFG", "CACADBEEFDAGAAGDBGABCAABCEACBADDGBFBFCCDCGE", "FACEADDBGGABBAACAAAAEAFFFEDCBBAGDFEGFACFACA", "GCFBGAEEBFABDAAFBBFCAGEBCDDEABCAAFACEAAAAGDAB", "DCAGACBACAAGGADCDBABAGAGGAGBFDACAAGBEADAFAG", "BFBFGEBFCCEAAFAABCCCAAAGBBADECFGAADDBEGDA", "AAGAAGFDDECAAADBDAAADAFGAABAAGFECDECEDADE", "EGEDAEGDAAAACFFAEBAACAAGBGDDAEEAAAAAFEAD", "EEDADAGBBCEAEABCFEEADBDCFAACFAGADAAGD", "GAAEGECEAGBGADCFAFDEFCGGEFA", "CCCGABGFCFFEABAAACACDAACCDFAABGAFGC", "FEAEAACEDECECGAEFAGACCAFDCFGG", "DCCDDCGCFBFFCGEGDDGDACDGABD", "DCCEGAGBFECDFGCCGCFGCEAAB", "EAEBEFAAFGEFCGCADDAADFDBDBG", "EEDBEBAEBEBDEEAAFDFDDEBAAAGDA", "FAFCFCAABBBEAGABFABDCAFGGDAABE", "EGFEGEBAEFAEAFFDDCDGBBA", "GAACECBGAAGFFGADGEAGAA", "BBAAFDBBFBDCFFAAFFDEGAC", "BACCCBFBEFBCABDCEDGCBBBA", "FACGDBABADFDEFFBGCB", "AAEAGECGEBCBDABGEBA", "FAAAABEADFECEAACAABCACG", "DAAGCDAAAGEFFBAEABBC", "CAEGFAFAFGEAGF", "CABFDEFFBBADFG", "BACAGAABAAGBAEAAFDABA", "CAABCBFFEADCAEG", "DBDEAGAEAGFBE", "EECACAEFEBAAAAAAD", "AGBECFCDGF", "FCDGADGAACFA", "GDDBGGADAG", "DFGGAFG", "EACBFAEBE", "BAFFAACDC", "CFGCADA", "EGAFCAA", "CDAFAAF"};
    if(result == expected) {
        cout << "Test Case 75: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 75: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test76() {
    vector<string> names = {"EAACEAD", "DGDEGADABDA", "DFACEFAFDGCDDADGDFCAAAFEACCBAEGAFAFADD", "DACGDABDABFADCBFDDABGGDAEACGABD", "CDABBEEEAD", "CBCBFDBFDBFBAGDBAAAABFGBGGDFFDE", "AABCBECFFAGACGABBGB", "AFFBDBABGGCEABBDCEBDBGABAACGEAG", "GAGAAAAAGFDBAGGEFDCCEFAAAEGGAACAAADBEGEEFBGADFE", "FCEEGAADDFCGGAABAACECFGBEAFEGAACDF", "DAGAGGCACBACGCBGFBBEFDECACCEBAGBBEGEBDE", "CDAADAGGGFCAFGEDFFAADAEAAAEBGAAAACBDCC", "DFBEAAGDGDDAEDACBDABDFFAAAE", "BCAEAGADBCGCGABECBEDDACCE", "BBGEFBGCGAAACEGDEAB", "BBGCADEAFC", "ABCAACGACAA", "EDGEEDCAC", "EEEDABFFEFAFBECDGFCCBFCCAEDCBEAAGABF", "EBFGEEFFACGEEGEEA", "GECADABBGAD", "CCDEACDAAAAEAGAADDG", "AFDAAFFABEEBDBECEAFDAAEFEBFBCDAFEAEFAACGBC", "AEFBGAABGAAFADGDCF", "ACBDGEAADFABGFFBCCDGEAECGFCBGCAAFCBAGCAACAGDCAGC", "ADGDDAAEAAGECFDBDFACGDGEAGDAGECFCAACBBEFBFFEAEDCAD", "DAEFCCADFAAEFAEBAFCCFBBFCEEFBCEACFBFGAGBBABADA", "BABACBAFEDCCCAGFDFFGFGCDFFDAECAAGEADAED", "BGBAGCCDAEGFEGADFABBGBF", "FABFGGACCAAAAGECDFBABADFAFCFDADBFADCEACBE", "EAAAABGGCECDCAB", "BFEBDEGFFDFGFCABAAABB", "BGDABEDA", "CBAFAAAEBGCABDAGFCAGAEGBA", "GFCDACDDEAFFBBFADFBACCAABCADBAFFDCCGBABE", "BAFDEDCAGCFABDBAAADECFEEFDEFGAAGF", "DAFDCGCFADEBEBFGAACAFGEFCDDAGCE", "GECGDGGEAEA", "FGFCDFCAGACFFFFFCAAAAFGEF", "BAFGAAECCDBACAAADBADEGAAGAABCFGAFAAAA", "FABCFGDGDCCADAABDFAEEEAAAFCGDAAABDGDAC", "BGAEDACAAFFCBFGAF", "DGCEAGCAABGECDFAECCEAFGAGAFDGFEDDGF", "CDBDAAFAAEGAGEFAGAAEGACDGCGBGEEAAEBFDFBE"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"ADGDDAAEAAGECFDBDFACGDGEAGDAGECFCAACBBEFBFFEAEDCAD", "GAGAAAAAGFDBAGGEFDCCEFAAAEGGAACAAADBEGEEFBGADFE", "ACBDGEAADFABGFFBCCDGEAECGFCBGCAAFCBAGCAACAGDCAGC", "DAEFCCADFAAEFAEBAFCCFBBFCEEFBCEACFBFGAGBBABADA", "CDBDAAFAAEGAGEFAGAAEGACDGCGBGEEAAEBFDFBE", "DGCEAGCAABGECDFAECCEAFGAGAFDGFEDDGF", "BABACBAFEDCCCAGFDFFGFGCDFFDAECAAGEADAED", "AFDAAFFABEEBDBECEAFDAAEFEBFBCDAFEAEFAACGBC", "DAGAGGCACBACGCBGFBBEFDECACCEBAGBBEGEBDE", "DFACEFAFDGCDDADGDFCAAAFEACCBAEGAFAFADD", "FABFGGACCAAAAGECDFBABADFAFCFDADBFADCEACBE", "EEEDABFFEFAFBECDGFCCBFCCAEDCBEAAGABF", "GFCDACDDEAFFBBFADFBACCAABCADBAFFDCCGBABE", "FCEEGAADDFCGGAABAACECFGBEAFEGAACDF", "FABCFGDGDCCADAABDFAEEEAAAFCGDAAABDGDAC", "CDAADAGGGFCAFGEDFFAADAEAAAEBGAAAACBDCC", "BAFDEDCAGCFABDBAAADECFEEFDEFGAAGF", "DAFDCGCFADEBEBFGAACAFGEFCDDAGCE", "CBCBFDBFDBFBAGDBAAAABFGBGGDFFDE", "FGFCDFCAGACFFFFFCAAAAFGEF", "AFFBDBABGGCEABBDCEBDBGABAACGEAG", "BAFGAAECCDBACAAADBADEGAAGAABCFGAFAAAA", "DACGDABDABFADCBFDDABGGDAEACGABD", "DFBEAAGDGDDAEDACBDABDFFAAAE", "BGBAGCCDAEGFEGADFABBGBF", "BCAEAGADBCGCGABECBEDDACCE", "EBFGEEFFACGEEGEEA", "CBAFAAAEBGCABDAGFCAGAEGBA", "BFEBDEGFFDFGFCABAAABB", "BBGEFBGCGAAACEGDEAB", "AEFBGAABGAAFADGDCF", "AABCBECFFAGACGABBGB", "BGAEDACAAFFCBFGAF", "CCDEACDAAAAEAGAADDG", "GECGDGGEAEA", "EAAAABGGCECDCAB", "DGDEGADABDA", "EDGEEDCAC", "GECADABBGAD", "BBGCADEAFC", "CDABBEEEAD", "BGDABEDA", "ABCAACGACAA", "EAACEAD"};
    if(result == expected) {
        cout << "Test Case 76: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 76: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test77() {
    vector<string> names = {"JOHN", "A", "AA", "AAA", "JOHN", "B", "BB", "BBB", "JOHN", "C", "CC", "CCC", "JOHN"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JOHN", "JOHN", "JOHN", "JOHN", "CCC", "BBB", "CC", "BB", "AAA", "C", "AA", "B", "A"};
    if(result == expected) {
        cout << "Test Case 77: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 77: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test78() {
    vector<string> names = {"JOHN", "PETR", "ACRUSH"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JOHN", "ACRUSH", "PETR"};
    if(result == expected) {
        cout << "Test Case 78: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 78: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test79() {
    vector<string> names = {"CC", "BBB", "CC", "BBB", "BBB", "CC", "ABC", "ADA", "DAA", "ADA", "CCC", "BBB", "CC"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"CCC", "ABC", "ADA", "ADA", "BBB", "BBB", "BBB", "BBB", "CC", "CC", "CC", "CC", "DAA"};
    if(result == expected) {
        cout << "Test Case 79: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 79: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test80() {
    vector<string> names = {"AA", "AAA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AAA", "AA"};
    if(result == expected) {
        cout << "Test Case 80: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 80: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test81() {
    vector<string> names = {"BBB", "ACB"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"ACB", "BBB"};
    if(result == expected) {
        cout << "Test Case 81: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 81: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test82() {
    vector<string> names = {"CCD", "ABCD", "ACCC"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"ABCD", "ACCC", "CCD"};
    if(result == expected) {
        cout << "Test Case 82: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 82: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test83() {
    vector<string> names = {"CBA", "ABC", "BCA", "JOHN"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JOHN", "ABC", "BCA", "CBA"};
    if(result == expected) {
        cout << "Test Case 83: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 83: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test84() {
    vector<string> names = {"TESTER", "TESTRE", "TESTER", "TESTER", "TESTRE"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"TESTER", "TESTER", "TESTER", "TESTRE", "TESTRE"};
    if(result == expected) {
        cout << "Test Case 84: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 84: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test85() {
    vector<string> names = {"ZZZZZ", "AAAAA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"ZZZZZ", "AAAAA"};
    if(result == expected) {
        cout << "Test Case 85: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 85: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test86() {
    vector<string> names = {"DCBA", "DBAC", "DABC", "BDAC", "DABC", "ABCD", "ADBC"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"ABCD", "ADBC", "BDAC", "DABC", "DABC", "DBAC", "DCBA"};
    if(result == expected) {
        cout << "Test Case 86: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 86: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test87() {
    vector<string> names = {"BATMAN", "SUPERMAN", "SPIDERMAN", "TERMINATOR"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"TERMINATOR", "SUPERMAN", "SPIDERMAN", "BATMAN"};
    if(result == expected) {
        cout << "Test Case 87: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 87: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test88() {
    vector<string> names = {"CC", "BBB"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"BBB", "CC"};
    if(result == expected) {
        cout << "Test Case 88: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 88: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test89() {
    vector<string> names = {"B", "AA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AA", "B"};
    if(result == expected) {
        cout << "Test Case 89: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 89: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test90() {
    vector<string> names = {"JOHN", "JOHNA", "JOHN", "JOHNB", "COMECOMECOMECOMECOME"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JOHN", "JOHN", "COMECOMECOMECOMECOME", "JOHNB", "JOHNA"};
    if(result == expected) {
        cout << "Test Case 90: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 90: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test91() {
    vector<string> names = {"BB", "AAAA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AAAA", "BB"};
    if(result == expected) {
        cout << "Test Case 91: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 91: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test92() {
    vector<string> names = {"GAO", "MING", "CEN", "FAIL", "JOHN", "FRE", "JOHN"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JOHN", "JOHN", "MING", "FRE", "FAIL", "GAO", "CEN"};
    if(result == expected) {
        cout << "Test Case 92: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 92: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test93() {
    vector<string> names = {"ZA", "AZ"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AZ", "ZA"};
    if(result == expected) {
        cout << "Test Case 93: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 93: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test94() {
    vector<string> names = {"JOHN", "A", "D", "VBBB", "BB", "C", "DDD", "BBBBBBBB", "AAA", "AB", "BA", "JOHN", "ASSSS", "SSSA", "LLM", "MLL", "MLM", "LMM", "ASD", "DSA", "SAD", "FDG", "DFG", "GFD", "GG", "H", "AAAAAA", "E", "BB", "D"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JOHN", "JOHN", "ASSSS", "SSSA", "LMM", "MLM", "LLM", "MLL", "VBBB", "ASD", "DSA", "SAD", "DFG", "FDG", "GFD", "BBBBBBBB", "GG", "DDD", "H", "AAAAAA", "E", "BB", "BB", "D", "D", "AAA", "AB", "BA", "C", "A"};
    if(result == expected) {
        cout << "Test Case 94: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 94: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test95() {
    vector<string> names = {"JOHN", "XYZ", "XXX", "YYY", "JOHN", "ZZZ"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JOHN", "JOHN", "ZZZ", "XYZ", "YYY", "XXX"};
    if(result == expected) {
        cout << "Test Case 95: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 95: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test96() {
    vector<string> names = {"JOHN", "A", "AA", "AAA", "JOHN", "B", "BB", "BBB", "JOHN", "C", "CC", "CCC", "JOHN", "CCCC"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JOHN", "JOHN", "JOHN", "JOHN", "CCCC", "CCC", "BBB", "CC", "BB", "AAA", "C", "AA", "B", "A"};
    if(result == expected) {
        cout << "Test Case 96: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 96: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test97() {
    vector<string> names = {"BAAAA", "AAAC"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AAAC", "BAAAA"};
    if(result == expected) {
        cout << "Test Case 97: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 97: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test98() {
    vector<string> names = {"CC", "BD"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"BD", "CC"};
    if(result == expected) {
        cout << "Test Case 98: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 98: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test99() {
    vector<string> names = {"AAB", "BAA", "ABA", "AAB"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AAB", "AAB", "ABA", "BAA"};
    if(result == expected) {
        cout << "Test Case 99: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 99: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test100() {
    vector<string> names = {"BA", "AB"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AB", "BA"};
    if(result == expected) {
        cout << "Test Case 100: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 100: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test101() {
    vector<string> names = {"ABCBB", "ABCAC"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"ABCAC", "ABCBB"};
    if(result == expected) {
        cout << "Test Case 101: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 101: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test102() {
    vector<string> names = {"ZZZZ", "JOHN"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JOHN", "ZZZZ"};
    if(result == expected) {
        cout << "Test Case 102: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 102: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test103() {
    vector<string> names = {"ZZZZZ", "JOHN"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JOHN", "ZZZZZ"};
    if(result == expected) {
        cout << "Test Case 103: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 103: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test104() {
    vector<string> names = {"JOHNA", "JOHMB"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JOHMB", "JOHNA"};
    if(result == expected) {
        cout << "Test Case 104: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 104: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test105() {
    vector<string> names = {"AA", "BB", "AB", "BA", "AAA", "C", "CC", "CCC", "JOHN", "JOHNA", "JOHNAA", "JOHNAAA", "JOHNC", "JOHNB", "JOHNBA", "JOHNAB", "AAAC", "CAAA", "ACAA", "AACA", "ABBA", "ZZZZZZZA", "ZZZZZZZZZZB", "BBB", "CAB", "CAAA", "BBB", "BCA", "BAC"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JOHN", "ZZZZZZZZZZB", "ZZZZZZZA", "JOHNAAA", "JOHNAB", "JOHNBA", "JOHNC", "JOHNAA", "JOHNB", "JOHNA", "CCC", "AAAC", "AACA", "ABBA", "ACAA", "BAC", "BBB", "BBB", "BCA", "CAAA", "CAAA", "CAB", "CC", "BB", "AAA", "AB", "BA", "C", "AA"};
    if(result == expected) {
        cout << "Test Case 105: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 105: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test106() {
    vector<string> names = {"AAAAA", "BB"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AAAAA", "BB"};
    if(result == expected) {
        cout << "Test Case 106: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 106: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test107() {
    vector<string> names = {"AAAA", "BB", "AC", "BB"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AAAA", "AC", "BB", "BB"};
    if(result == expected) {
        cout << "Test Case 107: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 107: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test108() {
    vector<string> names = {"BBB", "ABC"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"ABC", "BBB"};
    if(result == expected) {
        cout << "Test Case 108: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 108: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test109() {
    vector<string> names = {"ACB", "ABC"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"ABC", "ACB"};
    if(result == expected) {
        cout << "Test Case 109: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 109: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test110() {
    vector<string> names = {"JOHN", "C", "AAA", "AAA", "C"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JOHN", "AAA", "AAA", "C", "C"};
    if(result == expected) {
        cout << "Test Case 110: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 110: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test111() {
    vector<string> names = {"C", "AAA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AAA", "C"};
    if(result == expected) {
        cout << "Test Case 111: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 111: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test112() {
    vector<string> names = {"ZZZZZ", "JOHN", "ZZZZZ"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JOHN", "ZZZZZ", "ZZZZZ"};
    if(result == expected) {
        cout << "Test Case 112: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 112: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test113() {
    vector<string> names = {"AB", "BA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AB", "BA"};
    if(result == expected) {
        cout << "Test Case 113: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 113: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test114() {
    vector<string> names = {"AAB", "ABA", "AAB"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AAB", "AAB", "ABA"};
    if(result == expected) {
        cout << "Test Case 114: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 114: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test115() {
    vector<string> names = {"ITNA", "ANTI"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"ANTI", "ITNA"};
    if(result == expected) {
        cout << "Test Case 115: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 115: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test116() {
    vector<string> names = {"JOHN", "ASCABSAD", "AAAAZZZZ", "JOHN", "POSDOMSVMOVMOVSDOQOQWI"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JOHN", "JOHN", "POSDOMSVMOVMOVSDOQOQWI", "AAAAZZZZ", "ASCABSAD"};
    if(result == expected) {
        cout << "Test Case 116: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 116: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test117() {
    vector<string> names = {"BBB", "CC", "BBB"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"BBB", "BBB", "CC"};
    if(result == expected) {
        cout << "Test Case 117: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 117: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test118() {
    vector<string> names = {"CC", "BBB", "AAAAAA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AAAAAA", "BBB", "CC"};
    if(result == expected) {
        cout << "Test Case 118: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 118: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test119() {
    vector<string> names = {"AI", "AACE", "AACE", "AI", "AI", "AACE"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AACE", "AACE", "AACE", "AI", "AI", "AI"};
    if(result == expected) {
        cout << "Test Case 119: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 119: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test120() {
    vector<string> names = {"AAA", "BB", "AAAA", "JOHNO", "PADNI", "C"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JOHNO", "PADNI", "AAAA", "BB", "AAA", "C"};
    if(result == expected) {
        cout << "Test Case 120: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 120: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test121() {
    vector<string> names = {"ZZZZ", "JOHN", "ZZZZ", "ZZZZ", "JOHN", "JOHN"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"JOHN", "JOHN", "JOHN", "ZZZZ", "ZZZZ", "ZZZZ"};
    if(result == expected) {
        cout << "Test Case 121: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 121: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test122() {
    vector<string> names = {"AC", "BAA"};
    TheBestName* pObj = new TheBestName();
    clock_t start = clock();
    vector<string> result = pObj->sort(names);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"AC", "BAA"};
    if(result == expected) {
        cout << "Test Case 122: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 122: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    test67() == 0 ? ++passed : ++failed;
    test68() == 0 ? ++passed : ++failed;
    test69() == 0 ? ++passed : ++failed;
    test70() == 0 ? ++passed : ++failed;
    test71() == 0 ? ++passed : ++failed;
    test72() == 0 ? ++passed : ++failed;
    test73() == 0 ? ++passed : ++failed;
    test74() == 0 ? ++passed : ++failed;
    test75() == 0 ? ++passed : ++failed;
    test76() == 0 ? ++passed : ++failed;
    test77() == 0 ? ++passed : ++failed;
    test78() == 0 ? ++passed : ++failed;
    test79() == 0 ? ++passed : ++failed;
    test80() == 0 ? ++passed : ++failed;
    test81() == 0 ? ++passed : ++failed;
    test82() == 0 ? ++passed : ++failed;
    test83() == 0 ? ++passed : ++failed;
    test84() == 0 ? ++passed : ++failed;
    test85() == 0 ? ++passed : ++failed;
    test86() == 0 ? ++passed : ++failed;
    test87() == 0 ? ++passed : ++failed;
    test88() == 0 ? ++passed : ++failed;
    test89() == 0 ? ++passed : ++failed;
    test90() == 0 ? ++passed : ++failed;
    test91() == 0 ? ++passed : ++failed;
    test92() == 0 ? ++passed : ++failed;
    test93() == 0 ? ++passed : ++failed;
    test94() == 0 ? ++passed : ++failed;
    test95() == 0 ? ++passed : ++failed;
    test96() == 0 ? ++passed : ++failed;
    test97() == 0 ? ++passed : ++failed;
    test98() == 0 ? ++passed : ++failed;
    test99() == 0 ? ++passed : ++failed;
    test100() == 0 ? ++passed : ++failed;
    test101() == 0 ? ++passed : ++failed;
    test102() == 0 ? ++passed : ++failed;
    test103() == 0 ? ++passed : ++failed;
    test104() == 0 ? ++passed : ++failed;
    test105() == 0 ? ++passed : ++failed;
    test106() == 0 ? ++passed : ++failed;
    test107() == 0 ? ++passed : ++failed;
    test108() == 0 ? ++passed : ++failed;
    test109() == 0 ? ++passed : ++failed;
    test110() == 0 ? ++passed : ++failed;
    test111() == 0 ? ++passed : ++failed;
    test112() == 0 ? ++passed : ++failed;
    test113() == 0 ? ++passed : ++failed;
    test114() == 0 ? ++passed : ++failed;
    test115() == 0 ? ++passed : ++failed;
    test116() == 0 ? ++passed : ++failed;
    test117() == 0 ? ++passed : ++failed;
    test118() == 0 ? ++passed : ++failed;
    test119() == 0 ? ++passed : ++failed;
    test120() == 0 ? ++passed : ++failed;
    test121() == 0 ? ++passed : ++failed;
    test122() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=309454&rd=10804&pm=8413
********************************************************************************
#include <string>
#include <vector>
#include <algorithm>
#include <cstdlib>
#include<cstdio>
#include<queue>
#include<stack>
#include <set>
#include<map>
#include<iomanip>
using namespace std;
class TheBestName {
  public:
  vector <string> sort(vector <string> names) {
    int i,j,k;
    for (i=0;i<names.size();i++)
    for (j=i+1;j<names.size();j++)
    if (names[i]=="JOHN") continue;
    else if (names[j]=="JOHN") swap(names[i],names[j]);
    else {
      int w1 =0; for (k=0;k<names[i].length();k++) w1+=names[i][k]-'A'+1;
      int w2=0; for (k=0;k<names[j].length();k++) w2+=names[j][k]-'A'+1;
      if (w1 < w2) swap(names[i],names[j]);
    if (w1==w2 && names[i] > names[j]) swap(names[i],names[j]);}
    return names;
    }
  
};
 
// Powered by PopsEdit

********************************************************************************
*******************************************************************************/