/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=10594
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class SteeplechaseTrack {
public:
    int maxComplexity(vector<string> fences, vector<string> tracks, int N);
};

int SteeplechaseTrack::maxComplexity(vector<string> fences, vector<string> tracks, int N) {
    int ret;
    return ret;
}


int test0() {
    vector<string> fences = {"310", "300", "301"};
    vector<string> tracks = {"010", "001", "000"};
    int N = 4;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 13;
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<string> fences = {"923"};
    vector<string> tracks = {"1"};
    int N = 100;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1004;
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<string> fences = {"111", "222", "333"};
    vector<string> tracks = {"743", "985", "380"};
    int N = 1;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<string> fences = {"101", "202", "303"};
    vector<string> tracks = {"659", "431", "770"};
    int N = 5;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<string> fences = {"693", "982", "236"};
    vector<string> tracks = {"603", "986", "780"};
    int N = 10;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 172;
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<string> fences = {"199", "111"};
    vector<string> tracks = {"01", "00"};
    int N = 2;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 19;
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<string> fences = {"199", "111", "111"};
    vector<string> tracks = {"010", "001", "000"};
    int N = 3;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 19;
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<string> fences = {"999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999", "999"};
    vector<string> tracks = {};
    int N = 100;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1809;
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<string> fences = {"160", "297", "509", "786", "292", "726", "204", "770", "866", "504", "512", "561", "328", "607", "272", "472", "566", "942", "575", "389", "737", "234", "588", "186", "460", "467", "800", "701", "802", "732", "466", "223", "188", "217", "512", "117", "169", "217", "403", "730", "876", "212", "697", "618", "969", "844", "684", "699", "764", "547"};
    vector<string> tracks = {"45799265358137025692351676982664807176833764360701", "88700945109538514556850554300128908206948539250289", "66178522682389695999776005751654176615326546427007", "67761995673017944375022719344361487437852496497874", "84013636197357508995632144246400599084449589012657", "99781495012575496781049623895611686287676548434837", "70864957308190558996640474111235262717588918958464", "81780102851069968330055761237534660804025378002778", "54217555694583751746046542954955551140292059277899", "67537065888060223374224192722774782531589260296215", "19109174042938087422857644707534938764958973829559", "13165873846763276672836990693088727377192268549736", "37003412088646649281727997487851209028792688856522", "99598534306554191585589496770518729210391415024449", "15364370957754146349397574878872849328753774547676", "37279496806807475448365974538004268587412618654750", "45276418058118099102512942853716797509389674749767", "34504205252310914169513995280267528024434081085591", "36783289326519675125024266055146065769491997392861", "67150134142277690515117106353721390459311672165521", "52366441355014368121700929804749311770242178153365", "79257814427710125875329458808334375537746615932309", "04309798912284041661472067621971901030118550948776", "53953550849077509521309564197022077606749575369091", "57338283339266725036870242540417265326316217490826", "99957631869974006987677450093837434007099713716489", "11147202484791568104482352785883448212315157422197", "54868991916400345866880275175427353593624489178946", "55341982246503850438894703492371694664565110853924", "47315481575060895086587128920869380754933367978530", "76013895387307694782732361311155084702973539738537", "65028621426038606290407064570269737603994140630859", "43294180518413085706415526059199051923985877963732", "48229504574295429308592462495721209723101167307005", "12371949360124424103352216922989326908031512107344", "09191947592836706626811956909866459644775080499046", "96148663169139239189769673900704415444764690054151", "25663923504767100968203320288769662448955860059685", "86733102308741409168171617867456077868170202516987", "19355149814392790428707767170214984842688795878003", "82592343751131005259921988231999067448922289720974", "61459882008497900829167491993318819786188787144850", "02681991728736118009590933630804692765663282899320", "78110148098979777149055697598645722081188296623015", "61124309924373857843248026971442879470323939625612", "60006073599612385816622268719480710187115711464392", "20189156278102242605377175396007716913954294597422", "89496358972956784954943680607695925182669901895337", "53310671154812547817570036966460423666806443329430", "11963276082282755582231034038972274445319089361135"};
    int N = 95;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1622;
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<string> fences = {"235", "203", "119", "501", "136", "177", "227", "483", "329", "864", "871", "207", "573", "599", "420", "479", "501", "412", "590", "461", "807", "426", "847", "271", "960", "125", "217", "394", "505", "709"};
    vector<string> tracks = {"784399542919850649956138430260", "698342980227344297888865577027", "405509148508827225468554421435", "196775429073237013137873064247", "217008313680557743596028730079", "295244435622167557421504962281", "924012515913420195524377874251", "887389138496922664937260255176", "031941350466128471136818108400", "484550747875246881058168333557", "705642689612944434649375475100", "945956026046089664188671013075", "520027289131964537678475792412", "345822006899947786226239918061", "417462742092598793681998648956", "061101829179187282200512428583", "525462044490920044223735101638", "317078446046735681392236770194", "002734042131761073005740374290", "474112458067988850896736232561", "670815131337610284928737478006", "926097214278588016029727955781", "482338553711978843985979513960", "873494771235046449382806870952", "425102137111686237512458502822", "886875656885657933172011247380", "334696838734403839411473315433", "062463888458201925561533026909", "619497654533911940334633447749", "345935669963779237134337683746"};
    int N = 54;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 871;
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<string> fences = {"964", "377", "540", "820", "478", "528", "409", "639", "553", "657", "938", "993", "731", "143", "975", "103", "735", "493", "334", "932", "770", "336", "668", "286", "570", "239", "412", "108", "607", "819", "572", "691", "656", "440", "334", "196", "442", "387", "303", "155"};
    vector<string> tracks = {"6834344462828090669639377830889569691331", "3582271880287077581544282927631810858899", "3536761881265479206407582951635067224612", "0679981407501544688746335065321966640523", "4904779461934000457527205188327265808074", "2247825113206447706201144762594449601509", "2896819912322215233904555298775357184272", "1584600743446865754748191579145430932895", "6535089473808447869316901993433795380893", "0765315957920984152246345371457246569792", "3726728749348905058218308820049384666743", "0144902947766573675380440769005606430686", "1212152994724793897710019963725473121309", "9465229614022662100656038770434780506469", "3028966349384101184761768202203598808511", "4634068206717846128160395174729833775176", "1834112356470671562049744611455029736328", "4685494119972340458895735400545734769238", "3670215858585375697546926610111019932579", "6339027638798590929731931782571514585141", "6311285004755792503794404100685660178594", "3386478740304763981193075145086242970683", "2179870288874737679107321835837428045964", "4243953463114700493648223719016719259002", "3853927140341400846653330353421030893490", "7500987445671007600891507452550912661866", "3367151311260575898398506136301367191047", "7924084989810493072191370507662246609290", "4056649316857008963770362154991505362823", "7632965709301441478135664392841772152854", "1868751674451617822191356797183062195067", "3950494127023407870380274962276933994373", "8575535324880549924306409800677804207168", "4327520548481860556549597591439760479529", "1174780075414551319675068929696214878336", "3863867372733471788427322294609816592528", "4928199598745707891555512643110301195638", "9879883478342240654357843876684626359365", "9784929786651927653448826715388653199490", "7497576044721668266239706311920935274462"};
    int N = 50;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 857;
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<string> fences = {"414", "554", "335"};
    vector<string> tracks = {"271", "060", "955"};
    int N = 12;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 135;
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<string> fences = {"947", "851", "878", "846"};
    vector<string> tracks = {"2101", "4367", "3315", "5502"};
    int N = 44;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 623;
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<string> fences = {"183", "934", "811", "718", "363", "848", "166", "794", "207", "423", "577", "107", "545", "281", "640", "687"};
    vector<string> tracks = {"9289110112488446", "9956287493247969", "5132271527866107", "2942528578912395", "2191344781098094", "6927231822277698", "1895814467230535", "7147976191009475", "8645929541965825", "5410628126810437", "9172207413729324", "4711535438773541", "2156107954951444", "0376865623141912", "3475086337052155", "9381552352780173"};
    int N = 31;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 559;
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<string> fences = {"132", "783", "881", "428", "242", "879", "949", "530", "437", "310", "217", "938", "983", "231", "195", "569", "619", "776", "398", "117", "714"};
    vector<string> tracks = {"713282325984218705197", "133026135762807972096", "944194301782381981645", "417335586845572270174", "026697926495952695607", "206674841360513519045", "231704643843772487864", "824751742599872144708", "360046928931072745365", "582737901437439573791", "296761983080916501514", "232403045033761742666", "321012097913438901769", "851265210889905056578", "118046532923291198110", "146208751018073873592", "474724065427153105078", "592516166126583040226", "653384441333956604150", "191297158977661471761", "825924332274002964002"};
    int N = 6;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 105;
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<string> fences = {"138", "543", "665", "114"};
    vector<string> tracks = {"4347", "7086", "7369", "2115"};
    int N = 51;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 617;
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<string> fences = {"309", "655", "734", "147", "515", "135", "183", "537", "527", "573", "699", "891", "501", "403", "490", "609", "313", "572", "702", "349", "847", "805", "106", "323", "156", "279", "878", "327", "387", "822", "333", "893", "605", "214", "659", "475", "552", "639", "802", "404", "759", "892", "928", "123", "516", "599"};
    vector<string> tracks = {"2531418292469962020961214461040861106980139360", "7444629611985121275071876633689950132642034563", "5946811640125116952289319005934362971129332678", "5213123365781661167838640518433881779008078345", "6690991807004812404047899289900036771347552658", "2941262450843721254459103302108872273555079726", "5636734734714088178775137144279562471392113438", "2444857080899110767665617099200425292126795763", "4777719321716297980119098641830565440983580702", "0750913303984284407937186713131782059137558324", "4391771686457463089485713913407540474179653270", "2118731336129099418849899471275250901756485731", "0733223678679408063316442258331235320629368270", "7388301442242469618528958899703760200143402706", "5931151928679206668893656685471185440746533435", "8684295776457909036838518358261954469916228150", "0278957833804840997700495557839942193448817682", "9253970088477083244052203715273102129263486036", "0899266542339912323817684611444307134913501482", "9501673548981692314028500283294128306006753775", "4076369453691576994642464011962026555864094211", "3718016250328476955290400846977029711640691954", "2775812500927153107474174138811848743905978557", "4870907168644823515584891590842740711072329110", "7697686592896019799897043425297843803007056307", "2651816871950595187292914972304517469742991554", "7988691325686950605973987462991985332190385596", "1754244544181938772480975621006117435878236486", "4446593990697793042519142348214284681556042370", "6539446611077615552557072398251106363484257033", "5563314485310469373649518900644708479490937624", "5542888345270226942691835502349686878637593201", "5121288155757384699648653408199942834110676840", "6745346815922709584182469204359823488892447537", "2975087227279096882219160829302793673949403661", "5714755503155850983941542034165813293212657288", "3027740133658435880222579564679178811588728693", "2973533388831736253432601079385104747958104866", "6809164010391036068886519212076768832659669890", "6464553781446224058501861432491840710958593736", "7207180728286132553735538461967452792974162314", "5599450140892587153285765518397361422892535439", "4415790558502914513369220506721148360685663136", "7557814926800645986613457192717001011513574455", "0321141316818730678423737343096907960140399600", "3471407234858288718037546646590322254995811342"};
    int N = 66;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1146;
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<string> fences = {"810", "147", "452", "372", "935", "453", "205", "311", "185", "573", "796", "923", "486", "603", "760", "974", "522", "882", "745", "409", "480"};
    vector<string> tracks = {"443635693820961974930", "466238911655266002272", "836765819239087988779", "656165323769633934547", "691418553528914566032", "781047409997906035268", "357153153494969329349", "822704197530101030114", "304450651601664791985", "512366258707559909130", "014380504823000534831", "818760221780635596861", "421161993699104103660", "826583326762489853346", "276807965297803532326", "256176842608577804012", "920919068091682766458", "735855284486019268921", "775057181882896757531", "144035195882015252145", "343905214916306768148"};
    int N = 21;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 360;
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<string> fences = {"430", "199", "470", "342", "549", "813", "931", "289", "121", "486", "984", "493", "622", "130", "102", "543", "250", "334", "171", "945", "891", "624", "517", "760", "536", "892", "738", "676", "316", "732", "877", "922", "964", "586", "479", "148", "276", "586", "257", "171", "665", "778", "978", "797", "792", "127", "382", "510", "810"};
    vector<string> tracks = {"1298667045592948338133343944624684532849275733166", "9577541394988262419002323124464109632988878687391", "4491788120103128744737402841994219110693992454673", "8198987361577551242231988829910072284664353806724", "3035468123550503702321820055667177875233659239636", "0847106983735902278336908308599762569865968286850", "8587898086071693203579876036793776647117699534557", "8218982604064783418094174204651710211671022711186", "0789164617279955937245999517688159544321249289417", "6792830178605264910707962546553767947847327321905", "2661271915186277915464151146735446265399560497370", "6611218415996639945107236107806703067612042489695", "6817987693528478414979310266630421145142652503989", "1458544712765299623690683088771305571665976547252", "7924304623615781548835521043762502877245735346296", "7102392839649150348958517383644190793809304386067", "2445342281423093743460794914884652713533980619935", "2353779378217787887441959606778501587423419597520", "7515199088461343447769763095753512023765559095619", "7899958601883365169841728763324832329741196238526", "9611107084560951648323064484232539859820486902905", "0704465327092555827696892313473020227429673525256", "3445063297102188070622128873698599321704690913837", "2813601908909417396014810802411221282597369871030", "1999652585104446725499939370603725283565791253175", "5333369002337366525830974970593546998831853476593", "6156060830765017979612489061391007863769861785637", "2598726095399819247982354147860230261927139095366", "6496568370225313881775177244371630278801394088711", "7021288288623919927632316079606344729518358449606", "6707278686690087301925717668382354779967970076184", "0382813576236543603501871511057623203256264613357", "6335697889027691018083615511622491467526514315741", "5381000113705617165960266965872142568507131549313", "4192772537898202100555711586265106294298246351053", "8613032720562987563148040701410570050644564004849", "5687371529296378394026980209458990536526792583353", "5994829074901382015400216411523280480295726823568", "5596920032579279006488653160897052512720176973285", "0382566943968285799486171703979845792102691158817", "5476038722134027868376042202122994054701523027484", "9974407112114496696714212206982438168628687567626", "3293533136644412871205174396206892077517476527302", "9522394817359143777195202648843187436839121128624", "5350440138848706684130064432133426816280719243582", "5001902721298602454367563007789953419326321910922", "6873329125962201125038175533950547911838104946343", "6226452365665277423034850842704231188016980086825", "1702405227906389099088208599920957650620240579857"};
    int N = 73;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1319;
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<string> fences = {"641", "964"};
    vector<string> tracks = {"12", "79"};
    int N = 81;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1459;
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<string> fences = {"419", "465", "478", "870", "913", "955"};
    vector<string> tracks = {"604001", "022034", "847097", "048395", "638137", "263830"};
    int N = 28;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 469;
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<string> fences = {"355", "765", "705", "541", "240", "876", "993", "484", "981", "191", "292", "508", "194", "241", "164", "403", "235", "893", "867", "194", "848"};
    vector<string> tracks = {"018086466203960886669", "354493384987302674928", "899594791444930851924", "840467046178245275387", "366057211171110616886", "478695139775011564907", "264644624744035658498", "495308837354650682350", "385759164434744996651", "787287392117028093339", "625089530863416628182", "119718971451628667650", "986507738336470484760", "859990048396142370174", "406256709700188265848", "925181384588301406640", "757900531612058483542", "499338797189110291867", "688918707317764120406", "367208208057173087956", "147836298838554010307"};
    int N = 54;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 950;
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<string> fences = {"401", "241", "685", "760", "508", "676", "970", "101", "504", "746", "519", "945", "956", "953", "311", "119", "635", "158", "420", "257", "200", "113", "340", "231", "744", "240", "811"};
    vector<string> tracks = {"530253334272747469247473460", "693844949136804129629840118", "426816151243200206481052887", "013383367483189125855115298", "585505516868768003575837538", "329009364900837774672475974", "238978974274932503784510773", "069419473088691682989590378", "996780541180946441658080085", "255180506000109322350433465", "928161967891388592497343502", "402961551830348529388769607", "433071678693645822276989404", "868275952683137427575887893", "686479482566103814204014127", "421945141887725180033173395", "146977636081063160318651565", "040711924562804062317909574", "419442307744954387965187449", "187813179076019042341445172", "622030769055085230712076664", "546357021722668061726676917", "857908825668896026342915538", "303550916313810878830578612", "603826639330186459733576229", "767421163432173766609078036", "338054677395293128803568030"};
    int N = 65;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1174;
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<string> fences = {"959", "929", "772", "289", "923", "220", "753", "385", "769", "568", "401", "664", "961", "871", "123", "609", "911", "959", "726", "650", "180", "907", "816", "692", "558", "918", "623", "961", "869", "240", "585", "202", "388", "452", "921", "685", "669", "453", "351", "568"};
    vector<string> tracks = {"6495332841544699438212476343296203684898", "5489961833057674237455510951641477820624", "8603613582965685047837789648427598584990", "7711834283762016318968458137096095609940", "7131998996112314782664315274817054893107", "1140185862515011196451023906552839007503", "4377904535072706970997913986611970048315", "8018306284257282945345139865234648644511", "2570696616210134430483382450931299841897", "0644218945818877479378711235264762603658", "5511123830910666241807578662665398086693", "5342693314075879965351099584929089529777", "6196922471898119136469008508569946280538", "2966919564737843552084459468069358062893", "4866076122868985434033405344106944948561", "1637998731944935832463398158060170467896", "4747516114506958551347164681348820159604", "8813162713403764334691797414103676743690", "7650947906721220282057842883230538396744", "9301761669329722967203808293814317315107", "5941166860107414097856358737556567035454", "8997728511453340747770972668847754796721", "1167514468258589600077962924993106979628", "2150844951126637458549049420031258787965", "3678254633051012932750369651977014723181", "3306275564170877461881667857965944147008", "3859161906662109598885396649419944709642", "8809543749731159681455947874336576599940", "5812461709771737260115007660465757548175", "9368714758482510366719831395902973167667", "6671644717964785548984285922036124087041", "1839178533241825922445995420543752176401", "4507607067869605023125051170936666432521", "2696801226548902008560769532804906683661", "5039958001247799580009308438715314309243", "4635715800557548377600015060548275034595", "6646747251267500813350671560491132034140", "2248093960721228405576586972050507289065", "0193113560769132762412291754859103261437", "5073204081089198389677458912335545530872"};
    int N = 82;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1481;
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<string> fences = {"166", "644", "970", "181", "710", "329", "857", "441", "140", "864", "738", "544", "561", "531", "993", "828", "716", "496", "531", "238", "310", "723", "821", "405", "801", "306", "622", "246", "623", "694", "655", "224", "516", "463", "877", "221", "270", "316", "691"};
    vector<string> tracks = {"010533979546211512315849087277043023057", "526600626072213895910869749005546545949", "461089179525128655503623028718907417261", "420456493680060310423267097501482376205", "657701186588885808152085115529676419201", "966566409208931602471478891630658522506", "924178035163768619307261193142992319619", "653049691438240059363301761084464199922", "115390820296367643390419818270390010074", "056390032158681887343733417209683057299", "226903196975615290265755353536377157850", "693083718324575299587389925994345472271", "053319535158211713073762761948540667181", "599883192160427295434504033111939580699", "768107044868508281414714793048537648491", "460505974521206225451131986915258821467", "898687062910507537595547276105940139284", "299085379289895003142012557499283043871", "485244859226949946155163939811562522860", "631750641925651141900022163378538844584", "682854200909616014236190170406573082635", "520025922079232195199279239160657536897", "957044511744902814854096676006736213129", "700464125448812857458572579895718665343", "801907579639224043170522736470001120765", "587224222515753962273737776789283607819", "335334821081199381232686871952573600236", "449787499717312389390056648824737950763", "837028430834975614025881115116200984625", "074872042555245873605435620460188968247", "068970653871982388873095926909736727208", "208367080230203963963732640690828948007", "756472156212636233336687231002352958516", "108853953895529355297728320583966316736", "175435768145680945860572839553664994285", "135622390635895948129028016425108832571", "280105932770170370512582332258608832138", "305913933496165321501676108992393953509", "616770911770004870691715322923872499079"};
    int N = 50;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 857;
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<string> fences = {"768", "519", "121", "290", "339", "150", "342", "720", "697", "446", "267", "983", "787", "524", "804", "377", "308", "390", "642", "943", "215", "158", "748", "126", "536", "692", "809", "704", "929", "604"};
    vector<string> tracks = {"305676191112565413893174905171", "691555914205790210550392167905", "765452352516751325928982581678", "226884191240277644745414536979", "100787430524230167579326426745", "356418782002869797503755752209", "735044000326570891620600995200", "247840716349175751293431186375", "037943643223392562216749845004", "848877060229194528654015799858", "061669153782699738671409033917", "804005254904993331267018969941", "905427893615354647021689881179", "637331800991378683905559855919", "636425243517077836085499290049", "785543055538836629626076935343", "105022169986394875821713914688", "786488896772616208378387751999", "208535937509231367504402113867", "331247954746660463773081826753", "954193889518388622483798595102", "010811619138307253025160918849", "193603390388038589885665407993", "919270565383132873426268793848", "426460935648615950563751317048", "399622891282335174993238778021", "704322995626649654484049412290", "944867360274711107507840318801", "899771704199131152301910357325", "484613498765625250954064900088"};
    int N = 94;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1666;
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<string> fences = {"878", "948", "201", "135", "131", "980", "773", "741", "812", "757", "512", "133", "784", "739", "782", "953", "707", "715", "396", "609", "975"};
    vector<string> tracks = {"212768227701823587335", "310043575082655598763", "296493233059056816565", "883311446511797319105", "672798532382939955929", "895777114539097636819", "725290762322181523738", "138100624853180925517", "628208880937488774805", "495301726822131895293", "926623786654569052667", "256182986264614949645", "825451351516445788219", "511927385798111701610", "806486373400436626109", "212210481992097538434", "849621259882487038121", "802523618339532326244", "381669812600667340395", "299637735076637570458", "527041636699278879166"};
    int N = 57;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 978;
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<string> fences = {"511", "344", "853", "143", "300", "500", "272", "761", "541", "570", "114", "110", "797", "516", "528", "866"};
    vector<string> tracks = {"1568623231294708", "5889213250794952", "1031373650909305", "5533196223103331", "6972366750995816", "1357471809907593", "2597289811594841", "9251859634819209", "7280961947504843", "3666107334790835", "8152850034961384", "2090456999132421", "7979694569945577", "2959145311939942", "3253904446882828", "5862774107098302"};
    int N = 45;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 705;
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<string> fences = {"512", "293", "575", "709"};
    vector<string> tracks = {"1907", "9304", "6376", "4878"};
    int N = 4;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 64;
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<string> fences = {"949", "526", "461", "251", "758", "251", "811", "648", "872", "232", "288", "636", "566", "445", "963", "101", "649", "864", "629", "774", "898", "712", "498", "431", "614", "887", "884", "748", "999", "846", "662"};
    vector<string> tracks = {"3555496118576564048395617885926", "8985293770457861213406945422314", "5115239704329344706542307782161", "9301884369417753072261427152930", "2328904265584036513275782503868", "0134956914792958978992494419712", "5541301195867215406695465600430", "8068692382091932817551196147319", "9354089711209215459504805564454", "5121522273709122940155392746637", "8435093556919247071463338132896", "9265736650410558672660490527029", "4226224553512207468046125942348", "0548175321393176963871475272961", "3415270059003309811231775370841", "7592854280224832645255251284927", "6287124390811825012058332300608", "2737843956025899560391014665762", "8309422266417718751490479287722", "9982012459955910207157293931761", "0631187693026906299115275422371", "5504654311661410284884437231128", "3510709632290096558470004690805", "3294317357547897709500684107272", "4205476086725160394228073945030", "1784681081852369087905013147908", "0042098903884614715976705825465", "4372182542727700484788892965575", "8833589480216205169022515125197", "0551468777802351129852310536838", "3766662835377879968307280929994"};
    int N = 36;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 639;
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<string> fences = {"520", "310", "516", "801", "264", "986", "573", "667", "650", "562", "970", "790", "903", "383", "462", "807", "551", "201", "538", "297", "950", "126", "438", "490", "689", "660", "168", "366", "994", "744", "224", "610", "261", "543"};
    vector<string> tracks = {"6011290979738784732773544719642231", "5446011218673800732569994159281230", "8243816590927210759835680966496474", "1350133119044913869052060088566853", "6963533362446397041634882402641542", "5785468012771839034101807305292780", "5007435096608605973296903145327515", "0301423707691061745632305363186569", "7862031290122831409517320869971870", "3715965452638920430461885147905420", "5255333660677420101960884583813245", "0329046312041279509100552685421325", "6957395004393502531388387614752237", "6099681467475626560095546453296791", "9659024843419733794442650968141818", "5117120438371541343666708991883729", "0840966969093487200694800093871685", "7749108346579247576714218536040610", "2213270047229457361183640290247767", "0247831973350461371255116197305071", "7107398898860406763371757798493163", "1891712555786941920238564625258566", "6885451180661450190333799744091444", "8971366031038755752164217459736931", "4652340268403717522505148924624611", "8886484649052108548479518309481099", "7912564847284172349539971920930891", "2128066633764607266078001746372671", "4020493624082829434888193954398441", "4471643959178760276299997836958554", "3803577122841950448099329469388796", "6010711063719368403260295803956342", "4476633980363582848589430050356952", "8269101270152711302959410810811930"};
    int N = 56;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 978;
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<string> fences = {"599", "295", "105", "779", "953", "199", "691", "742", "734", "783", "504", "221", "243", "527", "651", "863", "638", "892", "473", "894", "923", "444", "726", "391", "563", "124", "663", "615"};
    vector<string> tracks = {"5175090999750355205232905161", "3690807935161652578577045130", "3036578130247693327518822232", "1290156302094093989500864743", "0660601670600208225424846271", "1228975047086598081480776353", "1995029599325634914700580981", "5284187930334611649761757185", "4240454323605883210180105465", "1574378888892993879318125683", "1746754544147952950111959041", "8630726080245841000863611320", "9459300479496759538955601592", "6266111284850907203269242926", "2093584725243869897221546452", "5538194804637692417159394601", "5961048381814595301030495879", "7507557050547525751879826865", "4308927064968431658489201565", "7728469806092027241875244449", "8925274424706251892535250680", "4233160085588434975526252432", "6171552943153010960869581539", "0913522132796806117884414461", "8875555216039095107442739328", "3511965634326488728635034983", "4232439724109522008971312155", "8497864997109889614159003780"};
    int N = 99;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1641;
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    vector<string> fences = {"354", "445", "554", "207", "607"};
    vector<string> tracks = {"00460", "29663", "47895", "43437", "06127"};
    int N = 11;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 145;
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    vector<string> fences = {"745", "789", "848", "723", "799", "695", "930", "208", "953", "518", "863"};
    vector<string> tracks = {"57451130923", "97993740750", "09088135014", "59949386897", "92738126376", "31354472381", "48414431413", "17358319395", "13545584500", "04324414931", "34384016851"};
    int N = 35;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 586;
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    vector<string> fences = {"433", "496", "317", "225", "648", "253", "302", "958", "729", "992", "960", "465", "131", "676"};
    vector<string> tracks = {"65204935769395", "81850838854167", "41686584274505", "57414007478927", "74639824767116", "70426866751880", "64401365380449", "34802637646701", "92785165179637", "88602587438538", "14595930163370", "77295641047711", "24411374636036", "41645715679151"};
    int N = 80;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1290;
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    vector<string> fences = {"789", "512", "259", "199", "346", "511", "868", "218", "488", "854", "709", "560", "622", "951", "421", "674", "170", "634", "322", "297", "996", "643", "963", "339", "172", "341"};
    vector<string> tracks = {"31803094050068786985108379", "87821282996471933614695967", "63315251243423498971829795", "50341610440246852853169453", "97733349516330360594893003", "74455647968032337818928563", "69655405806436496705280527", "63133351644585470294410293", "68516071528801141794055145", "88604102090473041855856206", "21593628031446088243036860", "50609386630875599458453464", "99690973971325282776470549", "88146147305462486991160333", "85021517921642918901221231", "89961805926577017275640059", "09097832019484932709649283", "04681675383174001406823741", "95361972186868719028631481", "88869764944857228865350514", "07865827626857387548466302", "53112058532966839297914735", "98890961260041638502107790", "75608281681306743069804225", "23932854580033411779542847", "70880682397087578882866956"};
    int N = 22;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 378;
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    vector<string> fences = {"947", "631", "686", "626", "805", "206", "464", "680", "494", "425", "521", "566", "416", "902", "760"};
    vector<string> tracks = {"693261229280658", "003360710135655", "410087011182440", "067058213488314", "302616834932583", "368517455003448", "452609507622498", "351683543676353", "217332225733461", "925195451517172", "088563996634252", "754035269022086", "063502526623084", "674589667906921", "883000377989573"};
    int N = 3;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 52;
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    vector<string> fences = {"495", "658", "401", "343"};
    vector<string> tracks = {"5272", "2423", "1040", "3676"};
    int N = 43;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 439;
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    vector<string> fences = {"611", "437", "333", "369", "716", "297", "158"};
    vector<string> tracks = {"7678045", "2006139", "2318476", "7357986", "4099896", "1275498", "0784367"};
    int N = 93;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1396;
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    vector<string> fences = {"170", "103", "450", "223", "503", "320", "858", "160", "264", "794", "282", "601", "451", "816", "566", "383", "952", "152", "667", "367", "962", "967", "919", "884", "326", "822", "313", "673", "729", "591", "822"};
    vector<string> tracks = {"9015640566255957076988980343177", "3064889222504835414711841324644", "6132642287311089985295871097050", "0158452088708255267256584280065", "9762669121113970386833679357726", "6139715187664481853573994199316", "5196157844232572099207690932204", "6615872777131560074380340343352", "2113600823866076981781861989139", "4353425260218149041216019088704", "9922531750343416070090155197646", "2160851652559191906003128258709", "3491674615264260358986693597670", "8067976712968155811116607789643", "1119714988856839211774173875294", "4903594618787668476355375666611", "4289458505854003075047800498493", "9094305721725206762987944166949", "4409038930538762802993291629267", "6734832068961952765626293033397", "1535023292381348578575147382388", "0450661487847004422899142270580", "4133718323002533161418223720735", "4562472634217671037636252338832", "2200344753866741042652675651430", "7554534450945769297465910280435", "1236267921357022326316371144775", "2582623037181492596787714513807", "6786380065004519864032223767975", "9775642503152110249212003988891", "3842793300756070296508260163234"};
    int N = 41;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 742;
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    vector<string> fences = {"376", "518", "528", "882", "776", "999", "176", "694", "188", "407", "167", "505", "241", "663", "182", "857", "654", "623", "208", "721", "918", "892", "859", "618", "737", "645", "444", "624", "221", "795", "513", "692", "506", "742", "642", "781"};
    vector<string> tracks = {"743121126944780415096556582450534463", "280259785762329085823655821660945765", "516877780424732355221147727405347083", "529175564858959011884681816265877233", "169923428196555901906306782709456502", "980501784609054513723454150340414919", "917542415868895692567420809244136238", "655987882142982616250572864848597484", "030410094260951273689360739801750588", "270531109450252163449812046865160214", "970188410196006378964996791569357699", "698621297235298031632319357489302300", "267280518549991023164634935053657074", "419280503992644862105412470298144698", "807579877622961014934514501815044245", "873681512253355576795099280409256892", "235714822799068647604805771966030172", "114619625980991755087614976540364229", "363412954328095911135765932089775826", "455267001377307030178332763309601987", "113679406737373567488702711778110413", "822735312171249572260794826752227019", "585189920184681807077835518739997818", "475833953083916786883492022568979954", "945636614749293225625317334635797272", "281173691746547246266073087038178788", "601326174275823129655759420959305766", "852389193127986366703064408635334891", "761225983999272995339737646193360994", "294554146644997332892639108674734817", "226350419364499258431002983530628370", "687981403935664374539365914213884041", "198777234806245978045634486782681262", "770369496264836393257526981422196552", "513648276660062893005405858635843376", "356324776981986353689276312563489849"};
    int N = 15;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 269;
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    vector<string> fences = {"637", "893", "722", "916", "205", "824", "688", "530", "862", "609", "795", "813", "215", "967", "935", "512", "206", "293", "626", "495", "486", "275", "463", "976", "498", "376", "339", "190", "635", "748", "750", "163", "712", "782", "479", "531", "270", "582", "837", "800", "917", "167", "814", "698", "164", "972", "896", "824", "935", "412"};
    vector<string> tracks = {"78156488646307254499911594581053211096215829824230", "84338399225254589962163693876416078950218282139631", "23749029586874539652341150936150479334224717057636", "46585300753611982487834195718397689448358721469740", "35421030720182967136120420587495051546514268373247", "80520364468947617716213805380336869814152718419541", "32690023662614227915849390980068837774031942342308", "88375011091477154378273103502080335608615875501249", "92037785266342387461028276650351530025698900066145", "03225287037689409178646556065035499422969183774453", "96088537126535784951644927214390830650236350948306", "69441276770778781965029643237825477661426677652111", "24310110916136140430229504818397277562024971283278", "44218929449824008631522083254350027396824942263246", "23172342172035861800859584389893206373186331328138", "68301714920700085688210918819495753919228511333835", "42772271285351529658933653349903499130058266482571", "98128927729584684761278582780979924817290212475943", "40471396378191573346625241119809396561577517651153", "13642464920420238322885790835746855567259578501620", "85573816964186331761721778716086622440192402632529", "22867264918237710001909959637914144217277128961884", "82359636921354181495079200973130319433600027414500", "98441824899623823904604315251108907152176161524305", "76784396016429181649549572717747234194850044596705", "67337641922325061201699614488405010067437237958975", "85286182031734217053358487915232342283146939809855", "94200949029092827241859225289937025612022023905451", "95581463296027927173015728316836630174144316650336", "64000435386696160268603484677262565338242926315508", "50502624606318004071702265951823788946141944668470", "00798280890177719344475915266197318506176232582282", "82184282120423018350360473259179174446758285650781", "17739632234661737425305063119159728513515025339744", "65857085126890715287226295003546916490119855260554", "22879518406713219670583352764438179011507514849392", "47934664266703516211045060574113285411848649898942", "92052226534455646509524924085230740702362929688385", "36713983598052536858824146233869004940290215913871", "34396001036388102323728942453614323103720924397484", "43824238863333369032914589364160867398898144065603", "98153537311342167196701868641713312333311724632747", "32780136225077907575969779814566922707722234793675", "87751134824553885054447639555768899970352134112112", "77031830015097278459300986062847567091599345251758", "12783741589168574021099869620477694252052374320113", "78095445962774658698210013793030394549646757135120", "41908430119256175259982986667098328264801578152242", "69335294706929780122607003596288438542003664208587", "26083554010013479670555297837297877436631416499880"};
    int N = 71;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1249;
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    vector<string> fences = {"758", "232"};
    vector<string> tracks = {"92", "78"};
    int N = 44;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 708;
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    vector<string> fences = {"247", "599", "144", "428", "853", "189", "774", "531", "919", "249", "333", "506", "623", "207"};
    vector<string> tracks = {"60360611746017", "75325616493897", "36930928814275", "78564492847355", "85162836141233", "75500450719857", "64466879272717", "98424065838202", "40411950644225", "64328552580559", "11523821794553", "27847631389162", "68771592651676", "04213933167781"};
    int N = 35;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 535;
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    vector<string> fences = {"976", "286", "627", "830", "818", "732", "272", "879", "838", "814", "120", "773", "760", "218", "567", "841", "885", "463", "673", "559", "691", "209", "927", "850", "406", "193", "242", "758", "667", "228", "108"};
    vector<string> tracks = {"9735415748409362266519234739817", "4176318171629034624559100451627", "5973103007665561323355551336999", "4837630219313288633708543202822", "4139964824859052539359948415576", "5844712003331222125572523071893", "3151945639775330427655421020294", "3402544166967339939872941985783", "3595434634718085629882333637818", "8910685085101473599614991949972", "6327602794110773721918299338125", "7533432886366357774091771811552", "7594562632091469902156208111269", "5750144334239325802559366751913", "5682310023259987446280817062140", "5511107412872280444059309406234", "0657279636332478469460678397467", "7921796124430856771835264526379", "9342153930803732815517064301686", "0688313950471007562774815248502", "3475325741847263339361617361716", "8861384897016959562728458316878", "6041382592077045364708871450933", "3152387939695226325876575399172", "0591631227431642405413905120436", "5432750572504719655542095157771", "9321430158900318515921702846021", "8363443195767262283992704434299", "5521133775300227350665144595768", "2114591755848333920788867008644", "5038306782136939561873886877658"};
    int N = 26;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 472;
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    vector<string> fences = {"269", "585", "582", "374", "592", "621", "311", "383", "296", "710", "200", "937", "190", "778", "904", "436", "382", "526", "772", "552", "714", "310", "603", "166", "308", "377", "653", "536", "949", "102", "128", "721", "661", "697", "948", "617", "565", "606", "151", "207", "474", "371", "780", "152", "105", "726"};
    vector<string> tracks = {"5009840046337407545953425891967542847826131317", "0246790623471581385463345532812910430002283314", "6409984436850701908549230455487702884090971867", "7981343663386598539943797423544940439406648634", "3472856537116021497647488928255594231265143319", "4775092540812681999041394505236274256319761048", "2048513231629760299666931957149676778191806478", "4039410073520854146640466650249869789551435730", "4575894663665955207831062045074510076938907676", "9508103025266658637747748908209023804229853111", "1388847024774303002472205563017256067279929287", "3033950358982731520169852231773909543081301667", "6778331767590977597618832400880265988608159862", "2115872607999211754113683866092209725939231946", "8778805903782616584005205945183864862185366171", "0758852048763002680482502824885190447699381141", "9493953737226513326997859021283850628859760465", "7091594501754515021890646648337064678761271350", "5966096307813059796410459568293198841307139970", "6799713670317279406083949909997033102536412073", "4101145823427359489058344824041711680797924191", "7622472540345024161494216872467450455256395311", "1666337800623935665634644381853860557294301241", "3059536371069292603301519205558599788580401262", "3121576046920219156076312676664119887618009402", "5965099001370094504448258589209544760469085154", "1276986519911526879038037417318438407764051325", "6071087921589819669204498003166002599040859402", "6852509099259380145873859438630224962293408301", "9103964497397497769725002264375307908076150911", "0445926828267930350927077384927862505176508734", "7193778454165282201617129307670742954935621808", "0902253438312678728529367157092719931554253707", "4862988517089355746283989005267885376409947423", "3815446698478743024507098994835856349391165875", "2935088379346841458014688740235882731829892540", "5368316458964246807279629019606080731932338247", "9877720113062001258742364103586830407315321319", "9592803113265784754283193605200002649530842775", "1008252527942481989880758375737946201496456246", "7940396258503581095169358012748800293846783514", "7364880928805522794257265304558312812990562222", "2535064277944065500924579527709025901001117125", "6005609319478557943694665912353580811196897906", "7149013981107123988956175646926974711731395125", "1753283425664653447364575428836448380876208212"};
    int N = 20;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 356;
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    vector<string> fences = {"185", "973", "474", "202", "734", "224", "808", "565", "121", "314", "438", "196", "314", "619", "944", "601", "645", "781", "840", "720", "877", "374", "168", "700", "224", "684", "836", "348", "404", "891", "399", "715"};
    vector<string> tracks = {"77130523088580799539002759139357", "26178526586389569687083755181230", "68689476347521963421725133271952", "15948985868168150521357396103458", "71320797815603425658224444982644", "24119099444460318953623098804868", "72485398286731588750939683734106", "01357209758078529585545687837124", "62794809236942017836437439157810", "06624477184881983052972132104764", "64524458743095172596436763526741", "62506721771151229402995068233002", "50764635435188725202684911368533", "47046326983950094882386813895326", "98504206843746790413243517397678", "11712110409859114341395975764739", "65648458373267370480655468823781", "09752124182551573303213155724801", "58449825857429602619166216120083", "78277929649514472820801794581417", "25716299500147326624027950044512", "88988029107872414356157482695262", "76843651751414621744330913861416", "82789916391088419404517408252160", "50610754260440346682812947000364", "39915309908650930755666778733749", "71102356258796889342653630251653", "59252748734700995200061608016865", "70327561687620022478027629656003", "44550891923562060345296849672567", "84429800951600829430260023270922", "22209190064066164080827514336356"};
    int N = 41;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 705;
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    vector<string> fences = {"244", "790", "648", "131", "140", "308", "236", "363", "949", "240", "187", "492", "877", "418", "240", "409", "306", "912", "161", "381", "900", "139"};
    vector<string> tracks = {"0361724720173980747548", "4483430722869868174544", "6943353555558236072732", "0441944678707968022731", "6262258251009612846208", "5862960528580922190977", "1823332348915514941455", "0219200931575259417844", "2536601237237205485411", "9573123470237894146296", "9154314258928642433316", "6959739768950451243044", "5218481547612291112999", "9838705123725375877772", "5912442720265222530501", "5157458081427797495870", "1055387511442662986266", "6295986467953768038990", "2162441930514638456519", "4902204299875757796827", "5153772033608380167020", "3419193145431313198465"};
    int N = 13;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 226;
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    vector<string> fences = {"153", "260", "418", "107", "137", "456", "941", "966", "601", "518", "917", "104", "675", "323", "665", "471", "591", "211", "980", "280", "173", "338", "435"};
    vector<string> tracks = {"74962121781452815754917", "00341646090967423157855", "83296133194922655296357", "03588746089005138980694", "42757768577092243588793", "95148387486744555598589", "55213244803504584907462", "06023101720365860480077", "30296502668164767671267", "87476472270910416658038", "77645244657365122658159", "04985842235839523382816", "01028243682334943283074", "63361371856888306985890", "63289686882139859271491", "63467096191820863872914", "75056886936307819657866", "59010299171036922510791", "96430497564035914014134", "00486653190523747411098", "63827891004520855750137", "36327043213289760110071", "46768012624097383265734"};
    int N = 53;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 881;
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    vector<string> fences = {"454", "894", "833", "727", "991", "433", "932", "456", "408", "889", "493", "820", "115", "748", "698", "425", "746"};
    vector<string> tracks = {"97706473215797566", "64141780490439911", "47595213524909460", "01485857185629943", "15945433771538351", "41165730591518079", "95368475352352628", "81856145400382289", "92805624781729586", "41241105699350095", "90700678581577923", "15671644181777535", "52605735551284791", "31096101129745027", "34198880963742153", "38898309499539918", "88518157243614840"};
    int N = 60;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1029;
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    vector<string> fences = {"334", "552", "951", "604", "967", "112", "287", "681", "620", "820", "975", "801", "910", "260", "385", "918", "818", "390", "272", "837", "935", "241", "640", "233", "366", "851", "585", "504", "518", "969", "621", "535", "310", "763", "244", "908", "697", "579", "322", "114", "212", "453", "836", "158", "657", "915", "164", "129"};
    vector<string> tracks = {"760740722189966748626524867706534244889361610159", "087266632585160064641090828068551487307473471135", "691021821814962985486489830588362120027397515892", "121945907112399096163985695793993180741192107408", "466651424288178340459392123381989900647396669238", "428520050176757861156525374365401614253839396051", "428883710362635445460814417291930055963402382503", "116205944597238047401797577315543059361363631515", "306535296175113246813707847549169869929971057946", "781032625753235164873574459971398425723950037463", "404111123891837850282048249503723453167724508362", "688561634252032975390864334897271103891164189022", "887602936301939339080077296775590867251643688216", "681677199830474743791292335767334214917667180656", "419993699789358424704921960964802440687204886489", "252707554633065600330745232638672471701610134575", "052591081096008545523991239586668707683674927987", "943322207923056986752477417684215220797127378132", "968351378603196628254543625081411069860788382896", "708393289423091241809369817535798370014434580080", "965302316616263958289370240790135536772266232107", "694469620106759738158115665490045385394454329280", "228213928098711487558061779485578470743146422079", "330067152265248955548088755260217686323750169185", "471973319254521505730599688443087807189487565375", "466388933374555398142231258173135740823288997087", "955463433714527439645588336688671985688175177921", "839177784079592692307804062217946203778234764842", "085997624577783176036266120092950792102078275735", "257640135543894828235856473879565966220193870441", "207119485934926291696010860130847279523704568781", "932689704013075098733215145581783775607257896441", "287331802371282211620585332816186163190672067327", "222577955481793500640760216053037643750896728464", "087420318507481829795529698349183743016337315531", "097768383224738185409384796454209755416300729147", "503454744442447194819839760137494607869607293667", "673000048217906293177813921904072293295078239030", "637719129695196133585492871154918447872088180577", "250384211288557760999110045833481366712657023616", "869526594763621457880466816935835342321646609875", "721936224394823398190394633376251927035359196324", "418676818210654390639582947540446425678780143722", "362741668780555932129085407171369012104962125526", "146639470707800786656523923829325945273393990827", "297561180472629739419006580325996656960712067451", "821719284616327787229803068707407042238243061677", "568966587389707369482160535378109606619462584632"};
    int N = 60;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1086;
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    vector<string> fences = {"319", "659", "347", "610", "538", "198", "474", "397", "498", "272", "849", "996", "116", "636", "737", "910", "487", "363", "506", "507", "593", "404", "519", "483", "752", "790", "954", "618", "958", "488", "915", "170", "528", "403", "447", "552", "771", "830", "681", "730", "361", "452", "528", "115", "791", "546", "197", "648", "318", "316"};
    vector<string> tracks = {"47599359028559847896442848001358587761591843798168", "22814916099184311440873473114992886350047492186126", "55770805702963709880246977379946667907173533500157", "43472041074391426858681323065001492570218266525275", "06460207222168147282066297199085152144637484761956", "78720464707770719096951403060926167193339412339806", "31252117419763268408078268307817219084219040783162", "48398765355545817539996287953479206602214191391403", "56219781086982551816854410914888408525398078722007", "36004242711603171013029869593401254869262303386584", "40120282223713549818179871694801001997547811770759", "28902725090762124584688703852417454594569823386381", "93228454462985678691888665594702878693317595028216", "62716577957976697569367088303594326436059137692335", "39076986760349714230380300036292331457480108959552", "19954703517735242729952186602952476221423674882662", "92177657825807468832465487003261697221686996683792", "10705963691955501155015349954656979203711125292756", "21644672599547175734903743071797514872559256420690", "95281548611316811459585339834517717733264880801360", "08011903844943306102203076780900369902333413064821", "49618561987344849376086821612041278766212435926600", "70205549992671936701707601085073937784249888838289", "72081161840745906489587015102142689730184238141857", "04514629985151553388158690564112425654929725187024", "16891869534370900338553977146139958621397421339475", "64276983071281442780645818602334353848232424579068", "49160567236612282471841605875627620307402635646949", "98114802115278147102110877029649096736059460521978", "24829929693335799734121597271590091167135166884584", "09745011299330071223466078580523101928206705016426", "07690322994675267742372033021418194620358861817507", "30446254176983464733361106212273737558785261659423", "42614866655695083197782016955015668862421413124999", "29847287299508185125923827384949207247831566544677", "00975175826797797327857951914823735652924091672345", "88338053096162147557413229744704225588532899645822", "85840154725471671271559644437902904949458922372313", "36859981020322547402957695196243122265306013257251", "51871308992866951444072697337656330123944501406003", "87756239149217403338432110536622452026725851147840", "80603312176590596268085762178197461098804664786742", "28289928570512760924069205533189900290739125560718", "15788533526885528632333068746754335705712265580437", "37263028440609372669935401916803559457730317461590", "32589965789391200802913708464787016933998524530202", "06778981333707488844159024033026302070395339688995", "50245097943504760608021138623930162112090266650037", "90081095037163241486116967273617016073419176529835", "46044256607845095910244444350305863755707100330085"};
    int N = 24;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 436;
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    vector<string> fences = {"768", "694", "826", "612"};
    vector<string> tracks = {"0284", "2492", "6712", "6988"};
    int N = 42;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 638;
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    vector<string> fences = {"983", "436", "851", "859", "860", "733", "369", "178", "782", "172", "964", "851", "396", "322", "105", "939", "844", "725", "429", "110", "303", "395", "508", "882", "811", "708", "110", "745", "207", "528", "707"};
    vector<string> tracks = {"6798703150908654618763581605215", "8974888312069847412044663370666", "1956915078860305910082606736763", "6611399255801965492855712775137", "9343637493131137773756919821250", "8987544906464109320872141575018", "9809400673276386949920364825824", "9273987188409382016153079780747", "1521115608576843164522413096393", "3133008799173968870211301160646", "3210342162663882790231985448582", "3184116895106657692458884343190", "7154099613216698774891865668434", "6277618159174577429696074159877", "4649415103427893939024025642093", "8649040282719546332935946661418", "1729248321192112293547732420957", "9218568049748715011375087012286", "6218947221792004503628164315572", "5360134893801764965218848444719", "8444524980144914639923338418866", "5307831917532524365707905051797", "1688759566239232818577416340469", "1660727370330555658827823384487", "4997349680955743437055758276662", "0621197089116580410859710243499", "6998223377203756706227411742981", "2085629695323524044749476439776", "1716836788826153899851431391677", "0275362082369660688419728487739", "0053502471110295311921739750687"};
    int N = 33;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 579;
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    vector<string> fences = {"420", "551", "910", "711", "988", "891", "181", "716", "106", "266", "500", "259", "803", "414", "744", "793", "456", "272", "573", "114", "913", "379", "383", "179", "898", "942", "500", "658", "665", "621", "120", "682", "875", "743", "343", "125", "702", "555", "646", "498", "641", "340"};
    vector<string> tracks = {"546010961889433465660838872121262486462833", "026662230143605206082629382631219618999917", "440719361328628193113729851279182596220758", "723887615087420528193958273329156210180352", "551424898681183472119875154185339412611349", "471760345440484811559544541498066083906238", "321213259818950815608506179738780046581160", "482862556754877743764726421660033535203964", "922839882243973489992746170037009732662875", "078773392233205883759843513501974070685754", "423056688620555484075840714347910676586080", "367496494045251833198877486469074772854882", "500823793845598507881122910017679674358359", "715992639397040996444772300080843396823617", "828320972732891365766505405587739670924185", "108169782422201731846393728331652608241335", "022977389922030169007869341751295901773667", "586322888742166287607951380179362680937890", "279343403784571673013061847676428244021192", "802116687486111564739658043363034372516106", "188949750716264837184967542100401398892378", "674826326132596789171973626344533720332259", "001352608450681689013649200050041307854083", "810141324501467411725822647716206408791080", "951000411402585690338776764032179444244902", "955374386596760547562502068469532627152607", "112983932698108910029062937178331695018399", "139874675985714501686810241767450819997636", "509361709989527089977900279154095723468149", "161201403931187297356179485456624440979020", "273419958115478469753177036089427825485939", "185996223375881372086758083975349615196859", "609450170961754929587197019942029484538259", "830884753426017197592201501862804736385351", "353698365271099079922467948657924664577220", "531500751600095695118203514436546288302288", "686476443145458557563300663485617107422542", "735972570363364761487835613268039982521406", "087958882974623619804840832704610832032817", "171754137295630057423900398675829754802018", "603181032896792390572880678930676044968415", "034378841500725353266882740450654702476194"};
    int N = 34;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 601;
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    vector<string> fences = {"551", "874", "224", "315", "986", "154", "848", "284", "875", "695", "108", "227", "906", "452", "925", "529", "571", "201", "589", "316", "379", "135"};
    vector<string> tracks = {"3436570954841255147122", "5984905682646414555337", "6947139456380996795205", "9907885144819315657966", "6070282157270040221788", "4623333006133312688291", "7826994242213628837254", "0933599368815581697466", "5335961151817338143857", "0392904514531178000540", "9690274538395811098623", "8673437058697277742703", "2388487246300303306724", "0593566390360476792130", "9021680625039780309584", "6266896465219377522240", "4785702152775209716365", "2707841308935197268779", "3696121142968661490775", "3440961110337252949461", "5715196360435651967568", "2842490761086690627507"};
    int N = 28;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 481;
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    vector<string> fences = {"894", "714", "179", "485", "222", "822", "912", "889", "565", "646", "952", "416", "613", "514", "684", "373", "258", "720", "759", "637", "598", "100", "446", "713", "669", "422"};
    vector<string> tracks = {"00757048667007233921409745", "52724552185017453614948429", "98937117934825291621288672", "37956942292055186804647698", "20422026192544416732870824", "50705973947606620055670976", "50455496214176194868996749", "75564316458822506495749748", "20413071447121587287183392", "52563587886568618451517665", "32996821717169368437846241", "59420111343173463964138879", "25362367323216883984956857", "42716610355861624036823186", "04391008673460872079619042", "09280308705918554862894189", "24878284381722617395617720", "96369185013267030062704079", "46451098875518949902613488", "27301098150536504396863729", "26581946100487648716361917", "57368893674177551562978475", "02233334493101267484424643", "12807495160148201804552153", "99387045749355839366293502", "96465102075543491312579117"};
    int N = 91;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1639;
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    vector<string> fences = {"446", "349", "999", "823", "701", "115", "712", "429", "127", "764", "796", "253"};
    vector<string> tracks = {"682792601855", "780807832876", "126598140761", "807075430436", "360252483849", "551925274500", "506582466861", "990240178577", "987136818949", "647400982270", "995051266675", "148667505332"};
    int N = 28;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 450;
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    vector<string> fences = {"413", "603", "922", "280", "859", "559", "978", "699", "695", "358", "633", "297", "598", "643", "165", "624", "147", "610", "795", "790", "860", "161", "133", "417", "163", "421", "181", "461"};
    vector<string> tracks = {"6182157393068073937635149940", "4425675122921086249331109326", "4843035603882613528763940207", "6051555499987927817345599193", "6667300856524073454915425524", "7436651632541988001468678741", "2050535964946457858696928262", "8865232368304943132079942083", "8521661045157151082575922191", "0661334687779228599594319453", "4480272529777869200208731596", "8359434806022461712201535621", "9677640797216053425148344025", "4807171687282221409271573326", "2493525186848923410621284942", "1591787853367631923980261280", "7543593097041562710236527107", "3412743246804070085395509218", "6187160768584353302195966951", "0014922460853576698734678442", "5022117372143619837831574317", "3551801156115710706074032236", "6109758187856243207337760319", "4708465086393385952210944667", "0505409842291609941300287327", "1538781657097610187125707838", "1538900074628309058297234581", "7733846063242218261589582186"};
    int N = 70;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1164;
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    vector<string> fences = {"409", "745", "997", "532", "791", "638", "981", "206", "944", "494", "369", "780", "310", "193", "257", "731", "155", "840", "769", "425", "126", "221", "919", "904", "611", "224", "977", "406", "636", "234", "396", "232", "944", "637", "960"};
    vector<string> tracks = {"80519270889623137011670001243793447", "79892575245102143051570976285981275", "95386622606406107040522953124430790", "81390470938738201612361451651082107", "54753674171425680444230917839683050", "49812871488194180537119924694772566", "41479161102200208394406070105264092", "63718915002086749108470277675133152", "80613481096930484436343675235912575", "08581608534880097563868114199569368", "06898941621449649220005423180783823", "76698084507994591943968384445446370", "27292352442474183110673481040054692", "47967063909356616660762095927032576", "97284567374738620314703357814305984", "42065743265979521458376794689817514", "31384380163783764680988693022353150", "18152183558055849728390473881911557", "70069773609005460788841168030083142", "93938346560095702233723885128177675", "60360421608316363658862218923405053", "44620763612030254022144076251411112", "59968525628466967642156561531909843", "32876732478801755409130940057779879", "73335722799410161926106249004950808", "05492701390918600874183777345640620", "52116868268393444584556975792192295", "67676039357452904688253882923022671", "75715668057737458903316690430124454", "91961977685216564664805718800663384", "24842309702150299629509697036938345", "99437326383402602269489177525859005", "19600281007448059525912916388837371", "70432348864646609540312451199406567", "35629669636840488938441877535342483"};
    int N = 1;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 25;
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    vector<string> fences = {"162", "312", "571", "354", "442", "915", "217", "834", "141", "960", "707", "623", "914", "925", "690", "810", "295", "967", "163", "850"};
    vector<string> tracks = {"24426255541265347197", "43109292743324107001", "88238375575311405498", "74110330180339446112", "24771159068871968287", "36059767610782466309", "27687843439620143644", "16797611488590256008", "32268868934697651376", "17771759671928197306", "29503049125591193348", "21711475648665160061", "11368855352395425212", "60485738235757170209", "10031831036419570266", "16559259080498980634", "82116577203514041721", "25959770389975697104", "28148761950742677416", "33773759663997511496"};
    int N = 70;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1260;
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    vector<string> fences = {"451", "636", "189", "622", "560", "279", "395", "314", "482", "466", "152", "186", "521", "394", "637", "774", "120", "184", "992", "331", "615", "134", "192", "468", "907", "270", "920"};
    vector<string> tracks = {"775295987643202790166331536", "183236488206227480628614221", "628285288150347714825829423", "523501657947512816582634742", "059057271040443020588654312", "028176021620273825522953098", "869029913795720413952235568", "198751645005890369865887627", "223731675757551682317658697", "089908594491171582035394070", "536290282101691419226112564", "122305973757660768520224083", "550888406487106402723036796", "454100128383748504548205949", "450128082488417602409717385", "636516030149088444495586611", "836255652314178980056178796", "224192827633633429253080166", "091788397817726321236518730", "842134889259747908083086570", "981007259598193604935960162", "665324633854653366352606850", "319680671662978364572777948", "529846221034938324060539102", "474959872923463301991697562", "904765866182753536949339279", "946380074236306428666611349"};
    int N = 66;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1184;
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    vector<string> fences = {"560", "302", "695", "322", "397", "386", "156", "465", "730", "617", "382", "956", "103", "146", "140", "957", "306", "103", "916", "536", "311", "576", "431", "757", "806", "812", "283", "987", "128", "637", "900", "957", "414", "181", "899", "619", "396", "242", "928", "478", "984", "750", "726", "687", "598", "415", "190", "680", "760"};
    vector<string> tracks = {"0733484038003981479317083335886429553581027367935", "7184991879483683845295785841293573709028437407707", "2156994269889174260917228183772135637580269160230", "5521166124361385417365079591535395661771125619320", "4156217834582742363566941458046052075307678100072", "3615275674041318245052486863375817732176544911573", "2800352209919446917784735895839664492622470040102", "4904133196448312627649907796351162019924121650170", "9367203107315404414444174255411586057236573738168", "4327819771288120180343090250199389922474623617971", "9664753588988378037127921865163265317773942548992", "8021903892582570755820042068170243321451255246999", "6723710013020246251960691630555937564590820831483", "4268108439122283106955580985618890430813315430285", "3659371102824296658002514821105084759364370646142", "5890062600095962209510600711272867821973169472982", "9902951012726736767572351267454240024146680640111", "6746490640961871877664496435927210065617172544512", "2038039367250970790644524829053992184393418605823", "5931652369141183731841964085589496892012984246088", "4950028030993445019688205838566713598971172128681", "5185344506945631361671688238428905884754668438209", "7050271867390210868636897969090912733971626421095", "5092006452797297956764782763500216783469655665854", "1625253614890136921674211215505143844138117996846", "1758002574690365625085957617115522013752638217764", "0827058932770902489510470925104807863338720810495", "9336747410058831779034135434882882317460477320952", "2952635986538083049419641516396176228294320830853", "9090063668359152378695374254100238401839495728273", "0200134769686403743097109402485194962478493637776", "9390916042053486683177248793580291537530529370572", "6644767198658189672900098733857192195214603549593", "3319272755313742236356670528708485922816775954989", "0594558540486226636470480318077163320208401100838", "9930136279630012856712258433261016354925741407325", "1133839829524218806129659233977410868819330857365", "3560281882730129539112738326861494590156720196517", "2688655727231993356777235193917478729301311200922", "3046237004507191158489913303298592124393401986204", "3452748708691340855786441134966582658172856484727", "6999380554000082549608874191733994037341842802591", "3226955116451973816300748629408599179684895530809", "1785643406310877537654288687327485709337873804146", "9707896589428465042511505334068744009212906448901", "8172728528153862063024358387599547724986323085143", "8636571578609621983009421419042679932689925059803", "8984729384315572047058728345286380112194508736379", "6739588859123442207692140348120771968711330143855"};
    int N = 67;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1213;
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    vector<string> fences = {"649", "934"};
    vector<string> tracks = {"94", "19"};
    int N = 83;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1492;
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    vector<string> fences = {"508", "125", "217", "814", "280", "534", "530", "113", "133", "574", "361", "203", "902", "995", "387", "891", "955", "225", "365", "664", "110", "689", "868", "225", "107", "657", "767", "656", "233", "293", "544", "395", "340", "790", "412", "641", "815", "297"};
    vector<string> tracks = {"93407977637968381976444772000338230875", "73831716985439938314689819721758559473", "63131551684338287147386038769509817385", "13695838659119553469151223050920392719", "92777025837210880261714644554471077564", "66568271465127810018197632073055533430", "52703745722262835114685853788965287427", "83900346812617311171083520192419420922", "10639679482804641636366310753769279591", "70084610945459251092952976141357375422", "63696380568381344058376044018553249288", "02245138422076067967451795379542475175", "59268576303796910894407901937338387955", "47370023506267901479359914827553641514", "93884255975671923079054331954940556711", "74791115516680614477050359557502611318", "05900538597007598780277799750049173681", "86052855913077941185284982389868668457", "58258224089526992950679615134489579601", "43098496618928160947541171492808901711", "28507498496920250644183912275566004767", "87388682627396026745865630181885949655", "81787183245905911016346666313750521240", "80249517707310590224030363842228361422", "01821514745071097114857544406975872621", "27014794876230252430010742092165293407", "02833644103290112160589349942393756221", "95634719360776271800349138758108278055", "97135556223519604116564519348143248122", "55111184047926839852696954494660926294", "07017583008503797099660591274551270437", "67591979428982946312238735201854855912", "65556426194649215167700926841969298987", "48390666476527739963285920398251867964", "46856969160496667336855906464145092024", "92185475693690807985050008966172154525", "99534622676000128854481919217760943649", "98124565571915209634866864661503658590"};
    int N = 5;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 94;
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    vector<string> fences = {"837", "914", "288", "260", "515", "747", "304", "787", "340", "216", "564", "567", "974", "891", "413", "912", "381", "146", "643", "918", "425", "409", "600", "380"};
    vector<string> tracks = {"613858037529994126093888", "545631796478729221213985", "424305438331025000646811", "640483498063657194974780", "872035936001311265138190", "160178937987618128782109", "362264504433236315437396", "965539917066597138529815", "922870601471057061013046", "635428029191406919172584", "859213728647364208627811", "301120223413165795880357", "719933019945778772754777", "144773571907271845192938", "614006102867854679221798", "758536998594720132247979", "323878194110428852181231", "081052136906921187796231", "764061366300671880386347", "122253067612992608062468", "438526423675382715673089", "850658236311040179964748", "384329542524717819462465", "215808501576539183454225"};
    int N = 6;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 113;
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    vector<string> fences = {"956", "615", "471", "986", "682", "828", "876", "600", "844", "872", "805", "210", "366", "191", "405", "166", "564", "730", "543", "209", "501", "564", "748", "749", "549", "485", "325", "306", "608", "389", "446", "848", "675", "229", "998", "812", "438", "310", "837", "254", "302", "842", "499", "347", "868", "191"};
    vector<string> tracks = {"1773015344303689079289484410004176829835402465", "8960490589673880529021999771622469214160711130", "6111500061184698103905341903749089305771810428", "9671934349821845470476774399997734225205307545", "2719871742826876977257835457393898843505692537", "9737466756557165957429138197487010269509736240", "7574485381019379115605182370237822609126227845", "6735550573800956242950261632480588130786526301", "1387644438355103190116490642700545878070417989", "8400067558842504337590987039416937697102328329", "9825264814854172817691974553476914267368383150", "0003344130591503396584028235746889981695949726", "0049673373980437743801776706698034827316482990", "4613611023373046035848323794333624213808387774", "7554730248760851186241140800029970008992427879", "9992617179845399190220539692663583899176392014", "3625328478636598283846547363556389272099661192", "8451940194426857129421683959786792751661038288", "8011768603905463199474183561862588375170242368", "8823292720058446771462898104921641957885279023", "2166523861769755442140214035557342471578823848", "3498170752814444988107546700215068425594601541", "3892050262798791757288411859727908880296595244", "4240761410033991976014151881752960816628906017", "6796409239363888286073328047904100955969785280", "9365371799126919072409607164073151054981571581", "8284448330840077387235901544040725137156552354", "8160665590648122174725568401164029382038268143", "8505850110832068225760204941452672275910655388", "0335648371462967945988020947391719241235273454", "6150141725977333017319399440039615967363883366", "9140976412344364820622519222635242501393453652", "9292995854165055787516066678481725169935943224", "3385505919729038153625808890689906793718700645", "0320829408972336592920372931457064969579756443", "1747025348100056232350611677352995444972449019", "5530395555404219783702942345165584964721960988", "5110230202700879236335317027157145638174828470", "2293133653123362451742969123254363779519642154", "7117695648505430371877982024334613343762095986", "9274860648681190689279625162990246094475216737", "7635621467235019156833685068198743339515301053", "3902828470694021215517342591434188218040911286", "4978335237452573445366760123180885114274320790", "8862225552361875827693508640848059162443702366", "6310023257296233666327594952285291301418705954"};
    int N = 81;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1466;
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test67() {
    vector<string> fences = {"845", "148", "947"};
    vector<string> tracks = {"130", "840", "310"};
    int N = 26;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 269;
    if(result == expected) {
        cout << "Test Case 67: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 67: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test68() {
    vector<string> fences = {"123", "887", "263", "642", "494", "793", "142", "335", "276", "992", "444", "552", "669", "303", "162", "143", "769", "419", "562", "984", "658", "384", "420", "339", "525", "264", "362", "348", "681", "745", "401", "193", "315", "911", "919", "486", "173", "431", "392", "542", "368"};
    vector<string> tracks = {"62373738377029072667761710579242012487923", "85263477273050233491138009389915451964925", "13078352088807187550857593278186806184233", "08957868871048260234988083885305961607165", "31107871790490286506873278861558892353854", "45525261897853410319753745154920708587268", "12843974193156456951839802821018148854079", "39744570331448297802357795307818302154375", "42774857475376571836849797823383377299720", "52126849343510158356651837764907184526209", "78303599732901891612776430646180682605392", "40961246758817113576721451817308233580413", "15929973472525303592094352878472134544565", "75337189066138795323066616617785316847116", "43495524024503696636279797930100336411284", "38337655642027996776053068982121765809698", "97136097767467500310433284207918326292035", "58823499308025446841039684361434111710747", "04565634096013001207715363096272778656849", "90583195535524435560790112327077148050302", "63300179172617917814158399161744676355995", "29397734343757751642539794120119496909463", "10602971110592621225534543499217270950982", "72478287292921344364822501748636721633073", "21827523751505748424107541578809136088590", "04897518301044651469149919507108638099768", "05435167021899376945881045177746497966295", "03691118092271726186347820544837252958454", "60234461390236754670289201573693525661641", "55782032963889040970277401094652106279609", "94799661856232910954086860688102272316775", "84059468933338181259856838766618485161067", "08743100439122329936521416619641126117631", "02844341206634013505423407891024121792586", "57319172294511335400071342203120412346089", "42515734323087561817453671197418545339923", "45231496166892961689004525992128938438527", "80184387634661806940640322832471304225386", "02741767820827677500988827856408628113796", "31441708736403669334975029742716957771268", "75836735011760443162232651095670587151941"};
    int N = 70;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1199;
    if(result == expected) {
        cout << "Test Case 68: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 68: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test69() {
    vector<string> fences = {"768", "104", "911", "447", "330", "510", "259"};
    vector<string> tracks = {"7411028", "1473565", "1838613", "9177545", "8659365", "8141089", "6230710"};
    int N = 39;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 553;
    if(result == expected) {
        cout << "Test Case 69: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 69: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test70() {
    vector<string> fences = {"165", "273", "316", "605", "726", "741", "712", "598", "195", "690"};
    vector<string> tracks = {"6271540444", "1425950769", "2944038841", "7097952911", "0696762792", "8052695749", "2418033455", "0552530184", "3547191037", "1145212739"};
    int N = 29;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 463;
    if(result == expected) {
        cout << "Test Case 70: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 70: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test71() {
    vector<string> fences = {"435", "436", "887", "970", "236", "233", "996", "140", "404", "557", "753", "620", "264", "821", "798", "599"};
    vector<string> tracks = {"6311270614495491", "9873435267122492", "8310541113475889", "4087720534333406", "6977725650004853", "5972147807077785", "2228263179384914", "9995297913117023", "3765004161698656", "4982719997830047", "8484595035001107", "4130751181716214", "7587707225861215", "9679648045799224", "9911945890954187", "7303179298783625"};
    int N = 52;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 892;
    if(result == expected) {
        cout << "Test Case 71: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 71: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test72() {
    vector<string> fences = {"439", "845", "414", "337", "136", "264", "494", "896", "830", "924", "328", "775", "121", "354", "417", "881", "530", "476", "434", "675", "193", "787", "935", "557", "618", "398", "389", "726", "144", "501", "660", "581", "509", "282", "663", "677", "253", "458", "585", "640", "923", "214", "534", "374"};
    vector<string> tracks = {"49925128809283811925659252174750584112534539", "84977444818019739479228149441916853316273907", "42036305659159132216968846469130110671474794", "05635638467439824702179970521464245771742716", "55884673329474727308772488183942763000094688", "92425228356428456345286823619197166619075739", "67600326505512504042843992100756535368110056", "83972496332081098746107754196028378180670997", "57130225636701158504480495728605654901343169", "62515676966246820928268337786274311543886858", "66333631322618958699649168738677203300576149", "36904184601688940617411493899632437099160690", "79224796355325977790039925809771659598512602", "29695465847274940740362594382745795182628256", "92442022953609132997867599705751459324359110", "47789358446308577719380231792213889069918502", "45887179299914671490440659913635886366460499", "91425700540255040719344731476069067756661496", "89334692050756514340312175327274952914292361", "35169238154688586441435121648520012495155572", "66439789286387475401478018072300588293346391", "01486760089334220179845276856020986475661087", "69166326063087671795648797946311713444395348", "45549517452936108540737766601734280590684153", "29834230937677039801661256269494538132836995", "86743834206460599618327351183412558166037098", "34773310189435226778258819754636308684698324", "50748236033915893983772156073866370589719694", "10196954997758566896470738436042065580338549", "00456561993683638926940851614959924563769305", "86162505426568957384813756997945697872654093", "08312052800888933689644200901595493424805854", "50234655770643337881312286136427731399351830", "74957909472212032134876046150419061348980383", "94412248320196759849539144035307899954194546", "35091470536533930843298272428402936888026547", "69907884001538320519308503306723109261066734", "94155394945987833343713788676806326266020272", "26714031911300622770278879358993148552770628", "09620746311954440190865497057495651870816054", "55457024437678425565389799321368237929622942", "57359483349336297981824384027286558592195962", "01965203971571114097843628558161390234253248", "63774052900421807015721044304915746311874002"};
    int N = 30;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 517;
    if(result == expected) {
        cout << "Test Case 72: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 72: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test73() {
    vector<string> fences = {"672", "580", "143", "677", "255", "645", "245", "628", "570", "274", "642", "895", "118", "690", "685", "208", "300", "266", "129", "191", "474", "164", "262", "959", "110", "554", "540", "270", "722", "998", "976", "297", "875", "988", "832", "356", "904", "829", "733", "387", "633", "974", "355", "289", "135", "990", "741", "559", "857"};
    vector<string> tracks = {"2216472120178943743909241221499221180199892725383", "3433042401094309623593035908382920100587528346022", "6999180035718437882305711163898150169463393161719", "2191634403426566733964129820000497654841959215960", "9263634862289380270457296996372382734401829989139", "4339867882936824383828490047019931556649174942089", "4818744522263586896983667281896202668367680148675", "2189439974130822094750649232570190526417433779352", "8035176229216925549921432347358592242278475155657", "9988518500161777210282327970450808524671844717944", "5754367072678525334868660588286022961210294639417", "7893462007133085177500587646464822108082452535595", "7079774729352191828984715384398798462746965715984", "4313906337142506674433571214480630191297366023500", "4289458708726102320573354439637323141904520629895", "5123770613349298996792906375331134872761424658423", "0766786639000978734517164118504829799723436857291", "9667725102091592835244947118354604032215581030375", "4967674976856047547213185286416339811467557741235", "1811705704864747501817981104480185618001593801786", "8165518670827904050113073846843034746544911572449", "1910461633749924091735053772307532312631860066737", "0688572291503467740712255081342301021140490757695", "1083752768612947719000922876130911853789723263841", "1743038734930366538904725388364332808645973280211", "5068892824748895490593515919617335109855895172675", "5474003667777926063112213168356807465994212172206", "4143097133732851854154179702138250698368824967330", "0316636870310050017718339520603094399504677452179", "7793882926163709981843363234206068273903840949731", "7192263707827427351749476556763202106091392677722", "6611422720706792980521034288257880567932880888853", "2439493525539600372587799331844240152403619179036", "3219698331699818695158127807234127269785255143490", "9289801636654452774214481975627358135864650357464", "2080399783193878743947149871065724570037496517406", "4213684705154595806051647598604698565406209109734", "1995695701712976526553452765859823672948926792359", "7014269145511875546808509308952469515001170558840", "4966931886445684710781894363956179883878889707987", "1314055327924440525465486665522708981096723642122", "4510503339153812367167637175752923900701609113439", "0720835412759187238851259539894289723899471471512", "6391672240340479268209678744185041182450613037934", "3860171759184855988584222005928198851807610950967", "5461016936856998749466045413553142413198839350213", "6975270712781986965842966993372453867844634489840", "1585147591143538834422960617294329331775020285486", "0538309438452294892296718825602067233189478324774"};
    int N = 100;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1759;
    if(result == expected) {
        cout << "Test Case 73: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 73: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test74() {
    vector<string> fences = {"959", "613", "820", "620", "207", "121", "304", "781", "361", "869", "978", "458", "872", "236", "262", "569", "910", "901", "125", "887", "728", "464", "111", "500", "540", "753", "670", "215", "174", "242", "416", "129", "906", "986", "978", "834", "401", "368", "368", "255", "505", "398", "418", "598", "876", "459"};
    vector<string> tracks = {"9962437020372234508442806151946991230611431978", "3327066941987711557760828989593005669601094025", "5279333762712097047452444606395620251248079282", "4838625798409016620060756239807391370082055866", "3901787472951121778730739184576315209772000115", "0026732063490792870725601682576149573863962940", "2514604954029473259883334322434503447898234194", "8270801597139700705752154067212168924365611616", "6758211723323560421103657195518230384862846640", "6950481071323191618012568892631572969166467118", "3499105000826471402350421995159420419695331997", "6085379868177946714073475729783649369409528939", "2260018381227082536827859223076413874754717709", "7196593044616171953500575414701985561057811362", "2151283615624683414548300039339636786726485600", "3754735336692017354702632883803879541945742507", "5516401945407467011163664460739440191420937268", "8392092668144178750958782622934815494732843175", "9613576348013695992595015612271033745579691746", "2649634704881064932420859689201157908679134675", "7834845889107191813067442416847917678652003350", "5647165731217780185587303885119667738706257003", "8285320854119485163170139165799001566814184880", "4475618779750679588483300252079809978528258698", "7344862763234232865854075074976592146997917783", "2177633750329277553136265594669622226539864677", "6853465161157059560229566917874845626106141576", "9045302946461392479396873199196609863443683449", "8300542763148955607876003342773270483029939908", "0393506131538148208431788546607020160879850081", "4425327733437902960369340780490299616571703504", "0263814502920745458447482019162256173491068456", "8890445507381211748003690198566791677751045533", "5886607028170367739711047694839041362500411688", "1153369656301856337697109015318505095548838408", "4546412653425451906643506019170591813284729536", "5348300706511132923062373837625325479213913508", "7757749864848317769799476562583356725884191263", "3588044567656698910394360532370489118328759615", "4980968780133014357115904839319619121971078142", "5535111632909895866098646240039879197973820351", "7408929526512879789370456446241880122925362943", "2919798327375993501898578750929398738620855032", "0553336175883272822242796125359984305406808413", "4790997368365729334612138736268385601650411095", "3504303386836947025484461159929998798882832310"};
    int N = 60;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1085;
    if(result == expected) {
        cout << "Test Case 74: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 74: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test75() {
    vector<string> fences = {"675", "590", "951", "111", "683", "879", "416", "200", "487", "119", "270", "966", "826", "856", "740", "128"};
    vector<string> tracks = {"1714630989801885", "6129834291678603", "2691937402255544", "7132090118100765", "5716385265609371", "5216363951477520", "1430796978382118", "7935651383716032", "9684405310906514", "5054216292378134", "0123509746008509", "6502700156752183", "3431358475467588", "3976080352569681", "4712351341998456", "7086868636779817"};
    int N = 69;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 1242;
    if(result == expected) {
        cout << "Test Case 75: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 75: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test76() {
    vector<string> fences = {"578", "303", "678", "484", "450", "697", "364", "646", "822", "908", "569", "983", "945", "369", "304", "502", "337", "728", "710", "764", "487", "831", "896", "932", "656", "515", "991", "164", "338", "520", "585", "792", "112", "834", "550"};
    vector<string> tracks = {"43205895381256960704587102381786452", "30828546695070959519377395591715289", "04581700033860111380199474257539894", "36144708857686993068353903488450577", "60720883414938378044958394221034546", "90852576612574262880776760512313780", "97245589351452915037900727386901604", "00642341056599932924239463372060858", "14100753668965354370440405459513587", "41533956609163691791918313393034557", "32119421497026089298348672803357603", "36558845135689317021538140320797829", "05582688406036723045795181431981910", "44031024563286047084993174909874206", "38631334119851570949139613475907672", "98200251921539921228976665555846076", "34090009981876234800932441638465904", "94953185008340753798017834123988107", "17215242434309138531484238236104618", "26570463797463992732824530047435957", "03752387653615858233411686099372343", "55107950260786661109234579382730496", "86068679480587934398385565375150224", "74801307295531336221774946092676855", "34104458523804018290615219034916772", "19497678691411703389580922303748792", "45700945468682867190450388050999970", "66611660183301352918744212371574502", "04179530659763086299299143982029996", "66817424475978220919363818048453729", "04734711904011378624564651290079901", "93242818681723295789320288505059012", "19807518142637278555559446124398814", "38048422195850180101328348605054864", "49535541914438385264093866921332326"};
    int N = 3;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 59;
    if(result == expected) {
        cout << "Test Case 76: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 76: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test77() {
    vector<string> fences = {"528", "994", "531", "585", "744", "918", "412", "550", "975", "315", "912", "635", "986", "124", "417", "409", "710", "157", "303", "877", "673", "355", "599", "553", "158", "564"};
    vector<string> tracks = {"52861527034033685393856862", "50089979431508701761965668", "88653994275581219378307810", "45781770059305006982905018", "31057436018556450280520743", "99256041269517747237075940", "57146213582217496631302715", "76147769457553517179748377", "59134863599092367511115203", "35902045612776241891509745", "72395434408816139619523980", "31054384199795387508350369", "94104512732509911273723388", "23214776904956193764190357", "56245751523418770075675900", "12380095043979357584375530", "50951127170415335606787605", "63388967034534716926550543", "71117104473904787420235482", "56269927214065074539979980", "67922871677830332134186926", "01665641309649479033251355", "27904616993099443259399832", "10280642953228290964596247", "12519903361821080816050029", "14883936062192363741469635"};
    int N = 39;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 709;
    if(result == expected) {
        cout << "Test Case 77: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 77: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test78() {
    vector<string> fences = {"693", "982", "236"};
    vector<string> tracks = {"603", "986", "780"};
    int N = 10;
    SteeplechaseTrack* pObj = new SteeplechaseTrack();
    clock_t start = clock();
    int result = pObj->maxComplexity(fences, tracks, N);
    clock_t end = clock();
    delete pObj;
    int expected = 172;
    if(result == expected) {
        cout << "Test Case 78: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 78: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    test67() == 0 ? ++passed : ++failed;
    test68() == 0 ? ++passed : ++failed;
    test69() == 0 ? ++passed : ++failed;
    test70() == 0 ? ++passed : ++failed;
    test71() == 0 ? ++passed : ++failed;
    test72() == 0 ? ++passed : ++failed;
    test73() == 0 ? ++passed : ++failed;
    test74() == 0 ? ++passed : ++failed;
    test75() == 0 ? ++passed : ++failed;
    test76() == 0 ? ++passed : ++failed;
    test77() == 0 ? ++passed : ++failed;
    test78() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=22759174&rd=14147&pm=10594
********************************************************************************
#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
#include <queue>
#include <cmath>
#include <map>
#include <sstream>
#include <cstdio>
using namespace std;
#define REP(a,b) for(int a=0;a<b;a++)
#define FOR(a,b,c) for(int a=b;a<c;a++)
#define INF 100000000
#define SZ(a) (int)a.size()
 
class SteeplechaseTrack {
public:
        int maxComplexity(vector <string>, vector <string>, int);
};
 
int SteeplechaseTrack::maxComplexity(vector <string> fences, vector <string> tracks, int N) {
  int T = SZ(tracks);
  vector<int> edge[T];
  REP(i,T)
  {
    REP(j,T)
    {
      if( tracks[i][j]!='0' )
      {
        edge[i].push_back(j);
      }
    }
  }
  vector< vector<int> > dp( N, vector<int>( T) );
  int ans = -1;
  REP(i,T)
  {
    if( fences[i][1]!='0' )
    {
      dp[0][i]=fences[i][0]-'0' + fences[i][1] - '0';
      if( fences[i][2]!='0' )
        ans = max(ans,dp[0][i]+fences[i][2]-'0');
    }
  }
  FOR(i,1,N)
  {
    REP(j,T)
    {
      if(dp[i-1][j])
      {
        REP(k,SZ(edge[j]))
        {
          dp[i][edge[j][k]] = max(dp[i][edge[j][k]], dp[i-1][j] + tracks[j][edge[j][k]] -'0' + fences[edge[j][k]][0] - '0' );
          if(dp[i][edge[j][k]] && fences[edge[j][k]][2]!='0')
          {
            ans = max(ans,dp[i][edge[j][k]]+fences[edge[j][k]][2]-'0');
          }
        }
      }
    }
  }
  return ans;
}
 
 
//Powered by [KawigiEdit] 2.0!
 
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!

********************************************************************************
*******************************************************************************/