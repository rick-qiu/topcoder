/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=11290
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class PickAndDelete {
public:
    int count(vector<string> S);
};

int PickAndDelete::count(vector<string> S) {
    int ret;
    return ret;
}


int test0() {
    vector<string> S = {"1 2"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<string> S = {"2 2 2 2 2 2 2 2 2"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 512;
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<string> S = {"5", " 1 ", "2"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 34;
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<string> S = {"3 ", "14159 265", "3589 7", " 932"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 353127147;
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<string> S = {"1"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<string> S = {"1000000000 1000000000 1000000000 1000000000 100000", "0000 1000000000 1000000000 1000000000 1000000000 1", "000000000 1000000000 1000000000 1000000000 1000000", "000 1000000000 1000000000 1000000000 1000000000 10", "00000000 1000000000 1000000000 1000000000 10000000", "00 1000000000 1000000000 1000000000 1000000000 100", "0000000 1000000000 1000000000 1000000000 100000000", "0 1000000000 1000000000 1000000000 1000000000 1000", "000000 1000000000 1000000000 1000000000 1000000000", " 1000000000 1000000000 1000000000 1000000000 10000", "00000 1000000000 1000000000 1000000000 1000000000 ", "1000000000 1000000000 1000000000 1000000000 100000", "0000 1000000000 1000000000 1000000000 1000000000 1", "000000000 1000000000 1000000000 1000000000 1000000", "000 1000000000 1000000000 1000000000 1000000000 10", "00000000 1000000000 1000000000 1000000000 10000000", "00 1000000000 1000000000 1000000000 1000000000 100", "0000000 1000000000 1000000000 1000000000 100000000", "0 1000000000 1000000000 1000000000 1000000000 1000", "000000 1000000000 1000000000 1000000000 1000000000", " 1000000000 1000000000 1000000000 1000000000 10000", "00000 1000000000 1000000000 1000000000 1000000000 ", "1000000000 1000000000 1000000000 1000000000 100000", "0000 1000000000 1000000000 1000000000 1000000000 1", "000000000 1000000000 1000000000 1000000000 1000000", "000 1000000000 1000000000 1000000000 1000000000 10", "00000000 1000000000 1000000000 1000000000 10000000", "00 1000000000 1000000000 1000000000 1000000000 100", "0000000 1000000000 1000000000 1000000000 100000000", "0 1000000000 1000000000 1000000000 1000000000 1000", "000000 1000000000 1000000000 1000000000 1000000000", " 1000000000 1000000000 1000000000 1000000000 10000", "00000 1000000000 1000000000 1000000000 1000000000 ", "1000000000 1000000000 1000000000 1000000000 100000", "0000 1000000000 1000000000 1000000000 1000000000 1", "000000000 1000000000 1000000000 1000000000 1000000", "000 1000000000 1000000000 1000000000 1000000000 10", "00000000 1000000000 1000000000 1000000000 10000000", "00 1000000000 1000000000 1000000000 1000000000 100", "0000000 1000000000 1000000000 1000000000 100000000", "0 1000000000 1000000000 1000000000 1000000000 1000", "000000 1000000000 1000000000 1000000000 1000000000", " 1000000000 1000000000 1000000000 1000000000 10000", "00000 1000000000 1000000000 1000000000 1000000000"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 22040396;
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<string> S = {"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20", " 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 3", "7 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 ", "54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70", " 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 8", "7 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 ", "103 104 105 106 107 108 109 110 111 112 113 114 11", "5 116 117 118 119 120 121 122 123 124 125 126 127 ", "128 129 130 131 132 133 134 135 136 137 138 139 14", "0 141 142 143 144 145 146 147 148 149 150 151 152 ", "153 154 155 156 157 158 159 160 161 162 163 164 16", "5 166 167 168 169 170 171 172 173 174 175 176 177 ", "178 179 180 181 182 183 184 185 186 187 188 189 19", "0 191 192 193 194 195 196 197 198 199 200"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 190883059;
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<string> S = {"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ", "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<string> S = {"1 2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 1", "6384 32768 65536 131072 262144 524288 1048576 2097", "152 4194304 8388608 16777216 33554432 67108864 134", "217728 268435456 536870912"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 551671810;
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<string> S = {"1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 159", "7 2584 4181 6765 10946 17711 28657 46368 75025 121", "393 196418 317811 514229 832040 1346269 2178309 35", "24578 5702887 9227465 14930352 24157817 39088169 6", "3245986 102334155 165580141 267914296 433494437 70", "1408733"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 569578587;
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<string> S = {"999983 999983 999983 999983 999983 999983 999983 9", "99983 999983 999983 999983 999983 999983 999983 99", "9983 999983 999983 999983 999983 999983 999983 999", "983 999983 999983 999983 999983 999983 999983 9999", "83 999983 999983 999983 999983 999983 999983 99998", "3 999983 999983 999983 999983 999983 999983 999983", " 999983 999983 999983 999983 999983 999983 999983 ", "999983 999983 999983 999983 999983 999983 999983 9", "99983 999983 999983 999983 999983 999983 999983 99", "9983 999983 999983 999983 999983 999983 999983 999", "983 999983 999983 999983 999983 999983 999983 9999", "83 999983 999983 999983 999983 999983 999983 99998", "3 999983 999983 999983 999983 999983 999983 999983", " 999983 999983 999983 999983 999983 999983 999983 ", "999983 999983 999983 999983 999983 999983 999983 9", "99983 999983 999983 999983 999983 999983 999983 99", "9983 999983 999983 999983 999983 999983 999983 999", "983 999983 999983 999983 999983 999983 999983 9999", "83 999983 999983 999983 999983 999983 999983 99998", "3 999983 999983 999983 999983 999983 999983 999983", " 999983 999983 999983 999983 999983 999983 999983 ", "999983 999983 999983 999983 999983 999983 999983 9", "99983 999983 999983 999983 999983 999983 999983 99", "9983 999983 999983 999983 999983 999983 999983 999", "983 999983 999983 999983 999983 999983 999983 9999", "83 999983 999983 999983 999983 999983 999983 99998", "3 999983 999983 999983 999983 999983 999983 999983", " 999983 999983 999983 999983 999983 999983 999983"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 355571882;
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<string> S = {"1000000000 999999999 999999998 999999997 999999996", " 999999995 999999994 999999993 999999992 999999991", " 999999990 999999989 999999988 999999987 999999986", " 999999985 999999984 999999983 999999982 999999981", " 999999980 999999979 999999978 999999977 999999976", " 999999975 999999974 999999973 999999972 999999971", " 999999970 999999969 999999968 999999967 999999966", " 999999965 999999964 999999963 999999962 999999961", " 999999960 999999959 999999958 999999957 999999956", " 999999955 999999954 999999953 999999952 999999951", " 999999950 999999949 999999948 999999947 999999946", " 999999945 999999944 999999943 999999942 999999941", " 999999940 999999939 999999938 999999937 999999936", " 999999935 999999934 999999933 999999932 999999931", " 999999930 999999929 999999928 999999927 999999926", " 999999925 999999924 999999923 999999922 999999921", " 999999920 999999919 999999918 999999917 999999916", " 999999915 999999914 999999913 999999912 999999911", " 999999910 999999909 999999908 999999907 999999906", " 999999905 999999904 999999903 999999902 999999901", " 999999900 999999899 999999898 999999897 999999896", " 999999895 999999894 999999893 999999892 999999891", " 999999890 999999889 999999888 999999887 999999886", " 999999885 999999884 999999883 999999882 999999881", " 999999880 999999879 999999878 999999877 999999876", " 999999875 999999874 999999873 999999872 999999871", " 999999870 999999869 999999868 999999867 999999866", " 999999865 999999864 999999863 999999862 999999861", " 999999860 999999859 999999858 999999857 999999856", " 999999855 999999854 999999853 999999852 999999851", " 999999850 999999849 999999848 999999847 999999846", " 999999845 999999844 999999843 999999842 999999841", " 999999840 999999839 999999838 999999837 999999836", " 999999835 999999834 999999833 999999832 999999831", " 999999830 999999829 999999828 999999827 999999826", " 999999825 999999824 999999823 999999822 999999821", " 999999820 999999819 999999818 999999817 999999816", " 999999815 999999814 999999813 999999812 999999811", " 999999810 999999809 999999808 999999807 999999806", " 999999805 999999804 999999803 999999802 999999801"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 815043279;
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<string> S = {"580714175 36567596 193776613 886683508 550956684 2", "00204107 43240796 1919684 687210216 25497089 70670", "0936 876775576 495824312 45138851 521362248 579327", "86 197722684 17988396 353896013 163395652 87215141", "3 433913824 268967480"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 982849749;
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<string> S = {"119707074 106021148 358177332 495295776 921181856 ", "239175241 200182550 354412383 275742836 246475514 ", "93612242 826699519 446679620 989369389 828619203 9", "86406187 14866477 387836490 863181762 510690788 43", "2975341 237060362 421139926 483214376 107565109 77", "5035938 646610027 979716522 61466113 915577506 204", "98766 181173187 21598654 378676097 528985314 79529", "6861 617851337 729167863 2225595 746110525 9756433", "76 95837837 425326395 274839347 85207225 106461949", " 113761885 952590054 494298439 976943647 315797193", " 779790131 66520360 736937118 263004506 174085468 ", "364489407 909614533 6318341 425955520 677708390 26", "817107 607128706 699307043 405493203 136114019 347", "120256 875860892 717798233 349345850 621971416 545", "957960 445183686 47297810 673313658 382907263 6276", "111 787075542 188013668 500574549 616535540 503810", "860 132881031 683055899 240747978 395885536 857141", "367 605237384 158016420 863459707 31192903 8357248", "10 890276813"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 435269969;
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<string> S = {"387548204 148286368 479468330 734668459 24147259 4", "9782914 84014309 498635026 448257225 381714346 398", "449187 121570882 617137960 404725297 908646424 805", "151627 905299845 377698315 308962487 38180875 6075", "4214 402226816 286582763 917895580 7464199 2971155", "34 633871638 891173454 132840343 524148451 2345277", "65 372904899 672434818 566512447 960089709 5490984", "28 616295360 896620369 47733453 64552585 130851067", " 446182639 38639818 747989026 850907936 799802593 ", "553140653 608724132 177500908 714619491 499421359 ", "90771473 116846306 638520473 8667052 976826856 935", "636006 495055041 720516661 920992701 19203491 9550", "44426 146413951 544154660 374073224 106503659 9325", "3087 990368583 3124028 993502891 907437519 1339750", "94 292201882 798593689 734480471 143109817 5983962", "81 140137475 604350300 628413540 854756965 9562880", "10 719185012 971603270 594808482 580368415 8009464", "78 382960840 75423456 521463138 303953540 94714329", "8 329023915 450367490 343814310 703097138 40938750", "0 289583748 545982073 265027879 283086639 30593594", "3 251519324 575288520 104529631 985999795 57091468", "8 555442264 126137269 27781339 36372155 980894234 ", "984069349 755557167 805013855 431394182 335925581 ", "458476684 814355021 263865388 979939822 970824912 ", "211008686 161480088 273708753 554822995 717093578 ", "683096253 844406742 115592002 948124131 980009732 ", "421527944 199643455 407814603 378573927 38159601 9", "78729290 786532542 164296869 859026981 822904696 9", "97707454 695612681 578461862 655237661 127006862 7", "66903795 113714344 793878235 30769182 946170517 61", "7219498 94294219 107650605 890928251 649117213 677", "260534 574024503 346040307"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 850334378;
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<string> S = {"374664985 178566390 66896830 574308439 586380993 4", "45470756 612468039 417626634 84519649 629281260 27", "6653614 907424345 626988713 972266294 338402558 13", "4742725 951789508 105306352 248457069 598184094 13", "6075534 47143937 67919943 82886104 7310893 9588481", "93 732003317 684571426 385389047 930559975 4774239", "60 760054032 109126364 544320790 186878822 6955073", "56 842307897 799346861 113133990 926827546 2811444", "72 242303955 834251890 908133184 67086601 25170799", " 42875909 871392460 130477151 143849329 322092905 ", "119069036 190993265 390012847 201955139 198304158 ", "348861040 786474807 882875583 734250086 717034781 ", "212815895 346820469 678677497 609653036 533699291 ", "226701204 451960932 185562503 192351545 231304829 ", "466706974 434655500 65556718 227356509 354258452 9", "0727517 122748769 225650911 73721019 266598097 547", "743815 45306406 310107714 937756661 247261544 5084", "11871 139134052 33736351 243803805 725900490 60328", "7483 309136051 72720958 134481331 918789086 606420", "248 361182535 223266370 791982750 553534079 454571", "198 111206075 988189578 372644268 338562584 194964", "381 315888136 461311352 420615291 389609154 727909", "449 820875457 434915559 38017162 611148470 5346934", "54 398945384 750282521 420946156 495265540 3286993", "62 24233639 804401591 401420320 11231321 723190676", " 860356919 372413855 946457045 504856021 925947934", " 253544595 616062095 766653863"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 367370583;
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<string> S = {"954624678 961618244 942076997 415936030 234749886 ", "184202502 996361830 55625343 619118060 886895343 6", "66773812 6327865 138357078 269572684 427274021 633", "622617 598272046 304024011 438024207 852208717 315", "255331 13731235 712565635 687669186 812704631 6993", "8007 613617119 66249225 686000102 232787333 692438", "086 640624779 194405576 487031434 909077160 429155", "462 671233935 905438989 337297156 142868346 644850", "683 4070967 149196211 783207760 126160002 57647023", "1 416830377 576948399 880494241 707370935 42915711", "5 195749571 721102169 994239102 883418756 38632315", "2 64177108 349552226 452572376 750177209 582339559", " 997526814"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 859707869;
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<string> S = {"629261486 484558247 4911851 58416947 8308534 91035", "0840 248230454 151176879 407717874 104817772 30037", "3089 190925634 230977774 876843319 460272362 80792", "6172 757337559 167643296 89599639 805603482 741261", "817 83838740 541538589 127584968 532199 891090815 ", "432673695 603225760 325946725 430200508 846544099 ", "955208210 767275107 851455949 866141509 775583640 ", "614323140 114371962 926760518 22041014 71706086 22", "7133607 65482999 302683859 103976925 525755360 963", "126382 713830836 545915007 52726020 371950669 2871", "76823 989081111 913489257 267278142 842129662 6570", "96423 699951837 445355421 983043147 130152344 1444", "15871 790767709 749943802 848388171 509425569 5255", "27441 315227663 476313882 304804311 189785028 5480", "19967 531937917 255268026 703220177 488431193 6335", "39737 666346559 54778380 179454743 571588930 42672", "9048 319147918 413186393 192734657 586426059 10783", "2406 849831079 286377895 553187826 685390578 26904", "6591 550120048 328674638 18990392 398508218 838100", "206 397034185 713735880 166930439 701838495 903520", "907 567466758 86292763 11305284 270686934 42724030", "7 644845020 789549844 482018687 676816115 21365512", "6 761264086 995964032 626841518 953998742 58239009", "0 734673923 803829821 721284337 140378100 34173675", "0 990330927 690498147 670411387 861837670 94152271", "6 361027944 111388206 507774948 527958382 66574305", "2 263812206 95425139 752035814 275117490 218628425", " 31792473 772478861 8178268"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 110326512;
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<string> S = {"449294975 74349745 127591596 297775358 701191262 8", "1590338 880165448 288381536 737936510 453966136 28", "1275987 79673259 296813414 971774133 750084645 111", "67435 765813201 111112588 122555641 273588148 4915", "87321 788298692 537400353 439528812 392850858 6650", "34194 510673588 424643330 437513055 371368207 7909", "70840 739324381 445717952 918562435 37099739 14690", "9213 152772 769781538 287807101 590605633 22374767", "3 569083087 670278891 520561086 393373572 27287988", "7 531728520 11703124 236508826 506800512 285291271", " 580612499 147615556 675207975 20141310 540466413 ", "340242169 383331249 817626094 630271575 754699455 ", "608596933 369595955 200417406 379675719 259212045 ", "199842971 232344843 28993582 340166423 822950475 1", "05257606 909249509 345745718 625818691 155139432 6", "18625604 10063563 166842555 707650782 516864074 30", "4650177 288263280 664479629 979858152 160920941 57", "462393 172616672 544252189 875088486 802888246 151", "467995 336201770 25000552 351885401 715877489 2842", "12597 404244723 948222331 313206178 744411145 6236", "89157 418463784 506177005 969434874 896798826 6613", "16437 440576830 906862388 680675343 148227611 2762", "42814 985325520 289007242 793238794 965183671 4499", "28182 850701187 137800342 846696722 578306024 7932", "04939 998164716 767024146 818205490 202566468 3354", "17986 102418086 606811190 136156668 268140616 3512", "22334 759845824 686604399 857399339 729280698 4359", "19576 371232127 22373879 195298316 51907469 170601", "489 471541129 889749340 459608730 117296274 707449", "362 762053263 967997460 697766055 608749984 398819", "836 490970993 459431051 18360333 161692835 6619975", "19 353778318 264110920"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 613822019;
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<string> S = {"489934985 532251535 472547394 249780808 71372285 1", "82463084 831577857 507291861 553695210 853951735 7", "02590176 458119030 24553223 26647656 200384722 336", "678304 143943929 907834083 98731566 964457741 6056", "00138 559997901 215793928 949087482 19428952 23415", "4260 110780316 533942822 587932577 227407588 80275", "1529 77867561 759659122 127815274 180164720 683547", "759 310278357 11742577 43355971 863973566 86569431", "1 745946146 174608948 742763886 625110153 37499366", "9 931958541 769054081 135344103 883206459 58602817", "3 740944240 295720711 801822100 542548074 16766601", "4 35976359 653328389 701608835 623908935 880735976", " 356876716 554292847 492911450 484691989 734457567", " 28975560 794970346 746200143 72331530 511460263 4", "64410805 818277675 686069210 59691042 295904179 91", "3579230 991649583 64958259 48923333 727372393 5035", "02784 642383924 23093103 305324883 184931997 19075", "9117 193817594 690776738 892367951 817726528 42402", "9065 101761018 224535727 916940514 586453007 95899", "3293 945916073 381423352 557709787 18247602 892883", "614 22120591 689041628 431469176 934327985 9849458", "06 197564757"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 232279133;
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<string> S = {"902420417 246488089 505866311 258439552 888872013 ", "381475765 563764434 926320361 572234881 757582027 ", "617097098 317119184 427824907 41126163 418880201 6", "52360633 810583028 5333207 463870277 609015453 239", "272910 21580063 479779406 984672876 896217005 2133", "7386 268658403 830544989 858799543 466223159 46155", "5259 613736311 712711248 967421569 872175862 45409", "9612 201413686 288456648 232936324 773648566 46038", "674 850033422 943284101 326379932 743675936 214680", "654 831256916 406775315 72530212 295127192 8683071", "19 311803122 169223606 200602877 148992349 6544061", "1 221940262 417650751 748501951 80739804 883873909", " 210057210 546992467 449101508 29995130 419168328 ", "903201119 231408815 707624975 136137443 857573733 ", "606180001 838687216 800857833 785076284 434879503 ", "15538486 616333200 694171169 88068698 763976743 56", "2478288 252388171 933200349 763081164 401380519 99", "8640959 837537777 819031269 599659261 770793932 55", "5421529 809716470 317786398 4523037 692227952 5894", "71078 760240507 923636766 149612404 748894301 6337", "26850 755792404 440097868 287101035 393385040 8749", "77370 155155872 9718239 421664891 95740921 6262113", "33 984143178 348129091 559411681 599740693 6020259", "61 410568991 289794821"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 688724639;
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<string> S = {"10228252 60588752 828995110 672461073 230891502 83", "3518146 217205376 820362579 446275004 140842142 96", "9974982 195169305 627085343 578283738 635267172 91", "4186377 971668777 362760894 69342249 833903367 784", "425784 165083169 460114699 621085313 365728612 872", "042732 73342357 967754572 135128074 363137177 2413", "28153 145356325 276242280 70323262 670333750 50713", "3781 756357759 887539125 327496359 55149114 880897", "618 149987693 250318418 360499313 728271430 738101", "942 274685689 699940206 100862835 196544289 386359", "924 737804970 361627458 846474622 211406634 727356", "069 571033705 137265342 547626992 706161779 500402", "518 788955144 704034455 776644797 711794757 226884", "556 136294930 320668867 114423681 463791288 375817", "981 847837650 613778980 478652750 60853314 1945667", "61 216754691 335539003 894506966 170133877 5320832", "91 133383241 760455198 746227100 979857863 9718618", "31 326099520 403407919 109127172 873726512 1095696", "97 462046041 515198007 813604152 91207190 79509116", " 40488707 227502119 400177982 7428739 543809758 62", "8512314 707782741 10105090 107165064 768636054 204", "671850 176436106 956691408 99178816 346569983 3412", "91051 85078408 107025180 87518150 64936270 9314033", "63 413617670 320860541 893046886 139860533 4304302", "37 207609279 655058539 96550740 151332820 73456765", "4 989555799 378834938 134745636 849500889 92264469", "5 615774301 409799981 932749784 722939364 30952387", " 137421634 899375470 987643794 89116801 98461804 3", "28934844 26711560 58003335 268969346 91647830 8419", "23049 682587015 265024722 587486287 822447547 6954", "54958 795095565 330022437 644522050 946428384 6459", "0091 634077848 177779673 51852078 336095088 952940", "719 667626378 745895069 738206855 243082094 776847", "455 728144840 994973915 764491248 669777992 934357", "18 945942444 696489551 3955404 214911789 640653732", " 845878453 750015155 905678453"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 357648868;
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<string> S = {"424979053 453649763 80976655 755001489 98171812 87", "9921390 819591579 584766011 910217414 723960008 92", "0861098 863158132 244102738 666756166 453881338 48", "7184831 296119972 182026177 334675097 60611220 851", "804168 280627166 859070015 400810071 284582569 739", "81803 41463802 982977373 676513309 947142255 26885", "8463 101492361 253308369 202351469 856493849 35148", "0180 934789210 528601780 936246190 845006623 10507", "8139 709623639 560681107 349180876 228896157 14562", "444 836365706 525016128 49104973 23557154 43814369", "9 753425492 304184319 297213713 154235562 58876688", "8 223711867 48215716 424260612 900225175 995357970", " 693119075 854233887 101182690 747986895 563244088", " 452662869 682776105 91845867 241425410 380299079 ", "49440357 951049048 793496537 398621233 32461556 66", "0575333 87503290 557477684 709680305 111060444 995", "621382 315622148 415244762 145351447 469857710 401", "1649 369063313 518073425 280788613 121804840"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 300638524;
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<string> S = {"973907687 976038726 467130435 574410933 391799165 ", "772309655 109703389 336161383 13735064 490002468 3", "85601740 817300463 136015356 784222972 849762019 7", "96590688 871726261 259756054 358787344 982786704 2", "55377435 674409492 398031466 400728881 144267201 2", "54559466 622308546 514856977 535348078 744113385 7", "33321074 361772116 572668462 52967860 936183049 96", "4467627 825277514 45886437 153145361 691528929 388", "405256 538747100 361345743 524420612 322970071 636", "24113 173527651 47212684 323380166 532314995 29999", "387 578757601 206724486 280547204 832002833 203508", "038 535106670 454311378 570881366 922971099 509411", "14 304202439 137259567 476125928 357170298 7344261", "5 293109906 34964163 971845403 446255266 726493091", " 212767011 985002366 87838833 589703974 160488788 ", "151462946 763231624 207701471 474843111 295546618 ", "237700858 906117063 354787455 518248061 738119896 ", "558295492 905871082 44947625 129176857 828842181 9", "5888739 285895647 966101747 424531018 495582296 89", "2060713 717640923 530546458 716422467 163896188 25", "7039548 781705829 1414905 197394733 371409802 1619", "03693 348857678 134641426 369605163 676217140 2827", "04395 607306020 582334203 637491850 978070433 1729", "70450 48303693 883941514 70434426 29996902 5653000", "46 18839516 168408900 383918144 443370533 66399119", "6 128495208 161011455 194537653 697434027 17742399", "5 304093553 479139855 178838899 501488285 70306600", "9 340742591 850345962 690223786 710347754 37907945", "3 972928180 170170125 961413655 462936381"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 645680856;
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<string> S = {"986900456 363756426 884698423 57334882 393753327 3", "02514820 76174397 562162226 686432964 519544930 78", "669773 667444523 533072736 273207426 364878549 710", "496730 577300978 696534756 889335629 78789262 3996", "00764 230078219 781651575 89824549 940425972 13247", "379 915269080 110596097 974661034 230721813 111353", "005 814077841 594478238 996051427 871412722 840747", "916 151082599 800103471 255426493 837515562 172164", "752 334096266 357476436 705237487 607303691 722354", "985 415734217 37121020 271406092 157586197 9684266", "33 671006855 387664415 602594559 613347755 1806067", "39 615841937 381133186 143719187 443019322 4643713", "50 107588543 257097163 58849587 103639970 98102623", "6 752113854 107238920 781129706 7540347 944754481 ", "953294457 341636612 154747268 511048296 801456654 ", "877102252 926782512 838577673 1024695 84368708 659", "520657 672031549 324549474 262115215 137895655 357", "672564 877957151 371545193 501391750 173492825 835", "916542 608980293 430589987 747282481 565136614 264", "132574 499396334 672375533 45262280 359453032 4696", "46365 851073088 701089643 624393632 214637735 3550", "62648 354012236 141420246 46156672 355036930 78305", "305 705677328 879584831 255371131 967792542 174804", "85 613043694 698266045 241542029 966951796 8717588", "69 77458571 428448440 154865207 824741051 99358505", "3 418997780 176653736 518476937 316776411 53610676", "8 840639653 20365851 89712762 317549636 235003585 ", "444775410 671561871 228940183 490932081 879115153 ", "159761839 49125761 758699983 267649321 16918302 62", "8696819 880693015 567700698 870238848 700161162 29", "1975918 800213770 128609601 299357476 477471172"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 298742724;
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<string> S = {"718355256 654124907 345704293 887648018 42748026"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 526680393;
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<string> S = {"908013868 132460788 503893580 995533805 429752549 ", "27971803 76990339 773200981 907086955 236752177 82", "2326741 518303289 504401498 691761395 999516459 23", "7610864 111978444 722271658 937772025 403954362 52", "2485427 918897977 703311837 999956598 893608981 27", "4183444 506597857 91829625 14347814 401862234 2781", "73569 922361681 386839373 634583500 770411837 8165", "91921 662555302 847402175 442309254 422158608 8415", "4352 264635994 792978248 441072201 956397388 79249", "4707 531199416 68375832 367282716 321487792 324846", "545 889768143 240385768 880674733 742241092 986511", "100 7374529 101355300 78340724 21722342 503217534 ", "209030644 944084022 890056906 843614143 567012211 ", "559165179 358685797 414414385 1474432 780844404 35", "1085088 118626777 426339004 644673640 927540517 71", "350062 175873055 848432700 438632777 497360846 257", "95596 180917271 590262965 906470328 923158363 5767", "74064 913844856 877030014 507631139 935567197 2327", "63899 716661782 732167571 122820805 560275925 2991", "79781 534502335 918961721 566110517 388493118 5523", "22476 917195605 359636246 978661479 414385596 2871", "76762 50011540 590258651 135609461 341160669 94013", "5848 13921408 522077939 530398813 920391736 297752", "653 959689228 834236591 174782667 467320367 622320", "140 407546565 36498500 354487710 382883721 5967744", "24 506183842 769902407 368252496 72294358 10911876", " 773091324 842006314 370548122 604269154 256391910", " 657724883 506797046 699166912 645850696 847957714", " 639302759 659772103 370035652"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 254189650;
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<string> S = {"432680190 667788305 981907151 119433133 695087323 ", "301743869 741753272 102633887 338242368 96240981 3", "38033960 787533144 454941174 107936366 8301991 527", "235531 118848242 781393314 221758197 341912715 385", "662468 478150106 999637597 892459513 29833369 4980", "04644 592933578 669136127 10293099 962969229 54387", "0402 442973288 483273885 378293904 562406420 30877", "559 680037772 156676043 133511446 870796491 105433", "375 324061757 658329634 560374548 284514474 666631", "625 87610079 255879067 300541290 161884627 5977917", "81 686203757 640034732 449945730 431179621 6698681", "00 800466725 24113198 191520578 810759823 83959877", "9 735390979 106249463 175389015 113684882 52117223", "4 206266574 646239005 677848277 192294371 36955184", "8 783281651 368872479 27881481 343656199 653386952", " 547029457 283782629 761782371 847570747 445667255", " 212090503 386290855 938218338 662036232 669986828", " 460602789 315019309 546616377 652123366 125779131", " 238731507 240030697 84544945 414120522 206231930 ", "605717179 472903447 704987287 136081807 665197817 ", "74539134 919363457 34070295 954936966 115536007 53", "9973598 354482775 399318635 154272320 54569873 697", "502241 366362823 440860727 635720578 28399054 1108", "47554 96323366 195934714 509980283 600963084 17423", "0197 748711789"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 953901675;
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<string> S = {"258775141 15348662 899742061 717008671 488252108 4", "57245699 853090477 5966276 531784832 772453934 400", "36570 339238150 887989940 432526520 693720924 1398", "24927 586798839 748290796 837327167 953161661 4166", "7874 325564097 834077067 5031780 274403814 3001178", "0 515012062 727883249 56758328 263723850 421393380", " 315533469 279072512 173651793 32542139 767324619 ", "630897491 738148968 773290895 15198675 363119253 6", "65843816 354436824 103625544 950886687 48157747 24", "3450470 390201878 648964894 933293989 195879890 69", "0632767 111374437 29956956 695664546 385778250 912", "485088 210676607 113661499 969243415 326916809 387", "571230 137293235 605989320 413739374 22351726 2258", "30290 44636865 760500693 851637536 912351891 12361", "9945 369997704 119305066 79761840 320884390 199791", "64 323212310 711086267 668944057 109022650 9069661", "57 359576823 220397086 789439464 55241369 60617533", "5 554440903 118434327 572353185 376200670 44535113", "5 812440767 366010256 903856806 226180140 38836198", "1 129687096 123333356 1379025 833840983 35685246 9", "77515321 203838686 7506663 57277161 377239428 2748", "5826 233005822 88325694 696429882 342028471 847808", "202 56006705 562425556 489764018 963764425 2111724", "2 896721272 934715103 593470427 125438293 23258259", "0 258427545 491448549 136439395 484607684 87981052", "9 118642842 460457392 733705906 952483825"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 224962377;
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<string> S = {"711221226 8838862 356165652 621014738 386078289 38", "3651477 854020559 326920335 80081359 196049029 272", "44888 988604415 758474584 369525257 804885191 7795", "91826 266246529 739600293 225578604 391684821 9721", "82882 484006148 883133369 961138629 821130183 6154", "60250 79781470 281587574 201682507 884781646 63024", "6563 912903732 746136860 986412214 386434822 13221", "5148 222580042 240455380 311651834 302661400 28902", "0761 191413074 143782166 47495344 560938330 948667", "356 679603521 827184858 540784001 757698476 713860", "31 365483234 94220975 807035751 326621862 91535115", "8 275012352 258919684 49455083 476694858 996217681", " 679701645 242114942 742354540 518630210 628549763", " 727086040 741210252 869005142 891254225 896388003", " 10542254 82667298 40170169 58037598 643605628 988", "837524 590157470 323306837 382137876 200372298 247", "209219 747621110 294593272 54244970 74242971 20994", "4429 329257321 185679006 259399512 805952179 34413", "039 791617508 48067120 776767578 162764070 5291332", "34 356369969 903974321 250654727 100140546 6528786", "75 261196981 182807843 693048843 171750930 6789298", "22 534402719 761908399 2236659 916540594 962280696", " 101962229 516678055 109390320 156207198 443437378", " 319334748 337980871 629116383 431250611 143933049", " 663529421 222868119 44516520 292813351 385632188 ", "426166105 501699671 142122860 676820831 601840216 ", "795001534 938017811 784648059 340566729 109768740 ", "316094232 727485799 724193491 170847242 496542744 ", "538990538 272809471 13220799 648380857 429016668 4", "56658176 967715605 766997538 938290910 251482567 7", "63446938 454336683 474350685 660479809 747150033 7", "12499224 86645913 101366055 854622083 615983096 70", "3206271 502139969 554000906 340370681 695223049 51", "6285998 656464912 422708847 240479488 827312154 91", "9251590 779470025 100121624 784988740 280367234 38", "1654643 94163267 100599190 1168533 32454177 352081", "756 764615470 486790859 826432441 277611631 864572", "43 391448016"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 724878459;
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<string> S = {"187823297 98586451 832756990 891029567 600726419 2", "39274248 83916599 148465819 755560245 740381511 57", "1174665 848556084 567693664 342942606 480542460 52", "0331639 127931346 760909693 901986281 74610964 861", "508882 903154813 107065140 213590638 520286635 446", "372350 892539430 797898265 532829592 283987445 867", "188511 573169241 382573895 552461853 316715159 835", "816665 791736100 400631758 984282483 399812696 141", "013268 407973499 100885131 561223283 750916105 581", "427590 81554921 731363802 342337283 983541201 8059", "74765 56362516 739212366 765556257 269953153 25949", "9000 211928606 15008934 909913616 597274550 298996", "379 777102126 170443790 534086625 182080330 487158", "948 369903290 973816429 887790705 206702124 226145", "476 881320324 614675623 327030606 442543606 218108", "079 908458196 376614878 949471880 103311830 212672", "431 607962996 159674345 951884796 226035604 282143", "850 63900147 437964210 297152783 973813762 3523875", "9 596149161 603432239 58198900 130235786"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 676804602;
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<string> S = {"397874199 352655427 611845349 138181256 559357550 ", "837990825 19501579 26549524 17537782 314561537 244", "657602 778512329 691176414 46645833 881824158 9038", "48844 654608829 894014855 855733639 880644432 1761", "58704 919633785 171124993 473311486 745963898 5888", "0103 921976999 349396137 117079002 904729136 13490", "8705 367469553 109900914 599270405 505650808 66925", "8463 289777581 525152386 695807987 307315363 83971", "3922 940465588 85827691 383406688 987111421 820168", "201 287255531 494236601 566699407 995505522 227397", "384 742858110 767655658 251038729 68685947 5136195", "56 309918831 990662945 715532044 279514185 7479084", "32 702957100 646983737 857809345 302227504 5150896", " 379584160 592005085 530303281 75392146 751836799 ", "222533555 868374085 690180841 605940242 708001857 ", "362865393 745712124 54754809 929564799 741217645 1", "34668545 524939260 361389655 385707273 593625207 8", "75009210 695626103 436804503 443057605 827656639 3", "7229287 146014704 327156727 895038631 300758559 33", "2307622 274622790 892763643 862610903 202531287 49", "7116793 937660809 923421724 187297634 396117402 48", "3939932 550163026 141829525 538694741 332244177 73", "5563522 673363285 857183436 96953176 59070557 3033", "24994 824478737 607213011 740129497 267536341 2873", "86002 777358783 266067396 614542728 524913765 5668", "25954 946850350 799536555 312105949 661977604 8545", "84193 809222741 599638412 778005916 996520374 9957", "55813 114462200 399199752 990101689 653156940 7314", "43928 725665210 179036576 441143715 675134737 9062", "3484 744468709 499613473 550352846 337114557 61966", "6165 837738847 114473339 885733560 452281575 49190", "3455 452559514 251648276 143956361 764665462 91362", "5879 998540554 426404554 365780642 629062821 27544", "1280 214052806 743525020"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 154800999;
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    vector<string> S = {"204154494 249198311 258601310 782336056 428234886 ", "699745024 457470792 371374721 296730084 809600617 ", "921727567 633844640 429266781 759466413 600834330 ", "167516693 64264339 92737785 620076206 315912614 23", "6694145 237258019 82054844 87751050 663662572 4478", "35485 716813871 939103851 661888290 460338890 4662", "61233"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 108129191;
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    vector<string> S = {"709537201 577378894 500895191 990288438 129640270 ", "958365982 361663159 426370353 620482950 135907077 ", "60214993 49749731 895373489 661049322 69782775 812", "154180 606303458 689858980 128066793 842997603 779", "633350 62637989 930748652 295812273 510473473 5000", "78874 87432476 172361763 960417764 553693708 89092", "0898 522471316 131072602 391816088 365276105 11322", "9223 202698421 726939263 539599575 823181371 86284", "6339 599814567 725447453 610736180 113380241 79523", "0227 275406711 719683698 337605558 255989855 41519", "7652 117238907 318627843 198462656 265567531 82910", "1316 698541529 353000006 1463078 511475644 9066937", "14 744900327 886463311 890282667 136716414 2517394", "16 3511889 191931186 831195030 395627815 867628908", " 546557721 995442382 445592712 9810252 961338974 9", "3339290 285216962 533539023 430944847 541206816 94", "8736675 400700105 859834659 999715682 666267636 68", "8935974 550773562 19267641 542915403 62249206 7784", "77706 140332081 801228868 521276724 129564846 5296", "8283 377304964 321496031 736679665 772932779 41641", "291 283237385 620891512 487234002 293047636 434746", "837 580573292 578264597 968285859 11518138 1194714", "12 769538885 264734595 831822422 769254566 7835185", "82 373274747 172544480 655302574 916190149 8731003", "7 286296632 56522229 888538904 807573355 38603426 ", "794023539 37394671 360099457 530703203 662843801 4", "01740747 666456939 136251664 888974748 959504574 5", "70998500 322064391 390285522 539284358 186098881 3", "62273285 161339595 450833475 46612059 930594160 86", "868408 419886805 103138639 742170981 188593306 429", "65027 28467612 97631886 931503931 688557319 136235", "312 725527469 725951989 496334768 108747023 241312", "141 750591866 775203961 377563804 492082965 587224", "886 948562303 814147356 830026759 340363012 246236", " 44816395 501702606 303596062 91428453 284813118 3", "90464469 511315258 240468108 132635449 699908563 2", "83433135"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 978656418;
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    vector<string> S = {"797540448 214937065 702176731 933775759 792980885 ", "280645071 282626878 901727907 521957211 33218743 5", "29448219 899521014 525301708"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 201991750;
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    vector<string> S = {"848083316 191965415 799216214 40962679 192211650 8", "44032608 542665285 495807711 935461061 827478402 8", "86272179 299292670 67946509 871423979 999201232 35", "1379643 885043391 796741679 418833059 587220121 58", "3033790 211813943 867865191 865660667 966058201 24", "2338753 898879410 348022771 141859766 276697469 31", "7212226 842459433 468662883 968944791 883422112 51", "3390884 665493751 426087396 9198594 453471163 1060", "82149 747987124 752763832 174028657 471927454 7519", "65063 377924652 356970845 401223093 796757710 7967", "07317 984256882 8571653 517088860 702433901 827146", "205"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 689582013;
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    vector<string> S = {"453829662 175168976 901287378 730527130 344897553 ", "596263162 51706364 313842344 479685273 565097247 9", "79336094 758289020"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 434690180;
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    vector<string> S = {"285323608 864371168 27315667 38087439 38399825 499", "243120 642568853 268840828 708730316 43791945 6559", "8537 505437633 880565179 926686541 22526492 435515", "431 753832746 634470455 889345092 781518073 388274", "184 472388573 126415625 984537346 524094936 292774", "320 316738970 941708534 124626765 75027990 2210370", "77 409950372 939399157 248352743 448037810 8303153", "33 600112214 90606662 99156160 308842530 986914959", " 17271049 666796514 719996489 943957589 541839357 ", "8028271 550306686 176309811 897373362 184341110 56", "4583995 369761934 310756735 401637692 746373221 60", "3531054 718376661 688081754 728157819 793404650 90", "9118830 138108190 585320159 9987924 438662352 2681", "51843 610100137 381785365 219824355 771459018 2212", "16675 89611755 438255531 793729515 33569343 980094", "887 801757785 436392381 8921050 699131146 62073349", "0 426021396 921409431 784006576 827659087 66778265", "1 240053982 546035747 208380756 968211800 19195674", "9 970015937 958836341 629793259 980003860 25001504", "4 897945101 442620349 484316761 970285807 66595718", " 705533435 59897561 504851249 351779302 945983256 ", "337462487 153537086 234891988 198899888 705184584 ", "855625477 624921283 626594014 492148405 452580369 ", "146893017 732202386 851132468 207790124 552930537 ", "43089216 177806061 364283229 525398826 10326272 61", "4298273 275860278 305462972 98615033 246146085 372", "058690 656664819 158559997 876909938 8444120 10454", "3252 66888776 14497558 339435239 265788664 7196821", "41 47577068 890709946 198792506 539725472 19580666", "7 198201874 124444209 46939134 405991998 677374745", " 942544701 583798058 41657973 320459878 446640681 ", "508472597 596320155 752103653 459603981 842466239 ", "124162342 116268800 1026236 853588631 977229271 95", "8085839 920477406 844243180 150037430 38782421 416", "441672 197614497 782008719 615234178 589856320 977", "815385 813436051 714300528 877270870 71944400 3916", "75272 672331922 655742457 285849596 992791799 1023", "83138 794322193 441628305 707003142"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 700821303;
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    vector<string> S = {"136610896 831165483 222711324 137637131 537270465 ", "52456947 948239321 310264222 896700126 98276750 34", "9046643 165658150 148407598 131055361 780892327 73", "8263917 961387097 446844729 452564444 691174318 51", "8789129 696756067 216022591 27047937 982605663 613", "30741 981947426 776927855 502959045 688950567 8833", "70379 639569940 372632401 106081703 629723422 9099", "02865 11055001 430479095 72683439 760271478 528755", "844 421730081 925929627 677163442 405301793 559338", "305 267943710 219205241 6183034 720508154 76289591", "0 377488514 269780572 978918500 257052802 25238623", "4 892765592 239000228 881830440 248240988 78046714", "6 765200819 887810928 5615899 723798873 370050701 ", "915518763 587370225 800529795 988202201 347641702 ", "181801991 262448633 126087681 711481784 520266777 ", "685425985 979425493 739472017 544125370 552449998 ", "354884278 921613883 822230570 186319129 31183037 7", "4616803 79084720 270183264 808963595 327325708 506", "50409 426680765 67652987 56266307 2995989 29022003", "9 824301422 590366213 90749834 665019974 938007914", " 125068176 779984959 64095594 836549959 300251735 ", "602037931 668491803 892240104 146163300 220941801 ", "247124381 920293535 43172370 433443510 951476571 9", "70305524 365044581 74176186 631785470 692370288 12", "4826594 58466234 612539626 33609253 61462222 90275", "9665 710427026 651828434 846025850 227963351 44235", "2700 971094025 7948309 358964645 660160335 1607163", "96 961002575 181168489 52956499 959682227 40211028", "9 152597231 879975761 297799010 438557092 68396868", "3 120620886 803601673 758144868 752406355 34848831", "2 735487813 663388941 961027938 621613417 72485116", "2 863787602 184556794 229195948 562329803 41252014", "5 524064999 385940179 272984805 883029643 46100513", " 286217552 696548570 79785353 191690402 508747148"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 877232995;
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    vector<string> S = {"344287633 241239260 632211003 782844724 925207942 ", "752831888 438962748 683352809 357754595 787451060 ", "271356973 21143535 748478997 892970390 598511048 4", "64782950 77527183 680223347 27112752 342563679 204", "288345 265569282 615548484 939834340 164186146 901", "766035 488899261 243971498 93456437 997646408 7258", "67139 290260421 238885667 210594494 925621496 1660", "9960 963426381 364584244 699962768 173697327 45516", "55 971319740"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 323613639;
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    vector<string> S = {"753030651 716806481 498384613 70329952 794333664 1", "78607959 949959055 136897342 235412656 215528336 6", "04962177 175246995 379714481"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 858543591;
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    vector<string> S = {"664146255 623685978 305217352 514309014 202069469 ", "447994124 753194680 412663962 373615619 769804639 ", "228606694 590716214 322283758 254820373 595267868 ", "146119849 302177585 200814870 862926330 800562197 ", "271144821 509776345 831686508 73620227 499190038 6", "7099163 289148562 956668567 94862509 521379394 168", "429482 759008763 145065372 473646833 125834128 199", "651192 921640956 879028807 464831505 147772926 501", "349797 693438198 738489140 676149906 948258570 186", "273359 822269754 102952507 387088229 537712435 756", "031055 658233049 900005131 587717562 731853276 251", "711521 507333076 873518189 208380087 602195584 394", "897583 376809568 213720698 392479306 702972752 339", "554825 444646849 477130059 71099983 909478353 6249", "02984 572449779 455432902 215908475 101116036 2562", "07824 402181834 923385790 359160330 789270062 3136", "14576 115191384 300019462 66136059 555425298 88438", "9089 317847579 62758373 757907278 526227665 517470", "309 5321212 755553584 731191006 250316869 45852633", "5 70745831 694963717 935656393 141845813 604442069", " 413075728 566811944 59874970 481500555 667927979 ", "168599145 883682388 443830120 527759474 525468801 ", "757444696 495467210 678004614 823580754 903408859 ", "562393703 141428332 818683583 172817332 520172348 ", "336153891 30654895 128242283 67344897 280971763 58", "6768617 990607079 975935479 374941361 132452891 43", "2893899 640533440 551781186 345285220 122033994 21", "9709165 513884365 858232733 663539284 41643838 236", "217885 273500331 389627399 914222499 949597436 145", "552609 329132553 943542119 964236192 501949884 316", "230818 152906434 532604778 444473100 72767682 8135", "76540 31241716 63374760 642028370 258699428 483440", "03 74922268 899232868"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 263582035;
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    vector<string> S = {"420207487 873783213 672350704 934091851 732015946 ", "188406340 828252041 968233830 461906670 70395791 7", "34972680 264020458 215948400 64105232 207562576 32", "700943 418571467 523793394 185607376 951176244 968", "266493 258375058 617269135 852024561 321749817 111", "813856 963240340 222610171 186736123 714989559 822", "735359 459459962 588772772 347602414 246068164 173", "305069 536008753 74320204 994055250 997915423 9972", "32347 729027930 114452232 65697098 645649513 32201", "4807 98398040 64220980 698324552 284005415 8679135", "75 519107397 542380472 337699062 223648309 8641302", "89 449512917 186888648 86740459 636249040 90187820", "7 761992169 95709001 343167330 109594583 194293516", " 368988750 498119687 121130072 363043999 348551461", " 118362418 944588280 463003692 184059515 590237793", " 785018499 282457554 506975124 335859402 566462968", " 374888698 854966798 108843440 712587759 78615106 ", "825490080 14617028 118020106 764746890 650866067 1", "9898312 379255411 599091419 215581993 341366345 79", "3384934 584570742 839486031 914515005 800131092 40", "553844 885393774 744719372 503557535 69453288 1874", "73516 141092385 204427193 694448639 476951787 6234", "06513 921853688 331918584 584766304 486957799 2630", "50042 262772735 501574826 381070147 27519624 49572", "44 253484810 259291386 604048662 469066802 4531740", "82 249949947 906153895 145176465 16981304 70628498", "6 185730308 902375077 303520709 689287842 82434471", "7 343510576 830380227 881288261 37959214 307332013", " 504694773 812329254 491766948 89461076 299287052 ", "754816989 204750162 800861877 135887135 84786138 8", "05819120 389371944 344077523 262384133 710955097 7", "97251605 364850431 617108991 942428069 381831734 1", "75910329 128158376 136723163 331947389 669962569 8", "13584231 675457965 500342795 694872491 565933530 6", "60191159 52083616 378262783 151958107 994061043 53", "0066186 906775095 198811205 183444414 895178582 28", "3597342 989263533 137066877 480191216 104164017 84", "8021974"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 746985368;
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    vector<string> S = {"469014448 317647316 72387240 703362533 493557644 5", "3061967 840085695 825505033 575540888 506186277 35", "3479349 75883682 53575120 919412878 588591193 1056", "58735 150192013 740549299 99719777 680258198 49984", "0745 151047333 863702612 247535678 287161026 70548", "2496 384602555 767352242 809646513 232624528 89731", "1413 131177312 550271843 822215005 834539844 89634", "5839 727793323 527141891 574367223 303334210 33328", "167 927846571 231734244 86903286 847259448 8203254", "36 45078372 997451460 413391086 997314501 53022601", "0 765748182 878185 393928621 13283860 288039211 99", "411116 397886414 55391452 761573980 483027293 9527", "02864 745267643 33299135 627434220 432323839 78216", "1325 355227543 959465729 356528547 511078104 84531", "0247 136891469 742812347 784729885 984150917 41565", "4134 682324608 834118728 681561571 679639108 21686", "1089 447309753 680517293 610789709 313109964 96855", "6503 562717177 710996377 876464306 176807508 46540", "021 681683521 922075151 79839155 309117741 2069153", "41 714516832 516861635 18897421 71045378 27939738 ", "864207667 60453199 623268437 501453903 44604115 38", "922570 36294863 731239194 573000493 715933970 9481", "00283 20310245 248967614 411406343 185936560 70040", "468 826639871 896932936 946504773 3447379 94347295", "6 480704646 778038881 875828462 789822386 98495422", "1 442861645 159200372 3851641 366423375 187140109 ", "720575659 426876573 810408545 74545914 323997039 7", "01847467 110840776 55236232 127364311 679291097 85", "5852866 190907 928258711 119775561 186127466 85081", "5530 946415431 83060401 649836655 802379161 879049", "708 130541300 432934393 607394521 772880037 270404", "965 50256166 932080408 126772957 269195892 1192205", "16 699864968 696072464 782145413 774410881 2006950", "2 336509231 737768008 927822085"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 702501065;
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    vector<string> S = {"417059104 636191303 464064447 197834166 755966863 ", "650191912 48649696 554898645 585768664 551002702 2", "09794158 317334723 681544001 495244902 777245595 3", "06940389 765649867 680018112 239020796 744939175 9", "49214003 210757663 444804142 645286466 845419427 7", "1731374 517872319 34445009 809499381 445694404 498", "318549 79074837 81885706 814899347 129425354 69036", "8920 317607610 30591401 97783916 903376273 5815941", "02 160094425 73227347 115654454 655339327 85047294", "2 422594842 273505545 383007405 661615637 18444719", " 332221408 724889652 315765213 830024225 570309078", " 387496586 347896544 604754087 49512319 646107299 ", "955588987 128587155 580509356 770488334 110528860 ", "123394627 88095943 141120261 221178542 843988568 7", "22714362 381272967 769732266 838368816 36612293 47", "2721559 260963657 162634189 855728964 775095646 18", "1078907 40466723 499985297 496844119 870490947 922", "810726 736857057 70903842 380081164 786369375 7170", "11140 335670151 767472881 297520495 958674836 8780", "01740 420915121 899287130 19122000 494610015 59579", "2049 594352714 875882981 365524315 432721529 76501", "1625 838245873 546201537 927645813 546491188 32129", "7182 961241071 586957910 673798830 310601542 45744", "8857 596609556 47458598 528352698 976690719 686344", "324 97880190 164877221 306333556 395400684 1235520", "56 36851647 668832157 875355538 55973647 163442171", " 471147586 502842712 891841503 689188252 935564240", " 509369479 379950477 334282128 289531643"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 664035044;
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    vector<string> S = {"655579310 250772713 513399574 181894491 561374254 ", "823364782 778504046 461349203 204233831 607711117 ", "147693526 302114020 625104689 454027081 697514704 ", "601173097 490878728 218863212 476528634 399368726 ", "382305382 800192571 902211437 126663236 489380823 ", "690292028 636032714 869331299 24574155 925564356 6", "48289314 532669816 28853420 14205239 714564307 590", "227674 837570020 345584704 51576876 41803851 80581", "2172 51786754 343917870 430916861 358330186 893948", "925 32089957 849208913 112812136 361134942 1010939", "90 347633869 13843864 855821778 474297104 50322468", "6 398630157 110329817 225072336 275720664 35894172", " 873361650 808390479 64747592"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 296016862;
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    vector<string> S = {"375471137 507491617 577653260 573572193 411584844 ", "619457110 379384364 315887949 815891331 662817576 ", "674218135 709840256 547423884 375943399 675168743 ", "908558825 477037389 22802612 922402689 185375518 4", "97099715 278143726 584005675 459945884 355732414 8", "59726338 348356407 81610415 520633168 265620350 96", "9177302 896104305 773111966 399346913 322192849 37", "213162 18804022 701577212 353101110 687211705 2169", "11140 27319244 249568312 764335023 255778995 92473", "7054 525410200 732816383 947539665 300329240 91819", "1900 297155732 578472965 354713926 757101615 93420", "5378 214440263 105458021 15815792 735073431 223594", "723 837509446 483694087 996706688 89372710 8058869", "35 886436201 108176732 359980498 92053663 64790478", "8 576891637 119372906 897473099 193743012 22766825", "2 822210152 719153211 960484634 622266169 19482450", " 731192886 771938252 450471766 85906811 381556218 ", "237193496 152863426"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 337129309;
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    vector<string> S = {"105525639 740453208 563125312 943035084 76663646 4", "12348352 32407794 882550580 298784552 993100877 95", "047429 390838214 493522016 524455418 362727472 390", "995114 718198429 590395723 65721617 437351639 4033", "96709 540504137 309350440 987105946 312442388 7598", "22205 925529108 693998605 997015700 78392533 33529", "195 102541339 671362092 449170858 898092774 748025", "737 861519209 783016919 483092668 12820113 6286341", "47 578140097 403658326 122156162 102595514 6189021", "49 365667627 673310294 61814224 431389244 11066193", "2 465210932 971893380 272528723 304833229 13685212", "0 32350927 230362336 683367076 29366627 161271221 ", "569412622 984424317 832633312 18583480 882517090 4", "33175401 880102688 518050361 916268068 892922800 1", "46684507 346924516 149097478 121357021 302036381 7", "67999626 487024647 975346674 829813849 918413890 9", "38524957 147541132 742823622 211053679 452374360 7", "32192093 95920958 535253048 415559168 125287584 69", "6524268 984971790 962228252 381673931 856071621 69", "7261693 814849331 588690660 215312053 583633751 33", "4129812 214512912 930558266 483227289 335869932 23", "2594647 103743266 822894578 60457672 786073467 593", "824820 998982629 933614598 189164793 62552659 2385", "05310 921356885 158473616 773758357 189432404 1362", "77551 322798976 26920545 98505802 556989258 882992", "165 795767495 224354941 471682825 863595899 807988", "691 805812636 78108810 738546956 141556276 4139787", "41 823657954 97815893 89389671 884115626 883889359", " 683214490 883098254 670020309 872379282 945650912", " 908525618 793736166 104124528 534800326 983168569", " 92918430 710115653 10089114 191424232 267104910 7", "45597630 839708078 491459850 69796806 703303976 15", "1964892 875609441 633929138 890511848 869682068 47", "907878 566686153 967497961 137297548 450801778 851", "387319 673028389 186416383 373923979 545407670 984", "583647 134965948 191660187 941224526 669766273 273", "45108 34142955 232398277 889950573 78083538 499503", "187 635548202 917791615"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 783750904;
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    vector<string> S = {"705345008 473611943 995444280 433470800 107541080 ", "738472479 155669220 7965309 305158631 123167180 99", "7779209 608476761 827070850 670807597 794893143 20", "0994829 68731619 631993141 335960776 112908157 573", "217666 858243401 140253264 459876973 90641677 3020", "3836 537960510 442661215 518268390 455752125 28614", "0603 76129749 929364067 134101234 362116900 889421", "498 872573712 517786119 897386806 30248694 6409532", "98 747682366 638725454 320540500 271006315 2861349", "49 521535328 339737933 918128089 710012455 4526460", "89 343862107 568255855 445415705 803739079 5114138", "84 328135892 341699588 954075098 846404281 6499680", "64 92732052 775050381 431848482 226833285 13716728", "1 321269979 99406996 654953399 71173137 129655690 ", "148423049 818855502 768381143 468963548 89861816 5", "4516091 843015227 282116100 825160532 553027681 58", "7278541 169022638 973799888 32694245 972761716 485", "213771 360830136 166977655 291805220 59750769 8169", "45719 384537272 834801149 101310552 611370556 8244", "84781 422580531 710777552 331954532 346270019 6929", "49593 480377580 17641872 313847087 801857479 10750", "3688 220879530 644872705 242136139 46040061 504167", "37 829414679 67579050 24216624 714625275 40340765 ", "361946746 75455411 59834771 653751966 987722531 72", "9296841 38289237 675040031 830607393 502176144 499", "524812 105704275 65470047 831479343 451974293 7584", "19639 164373274 469616164 72266726 966230752 42963", "6203 293146255 463619808 671772342 191702667 36655", "2896 353703372 259281716 243285872 68328647 152138", "832 605232617 996300409 211973602 111500934 836539", "291 941270443 2306522 511579321 624394187 50448266", "6 863620484 730098461 569952712 547616178 18207275", "3 180888703 711989451 651688916 253155428 53073655", "4 81325119 398818034 846872713 605613812 590520700", " 213425609 811833535 849802415 456711480 732678533", " 1941246 914460448 581495293 66431199 25961382 418", "034583 7701641 880784255 782130256 484612179"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 74403916;
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    vector<string> S = {"645750739 214710639 807735984 45883269 249299743 9", "88624686 757872719 900988659 94296465 141125625 83", "4830129 493114498 987998337 292960292 83635197 539", "40297 104793826 785953963 363168128 689988711 7878", "95208 277628576 271484003 854326406 156106309 5420", "34938 714544399 36890563 324165193 51672929 127190", "187 822432283 266383568 934926170 868315551 515683", "310 776067207 478704622 269188320 722880023 619830", "246 956534800 68510872 460344934 102011443 4662420", " 366801583 59321621 790616382 729969710 749310331 ", "431027941 7598285 20794333 137870698 16220945 4153", "45622 852415096 905627860 739510814 904088025 3281", "8046 414459449 22987944 820260567 282774999 391187", "605 448844125 761479620 660375925 171724147 233826", "217"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 419724058;
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    vector<string> S = {"240235018 546687503 571438519 244897437 913489085 ", "630760139 35513818 643458794 380070469 319058110 5", "03573431 253381153 456928807 372310727 668726775 1", "61860255 277938586 260753940 65948279 163272983 67", "5213388 941452574 983533549 810504739 332640178 43", "2377673 424500710 845532454 456618171 658326927 31", "4959530 696853188 57530781 886398048 794266976 971", "019865 369674538 682297145 466995010 749745006 135", "5254 970568440 855642510 458284061 195395519 37688", "5636 620144315 473334104 637639576 538608945 63660", "7087 165369315 332577870 472656987 975874053 66521", "8047 905034660 252891115 363266853 214169182 91121", "8041 678226382 911022370 968748821 417140781 55780", "5697 792285037 786815318 240102842 259280046 38907", "6675 93974447 82364838 97235536 552258507 27776035", "6"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 462534844;
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    vector<string> S = {"24919173 603610811 111760747 416044469 92734249 12", "9646413 748622338 565391236 958036818 266356737 32", "2942247 210927932 629623589 537111428 974662324 16", "0366322 300650149 795927496 577507102 858455846 58", "8212532 216838771 98558687 700008929 458431797 450", "49485 782373766 555667332 597307992 912650473 2978", "8503 474743516 516261284 994065601 890787985 60899", "5532 123712014 639410322 26903119 934265183 905767", "058 349845365 145193114 387906998 886956793 972371", "789 548273319 187606941 768299284 125780420 460627", "86 209028167 195135542 997137824 909037095 6535673", "38 42187309 543927213 61751022 492011652 309094037", " 91539524 966755167 825355320 85605125 710059503 2", "86867204 61833490 201986177 313770322 848615024 10", "7753234 663615687 846324489 348176584 403088831 81", "8696277 896449902 590695771 439511912 874746674 48", "9274909 501056430 69882215 338929084 262609876 575", "965905 233632744 806537088 637716926 578160747 115", "631125 581772801 397432266 793502796 519894277 107", "491768 932886351 434244118 309477944 99173025 2828", "59141 269747530 762788711 129183629 617924113 1839", "3893 800396257 366890366 609089663 92424520 241637", "039 950880923 593480949 164035606 142326359 856090", "825 592517862 375959102 515144264 82751139 9541198", "49 483291740 664523939 204068466 129310888 1844182", "16 311560233 62197238 618662333 473554529 13886614", " 754037826 743302058 776675324 735737806 213742522", " 795069216 388650415 580632887 256675231 481074934", " 674786278 60072505 927072235 838821883 202398863 ", "635679411 283856096 578357965 3340026 366607234 38", "4994165 486631766 31131172 589062630 468459005 680", "65739 753139214 383172594 686728072 226693742 3970", "59208 293282249 822512151 26250883 29020054 362546", "72 821320099 417670468 469403911 930511681"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 744900954;
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    vector<string> S = {"144190188 990584185 678333988 835528422 192983048 ", "166529750 119384517 623857364 169869775 338508102 ", "8851528 656501540 369639273 450430509 124960544 43", "7705012 56086074 360649490 976949435 282779816 757", "708697 270231683 105291966 783959579 151768088 994", "062990 457796029 569438556 315983252 388307709 173", "216661 312689791 231408246 851550648 734564 424391", "293 18080397 972635432 48248656 40466523 311143533", " 909616535 696968063 533299157 212563395 674444958", " 971004168 268649468 35094447 800469954 403945635 ", "645319495 70701636 361753953 429279074 74986076 20", "8333294 887075102 644424631 524316545 127899163 81", "7641291 689522687 359307408 521708290 690257250 63", "6215052 392305038 515409033 536980059 432771560 82", "6552565 299112945 982255974 212368073 511676339 50", "9217284 35888593 632842158 396828082 836358546 367", "87793 42147577 759576534 398541745 323943002 83456", "2609 606875038 63534455 331503591 983707934 191433", "617 1661233 673230620 403257376 523369522 21600422", "1 39472427 768190911 731413253 576452485 53478822 ", "410482169 875565429 35734796 622850241 239758119 5", "44952079 658738833 872600277 941780160 347613731 7", "61904421 836444088 107190264 12962517 160387089 94", "1752872 619837554 223921544 125772814 456061839 26", "7871512 127434046 129292458 671128888 650803567 19", "7813030 710601314 271510829 781742634 139570151 32", "4989650 44741154 867651931 360724445 667591394 107", "410050 758192875 178846579 832526678 552489387 526", "460309 446947450 388933474 486166924 459909966 401", "836915 280436147 79747519 625758458 406208960 3883", "25709 893629969"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 557945116;
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    vector<string> S = {"370134518 417275208 36962923 567947547 127876522"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 762154358;
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    vector<string> S = {"3 ", "14159 265", "3589 7", " 932"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 353127147;
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    vector<string> S = {"5000000 10000000 15000000 20000000 25000000 300000", "00 35000000 40000000 45000000 50000000 55000000 60", "000000 65000000 70000000 75000000 80000000 8500000", "0 90000000 95000000 100000000 105000000 110000000 ", "115000000 120000000 125000000 130000000 135000000 ", "140000000 145000000 150000000 155000000 160000000 ", "165000000 170000000 175000000 180000000 185000000 ", "190000000 195000000 200000000 205000000 210000000 ", "215000000 220000000 225000000 230000000 235000000 ", "240000000 245000000 250000000 255000000 260000000 ", "265000000 270000000 275000000 280000000 285000000 ", "290000000 295000000 300000000 305000000 310000000 ", "315000000 320000000 325000000 330000000 335000000 ", "340000000 345000000 350000000 355000000 360000000 ", "365000000 370000000 375000000 380000000 385000000 ", "390000000 395000000 400000000 405000000 410000000 ", "415000000 420000000 425000000 430000000 435000000 ", "440000000 445000000 450000000 455000000 460000000 ", "465000000 470000000 475000000 480000000 485000000 ", "490000000 495000000 500000000 505000000 510000000 ", "515000000 520000000 525000000 530000000 535000000 ", "540000000 545000000 550000000 555000000 560000000 ", "565000000 570000000 575000000 580000000 585000000 ", "590000000 595000000 600000000 605000000 610000000 ", "615000000 620000000 625000000 630000000 635000000 ", "640000000 645000000 650000000 655000000 660000000 ", "665000000 670000000 675000000 680000000 685000000 ", "690000000 695000000 700000000 705000000 710000000 ", "715000000 720000000 725000000 730000000 735000000 ", "740000000 745000000 750000000 755000000 760000000 ", "765000000 770000000 775000000 780000000 785000000 ", "790000000 795000000 800000000 805000000 810000000 ", "815000000 820000000 825000000 830000000 835000000 ", "840000000 845000000 850000000 855000000 860000000 ", "865000000 870000000 875000000 880000000 885000000 ", "890000000 895000000 900000000 905000000 910000000 ", "915000000 920000000 925000000 930000000 935000000 ", "940000000 945000000 950000000 955000000 960000000 ", "965000000 970000000 975000000 980000000 985000000 ", "990000000 995000000 1000000000"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 79150576;
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    vector<string> S = {"3 ", "14159 265", "3589 7", " 932", " 3 ", "14159 265", "3589 7", " 932", " 3 ", "14159 265", "3589 7", " 932", " 3 ", "14159 265", "3589 7", " 932", " 3 ", "14159 265", "3589 7", " 932", " 3 ", "14159 265", "3589 7", " 932", " 3 ", "14159 265", "3589 7", " 932", " 3 ", "14159 265", "3589 7", " 932", " 3 ", "14159 265", "3589 7", " 932", " 3 ", "14159 265", "3589 7", " 932"};
    PickAndDelete* pObj = new PickAndDelete();
    clock_t start = clock();
    int result = pObj->count(S);
    clock_t end = clock();
    delete pObj;
    int expected = 355058443;
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=19849563&rd=14537&pm=11290
********************************************************************************
#include <vector> 
#include <list> 
#include <map> 
#include <set> 
#include <deque> 
#include <queue> 
#include <stack> 
#include <bitset> 
#include <algorithm> 
#include <functional> 
#include <numeric> 
#include <utility> 
#include <sstream> 
#include <iostream> 
#include <iomanip> 
#include <cstdio> 
#include <cmath> 
#include <cstdlib> 
#include <cctype> 
#include <string> 
#include <cstring> 
#include <cstdio> 
#include <cmath> 
#include <cstdlib> 
#include <ctime> 
 
using namespace std; 
 
#define SIZE(X) ((int)(X.size())) 
typedef long long int64; 
 
const int MOD=1000000007; 
 
class PickAndDelete 
{ 
public: 
  int n,a[250],c[250]; 
  int f[250][250],C[250][250]; 
  int add(int a,int b) 
  { 
    a+=b; 
    if (a>=MOD) a-=MOD; 
    return a; 
  } 
  void addto(int &a,int b) 
  { 
    a+=b; 
    if (a>=MOD) a-=MOD; 
  } 
  int multiply(int a,int b) 
  { 
    return (int)((int64)a*b%MOD); 
  } 
  int power(int p,int e) 
  { 
    if (e==0) return 1; 
    return (e&1)?multiply(power(p,e-1),p):power(multiply(p,p),e/2); 
  } 
  int count(vector<string> S) 
  { 
    memset(C,0,sizeof(C)); 
    for (int i=0;i<250;i++) for (int j=0;j<=i;j++) C[i][j]=(j==0)?1:add(C[i-1][j-1],C[i-1][j]); 
    string str=""; 
    for (int i=0;i<SIZE(S);i++) str+=S[i]; 
    istringstream sin(str); 
    n=0; 
    for (;sin>>a[n];n++); 
    sort(a,a+n); 
    int m=0; 
    for (int i=0;i<n;i++) 
      if (m==0 || a[m-1]!=a[i]) 
        a[m]=a[i],c[m++]=1; 
      else 
        c[m-1]++; 
    n=m; 
    int d=0; 
    for (int i=0;i<n;i++) d+=c[i]; 
    memset(f,0,sizeof(f)); 
    f[0][0]=1; 
    for (int i=0;i<n;i++)  
    { 
      int s=0; 
      for (int j=0;j<=i;j++) s+=c[j]; 
      for (int j=0;j<=d;j++) if (f[i][j]) 
      { 
        int p=a[i]-((i==0)?0:a[i-1]),t=1; 
        for (int k=0;j+k<=d;k++)  
        { 
          if (j+k>=s) addto(f[i+1][j+k],multiply(C[j+k][k],multiply(f[i][j],t))); 
          t=multiply(t,p); 
        } 
      } 
    } 
    return f[n][d]; 
  } 
};

********************************************************************************
*******************************************************************************/