/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=10055
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class CactusAutomorphisms {
public:
    int count(int n, vector<string> edges);
};

int CactusAutomorphisms::count(int n, vector<string> edges) {
    int ret;
    return ret;
}


int test0() {
    int n = 4;
    vector<string> edges = {"1 2,1 3,1 4"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    int n = 4;
    vector<string> edges = {"1 2,2 3,3 4,4 1"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    int n = 6;
    vector<string> edges = {"1 2,2 3,3 1,4 5,5 6,6 4,1 4"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    int n = 18;
    vector<string> edges = {"1 2,2 3,3 4,2 4,1 5,1 10,5 10,5 6,6 7", ",7 8,7 16,7 17,7 9,6 9,10 18,18 ", "12,12 11,11 18,12 13,12 14,12 15"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 144;
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    int n = 1;
    vector<string> edges = {};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    int n = 200;
    vector<string> edges = {"1 2,2 3,3 4,4 5,5 6,6 7,7 8,8 9,9 10,10 11,11 2,1 ", "12,12 13,13 14,14 15,15 16,16 17,17 18,18 19,19 20", ",20 21,21 12,1 22,22 23,23 24,24 25,25 26,26 27,27", " 28,28 29,29 30,30 31,31 22,1 32,32 33,32 34,34 35", ",35 36,36 32,1 37,37 38,37 39,39 40,40 41,41 37,1 ", "42,42 43,42 44,44 45,45 46,46 42,1 47,47 48,47 49,", "49 50,50 51,51 47,1 52,52 53,52 54,54 55,55 56,56 ", "52,1 57,57 58,57 59,59 60,60 61,61 57,1 62,62 63,6", "2 64,64 65,65 66,66 62,1 67,67 68,67 69,69 70,70 7", "1,71 67,1 72,72 73,72 74,74 75,75 76,76 72,1 77,77", " 78,78 79,79 80,80 81,81 77,1 82,82 83,83 84,84 85", ",85 86,86 82,1 87,87 88,88 89,89 90,90 91,91 87,1 ", "92,92 93,93 94,94 95,95 96,96 92,1 97,97 98,98 99,", "99 100,100 101,101 97,1 102,102 103,103 104,104 10", "5,105 106,106 102,1 107,107 108,108 109,109 110,11", "0 111,111 107,1 112,112 113,113 114,114 115,115 11", "6,116 112,1 117,117 118,118 119,119 120,120 121,12", "1 117,1 122,122 123,123 124,124 125,125 126,126 12", "2,1 127,127 128,128 129,129 130,130 131,131 127,1 ", "132,132 133,133 134,134 135,135 136,136 132,1 137,", "137 138,138 139,139 140,140 141,141 137,1 142,142 ", "143,142 144,142 145,1 146,146 147,146 148,146 149,", "1 150,150 151,150 152,150 153,1 154,154 155,154 15", "6,154 157,1 158,158 159,158 160,158 161,1 162,162 ", "163,162 164,162 165,1 166,166 167,167 168,166 169,", "166 170,166 171,166 172,1 173,173 174,174 175,173 ", "176,173 177,173 178,173 179,1 180,180 181,181 182,", "180 183,180 184,180 185,180 186,1 187,187 188,188 ", "189,187 190,187 191,187 192,187 193,1 194,194 195,", "195 196,194 197,194 198,194 199,194 200"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 886565533;
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    int n = 200;
    vector<string> edges = {"46 8,84 120,2 102,191 93,131 160,32 15,108 56,42 1", "01,146 34,114 157,195 110,36 38,90 194,110 85,143 ", "130,32 69,9 59,120 105,100 108,179 84,21 7,147 61,", "64 29,108 157,150 37,109 110,108 30,65 189,119 199", ",159 23,103 139,117 55,1 177,84 21,149 90,189 102,", "85 142,159 84,25 19,50 179,163 64,153 84,6 154,153", " 152,189 51,118 123,90 97,54 103,119 198,119 118,1", "16 127,115 33,76 48,91 159,84 61,181 61,74 12,135 ", "159,133 61,136 83,29 84,179 168,122 119,77 200,8 1", "20,68 177,167 108,29 148,110 84,124 120,75 169,162", " 83,200 84,25 183,11 57,180 146,67 153,84 177,200 ", "117,158 19,88 153,106 95,21 173,104 68,90 112,22 1", "96,43 49,119 3,182 32,84 119,197 170,29 49,101 29,", "31 184,82 61,84 108,37 146,94 61,110 111,171 174,1", "51 29,83 132,84 189,84 103,126 83,166 72,41 73,110", " 6,191 189,103 188,146 84,108 22,83 107,159 106,81", " 32,129 108,200 62,122 28,156 62,120 174,27 153,19", "3 177,89 146,65 5,134 189,200 40,35 159,120 116,80", " 47,10 98,52 121,103 140,198 16,120 96,4 109,60 17", "7,119 47,200 160,21 172,169 200,146 74,146 18,155 ", "153,179 192,177 11,165 177,52 119,179 86,78 165,48", " 29,146 26,96 176,185 77,143 110,189 36,159 41,19 ", "10,34 92,175 35,84 32,187 195,113 32,83 84,144 21,", "66 159,19 20,84 19,110 137,72 19,70 20,90 99,90 87", ",61 24,21 125,83 13,29 31,19 58,120 170,178 179,90", " 84,103 138,59 19,186 100,103 39,44 51,164 129,189", " 71,56 145,32 63,79 89,45 18,60 53,135 128,179 161", ",177 115,21 17,200 14,153 190,141 23"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 872246353;
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    int n = 200;
    vector<string> edges = {"46 8,84 120,2 102,191 93,131 160,32 15,108 56,42 1", "01,146 34,114 157,195 110,36 38,90 194,110 85,143 ", "130,32 69,9 59,120 105,100 108,179 84,21 7,147 61,", "64 29,108 157,150 37,109 110,108 30,65 189,119 199", ",159 23,103 139,117 55,1 177,84 21,149 90,189 102,", "85 142,159 84,25 19,50 179,163 64,153 84,6 154,153", " 152,189 51,118 123,90 97,54 103,119 198,119 118,1", "16 127,115 33,76 48,91 159,84 61,181 61,74 12,135 ", "159,133 61,136 83,29 84,179 168,122 119,77 200,8 1", "20,68 177,167 108,29 148,110 84,124 120,75 169,162", " 83,200 84,25 183,11 57,180 146,67 153,84 177,200 ", "117,158 19,88 153,106 95,21 173,104 68,90 112,22 1", "96,43 49,119 3,182 32,84 119,197 170,29 49,101 29,", "31 184,82 61,84 108,37 146,94 61,110 111,171 174,1", "51 29,83 132,84 189,84 103,126 83,166 72,41 73,110", " 6,191 189,103 188,146 84,108 22,83 107,159 106,81", " 32,129 108,200 62,122 28,156 62,120 174,27 153,19", "3 177,89 146,65 5,134 189,200 40,35 159,120 116,80", " 47,10 98,52 121,103 140,198 16,120 96,4 109,60 17", "7,119 47,200 160,21 172,169 200,146 74,146 18,155 ", "153,179 192,177 11,165 177,52 119,179 86,78 165,48", " 29,146 26,96 176,185 77,143 110,189 36,159 41,19 ", "10,34 92,175 35,84 32,187 195,113 32,83 84,144 21,", "66 159,19 20,84 19,110 137,72 19,70 20,90 99,90 87", ",61 24,21 125,83 13,29 31,19 58,120 170,178 179,90", " 84,103 138,59 19,186 100,103 39,44 51,164 129,189", " 71,56 145,32 63,79 89,45 18,60 53,135 128,179 161", ",177 115,21 17,200 14,153 190,141 23"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 872246353;
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    int n = 200;
    vector<string> edges = {"192 103,95 103,161 103,103 195,134 103,3 103,28 10", "3,169 103,120 103,119 103,123 103,150 103,103 155,", "143 103,66 103,103 24,27 103,106 103,156 103,103 1", "63,103 141,53 103,103 54,103 20,64 103,121 103,103", " 87,103 179,40 103,103 165,103 21,103 167,103 108,", "103 135,103 173,154 103,103 147,103 180,103 148,10", "3 96,7 103,103 181,103 14,103 145,103 6,103 2,175 ", "103,132 103,103 126,103 90,11 103,103 170,103 99,1", "03 81,100 103,35 103,103 1,103 25,183 103,103 151,", "101 103,103 45,191 103,86 103,109 103,103 89,103 1", "66,103 118,158 103,103 93,103 44,107 103,77 103,10", "3 184,113 103,103 91,103 57,178 103,103 60,103 74,", "13 103,103 9,47 103,103 31,103 127,94 103,103 30,1", "03 200,136 103,122 103,103 105,98 103,103 80,29 10", "3,103 88,103 194,103 102,103 160,117 103,8 103,182", " 103,71 103,69 103,103 51,49 103,157 103,76 103,39", " 103,103 144,103 112,75 103,103 186,103 85,17 103,", "116 103,103 83,19 103,103 52,103 172,152 103,199 1", "03,50 103,103 190,188 103,103 16,65 103,103 5,103 ", "48,103 42,97 103,72 103,125 103,46 103,36 103,103 ", "82,41 103,103 61,103 26,103 164,115 103,140 103,10", "3 114,103 56,103 146,103 4,32 103,168 103,103 22,1", "03 68,55 103,103 153,103 131,103 128,139 103,103 1", "87,129 103,130 103,103 176,103 33,79 103,34 103,59", " 103,193 103,103 84,43 103,103 38,103 174,124 103,", "185 103,103 137,15 103,18 103,196 103,162 103,103 ", "138,197 103,103 78,149 103,103 198,103 177,104 103", ",103 142,103 133,189 103,23 103,103 70,110 103,103", " 12,103 67,58 103,171 103,103 37,103 63,103 92,73 ", "103,111 103,159 103,62 103,10 103"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 583631762;
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    int n = 200;
    vector<string> edges = {"147 200,187 40,158 56,15 188,148 185,155 98,153 69", ",120 91,15 177,60 59,94 169,103 122,171 126,112 27", ",93 149,178 85,14 19,41 116,56 5,114 61,19 110,110", " 28,165 105,182 160,179 100,110 188,60 7,23 177,51", " 162,46 52,18 184,100 138,22 188,154 33,4 124,29 2", "1,150 7,56 110,127 120,91 141,35 191,72 37,110 4,9", "2 89,106 151,83 84,110 92,92 44,33 73,175 84,118 1", "48,195 11,55 98,165 65,15 121,134 186,6 136,143 10", "1,29 100,118 133,137 93,14 197,148 46,135 13,109 1", "60,98 76,92 66,188 3,29 85,123 14,110 109,142 40,8", "2 93,172 28,10 126,83 57,31 68,78 133,117 110,115 ", "180,110 46,193 71,145 175,180 99,51 91,75 13,70 2,", "1 20,177 22,172 34,187 104,90 149,161 138,79 106,9", "7 83,67 200,149 110,110 103,146 87,183 7,172 77,18", "6 109,167 65,81 113,110 9,27 146,12 119,112 42,62 ", "41,113 149,97 131,137 139,71 30,7 110,158 54,110 1", "12,166 35,110 67,170 150,55 47,165 110,198 37,91 1", "10,95 94,194 20,77 64,118 140,110 126,130 22,17 13", ",116 53,198 50,141 152,5 181,194 74,55 176,25 6,17", "5 97,125 35,111 146,61 71,166 4,199 64,46 133,129 ", "84,101 37,87 112,74 110,77 163,24 192,159 169,191 ", "4,164 27,180 110,173 49,6 63,39 116,65 187,29 110,", "94 110,74 12,189 73,75 110,196 28,180 49,180 107,8", "6 116,47 108,192 2,110 33,155 47,184 117,12 20,138", " 85,16 94,25 110,11 198,194 45,157 155,80 88,55 11", "0,110 37,94 36,9 106,96 191,110 83,58 30,128 192,1", "16 110,113 137,40 165,92 144,126 69,61 103,200 43,", "192 110,38 154,126 32,56 26,74 174,168 192,80 109,", "68 33,102 184,87 48,26 156,11 101,28 64,190 183,10", "3 30,166 8,44 132"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 636027837;
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    int n = 200;
    vector<string> edges = {"94 74,58 74,152 74,74 123,74 139,3 74,74 194,74 49", ",19 74,74 62,74 156,40 74,65 74,74 129,74 52,108 7", "4,90 74,74 146,2 74,74 71,101 74,74 7,74 191,38 74", ",74 189,74 106,132 74,121 74,74 36,74 13,192 74,74", " 47,37 74,142 74,74 133,128 74,148 74,74 193,74 13", "5,105 74,161 74,200 74,198 74,74 110,22 74,138 74,", "25 74,85 74,74 16,166 74,74 170,112 74,74 168,74 1", "87,109 74,74 5,111 74,74 4,29 74,116 74,51 74,74 1", "69,136 74,74 83,74 8,74 196,74 60,74 153,93 74,175", " 74,74 78,179 74,74 32,124 74,74 96,74 66,1 74,74 ", "44,11 74,74 84,74 26,74 104,164 74,74 163,74 17,74", " 21,74 102,76 74,186 74,74 103,107 74,74 95,74 59,", "61 74,86 74,74 145,74 46,74 45,74 35,74 125,74 31,", "81 74,157 74,74 184,74 15,74 14,160 74,74 57,74 98", ",74 24,74 185,127 74,74 99,165 74,171 74,74 89,28 ", "74,74 162,33 74,74 48,74 114,181 74,74 67,74 12,50", " 74,173 74,54 74,74 188,74 100,10 74,74 150,74 20,", "87 74,149 74,74 91,80 74,120 74,43 74,70 74,74 141", ",53 74,74 155,74 144,182 74,74 34,113 74,74 117,79", " 74,74 143,74 130,154 74,74 18,74 158,118 74,74 18", "3,159 74,74 190,74 82,74 6,151 74,74 197,74 30,74 ", "88,74 63,74 55,73 74,74 140,74 115,134 74,74 122,7", "4 131,147 74,74 92,75 74,176 74,74 72,27 74,74 180", ",39 74,74 68,74 69,74 42,74 64,56 74,74 97,172 74,", "199 74,174 74,74 167,137 74,177 74,23 74,74 119,74", " 77,41 74,178 74,126 74,74 195,74 9"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 583631762;
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    int n = 200;
    vector<string> edges = {"129 194,22 197,105 52,55 193,1 30,74 101,180 121,1", "13 92,84 78,63 104,118 166,131 108,175 188,63 29,1", "50 73,184 192,147 6,23 87,37 44,177 39,41 104,108 ", "5,187 178,157 45,103 105,99 63,75 63,100 161,61 63", ",140 78,154 126,7 162,125 121,195 63,3 122,107 152", ",149 61,63 106,29 139,37 184,62 118,46 14,122 151,", "167 198,56 76,69 71,141 75,179 20,14 180,160 61,96", " 60,194 162,156 98,55 159,106 170,177 115,174 61,8", "8 8,126 119,181 63,140 42,51 20,128 110,63 191,92 ", "144,137 4,68 15,185 98,145 138,140 109,130 110,72 ", "135,63 31,85 140,44 123,26 163,120 53,58 190,83 87", ",114 7,168 81,62 63,164 29,25 48,102 115,63 105,63", " 122,36 16,117 142,17 200,178 64,45 41,111 12,12 1", "43,63 115,48 61,163 128,51 21,36 165,136 30,29 10,", "136 189,67 74,104 95,1 34,31 60,19 4,72 174,85 112", ",195 176,167 43,152 40,55 199,106 8,19 106,186 154", ",199 161,136 131,63 12,165 191,143 54,183 26,38 18", "6,55 63,128 99,176 97,77 118,16 11,186 63,132 80,1", "16 2,13 3,9 89,49 155,147 92,63 125,192 93,50 181,", "66 55,91 113,102 155,56 166,111 82,58 103,13 27,91", " 148,127 18,65 127,107 141,171 181,35 115,90 63,53", " 165,142 77,94 186,7 73,156 181,153 170,15 134,101", " 195,60 64,63 140,158 172,169 6,81 195,10 71,79 50", ",159 132,121 18,33 21,43 29,95 32,24 20,12 188,86 ", "112,182 105,2 122,83 105,68 141,120 59,179 63,96 1", "58,114 146,196 84,133 25,145 38,130 124,7 63,70 35", ",184 63,17 104,189 63,9 24,63 144,186 173,54 28,18", "4 197,47 151,57 171"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 106389627;
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    int n = 200;
    vector<string> edges = {"190 16,1 128,196 61,142 183,98 147,9 25,189 41,163", " 47,70 133,47 81,109 189,178 117,81 136,47 104,55 ", "56,1 93,55 5,105 9,151 47,185 188,142 124,47 75,81", " 78,103 1,96 137,65 47,168 182,120 172,3 151,19 18", "2,142 191,35 62,101 80,141 8,150 129,56 116,151 18", "1,9 53,132 129,185 167,4 62,156 182,22 165,13 199,", "125 114,179 74,159 22,190 141,47 124,47 54,180 75,", "47 118,81 200,83 104,10 156,56 144,96 1,81 40,193 ", "129,187 151,47 13,109 71,42 146,81 153,83 134,102 ", "164,79 56,42 38,189 157,43 140,163 49,80 1,197 75,", "47 42,39 136,90 129,74 47,129 48,2 12,163 85,161 8", "3,189 111,45 13,151 72,123 183,24 1,47 147,81 171,", "63 151,83 113,15 75,189 31,57 13,60 56,36 176,87 1", "85,46 38,42 186,176 92,86 142,163 67,37 75,173 73,", "47 94,147 130,142 107,58 56,182 94,21 187,18 190,1", "52 142,112 132,140 148,192 60,145 13,129 50,9 68,1", "06 74,11 1,76 56,20 2,9 47,17 56,139 83,131 83,97 ", "190,42 84,30 190,54 1,42 115,89 198,182 69,173 47,", "100 83,176 47,22 47,47 140,33 189,88 190,190 77,13", "8 1,190 198,110 14,74 162,31 47,9 169,121 14,69 26", ",51 189,147 170,140 195,155 142,189 91,142 117,163", " 135,149 182,182 66,120 83,47 133,125 47,14 47,164", " 108,42 143,164 99,147 95,64 90,2 174,177 126,62 1", "27,7 74,52 129,175 185,122 125,61 32,47 62,41 44,4", "7 17,9 126,47 164,61 47,82 173,166 140,151 6,158 1", "33,118 190,34 176,182 28,27 56,2 47,160 189,65 129", ",185 47,154 182,83 184,173 23,142 119,139 194,29 1", "29,14 59"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 449464593;
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    int n = 200;
    vector<string> edges = {"53 83,109 179,124 10,139 188,178 179,9 78,145 108,", "5 83,40 70,66 118,128 78,20 68,5 50,40 146,65 134,", "157 153,177 40,150 182,183 99,36 44,114 112,105 19", "3,179 87,193 158,101 145,110 198,106 60,40 38,123 ", "83,144 57,179 83,171 144,41 187,144 160,83 16,43 1", "45,19 5,136 156,83 118,83 10,16 102,72 5,110 53,17", "2 163,10 126,60 167,195 20,174 85,194 128,27 16,75", " 121,30 128,170 89,56 121,185 60,40 83,174 121,97 ", "145,139 11,169 163,53 154,183 83,12 139,103 10,164", " 171,192 186,92 38,62 32,7 183,44 53,121 157,118 1", "31,138 78,118 111,62 104,95 139,161 10,151 84,1 11", "7,59 136,78 159,162 53,110 196,113 145,18 16,83 78", ",139 83,31 58,89 60,99 119,118 191,121 93,60 33,42", " 16,186 129,22 84,61 57,16 125,184 159,118 116,155", " 21,39 26,140 82,169 120,193 77,60 6,40 62,186 122", ",186 190,5 82,137 154,35 167,146 71,187 13,72 2,14", "5 8,96 183,84 5,149 10,98 64,167 24,53 152,83 121,", "183 31,7 46,123 51,118 86,33 79,114 139,5 150,74 1", "54,39 100,186 83,56 25,145 83,94 179,99 3,123 142,", "193 199,9 55,33 115,54 117,37 179,29 28,26 47,135 ", "26,88 26,96 133,28 26,17 193,169 155,34 185,60 83,", "168 10,63 173,193 83,147 39,189 76,169 83,144 136,", "69 11,7 67,45 183,65 169,20 121,76 49,78 141,78 63", ",132 123,23 123,53 148,123 197,63 143,130 65,186 1", "81,11 175,127 148,169 176,26 76,183 73,15 82,123 2", "00,155 52,144 166,179 91,90 186,64 169,187 139,188", " 48,80 38,144 83,4 157,165 180,40 165,193 107,26 8", "3,16 14,88 81,117 144"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 629466634;
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    int n = 200;
    vector<string> edges = {"85 156,65 103,195 82,88 191,195 173,80 54,72 71,15", "8 150,130 33,98 45,136 172,111 43,116 33,150 95,10", "2 123,67 80,158 196,172 176,46 147,72 161,167 33,1", "18 147,63 39,73 199,31 147,124 195,24 45,192 134,1", "42 138,15 172,160 47,159 14,165 60,169 142,187 128", ",131 147,19 84,61 146,144 158,172 126,123 176,9 72", ",59 34,146 180,150 114,115 33,146 105,158 169,58 1", "46,190 169,99 142,108 45,57 150,52 135,128 90,5 14", "7,120 175,158 96,14 72,67 171,63 115,166 83,113 41", ",189 33,176 168,128 185,77 117,33 182,75 95,58 156", ",106 158,19 146,195 16,33 79,6 72,178 172,102 194,", "128 58,95 3,195 7,172 184,74 124,129 33,128 18,163", " 49,25 90,52 127,100 158,94 192,169 153,51 198,177", " 198,164 52,78 195,192 150,65 8,20 143,178 120,148", " 124,42 192,86 161,33 110,32 156,80 169,156 76,174", " 150,200 115,47 17,156 15,150 195,168 48,146 137,2", "2 150,195 132,21 147,115 10,104 95,179 41,195 152,", "176 70,183 56,147 45,20 72,52 133,111 26,46 92,158", " 13,27 121,139 34,72 147,97 74,36 29,124 34,124 11", "5,172 199,80 176,73 81,122 144,1 156,52 112,38 146", ",146 30,128 27,72 128,170 9,36 115,45 186,176 8,16", "9 160,69 98,53 178,168 62,2 128,156 151,111 80,33 ", "45,156 64,165 128,98 23,155 136,128 56,166 156,181", " 156,172 125,193 150,158 68,4 45,89 65,195 197,162", " 100,149 195,188 199,41 70,88 124,87 64,141 74,198", " 169,93 146,158 77,52 28,54 163,192 66,107 195,88 ", "157,45 44,50 99,119 33,101 158,33 55,12 67,52 15,4", "0 102,195 145,150 35,37 33,11 146,50 138,154 10,95", " 109,140 148,91 52"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 179120215;
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    int n = 200;
    vector<string> edges = {"60 191,160 81,15 153,107 50,187 57,124 65,182 150,", "128 63,183 9,89 110,9 50,10 105,46 9,125 47,37 136", ",73 55,49 117,121 71,53 50,69 26,9 155,9 118,46 19", "3,131 162,42 173,11 118,23 155,41 32,182 9,49 113,", "61 195,69 54,38 118,165 64,97 62,44 9,197 123,30 4", "9,126 46,46 40,9 185,145 152,183 75,195 178,41 79,", "60 9,25 169,78 124,20 193,167 86,56 119,147 170,11", "5 85,49 34,85 66,49 130,94 156,137 146,25 9,23 108", ",4 6,81 175,116 185,57 182,17 101,105 136,9 181,9 ", "136,16 28,158 62,49 21,147 200,41 9,27 9,7 93,62 1", "96,101 104,128 14,55 143,31 78,123 80,86 12,62 18,", "198 9,22 97,31 77,50 59,33 101,120 41,9 71,199 27,", "168 29,9 195,195 98,112 134,67 85,9 86,111 162,29 ", "43,5 151,101 9,6 163,110 103,7 154,88 134,176 192,", "9 110,188 189,94 52,156 72,86 42,45 46,58 150,85 2", "4,85 92,125 48,9 153,161 134,7 9,162 9,109 86,9 29", ",6 9,121 51,68 185,155 56,147 194,166 151,25 179,1", "62 90,146 9,141 6,69 106,134 9,159 136,110 91,145 ", "101,74 146,154 132,76 25,172 44,87 157,198 190,85 ", "9,166 189,174 75,78 9,29 186,192 160,60 133,149 85", ",181 148,164 153,94 9,95 35,85 157,135 117,13 164,", "94 36,160 9,129 24,100 198,118 83,7 114,184 125,9 ", "69,15 19,55 9,7 102,9 123,147 9,70 101,9 125,49 9,", "8 140,185 180,142 148,136 1,2 27,71 28,128 9,44 17", "1,82 55,127 34,101 122,198 177,166 9,35 101,60 84,", "96 128,39 146,138 49,144 94,165 181,123 139,9 62,9", "9 27,183 8,44 3"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 544842783;
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    int n = 200;
    vector<string> edges = {"114 160,160 72,138 178,140 68,42 108,49 168,66 26,", "160 129,20 78,86 175,25 160,167 21,19 77,74 22,37 ", "24,80 104,139 199,53 167,194 52,57 15,110 182,79 5", "2,175 170,160 37,173 160,156 118,112 35,160 88,186", " 23,154 8,115 175,46 120,17 133,49 67,150 191,61 3", "7,57 143,16 70,121 53,188 183,160 65,96 160,1 161,", "156 35,38 48,190 136,27 108,111 2,67 198,23 93,171", " 111,162 160,127 181,137 183,96 163,111 130,160 17", "5,131 38,160 46,158 167,36 192,51 45,3 177,181 147", ",160 147,74 138,197 111,84 31,110 13,160 110,168 1", "06,33 102,41 164,177 140,160 150,71 57,84 160,105 ", "96,12 160,25 99,158 117,82 90,36 53,184 40,137 173", ",156 160,131 9,147 41,111 160,144 60,28 186,113 13", "7,149 151,88 22,152 33,16 77,187 57,68 7,45 100,16", "2 185,12 98,168 154,77 114,146 160,173 95,124 17,1", "25 138,179 70,36 62,134 140,5 10,107 160,6 166,26 ", "160,57 160,11 143,17 160,107 81,76 160,10 70,54 19", "3,123 190,4 156,52 18,149 196,72 89,95 91,172 175,", "90 160,49 160,150 142,114 10,164 34,29 102,110 126", ",127 97,96 128,160 80,140 160,108 160,58 1,153 186", ",132 9,59 190,64 156,158 62,6 199,103 181,95 73,19", "0 101,102 109,160 45,149 23,47 135,32 119,160 131,", "45 63,14 108,183 73,13 85,62 160,57 189,67 60,69 9", "0,55 110,88 178,94 150,155 196,156 180,164 127,107", " 122,135 195,160 190,200 150,109 174,160 153,75 13", "1,165 43,141 146,30 65,22 145,40 160,160 166,148 1", "57,160 43,161 129,17 39,92 69,104 119,41 116,108 1", "76,74 50,60 154,102 160,160 157,90 193,160 52,73 8", "7,159 37,16 56,83 107,20 190,47 76,44 110,196 153,", "169 178"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 799034915;
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    int n = 200;
    vector<string> edges = {"8 14,69 130,34 105,53 26,191 79,196 27,39 167,20 5", "7,77 59,58 105,172 127,48 6,47 198,54 77,81 200,12", "3 55,77 164,184 54,124 160,127 22,77 75,77 160,78 ", "129,165 173,77 105,62 130,53 96,132 107,30 132,125", " 59,79 77,164 180,77 165,16 93,27 144,57 77,81 24,", "198 77,79 102,68 85,146 16,71 78,175 116,178 171,1", "85 140,100 181,91 145,141 100,74 95,130 43,60 59,5", "4 50,75 137,81 77,179 190,167 101,152 188,176 75,6", "7 72,61 164,103 100,77 16,78 104,150 156,77 100,6 ", "7,27 51,74 99,198 11,148 171,151 77,46 8,75 49,78 ", "32,164 37,131 28,68 77,128 68,77 55,193 25,2 152,9", "1 77,164 73,126 150,154 59,199 186,55 111,195 98,1", "47 179,42 186,77 108,77 74,5 68,166 79,165 65,74 1", "22,80 54,25 161,77 167,29 55,70 165,78 12,118 140,", "112 130,91 183,53 66,19 100,77 78,114 116,18 108,1", "16 77,140 155,192 68,108 56,108 4,63 127,132 120,7", "7 171,8 110,165 94,44 132,35 59,160 76,88 140,25 1", "34,38 81,78 153,59 163,54 9,52 81,8 77,160 72,158 ", "53,54 1,169 152,97 16,98 139,6 77,143 130,149 8,41", " 57,84 81,187 55,45 74,150 189,132 136,77 25,89 15", "0,135 140,15 105,182 108,91 133,77 152,53 23,177 7", "5,127 168,140 194,170 105,64 91,115 16,54 21,117 1", "71,90 167,25 162,179 40,174 53,163 31,151 10,119 1", "06,186 77,82 171,138 74,167 17,157 116,121 160,53 ", "77,27 77,127 77,179 77,87 167,8 28,33 55,167 83,15", "0 77,74 13,108 36,116 92,77 132,27 113,142 79,160 ", "109,140 77,3 75,77 130,86 152,98 77,165 119,159 15", "1,197 179"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 739503965;
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    int n = 200;
    vector<string> edges = {"88 193,184 103,178 44,184 82,69 115,66 102,122 156", ",66 11,91 122,115 186,172 58,70 14,123 94,106 139,", "196 185,148 88,45 92,94 113,171 24,31 198,118 181,", "115 184,96 186,105 24,115 92,185 37,22 45,66 74,15", "3 115,175 19,161 170,185 142,51 127,30 173,54 170,", "38 191,184 97,88 154,162 60,170 21,35 181,19 144,6", "9 147,9 187,19 1,186 183,88 129,164 88,168 153,103", " 188,153 104,38 16,88 61,160 19,52 58,143 94,170 7", "6,175 2,196 130,68 42,198 105,38 115,115 181,179 1", "1,145 152,88 115,3 56,110 48,19 127,71 185,115 111", ",187 84,184 98,109 158,53 181,38 90,181 27,92 149,", "75 94,44 115,133 194,186 15,165 69,186 141,200 94,", "187 115,8 94,162 159,81 18,126 153,69 25,170 85,10", "6 73,186 128,59 187,114 111,109 111,140 23,26 185,", "101 181,136 187,34 38,111 78,122 115,52 150,77 181", ",116 105,38 137,162 33,111 41,155 180,122 79,134 8", "8,90 189,69 199,69 12,187 146,169 163,170 100,10 1", "53,56 115,7 185,49 125,169 44,153 99,57 138,115 94", ",153 121,187 195,66 63,105 138,105 20,115 106,162 ", "32,72 69,55 106,5 44,106 155,58 108,58 192,170 124", ",14 44,115 185,49 122,176 89,151 181,4 19,135 157,", "174 17,119 19,43 4,48 106,65 94,68 122,187 190,170", " 46,93 153,120 162,132 50,107 88,182 187,56 145,15", "7 38,186 13,64 111,115 105,174 122,36 94,69 177,19", "7 162,162 115,162 62,81 111,38 23,56 80,115 66,186", " 131,47 153,44 39,95 181,115 58,194 44,173 111,162", " 167,6 122,106 87,170 115,115 19,44 112,29 105,56 ", "86,185 89,26 67,166 92,50 106,28 69,186 83,117 92,", "105 40"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 618043751;
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    int n = 200;
    vector<string> edges = {"62 12,12 85,194 12,12 26,12 95,12 108,12 117,167 1", "2,70 12,12 184,12 116,149 12,43 12,12 80,82 12,12 ", "160,12 147,12 56,40 12,12 49,87 12,46 12,12 96,12 ", "29,12 192,12 154,12 8,12 198,12 153,12 64,30 12,12", " 22,12 78,107 12,12 109,105 12,37 12,12 170,159 12", ",129 12,168 12,12 48,38 12,169 12,15 12,12 52,144 ", "12,12 20,12 138,91 12,12 178,57 12,150 12,12 152,4", "7 12,12 151,12 94,33 12,89 12,34 12,12 77,165 12,1", "57 12,12 98,140 12,12 193,83 12,12 132,141 12,12 8", "1,12 25,12 90,61 12,99 12,35 12,75 12,12 97,71 12,", "6 12,156 12,18 12,175 12,4 12,12 53,12 135,12 190,", "145 12,12 17,177 12,174 12,102 12,12 155,162 12,12", " 73,12 104,176 12,12 5,189 12,12 185,137 12,12 121", ",12 130,76 12,12 9,12 31,12 74,12 126,12 65,196 12", ",55 12,191 12,36 12,119 12,12 103,188 12,12 24,12 ", "16,142 12,1 12,124 12,112 12,63 12,143 12,12 27,12", " 39,166 12,12 58,66 12,12 187,12 32,12 158,12 13,1", "2 72,12 139,12 134,12 59,12 186,111 12,172 12,197 ", "12,163 12,12 181,173 12,120 12,12 93,12 41,12 148,", "12 133,12 23,12 106,180 12,12 182,12 19,195 12,12 ", "14,12 100,12 42,128 12,12 136,12 7,12 60,12 84,12 ", "118,51 12,110 12,12 44,3 12,12 45,12 161,86 12,21 ", "12,92 12,113 12,12 114,12 67,12 54,2 12,12 131,199", " 12,12 28,69 12,12 122,171 12,101 12,127 12,88 12,", "10 12,179 12,12 125,12 200,79 12,164 12,12 183,12 ", "115,146 12,123 12,12 11,50 12,12 68"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 583631762;
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    int n = 200;
    vector<string> edges = {"23 133,152 142,30 77,26 192,162 152,4 6,193 11,136", " 108,113 56,104 27,52 22,141 176,35 18,12 163,47 1", "52,51 177,47 194,152 68,36 153,168 21,85 190,76 16", "3,197 146,68 90,129 17,27 152,157 143,159 19,191 9", "7,67 1,63 5,94 56,149 135,198 152,7 126,87 35,32 1", "06,33 162,110 68,135 152,128 169,134 117,19 100,11", "4 154,163 71,100 152,16 152,152 51,188 198,24 140,", "164 68,148 51,155 152,126 176,125 47,86 152,125 64", ",54 15,70 14,34 41,97 55,138 127,112 97,146 65,176", " 152,13 152,11 161,124 109,122 147,86 48,150 134,1", "52 23,114 158,160 193,74 22,94 152,152 41,152 163,", "51 175,171 16,152 11,152 85,59 6,46 193,152 124,51", " 75,13 118,116 169,107 162,124 196,68 10,91 149,89", " 136,26 182,103 6,73 15,130 146,24 185,97 152,84 2", "6,67 40,151 23,131 11,14 189,22 60,166 152,35 170,", "166 38,8 152,157 58,58 152,138 115,166 123,21 152,", "173 146,70 99,41 31,188 156,122 180,136 124,105 92", ",82 80,102 86,95 198,80 199,23 165,112 98,73 120,9", "6 23,152 26,5 152,152 114,36 13,42 30,190 179,152 ", "42,62 69,169 81,21 101,35 152,138 93,139 16,3 16,1", "05 50,166 111,82 25,144 51,6 152,152 146,167 85,18", "4 51,152 73,137 8,24 29,23 78,135 186,33 45,30 44,", "79 58,43 56,61 19,146 39,155 69,152 116,67 163,9 5", ",172 11,8 119,114 37,24 152,152 138,138 83,134 195", ",178 41,181 97,102 66,20 138,14 152,2 155,88 180,1", "42 129,187 124,22 152,49 16,68 57,26 105,152 80,12", "9 132,28 41,21 183,121 16,41 72,174 63,152 150,122", " 152,53 112,200 16,137 145,27 32"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 927992085;
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    int n = 200;
    vector<string> edges = {"4 87,156 138,130 149,184 146,128 31,147 48,100 47,", "119 47,47 73,135 101,109 144,177 86,137 81,36 15,1", "14 90,192 119,4 98,41 2,165 125,83 90,194 89,45 72", ",78 30,30 131,61 100,47 110,158 175,74 86,119 85,1", "94 12,95 154,30 196,118 138,154 70,181 3,69 32,47 ", "137,90 28,110 189,72 134,108 188,59 49,153 19,42 1", "66,150 90,30 47,25 119,120 104,9 102,47 157,41 62,", "144 116,170 73,62 18,79 100,125 153,21 184,4 139,1", "80 194,4 47,44 145,8 157,100 96,130 76,195 137,93 ", "122,5 48,81 13,88 157,41 63,192 40,182 115,122 17,", "109 47,138 127,184 47,101 163,82 80,186 55,159 194", ",84 155,157 132,198 108,154 141,27 48,92 119,47 13", "3,102 197,177 32,64 48,100 162,153 111,53 49,32 20", "0,58 175,26 123,108 182,47 108,80 126,120 53,157 1", "73,177 47,71 51,47 194,185 137,154 47,119 187,170 ", "191,153 16,41 47,193 97,14 72,90 47,128 47,107 101", ",176 4,47 153,190 132,99 108,144 46,138 47,189 26,", "129 83,29 137,160 135,47 17,184 143,100 77,75 30,1", "21 101,14 65,41 35,128 155,128 23,67 130,128 172,1", "33 9,184 166,48 47,48 140,175 47,4 169,123 110,57 ", "130,90 103,130 148,157 151,54 30,142 157,194 117,6", "5 37,128 171,133 197,90 183,152 100,43 127,55 48,1", "24 194,7 85,47 130,126 174,47 101,130 68,78 161,19", "9 138,60 184,91 138,167 153,108 94,41 52,1 175,39 ", "154,41 97,154 33,73 24,181 17,11 153,34 101,164 30", ",15 184,80 47,138 10,51 128,152 105,113 103,119 50", ",44 109,38 175,162 20,178 154,106 137,22 181,24 19", "1,120 179,175 6,101 112,4 56,137 66,136 108,47 53,", "47 14,168 175,82 174"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 586697525;
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    int n = 200;
    vector<string> edges = {"78 175,156 122,163 53,153 189,143 118,72 155,178 1", "77,152 162,43 140,152 93,42 66,34 19,163 138,137 1", "99,169 166,86 8,124 37,147 182,138 51,28 196,26 12", "7,117 113,174 108,85 41,146 138,176 187,174 103,53", " 172,138 185,103 194,51 165,34 74,154 162,185 168,", "1 68,179 30,184 95,41 17,162 141,98 137,30 66,138 ", "39,145 39,141 70,200 32,138 66,76 77,46 5,131 184,", "138 189,149 11,124 44,135 189,80 61,67 87,71 24,95", " 48,125 115,95 181,86 158,103 138,60 149,83 176,25", " 72,138 1,160 102,110 105,96 67,22 7,145 136,33 11", "9,34 183,154 27,39 186,94 131,86 36,52 186,72 138,", "141 142,188 149,128 121,47 139,138 187,106 198,169", " 79,185 80,150 68,73 7,110 35,12 68,155 157,198 62", ",36 195,4 58,134 154,38 173,54 53,135 111,138 58,1", "43 187,2 71,51 63,90 74,97 148,180 47,75 107,173 5", "9,122 103,19 40,56 89,14 58,92 190,170 60,182 161,", "98 182,1 173,162 138,138 140,81 25,171 194,78 65,8", "9 159,98 160,72 113,135 192,55 6,132 170,151 133,7", "7 107,55 10,189 128,69 122,164 165,92 146,51 178,2", "9 75,119 99,138 17,194 16,82 14,78 17,21 43,1 125,", "97 187,138 86,110 191,20 183,17 71,138 184,50 174,", "39 32,75 100,42 130,35 138,163 119,144 43,131 57,1", "58 197,84 128,60 138,193 8,140 89,127 35,4 116,140", " 67,146 47,91 127,45 92,15 126,138 34,104 41,63 10", "1,31 155,9 153,113 167,163 55,60 169,13 28,18 160,", "198 107,64 152,123 80,7 184,3 170,49 25,114 168,28", " 185,146 46,153 112,46 120,129 137,125 88,109 168,", "98 138,151 66,138 107,58 126,23 77,35 124"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 541983364;
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    int n = 200;
    vector<string> edges = {"101 92,5 158,119 131,163 135,135 93,141 177,183 95", ",21 76,32 45,171 146,136 28,144 71,1 60,12 172,69 ", "95,176 120,196 67,166 7,44 32,95 86,8 128,16 191,1", "56 95,187 190,167 60,95 7,2 101,95 188,193 68,112 ", "145,95 154,55 188,90 115,182 58,34 83,132 114,135 ", "152,53 10,71 39,26 95,169 34,92 156,6 151,66 95,10", "6 9,95 89,61 76,75 17,33 103,120 117,95 76,32 179,", "39 134,95 96,118 27,86 13,194 102,136 11,174 26,64", " 129,15 95,111 60,186 90,56 8,49 69,48 38,135 95,6", "5 9,91 26,88 129,196 95,9 40,95 136,162 110,165 10", "7,136 85,107 95,157 107,188 116,38 161,136 37,95 8", ",200 62,87 184,108 154,48 181,95 118,136 73,110 15", "5,177 121,10 196,17 99,60 95,58 193,50 72,113 126,", "95 58,26 190,120 95,45 44,138 48,12 149,112 140,14", "8 158,95 191,51 67,143 27,153 178,185 6,95 200,23 ", "200,162 77,164 87,99 66,87 98,26 79,29 183,12 19,8", "4 89,41 86,180 178,95 12,121 30,90 95,182 68,119 1", "60,78 153,97 60,9 82,100 52,170 40,95 113,9 95,104", " 188,95 130,20 89,150 48,200 22,158 35,183 36,119 ", "95,63 130,2 156,30 95,100 154,4 83,78 180,69 197,4", "2 63,96 47,127 18,141 121,168 76,94 127,81 12,199 ", "168,6 123,139 191,15 72,54 115,52 108,113 3,137 8,", "95 144,46 76,183 109,118 171,42 195,12 124,12 57,1", "86 70,192 48,66 75,195 63,48 95,129 95,112 133,95 ", "169,80 95,198 60,26 14,142 69,6 95,95 158,110 77,7", "4 89,95 87,103 15,25 60,179 95,95 155,9 59,107 173", ",122 95,102 95,159 95,147 102,7 43,18 159,96 125,1", "91 105,95 178,80 189,95 112,76 175,132 95,24 122,1", "36 31"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 947483647;
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    int n = 200;
    vector<string> edges = {"154 145,160 50,24 88,100 36,194 118,58 166,198 107", ",179 14,186 164,112 88,31 23,102 13,163 146,90 52,", "137 143,43 155,107 151,13 88,195 88,154 3,107 95,1", "03 56,31 197,51 63,104 178,181 195,142 88,109 186,", "88 138,200 47,1 45,94 174,4 13,194 86,77 93,13 35,", "43 136,88 176,164 152,14 120,159 199,58 88,15 26,1", "91 88,113 21,88 149,14 53,183 88,91 27,104 33,171 ", "29,101 183,183 41,38 183,55 88,88 90,175 111,190 8", "8,74 128,66 183,83 168,88 72,19 115,2 88,50 88,88 ", "154,34 88,7 5,15 119,98 36,104 88,84 133,82 63,42 ", "27,167 154,24 79,63 88,49 183,110 98,88 109,106 56", ",63 126,104 182,46 77,81 92,43 6,62 11,124 110,90 ", "18,138 39,56 59,36 88,176 175,189 36,130 63,9 19,1", "05 88,62 88,68 32,170 43,74 134,172 76,104 16,108 ", "30,8 138,37 47,10 8,88 43,185 13,67 168,123 58,114", " 27,172 193,88 99,107 48,168 88,56 153,131 74,143 ", "117,199 96,88 194,88 143,199 20,1 55,85 168,57 27,", "112 87,34 69,14 88,86 40,74 157,5 17,197 78,113 88", ",110 100,164 89,154 22,30 173,90 129,61 14,143 165", ",56 88,88 74,31 132,161 14,180 30,146 88,195 75,31", " 192,97 143,139 154,133 83,28 30,54 110,107 127,87", " 196,34 141,164 122,88 31,88 5,71 63,20 88,166 184", ",47 191,99 174,15 2,143 60,177 92,144 198,88 27,73", " 34,88 177,162 13,113 188,44 172,30 88,60 135,116 ", "56,148 104,38 64,171 142,172 88,43 140,88 46,70 34", ",121 87,88 107,88 115,50 25,152 109,158 62,80 90,1", "72 156,169 24,31 150,147 163,133 125,68 105,188 65", ",12 109,34 187,133 67"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 283104735;
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    int n = 200;
    vector<string> edges = {"114 12,68 3,90 183,10 38,149 9,151 136,109 83,198 ", "187,82 48,84 14,193 124,41 157,155 136,68 165,85 9", "7,164 168,83 161,1 47,58 179,77 27,83 129,194 85,2", "0 144,166 59,83 9,180 57,47 115,83 157,61 6,29 197", ",168 88,83 193,68 45,47 120,29 68,14 176,159 154,7", "5 168,9 139,148 36,35 14,14 15,157 14,169 43,172 1", "66,14 170,106 68,9 168,47 39,158 142,159 157,134 1", "17,62 9,68 23,2 114,168 177,114 77,40 14,4 73,99 9", "5,82 157,34 56,83 11,49 26,156 91,112 68,179 136,9", "1 157,77 127,54 136,139 53,191 91,149 174,199 14,7", "9 93,167 28,90 9,24 111,14 68,47 13,179 95,33 100,", "47 25,126 32,74 68,63 83,16 14,83 118,34 83,77 121", ",77 141,21 5,179 73,179 36,64 136,116 160,5 137,18", "6 136,89 136,142 173,77 98,77 61,94 179,96 68,9 16", "6,81 120,192 139,179 187,83 126,73 143,187 128,14 ", "140,47 46,157 178,169 47,94 42,58 188,111 9,108 98", ",78 83,47 30,14 153,33 86,57 157,33 179,134 157,60", " 125,47 101,83 72,47 44,68 17,122 111,87 68,200 33", ",95 181,131 60,51 33,68 138,50 14,90 184,68 77,47 ", "55,57 7,80 72,130 14,39 19,167 133,36 189,145 14,1", "44 179,195 112,107 76,47 116,94 182,60 136,179 47,", "146 68,22 58,71 77,68 162,52 71,8 41,78 105,47 163", ",83 65,175 38,136 9,121 113,152 27,167 9,47 92,136", " 18,55 123,77 47,68 104,14 93,85 9,141 110,62 69,2", "6 157,31 83,14 67,178 119,150 176,62 196,190 127,1", "1 102,144 135,136 147,83 171,83 103,76 47,77 5,132", " 141,14 185,142 179,157 38,70 68,83 37,149 66"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 828637343;
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    int n = 200;
    vector<string> edges = {"118 70,163 38,133 95,161 7,190 15,187 131,97 130,4", "9 183,125 192,96 192,45 26,192 44,192 6,12 63,98 1", "47,141 1,55 75,58 98,78 192,74 63,125 68,153 192,1", "25 200,47 117,75 57,12 174,22 18,26 105,192 81,62 ", "199,161 129,192 95,150 170,144 54,196 96,192 12,19", "2 170,110 32,192 139,10 64,90 171,34 89,192 34,139", " 59,24 144,198 192,137 49,96 16,143 117,192 35,94 ", "96,65 28,70 192,192 136,192 187,146 192,137 127,64", " 193,50 97,134 62,159 93,149 134,184 52,103 107,43", " 19,146 110,180 160,161 154,159 97,26 109,70 123,2", "8 192,103 161,87 187,144 100,161 192,176 115,56 33", ",70 186,155 134,198 53,136 36,97 14,165 187,21 163", ",192 147,136 99,32 39,139 52,187 71,182 28,84 97,9", "1 117,102 34,179 70,171 3,168 70,192 134,192 116,2", "8 11,77 142,164 75,96 111,77 85,78 23,113 143,128 ", "9,15 192,30 26,128 192,185 35,44 197,31 97,192 119", ",15 88,76 96,135 104,114 34,80 128,162 192,151 110", ",152 147,97 192,48 34,170 124,41 180,172 70,49 112", ",171 192,77 156,140 128,75 192,163 121,171 132,125", " 20,117 192,175 192,60 70,29 173,144 192,108 187,1", "38 193,75 5,192 194,17 12,175 73,177 175,125 67,10", "9 40,78 135,125 126,178 82,43 6,96 191,178 170,193", " 192,8 21,83 102,33 192,188 26,157 79,192 49,22 11", "9,192 142,85 27,26 158,81 157,187 72,163 192,106 1", "66,192 26,192 180,175 46,86 180,175 101,35 115,44 ", "120,125 37,122 140,1 136,119 51,4 195,181 12,147 1", "48,189 187,128 13,25 125,5 145,49 92,42 15,169 192", ",2 139,167 147,43 4,192 166,157 173,66 44,69 169,6", "1 96"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 649276606;
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    int n = 200;
    vector<string> edges = {"74 128,74 186,135 151,19 34,111 167,195 74,18 80,7", "4 9,174 131,70 74,149 116,74 122,17 190,169 118,65", " 27,118 74,184 130,39 195,136 127,31 74,154 193,49", " 126,142 124,118 141,183 74,118 25,127 74,142 161,", "197 21,74 49,122 85,168 70,19 131,130 74,23 10,74 ", "10,130 160,94 21,49 162,12 122,51 144,199 74,182 1", "17,36 138,74 116,190 156,170 74,71 138,15 150,90 1", "92,10 166,74 95,185 89,176 18,158 74,66 8,35 74,9 ", "152,18 75,195 43,192 158,145 196,11 22,127 69,120 ", "115,28 45,151 52,142 74,56 165,164 106,74 78,74 99", ",46 159,7 115,74 76,48 35,133 74,45 110,144 109,74", " 5,24 132,191 61,134 22,89 148,74 112,18 46,195 93", ",53 74,107 127,144 74,74 172,155 14,40 98,1 35,84 ", "74,119 129,99 6,188 135,54 122,197 91,142 165,30 1", "72,8 96,138 3,132 198,187 74,187 105,137 189,123 7", "4,61 32,180 200,74 115,137 113,91 101,28 57,2 86,4", "1 74,119 106,121 76,82 28,55 49,67 8,20 99,74 64,6", "2 50,153 74,27 74,74 73,179 118,50 146,47 164,13 1", "11,163 133,115 139,74 151,18 74,116 81,173 142,185", " 79,34 140,194 74,74 125,143 74,74 113,70 108,22 3", "3,10 60,63 128,29 74,79 4,74 150,74 19,47 129,125 ", "97,138 74,49 147,28 104,74 111,74 38,35 72,50 74,7", "9 74,190 74,74 22,26 5,87 52,175 183,74 181,148 4,", "171 50,86 74,22 16,59 88,94 74,50 177,119 74,44 13", "2,145 191,116 157,73 100,144 14,74 182,158 40,196 ", "32,74 77,154 195,74 103,74 145,103 58,74 37,58 102", ",83 144,37 180,74 8,190 114,42 112,28 74,178 74,88", " 74,74 132,70 68,101 94,153 92"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 60196051;
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    int n = 200;
    vector<string> edges = {"79 53,88 53,53 42,151 170,93 125,116 161,27 53,162", " 85,191 115,107 44,29 180,23 17,43 53,53 153,53 14", "8,159 158,53 144,31 53,167 74,96 53,87 39,42 38,11", "0 122,138 109,53 59,103 163,65 121,53 48,137 53,13", "1 53,4 3,54 95,53 179,53 145,180 163,172 53,96 77,", "23 104,30 159,118 53,53 95,8 53,71 61,53 40,53 10,", "42 49,50 59,53 160,14 53,115 53,83 138,166 45,106 ", "60,53 133,56 8,101 81,102 174,138 53,89 53,53 157,", "91 53,198 153,96 18,47 113,168 171,161 143,91 111,", "28 42,53 34,34 86,190 153,53 9,53 151,15 53,140 79", ",165 153,113 41,53 187,66 122,142 32,53 107,155 69", ",194 33,144 132,151 105,92 182,144 185,53 184,22 1", "97,53 13,142 53,68 131,7 65,73 108,82 162,84 51,16", "1 53,150 53,53 117,192 200,132 154,53 113,139 53,3", "9 53,9 175,12 136,102 126,121 7,53 171,162 35,128 ", "153,80 95,22 107,70 166,173 53,177 56,120 53,169 3", "4,53 92,152 133,53 166,119 53,37 161,102 53,19 31,", "187 124,136 53,31 127,123 46,135 149,142 16,196 53", ",53 100,183 5,58 27,141 167,114 113,135 72,53 60,5", "3 51,134 59,15 52,146 119,23 53,53 5,93 67,189 53,", "76 173,53 7,90 138,135 53,81 98,171 108,162 94,14 ", "112,53 64,27 1,78 3,177 8,195 142,63 133,113 6,88 ", "193,53 36,53 99,75 53,25 53,15 11,57 173,53 167,16", "4 53,53 71,3 53,53 21,178 74,53 194,53 81,181 31,5", "5 102,123 53,167 178,97 118,43 199,147 75,163 53,9", "1 200,181 127,53 122,26 71,53 159,155 130,5 156,12", "9 43,53 62,2 102,69 53,119 176,24 53,53 162,81 188", ",130 69,53 93,5 20,159 186"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 222597772;
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    int n = 200;
    vector<string> edges = {"124 98,112 132,4 111,39 102,5 186,81 92,10 28,15 1", "40,61 87,190 21,69 1,98 121,134 130,15 155,150 194", ",74 130,125 155,75 133,70 7,7 143,154 5,125 67,96 ", "133,1 85,172 155,41 43,155 130,186 131,187 36,182 ", "84,31 193,17 99,176 112,155 152,43 169,95 20,46 65", ",165 79,189 196,176 155,107 94,155 175,28 161,40 1", "60,111 181,183 113,155 24,95 142,53 93,168 141,155", " 103,28 22,155 1,196 127,26 66,23 31,108 152,86 15", "6,32 88,126 35,77 152,192 103,155 141,86 113,23 48", ",155 81,42 51,38 66,51 36,49 31,39 155,166 13,57 4", "3,100 93,86 155,16 93,66 27,155 18,72 155,171 141,", "36 200,58 51,46 128,3 19,199 175,115 103,176 111,5", "2 98,155 36,155 150,197 39,165 155,73 31,107 153,9", "8 155,72 144,155 126,125 110,165 97,21 155,44 36,5", " 11,117 80,155 43,135 95,187 184,24 104,84 155,62 ", "5,160 14,6 139,155 17,1 170,174 126,141 138,6 155,", "107 155,147 93,159 125,7 155,126 59,155 133,188 61", ",21 60,105 118,167 9,155 46,45 81,162 160,123 15,1", "67 155,196 173,180 172,157 72,82 137,196 80,147 10", "1,175 47,56 98,98 129,17 116,155 31,71 103,120 15,", "66 155,118 155,155 166,21 55,82 78,155 82,86 145,8", "2 33,155 5,24 12,175 76,151 133,150 198,29 18,177 ", "17,18 119,196 155,1 8,136 86,54 176,46 89,28 155,7", " 91,163 167,155 93,122 103,66 25,149 191,43 109,2 ", "19,135 185,20 50,84 178,155 95,43 83,1 146,95 179,", "19 126,155 191,61 155,135 64,148 66,30 61,90 150,8", "8 155,114 174,68 130,158 103,24 34,37 18,176 195,1", "07 106,63 165,164 172,160 155"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 553109229;
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    int n = 200;
    vector<string> edges = {"134 84,105 142,73 134,134 168,134 23,34 131,98 167", ",187 29,50 198,21 141,113 4,78 116,174 84,42 157,1", "89 134,85 134,101 77,14 85,90 103,178 18,65 141,13", "4 132,63 134,187 163,178 125,42 170,134 34,134 181", ",134 57,168 67,191 91,77 54,80 160,183 134,15 112,", "66 129,154 38,142 193,179 7,119 180,135 66,144 187", ",64 191,134 42,14 107,68 154,146 117,90 134,179 15", "6,195 36,200 5,55 104,122 184,78 188,134 133,52 19", "3,186 45,117 196,165 167,115 34,177 140,33 124,189", " 71,127 134,109 134,147 134,93 134,37 123,10 153,2", " 130,182 97,15 31,49 95,87 49,108 129,154 152,102 ", "134,121 134,114 70,26 48,5 104,53 1,42 56,134 187,", "134 78,43 6,149 161,153 128,135 129,122 8,118 57,1", "89 3,134 123,154 72,26 99,15 46,4 134,134 153,69 8", "2,178 192,70 134,75 122,70 12,134 39,5 134,92 185,", "196 134,75 134,51 102,20 154,169 77,63 179,134 58,", "195 35,98 134,150 180,195 134,134 31,171 178,92 13", "4,134 33,7 63,75 8,133 17,9 134,24 102,57 60,139 5", "3,190 147,191 134,45 134,111 32,134 139,136 15,138", " 97,134 43,28 191,59 198,190 82,173 61,134 106,197", " 132,30 195,162 8,143 141,150 119,140 132,89 15,7 ", "19,47 195,134 26,134 44,78 88,96 134,134 130,74 49", ",134 135,141 134,134 62,57 110,177 197,199 153,175", " 62,134 38,134 180,172 111,134 176,55 200,80 164,1", "34 178,141 13,41 120,82 147,168 100,134 182,1 139,", "148 189,151 191,161 121,40 1,62 145,134 80,33 159,", "134 198,109 11,134 49,70 27,76 168,77 134,174 158,", "79 26,133 137,81 153,52 105,41 127,77 16,111 134,2", "2 92,106 173,94 42,166 34,52 134,83 102,133 194,10", " 86,25 134,62 126,155 150"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 868825714;
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    int n = 200;
    vector<string> edges = {"132 33,30 155,182 117,175 48,141 53,119 59,85 107,", "148 68,29 111,121 66,92 93,182 138,57 86,166 195,8", "2 54,7 153,102 178,43 104,43 128,111 64,45 52,171 ", "170,111 95,170 30,4 88,97 166,142 63,126 107,190 7", "5,31 133,70 144,170 116,111 130,101 86,48 6,67 145", ",105 38,164 114,46 138,35 111,163 93,10 148,165 11", "1,90 182,195 97,91 44,89 96,115 10,123 111,144 182", ",165 157,25 56,159 116,121 169,191 133,190 80,19 1", "44,139 194,14 111,53 177,190 111,42 116,143 152,15", "5 5,9 50,34 130,182 48,99 48,1 102,102 193,142 90,", "147 78,48 127,88 64,26 150,24 109,76 16,190 139,40", " 7,103 147,182 170,152 186,145 172,180 136,136 182", ",118 73,52 87,20 48,93 182,172 111,135 48,91 182,1", "13 48,177 184,54 199,16 25,54 111,197 23,105 174,1", "86 143,48 111,73 32,17 131,133 170,60 116,183 14,1", "17 156,22 96,52 185,116 18,111 78,170 52,200 38,22", " 161,182 181,13 141,47 45,151 165,190 89,28 138,27", " 56,27 16,48 94,184 141,48 176,168 48,190 141,72 1", "83,152 190,77 29,83 134,170 122,3 95,61 48,33 114,", "182 102,144 65,68 108,158 75,132 170,26 160,30 5,1", "17 188,119 111,107 111,198 190,71 165,79 182,81 83", ",12 190,24 187,34 36,2 91,62 12,41 182,49 48,197 4", "1,139 162,35 167,153 80,21 91,120 119,62 58,171 11", "8,109 182,134 182,192 48,137 106,77 125,55 17,166 ", "170,174 170,124 123,100 48,26 190,26 154,15 158,13", "8 196,37 123,190 10,54 146,48 11,169 170,48 8,117 ", "140,180 74,129 119,170 190,10 108,31 191,69 107,79", " 9,35 149,84 58,98 48,66 169,131 190,189 3,15 75,1", "31 55,173 123,48 110,93 39,57 122,198 128,170 16,4", "7 185,48 112,35 51,162 194,26 179,181 137"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 558470884;
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    int n = 200;
    vector<string> edges = {"37 58,99 51,74 167,99 82,88 37,172 99,178 112,99 1", "85,94 12,99 44,155 59,116 49,197 171,142 37,61 135", ",176 129,6 63,28 143,35 57,49 81,124 18,107 15,49 ", "3,139 101,42 87,118 107,111 49,80 35,69 191,119 14", ",122 119,119 98,85 99,129 175,90 119,107 40,139 99", ",195 18,69 168,173 139,172 27,1 69,94 166,34 135,1", "9 197,131 69,172 41,113 99,33 18,10 129,37 13,99 1", "52,136 109,94 100,155 128,106 103,129 51,148 135,9", "9 81,179 107,30 57,97 17,188 37,63 151,74 125,129 ", "162,139 145,139 189,54 187,69 170,76 172,180 2,44 ", "94,137 155,56 135,57 91,57 186,150 155,177 112,99 ", "155,97 143,99 74,18 39,86 74,107 99,197 157,126 27", ",133 57,129 117,200 107,119 127,138 187,146 129,97", " 52,37 102,60 172,57 7,109 22,187 36,139 75,55 119", ",155 182,155 71,193 112,74 47,49 140,169 37,99 187", ",84 112,110 158,94 160,119 85,64 49,153 135,135 15", "9,68 37,120 42,65 187,31 97,109 164,49 5,141 197,4", "2 11,187 93,20 94,42 103,107 165,38 99,69 25,83 94", ",108 63,174 139,96 187,200 73,109 70,161 74,109 19", "9,18 38,97 67,42 99,109 8,63 16,112 147,69 192,74 ", "180,155 184,172 196,18 48,42 156,194 137,21 57,172", " 149,45 109,63 110,132 129,163 69,97 99,97 181,24 ", "42,23 112,42 43,130 197,94 89,139 121,53 94,18 50,", "113 109,192 99,92 18,63 99,4 49,152 37,79 97,101 6", "2,185 112,29 119,123 135,105 109,135 99,154 49,112", " 26,99 57,134 119,63 183,172 190,69 46,197 9,82 19", "7,144 18,129 32,107 72,112 95,198 197,74 78,197 11", "4,63 77,65 115,66 187,104 153"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 97316498;
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    int n = 200;
    vector<string> edges = {"3 161,27 50,61 4,66 39,16 31,172 42,103 32,133 52,", "106 109,98 143,37 57,180 3,42 134,170 93,198 8,55 ", "42,104 1,89 113,3 102,155 48,1 103,2 115,25 122,12", "7 25,46 47,83 56,107 73,190 158,59 5,53 2,161 133,", "86 107,85 81,30 183,124 161,24 131,185 95,33 64,27", " 91,83 177,115 80,144 164,109 125,92 68,83 42,162 ", "29,173 61,174 127,120 148,148 101,149 34,13 137,83", " 161,42 147,126 27,40 64,29 12,192 165,73 183,142 ", "112,70 66,34 42,55 136,33 44,97 181,195 1,15 146,2", "8 107,84 105,92 2,117 52,144 19,60 191,108 1,192 4", "2,189 160,133 119,107 96,157 49,112 25,195 182,131", " 145,109 25,54 153,124 81,97 110,196 27,110 156,2 ", "133,166 53,73 121,194 77,131 161,140 94,147 169,18", "6 92,66 42,162 148,77 150,73 181,171 116,31 191,13", "8 148,63 133,62 36,71 122,77 57,83 23,20 176,162 7", "5,15 73,193 31,82 119,2 49,188 78,139 66,110 26,99", " 115,23 11,149 198,175 87,167 195,184 33,177 43,17", "0 49,9 114,65 108,129 79,83 67,131 111,38 172,83 3", "6,1 42,123 13,73 158,1 27,136 19,155 53,134 197,25", " 2,42 87,74 133,13 25,72 36,76 6,107 130,53 18,152", " 124,79 27,133 159,9 162,74 151,8 69,200 1,33 161,", "118 49,163 51,45 6,17 112,113 162,162 73,198 69,14", " 160,27 154,75 35,21 177,162 160,66 179,164 19,67 ", "140,73 84,27 135,67 94,3 153,7 200,156 26,31 2,162", " 171,176 115,145 199,46 27,90 121,25 6,160 22,141 ", "56,162 27,73 51,92 185,73 25,159 100,83 143,77 161", ",78 10,104 58,124 187,143 88,79 178,195 132,76 45,", "1 78,173 4,27 41,173 90,1 5,78 128,168 46"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 219633952;
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    int n = 200;
    vector<string> edges = {"176 25,50 130,5 168,37 12,145 102,181 54,24 95,160", " 59,77 151,76 11,104 146,51 54,74 141,154 13,45 1,", "6 173,3 92,10 17,118 106,49 82,157 12,200 153,108 ", "22,78 70,151 11,100 122,148 25,174 64,101 54,61 66", ",27 3,39 128,86 40,91 156,132 114,182 111,72 178,1", "80 19,7 98,81 54,147 94,56 121,48 96,151 54,34 54,", "193 85,153 103,33 195,59 17,83 23,71 177,193 54,96", " 54,38 81,158 196,2 87,179 81,147 61,66 147,187 93", ",58 181,71 54,42 112,79 49,161 26,88 171,81 93,123", " 176,96 6,192 118,90 144,124 123,78 68,44 15,80 22", ",72 184,2 139,111 21,185 73,92 54,54 161,50 154,10", "3 80,75 157,59 145,96 125,190 178,2 197,158 27,58 ", "174,172 78,132 71,181 117,115 51,186 40,40 109,191", " 151,193 122,56 73,161 65,54 14,29 170,54 2,105 18", "8,183 137,169 184,45 175,183 101,169 178,115 46,31", " 167,120 77,57 52,161 136,130 20,54 190,15 34,63 7", "8,9 153,113 151,163 2,85 60,18 78,36 131,199 155,1", "26 192,49 19,62 28,95 190,116 92,55 58,41 133,98 8", "1,19 54,155 161,122 138,64 55,87 142,30 116,90 29,", "54 186,111 83,162 96,8 161,121 34,54 29,90 43,88 5", "1,121 185,81 41,167 91,54 45,146 87,135 59,89 82,6", "8 149,69 78,59 54,109 143,111 84,111 53,31 156,101", " 20,124 164,47 151,180 35,105 45,32 170,96 28,45 1", "50,140 106,67 135,111 54,166 63,140 60,13 127,26 4", ",172 159,45 147,78 54,25 129,89 79,126 119,198 81,", "138 126,97 183,99 111,88 129,99 152,164 46,21 194,", "177 165,75 36,161 33,162 107,16 59,128 137,37 32,2", "00 132,5 186,36 43,31 14,104 87,127 128,196 3,74 1", "51,134 117,2 57,59 189,96 110,143 86,42 14,165 108"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 52540624;
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    int n = 200;
    vector<string> edges = {"172 119,159 59,144 106,83 148,72 193,164 116,110 5", "3,153 34,118 22,146 10,5 105,77 13,164 152,28 143,", "115 75,154 8,69 128,105 159,55 36,56 168,175 64,11", "2 67,98 120,18 32,141 188,106 105,182 10,66 193,13", "3 100,106 160,3 186,106 47,19 16,153 30,63 163,100", " 160,176 11,51 103,197 144,32 135,139 138,57 154,1", "95 121,50 151,74 106,139 60,83 106,82 181,111 89,3", " 136,152 74,98 78,41 158,29 193,35 140,46 52,114 1", "06,83 189,167 53,47 172,190 64,70 52,43 121,96 20,", "112 196,65 26,106 4,194 172,109 129,89 149,75 92,1", "23 83,190 147,61 133,170 91,116 74,36 173,20 176,7", "7 132,106 77,95 170,31 106,72 51,163 182,107 51,11", "8 142,179 93,48 36,7 188,171 111,149 171,124 170,1", "02 174,77 68,45 100,134 93,26 87,26 106,90 81,106 ", "178,52 184,113 32,7 178,28 183,22 15,79 140,180 12", ",200 153,180 33,147 175,155 159,17 37,165 23,141 1", "78,112 137,108 163,12 150,106 157,4 71,91 106,41 5", "8,106 182,57 192,2 10,139 130,77 84,10 80,40 173,1", "06 149,106 147,106 130,96 11,150 33,112 106,71 44,", "62 109,120 73,191 166,9 16,117 32,181 23,94 90,106", " 32,193 86,128 22,153 46,53 47,106 181,72 106,15 1", "06,165 82,6 102,102 106,42 151,24 90,115 14,172 10", "4,14 92,121 106,16 157,37 140,31 41,8 192,73 78,10", "9 106,25 44,174 101,170 145,90 185,121 198,28 1,21", " 169,106 180,106 173,118 39,121 38,131 87,161 45,8", "3 99,106 92,157 166,88 3,49 109,8 106,125 163,31 7", "6,6 101,166 177,114 151,85 151,54 133,156 53,109 1", "22,90 106,56 27,93 21,52 162,112 126,46 106,28 91,", "37 106,56 144,131 65,106 78,130 127,51 97,25 4,187", " 16,3 114,176 106,21 106,166 199"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 192292731;
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    int n = 200;
    vector<string> edges = {"178 2,94 14,43 127,170 19,77 36,26 146,40 151,178 ", "169,56 2,99 1,178 73,178 117,19 178,135 157,134 50", ",178 65,176 122,77 104,77 178,145 64,110 135,71 70", ",66 50,129 117,138 19,178 74,155 120,48 196,64 180", ",178 166,95 122,187 172,179 69,17 153,188 62,146 1", "78,94 199,158 141,3 193,60 29,94 178,107 118,162 1", "78,92 178,178 59,100 24,62 168,44 167,75 64,38 44,", "194 33,162 159,69 182,5 35,133 20,176 95,39 119,11", "3 106,15 178,175 168,186 77,41 31,98 156,154 80,82", " 178,27 106,4 160,153 178,128 44,80 173,166 10,160", " 79,62 178,32 74,74 136,156 177,12 78,26 85,151 12", "9,53 19,137 126,81 64,178 155,184 159,77 57,87 167", ",18 19,34 94,29 13,30 2,116 69,122 41,107 112,5 59", ",151 117,73 37,132 98,15 123,176 178,12 111,11 37,", "107 172,8 93,7 126,189 99,175 91,178 198,63 125,18", "7 178,178 171,195 169,147 129,188 91,118 61,73 165", ",96 110,133 120,89 60,8 97,191 178,178 28,3 173,13", "4 178,152 128,94 174,28 200,178 33,92 160,165 68,1", "64 178,191 125,92 71,139 160,94 142,19 144,64 178,", "198 135,20 67,110 52,114 146,45 46,9 52,85 86,8 10", "1,65 84,43 178,84 25,35 39,66 149,193 154,191 150,", "197 106,42 134,196 151,55 183,190 43,178 111,123 5", "8,82 106,178 60,115 169,46 10,178 126,177 164,102 ", "113,111 69,140 24,198 110,49 43,178 24,55 184,172 ", "23,148 29,47 37,77 108,183 162,22 169,161 95,132 1", "64,131 29,124 150,121 197,43 163,67 155,122 192,12", "5 105,178 130,173 178,178 141,197 82,130 54,169 21", ",59 119,125 143,45 185,8 15,109 43,51 64,37 88,28 ", "72,166 185,42 149,76 89,86 114,187 107,44 171,171 ", "167,16 153,181 130,90 141,65 99,169 103,83 99,33 6"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 27677948;
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    int n = 200;
    vector<string> edges = {"2 198,198 123,98 198,198 26,198 86,42 198,198 155,", "166 198,48 198,45 198,93 198,179 198,161 198,198 9", "4,9 198,198 17,198 146,198 24,67 198,198 56,198 17", "0,149 198,52 198,10 198,198 163,198 68,198 180,200", " 198,82 198,178 198,111 198,198 144,75 198,34 198,", "1 198,156 198,121 198,103 198,177 198,198 196,191 ", "198,188 198,108 198,198 165,198 81,6 198,29 198,19", "8 174,172 198,184 198,198 106,198 90,198 13,145 19", "8,198 85,198 159,198 152,198 189,132 198,198 120,1", "98 183,138 198,198 107,198 118,198 105,198 70,16 1", "98,135 198,119 198,47 198,198 46,198 43,58 198,198", " 7,55 198,80 198,164 198,192 198,198 102,198 127,1", "98 78,63 198,198 122,198 116,198 143,198 126,3 198", ",8 198,131 198,198 140,198 182,28 198,69 198,198 1", "10,198 176,15 198,198 114,198 112,195 198,113 198,", "117 198,198 27,198 64,77 198,198 66,198 53,61 198,", "198 125,39 198,151 198,198 65,162 198,40 198,198 5", "0,198 158,198 37,198 83,181 198,198 134,198 74,198", " 92,99 198,190 198,198 157,198 11,136 198,198 197,", "198 194,5 198,198 153,198 23,198 139,198 33,198 91", ",198 168,198 95,137 198,198 87,89 198,71 198,148 1", "98,198 36,154 198,198 84,32 198,198 72,21 198,60 1", "98,198 62,18 198,198 128,198 147,12 198,198 185,19", "8 35,198 100,109 198,129 198,49 198,198 175,198 14", "2,198 20,198 22,104 198,198 38,198 73,19 198,44 19", "8,141 198,198 54,198 97,198 133,198 160,198 14,25 ", "198,198 124,101 198,130 198,198 167,198 76,57 198,", "198 186,198 51,198 199,198 115,198 79,198 59,198 3", "1,169 198,198 173,193 198,198 96,198 30,198 4,198 ", "171,150 198,187 198,41 198,88 198"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 583631762;
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    int n = 200;
    vector<string> edges = {"122 146,78 164,43 53,89 140,88 16,116 4,28 17,134 ", "121,93 145,169 158,90 42,188 81,37 167,56 90,88 76", ",17 132,187 164,67 188,128 16,38 141,181 34,50 174", ",176 42,7 24,20 49,90 115,195 90,185 158,110 68,19", "1 165,71 12,99 72,90 45,86 163,50 85,189 56,81 130", ",105 50,30 178,90 199,27 12,44 28,74 97,46 133,119", " 157,198 46,102 195,61 195,71 49,45 101,31 168,143", " 49,128 52,90 28,64 68,151 108,140 45,163 84,56 17", "9,26 12,172 41,112 119,122 90,165 75,142 158,196 1", "74,120 97,183 83,161 160,109 14,91 35,144 83,96 98", ",166 28,135 96,178 96,38 195,69 93,158 40,90 183,5", "3 174,54 33,18 190,24 195,39 55,199 37,177 90,26 6", "5,29 178,75 199,8 119,186 64,118 73,9 68,177 66,72", " 90,158 54,45 111,81 151,179 2,103 78,184 197,30 9", "0,128 177,90 105,198 51,56 95,172 119,46 60,66 193", ",92 28,115 124,90 68,93 57,135 134,62 187,82 101,2", "00 9,160 190,136 53,194 48,5 159,156 26,105 31,35 ", "56,139 143,181 56,45 21,28 113,153 16,143 65,42 47", ",179 104,166 170,55 146,158 90,66 32,75 182,15 113", ",160 150,129 63,148 54,73 84,87 124,137 4,23 172,6", "9 151,144 150,191 107,175 47,171 146,5 173,165 154", ",136 31,114 150,113 36,142 155,55 152,123 68,25 17", "3,90 4,152 5,100 83,122 173,152 192,68 138,90 84,1", "21 30,3 195,90 164,48 115,133 117,58 46,46 1,80 13", "4,70 99,107 126,90 145,10 45,3 127,180 191,90 119,", "162 137,6 136,88 193,38 147,131 4,60 125,90 46,119", " 109,4 97,149 135,8 77,121 19,145 188,37 107,40 22", ",94 133,63 4,197 72,71 79,69 106,193 13,176 11,90 ", "65,59 144,183 190"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 681646967;
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    int n = 200;
    vector<string> edges = {"3 171,147 6,93 25,95 76,107 82,25 98,82 50,162 130", ",165 114,2 52,54 23,156 60,25 102,86 113,114 78,99", " 173,121 98,114 10,11 72,15 8,135 88,2 130,115 18,", "194 170,51 15,25 45,125 54,114 135,197 68,114 129,", "119 183,12 177,127 190,162 42,143 155,4 53,176 114", ",100 162,130 23,172 140,66 2,113 91,198 173,44 113", ",183 123,37 186,165 134,115 79,59 153,142 25,98 11", "1,35 102,2 149,42 39,157 16,103 25,23 94,186 182,9", "8 175,169 87,172 64,114 22,90 62,69 48,196 166,180", " 169,191 160,138 114,113 114,18 130,108 197,117 19", "5,187 148,144 18,114 168,11 133,178 48,56 170,67 2", ",159 155,20 169,110 78,172 14,80 170,72 114,83 96,", "26 82,49 142,116 33,74 25,25 12,29 167,45 57,25 11", "4,172 146,130 183,25 75,89 3,47 25,25 195,105 166,", "172 130,114 143,114 48,114 3,192 25,163 2,130 169,", "154 30,75 186,187 23,92 119,49 152,186 61,122 78,1", "30 170,74 118,109 191,193 74,18 167,70 25,5 115,18", "1 54,191 25,154 130,129 136,169 124,183 27,31 102,", "113 63,165 19,112 82,200 171,94 71,106 198,151 45,", "74 7,177 41,114 156,78 17,130 25,157 138,190 130,6", "0 77,190 28,154 131,188 155,49 161,154 90,15 137,1", "3 33,133 72,120 49,131 32,114 1,162 34,34 43,198 1", "14,130 114,132 153,82 114,139 30,166 55,123 84,100", " 36,189 144,70 15,172 9,25 145,190 85,153 141,46 1", "90,156 77,176 53,25 33,169 101,158 113,170 40,177 ", "185,27 38,65 114,131 97,128 96,73 191,95 25,136 12", "6,88 184,104 25,25 96,19 134,68 25,179 78,164 177,", "78 58,21 42,24 190,199 195,81 119,150 82,138 16,14", "3 159,147 1,153 25,25 166,170 174"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 529627991;
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    int n = 200;
    vector<string> edges = {"186 131,166 129,121 50,45 40,148 58,98 178,193 80,", "172 92,58 168,166 118,187 50,143 112,192 191,55 19", "0,71 68,165 40,55 77,196 3,55 172,191 82,90 42,191", " 55,74 146,55 80,198 138,97 136,166 55,74 13,70 19", "0,138 27,183 162,77 106,153 191,28 99,36 172,38 17", "2,123 37,144 101,68 155,169 144,137 1,159 75,104 1", "22,8 40,30 55,50 195,105 172,152 151,186 55,75 151", ",50 46,107 172,144 39,74 88,21 114,28 116,77 179,6", "6 97,28 115,151 29,84 46,122 150,108 114,185 80,18", "9 109,170 114,72 77,97 47,51 50,155 87,43 50,49 16", ",28 26,55 40,191 89,184 143,77 64,138 23,25 40,10 ", "85,98 137,96 109,155 55,190 139,89 164,118 83,132 ", "124,138 199,80 65,80 111,90 2,191 125,50 188,186 5", ",141 148,77 180,52 119,148 86,138 41,18 144,137 55", ",147 49,155 161,100 92,151 149,55 148,109 55,113 7", "3,61 137,49 10,6 144,40 174,197 49,22 190,55 143,9", "4 30,175 49,28 123,24 137,166 81,55 90,15 138,144 ", "156,90 162,120 172,200 137,33 90,60 137,151 12,14 ", "111,55 97,114 62,127 90,126 190,19 172,76 122,143 ", "158,77 63,186 32,72 69,171 148,34 166,140 136,7 6,", "151 55,28 55,76 130,110 190,122 177,109 135,49 128", ",73 190,49 55,176 143,166 57,54 157,182 151,134 10", "8,142 59,9 137,143 20,30 17,173 155,49 103,138 124", ",122 55,160 166,55 114,148 35,165 163,194 97,117 7", "4,144 53,95 109,77 78,117 67,186 142,80 11,55 74,3", "0 102,138 55,155 154,31 186,93 143,28 79,30 145,19", "0 91,54 143,122 56,74 167,55 50,119 109,28 4,181 1", "14,144 55,30 3,166 48,44 151,133 97"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 525798199;
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    int n = 200;
    vector<string> edges = {"136 32,99 196,25 190,89 1,116 13,95 134,58 200,139", " 91,185 91,96 134,91 167,91 66,85 11,139 184,82 91", ",189 107,102 21,91 163,146 75,74 91,139 36,49 17,9", "2 41,110 169,35 118,173 167,119 91,9 10,103 106,13", "9 6,14 34,91 41,31 86,120 91,109 91,91 1,100 121,9", "1 28,139 138,181 4,68 182,91 12,67 120,162 83,126 ", "69,199 82,164 154,197 171,175 90,128 163,145 199,9", "3 56,28 169,144 191,167 156,120 115,18 29,107 18,1", "16 60,91 10,91 170,91 141,129 185,45 125,159 145,1", "01 91,91 154,40 22,73 52,113 88,19 62,64 91,61 108", ",66 192,39 161,13 91,91 56,167 2,8 141,103 91,142 ", "183,91 172,57 130,147 85,91 14,187 141,66 25,44 16", "5,40 104,160 65,133 124,1 53,63 139,183 91,90 166,", "186 190,51 132,88 91,5 76,200 91,46 58,26 23,24 38", ",140 112,85 37,44 86,136 126,141 50,164 45,118 191", ",122 30,95 123,109 83,57 110,54 178,128 158,120 71", ",111 30,16 170,130 140,22 72,58 42,142 135,124 91,", "33 100,155 129,77 193,82 24,17 88,55 149,3 51,60 5", "4,179 185,59 172,105 174,162 7,176 151,72 174,91 9", "6,143 119,21 163,38 159,13 177,62 198,26 149,109 1", "57,121 43,196 154,117 103,146 91,78 100,87 1,90 12", "7,90 91,180 49,81 167,91 4,157 31,14 47,152 167,91", " 11,32 148,120 168,165 7,123 70,198 41,30 64,80 19", "7,141 27,15 176,135 104,183 105,90 153,178 177,131", " 90,137 180,39 158,195 93,28 193,91 52,96 97,20 78", ",97 132,25 79,133 189,190 66,125 99,76 185,176 84,", "1 150,23 73,91 68,188 61,91 15,70 3,77 112,144 19,", "113 137,100 91,98 10,74 69,161 65,121 78,160 102,1", "14 93,52 55,76 129,92 35,1 194,12 61,141 94,48 120", ",74 148,29 124,101 197"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 336951420;
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    int n = 200;
    vector<string> edges = {"104 1,11 184,93 188,33 183,16 44,154 10,21 70,81 1", "47,62 7,110 90,7 102,130 170,13 183,33 42,50 193,4", "2 12,47 200,200 1,97 181,184 194,35 117,100 183,17", "6 101,71 112,39 129,116 8,103 159,19 135,64 37,43 ", "6,22 94,55 7,187 172,144 182,31 125,169 194,52 150", ",153 32,177 199,85 116,11 170,170 176,91 182,183 1", "70,4 142,8 85,123 173,97 170,150 40,184 183,71 11,", "169 76,155 162,184 114,66 13,117 159,66 164,198 71", ",129 122,142 88,184 177,143 149,134 175,104 63,189", " 179,158 80,142 166,170 60,127 196,41 2,56 37,110 ", "73,121 170,137 72,48 45,191 165,170 48,7 53,24 70,", "183 72,89 148,99 82,95 172,196 36,90 106,170 157,2", "6 124,118 84,147 54,108 170,118 183,172 109,197 17", "0,18 74,149 34,103 123,7 11,25 86,24 21,155 100,16", "2 100,2 183,3 168,170 135,71 23,198 27,184 106,142", " 75,139 168,150 113,28 136,167 118,14 125,89 76,17", "4 15,107 172,141 52,97 29,10 145,183 153,183 44,86", " 170,99 184,152 22,80 115,74 143,120 173,31 17,26 ", "146,30 170,51 32,148 190,178 78,83 199,81 20,20 83", ",170 175,67 161,137 9,183 116,196 183,43 58,142 12", "6,111 172,13 164,94 152,44 87,184 143,117 184,189 ", "186,35 120,105 19,127 36,98 7,153 51,93 184,71 132", ",168 170,144 91,133 178,170 125,39 183,92 131,7 96", ",142 11,119 142,133 183,58 114,57 7,86 46,182 183,", "39 122,151 161,47 99,59 192,150 11,185 64,172 11,1", "97 140,115 183,167 84,64 170,69 172,14 17,93 154,9", "4 183,121 136,16 87,30 156,121 160,6 67,170 5,146 ", "124,135 105,77 73,189 15,79 194,38 175,163 172,195", " 41,9 72,114 151,160 28,5 180,115 158,21 183,138 1", "42,150 68,185 56,106 193,128 189,82 63,190 79,61 1", "30,11 189,92 65,165 188,50 77,18 59,54 177,183 146", ",145 191,133 78,49 130,34 192,195 2,92 170,60 171,", "33 12"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 728840933;
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    int n = 200;
    vector<string> edges = {"196 115,115 197,35 199,95 141,147 11,172 2,39 63,1", "68 49,158 121,165 109,48 142,24 7,95 192,117 192,1", "99 28,99 95,176 48,95 49,88 93,180 119,169 198,5 1", "94,56 86,174 132,166 178,95 180,80 116,153 93,42 9", "9,165 79,165 191,200 62,73 14,22 147,145 57,157 14", "1,44 98,48 189,195 95,4 24,41 132,121 89,95 145,95", " 115,169 111,147 46,181 68,137 194,157 18,73 164,1", "15 32,95 74,193 180,43 94,49 12,15 186,12 70,70 52", ",29 95,155 49,38 137,54 93,151 78,124 187,192 185,", "195 182,62 129,29 167,33 53,124 183,91 132,171 173", ",33 95,23 81,123 115,177 33,66 94,98 145,150 33,13", "6 115,100 180,126 116,143 160,47 81,99 16,99 114,1", "63 132,173 146,95 77,118 28,34 192,45 180,95 39,76", " 165,148 133,81 31,95 166,95 86,96 63,8 25,156 93,", "60 169,94 40,151 133,162 184,120 121,1 95,179 166,", "192 90,95 93,104 121,95 62,95 160,30 3,8 138,48 95", ",116 95,168 27,1 15,3 95,173 85,173 128,95 121,124", " 159,74 134,135 192,118 4,86 10,194 95,62 17,95 13", "2,113 5,147 95,84 8,160 112,59 121,165 175,154 147", ",65 147,52 27,3 144,95 94,97 192,87 173,36 29,82 1", "15,92 195,116 106,139 124,165 69,148 29,160 152,12", "4 64,68 39,81 108,55 166,74 127,105 132,77 37,95 8", ",20 166,124 107,14 95,35 24,160 131,121 58,141 2,9", "3 125,72 86,167 78,13 192,95 165,21 121,81 95,190 ", "93,95 173,50 166,101 81,19 74,14 103,99 6,147 71,6", "7 195,51 81,81 83,124 95,188 180,48 9,77 26,44 145", ",147 102,132 130,140 180,161 173,75 94,61 33,170 8", "6,14 164,95 169,149 3,24 95,166 122,77 110,184 1"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 95710857;
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    int n = 200;
    vector<string> edges = {"127 161,183 124,187 3,192 85,160 196,44 42,187 111", ",180 100,195 187,145 97,18 107,84 4,141 189,159 14", "0,99 160,125 138,187 177,168 96,175 68,71 93,8 182", ",16 177,187 168,186 151,23 45,32 30,156 177,185 19", "4,187 155,30 190,187 81,82 187,4 173,23 74,11 56,1", "5 187,81 150,69 175,66 178,4 187,66 33,38 187,163 ", "3,175 40,187 112,48 147,152 5,49 65,109 121,136 18", "7,196 92,11 10,187 67,187 180,141 46,174 82,116 4,", "150 73,133 14,31 57,11 171,76 1,187 114,180 29,38 ", "105,129 37,78 46,143 38,122 21,128 80,5 147,104 71", ",72 101,1 8,149 51,70 74,155 115,51 163,54 135,82 ", "87,169 129,11 132,24 134,168 158,196 99,151 111,14", "4 186,50 47,167 177,175 187,140 61,165 108,114 137", ",137 197,187 97,90 153,71 77,198 137,177 20,175 26", ",50 187,38 110,139 82,145 98,179 170,151 144,82 14", "6,187 92,27 81,28 82,177 164,3 149,124 17,63 101,7", "9 181,24 187,54 85,112 166,106 162,35 134,179 55,1", "3 170,124 39,42 187,17 183,23 70,125 187,196 59,18", "4 170,195 25,157 187,94 52,127 187,107 130,83 178,", "11 187,187 30,58 179,191 21,129 187,112 14,165 187", ",187 79,187 194,153 9,80 30,34 38,65 199,31 86,60 ", "15,24 19,187 141,145 123,152 48,168 107,187 140,14", "8 171,153 102,191 187,97 118,155 126,120 106,86 22", ",89 137,4 95,103 15,187 53,106 187,7 157,22 187,14", " 131,54 187,187 65,24 176,187 71,113 104,187 101,5", "7 86,172 90,23 136,64 119,124 67,94 64,42 117,187 ", "179,112 154,52 119,142 21,142 2,97 12,71 6,78 189,", "2 21,155 109,62 81,24 200,188 175,36 4,8 187,169 1", "93,119 187,187 66,187 153,187 152,43 86,75 162,41 ", "38,151 91,60 88,89 197"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 137710962;
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    int n = 200;
    vector<string> edges = {"192 65,36 71,12 20,12 136,166 61,147 14,195 166,17", "7 143,143 160,27 100,122 177,15 73,105 171,2 18,16", "0 142,143 164,50 81,27 3,75 15,104 164,35 175,166 ", "143,150 143,143 86,38 179,83 27,30 87,194 164,183 ", "143,147 143,186 127,15 180,146 164,143 127,183 74,", "37 81,128 179,158 143,62 34,26 21,98 108,31 166,16", "6 197,13 127,46 23,200 59,159 164,143 72,79 58,160", " 49,64 96,139 124,117 25,103 58,130 166,199 5,124 ", "143,143 96,55 116,84 152,71 114,143 27,163 25,112 ", "191,71 91,5 76,140 15,196 105,200 102,12 39,177 15", "1,24 149,43 35,96 133,143 35,86 113,160 181,99 177", ",177 78,164 8,12 152,109 179,94 27,143 200,161 65,", "89 143,14 52,66 72,27 32,115 15,184 158,143 87,167", " 86,15 189,179 143,49 165,143 116,54 125,148 87,27", " 153,144 35,12 143,120 164,147 137,172 15,54 143,5", " 6,87 82,19 166,160 16,89 168,132 15,121 177,147 1", ",143 149,143 108,80 182,17 71,65 143,143 5,143 15,", "87 126,22 149,97 27,56 108,27 145,42 177,193 177,1", "29 87,86 11,107 158,111 23,18 23,173 21,89 198,143", " 23,181 134,89 80,70 105,65 60,110 200,57 147,72 9", "2,177 88,35 48,27 45,176 166,105 143,143 71,106 12", "4,154 89,101 116,96 190,123 79,116 169,68 15,47 96", ",25 155,87 10,79 62,174 166,150 63,149 118,23 69,2", "3 187,138 79,177 44,119 150,33 158,127 135,89 141,", "40 166,12 131,93 36,51 54,87 7,143 81,4 81,72 67,9", "1 28,183 170,96 77,150 157,108 85,95 164,25 143,35", " 191,124 162,143 79,90 137,9 190,21 156,164 41,164", " 178,188 183,87 185,143 21,53 87,54 29"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 674497680;
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    int n = 200;
    vector<string> edges = {"33 106,95 16,32 196,166 153,200 64,131 140,101 33,", "189 150,152 193,156 117,189 111,13 73,18 197,27 24", ",165 150,192 153,183 74,133 200,77 24,37 59,16 9,4", "7 123,27 88,27 169,167 2,81 61,87 122,80 153,14 16", "7,140 124,62 169,2 196,148 178,59 16,189 29,189 3,", "132 110,130 105,200 121,189 143,104 153,140 110,20", "0 16,30 19,165 68,199 1,59 49,23 134,160 42,177 15", "8,119 27,7 190,189 2,189 36,161 48,21 56,83 189,28", " 151,99 193,5 169,18 157,169 156,162 153,169 79,19", "1 16,43 121,16 118,195 28,199 110,102 89,114 16,17", "1 200,108 158,153 27,181 36,173 134,16 30,45 153,1", "37 5,85 82,168 16,39 189,66 27,195 189,169 31,16 2", ",149 189,98 95,153 142,110 48,70 153,156 128,185 4", "0,153 172,46 145,190 89,148 200,190 86,109 27,138 ", "162,103 27,200 180,110 67,15 16,32 183,94 153,46 1", "6,93 187,154 170,127 162,153 152,153 110,75 58,76 ", "169,141 169,186 22,21 39,108 177,122 72,123 153,56", " 39,65 92,194 169,51 126,136 188,189 91,23 173,110", " 69,74 12,34 189,27 107,129 57,147 64,26 103,29 6,", "135 67,159 11,16 185,115 169,157 197,101 14,117 12", "8,38 130,49 37,169 11,146 155,200 53,5 20,184 6,13", "7 20,189 157,169 97,22 110,95 164,144 27,134 169,1", "00 27,150 68,86 102,16 113,90 50,155 94,80 125,27 ", "160,64 71,85 27,16 112,200 169,130 169,153 4,200 5", "7,198 8,196 74,110 198,179 27,162 96,86 2,108 16,1", "74 119,189 73,175 169,200 176,153 58,10 16,114 63,", "90 9,78 110,176 163,80 84,189 25,189 126,70 52,83 ", "139,136 16,153 44,110 189,189 154,9 50,61 113,81 1", "13,99 152,62 116,184 29,151 195,192 41,73 60,25 18", "2,187 200,92 169,167 33,94 146,169 54,110 55,72 16", ",153 120,54 35,84 125,17 130,87 72"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 836657813;
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    int n = 200;
    vector<string> edges = {"112 107,184 80,55 5,55 163,134 121,45 10,99 1,94 1", "50,26 89,35 94,90 111,188 187,154 62,21 87,107 88,", "97 171,90 55,42 9,10 34,200 55,86 178,153 46,163 1", "13,182 198,157 109,69 81,179 50,110 200,197 37,92 ", "55,55 7,68 6,31 92,55 133,76 140,185 146,160 22,14", "0 85,106 27,55 20,139 18,55 49,78 55,70 156,148 13", "1,76 85,200 15,55 71,40 194,8 138,152 170,55 51,49", " 118,72 142,133 84,55 134,133 162,68 30,198 39,114", " 186,95 158,145 119,55 158,55 42,193 128,4 52,55 1", "71,55 18,46 11,73 12,134 131,55 137,19 26,93 149,1", "04 24,183 157,126 154,79 7,107 116,62 126,61 55,10", "0 137,186 39,182 55,183 98,132 121,37 55,15 59,27 ", "74,32 163,196 51,50 89,55 75,196 124,72 55,22 91,9", "0 130,20 28,167 92,168 117,187 8,133 136,55 104,10", "4 67,128 141,55 4,9 129,61 190,183 122,126 55,161 ", "71,75 101,180 149,164 4,51 48,87 55,189 55,54 55,1", "83 14,153 11,33 70,128 135,123 178,55 44,100 35,12", "7 107,96 18,55 89,55 183,17 162,5 105,101 56,55 86", ",176 107,47 71,30 21,189 38,55 27,175 69,23 187,18", "6 182,7 53,33 55,82 97,27 169,44 73,117 55,55 188,", "78 3,1 33,103 49,43 97,55 107,42 41,42 29,130 2,20", " 147,191 200,55 192,183 155,37 143,55 128,69 55,11", "7 177,36 104,138 188,58 91,185 78,63 120,144 37,15", "1 80,145 107,156 1,166 54,158 159,152 55,55 63,42 ", "125,60 117,195 200,108 86,91 55,102 192,66 72,68 8", "7,34 115,64 133,172 158,65 152,49 77,133 57,18 165", ",133 16,61 181,153 55,83 5,55 76,181 199,13 171,55", " 80,55 149,173 71,137 94,13 82,25 69,174 183,12 44", ",75 40,55 10"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 998706208;
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    int n = 200;
    vector<string> edges = {"12 183,79 144,13 104,25 72,98 38,45 170,112 82,105", " 111,47 12,78 157,12 56,12 5,47 185,97 12,27 12,73", " 126,138 12,136 172,137 113,152 24,162 127,12 154,", "21 101,97 181,126 128,53 119,150 189,87 34,41 12,7", "3 18,74 12,12 7,74 174,51 48,116 5,84 147,22 50,12", " 25,112 159,149 163,37 39,4 12,110 131,111 197,111", " 184,48 12,149 99,164 4,74 187,92 73,124 16,123 58", ",27 83,101 12,37 142,15 12,148 139,4 69,148 117,18", "0 153,90 149,131 12,12 173,88 63,63 108,54 55,146 ", "26,130 52,121 20,133 107,74 111,141 162,178 122,12", " 68,187 80,97 103,175 85,62 170,75 76,104 61,118 1", "62,12 126,19 120,140 142,4 171,49 55,68 6,12 150,1", "09 1,166 182,200 149,12 191,12 142,9 12,24 12,12 1", "6,102 120,22 168,138 169,67 154,94 122,160 91,106 ", "12,12 120,39 140,109 165,155 54,12 104,198 73,151 ", "46,176 48,12 14,79 112,12 147,12 129,65 57,71 162,", "32 136,12 50,119 12,12 144,8 12,3 104,190 76,56 11", "5,156 12,196 101,12 49,150 179,46 96,135 109,89 12", ",76 125,150 186,93 68,136 12,12 70,60 175,106 57,1", "2 40,157 163,54 44,107 24,138 62,163 38,77 47,12 1", "82,158 139,188 9,86 162,174 192,33 7,143 12,132 10", ",126 132,27 59,64 128,159 144,34 28,127 12,81 7,15", "4 199,52 114,29 185,161 195,36 76,26 167,145 97,76", " 156,155 49,84 66,35 68,12 17,12 46,25 123,17 109,", "195 12,153 12,5 23,134 119,12 122,170 169,42 199,1", "60 12,104 95,109 2,12 121,31 110,12 175,63 12,97 1", "77,113 151,34 12,43 56,39 193,12 52,30 68,148 12,1", "00 122,113 96,12 26,163 12,12 194,11 131"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 27906954;
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    int n = 200;
    vector<string> edges = {"86 174,99 151,183 11,26 72,82 49,66 58,198 64,181 ", "15,89 124,78 79,21 30,120 70,94 53,58 6,149 46,82 ", "168,119 128,89 192,130 10,79 152,45 182,172 42,180", " 99,156 15,95 153,52 118,177 55,75 6,41 195,6 22,7", "4 57,184 125,162 138,171 23,188 170,6 26,6 99,116 ", "10,58 112,169 166,83 117,88 74,26 106,102 47,150 1", "45,188 140,50 58,111 74,6 52,197 6,46 6,158 46,120", " 161,188 6,120 164,102 91,182 6,148 172,68 25,92 7", "4,177 145,131 126,6 21,103 136,6 174,32 182,155 14", "7,6 15,94 117,6 116,26 87,19 186,105 64,21 29,134 ", "23,135 67,162 35,6 172,131 6,43 6,1 82,6 194,165 1", "95,55 110,182 2,135 133,6 79,26 132,176 64,135 6,6", " 142,119 37,56 14,69 81,93 195,188 139,6 74,166 6,", "9 155,185 119,44 79,107 99,73 167,6 120,82 101,6 1", "19,6 17,23 98,113 196,34 195,33 174,182 4,30 190,1", "38 160,135 146,38 59,189 54,80 142,89 6,90 69,12 8", "1,21 51,195 153,6 195,79 100,64 6,121 19,72 199,65", " 53,26 84,90 97,195 59,31 28,23 6,103 43,174 16,13", "0 109,147 20,116 129,74 60,157 89,122 184,179 23,1", "5 163,8 102,52 200,16 18,187 183,43 144,83 22,194 ", "145,116 109,194 110,39 79,13 25,148 76,27 64,162 1", "67,58 96,46 7,6 162,6 102,3 121,197 108,162 141,14", "4 136,175 76,22 53,178 188,197 19,173 64,104 17,54", " 80,154 15,86 18,102 115,46 77,172 175,120 193,123", " 89,6 81,24 99,108 3,169 20,85 131,114 82,119 127,", "183 71,184 6,190 51,36 162,155 166,143 162,5 183,6", "1 43,82 6,63 25,6 183,26 196,131 40,131 48,135 62,", "31 64,97 81,6 25,191 25,14 6,46 137,159 173"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 261613276;
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    int n = 200;
    vector<string> edges = {"46 71,7 83,1 50,161 6,126 135,197 108,177 89,199 2", "5,183 59,179 56,113 199,102 107,49 50,188 159,110 ", "121,63 147,174 46,151 86,61 143,159 166,72 126,40 ", "132,26 137,142 155,104 15,64 28,159 51,159 99,50 4", "6,46 183,59 84,114 159,29 28,67 104,69 55,46 132,1", "66 94,136 37,28 146,78 104,143 35,77 22,137 128,74", " 161,24 194,181 16,126 117,92 71,104 11,154 159,15", "9 127,61 133,159 52,9 69,105 112,78 79,28 91,27 72", ",39 159,28 168,197 169,88 69,94 65,183 69,141 190,", "153 108,95 107,189 159,28 85,157 97,174 42,94 80,1", "26 123,174 10,28 20,178 69,140 133,31 61,5 150,108", " 61,159 28,195 108,190 69,109 44,105 94,14 69,143 ", "101,75 78,23 142,36 104,46 70,104 21,187 15,196 10", "4,94 102,159 165,131 58,28 89,4 179,179 46,175 78,", "82 78,159 2,90 77,3 192,156 99,185 69,159 164,61 1", "63,160 33,98 70,126 167,111 96,94 138,95 102,197 6", "8,183 126,69 87,3 183,28 161,62 8,54 191,77 61,50 ", "60,129 55,34 16,73 195,159 134,44 162,5 158,144 17", "9,121 173,3 122,191 180,106 3,69 57,130 153,93 19,", "18 177,152 36,53 61,61 131,182 153,198 146,159 13,", "28 12,196 124,147 159,125 28,16 28,149 70,166 46,1", "59 96,108 104,61 121,28 81,132 66,28 62,77 172,159", " 170,3 43,151 104,59 128,28 100,7 104,30 118,44 10", "8,139 132,195 186,193 159,120 94,87 103,171 43,69 ", "19,47 104,28 136,108 191,18 89,61 69,159 145,159 2", "00,38 94,69 148,184 85,26 59,69 41,142 108,199 46,", "176 71,5 108,76 159,17 3,157 104,116 70,33 61,115 ", "119,118 28,32 174,28 48,28 104,115 159,69 45,159 2", "4"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 454133432;
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    int n = 200;
    vector<string> edges = {"95 43,40 129,40 177,40 98,98 49,111 76,19 87,53 83", ",53 22,40 79,33 145,40 82,154 62,71 65,33 34,63 40", ",199 157,151 40,28 167,99 63,40 60,193 50,170 40,1", "84 116,154 13,182 135,189 196,96 89,157 40,40 16,1", "66 44,69 140,158 86,6 23,169 102,155 54,40 42,181 ", "26,133 40,158 24,40 198,47 151,31 40,194 138,152 3", "9,56 143,40 48,55 112,105 58,40 179,176 169,7 46,4", "0 54,40 53,29 159,40 141,88 40,144 158,81 108,132 ", "61,6 38,2 40,183 40,40 97,40 159,84 63,68 126,180 ", "60,175 30,115 131,21 186,28 40,182 69,195 97,73 40", ",127 130,91 84,43 40,88 39,25 143,10 80,101 92,149", " 42,77 163,160 68,78 159,171 188,40 18,120 147,40 ", "21,72 59,103 164,119 28,11 200,122 73,117 74,40 12", "4,125 40,105 165,40 184,55 4,40 145,144 40,12 40,4", "0 76,33 70,104 115,109 1,89 40,98 148,142 48,40 71", ",192 40,161 94,90 40,40 156,190 113,164 82,44 109,", "139 79,173 40,185 162,40 137,124 106,32 188,137 16", "3,1 166,67 8,130 46,99 91,40 136,173 108,40 160,11", "8 51,24 144,17 110,2 123,85 71,146 74,59 40,74 40,", "40 55,134 23,45 40,197 183,165 40,174 10,40 35,124", " 193,150 40,11 114,40 10,154 40,87 20,127 46,191 4", "0,52 157,178 60,145 34,40 194,40 75,135 140,94 17,", "23 38,170 175,169 40,67 156,40 64,128 40,195 185,1", "4 40,40 1,36 40,40 182,40 115,40 9,40 171,16 118,1", "11 5,38 40,40 121,40 61,161 40,3 186,47 37,57 42,2", " 187,136 196,185 97,40 130,120 191,11 40,35 41,40 ", "190,73 172,25 40,150 93,15 155,27 142,153 61,17 16", "1,14 26,43 66,168 79,40 92,50 106,183 107,40 87,10", "0 59"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 653540078;
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    int n = 200;
    vector<string> edges = {"37 102,194 37,37 128,97 121,170 102,199 163,91 114", ",37 65,151 37,37 87,37 46,37 58,37 69,135 169,68 2", "3,46 33,165 21,115 37,31 70,174 37,12 113,99 134,1", "7 160,25 15,37 9,194 149,148 37,37 133,74 63,65 12", "3,51 4,26 125,130 104,37 41,158 61,37 197,57 37,19", "9 186,168 175,133 86,169 116,176 35,41 103,51 22,1", "63 90,37 32,156 30,48 37,175 37,48 85,37 67,144 11", "5,86 92,37 134,45 37,46 64,37 96,72 37,5 177,51 37", ",21 41,37 82,157 172,20 31,37 105,37 139,106 94,10", " 37,128 93,193 132,37 141,80 198,37 161,125 37,37 ", "146,139 78,83 49,38 60,12 37,37 30,56 105,37 31,19", "2 49,114 36,19 2,75 142,44 173,43 37,37 13,54 16,1", "11 146,63 37,37 129,134 136,35 183,94 10,95 147,37", " 193,37 153,182 15,81 190,180 37,164 187,37 66,37 ", "2,172 37,12 119,104 76,157 189,108 191,61 37,29 15", "0,153 109,37 81,107 162,155 28,1 183,153 79,27 40,", "39 37,200 2,37 110,106 135,58 167,126 143,37 160,1", "75 154,3 171,58 52,159 180,23 87,68 77,120 193,37 ", "164,37 97,37 124,42 148,103 165,117 85,34 13,167 5", "2,125 8,3 37,188 195,95 38,112 16,127 142,65 137,3", "7 162,37 163,37 191,17 140,179 198,37 198,147 60,1", "89 91,62 39,110 100,116 10,89 37,37 150,126 14,59 ", "145,196 66,37 75,49 37,15 37,199 90,47 90,60 37,84", " 194,130 37,24 92,24 133,37 173,145 37,82 138,140 ", "160,195 37,88 110,1 176,37 55,128 53,6 37,75 127,3", "5 37,37 28,96 98,7 74,36 172,56 18,161 73,161 152,", "164 11,141 181,129 166,173 50,124 71,37 16,27 89,1", "78 30,118 145,185 9,148 131,65 101,37 143,72 184,7", "7 87,6 122,177 37"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 930961593;
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    int n = 200;
    vector<string> edges = {"197 191,38 150,14 180,92 139,82 57,75 92,21 31,188", " 37,12 161,38 114,16 53,24 72,58 149,21 93,83 16,4", "3 129,166 14,176 10,43 148,35 43,144 190,100 143,5", "4 31,127 16,51 33,114 187,43 34,14 12,176 46,14 14", "6,195 31,145 92,55 146,14 178,119 16,142 27,92 68,", "51 176,111 43,177 97,43 162,173 185,146 5,146 184,", "167 92,95 92,130 146,153 16,76 79,146 82,151 43,17", "6 163,67 14,143 106,43 64,176 143,50 187,10 15,1 9", "2,189 146,43 25,92 105,14 19,143 45,92 85,188 159,", "54 195,16 43,200 50,166 8,123 43,16 170,14 43,14 1", "64,63 9,43 7,110 84,170 158,62 33,43 140,29 168,16", " 84,143 21,182 143,160 48,92 18,196 176,71 78,27 1", "76,114 177,134 122,3 114,115 95,41 146,126 121,16 ", "92,153 125,81 92,103 146,58 146,16 9,92 165,175 11", "4,134 176,61 19,122 157,43 137,66 36,91 92,46 104,", "176 13,14 36,65 107,113 146,196 135,86 114,146 141", ",92 193,77 43,128 105,118 43,36 112,3 198,13 133,7", "0 146,92 74,98 114,176 92,32 143,62 51,121 176,181", " 92,114 192,74 152,146 56,176 197,23 5,185 92,76 1", "14,90 170,14 107,200 187,16 72,127 156,114 159,94 ", "16,22 11,44 146,92 116,146 59,87 154,14 71,143 6,4", " 114,92 99,16 199,22 146,42 53,49 175,108 70,146 1", "32,192 28,171 86,26 100,183 146,69 43,114 143,131 ", "92,146 114,194 146,92 136,114 102,89 43,17 146,155", " 146,14 30,179 98,102 169,120 92,39 14,52 147,101 ", "146,16 29,116 80,186 92,60 17,43 117,39 47,37 159,", "14 160,2 138,134 157,30 73,92 40,88 18,174 94,14 1", "54,124 146,172 163,109 146,20 16,2 176,16 190,96 4", ",176 147"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 626262408;
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    int n = 200;
    vector<string> edges = {"34 103,11 89,133 148,166 9,129 24,103 123,113 123,", "123 89,57 123,102 99,28 19,183 6,125 123,144 102,1", "58 123,37 158,199 75,154 186,183 138,107 26,123 12", ",21 128,8 127,178 185,72 1,110 24,183 194,85 178,1", "95 114,73 54,125 84,55 141,189 57,196 36,69 40,115", " 40,62 92,124 54,197 113,60 165,79 15,106 155,47 1", "60,21 123,66 186,171 104,77 113,183 46,117 196,72 ", "83,123 114,150 106,157 134,125 40,149 59,134 25,10", "4 123,119 103,40 82,88 182,169 108,95 123,104 68,6", "4 21,13 178,100 21,131 52,162 88,14 106,47 199,89 ", "92,187 123,39 149,126 165,41 3,49 42,178 70,183 12", "3,37 20,158 27,143 123,168 28,196 74,174 15,146 29", ",123 94,26 123,86 199,134 111,141 95,198 149,43 65", ",47 123,141 188,123 54,120 29,122 42,30 65,29 176,", "54 159,108 33,123 146,151 133,18 123,113 172,134 1", "23,7 94,109 133,106 121,200 112,102 123,170 159,16", " 123,21 80,149 123,161 113,57 45,143 22,70 58,143 ", "44,114 61,70 123,114 97,123 166,118 186,123 192,28", " 123,94 191,123 165,24 187,87 104,53 65,192 67,123", " 96,186 123,167 108,123 108,32 183,12 131,130 165,", "118 190,102 136,177 143,26 56,28 137,91 149,134 18", "1,5 3,28 105,78 165,71 42,146 51,123 65,3 48,175 2", "1,10 92,112 180,153 166,93 37,135 113,90 87,102 2,", "131 81,28 35,164 106,184 18,169 173,142 94,106 123", ",23 65,116 15,139 65,112 132,94 17,143 98,96 88,14", "7 37,42 76,193 153,57 152,38 29,5 123,192 15,149 4", ",123 42,123 200,114 163,140 18,166 145,148 101,127", " 26,133 123,156 196,63 102,92 179,16 72,196 123,50", " 199,45 31"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 360785809;
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    int n = 200;
    vector<string> edges = {"138 112,164 35,139 72,111 182,25 45,80 35,93 20,67", " 147,113 145,24 177,38 66,92 45,107 185,23 167,190", " 148,14 81,140 184,60 97,7 79,7 45,154 32,141 26,1", "24 39,51 131,169 96,79 8,27 136,58 64,107 114,195 ", "2,130 9,34 96,184 104,45 113,22 194,197 94,178 36,", "64 150,30 198,197 160,85 97,138 25,7 71,178 75,142", " 66,151 199,106 45,190 153,43 45,67 170,63 180,121", " 137,135 41,139 24,37 35,99 199,93 29,128 149,88 8", "3,163 178,93 189,196 125,131 148,192 145,60 87,108", " 74,46 104,54 88,40 142,73 198,156 152,62 45,136 1", "25,61 64,194 195,44 72,127 45,11 86,45 126,70 109,", "83 176,194 82,40 105,101 192,147 103,70 4,48 90,64", " 45,45 70,152 17,90 16,132 34,144 7,28 109,72 15,1", "88 106,4 133,17 113,186 119,91 166,11 68,32 92,125", " 52,100 114,78 161,25 29,120 80,200 45,87 157,4 23", ",56 43,181 17,15 102,168 89,121 32,176 143,87 197,", "129 18,125 149,21 135,45 15,67 45,175 29,69 99,45 ", "123,57 64,50 9,168 21,63 7,189 112,191 123,5 16,17", "4 95,173 65,6 84,118 98,49 106,38 18,127 107,173 1", "93,184 96,158 159,26 116,104 45,117 1,92 115,116 3", "0,170 10,125 45,120 191,114 86,126 5,125 39,45 94,", "163 81,172 115,144 12,106 162,88 43,51 171,5 130,1", "77 102,171 183,199 98,134 61,106 1,139 31,64 77,7 ", "55,36 45,30 45,193 166,194 45,49 165,127 68,187 28", ",199 45,42 19,41 108,187 23,199 95,62 173,155 45,2", "00 66,58 3,198 78,199 76,194 119,182 75,106 122,67", " 47,33 67,141 78,77 179,37 123,83 13,94 85,45 59,1", "72 53,194 158,46 132,155 131,110 37,152 101,188 14", "6,121 53,67 19,56 143,135 59,65 6"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 941625335;
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    int n = 200;
    vector<string> edges = {"149 77,77 118,77 170,77 98,62 77,77 178,151 77,77 ", "31,48 77,77 41,97 77,77 183,113 77,44 77,91 77,77 ", "3,77 122,172 77,77 169,77 187,167 77,77 114,77 39,", "77 102,77 33,92 77,162 77,77 24,8 77,171 77,77 72,", "77 75,63 77,61 77,77 73,77 69,190 77,77 20,124 77,", "15 77,34 77,77 29,84 77,112 77,77 103,19 77,77 200", ",176 77,87 77,143 77,30 77,54 77,133 77,77 148,193", " 77,125 77,77 159,11 77,132 77,77 81,79 77,60 77,1", "39 77,77 129,77 12,77 104,77 198,95 77,22 77,77 11", "0,77 94,65 77,77 175,77 74,185 77,77 10,21 77,77 2", "3,77 152,86 77,80 77,77 36,56 77,77 165,77 53,177 ", "77,77 99,77 18,96 77,77 89,77 78,77 144,77 68,77 1", "40,77 181,77 134,26 77,108 77,77 25,77 6,195 77,2 ", "77,77 164,58 77,77 155,77 196,43 77,77 67,28 77,14", "7 77,77 109,77 70,77 142,77 161,77 14,77 128,77 10", "1,77 52,77 107,77 100,4 77,77 119,186 77,77 173,76", " 77,77 182,42 77,77 106,77 154,168 77,49 77,59 77,", "174 77,77 64,77 163,192 77,71 77,188 77,13 77,77 1", "53,77 194,66 77,131 77,77 146,50 77,35 77,1 77,126", " 77,157 77,77 166,77 85,191 77,145 77,179 77,77 11", "5,111 77,77 17,156 77,77 88,158 77,120 77,77 47,46", " 77,77 32,105 77,184 77,77 127,77 123,77 116,16 77", ",136 77,83 77,77 199,141 77,77 38,77 135,77 150,77", " 93,57 77,138 77,55 77,77 90,77 45,77 180,82 77,5 ", "77,77 189,77 9,77 27,77 130,40 77,137 77,77 160,11", "7 77,77 37,77 197,77 51,77 7,77 121"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 583631762;
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    int n = 200;
    vector<string> edges = {"23 166,41 17,184 121,121 187,31 104,184 41,7 163,5", "9 41,184 79,166 57,14 61,106 190,139 18,198 7,53 1", "49,37 6,143 184,193 79,49 78,36 177,78 3,3 165,174", " 105,118 68,31 160,199 67,86 100,124 51,152 79,6 7", "5,2 157,41 99,199 184,32 171,108 91,147 71,13 79,1", "74 96,166 196,184 63,39 174,35 184,184 86,51 172,2", " 70,16 145,30 31,143 107,78 184,139 192,90 164,82 ", "89,116 186,7 194,64 26,71 197,195 116,58 108,114 1", "39,54 6,182 2,135 190,170 69,6 184,184 116,31 184,", "87 177,71 25,7 82,125 79,127 167,190 29,79 48,92 6", "3,90 155,26 10,167 60,190 11,170 86,63 98,66 167,7", "6 108,86 122,184 51,1 78,63 138,26 119,108 184,44 ", "54,134 75,190 15,190 112,185 86,28 116,184 191,184", " 2,84 143,31 27,65 167,143 169,137 108,24 71,35 83", ",73 51,109 86,56 2,85 26,41 148,102 174,40 199,6 1", "11,71 184,190 38,61 191,143 154,190 184,101 166,11", "0 116,24 183,158 199,191 53,2 4,184 26,51 136,113 ", "108,141 174,7 173,144 108,63 161,142 139,139 146,1", "89 26,123 121,131 116,121 126,156 143,120 51,117 6", "3,198 200,128 63,2 20,168 83,83 181,121 88,145 78,", "151 79,175 41,162 174,21 197,184 87,140 116,31 50,", "166 184,132 108,68 87,46 199,100 43,133 167,103 26", ",139 184,116 19,121 45,52 31,159 41,130 167,181 17", "8,184 7,41 34,33 90,95 79,63 62,78 72,139 150,174 ", "153,68 36,176 90,166 180,115 90,90 12,90 5,178 35,", "129 158,121 81,184 90,166 188,51 8,51 47,2 93,174 ", "184,71 97,74 143,53 14,184 167,26 179,32 199,94 31", ",42 121,80 167,9 166,55 143,77 139,22 6"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 662030330;
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    int n = 200;
    vector<string> edges = {"143 51,24 66,16 129,132 99,199 157,2 58,79 196,142", " 1,42 144,154 91,192 44,117 49,57 46,62 183,10 56,", "180 96,182 147,199 142,10 133,126 95,33 101,126 17", "8,109 128,156 187,85 110,47 116,41 130,68 72,168 1", "25,93 59,38 177,155 106,65 166,130 55,106 68,65 71", ",196 101,182 77,191 75,59 143,55 43,191 145,72 88,", "161 117,155 45,179 181,15 109,120 191,59 170,143 2", "00,65 122,183 103,63 40,159 153,36 106,117 101,163", " 91,21 190,26 65,72 34,130 46,175 109,187 130,173 ", "40,165 19,104 49,20 86,72 195,24 32,126 96,143 151", ",40 136,28 34,38 55,106 165,184 148,179 143,161 19", "0,96 123,159 106,182 129,25 30,148 1,117 56,191 16", "2,73 172,193 72,103 62,83 109,125 130,130 1,47 185", ",189 70,161 21,95 68,142 119,190 114,90 25,39 137,", "72 94,115 81,113 189,65 143,167 151,23 4,16 164,10", "1 109,135 47,151 80,65 107,64 8,86 95,43 22,14 163", ",95 78,113 138,27 179,16 109,105 148,188 191,111 1", "72,150 39,77 50,163 154,169 126,84 179,29 151,141 ", "193,39 143,5 47,96 118,104 108,41 82,174 64,164 87", ",146 83,65 191,24 39,176 142,42 69,126 53,95 158,7", "6 142,126 17,189 1,133 124,76 12,182 11,72 117,129", " 191,164 132,6 143,143 3,39 55,58 72,183 1,78 171,", "142 52,69 144,119 54,189 67,191 97,7 191,72 115,35", " 192,196 197,65 112,191 127,101 192,89 95,109 139,", "110 55,198 143,131 100,16 47,143 194,101 25,99 164", ",105 184,36 149,126 40,191 37,101 64,9 191,66 32,1", "60 158,92 126,95 134,131 95,111 73,142 126,186 59,", "102 39,176 74,18 108,60 191,61 143,152 134,16 163,", "31 142,11 140,23 72,65 48,42 1,39 73,94 98,121 175", ",55 13"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 155548528;
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    int n = 200;
    vector<string> edges = {"39 55,104 107,198 11,41 125,75 27,172 97,192 155,4", "6 3,75 130,125 75,44 55,75 127,75 187,63 38,169 74", ",88 24,196 164,47 120,75 190,184 194,189 130,59 52", ",198 196,108 137,75 163,130 180,183 10,109 9,3 119", ",135 167,177 61,31 157,34 75,78 109,90 17,147 27,1", "32 73,34 3,198 52,199 70,21 146,75 87,7 20,64 177,", "118 125,160 172,174 177,127 48,69 175,109 75,162 1", "26,45 55,136 133,131 38,75 35,19 34,75 169,186 51,", "177 90,110 16,128 23,87 113,144 76,77 23,179 88,25", " 187,127 102,68 21,54 135,190 13,139 128,75 23,55 ", "93,116 109,178 75,198 75,16 62,47 82,55 14,27 135,", "169 92,147 28,111 153,56 177,192 8,32 158,75 171,1", "92 75,171 2,38 1,75 144,81 130,35 141,191 52,136 9", "9,184 65,178 58,152 40,151 67,57 192,161 130,18 15", "3,24 67,37 7,7 170,117 24,112 87,96 169,168 152,35", " 136,198 12,35 51,7 140,145 178,72 10,50 122,184 1", "49,40 143,32 23,60 169,34 29,75 38,104 142,144 157", ",169 166,106 184,61 182,35 132,84 64,148 132,153 2", "3,19 159,10 24,190 53,70 197,162 83,4 90,190 16,27", " 85,33 23,103 34,91 123,172 75,121 88,38 49,55 75,", "144 36,184 94,76 176,100 157,109 165,185 40,124 19", "2,75 184,144 22,71 163,137 198,15 130,30 24,105 32", ",122 152,193 38,190 43,187 154,144 21,173 130,98 5", "5,192 66,79 35,129 34,137 5,152 26,75 104,109 188,", "109 150,80 123,75 24,38 101,7 75,42 171,138 53,115", " 192,152 70,6 129,156 7,75 47,175 114,163 134,75 1", "62,89 27,86 7,75 177,95 169,152 75,200 19,61 195,1", "81 184,27 123,175 190"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 32162911;
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    int n = 200;
    vector<string> edges = {"89 38,59 75,99 103,38 131,114 65,94 72,102 166,3 6", "9,180 183,164 132,100 129,116 194,10 60,155 166,13", "5 93,43 70,143 171,45 197,37 69,131 41,142 138,38 ", "120,38 164,120 32,149 67,46 173,156 163,61 21,38 6", "9,101 44,90 38,190 96,141 25,31 28,120 76,38 171,3", "8 31,114 38,162 116,154 106,192 38,123 186,142 26,", "84 110,172 34,38 169,96 144,197 181,188 89,139 24,", "189 39,38 5,146 31,185 123,82 23,163 38,97 116,38 ", "144,99 38,179 111,163 9,109 39,105 111,147 38,92 1", "12,18 27,143 155,164 124,20 82,38 197,152 186,133 ", "107,78 43,29 100,146 42,67 182,38 107,179 152,125 ", "199,38 75,52 137,36 117,62 89,154 101,108 54,116 3", "8,168 199,5 115,122 33,39 38,158 5,111 38,89 136,7", "8 72,38 149,14 51,82 58,73 66,10 174,15 61,185 105", ",69 196,130 80,118 82,35 69,198 180,71 145,184 38,", "12 34,99 68,31 86,26 139,8 11,1 147,192 176,159 13", "1,48 4,31 49,192 13,116 53,161 38,88 38,190 170,38", " 18,33 80,38 101,29 171,7 149,88 110,174 22,95 158", ",56 116,191 39,8 33,82 121,70 190,79 13,172 38,38 ", "50,38 73,115 6,127 31,151 200,128 47,38 47,57 176,", "167 197,193 159,25 82,84 19,196 85,180 38,38 151,1", "02 100,55 116,69 119,38 61,44 98,36 192,152 157,14", "8 104,134 40,26 38,16 64,82 38,180 77,143 175,161 ", "178,105 2,84 112,69 91,149 54,72 144,187 193,134 5", ",150 31,99 30,74 184,174 38,122 177,195 120,137 17", "4,64 38,159 83,51 172,33 38,169 87,90 17,163 126,1", "53 46,153 187,104 101,113 164,160 7,194 165,88 199", ",140 50,172 93,46 41,81 61,22 63,71 38,26 48,125 9", "2"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 711176291;
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    int n = 200;
    vector<string> edges = {"105 57,101 93,73 64,182 151,162 69,7 38,105 2,164 ", "178,79 80,4 101,107 90,103 116,108 52,153 51,173 1", "98,142 193,133 200,141 191,73 84,31 101,200 47,161", " 100,119 169,157 143,171 187,105 114,31 106,69 105", ",161 117,92 148,81 139,94 198,115 92,128 155,55 9,", "101 56,53 86,57 95,127 132,186 173,144 133,149 80,", "124 27,167 143,121 165,135 133,46 134,46 87,108 62", ",192 28,105 133,27 133,133 142,178 37,16 59,145 10", "1,105 165,45 144,141 133,163 200,84 46,4 80,107 10", "2,91 2,101 131,78 92,179 59,155 10,18 69,84 43,108", " 84,99 53,133 84,96 101,108 44,98 76,178 4,4 127,1", "92 66,120 77,112 84,174 177,29 31,146 25,33 133,41", " 4,32 154,109 6,22 21,4 105,92 75,3 180,71 43,168 ", "46,101 136,68 6,112 122,150 180,21 101,85 35,101 1", "82,190 119,54 171,119 4,43 139,88 91,166 148,13 6,", "88 67,174 15,181 180,46 35,180 194,61 177,101 72,1", "72 6,19 120,158 2,138 147,183 141,6 84,125 135,114", " 113,76 108,113 15,33 160,97 133,43 30,133 192,74 ", "176,178 152,116 101,42 136,73 26,184 33,198 97,84 ", "180,95 138,77 167,130 158,126 7,197 39,130 67,119 ", "36,89 99,59 4,161 49,133 170,74 162,89 121,191 183", ",45 50,63 154,4 39,101 155,116 23,192 188,165 86,1", "67 105,73 123,111 155,157 19,198 118,17 43,195 101", ",31 83,101 154,4 161,133 7,92 84,112 104,21 20,4 1", "07,13 199,140 170,101 65,185 161,175 116,45 55,171", " 8,101 189,146 112,70 112,12 154,34 21,147 156,110", " 41,171 4,24 182,61 114,101 84,40 171,156 82,137 1", "76,57 82,136 196,137 18,14 178,159 3,182 129,39 60", ",11 119,5 136,45 1,73 51,41 48,192 58"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 747383327;
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    int n = 200;
    vector<string> edges = {"112 118,98 122,154 194,187 37,23 139,25 149,21 65,", "153 131,128 100,175 77,29 35,180 34,138 164,9 105,", "67 16,33 117,103 70,81 71,117 109,61 118,14 141,81", " 113,30 186,189 19,27 40,129 103,103 156,89 183,44", " 30,138 27,119 25,58 32,93 181,140 157,104 72,123 ", "137,103 43,34 165,199 127,55 61,185 182,96 60,116 ", "17,37 117,182 103,138 25,32 93,165 137,199 16,57 1", "18,140 110,44 87,48 71,91 130,101 6,128 178,85 3,1", "95 80,162 126,174 150,1 84,61 162,119 107,156 117,", "3 165,74 103,36 189,61 51,61 171,76 80,198 106,160", " 120,87 64,76 56,193 55,148 142,118 172,61 108,115", " 46,49 78,159 117,197 72,4 43,152 187,71 13,61 106", ",50 200,38 21,135 59,175 79,41 6,128 177,73 188,7 ", "183,96 24,118 32,167 73,15 146,139 76,165 144,143 ", "97,13 6,28 156,66 3,134 115,143 170,74 8,20 67,175", " 125,13 75,95 80,37 38,196 175,184 117,143 131,68 ", "151,13 143,15 54,76 103,147 175,52 37,159 161,118 ", "145,13 76,132 118,68 166,46 89,53 17,168 19,189 16", "5,12 164,94 75,194 134,18 29,5 119,11 189,133 45,1", "3 151,105 53,103 98,24 60,26 63,165 37,146 76,110 ", "10,103 50,82 37,149 157,72 111,120 134,175 62,13 4", "9,102 34,25 118,116 9,73 147,54 146,70 190,147 92,", "154 160,184 31,88 47,5 133,165 115,118 42,29 37,14", "4 173,22 117,22 99,72 165,6 136,28 88,179 139,40 1", "2,191 118,117 14,186 64,117 150,115 175,60 76,95 1", "95,45 107,20 127,58 93,175 155,142 3,163 129,46 2,", "175 192,115 44,117 1,90 37,169 61,147 167,149 10,1", "79 23,121 76,135 103,187 83,39 32,25 13,151 158,52", " 91,38 65,152 83,7 2,151 176,175 61,109 69,130 52,", "34 26,128 156,127 115,35 18,33 114,124 61,86 71,25", " 9"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 600800625;
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    int n = 200;
    vector<string> edges = {"110 100,12 179,37 41,120 191,148 22,43 193,106 172", ",89 143,193 60,195 63,11 41,91 157,42 96,160 147,7", "8 11,167 95,156 150,60 61,165 113,12 85,120 94,112", " 67,100 11,84 130,199 47,119 60,44 60,140 100,12 6", "0,96 51,7 162,44 72,10 103,119 40,17 11,108 11,186", " 166,90 20,173 11,129 102,28 18,165 69,24 186,57 8", ",98 12,15 3,104 12,60 11,12 30,122 126,138 74,136 ", "166,13 149,176 7,54 174,21 154,165 171,12 70,145 1", "17,2 167,144 130,20 177,51 139,102 79,62 12,19 112", ",184 62,115 165,57 14,87 200,117 164,11 186,192 72", ",109 34,190 36,173 107,21 123,165 29,60 176,172 11", "4,18 71,103 171,99 102,102 11,1 12,200 165,45 173,", "59 153,183 16,168 13,170 161,139 12,170 147,197 61", ",62 178,154 12,11 165,29 133,11 170,22 188,11 188,", "74 165,120 11,39 173,154 123,106 114,190 142,58 15", "7,138 55,148 188,180 179,119 68,66 142,126 27,173 ", "124,23 179,62 135,11 137,49 186,116 70,153 146,80 ", "179,131 47,63 86,76 25,130 88,12 141,4 170,63 128,", "12 81,132 102,164 125,155 186,76 53,70 185,174 41,", "50 153,11 177,79 152,63 150,93 187,112 11,120 26,1", "2 165,13 60,112 77,16 165,34 82,31 101,40 68,165 1", "5,125 145,121 165,66 36,93 65,199 165,194 198,100 ", "111,8 60,12 52,12 63,35 63,32 90,142 12,53 25,179 ", "151,92 11,33 70,70 101,75 199,196 102,89 73,165 18", "7,59 181,5 89,162 176,16 105,71 28,44 192,70 134,1", "4 8,64 193,126 12,163 12,95 2,153 159,32 177,54 37", ",104 91,12 130,149 168,6 11,165 46,42 139,122 27,3", "8 113,170 9,104 58,109 82,56 121,69 127,172 60,11 ", "53,97 11,197 182,60 2,18 60,64 43,182 61,186 83,18", "9 124,48 105,179 198,173 169,109 60,118 11,175 153", ",164 11,170 158,153 12,89 12"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 748376320;
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    int n = 200;
    vector<string> edges = {"21 131,126 1,64 10,72 65,129 160,75 178,92 21,21 3", ",112 127,167 139,91 185,2 42,172 114,172 122,35 10", "6,82 101,149 96,92 11,42 38,114 10,110 106,100 194", ",84 25,116 21,110 114,128 115,20 85,133 152,159 18", "1,138 46,93 21,12 66,124 163,32 92,59 175,190 186,", "70 145,56 92,67 117,25 182,151 52,170 44,76 166,17", "0 21,92 27,18 44,34 21,85 59,71 3,103 135,96 188,4", "7 165,35 141,93 114,21 198,92 158,130 79,139 52,48", " 98,140 172,141 181,157 35,81 169,95 145,146 36,34", " 77,21 191,193 34,39 92,114 139,152 58,92 61,61 13", "7,110 103,41 76,199 35,170 18,176 111,160 9,108 19", "0,12 147,50 191,100 192,93 108,23 147,177 21,154 1", "75,88 71,87 134,37 174,127 69,92 43,53 96,155 26,5", "5 111,189 86,163 121,179 102,21 123,74 126,55 176,", "151 167,87 196,164 125,92 150,13 43,183 97,16 39,6", "8 49,124 62,179 86,129 120,14 114,93 146,88 3,97 1", "18,178 94,145 54,107 19,191 24,2 89,119 34,14 200,", "83 79,156 74,110 143,42 89,197 94,93 86,159 141,66", " 93,99 110,101 144,134 21,51 58,21 83,113 81,101 1", "05,17 131,73 110,72 57,162 21,78 190,9 195,156 1,1", "65 110,163 62,92 104,135 175,195 161,110 192,5 169", ",28 100,94 114,47 185,107 92,184 168,101 21,118 93", ",7 125,62 110,104 40,69 112,153 173,160 120,46 26,", "12 23,113 93,179 189,92 184,146 8,80 110,51 93,123", " 68,21 171,118 183,112 185,110 120,41 163,27 142,9", "5 93,93 60,166 41,72 114,191 187,15 32,200 173,161", " 9,1 114,20 59,133 58,34 148,48 92,128 92,92 110,1", "4 153,194 192,10 30,177 174,180 150,22 36,17 33,10", "1 31,21 136,93 89,93 149,114 125,8 36,182 100,117 ", "92,106 157,158 90,95 70,183 29,191 4,60 111,11 6,2", "6 114,175 103,165 185,197 75,56 109,84 182,81 5,18", "6 78,160 45,92 63,188 149,63 132,155 138"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 442316689;
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    int n = 200;
    vector<string> edges = {"106 97,143 153,34 146,35 39,107 175,74 165,40 63,1", "21 15,18 153,86 76,37 143,124 40,118 165,165 144,9", "5 72,93 144,92 36,85 1,191 184,35 32,27 9,83 40,11", "8 8,37 109,103 180,197 56,8 87,40 75,77 177,114 18", "0,37 154,188 27,9 25,29 68,165 199,9 133,150 33,16", " 32,180 138,149 99,162 35,69 27,46 48,37 80,32 79,", "55 192,178 181,8 161,20 122,12 107,117 172,35 177,", "58 71,160 148,27 120,53 103,11 195,56 27,143 6,163", " 111,194 35,31 35,26 36,9 189,24 6,89 151,170 60,9", "8 96,155 168,27 168,52 118,184 55,7 56,37 27,132 3", "7,35 143,141 64,142 101,2 8,185 1,1 54,22 108,6 18", "6,116 180,51 42,115 107,27 146,64 104,151 27,126 1", "72,1 15,74 90,13 165,173 71,64 119,71 37,57 177,16", "0 102,164 149,35 36,59 13,165 195,55 65,35 118,19 ", "167,182 4,1 45,193 39,156 200,91 196,47 107,37 163", ",55 27,36 140,20 49,20 118,8 19,43 96,118 50,112 5", "5,143 149,35 158,35 44,37 160,125 67,139 8,82 88,1", " 27,38 84,158 62,181 27,107 118,183 20,41 36,159 1", "42,160 61,95 118,165 42,91 64,20 86,176 177,118 12", "3,64 27,113 124,182 56,174 31,108 143,40 127,147 5", "2,198 56,46 171,82 143,20 157,37 156,190 94,32 131", ",180 3,172 165,96 66,137 25,56 152,82 134,30 110,1", "53 128,71 100,64 28,123 179,17 9,70 9,60 118,40 11", "8,30 143,169 32,21 195,46 143,105 37,35 190,108 23", ",67 118,120 145,68 37,165 142,150 35,71 187,166 13", ",55 81,188 78,118 38,27 165,73 177,160 130,129 50,", "69 14,154 10,96 37,96 5,107 106,135 109,136 30,118", " 180"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 5828356;
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    int n = 200;
    vector<string> edges = {"60 48,21 27,124 64,8 111,18 35,59 105,198 84,122 1", "40,73 172,3 141,28 152,77 66,125 135,146 119,120 8", ",86 29,169 182,105 111,199 21,76 111,55 133,192 51", ",111 29,90 52,99 111,69 189,184 116,139 50,152 95,", "60 15,111 173,151 83,140 87,111 73,105 23,2 173,10", "3 118,146 170,101 99,74 158,10 103,61 105,153 173,", "1 124,12 19,74 117,78 100,9 110,144 148,11 111,178", " 184,11 90,52 98,110 26,78 40,1 173,73 158,168 72,", "67 50,94 13,102 184,118 10,129 105,63 197,93 50,58", " 50,49 77,58 190,23 16,38 105,170 119,161 39,193 1", "45,107 73,81 70,24 33,44 138,111 60,73 147,54 105,", "44 180,67 150,62 41,24 57,63 126,131 105,32 52,193", " 173,192 25,111 110,79 97,134 111,161 167,136 76,1", "49 190,142 141,7 31,160 8,19 45,189 113,149 58,114", " 115,42 152,130 163,6 19,111 161,121 56,83 45,181 ", "24,80 145,40 154,161 175,43 13,111 198,11 194,183 ", "62,12 6,60 187,128 110,134 65,50 71,70 66,4 72,8 5", "7,45 22,184 111,79 131,85 98,63 112,77 88,34 161,1", "11 72,20 121,189 111,111 141,68 53,111 45,183 198,", "152 157,173 174,130 111,67 185,36 16,96 133,89 76,", "151 176,144 46,85 11,135 61,63 5,159 44,55 111,10 ", "50,177 45,195 7,134 165,96 144,198 47,186 72,114 8", "2,82 115,108 179,29 35,76 104,72 164,21 198,50 111", ",40 137,142 68,140 45,141 132,82 184,162 70,92 68,", "125 61,75 73,63 111,189 166,156 50,198 171,184 127", ",49 81,76 143,25 73,188 130,31 195,110 37,56 20,13", "4 155,117 158,3 53,36 23,97 131,184 43,18 196,55 1", "06,94 43,198 121,7 173,1 64,176 83,181 120,45 123,", "134 17,100 99,80 193,191 60,180 130,182 127,185 15", "0,198 30,41 183,111 77,25 51,122 87,137 99,45 109,", "73 119,173 14,169 127,138 163,27 199,108 29,55 148", ",179 18,200 184,111 152,91 189"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 169079101;
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test67() {
    int n = 200;
    vector<string> edges = {"76 82,157 118,140 173,70 195,14 73,100 118,140 106", ",187 64,172 171,117 191,200 153,145 183,88 118,180", " 119,31 97,81 190,128 132,109 145,95 118,143 147,1", "18 165,32 198,176 79,104 110,76 13,145 25,175 160,", "37 38,22 127,198 100,15 118,170 10,175 92,118 65,8", "8 18,54 118,128 157,96 118,21 55,188 68,175 8,70 3", "6,26 185,73 56,51 104,138 79,104 66,119 120,127 19", "6,11 70,175 78,104 16,192 76,118 45,119 80,103 73,", "139 37,118 57,42 186,145 118,199 23,2 134,73 118,1", "18 127,48 123,189 15,164 63,181 191,40 37,147 118,", "31 135,155 72,99 187,73 39,9 90,77 118,37 156,194 ", "143,118 186,52 29,88 43,137 119,94 58,197 200,94 2", "8,118 79,69 198,161 159,147 151,76 129,67 73,47 15", "5,45 27,169 10,70 131,50 31,181 118,17 152,199 61,", "134 101,111 118,15 17,9 118,182 191,174 52,93 37,1", "02 90,19 104,46 34,191 144,135 118,96 150,119 74,6", "0 123,125 171,166 57,116 10,108 104,21 77,75 88,11", "8 46,179 118,46 30,179 140,76 115,199 89,111 26,20", " 77,157 86,5 65,199 118,87 65,53 145,118 161,52 11", "4,163 94,155 1,134 124,123 184,94 118,71 15,145 62", ",126 79,113 171,146 165,118 164,193 63,57 177,175 ", "118,96 133,2 118,88 98,154 187,104 118,91 190,107 ", "147,24 187,165 35,149 88,142 200,119 118,76 162,11", "8 52,191 49,31 130,186 4,118 81,76 118,148 26,31 8", "3,141 127,6 26,155 54,60 118,178 77,161 41,84 118,", "200 118,11 118,45 12,168 175,157 44,187 84,121 26,", "95 68,165 85,37 118,3 119,158 57,118 10,136 155,17", "1 118,112 46,122 96,45 167,7 186,65 105,161 59,33 ", "70"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 497225478;
    if(result == expected) {
        cout << "Test Case 67: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 67: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test68() {
    int n = 200;
    vector<string> edges = {"33 170,197 27,80 107,54 188,168 48,142 47,170 117,", "41 18,185 116,66 152,64 45,149 184,48 13,48 103,93", " 16,102 22,53 19,62 189,169 123,86 107,116 53,116 ", "169,83 188,176 73,18 183,77 184,28 84,39 64,22 15,", "185 89,1 184,116 42,88 42,17 42,100 65,132 22,199 ", "185,53 82,111 166,166 180,116 166,10 182,158 176,6", "5 2,197 104,116 65,116 163,176 85,173 74,119 32,17", "3 106,157 170,176 116,163 76,138 48,116 200,64 195", ",63 144,113 176,126 185,200 35,79 53,173 108,184 1", "34,163 191,91 22,4 169,142 124,200 21,66 75,9 200,", "119 31,46 18,170 150,105 116,72 87,153 48,166 69,1", "35 65,63 139,143 18,193 173,8 189,96 66,49 64,63 6", "8,78 189,116 189,116 197,65 129,173 116,179 107,53", " 112,28 122,163 36,53 67,187 42,48 116,175 65,121 ", "107,25 200,24 87,136 184,166 159,130 188,59 188,51", " 176,22 5,184 125,116 184,60 93,176 12,166 178,65 ", "37,200 164,165 197,119 11,154 170,131 142,50 185,1", "15 142,55 197,189 110,151 18,184 43,162 176,127 22", ",116 87,70 48,93 148,169 174,57 170,118 169,192 18", "5,188 116,167 87,196 53,48 161,42 29,116 170,185 4", "0,146 105,7 142,81 105,173 101,20 185,22 116,42 16", "0,182 172,190 182,182 145,26 28,116 18,63 3,90 87,", "44 197,64 116,119 116,63 116,119 61,23 53,166 128,", "166 71,14 170,173 181,114 163,173 94,147 105,171 9", "3,42 99,169 56,142 38,116 142,95 28,177 197,189 52", ",66 30,116 93,22 6,107 116,198 119,141 119,142 137", ",28 116,92 18,133 105,155 18,109 200,200 194,120 1", "19,189 140,66 116,42 186,65 156,182 116,169 98,34 ", "189,169 97,197 58"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 929628856;
    if(result == expected) {
        cout << "Test Case 68: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 68: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test69() {
    int n = 200;
    vector<string> edges = {"141 18,102 184,56 50,39 110,2 100,183 194,54 48,13", "6 55,97 53,5 166,70 175,146 187,125 162,183 159,38", " 197,119 19,81 5,178 10,65 72,2 78,110 146,68 97,1", "48 97,136 180,170 5,98 73,196 128,118 49,171 183,1", "35 167,112 114,92 45,69 154,73 146,1 10,191 110,10", "5 104,114 111,50 2,54 8,50 14,24 5,38 66,65 142,14", "3 136,167 114,128 103,32 135,159 62,73 82,41 86,44", " 51,54 35,65 23,10 20,133 73,37 90,113 162,99 138,", "101 108,184 67,65 155,161 65,60 29,180 188,128 181", ",195 19,38 10,173 29,135 84,107 99,99 121,54 128,9", "2 87,18 150,113 172,103 169,110 9,19 113,92 127,5 ", "160,43 92,44 79,156 105,80 72,56 165,93 25,134 50,", "72 155,135 153,97 69,19 47,190 46,118 136,44 15,79", " 25,179 69,128 76,12 93,10 46,97 179,83 2,159 21,1", "46 79,128 11,59 105,54 11,34 110,114 122,175 118,2", "9 187,21 146,21 183,73 91,118 151,31 44,146 5,113 ", "22,123 53,99 198,187 184,195 113,179 146,29 40,92 ", "132,29 184,163 99,167 146,178 38,44 108,18 130,71 ", "146,42 153,25 186,111 106,146 18,29 30,72 109,105 ", "77,5 126,73 28,195 146,69 152,116 136,184 115,41 1", "59,144 35,118 33,146 99,117 72,95 19,146 155,11 14", "6,92 146,146 83,18 63,114 52,105 36,120 96,96 183,", "71 118,60 140,178 146,135 114,69 74,159 129,105 58", ",71 136,139 65,73 94,6 5,73 199,19 174,78 17,13 11", "0,164 200,25 44,38 149,92 157,18 27,189 183,83 50,", "192 174,50 64,158 66,124 92,99 88,7 97,72 147,75 2", ",25 137,113 185,105 146,10 89,159 4,3 18,25 145,23", " 57,85 38,61 99,182 54,110 193,200 69,16 109,110 1", "76,131 2,18 177,37 184,135 26,105 168"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 160206046;
    if(result == expected) {
        cout << "Test Case 69: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 69: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test70() {
    int n = 200;
    vector<string> edges = {"15 64,144 45,27 158,134 137,75 8,45 146,184 64,101", " 14,107 27,41 114,79 83,136 70,67 45,82 18,47 96,6", "1 45,45 171,100 45,49 85,63 98,164 119,95 166,29 7", "4,152 188,149 45,34 155,166 45,58 28,81 145,169 10", "0,9 29,144 87,71 79,129 146,51 108,100 109,94 137,", "45 11,66 199,120 107,81 167,45 78,144 172,141 161,", "111 73,50 3,141 69,186 11,32 98,45 148,165 61,126 ", "186,78 76,30 118,112 8,67 143,18 70,82 185,29 1,33", " 55,24 57,156 79,193 79,185 103,114 103,192 151,26", " 131,45 8,174 45,7 110,129 44,194 199,89 21,45 131", ",45 111,29 168,171 163,45 43,132 134,116 29,182 12", "5,160 76,85 30,17 7,54 31,98 176,39 179,191 11,37 ", "55,52 135,52 157,61 15,167 45,113 179,25 171,135 6", ",148 19,41 45,106 45,149 200,12 45,61 130,84 147,1", "94 66,140 190,190 56,58 190,17 110,115 79,158 157,", "142 78,79 77,2 16,67 102,45 7,124 149,3 45,45 79,1", "0 34,86 131,121 179,24 31,49 54,104 96,150 111,60 ", "132,127 88,35 175,55 45,49 45,188 45,126 187,93 16", ",45 69,89 88,96 159,128 29,148 189,57 118,45 96,29", " 45,180 122,78 153,114 136,68 142,140 45,164 183,1", "51 40,167 145,188 173,171 65,111 94,35 95,56 38,90", " 100,96 42,188 154,11 127,69 161,60 91,119 184,165", " 183,92 197,62 29,171 80,45 179,45 16,123 101,3 12", "5,45 14,8 20,91 150,122 4,21 187,32 45,99 14,117 1", "79,178 162,67 139,133 37,199 45,4 133,171 48,108 1", "2,131 5,196 8,105 179,96 46,148 177,68 155,166 175", ",147 40,146 84,97 16,13 96,182 50,32 195,146 170,1", "49 138,178 38,198 79,96 22,72 172,45 6,123 99,192 ", "44,135 120,160 10,162 28,59 49,23 172,55 92,197 18", "0,8 181,8 36,53 8,12 51"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 809956910;
    if(result == expected) {
        cout << "Test Case 70: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 70: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test71() {
    int n = 200;
    vector<string> edges = {"115 166,198 11,190 49,111 138,70 134,171 119,4 79,", "11 195,70 11,11 30,122 11,77 15,6 163,58 11,11 45,", "104 182,55 91,195 12,90 100,55 11,161 103,118 93,7", " 1,135 72,11 157,153 87,28 147,57 98,69 3,177 120,", "96 32,85 21,127 146,200 189,11 89,27 30,29 85,199 ", "96,24 123,11 172,160 154,85 11,99 92,75 166,7 59,1", "09 39,11 87,11 48,66 141,137 97,11 174,11 151,43 5", "1,73 196,11 32,126 146,72 33,162 28,11 123,172 35,", "94 11,108 66,23 164,33 135,191 11,178 200,42 71,99", " 11,1 11,11 169,34 110,187 54,64 56,188 35,170 47,", "11 182,200 81,61 42,124 43,93 102,191 9,196 13,179", " 11,165 186,108 11,62 198,53 11,11 49,97 144,49 11", "7,11 105,60 125,70 40,193 191,11 154,186 105,19 14", "3,155 9,83 50,48 197,76 74,44 56,122 130,129 90,12", "8 2,139 3,127 126,131 37,19 184,128 17,164 26,175 ", "113,142 187,18 192,185 41,168 176,36 5,11 146,11 1", "39,67 200,123 156,19 114,167 39,12 107,196 151,170", " 53,18 8,39 11,101 87,11 17,11 97,25 135,10 23,166", " 159,11 61,38 77,125 11,11 36,113 11,11 77,116 27,", "11 23,198 150,154 183,185 11,23 106,47 53,174 31,5", "2 43,50 113,200 11,132 157,119 11,71 61,4 11,11 19", ",36 16,129 148,11 162,18 11,84 99,86 11,95 157,11 ", "37,65 161,110 89,86 46,138 11,148 100,190 145,119 ", "20,40 134,176 80,86 112,166 11,158 198,11 80,22 62", ",173 48,136 132,120 58,11 93,11 148,33 11,11 82,16", "2 194,98 140,11 74,99 149,181 40,85 152,157 136,16", "5 105,14 98,8 192,11 187,163 68,88 19,11 43,180 12", "4,133 5,56 11,145 117,57 140,13 151,4 63,54 142,29", " 21,161 11,163 11,191 155,11 98,83 175,78 162,121 ", "36"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 276952852;
    if(result == expected) {
        cout << "Test Case 71: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 71: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test72() {
    int n = 200;
    vector<string> edges = {"29 13,85 186,176 135,174 124,138 44,109 18,14 40,2", "6 31,85 189,3 69,145 195,105 38,54 10,160 99,16 64", ",31 118,193 122,6 38,127 135,100 5,99 86,119 1,112", " 38,99 105,135 35,110 163,173 3,169 79,71 49,38 70", ",167 115,104 75,179 110,11 79,174 82,97 167,35 62,", "182 24,135 105,76 144,75 147,177 190,6 107,99 197,", "131 174,75 200,57 150,108 25,45 179,133 29,29 56,5", "0 3,137 190,94 130,182 59,32 103,196 31,138 155,87", " 159,125 54,74 48,105 111,105 174,71 90,1 105,120 ", "91,8 31,28 80,105 54,113 147,169 105,110 67,190 16", "5,122 67,135 68,51 99,145 117,141 54,58 143,73 70,", "37 58,111 175,96 5,65 138,167 105,106 3,188 27,64 ", "111,49 98,61 41,103 149,49 37,199 138,135 17,55 38", ",139 54,105 42,109 116,21 47,15 145,34 173,31 63,3", "9 85,108 167,153 115,182 105,42 12,190 30,120 14,5", "2 75,31 105,152 174,95 167,111 100,123 169,181 111", ",1 192,178 174,188 49,33 54,105 145,154 145,155 10", "2,10 2,184 174,42 20,42 170,19 129,105 75,17 198,4", "2 19,180 1,140 1,54 159,138 105,156 120,29 105,145", " 164,60 166,105 85,183 75,48 138,52 171,54 194,191", " 153,138 168,116 1,49 105,81 72,105 3,135 185,7 13", "6,110 92,162 36,42 47,187 85,105 110,50 66,142 138", ",134 31,120 162,158 180,88 190,31 23,81 69,148 29,", "135 128,99 172,149 169,7 120,49 93,40 146,101 182,", "182 157,83 85,43 190,75 121,169 60,28 111,3 46,120", " 105,78 145,38 144,8 9,84 99,126 169,107 132,4 182", ",29 77,150 110,53 75,192 89,190 105,114 26,12 94,2", "2 85,167 41,161 182,151 29"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 996826130;
    if(result == expected) {
        cout << "Test Case 72: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 72: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test73() {
    int n = 200;
    vector<string> edges = {"11 102,35 153,48 84,84 190,43 84,73 88,197 127,74 ", "141,20 84,176 166,10 19,122 198,200 19,184 194,45 ", "84,84 139,44 61,182 48,75 62,61 170,86 77,84 189,4", "8 131,28 128,57 110,196 189,24 164,84 11,178 85,81", " 162,73 56,149 79,113 190,92 103,163 11,61 84,115 ", "84,144 73,77 60,189 67,112 106,48 199,115 21,150 8", "4,177 7,114 171,142 64,90 103,64 134,190 33,83 126", ",87 36,121 184,41 130,7 46,198 165,63 18,64 78,171", " 15,50 152,84 198,42 119,129 84,81 25,197 167,71 4", "3,98 25,125 115,34 145,1 189,137 140,62 8,106 124,", "104 70,14 158,24 145,180 158,16 173,161 175,40 49,", "171 84,157 20,155 187,155 84,171 192,70 84,13 189,", "4 11,158 111,84 2,84 28,51 171,96 190,22 152,17 16", "6,172 82,79 84,156 93,84 62,168 3,103 84,72 178,16", "7 127,62 39,87 123,49 186,86 84,91 62,87 133,55 14", "6,174 109,166 193,189 101,84 64,150 191,29 48,128 ", "161,93 69,143 108,26 10,83 9,86 60,172 45,166 147,", "127 84,170 44,84 106,159 73,139 188,2 37,154 174,8", "4 49,194 116,44 136,104 107,62 6,16 68,84 158,80 1", "05,129 160,157 118,139 108,65 93,68 173,84 178,81 ", "84,53 135,116 120,99 190,84 94,179 48,190 138,188 ", "148,71 141,168 129,87 5,166 84,87 84,80 100,135 59", ",52 150,58 62,38 93,174 84,84 110,171 76,84 31,12 ", "171,146 84,200 26,189 97,45 140,18 70,151 57,84 20", "0,194 84,145 84,173 84,43 141,144 56,117 48,110 16", "9,183 34,20 130,31 100,178 23,35 84,84 144,178 66,", "3 160,84 93,169 151,54 64,149 195,53 59,50 84,31 8", "0,37 89,27 162,185 44,132 187,84 126,47 190,30 11,", "7 84,32 158,28 175,146 95,153 181,94 42,135 84"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 354885280;
    if(result == expected) {
        cout << "Test Case 73: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 73: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test74() {
    int n = 200;
    vector<string> edges = {"1 110,62 140,80 81,189 193,197 19,112 134,193 167,", "117 129,37 199,125 80,165 14,9 137,152 198,134 197", ",97 154,27 102,55 192,38 85,198 180,103 22,60 19,7", "9 60,13 144,172 49,70 121,39 24,62 6,15 112,38 34,", "32 45,87 156,134 94,86 42,2 32,64 147,98 112,89 56", ",183 20,130 30,143 157,50 148,80 151,134 196,65 58", ",159 175,188 24,47 67,106 196,178 113,80 76,124 19", "2,137 176,171 87,136 10,195 107,192 71,144 4,155 5", "2,134 141,33 198,50 25,134 62,44 157,122 35,72 141", ",74 10,28 135,36 134,111 41,29 161,30 115,59 96,16", "4 134,11 26,72 127,66 96,28 109,116 31,161 5,113 1", "11,54 106,53 11,186 103,99 187,40 173,17 70,46 123", ",62 119,130 63,142 177,144 94,184 77,37 134,111 13", "4,183 181,32 90,106 135,195 109,11 69,93 16,165 19", "2,117 3,45 134,192 95,162 99,114 73,112 145,146 11", "2,149 192,59 19,46 31,171 89,73 86,166 115,39 194,", "2 105,171 164,182 110,67 199,105 136,161 100,118 8", "3,34 123,31 94,200 160,41 163,64 43,45 160,112 82,", "179 9,24 114,87 65,161 142,120 170,162 139,62 158,", "8 62,102 80,99 43,80 132,117 143,173 170,72 198,13", "4 161,161 153,59 133,61 181,77 169,57 26,92 180,19", "2 7,83 62,9 78,134 192,50 196,130 75,199 70,77 122", ",172 186,12 82,112 101,68 10,133 84,68 160,150 20,", "159 164,91 161,182 134,184 134,179 115,38 13,167 1", "39,103 182,114 97,61 41,108 62,191 192,152 141,197", " 133,172 168,69 35,152 104,185 112,18 112,129 40,1", "76 75,147 134,150 113,128 59,80 126,64 190,17 23,4", "9 93,52 70,36 157,174 57,170 36,104 21,24 86,134 3", "0,37 52,193 147,62 138,159 87,195 25,110 16,73 134", ",184 57,88 161,134 80,51 80,181 131,161 48"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 187980522;
    if(result == expected) {
        cout << "Test Case 74: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 74: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test75() {
    int n = 200;
    vector<string> edges = {"176 168,79 5,145 44,66 181,20 56,20 72,70 194,198 ", "68,20 190,43 77,154 20,1 94,50 48,182 17,20 57,59 ", "31,21 82,124 48,3 47,16 174,88 45,196 83,62 36,168", " 20,50 52,11 91,80 179,81 151,28 8,136 20,60 42,77", " 27,36 142,20 137,72 152,20 46,84 150,106 129,170 ", "63,7 173,186 14,25 20,20 144,6 76,173 29,147 20,13", "1 105,153 18,128 20,189 168,168 112,20 166,119 30,", "106 183,39 25,9 79,20 156,20 84,197 120,110 8,43 1", "28,1 147,38 145,193 60,20 47,195 127,140 41,20 155", ",20 73,147 94,111 55,4 159,60 133,87 50,4 20,87 18", "5,76 17,104 59,37 60,136 164,77 141,23 169,81 85,1", "51 85,169 53,58 163,132 177,20 162,157 180,93 177,", "20 197,142 62,54 55,140 76,168 10,190 74,20 122,10", "0 147,113 174,101 20,2 72,20 163,162 171,163 199,2", "0 89,175 4,146 71,48 20,70 20,51 174,170 33,20 24,", "160 140,128 27,68 20,20 186,119 47,20 153,64 13,98", " 21,59 187,22 143,191 127,180 20,20 21,105 20,20 1", "43,32 184,62 20,20 93,78 20,26 34,48 87,78 66,92 1", "63,127 178,17 140,20 140,20 184,12 137,144 145,200", " 165,193 133,190 126,11 61,101 96,114 20,121 77,18", "8 168,89 118,187 104,19 105,65 127,88 20,93 132,13", "9 115,172 154,78 181,35 93,71 20,96 103,20 125,20 ", "26,148 115,20 60,95 21,40 69,20 174,11 83,151 20,1", "11 54,130 20,195 178,49 135,20 64,173 102,20 40,23", " 20,47 30,51 16,69 158,161 166,67 48,196 91,175 15", "9,57 108,192 70,75 105,109 47,59 20,20 173,183 20,", "186 138,97 78,46 134,20 127,99 20,20 9,78 15,69 11", "7,200 20,20 116,20 107,170 149,196 20,111 20,115 2", "0,20 49,20 179,114 8,11 86,167 122,63 20,200 123,9", "0 18"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 962172660;
    if(result == expected) {
        cout << "Test Case 75: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 75: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test76() {
    int n = 200;
    vector<string> edges = {"57 3,96 83,39 101,169 44,13 167,13 56,173 13,193 6", "6,107 79,51 13,162 143,132 73,10 92,37 110,188 161", ",144 185,105 54,52 127,165 84,10 199,87 9,95 119,1", "11 112,13 38,13 107,20 75,109 180,162 86,13 160,63", " 195,99 133,123 56,200 13,148 13,187 13,12 68,9 15", "6,44 157,47 13,69 65,55 28,38 142,13 174,165 8,168", " 157,126 13,74 64,73 17,105 13,98 7,92 199,137 149", ",13 137,38 16,1 183,13 158,198 33,189 115,13 147,3", "6 191,146 111,24 172,13 63,13 106,61 78,167 34,160", " 28,26 62,47 113,179 38,38 93,194 124,13 39,48 175", ",20 13,35 13,67 41,65 138,13 17,155 128,29 154,99 ", "13,27 107,105 90,137 185,117 173,141 126,67 36,77 ", "163,30 47,193 148,5 13,45 46,13 76,13 102,126 22,1", "92 161,13 166,186 13,37 70,81 13,124 60,111 13,59 ", "136,59 35,134 187,164 21,40 1,15 42,13 182,180 13,", "61 13,65 6,140 149,10 13,13 176,128 167,50 25,20 7", "1,161 13,186 2,131 81,80 124,124 13,118 39,83 7,41", " 36,151 48,190 20,121 164,135 106,180 120,114 13,1", "3 154,125 14,13 3,76 97,68 13,180 145,150 166,13 7", "7,58 102,13 36,88 114,42 77,133 91,13 197,181 51,9", " 13,8 74,13 1,130 39,13 198,4 24,13 172,182 153,10", "4 17,32 126,106 46,13 89,5 94,7 13,82 160,13 50,12", "9 115,187 119,11 94,116 13,178 86,112 122,14 52,63", " 170,171 192,62 49,13 151,152 72,13 86,139 197,43 ", "40,103 56,8 13,52 125,115 13,13 72,61 18,13 159,23", " 105,53 147,148 66,85 39,4 172,157 13,151 175,62 1", "3,52 13,180 31,89 184,13 65,200 108,174 100,13 110", ",156 19,177 123,35 196,164 13"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 567627399;
    if(result == expected) {
        cout << "Test Case 76: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 76: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test77() {
    int n = 200;
    vector<string> edges = {"183 97,5 136,175 46,90 177,98 135,71 136,75 90,50 ", "79,78 149,169 25,138 88,115 143,137 33,76 156,71 1", "86,153 85,25 67,6 25,123 71,26 119,135 139,196 97,", "80 157,122 189,149 94,84 63,47 16,150 136,99 54,40", " 135,120 103,66 76,69 135,25 57,163 94,175 113,33 ", "81,33 135,111 90,136 76,171 34,72 18,118 99,155 50", ",192 25,182 122,166 99,50 151,165 143,143 72,2 33,", "50 160,31 90,72 97,12 71,164 50,72 62,53 163,100 5", "0,32 95,97 157,46 34,102 125,3 33,117 72,148 33,15", "8 16,42 175,145 149,190 72,135 96,172 199,131 135,", "87 136,161 122,83 112,159 91,122 48,144 72,35 135,", "84 50,25 8,99 167,154 90,14 27,111 56,97 181,175 1", "28,49 33,50 149,82 71,44 33,19 50,135 195,136 159,", "175 60,175 193,99 92,168 175,97 120,187 71,90 64,1", "0 99,72 105,72 73,25 28,25 136,71 198,127 135,122 ", "41,83 33,125 90,90 180,134 99,37 3,135 22,46 171,1", "19 50,110 90,17 50,51 33,175 25,146 157,150 176,71", " 138,9 71,50 74,33 178,99 101,59 25,97 109,50 65,5", "0 199,33 77,86 99,114 71,65 191,126 97,124 71,143 ", "133,90 30,71 1,24 50,38 90,108 99,159 147,140 175,", "130 33,122 29,93 120,72 55,90 68,99 13,95 97,45 14", "3,135 4,175 116,99 106,50 129,143 153,71 185,71 21", ",121 90,90 175,25 132,33 143,99 122,47 143,71 11,1", "23 162,90 99,194 33,124 174,184 71,173 33,39 90,99", " 52,1 7,107 135,143 142,136 15,143 188,143 23,136 ", "43,71 61,20 130,14 149,122 135,64 152,50 89,158 47", ",143 197,170 135,141 136,189 36,70 33,50 97,104 90", ",58 175,200 128,179 72,149 71"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 351132760;
    if(result == expected) {
        cout << "Test Case 77: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 77: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test78() {
    int n = 200;
    vector<string> edges = {"114 189,95 171,69 200,200 5,16 103,45 131,117 154,", "184 32,52 107,117 78,200 165,27 163,114 127,117 19", "3,68 56,70 150,200 40,171 81,62 113,41 95,93 200,9", "7 72,95 71,95 179,198 84,20 125,95 114,112 47,6 11", "4,95 147,31 14,32 95,50 200,82 29,3 184,200 172,11", "4 91,169 96,59 47,32 66,30 131,114 151,61 17,114 8", ",105 110,119 200,57 178,99 101,101 79,142 151,126 ", "200,170 86,47 114,95 159,190 117,196 10,101 184,10", "9 68,63 38,3 55,68 141,158 200,179 86,131 148,104 ", "195,95 75,48 200,67 114,162 64,68 97,135 116,118 1", "75,32 116,32 74,139 33,129 150,64 32,192 54,147 22", ",131 16,92 62,82 68,94 117,37 9,114 123,117 128,14", "6 117,132 117,41 194,42 200,95 90,108 117,68 98,12", "1 32,124 154,155 114,186 200,117 149,131 200,33 45", ",174 32,7 32,197 66,114 44,63 68,173 131,46 15,131", " 114,57 131,3 180,168 94,10 159,19 200,184 62,117 ", "58,50 60,198 120,52 131,68 23,12 114,76 6,156 131,", "188 18,191 130,200 185,87 117,117 143,34 101,83 68", ",131 163,200 164,106 28,160 114,62 25,14 131,77 10", "0,117 84,35 32,54 200,131 102,24 114,120 84,117 17", "5,53 114,51 200,145 95,199 75,61 131,200 68,200 80", ",39 114,73 117,95 188,85 147,184 150,49 106,200 15", "2,32 181,13 131,134 18,137 43,115 140,131 166,117 ", "68,146 111,200 11,140 131,106 161,183 1,182 39,62 ", "2,136 32,20 131,138 26,32 36,117 100,130 95,184 10", "6,176 117,95 37,32 96,45 139,95 15,101 177,153 147", ",117 184,106 65,88 68,110 68,117 183,137 200,114 4", ",157 131,83 21,32 195,167 200,147 187,133 140,122 ", "114,9 89,117 138,144 23"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 506114636;
    if(result == expected) {
        cout << "Test Case 78: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 78: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test79() {
    int n = 200;
    vector<string> edges = {"157 41,118 85,118 157,33 138,113 101,113 102,177 7", "4,44 113,62 165,110 121,86 69,104 110,59 114,87 52", ",153 155,78 149,73 166,167 200,115 43,110 109,110 ", "111,114 184,110 131,106 116,99 186,110 126,136 27,", "164 12,167 42,160 103,185 179,66 67,158 110,45 93,", "121 103,129 182,110 95,24 29,10 122,66 126,54 114,", "107 118,74 70,36 136,32 18,196 178,83 53,114 143,8", "6 121,80 59,33 121,149 175,161 118,43 11,118 45,16", "6 29,144 141,127 59,119 60,133 28,118 87,20 154,19", " 63,107 77,71 199,62 54,118 116,118 61,110 51,97 6", "7,159 184,94 150,25 140,141 132,110 83,118 110,48 ", "32,157 142,148 136,157 152,22 85,118 50,89 177,92 ", "121,130 156,143 44,114 179,146 24,12 38,54 98,123 ", "110,99 118,9 118,92 17,32 114,151 111,121 167,105 ", "71,176 169,65 14,139 145,168 65,13 3,39 33,1 55,25", " 35,25 68,4 157,30 99,47 34,86 125,157 6,110 177,2", "5 118,128 189,91 111,184 88,99 197,174 114,169 90,", "12 114,114 84,182 110,171 118,112 136,168 95,145 1", "60,109 170,181 32,169 121,167 137,122 190,192 99,1", "96 7,189 194,23 193,110 134,195 110,86 40,37 103,1", "72 161,162 185,72 75,63 193,8 153,2 83,24 73,187 3", "3,84 156,70 89,191 12,21 25,72 15,189 118,31 86,94", " 170,63 110,49 110,121 149,150 109,184 108,46 118,", "79 5,72 114,166 114,81 82,99 100,178 114,121 114,1", "74 76,102 143,26 25,141 121,121 122,183 33,110 43,", "114 118,180 182,149 57,72 56,198 98,110 79,84 3,13", "3 121,14 95,134 135,161 163,81 118,167 120,64 79,1", " 178,110 147,110 71,60 58,118 47,117 149,85 96,116", " 173,179 154,136 121,134 188,23 19,97 126,124 174,", "103 139,16 59,114 153,118 60"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 935359944;
    if(result == expected) {
        cout << "Test Case 79: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 79: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test80() {
    int n = 200;
    vector<string> edges = {"112 104,78 191,75 155,183 103,131 83,158 53,95 155", ",53 94,167 57,33 198,74 170,93 197,188 70,156 14,1", "21 99,10 176,186 61,91 40,108 124,155 107,16 6,104", " 155,155 197,119 71,40 4,150 43,178 118,100 134,14", "0 24,54 84,141 30,175 124,14 155,172 9,12 33,9 69,", "197 122,121 26,40 68,174 11,191 63,170 173,172 155", ",146 104,24 89,139 161,95 154,200 195,97 189,171 1", "89,189 155,22 17,48 131,165 115,31 165,106 193,170", " 155,138 165,155 145,199 149,80 133,117 62,106 13,", "154 85,135 11,105 199,166 87,44 5,163 151,178 155,", "143 45,141 3,88 34,155 23,43 86,65 64,149 96,190 1", "87,29 155,130 55,107 38,43 1,49 104,110 111,155 10", "9,60 51,61 77,151 14,122 119,148 27,39 87,7 123,43", " 155,161 77,28 200,184 56,157 30,90 155,22 154,155", " 106,8 60,155 187,23 88,155 18,155 177,43 120,103 ", "155,178 67,125 34,66 83,46 125,166 65,27 20,181 19", "6,106 114,198 57,21 109,110 184,178 185,157 59,92 ", "129,172 116,152 50,189 25,167 12,155 40,191 82,54 ", "158,162 57,81 174,153 66,65 155,96 90,51 27,64 39,", "139 186,71 93,155 57,18 19,189 179,160 109,187 192", ",155 66,45 75,126 161,113 109,31 134,106 98,79 200", ",170 128,165 155,27 155,136 180,59 76,104 73,164 1", "87,40 35,81 144,155 161,5 127,29 140,196 38,155 20", "0,46 23,5 36,42 124,18 102,174 182,90 105,47 111,1", "83 15,10 140,183 6,54 2,138 100,82 50,109 194,8 20", ",163 55,155 124,26 70,65 132,141 155,191 155,85 32", ",172 136,143 72,170 168,147 197,94 2,90 159,7 44,1", "24 41,76 141,36 123,110 177,38 62,101 80,169 187,3", "7 23,5 155,69 180,26 145,14 130,18 101,153 48,66 5", "2,15 58,133 19,200 142,54 155,63 152,137 178,155 1", "82,45 92"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 805749944;
    if(result == expected) {
        cout << "Test Case 80: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 80: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test81() {
    int n = 200;
    vector<string> edges = {"140 101,67 79,48 116,5 151,18 35,144 165,144 132,7", "8 193,142 179,148 161,104 156,180 177,118 169,83 1", "7,63 81,150 49,191 58,40 137,117 105,22 157,17 90,", "130 193,72 171,182 141,180 117,156 172,138 147,27 ", "174,122 13,193 136,157 200,93 31,35 135,109 21,81 ", "137,12 192,158 152,128 68,56 116,120 74,182 193,93", " 193,64 184,7 168,99 104,31 89,76 70,133 56,5 139,", "162 180,193 5,4 21,52 34,4 128,187 185,21 19,96 10", "2,98 158,1 9,15 27,111 159,98 107,115 122,69 48,50", " 129,193 18,163 193,39 78,28 123,156 97,58 75,147 ", "94,176 67,33 20,85 158,188 8,193 17,192 193,193 19", "1,28 175,161 146,191 1,160 76,156 61,27 193,189 66", ",42 55,130 59,118 95,47 23,182 142,149 23,2 192,15", "0 120,77 65,22 193,182 46,39 197,17 62,76 43,16 15", "6,17 102,114 147,170 123,190 182,95 64,27 168,3 55", ",153 144,193 80,31 155,63 40,144 193,148 130,91 28", ",55 193,14 17,122 193,51 197,35 6,178 36,8 106,71 ", "173,81 193,156 193,72 193,167 113,144 183,128 109,", "27 164,81 25,180 131,130 24,92 193,27 45,147 193,1", "18 184,193 129,55 37,10 73,74 163,143 56,196 112,1", "36 47,38 130,28 82,159 124,88 5,65 42,155 33,71 12", "9,53 76,188 122,46 179,99 16,131 105,81 87,96 90,3", "6 76,154 80,54 154,43 178,78 51,72 176,2 73,77 55,", "74 86,166 56,57 181,157 124,55 194,173 50,146 130,", "187 147,5 145,181 144,192 10,196 151,193 56,199 13", "6,26 182,195 180,110 78,28 134,106 122,174 7,122 6", "0,107 85,192 44,126 192,147 29,91 170,127 1,186 81", ",64 108,127 58,18 34,150 163,72 103,57 183,154 30,", "149 136,193 4,114 185,66 54,140 92,140 100,72 121,", "198 71,84 136,69 56,193 95,22 159,66 80,6 34,78 11", ",107 119,167 92,136 41,193 76,193 28,32 50,78 125,", "79 72,112 5,101 167,93 33,98 193,193 180"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 376959567;
    if(result == expected) {
        cout << "Test Case 81: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 81: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test82() {
    int n = 200;
    vector<string> edges = {"132 183,155 125,96 21,163 197,147 53,42 162,61 11,", "20 102,95 170,160 54,160 174,17 77,127 32,178 194,", "116 56,10 69,86 190,183 156,150 96,171 4,137 27,19", "3 77,164 134,149 107,114 126,57 45,66 5,162 68,129", " 92,18 174,187 110,160 77,49 65,148 74,7 131,96 79", ",117 110,130 96,140 145,160 35,82 139,118 135,6 22", ",162 14,19 45,157 96,177 13,152 16,121 49,123 172,", "92 156,60 182,121 62,6 94,108 77,61 123,96 160,6 1", "80,93 87,25 179,90 53,190 94,175 88,6 105,154 14,6", "0 162,113 103,112 169,20 43,160 102,100 1,98 181,5", "6 168,186 113,71 97,158 140,51 152,112 160,144 27,", "170 6,40 52,177 149,21 37,33 70,162 123,39 58,134 ", "62,195 170,63 163,51 171,50 176,109 28,66 111,180 ", "46,27 30,189 198,192 112,123 125,140 123,48 50,140", " 23,24 2,55 199,53 59,178 162,106 139,40 184,30 10", "7,39 28,138 170,185 89,31 54,162 175,12 160,33 15,", "164 176,173 163,26 62,82 188,44 125,6 53,142 198,8", "4 64,28 94,104 54,167 6,87 5,93 96,61 73,156 166,1", "26 75,163 123,115 140,94 98,77 124,200 76,136 19,5", "8 100,187 117,78 16,94 162,1 146,185 96,96 183,15 ", "70,174 141,123 160,47 58,98 144,162 2,71 188,6 126", ",143 162,99 7,129 116,163 38,15 160,97 106,18 141,", "162 45,110 123,72 34,191 22,119 111,162 81,165 74,", "146 133,109 133,198 165,128 99,153 160,162 127,50 ", "65,93 119,120 112,101 96,123 36,122 168,162 171,12", "9 85,190 131,133 67,177 181,64 96,54 161,61 41,96 ", "118,183 6,78 4,54 9,96 139,172 34,103 132,157 83,4", "4 155,72 172,184 123,91 7,80 112,132 189,69 29,122", " 166,123 151,57 55,86 69,199 136,3 126,122 8,184 5", "2,49 183,29 128,105 159,102 43,179 35,113 148,96 7", "6,61 196,35 25"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 698204633;
    if(result == expected) {
        cout << "Test Case 82: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 82: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test83() {
    int n = 200;
    vector<string> edges = {"198 69,15 73,138 70,45 88,182 55,122 92,149 125,15", "4 35,114 96,48 31,187 149,134 31,162 22,63 186,35 ", "89,146 90,119 76,40 104,173 142,135 160,149 18,128", " 87,88 27,63 162,44 71,151 77,46 98,39 154,77 144,", "71 126,52 18,85 45,123 199,59 20,143 77,55 87,43 1", "07,94 3,181 176,161 88,139 9,49 62,183 82,25 136,1", "66 47,12 110,195 145,12 71,130 77,58 80,47 126,196", " 100,107 51,151 114,60 59,118 53,140 65,184 146,11", "2 100,167 26,58 115,26 129,56 22,21 50,153 18,189 ", "25,66 141,77 91,127 150,49 112,12 98,27 37,60 34,1", "20 21,154 40,121 97,77 60,130 95,95 41,58 149,77 8", "8,148 162,94 105,125 65,4 66,3 163,59 8,101 181,14", " 73,149 71,195 160,198 61,19 9,8 117,61 172,33 197", ",40 89,74 198,21 144,103 53,57 168,88 24,70 184,5 ", "24,124 134,116 184,140 7,68 112,127 95,71 63,16 15", "7,48 91,87 181,79 155,11 159,2 169,57 149,64 158,1", "94 149,33 143,131 103,84 149,79 144,121 149,147 16", "1,91 134,142 200,149 13,53 30,16 51,1 30,54 127,71", " 1,130 54,103 1,193 27,190 169,29 167,172 152,44 1", "00,125 36,99 24,67 45,140 125,109 170,176 55,179 3", "1,79 50,71 35,164 47,74 172,43 71,44 49,149 132,17", "1 149,156 132,178 110,29 137,183 133,129 88,28 50,", "171 192,195 114,188 126,74 77,92 110,8 34,149 86,1", "89 149,89 191,188 111,88 169,102 132,147 108,72 14", "7,22 186,25 109,54 83,9 149,123 142,65 93,6 121,18", "0 149,176 71,166 188,38 48,199 78,17 137,113 107,7", "1 88,43 16,123 77,42 34,94 143,149 77,57 174,199 2", "00,177 186,92 98,180 159,61 10,146 149,171 32,82 8", "8,75 200,158 81,189 109,189 175,51 23,17 26,146 70", ",158 88,4 133,141 183,149 185,3 33,119 72,165 30,1", "08 76,166 106,73 88,151 160"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 154294044;
    if(result == expected) {
        cout << "Test Case 83: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 83: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test84() {
    int n = 200;
    vector<string> edges = {"78 86,56 1,170 38,124 156,139 163,12 194,10 170,9 ", "175,164 54,170 46,170 65,174 67,188 42,19 165,53 2", "2,124 48,174 195,12 37,186 18,12 170,85 170,29 42,", "86 161,12 102,12 135,177 170,149 51,111 170,183 16", "3,16 13,181 15,15 169,107 26,80 111,143 16,68 183,", "90 177,61 103,134 36,85 88,140 164,142 105,38 134,", "122 46,198 152,65 24,97 42,178 86,193 85,130 76,10", "3 96,109 85,103 101,34 82,38 180,52 177,20 177,73 ", "22,104 42,15 111,134 57,73 35,190 180,55 67,44 175", ",45 156,177 151,130 170,158 175,200 28,1 155,14 20", "0,140 170,156 107,127 180,94 25,8 12,89 165,63 139", ",182 94,197 115,170 94,18 113,54 1,81 67,50 152,15", "2 168,170 152,199 16,129 124,136 85,85 31,94 41,38", " 187,103 154,73 130,200 67,10 40,85 6,94 160,77 17", "7,147 18,107 129,18 170,42 144,164 59,12 58,16 170", ",100 86,53 130,79 10,170 42,145 51,5 65,23 175,167", " 121,60 85,159 134,39 115,73 138,126 140,95 94,30 ", "24,175 170,84 53,175 148,118 103,72 115,62 38,184 ", "16,116 130,24 89,111 167,156 170,179 51,115 99,139", " 68,66 42,111 132,115 93,200 11,165 4,163 170,175 ", "185,87 10,142 46,140 1,156 153,125 24,152 123,192 ", "46,75 34,128 94,42 74,146 103,47 177,163 119,10 91", ",10 21,64 34,183 176,167 108,183 43,189 86,2 175,1", "13 3,34 98,173 142,110 16,49 70,166 163,159 180,65", " 165,16 196,107 17,173 70,112 124,103 71,106 86,17", "0 67,51 18,157 34,179 113,15 172,170 86,115 170,16", "4 120,174 92,174 11,115 114,94 27,53 7,83 177,10 1", "37,117 152,139 131,152 33,170 103,133 113,16 69,65", " 162,70 46,140 141,86 191,170 34,169 167,70 150,17", "1 34,32 142"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 198272891;
    if(result == expected) {
        cout << "Test Case 84: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 84: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test85() {
    int n = 200;
    vector<string> edges = {"115 161,132 24,8 155,190 155,14 190,120 135,70 134", ",127 193,52 174,183 107,151 173,167 109,2 92,156 1", "69,50 166,138 108,136 134,71 137,27 75,137 49,48 1", "30,22 30,37 39,35 182,111 63,129 135,174 148,40 12", "5,1 103,189 131,112 184,111 48,90 140,141 103,129 ", "192,118 92,120 42,45 135,87 142,73 114,135 79,14 1", "81,33 124,196 15,52 198,104 111,107 31,50 13,135 4", "7,72 67,67 6,90 196,79 26,175 72,12 194,31 36,8 14", ",22 93,116 75,102 118,179 164,5 114,80 171,76 30,2", " 102,82 161,132 40,173 18,89 172,148 198,12 168,11", " 103,182 135,153 47,159 187,180 114,178 158,20 79,", "46 172,71 4,162 34,70 98,161 128,176 77,121 131,90", " 177,70 135,1 65,19 75,178 106,135 90,18 135,131 1", "35,192 108,122 47,135 116,135 8,110 32,175 123,161", " 7,55 58,169 135,174 135,112 197,149 47,60 127,135", " 60,16 31,137 195,66 90,37 114,152 94,155 165,132 ", "81,171 178,119 178,4 120,162 94,67 123,162 57,114 ", "54,78 163,28 34,147 26,24 145,139 175,105 101,169 ", "183,200 90,135 161,55 131,160 47,157 70,131 84,47 ", "74,174 64,178 25,38 88,89 135,102 135,90 146,69 13", "1,167 186,23 21,30 193,135 164,63 130,59 77,113 56", ",164 83,197 53,131 170,144 179,116 21,161 86,135 3", "3,98 85,135 111,78 138,114 135,164 100,68 179,135 ", "101,18 126,9 50,18 38,186 33,161 41,100 68,3 45,17", "3 191,141 105,115 143,56 182,13 133,163 129,138 43", ",176 20,33 109,72 150,154 100,51 187,49 42,17 51,1", "16 99,135 72,178 135,60 93,17 159,159 135,97 102,1", "32 135,133 166,135 168,19 21,50 135,162 135,184 16", "8,199 166,29 117,47 10,188 159,96 114,91 89,182 11", "0,62 8,147 77,89 29,65 101,185 142,194 197,36 156,", "178 61,95 149,13 44,45 185,45 87,38 191"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 573468413;
    if(result == expected) {
        cout << "Test Case 85: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 85: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test86() {
    int n = 200;
    vector<string> edges = {"164 190,152 100,32 79,119 155,110 88,93 150,16 48,", "15 154,121 84,13 19,156 94,55 91,197 193,98 88,42 ", "22,93 36,166 94,92 160,43 35,168 12,114 69,40 153,", "55 94,84 103,18 102,98 47,100 151,60 100,113 145,1", "21 56,109 80,152 174,98 179,181 58,134 86,43 93,12", "3 130,39 121,159 94,44 90,112 108,168 105,141 168,", "65 93,28 180,100 171,119 133,70 182,34 121,177 171", ",152 142,113 35,68 18,76 110,193 48,21 1,151 10,11", "3 195,127 15,25 118,148 33,13 123,108 45,70 197,10", " 118,109 17,135 151,126 120,3 106,122 44,114 151,1", "75 176,10 128,164 193,129 180,13 138,31 143,108 6,", "30 121,125 98,136 4,95 117,3 167,109 77,121 71,41 ", "128,99 21,86 94,98 144,159 14,98 97,88 162,58 82,1", "21 26,38 106,5 69,83 125,109 35,178 45,147 29,173 ", "157,119 100,121 35,190 161,102 68,13 95,151 146,20", "0 101,93 66,63 84,49 69,3 38,42 74,172 88,194 100,", "193 37,173 11,140 93,7 111,11 73,84 115,94 4,98 92", ",74 88,43 15,166 67,160 51,93 27,171 131,58 31,100", " 52,151 2,122 88,100 68,45 184,5 114,161 164,104 9", "3,139 87,20 84,98 148,147 87,158 78,51 92,169 180,", "46 40,184 196,126 72,189 36,156 165,122 90,199 108", ",113 170,139 130,115 11,8 176,173 115,38 84,191 14", "4,188 92,163 86,194 50,100 94,193 149,118 128,151 ", "54,21 137,121 24,183 97,88 84,168 107,62 87,75 106", ",98 197,109 132,95 147,179 81,198 79,59 86,200 182", ",59 134,79 54,200 184,21 43,32 192,94 37,88 126,18", "7 24,100 158,54 32,131 177,61 93,149 124,116 15,82", " 84,111 94,113 64,151 185,22 74,151 93,130 37,88 1", "76,88 40,15 9,85 180,186 47,35 180,96 84,23 5,31 8", "2,43 168,158 57,70 199,121 53,21 89"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 468460959;
    if(result == expected) {
        cout << "Test Case 86: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 86: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test87() {
    int n = 200;
    vector<string> edges = {"42 152,20 23,167 26,56 98,9 1,192 144,179 129,13 9", "3,133 193,80 14,160 194,150 13,119 49,139 14,7 30,", "103 89,188 136,66 30,18 113,21 75,49 78,181 31,113", " 48,13 135,118 101,12 61,14 149,124 6,122 8,200 40", ",146 185,94 107,167 107,35 113,25 186,142 115,195 ", "84,20 1,107 49,129 91,59 21,49 158,12 82,118 128,1", "8 190,66 4,135 49,178 107,49 128,75 105,37 49,66 7", ",182 49,200 71,194 49,102 119,111 50,6 145,51 62,7", "8 68,101 128,181 155,142 81,19 62,17 84,1 49,3 17,", "41 43,57 194,177 37,180 80,77 87,55 73,48 35,170 1", "36,162 47,135 82,76 116,150 196,37 127,147 132,69 ", "58,41 49,1 69,183 96,104 27,14 62,126 102,42 179,1", "5 194,143 129,41 2,65 151,95 150,62 80,47 9,22 54,", "101 153,142 25,24 78,200 161,162 9,85 54,107 130,8", "8 175,132 157,97 83,81 39,157 147,67 115,49 80,123", " 160,119 166,184 110,63 30,116 18,106 69,87 187,65", " 107,22 85,25 165,70 13,108 99,109 145,191 53,198 ", "190,134 133,49 7,87 59,163 36,27 180,18 49,34 200,", "99 6,161 125,170 163,30 176,170 79,130 131,73 200,", "171 194,28 118,20 60,194 74,16 24,182 175,115 90,2", " 159,84 11,82 61,172 182,45 190,112 74,119 33,7 32", ",143 121,42 117,116 190,197 33,180 104,170 174,116", " 120,66 44,105 21,78 56,89 41,49 170,164 129,100 1", "18,133 158,134 158,140 134,119 168,179 143,132 128", ",54 158,86 168,137 41,49 179,148 29,37 72,150 135,", "111 78,67 90,46 182,184 84,117 152,182 169,81 25,1", "43 156,133 64,101 114,6 97,170 192,154 127,20 69,4", "9 84,6 49,171 141,181 87,37 53,138 6,32 29,92 189,", "49 142,46 52,81 173,182 183,181 59,84 122,119 199,", "78 5,49 200,59 49,134 38,32 148,146 37,92 41,10 34"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 885120635;
    if(result == expected) {
        cout << "Test Case 87: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 87: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test88() {
    int n = 200;
    vector<string> edges = {"91 110,198 169,96 75,85 92,110 102,111 17,110 84,1", "88 31,64 62,138 15,187 185,130 125,67 110,68 31,29", " 179,137 41,127 73,53 20,179 97,13 157,32 58,56 54", ",171 8,58 31,33 80,3 129,186 12,110 146,28 4,127 1", "12,132 62,4 174,104 110,62 177,167 44,94 9,178 130", ",100 145,88 83,40 96,169 163,153 131,153 169,60 14", "9,83 183,145 64,31 62,164 196,105 130,150 90,103 1", "73,16 31,36 31,132 126,110 190,83 140,181 136,42 1", "92,114 130,43 110,129 179,37 6,107 26,177 156,5 12", "0,57 137,181 179,48 60,179 62,70 58,179 166,42 58,", "147 58,113 31,61 106,47 110,165 175,83 69,31 1,110", " 179,144 31,50 61,74 180,75 40,62 71,89 154,45 36,", "111 124,38 58,197 83,110 5,31 123,13 158,169 110,5", "8 169,16 30,39 31,32 98,63 58,101 47,93 131,129 10", "8,169 121,53 78,48 179,193 46,151 110,78 20,82 110", ",58 24,181 139,58 154,138 97,79 99,182 172,139 136", ",155 156,13 169,57 116,186 184,13 11,2 182,62 160,", "176 151,169 130,94 19,110 25,62 59,31 18,181 55,67", " 191,32 119,110 194,117 102,14 47,52 194,27 56,12 ", "62,13 81,62 19,137 179,7 62,137 116,165 22,74 110,", "66 181,49 152,198 96,104 195,134 131,39 143,138 16", "1,174 179,172 110,110 193,128 90,31 171,175 22,42 ", "109,166 90,115 179,142 95,134 93,87 168,59 133,127", " 25,26 85,196 84,137 170,13 118,167 7,122 169,72 1", "10,50 106,22 121,162 144,10 31,169 34,58 56,65 135", ",200 126,163 106,146 76,18 51,80 58,91 111,199 169", ",92 169,95 110,122 20,86 160,79 58,168 58,31 35,14", "1 86,148 130,58 103,133 159,58 135,85 107,101 14,1", "5 97,123 23,21 190,72 77,110 152,31 6,185 71,189 1", "96,169 83,2 172,150 166"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 712382126;
    if(result == expected) {
        cout << "Test Case 88: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 88: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test89() {
    int n = 200;
    vector<string> edges = {"143 45,48 139,141 124,184 87,53 72,36 75,170 84,27", " 1,159 21,51 126,177 199,146 57,162 50,79 5,185 24", ",183 29,193 140,6 92,42 135,190 152,115 112,74 164", ",47 120,47 56,105 63,96 90,57 33,178 103,95 70,50 ", "27,169 34,122 156,170 134,99 187,171 115,181 46,98", " 103,174 188,14 54,23 191,85 137,41 28,114 15,86 8", "2,84 19,119 20,189 110,66 26,105 192,200 91,140 18", "6,97 21,197 31,88 45,173 165,146 91,51 84,13 158,7", "3 162,95 1,123 84,52 128,200 112,11 184,84 74,199 ", "35,42 106,72 197,114 36,84 16,5 39,84 1,151 138,17", "7 85,136 193,167 185,131 94,30 52,166 127,4 178,15", "7 14,154 191,107 199,61 44,144 116,92 166,41 7,80 ", "59,182 177,125 133,194 49,71 188,130 67,44 17,48 1", "16,190 101,151 152,113 154,132 136,173 108,144 104", ",159 55,121 37,172 49,117 129,84 115,84 110,147 12", "5,110 133,10 195,85 148,175 123,179 19,124 80,121 ", "131,113 25,178 84,69 192,14 178,135 99,158 84,63 1", "45,84 44,65 23,45 122,172 46,36 84,173 158,130 102", ",103 82,134 67,16 58,196 89,84 184,138 24,62 90,11", "0 81,6 180,32 27,175 163,28 15,181 16,3 2,127 29,1", "77 84,142 153,187 184,88 195,96 16,9 147,139 51,19", " 43,145 100,17 155,115 12,1 150,153 180,149 171,15", "3 196,97 123,74 8,71 100,183 89,117 7,73 95,136 52", ",3 87,8 167,192 84,37 44,101 74,161 75,18 104,118 ", "38,68 174,38 26,84 52,94 79,35 64,55 20,179 25,84 ", "45,102 93,170 60,22 119,18 120,168 76,106 78,189 1", "41,9 59,149 109,69 68,64 137,51 56,33 109,186 30,1", "11 30,40 168,156 118,84 153,83 36,86 157,31 165,15", "8 72,198 40,163 22,170 198,19 169,192 77,62 160,10", " 66,2 78,161 129,160 194,76 93,65 34,123 176,155 3", "9"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 945520555;
    if(result == expected) {
        cout << "Test Case 89: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 89: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test90() {
    int n = 200;
    vector<string> edges = {"144 42,42 90,42 29,106 42,42 70,197 42,42 44,113 4", "2,42 182,7 42,42 131,83 42,137 42,25 42,30 42,23 4", "2,186 42,42 124,42 36,42 164,21 42,93 42,118 42,42", " 196,188 42,42 177,47 42,42 185,168 42,42 133,153 ", "42,9 42,111 42,65 42,110 42,42 116,42 179,42 170,7", "5 42,134 42,156 42,53 42,42 51,42 14,181 42,60 42,", "119 42,42 22,42 92,42 125,42 34,42 146,42 184,107 ", "42,42 136,42 1,42 157,42 200,42 120,42 72,154 42,1", "87 42,82 42,42 183,198 42,42 139,122 42,42 130,42 ", "66,42 38,42 104,80 42,42 50,42 132,42 86,42 40,138", " 42,97 42,94 42,102 42,100 42,42 175,67 42,71 42,8", "5 42,42 165,145 42,190 42,169 42,42 49,140 42,42 3", "3,42 26,35 42,42 142,108 42,42 96,19 42,147 42,127", " 42,59 42,42 87,42 58,195 42,42 10,56 42,42 149,42", " 2,43 42,42 11,42 12,42 192,48 42,42 64,193 42,42 ", "161,17 42,42 57,52 42,42 129,42 27,105 42,6 42,42 ", "62,42 74,42 194,42 166,42 54,20 42,42 101,42 163,1", "17 42,31 42,150 42,68 42,42 159,45 42,162 42,42 77", ",42 3,42 24,42 15,37 42,141 42,42 178,42 148,42 39", ",172 42,167 42,8 42,42 95,158 42,42 135,115 42,91 ", "42,191 42,42 41,89 42,42 114,79 42,42 189,99 42,61", " 42,121 42,42 180,42 88,42 152,4 42,42 69,155 42,8", "1 42,42 73,42 78,126 42,128 42,42 13,42 174,173 42", ",109 42,42 84,42 28,32 42,42 98,42 16,42 18,63 42,", "160 42,42 143,199 42,42 151,42 123,42 112,42 46,42", " 55,171 42,42 76,176 42,42 5,103 42"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 583631762;
    if(result == expected) {
        cout << "Test Case 90: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 90: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test91() {
    int n = 200;
    vector<string> edges = {"160 45,1 87,164 149,70 131,140 137,136 178,54 132,", "124 171,180 148,116 64,78 38,81 169,196 136,46 185", ",125 90,165 157,81 144,2 31,12 147,9 70,138 6,57 1", "45,141 35,53 177,98 81,158 154,76 26,140 189,18 17", "2,42 134,59 16,45 68,114 15,176 199,170 165,169 18", "6,1 129,190 30,3 136,51 150,63 48,3 101,196 92,148", " 75,68 14,57 114,86 20,166 64,48 174,194 64,33 139", ",159 19,152 6,165 169,104 48,102 22,191 25,163 188", ",111 34,77 181,169 75,102 172,130 189,70 74,1 146,", "139 110,32 106,198 192,47 69,88 43,40 27,55 105,34", " 27,123 28,43 18,91 81,148 28,180 28,150 62,95 163", ",147 44,155 186,144 49,161 136,72 29,119 112,88 18", ",66 81,69 190,2 29,188 162,75 110,25 121,59 71,85 ", "165,134 165,186 198,96 195,15 149,71 106,176 52,94", " 64,182 59,145 86,139 82,169 38,103 53,153 154,113", " 26,113 76,23 169,48 169,44 77,4 156,48 120,16 71,", "186 99,17 104,169 114,129 146,172 169,154 5,22 109", ",106 169,172 51,100 15,52 19,74 169,140 112,36 64,", "133 27,52 13,54 167,73 53,74 113,31 12,116 127,128", " 140,37 177,27 169,60 48,56 131,167 23,200 154,185", " 93,141 53,27 184,50 65,152 126,52 179,23 146,81 1", "24,162 163,107 191,186 195,81 80,132 167,12 169,13", "5 186,31 29,110 82,64 169,136 79,136 118,169 52,75", " 97,32 46,65 27,58 38,89 186,197 165,38 173,149 10", "0,43 67,105 154,21 62,151 194,97 11,74 6,52 108,10", " 76,109 102,39 8,140 24,165 39,154 169,25 114,30 1", "06,57 86,38 122,140 193,53 169,191 121,147 77,140 ", "169,51 62,169 136,53 168,142 54,23 68,69 30,38 187", ",22 84,52 41,60 115,173 183,48 143,152 138,45 14,8", "3 154,175 53,61 64,156 97,156 11,38 125,9 131,27 7", ",83 117,12 188,185 32"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 929983918;
    if(result == expected) {
        cout << "Test Case 91: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 91: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test92() {
    int n = 200;
    vector<string> edges = {"32 59,91 19,144 122,152 10,192 19,106 134,163 162,", "48 50,38 140,82 90,43 81,82 19,43 159,82 118,181 9", "1,136 111,197 178,6 144,131 40,35 188,17 140,138 5", "7,190 14,39 140,54 113,51 46,19 77,134 126,30 178,", "188 182,54 19,175 21,157 59,54 125,144 62,144 16,1", "38 164,108 140,192 116,144 78,91 56,89 33,29 109,1", "83 27,161 54,179 155,48 186,67 12,178 135,136 114,", "188 185,158 188,195 66,193 174,55 19,50 186,165 67", ",34 125,117 19,85 183,89 73,150 115,191 138,109 12", "3,92 140,40 20,140 96,19 43,40 93,48 134,5 188,71 ", "43,72 161,87 43,107 70,144 64,60 79,141 14,46 95,3", "0 88,46 151,196 136,56 175,105 136,13 40,31 1,107 ", "67,88 66,40 68,154 200,94 138,120 138,97 184,123 2", "9,19 46,163 102,67 29,169 89,184 112,107 11,192 53", ",82 36,85 55,104 54,115 100,83 192,4 153,43 156,13", "5 197,44 115,138 25,154 47,79 129,4 149,27 85,133 ", "161,117 188,195 88,45 40,84 43,98 171,80 115,72 13", "3,188 15,42 144,37 144,146 136,128 136,19 79,65 91", ",157 179,168 140,31 97,19 115,19 134,7 82,79 101,1", "36 76,154 184,115 3,19 168,75 55,192 86,138 24,30 ", "19,155 157,10 59,98 65,79 8,103 91,47 200,19 59,56", " 21,79 147,139 140,162 102,99 10,190 141,55 52,172", " 188,82 18,188 176,40 61,2 192,82 63,79 69,79 74,1", "52 99,171 65,142 43,67 19,138 194,137 184,97 1,19 ", "37,121 34,170 46,180 192,119 40,134 141,115 187,16", "3 55,125 121,70 11,169 174,22 46,58 115,110 144,79", " 26,82 198,184 19,160 30,148 82,43 145,143 144,19 ", "191,167 46,169 193,149 153,192 166,30 177,140 189,", "188 49,199 138,149 89,19 40,46 124,138 130,59 9,46", " 23,173 140,127 115,77 136,41 136,136 28,89 19,192", " 132"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 936625634;
    if(result == expected) {
        cout << "Test Case 92: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 92: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test93() {
    int n = 200;
    vector<string> edges = {"112 54,103 163,182 105,167 174,173 199,138 122,182", " 31,174 64,198 185,185 84,49 80,182 127,130 85,174", " 25,99 112,89 182,138 178,147 63,196 160,103 175,1", "17 196,185 106,48 108,156 4,8 140,2 53,127 150,130", " 20,41 62,196 116,185 90,60 30,178 6,82 139,72 130", ",5 99,70 182,74 143,89 97,187 197,47 58,37 17,164 ", "182,185 100,111 3,115 196,162 151,13 182,196 177,1", "96 158,110 197,43 22,23 37,176 52,46 166,169 37,13", "0 53,67 114,197 174,168 184,165 130,83 188,51 199,", "30 127,167 38,113 185,185 71,50 185,127 36,174 7,2", "00 1,176 185,103 124,181 182,91 103,147 127,188 13", "8,183 130,14 138,197 74,180 179,36 44,138 196,108 ", "112,86 34,109 129,182 174,45 78,103 119,134 174,88", " 186,40 24,131 177,103 81,132 196,176 92,176 194,9", "3 165,138 151,127 103,66 192,65 185,161 138,112 15", ",176 138,89 55,197 32,65 29,121 138,130 197,130 18", "5,27 112,133 168,98 176,153 146,174 118,123 197,10", "7 35,79 114,103 41,190 130,141 197,176 45,145 72,1", "66 138,193 185,9 73,125 159,111 176,196 112,196 13", "9,136 197,76 160,148 112,51 127,185 102,112 37,152", " 24,12 196,77 144,74 142,16 195,104 15,24 185,130 ", "49,84 87,88 130,157 183,172 138,174 191,126 20,1 1", "27,185 140,176 33,43 197,170 27,173 51,103 11,149 ", "150,19 112,56 64,39 154,127 58,95 174,174 101,127 ", "129,146 103,144 176,137 103,59 171,26 4,138 154,19", "6 159,116 18,120 128,103 155,86 176,68 112,112 10,", "103 75,103 135,168 103,85 16,185 180,96 137,127 10", "7,190 21,57 124,176 128,73 127,182 114,4 189,112 1", "03,4 176,185 42,69 197,192 112,43 61,94 103,130 59", ",28 182,195 85"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 717371396;
    if(result == expected) {
        cout << "Test Case 93: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 93: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test94() {
    int n = 200;
    vector<string> edges = {"65 56,61 154,81 67,34 66,75 163,45 92,137 159,75 2", "9,127 27,56 163,138 126,79 56,194 75,49 18,110 101", ",161 110,9 163,133 69,104 9,163 94,163 101,54 28,8", "8 75,139 19,76 108,127 199,179 24,113 39,124 103,5", "6 147,66 160,162 185,62 64,44 151,148 50,47 168,17", "0 86,106 56,93 116,17 178,145 185,178 41,10 185,62", " 192,20 10,23 112,62 57,58 104,48 152,90 67,118 62", ",143 11,123 167,109 18,163 168,96 196,102 178,178 ", "163,114 90,178 121,176 56,135 175,49 163,137 154,1", "66 179,89 76,127 70,199 55,179 186,168 22,179 163,", "152 156,144 47,62 35,119 132,6 125,101 63,173 48,1", "27 163,178 172,172 16,31 113,101 25,129 21,126 95,", "178 32,101 33,149 26,187 65,163 67,116 73,72 189,1", "24 168,150 22,66 163,130 137,87 67,136 44,37 63,12", "8 166,183 42,184 91,163 73,122 94,44 163,108 163,1", "85 107,120 75,35 85,200 49,126 163,157 73,146 200,", "158 126,82 191,68 105,100 51,119 9,54 94,84 8,179 ", "98,30 44,50 126,190 101,12 9,78 29,137 170,19 108,", "12 36,163 48,127 123,159 180,44 46,27 4,44 38,41 1", "97,163 137,43 108,195 127,138 177,168 133,9 196,56", " 188,60 122,73 165,142 164,31 141,153 31,14 46,194", " 131,111 160,188 171,117 185,8 73,40 126,185 42,10", "8 184,134 38,57 181,135 94,67 5,15 34,43 77,143 48", ",174 173,71 33,97 106,198 31,118 169,129 49,52 62,", "3 157,126 45,179 125,66 189,179 2,31 23,49 105,80 ", "24,5 155,82 66,74 120,1 83,62 163,164 48,163 31,10", "1 115,149 31,87 193,32 53,165 59,163 185,1 44,107 ", "7,13 81,140 130,88 182,94 51,127 99"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 728247151;
    if(result == expected) {
        cout << "Test Case 94: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 94: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test95() {
    int n = 200;
    vector<string> edges = {"1 67,23 49,140 33,21 82,142 172,14 77,31 39,20 107", ",54 154,162 151,132 12,48 44,31 110,36 17,12 9,31 ", "94,41 192,169 31,75 90,130 95,31 34,47 40,45 37,31", " 56,12 125,52 31,109 18,76 142,117 142,193 111,165", " 162,33 159,67 74,84 184,190 105,16 101,112 31,179", " 31,50 154,179 44,93 176,168 98,196 55,156 17,120 ", "110,26 167,97 53,155 134,52 71,112 58,141 105,65 1", "53,95 31,109 31,119 54,127 26,65 31,193 128,189 16", "6,31 62,58 113,146 72,94 168,23 31,56 24,113 112,3", "1 1,92 140,174 187,144 180,152 23,147 192,98 94,80", " 43,31 41,135 102,143 12,75 79,51 186,85 136,179 4", "8,133 36,20 104,77 59,31 178,39 99,190 141,31 17,3", "1 107,193 63,146 31,31 82,27 30,28 4,159 129,46 31", ",177 160,88 108,135 43,42 91,170 110,15 78,118 180", ",41 147,81 146,110 116,182 97,31 26,185 23,22 31,1", "45 137,70 93,4 6,31 181,73 187,46 163,124 110,142 ", "199,86 12,115 31,151 165,114 112,121 22,25 72,46 3", "0,144 13,88 65,42 31,196 69,180 13,131 70,85 195,1", "97 56,193 35,90 79,73 83,131 176,102 80,90 31,106 ", "110,40 31,110 89,137 8,23 175,3 119,45 189,27 46,8", "4 171,31 83,4 31,154 31,140 129,171 31,198 31,12 1", "94,69 139,4 123,55 139,174 83,31 159,101 31,66 60,", "107 104,29 91,68 53,103 169,64 15,12 31,23 96,37 1", "66,31 59,90 148,34 11,31 157,161 4,66 2,164 62,108", " 65,23 173,142 31,31 51,122 56,31 55,21 15,157 60,", "127 167,50 119,126 137,137 31,7 11,149 19,200 29,1", "00 70,38 31,87 142,105 31,94 183,193 31,134 115,20", "0 42,188 182,31 176,103 85,184 171,31 97,169 195,1", "50 81,105 5,137 158,31 102,155 115,59 191,191 14,3", "1 149,31 162,32 56,157 2,34 160,133 17,1 74,31 61,", "31 180,78 82,142 138,57 66,31 37,181 10"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 454205593;
    if(result == expected) {
        cout << "Test Case 95: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 95: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test96() {
    int n = 200;
    vector<string> edges = {"188 159,141 5,194 188,57 132,188 174,106 1,122 106", ",132 175,132 177,68 158,63 161,183 132,167 108,13 ", "181,2 63,85 188,188 124,10 90,170 99,188 152,130 1", "32,106 45,75 135,155 126,90 132,143 141,188 123,19", "0 106,166 40,185 106,188 91,17 101,141 23,86 106,1", "83 35,63 111,128 188,30 180,89 141,76 188,164 32,1", "89 63,98 115,59 46,182 14,30 95,188 132,141 19,132", " 39,145 27,78 132,38 169,154 188,63 79,141 200,43 ", "15,195 179,102 126,155 102,142 188,21 188,167 22,1", "53 184,28 33,42 100,114 188,106 141,137 163,6 33,1", "88 77,74 178,19 118,95 180,197 160,106 132,34 115,", "80 136,52 77,147 150,173 105,106 16,37 106,141 191", ",4 70,26 63,192 132,188 54,20 94,70 109,170 187,51", " 156,177 92,121 104,141 165,58 41,68 62,196 106,10", "6 164,106 153,10 25,100 66,37 87,61 190,11 73,70 6", "3,117 24,188 120,106 107,142 199,188 63,125 86,141", " 28,132 102,50 98,188 116,57 53,72 138,152 97,132 ", "58,141 181,106 62,176 16,60 63,63 149,36 106,34 98", ",15 106,25 90,132 9,188 182,141 63,135 106,59 16,1", "15 65,84 141,138 141,3 137,106 20,195 141,141 103,", "133 38,137 141,38 141,8 139,36 144,49 141,99 187,1", "86 141,166 188,188 80,119 185,156 106,192 147,48 6", "3,112 162,22 108,96 63,141 178,71 54,112 130,93 83", ",5 198,59 176,141 47,146 188,188 140,100 132,171 1", "32,132 27,87 64,164 172,132 98,188 131,106 108,69 ", "24,106 18,16 168,55 85,141 148,134 41,157 152,141 ", "88,7 141,141 81,141 8,29 182,188 101,69 188,141 12", "1,63 99,141 82,162 130,113 125,127 188,67 188,56 1", "32,193 141,197 132,83 132,129 141,105 188,28 6,132", " 151,69 117,110 59,11 132,56 12,4 109,63 44,30 106", ",31 115,158 62"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 339451061;
    if(result == expected) {
        cout << "Test Case 96: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 96: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test97() {
    int n = 200;
    vector<string> edges = {"117 6,168 146,168 197,68 101,52 168,107 194,90 20,", "79 184,177 14,194 111,18 165,68 126,175 186,148 39", ",77 11,72 38,5 102,166 145,56 186,153 194,68 63,11", "7 123,149 68,25 68,168 129,55 123,76 168,172 20,19", "2 88,42 194,46 194,179 194,59 192,137 192,133 143,", "68 49,64 132,72 133,20 184,20 96,68 72,139 192,17 ", "123,56 22,193 72,186 10,107 57,162 171,124 153,194", " 58,68 70,51 10,130 192,20 61,120 192,122 29,68 19", "8,152 68,32 186,167 65,157 145,137 140,123 71,192 ", "40,36 10,12 168,27 72,51 35,10 73,145 168,168 161,", "189 10,168 24,150 190,164 38,68 80,200 186,68 23,6", "8 9,97 192,128 68,91 34,145 119,145 65,68 95,87 19", "2,59 141,194 72,86 145,123 20,72 185,192 180,81 16", "0,168 16,82 106,10 68,113 123,10 1,33 21,145 66,15", "9 192,162 72,104 113,173 154,75 17,71 174,189 103,", "68 147,20 188,3 72,145 78,138 145,194 2,127 194,12", "3 148,131 168,93 20,18 123,168 178,199 10,114 119,", "26 10,144 68,168 99,91 10,94 186,20 142,97 28,54 6", "8,72 177,32 156,175 44,18 45,155 194,47 84,18 31,1", "45 192,182 194,68 37,194 121,48 192,194 53,20 183,", "123 163,68 13,112 192,50 55,85 145,192 67,60 109,1", "87 26,186 18,20 33,166 83,196 53,168 43,105 72,30 ", "18,118 68,135 168,61 136,20 168,170 192,191 168,15", "8 96,194 108,125 168,68 74,181 194,110 18,116 168,", "195 168,4 194,106 10,194 192,168 169,72 69,192 89,", "186 84,100 157,186 122,190 194,145 115,19 123,151 ", "185,10 132,98 8,7 168,168 41,192 98,81 10,138 176,", "134 192,20 77,20 173,62 194,102 186,60 18,15 93,10", " 92"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 844041802;
    if(result == expected) {
        cout << "Test Case 97: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 97: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test98() {
    int n = 200;
    vector<string> edges = {"125 164,140 103,164 116,189 68,90 173,165 103,159 ", "96,7 5,9 46,189 19,166 62,136 166,149 96,138 121,1", "34 96,84 164,96 73,58 164,25 166,11 138,95 67,103 ", "123,74 187,191 173,106 138,133 164,96 1,29 163,189", " 72,96 107,17 96,189 27,104 96,167 96,64 47,146 17", "3,2 199,96 155,148 96,138 97,103 75,166 135,164 26", ",40 173,174 103,117 164,173 29,41 88,42 111,189 19", "7,200 96,81 189,156 189,183 166,164 33,128 173,32 ", "164,145 138,76 164,103 85,138 30,96 16,164 57,89 1", "93,47 192,189 55,138 192,189 138,103 198,190 164,1", "58 173,53 173,96 154,147 103,103 37,162 173,103 18", "1,103 93,168 164,138 124,180 63,166 70,8 189,155 1", "60,100 175,61 137,91 197,50 96,34 189,18 132,171 1", "89,161 96,77 155,186 189,56 4,189 103,69 173,26 4,", "118 173,138 110,182 189,189 36,164 178,176 164,35 ", "173,138 112,138 139,172 138,129 103,163 38,15 189,", "170 76,103 114,138 113,1 105,177 189,54 173,103 15", "7,160 77,103 7,138 89,173 31,103 144,86 138,173 12", "6,61 138,109 96,59 189,189 3,148 99,138 60,173 138", ",59 23,28 138,122 116,180 173,42 103,173 153,173 1", "69,43 138,6 96,103 100,96 44,188 173,115 138,164 9", "6,83 164,71 103,173 131,164 166,114 13,98 19,96 13", "0,142 96,29 38,65 189,138 184,74 103,150 103,80 18", "9,103 48,102 96,125 120,96 179,119 138,138 66,127 ", "153,164 10,166 52,80 79,173 14,96 143,158 101,96 2", "2,166 173,192 64,96 92,166 141,96 103,103 152,164 ", "185,196 138,82 173,138 49,138 78,39 96,96 94,195 1", "89,189 9,21 164,138 18,88 189,159 51,24 166,164 2,", "12 164,45 96,138 108,67 166,20 128,164 194,56 26,1", "38 151,123 87"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 696874631;
    if(result == expected) {
        cout << "Test Case 98: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 98: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test99() {
    int n = 200;
    vector<string> edges = {"35 142,183 9,141 177,142 126,63 93,80 7,65 193,8 1", "13,193 98,143 70,71 17,162 101,141 97,4 122,160 11", "9,31 26,91 200,100 21,39 12,3 100,142 136,67 7,7 1", "42,8 100,61 31,72 141,101 68,116 70,93 175,167 160", ",81 66,142 70,140 4,57 125,81 37,137 5,7 103,2 4,1", "48 151,189 101,172 124,45 13,4 134,45 186,153 101,", "32 148,32 14,28 130,89 9,160 60,147 93,142 145,12 ", "107,35 100,70 56,25 155,131 91,31 92,84 93,135 45,", "130 1,109 164,91 104,166 178,159 193,174 1,142 93,", "11 18,166 127,178 22,142 141,5 46,47 111,193 142,8", "2 5,172 146,197 68,59 180,180 77,18 12,160 182,70 ", "38,139 178,28 174,111 30,180 74,42 33,191 31,142 1", "86,193 6,141 50,54 7,168 180,41 25,49 100,107 11,1", "83 87,196 31,121 142,91 188,164 142,199 160,172 12", "0,164 62,156 33,192 93,34 4,161 164,43 93,24 25,51", " 91,15 180,126 5,141 165,146 142,179 164,100 149,4", "0 120,25 121,164 163,114 142,4 142,114 32,108 91,2", "3 5,36 93,101 64,45 190,73 7,181 137,81 85,93 48,4", "4 187,94 31,99 91,5 157,40 124,128 142,53 71,193 1", "54,117 81,33 195,69 141,33 198,75 193,125 17,91 14", "2,110 33,90 180,142 180,86 45,16 4,180 10,199 132,", "33 55,4 184,142 47,164 115,102 76,42 142,142 83,16", "4 27,76 78,138 31,125 53,19 91,187 142,70 171,14 1", "51,44 78,194 111,31 142,57 142,142 39,22 142,106 1", "17,55 170,30 176,101 136,52 185,31 129,79 1,164 95", ",150 7,87 128,112 193,152 193,79 142,141 173,169 1", "3,105 81,81 83,70 29,45 118,89 87,58 7,139 127,20 ", "141,180 158,185 25,160 145,176 194,133 4,102 44,70", " 88,123 25,7 144,70 96"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 641292447;
    if(result == expected) {
        cout << "Test Case 99: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 99: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test100() {
    int n = 200;
    vector<string> edges = {"92 120,177 39,132 109,61 175,187 148,36 193,193 15", "0,58 193,98 14,120 149,64 193,175 48,47 120,103 60", ",134 13,175 181,193 32,120 14,177 93,162 177,175 1", "05,78 120,115 193,126 11,49 120,143 177,177 1,91 1", "20,177 157,177 17,29 175,109 197,135 175,190 120,1", "08 120,154 175,175 69,80 193,109 175,122 109,193 1", "77,177 113,1 75,21 168,191 193,88 109,200 152,193 ", "51,120 118,59 75,177 74,107 172,53 175,114 120,152", " 65,11 9,120 24,120 127,193 148,145 177,177 5,82 1", ",120 137,1 11,70 194,15 97,81 175,168 175,62 120,1", "95 175,139 193,175 30,200 1,193 151,163 29,109 129", ",50 120,120 169,65 200,26 1,193 158,167 193,109 95", ",109 140,193 57,177 160,131 193,31 120,183 46,35 1", "75,109 138,193 109,198 177,18 175,130 177,55 47,12", "0 1,177 3,38 177,45 83,79 72,196 120,25 175,103 82", ",52 68,177 94,193 96,33 193,116 175,177 27,177 89,", "175 54,186 177,141 109,99 167,121 120,193 71,177 1", "25,12 175,104 109,15 177,171 175,175 41,175 192,15", "5 177,85 175,109 106,183 176,180 109,166 75,193 18", "8,193 110,175 123,175 153,155 19,167 6,1 73,8 120,", "7 120,111 177,120 170,177 10,120 156,173 175,42 15", "8,28 177,67 120,193 178,2 1,164 175,16 120,193 199", ",144 177,82 60,193 43,175 159,120 83,56 120,177 84", ",146 151,120 175,100 109,175 128,107 175,81 161,11", "2 177,87 193,20 109,174 193,109 124,193 147,79 1,1", "85 193,34 120,165 175,177 117,44 177,63 175,193 18", "2,136 109,23 120,193 4,90 193,179 177,66 193,175 1", "33,142 120,189 159,37 79,175 102,109 52,120 184,86", " 109,22 139,177 134,76 168,119 193,183 1,77 193,40", " 185,175 70,193 101"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 910331605;
    if(result == expected) {
        cout << "Test Case 100: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 100: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test101() {
    int n = 200;
    vector<string> edges = {"21 154,127 33,133 103,29 192,21 82,21 65,121 69,96", " 154,56 190,77 126,181 4,148 68,20 34,16 2,155 171", ",21 24,166 13,11 29,197 157,163 88,158 184,125 21,", "193 197,131 47,188 94,107 25,21 133,183 112,61 56,", "132 21,21 122,38 177,146 36,151 92,140 158,125 46,", "102 125,188 170,36 21,74 34,154 39,152 138,173 71,", "108 21,59 63,9 31,21 71,21 129,21 148,178 42,65 15", "0,59 121,18 116,27 53,163 117,177 91,186 145,21 53", ",107 8,52 172,179 85,105 40,98 146,21 126,175 64,1", "47 58,36 137,153 31,21 64,56 21,106 124,186 21,152", " 21,32 21,176 21,129 17,189 21,115 55,149 198,119 ", "41,50 164,133 26,105 99,21 134,167 132,165 21,21 3", "0,139 21,123 119,21 14,21 83,21 135,78 73,21 119,1", "65 69,70 194,114 21,185 87,119 49,43 134,110 90,13", " 21,160 69,28 78,200 132,109 21,59 165,3 122,21 17", "7,131 21,104 164,55 21,171 84,112 45,168 83,181 21", ",141 21,12 129,50 104,128 3,147 21,44 176,10 21,42", " 21,156 16,21 127,143 191,21 7,113 101,21 197,77 1", "42,33 80,21 198,87 66,131 130,109 18,34 21,109 116", ",194 67,21 199,103 62,107 21,171 21,186 48,22 97,1", "14 52,187 65,135 15,180 149,159 53,19 85,182 90,87", " 21,37 21,151 21,163 136,75 7,51 188,21 164,129 17", "4,137 146,21 78,35 191,188 21,95 24,163 21,93 189,", "33 144,21 22,106 89,22 6,70 67,169 60,1 135,54 21,", "21 85,10 86,198 180,162 72,21 169,103 26,21 31,147", " 196,21 29,118 134,79 82,16 30,42 100,5 92,21 67,3", "5 143,90 21,124 23,120 134,21 106,5 151,10 76,21 1", "12,21 158,81 105,126 142,161 108,35 21,89 124,195 ", "83,111 186,31 57,21 81,162 21,21 113"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 635400070;
    if(result == expected) {
        cout << "Test Case 101: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 101: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test102() {
    int n = 200;
    vector<string> edges = {"109 181,164 167,52 85,166 143,164 35,48 28,109 106", ",158 44,60 21,10 164,85 62,164 38,73 15,115 181,85", " 90,124 19,140 164,138 71,183 57,164 165,51 123,10", "0 95,116 165,109 44,14 102,11 143,91 109,192 57,28", " 143,165 77,184 24,89 164,174 148,176 164,152 28,1", "26 28,70 165,85 199,199 168,146 59,183 165,79 164,", "109 137,85 121,12 95,28 102,69 2,123 42,109 73,173", " 76,75 103,157 83,85 41,117 143,64 78,39 29,110 18", "5,80 109,85 149,123 164,6 172,108 144,142 60,56 15", "8,180 51,16 118,198 85,33 165,175 105,147 171,75 1", "65,13 108,195 164,164 153,97 164,120 164,149 150,1", "47 109,139 104,175 143,109 68,155 99,63 165,68 191", ",148 165,164 187,109 160,28 133,85 146,28 127,7 16", "5,34 1,152 156,87 141,134 143,190 143,165 131,28 2", "6,143 197,58 28,136 74,143 8,165 16,136 28,164 23,", "84 33,162 28,101 15,83 18,170 165,98 5,196 52,50 1", "43,85 135,13 123,164 186,109 85,164 92,109 184,154", " 109,165 189,143 200,178 179,143 82,100 165,151 14", "3,123 132,127 39,122 137,28 109,169 85,143 20,179 ", "28,32 188,31 135,9 25,66 114,143 123,109 34,143 17", ",12 100,132 55,30 177,28 177,123 163,53 122,182 14", "3,164 194,164 86,28 141,107 143,85 165,143 54,143 ", "125,189 111,76 165,109 112,42 78,193 88,43 164,192", " 183,94 63,40 164,180 72,37 164,165 67,21 85,65 13", "0,77 3,109 114,167 47,128 28,162 138,143 49,36 164", ",143 96,143 119,162 71,28 110,155 169,163 104,123 ", "157,69 85,165 88,28 113,101 73,4 67,159 165,129 85", ",143 22,172 28,164 27,143 161,29 127,41 19,48 93,1", "69 99,170 45,65 85,164 61,145 160,28 5,32 165,28 9", ",81 143,26 46"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 528610334;
    if(result == expected) {
        cout << "Test Case 102: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 102: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test103() {
    int n = 200;
    vector<string> edges = {"79 84,48 122,14 109,136 166,145 75,119 42,157 113,", "115 130,40 22,183 80,102 184,87 171,35 62,141 131,", "47 56,26 116,124 4,93 141,54 8,57 113,71 80,107 62", ",171 2,38 17,153 171,139 93,42 6,61 162,17 176,184", " 141,83 105,147 166,66 171,3 35,109 137,125 169,14", "2 59,14 94,122 62,63 184,109 51,68 190,33 139,155 ", "104,18 49,14 17,135 62,109 158,28 14,141 124,183 1", "99,128 191,46 68,78 21,138 29,12 107,49 62,70 76,3", "4 62,100 181,198 133,41 141,127 62,52 82,119 146,2", "8 73,105 141,89 42,62 141,79 42,188 9,88 28,46 77,", "171 62,11 27,62 197,16 13,108 163,123 42,16 56,191", " 101,181 187,194 185,28 65,14 181,23 22,80 199,141", " 42,16 60,24 90,163 96,182 99,42 198,121 140,68 82", ",117 107,141 19,92 171,99 16,5 123,34 149,171 61,1", "45 175,49 1,68 94,121 9,62 113,156 16,103 92,171 8", ",171 14,170 46,37 92,59 189,191 178,159 116,41 111", ",16 160,27 186,194 4,197 172,7 163,145 106,98 144,", "30 85,94 16,69 16,84 70,50 2,197 25,68 10,163 171,", "110 49,168 6,118 145,27 62,132 66,68 200,70 43,143", " 166,116 14,105 31,155 141,89 97,164 116,86 82,126", " 139,154 197,195 2,143 136,165 64,68 115,22 91,64 ", "171,171 59,68 148,5 166,180 20,81 59,42 85,167 56,", "114 36,19 53,45 196,177 60,129 70,114 42,152 87,11", "2 17,22 15,150 122,16 45,2 151,42 161,191 62,16 18", "0,93 33,44 116,153 39,62 21,68 138,145 14,42 94,42", " 144,43 129,141 140,193 64,90 62,64 120,125 62,9 1", "40,68 74,141 80,95 161,181 192,67 10,173 17,32 109", ",174 181,131 72,179 8,113 55,28 58,14 22,194 124,1", "34 60"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 726407941;
    if(result == expected) {
        cout << "Test Case 103: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 103: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test104() {
    int n = 200;
    vector<string> edges = {"157 83,178 158,78 91,196 43,58 172,10 143,36 6,193", " 194,147 37,5 1,10 92,164 10,20 43,148 44,123 162,", "180 193,182 41,54 89,101 18,106 54,89 39,165 37,13", "7 34,8 42,90 194,104 30,55 187,125 92,85 3,22 118,", "5 106,137 146,40 42,193 103,63 56,53 18,82 6,84 35", ",153 123,111 152,101 122,59 71,130 166,128 174,106", " 10,64 175,130 112,114 162,189 119,170 95,36 48,15", "9 48,136 66,156 198,111 50,23 164,78 151,116 173,2", "9 38,148 131,129 11,95 54,86 34,198 9,189 113,106 ", "193,67 151,137 191,162 130,51 190,92 80,101 70,66 ", "134,197 103,82 69,45 189,177 19,138 105,44 131,162", " 28,31 123,77 15,55 92,5 160,23 176,124 120,16 184", ",177 154,166 21,126 141,12 54,34 121,161 168,192 1", "1,50 83,158 99,72 137,54 171,117 41,30 32,194 149,", "133 64,130 46,184 5,60 42,178 20,106 84,3 102,91 1", "76,149 90,60 13,56 173,168 152,34 150,181 17,29 73", ",143 115,166 81,74 123,68 143,104 47,159 183,200 4", "6,56 107,75 7,196 130,10 96,186 58,108 71,42 130,5", "7 143,55 79,96 109,12 7,37 124,126 185,143 29,87 1", "93,26 46,34 130,182 117,162 24,12 75,105 96,58 198", ",130 18,33 55,22 2,10 126,135 18,130 157,161 157,1", "38 118,136 108,65 35,16 127,58 10,112 59,173 61,99", " 199,131 84,10 69,15 189,46 97,56 10,132 19,85 32,", "29 100,130 10,42 140,128 106,58 163,87 25,60 52,16", "7 169,154 81,37 130,60 98,64 46,164 67,189 10,92 1", "44,27 11,4 84,179 15,117 128,124 62,94 64,51 84,17", "3 139,196 199,49 15,14 126,5 181,134 112,167 128,4", "7 102,128 142,106 130,88 198,110 56,145 160,18 155", ",132 21,188 174,127 184,109 2,76 37,10 85,69 183,1", "1 126,101 93,195 124"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 837502851;
    if(result == expected) {
        cout << "Test Case 104: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 104: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test105() {
    int n = 200;
    vector<string> edges = {"37 162,32 198,124 172,195 77,168 174,58 18,119 161", ",182 50,132 116,108 71,156 39,63 61,167 161,18 32,", "119 133,19 185,106 66,66 72,5 145,4 2,41 66,42 32,", "23 55,27 193,176 137,130 91,115 112,32 194,78 198,", "18 170,189 33,85 22,45 36,38 66,2 174,49 87,175 14", "8,145 176,177 45,146 95,160 121,82 2,76 12,131 18,", "110 54,27 65,55 148,7 19,12 99,6 32,18 151,54 109,", "157 79,71 66,20 66,59 195,185 157,32 51,2 138,169 ", "105,130 71,94 31,110 187,129 163,50 123,11 27,94 1", "04,12 44,13 113,115 88,193 148,45 97,128 18,64 45,", "32 27,45 12,86 14,12 83,66 152,65 13,45 101,12 95,", "160 11,55 161,144 134,66 190,54 111,18 17,157 182,", "110 34,12 136,54 120,33 55,150 193,24 112,122 148,", "179 112,144 71,84 35,148 200,28 36,189 132,189 1,1", "8 74,47 148,127 18,187 34,55 10,157 18,71 143,54 1", "4,140 194,66 159,61 11,180 157,165 18,143 181,81 4", "3,184 40,118 112,188 118,157 149,45 192,73 142,73 ", "12,148 96,14 53,1 147,178 54,33 176,104 31,46 66,2", "1 56,126 35,69 198,12 40,56 71,66 186,114 18,86 53", ",157 171,101 15,66 107,176 155,157 158,166 148,117", " 193,90 44,157 12,54 195,193 25,31 157,189 43,45 9", "3,55 62,135 70,185 7,80 25,193 2,16 148,26 141,124", " 71,54 100,177 173,70 92,98 164,45 37,44 153,11 19", "6,64 68,3 193,125 54,196 48,161 87,161 52,35 45,70", " 12,66 75,102 177,112 55,25 105,155 154,137 57,191", " 18,59 77,67 130,103 66,30 25,54 45,66 54,29 76,18", "2 123,42 199,157 156,163 25,183 6,33 71,89 108,139", " 18,65 98,32 141,60 109,9 82,51 197,18 8,65 85"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 483542514;
    if(result == expected) {
        cout << "Test Case 105: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 105: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test106() {
    int n = 200;
    vector<string> edges = {"192 87,192 2,9 192,192 135,192 29,192 107,137 192,", "31 192,192 48,192 169,192 51,192 162,114 192,39 19", "2,192 181,86 192,25 192,192 18,192 108,192 113,192", " 184,192 133,192 124,136 192,192 5,57 192,192 142,", "65 192,192 180,11 192,27 192,47 192,95 192,192 58,", "192 138,192 28,192 35,125 192,192 151,192 94,71 19", "2,192 93,122 192,192 117,197 192,192 198,192 60,17", "8 192,64 192,158 192,192 15,192 84,121 192,105 192", ",192 17,192 30,192 172,76 192,112 192,118 192,192 ", "66,192 189,16 192,192 131,26 192,85 192,3 192,155 ", "192,192 193,192 128,192 50,168 192,192 140,192 100", ",59 192,192 170,88 192,150 192,1 192,192 91,192 24", ",67 192,40 192,192 106,175 192,116 192,192 55,192 ", "160,192 89,191 192,192 157,92 192,139 192,192 54,1", "92 99,98 192,80 192,192 79,192 104,192 196,134 192", ",192 195,63 192,192 38,192 81,70 192,192 177,192 1", "43,192 161,192 119,176 192,127 192,192 188,102 192", ",4 192,8 192,192 115,192 186,44 192,129 192,192 19", "0,32 192,187 192,192 147,192 185,192 12,7 192,52 1", "92,192 199,146 192,10 192,192 152,192 165,192 73,1", "92 78,126 192,103 192,192 62,171 192,174 192,192 1", "01,192 149,156 192,192 72,19 192,192 90,192 179,19", "2 173,167 192,166 192,144 192,192 145,61 192,83 19", "2,82 192,13 192,192 34,22 192,77 192,192 45,111 19", "2,109 192,192 36,74 192,192 148,192 75,192 33,192 ", "141,192 14,96 192,49 192,200 192,192 154,120 192,4", "6 192,194 192,192 132,69 192,192 153,182 192,192 6", ",192 110,192 123,192 21,192 97,130 192,192 68,41 1", "92,192 42,23 192,43 192,192 56,53 192,20 192,163 1", "92,192 37,192 183,192 164,192 159"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 583631762;
    if(result == expected) {
        cout << "Test Case 106: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 106: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test107() {
    int n = 200;
    vector<string> edges = {"150 81,70 197,137 116,116 36,63 126,66 89,102 169,", "35 142,163 178,61 36,7 61,139 54,3 62,200 17,128 4", "7,2 28,178 98,123 178,28 53,56 166,115 78,147 188,", "144 10,103 60,36 7,122 129,121 172,31 143,33 34,19", "3 4,107 51,146 24,125 45,80 17,2 198,185 41,124 86", ",186 136,166 159,136 59,178 46,197 46,132 133,174 ", "29,68 193,191 187,135 147,152 196,74 161,47 166,90", " 125,174 42,100 74,192 195,189 44,5 173,127 10,32 ", "150,73 170,141 13,183 8,25 38,15 41,60 178,136 178", ",102 113,123 185,135 107,22 89,101 26,90 133,27 69", ",170 123,98 23,80 31,180 123,8 95,54 74,155 179,17", "8 147,151 102,157 122,95 11,154 118,170 41,174 190", ",176 175,184 26,25 30,115 192,80 177,192 152,96 10", "2,83 71,118 130,53 178,131 54,189 89,197 141,142 2", "6,190 163,191 93,132 1,32 199,178 116,179 120,43 5", "0,191 178,162 89,105 98,185 75,187 14,145 111,48 6", "5,136 94,16 47,116 88,136 165,178 91,153 98,30 83,", "129 157,163 42,32 76,158 43,143 178,21 147,121 9,1", "60 83,54 40,20 37,98 63,167 198,25 160,148 64,108 ", "10,124 110,182 189,19 178,43 178,146 178,49 42,99 ", "43,43 87,18 176,171 124,149 18,178 90,109 2,6 86,1", "32 125,86 34,126 134,26 114,5 136,194 147,69 65,95", " 187,148 141,116 156,135 51,89 178,138 150,55 98,8", "5 163,178 184,134 63,118 103,178 10,155 43,155 120", ",140 89,77 178,60 58,100 40,154 82,119 9,91 150,19", "3 102,173 84,111 119,146 115,34 110,160 164,68 4,1", "84 39,3 18,72 190,91 199,16 19,79 17,5 84,121 181,", "40 178,19 166,142 39,46 148,104 10,67 30,8 191,9 1", "78,198 53,198 12,147 57,77 20,176 62,65 77,106 176", ",83 178,124 178,52 116,60 154,125 112,182 44,103 9", "2,111 121,143 17,62 178,97 110,178 102,152 146,157", " 10,46 117,69 20,168 77"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 859431624;
    if(result == expected) {
        cout << "Test Case 107: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 107: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test108() {
    int n = 200;
    vector<string> edges = {"49 196,62 174,3 102,125 194,106 3,78 91,3 153,93 6", "0,14 149,122 95,112 196,3 92,180 58,141 173,3 14,1", "47 3,115 3,64 176,56 14,155 102,61 82,179 84,105 7", "6,134 11,139 147,31 81,177 147,153 44,16 73,130 10", "8,47 3,119 41,3 166,3 95,124 196,133 165,11 156,20", " 1,117 115,126 3,98 19,123 29,3 193,196 143,19 186", ",103 161,48 105,79 196,197 91,178 38,47 141,60 3,1", "7 104,101 144,23 5,74 81,115 9,160 9,3 196,3 130,1", "82 126,188 24,114 3,65 3,98 192,3 29,70 175,156 13", "4,190 130,147 32,5 178,2 130,92 159,18 130,140 34,", "29 66,36 114,66 123,146 113,116 88,110 14,41 3,120", " 106,27 43,7 127,96 40,72 91,61 150,3 24,162 121,8", "7 26,184 165,15 105,42 125,3 70,37 41,59 130,115 1", "60,46 37,11 154,51 84,147 148,166 96,3 176,4 35,70", " 71,97 162,106 138,189 94,11 3,60 22,184 109,181 3", "0,100 27,142 52,41 169,97 21,183 124,68 142,3 97,8", "7 42,3 189,36 168,29 69,142 6,19 3,187 176,3 51,19", "5 70,65 35,107 193,172 147,41 28,12 102,59 8,54 14", "2,57 82,132 127,27 3,47 198,3 200,150 185,54 33,14", "5 20,166 40,151 64,199 41,3 132,189 58,39 137,67 1", "04,22 73,184 133,72 197,3 30,62 145,126 55,173 198", ",51 167,38 23,171 144,166 50,4 65,3 91,135 90,175 ", "195,140 3,76 15,170 21,114 13,86 140,176 151,65 85", ",116 67,19 83,3 105,77 7,17 3,121 170,38 3,88 17,1", "74 1,10 136,171 101,45 24,3 142,200 129,179 167,57", " 3,125 3,114 131,10 75,146 99,3 144,3 74,3 184,153", " 191,63 114,89 144,31 128,90 159,95 163,3 145,57 1", "85,146 3,132 77,26 194,142 53,74 128,182 80,111 19", ",114 164,118 32,113 103,126 80,92 135,200 158,25 1", "9,158 137,193 75,93 16,107 136,161 99,157 30,180 9", "4,56 110,39 129,153 152,44 191"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 544348313;
    if(result == expected) {
        cout << "Test Case 108: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 108: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test109() {
    int n = 200;
    vector<string> edges = {"72 27,113 199,159 189,27 1,163 84,47 58,52 46,136 ", "181,75 78,24 108,111 78,122 158,74 25,28 132,193 8", "5,199 94,186 196,37 98,174 62,101 122,39 50,33 108", ",67 179,97 185,104 93,163 194,129 134,69 5,155 22,", "148 156,10 6,89 103,46 158,25 90,19 129,150 167,11", "9 80,9 177,2 47,34 128,127 165,114 17,15 131,88 11", "7,142 44,80 174,154 145,128 79,38 41,100 157,19 10", "0,8 189,60 64,170 61,4 162,59 197,29 131,176 36,11", "2 60,49 188,96 168,190 32,131 5,117 112,166 132,81", " 172,14 94,191 24,33 133,63 94,129 95,146 148,182 ", "133,141 34,198 149,31 130,185 193,3 175,178 173,65", " 122,95 154,9 173,66 51,194 183,22 124,7 61,63 91,", "123 57,133 187,138 160,32 70,194 160,30 124,144 11", "5,17 126,192 129,97 45,90 153,27 104,17 35,178 62,", "136 28,195 68,26 42,129 189,159 105,136 164,200 19", "0,77 172,127 85,190 129,98 15,119 162,43 95,147 10", "2,186 87,18 147,117 21,3 81,88 60,58 56,179 53,48 ", "19,170 51,129 27,74 180,71 88,67 125,82 41,126 118", ",176 95,67 31,83 81,95 110,13 192,129 122,134 16,1", "03 129,151 120,2 66,52 122,77 144,70 153,129 148,1", "29 9,191 196,11 194,129 131,112 107,171 124,152 12", "3,149 129,197 40,184 73,72 86,184 137,189 22,135 1", "77,180 73,139 76,149 42,54 35,85 129,4 135,128 149", ",136 151,23 13,49 139,50 187,143 27,87 39,102 109,", "55 34,6 82,1 93,85 116,60 106,156 56,18 115,37 131", ",126 168,138 11,19 57,68 44,129 132,129 133,45 76,", "134 199,150 140,40 129,129 67,17 99,195 10,12 38,1", "29 75,19 152,151 132,43 145,94 20,169 28,125 53,17", "5 109,165 188,121 101,92 67,161 9,103 142,124 159,", "42 34,12 103,137 190,129 81,168 129,194 129,148 7,", "117 129,168 35,134 63,129 167"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 469648841;
    if(result == expected) {
        cout << "Test Case 109: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 109: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test110() {
    int n = 200;
    vector<string> edges = {"74 87,142 107,114 4,87 50,65 160,144 87,6 185,137 ", "193,67 90,116 36,153 71,57 90,81 186,22 69,87 152,", "76 10,197 30,145 174,177 141,154 25,48 4,134 41,22", " 87,78 154,143 104,30 110,128 13,132 195,100 122,1", "0 87,35 171,87 132,163 107,22 181,85 184,34 144,93", " 44,171 83,15 88,74 109,33 120,60 6,10 59,115 6,13", "5 50,127 65,71 21,139 87,125 72,170 188,136 74,18 ", "10,24 120,138 97,192 186,101 90,131 35,180 4,116 2", "3,40 75,102 8,9 110,183 152,66 72,87 65,29 154,54 ", "158,186 87,111 104,145 70,75 87,161 87,200 173,172", " 6,8 198,6 123,186 106,194 144,92 87,120 7,187 77,", "62 50,191 161,1 152,46 4,98 144,90 129,87 116,157 ", "99,87 107,156 11,38 55,94 189,47 4,186 133,137 56,", "41 54,152 73,170 87,87 8,61 128,87 128,49 141,9 77", ",188 15,139 39,159 70,87 4,94 42,79 8,93 91,44 99,", "182 175,166 186,126 164,40 130,197 108,181 5,85 17", "3,82 168,86 144,156 68,21 134,131 3,156 169,26 156", ",111 175,124 159,87 9,176 120,87 156,162 156,95 13", "2,143 42,189 182,107 80,165 144,91 136,52 132,8 14", "6,152 45,150 152,153 51,109 157,132 14,193 28,124 ", "75,113 155,50 190,20 170,10 89,191 164,84 92,151 6", "5,53 8,152 103,120 87,83 13,126 64,154 199,184 84,", "65 2,50 37,158 51,87 134,161 97,87 154,156 96,120 ", "112,147 50,187 196,12 88,144 121,148 179,116 27,16", "7 4,178 107,56 122,39 117,107 105,49 5,90 87,174 1", "30,113 20,63 10,100 87,94 87,61 3,90 17,66 179,64 ", "16,116 149,155 12,43 132,87 6,28 38,186 31,177 140", ",16 138,200 168,118 116,82 92,154 19,125 139,132 1", "19,140 69,58 154,117 148,65 32,100 55,108 196"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 736585869;
    if(result == expected) {
        cout << "Test Case 110: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 110: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test111() {
    int n = 200;
    vector<string> edges = {"169 119,200 28,41 45,164 101,101 155,71 111,83 50,", "194 187,187 40,126 59,194 76,40 137,75 51,56 176,4", "4 129,140 24,36 129,96 127,200 136,115 124,27 75,3", "3 1,40 96,152 138,71 187,129 9,83 129,116 129,25 4", ",37 110,144 8,20 107,107 163,165 84,151 100,40 22,", "135 9,62 115,174 161,27 141,159 71,197 6,71 17,198", " 147,54 40,31 129,101 40,6 172,55 183,36 79,51 171", ",91 47,28 36,24 109,129 93,102 11,36 162,69 153,19", "5 194,41 113,36 107,59 149,41 187,57 36,129 120,36", " 84,6 49,41 157,30 41,149 40,84 140,199 162,74 88,", "71 39,20 125,129 68,178 40,101 148,35 40,185 25,4 ", "65,158 175,186 23,15 42,89 41,165 109,115 3,179 19", "4,6 19,115 187,12 50,194 94,36 130,41 180,190 92,5", "8 129,99 64,46 129,189 59,61 28,71 13,149 131,40 1", "74,173 46,188 160,150 23,129 74,53 123,40 21,71 90", ",141 171,185 4,144 170,133 11,77 57,166 48,36 185,", "2 133,87 107,93 193,1 132,61 200,58 2,145 103,36 1", "86,117 26,40 151,177 131,150 55,129 112,156 152,77", " 119,6 143,67 9,129 8,32 35,63 70,156 52,71 82,31 ", "158,40 47,6 122,97 135,119 57,40 129,40 182,16 61,", "115 10,70 110,112 132,6 191,83 26,5 99,114 121,108", " 147,6 60,130 114,40 147,18 115,129 160,103 74,40 ", "98,34 114,96 181,130 121,194 95,21 38,81 29,42 36,", "40 190,196 194,25 139,81 63,187 6,71 14,67 106,105", " 77,99 104,129 146,58 102,40 70,106 97,117 12,41 4", "3,40 166,194 192,75 36,167 41,142 115,40 184,8 170", ",178 86,66 147,168 115,73 33,73 112,194 7,36 69,85", " 178,126 177,183 186,79 118,115 72,134 54,36 187,9", "6 80,56 31,178 128,154 121,110 29,129 156,40 53,40", " 99,40 78,175 176"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 830386361;
    if(result == expected) {
        cout << "Test Case 111: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 111: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test112() {
    int n = 200;
    vector<string> edges = {"196 138,176 18,24 69,123 130,166 98,165 166,150 97", ",95 16,68 87,90 25,66 4,148 152,126 31,172 54,70 1", "82,198 140,144 82,142 140,103 168,166 123,184 52,1", "69 160,101 8,60 6,23 166,134 35,154 61,166 184,156", " 171,71 84,135 190,88 21,55 166,139 198,158 43,191", " 48,103 1,182 53,167 68,122 137,118 81,198 56,135 ", "158,63 163,120 135,199 78,61 14,146 85,32 18,135 3", "2,166 172,53 95,82 166,69 2,166 53,107 70,112 104,", "153 121,123 92,28 198,195 185,62 7,57 170,166 177,", "90 137,53 169,146 154,36 42,58 89,141 115,105 31,5", "0 10,119 24,45 20,144 27,5 166,165 3,53 89,157 136", ",32 61,138 87,80 134,149 107,174 29,119 156,132 19", "1,22 57,181 106,44 53,153 108,166 141,199 200,164 ", "198,113 100,187 166,145 8,100 53,180 117,40 175,43", " 116,69 197,18 198,120 64,61 85,7 166,41 120,77 85", ",166 32,192 149,69 60,68 163,53 34,32 105,131 110,", "179 95,24 178,73 166,124 85,93 7,103 53,50 53,87 6", "3,102 96,184 45,26 141,51 72,42 44,31 13,55 108,19", "5 199,100 104,121 55,143 80,186 161,188 30,53 157,", "131 53,32 53,185 78,87 127,76 131,84 166,46 117,17", "5 53,35 166,28 12,98 94,194 81,33 106,120 83,150 1", "32,149 182,147 91,33 166,166 81,53 59,79 189,31 15", ",79 34,162 19,156 69,51 165,146 74,140 65,32 68,43", " 120,89 133,9 157,129 31,109 15,101 166,20 52,57 5", "3,25 122,4 71,85 183,32 24,53 162,97 191,99 82,157", " 151,98 148,94 152,137 166,53 78,59 96,145 47,166 ", "117,63 11,47 101,67 29,186 128,105 109,21 31,66 84", ",53 97,15 37,177 161,87 155,181 173,38 125,75 69,1", "66 147,53 30,120 125,67 187,159 162,143 35,193 85,", "3 72,65 18,86 103,193 49,128 177,114 105,39 87,17 ", "104,111 30,33 173,99 27,187 174"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 959182876;
    if(result == expected) {
        cout << "Test Case 112: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 112: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test113() {
    int n = 200;
    vector<string> edges = {"7 110,47 200,20 19,104 158,183 107,197 130,195 147", ",70 193,118 59,150 125,132 153,79 82,67 66,170 108", ",47 113,47 3,48 162,77 4,56 154,196 123,52 129,189", " 53,47 4,32 176,53 103,67 142,22 16,130 178,67 81,", "170 53,17 103,45 67,114 127,59 58,29 157,14 124,13", "6 31,174 91,30 101,184 118,13 27,177 194,102 67,11", "1 184,47 141,74 98,193 175,125 92,16 132,110 1,133", " 188,98 139,126 92,67 35,47 158,184 72,46 82,47 98", ",49 110,82 107,99 87,27 148,123 91,33 140,27 47,17", "2 79,44 39,177 90,97 151,175 74,166 48,135 200,98 ", "94,82 160,105 67,177 197,87 94,144 92,195 98,107 6", "9,160 74,12 60,28 37,57 189,4 28,124 199,67 82,63 ", "72,4 163,131 32,75 10,67 91,72 167,56 71,60 189,13", "7 195,198 132,78 67,174 109,67 138,47 187,172 6,4 ", "40,122 61,62 183,106 125,16 98,20 67,38 182,133 25", ",86 139,97 83,2 128,50 30,80 67,167 144,26 38,164 ", "47,41 116,152 39,160 197,20 95,94 64,168 23,183 2,", "47 149,96 77,2 107,165 79,195 100,198 21,82 38,168", " 151,163 73,155 146,9 170,120 59,34 41,56 47,109 1", "91,51 177,139 179,122 67,185 89,116 33,47 43,124 4", "7,55 105,196 191,94 52,127 67,118 90,185 4,88 30,1", "59 105,115 136,193 171,93 67,47 192,143 190,169 60", ",168 193,38 8,18 139,75 172,54 130,65 158,103 85,4", " 181,167 173,90 119,85 68,48 151,126 76,156 47,157", " 4,42 44,47 11,161 189,46 24,44 46,67 4,127 121,4 ", "112,15 90,46 39,47 5,122 84,200 145,164 115,32 36,", "133 67,144 117,175 60,75 79,33 98,87 52,198 16,98 ", "32,146 164,30 82,116 186,155 31,180 168,97 190,134", " 126,125 130,41 33,85 190,110 82"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 597351233;
    if(result == expected) {
        cout << "Test Case 113: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 113: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test114() {
    int n = 200;
    vector<string> edges = {"165 113,165 105,165 194,199 165,165 84,46 165,73 1", "65,165 52,173 165,165 170,134 165,167 165,108 165,", "165 115,40 165,153 165,98 165,165 189,147 165,104 ", "165,186 165,165 142,165 89,10 165,165 43,151 165,1", "65 127,86 165,165 143,91 165,165 37,165 78,18 165,", "165 53,155 165,158 165,165 60,165 183,124 165,9 16", "5,171 165,165 72,50 165,13 165,165 114,165 159,165", " 28,95 165,20 165,36 165,165 3,165 63,103 165,6 16", "5,31 165,76 165,165 12,165 77,165 11,185 165,165 2", ",26 165,165 45,165 129,178 165,165 71,145 165,101 ", "165,165 25,165 35,165 70,85 165,179 165,22 165,96 ", "165,198 165,16 165,56 165,62 165,138 165,165 157,1", "90 165,58 165,29 165,119 165,80 165,136 165,90 165", ",165 177,4 165,94 165,92 165,165 132,34 165,165 12", "6,83 165,165 41,165 7,165 17,165 188,137 165,156 1", "65,165 187,102 165,165 135,19 165,165 160,165 54,1", "65 64,23 165,165 21,182 165,5 165,51 165,192 165,1", " 165,174 165,165 184,165 148,165 47,165 8,24 165,1", "65 191,165 32,165 100,165 112,154 165,116 165,99 1", "65,165 175,79 165,165 133,165 81,165 15,165 164,19", "6 165,38 165,200 165,125 165,165 82,165 152,107 16", "5,165 93,165 27,68 165,165 197,44 165,165 66,42 16", "5,165 123,48 165,165 180,131 165,165 172,88 165,16", "5 144,141 165,146 165,165 74,165 168,128 165,165 1", "11,165 97,161 165,165 181,87 165,69 165,149 165,11", "0 165,165 65,165 30,165 169,165 150,14 165,195 165", ",165 106,165 57,165 130,140 165,61 165,165 121,193", " 165,120 165,165 162,117 165,109 165,165 139,165 1", "66,165 49,55 165,75 165,118 165,165 163,165 176,16", "5 39,33 165,165 122,165 59,165 67"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 583631762;
    if(result == expected) {
        cout << "Test Case 114: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 114: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test115() {
    int n = 200;
    vector<string> edges = {"158 131,74 136,13 65,113 92,97 177,178 125,97 34,5", "7 78,168 183,169 186,31 126,144 118,35 90,11 139,1", "86 159,198 69,186 1,198 146,186 7,199 186,136 90,1", "30 26,148 24,17 150,112 94,113 116,72 74,126 136,1", "91 136,170 173,136 186,178 25,4 28,40 186,165 120,", "112 56,200 82,23 83,182 66,146 114,119 97,146 124,", "150 10,54 97,12 82,58 147,166 87,4 154,29 146,185 ", "146,136 144,196 130,186 171,64 42,83 146,191 109,1", "4 41,146 9,108 115,108 69,121 110,128 151,168 128,", "144 44,178 45,55 117,14 198,76 175,186 166,98 197,", "68 46,129 56,14 52,42 191,164 58,101 16,161 146,2 ", "193,106 95,71 185,163 18,129 181,198 113,74 48,186", " 68,93 133,136 97,85 146,186 140,21 124,30 186,80 ", "51,156 146,97 162,58 12,6 74,131 64,78 122,107 190", ",186 27,121 167,3 138,75 86,10 16,86 196,145 183,1", "44 20,179 173,186 43,158 191,198 190,2 66,160 178,", "134 89,172 192,181 94,60 28,133 89,122 136,86 137,", "81 53,143 151,186 102,198 4,198 183,90 95,33 91,15", " 186,190 55,157 122,194 193,112 174,149 111,40 142", ",187 74,198 173,39 29,146 167,93 24,67 144,111 69,", "146 96,152 113,53 136,146 51,22 99,146 175,100 16,", "188 2,17 100,110 167,49 146,113 104,146 91,14 141,", "176 173,70 126,173 84,8 146,99 61,106 79,32 126,19", "8 86,178 198,47 53,74 180,14 135,184 79,144 189,17", "2 4,90 184,19 107,136 24,198 186,77 126,88 161,186", " 127,169 59,186 123,50 132,146 65,37 173,163 47,10", "5 126,197 57,19 117,85 103,164 200,183 143,50 186,", "62 14,112 136,192 60,98 122,22 146,146 165,61 22,1", "46 38,58 198,75 26,186 11,113 195,194 182,134 24,1", "6 198,53 73,2 136,149 115,96 63,3 186,136 146,155 ", "69,190 5,81 18,127 36,178 153"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 563895771;
    if(result == expected) {
        cout << "Test Case 115: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 115: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test116() {
    int n = 200;
    vector<string> edges = {"42 153,132 152,11 128,69 129,95 138,142 126,169 18", "6,142 135,16 51,135 30,196 48,28 88,173 171,97 126", ",90 199,99 37,162 99,193 162,99 28,166 137,11 160,", "196 105,180 162,131 189,65 54,147 162,6 142,114 18", "8,135 171,3 33,102 154,161 163,200 80,196 174,2 76", ",90 105,53 167,168 142,121 60,30 127,163 13,10 99,", "39 135,196 46,30 35,196 52,92 177,196 165,105 18,1", "31 75,22 196,162 134,44 185,85 59,114 76,162 176,4", "7 152,160 72,172 135,142 25,142 194,13 178,122 156", ",69 54,117 164,139 162,34 105,162 79,196 120,101 1", "10,40 99,135 148,105 142,113 25,177 108,152 105,83", " 142,13 39,99 140,29 115,142 78,182 46,82 32,157 1", "55,151 114,14 162,99 8,9 162,83 15,29 62,105 65,14", "4 196,74 193,129 65,42 49,162 58,20 93,196 99,162 ", "96,31 116,117 45,99 146,161 39,72 105,158 155,183 ", "177,78 55,92 183,139 136,196 75,189 4,196 98,135 6", "0,19 5,162 109,196 3,162 53,12 135,135 185,105 153", ",197 162,159 48,172 27,28 17,135 104,70 99,196 93,", "59 179,135 112,135 82,103 84,71 174,86 176,195 28,", "190 41,122 105,107 142,12 81,196 103,38 99,143 24,", "162 95,42 141,102 99,196 125,26 175,41 198,60 29,1", "40 149,77 196,155 9,105 51,184 153,102 67,68 89,12", "4 109,142 166,196 190,101 135,129 119,1 172,40 7,1", "87 197,91 196,143 142,75 189,99 111,99 87,94 41,19", "1 52,49 184,57 51,164 81,64 162,118 148,63 58,94 1", "90,117 12,147 21,142 123,142 133,105 68,34 50,76 1", "05,104 23,188 2,162 135,62 121,105 31,181 196,145 ", "123,38 66,150 194,158 9,186 142,18 43,5 196,142 26", ",36 162,162 56,100 30,112 61,106 72,73 102,98 130,", "35 170,192 107,162 92,59 135,80 105,127 170,72 128"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 775239658;
    if(result == expected) {
        cout << "Test Case 116: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 116: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test117() {
    int n = 200;
    vector<string> edges = {"41 167,95 194,9 127,39 160,32 34,58 125,192 193,61", " 111,9 118,179 97,130 173,135 164,75 77,72 198,41 ", "179,74 182,166 142,200 68,13 154,94 73,58 49,154 4", "1,92 16,77 168,48 49,114 52,41 85,191 24,192 116,1", "80 189,166 41,174 71,39 151,100 89,32 165,20 92,15", "3 170,167 45,151 34,148 178,183 196,178 165,28 128", ",41 94,35 24,63 65,29 175,158 123,158 41,85 44,18 ", "138,41 126,120 167,31 166,103 185,49 125,194 156,1", "85 32,71 94,126 172,149 74,40 32,97 38,115 124,177", " 186,69 53,119 52,3 63,34 198,131 109,141 27,1 198", ",175 76,181 37,91 172,94 104,102 151,88 179,41 77,", "105 74,5 85,180 41,102 39,9 32,32 62,124 42,54 4,5", "2 108,81 63,68 140,138 184,37 41,17 159,23 87,188 ", "11,170 190,100 139,149 182,32 188,57 68,12 17,60 1", "88,161 100,11 60,130 150,86 59,78 151,183 199,191 ", "22,118 127,187 77,106 77,131 34,186 34,111 41,167 ", "83,34 175,32 124,52 34,80 111,175 171,176 158,87 3", "2,192 34,135 129,130 34,99 158,159 30,37 113,34 13", "5,18 184,4 43,170 96,171 146,143 80,93 132,192 98,", "157 177,43 32,167 8,16 32,112 159,81 144,25 7,32 1", "41,2 34,133 111,126 91,32 41,41 95,94 14,166 47,70", " 131,110 37,135 101,196 136,68 41,162 179,155 126,", "186 157,40 86,40 59,32 128,53 130,34 196,36 111,25", " 180,51 154,142 46,198 66,57 200,84 95,198 56,62 1", "52,122 135,184 41,137 186,132 5,159 121,34 100,6 3", "7,67 70,20 16,15 130,64 166,165 148,196 26,191 10,", "179 195,33 191,108 114,145 63,154 147,82 83,170 34", ",100 50,19 170,177 21,85 132,134 196,131 67,158 90", ",34 49,89 197,115 42,41 79,191 34,159 41,34 63,34 ", "74,156 95,138 163,117 192,34 41,180 7,175 169,184 ", "55,43 54,154 107"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 79893389;
    if(result == expected) {
        cout << "Test Case 117: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 117: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test118() {
    int n = 200;
    vector<string> edges = {"10 187,188 176,195 176,94 30,55 121,190 197,128 51", ",11 32,60 94,94 22,54 169,68 58,95 184,89 168,139 ", "87,54 114,49 4,190 198,163 195,80 169,4 91,108 176", ",93 161,58 53,94 128,152 19,12 167,185 116,21 33,1", "01 106,65 74,110 42,17 54,112 12,89 70,124 65,83 1", "32,61 184,92 134,184 92,9 92,38 76,94 140,33 159,5", "4 40,194 148,18 194,94 150,92 84,54 111,10 176,58 ", "126,34 12,58 56,104 54,110 200,8 190,40 158,58 31,", "12 96,1 141,54 16,199 120,16 26,184 171,119 76,12 ", "130,117 94,13 36,79 92,34 63,29 68,118 189,141 92,", "64 33,47 94,92 194,58 14,179 92,92 136,54 92,193 4", "1,109 79,129 176,178 167,175 176,27 145,193 58,43 ", "58,50 156,133 15,12 182,86 94,143 176,149 92,131 8", "8,123 62,177 11,94 54,62 35,44 112,47 181,2 58,54 ", "103,56 191,12 50,128 24,72 22,173 92,11 92,176 58,", "110 77,180 128,12 123,54 151,4 92,89 94,65 92,164 ", "5,71 26,94 122,69 58,16 71,53 162,55 12,128 138,90", " 92,94 131,36 58,92 5,82 92,11 97,196 161,158 105,", "137 105,102 141,94 110,94 59,12 15,81 151,20 176,5", "8 119,39 54,141 67,127 31,125 141,73 58,46 12,153 ", "94,37 131,94 33,48 155,135 176,113 14,75 12,94 165", ",58 52,45 190,12 176,155 12,69 146,100 60,12 6,199", " 54,58 27,4 78,12 94,23 89,54 170,196 93,12 132,99", " 58,58 92,52 174,176 115,137 158,65 154,94 190,176", " 139,54 66,186 182,110 160,94 98,12 106,104 196,7 ", "92,176 116,58 192,19 12,194 28,191 3,189 92,25 94,", "166 144,86 157,6 144,126 183,147 65,85 184,57 73,1", "42 92,82 172,107 131"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 427744910;
    if(result == expected) {
        cout << "Test Case 118: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 118: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test119() {
    int n = 200;
    vector<string> edges = {"154 50,23 185,3 143,57 83,154 152,185 162,89 55,72", " 180,98 91,158 127,88 83,143 114,143 196,65 154,18", "0 175,82 40,149 186,1 92,69 152,146 80,159 55,192 ", "50,199 27,152 41,82 48,65 67,42 84,92 148,29 74,19", "9 160,103 65,188 35,29 193,21 143,154 143,83 151,3", "1 199,71 150,29 10,174 95,61 185,65 18,62 82,1 176", ",155 180,55 14,55 130,154 98,185 97,123 199,83 139", ",1 154,154 80,149 157,199 112,143 172,9 185,29 154", ",24 83,150 142,82 43,154 180,170 164,65 120,144 13", "7,42 17,54 180,180 33,199 125,113 13,66 29,53 199,", "137 70,100 152,84 126,152 75,65 38,143 4,146 186,1", "2 180,199 141,119 152,174 176,76 200,181 199,82 34", ",121 137,154 137,171 16,82 60,110 55,152 99,183 82", ",156 98,65 79,83 168,83 154,154 35,86 29,143 173,1", "54 55,154 185,124 185,153 80,107 156,154 84,26 55,", "83 68,165 198,73 143,137 136,50 93,29 87,129 137,2", "9 44,36 65,180 78,111 65,25 83,108 180,137 169,51 ", "80,83 90,148 95,194 1,59 154,98 133,29 189,19 143,", "138 104,107 200,65 132,143 178,137 177,164 154,81 ", "113,154 199,199 22,122 82,138 127,152 116,161 180,", "153 157,152 145,184 35,154 82,140 83,134 137,17 49", ",63 185,171 37,152 105,29 2,182 131,199 8,165 49,9", "3 104,180 167,65 6,35 147,142 184,77 82,50 158,29 ", "101,163 83,117 55,195 29,106 65,28 81,65 5,185 109", ",55 47,102 152,180 52,185 197,32 82,143 166,152 58", ",164 16,85 29,143 94,45 137,182 37,84 198,199 187,", "13 11,91 76,28 59,152 191,64 137,71 147,30 55,82 3", "9,179 59,190 137,56 55,164 131,135 185,115 55,82 7", ",59 11,180 118,96 137,15 185,20 83,128 185,46 55"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 336976913;
    if(result == expected) {
        cout << "Test Case 119: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 119: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test120() {
    int n = 200;
    vector<string> edges = {"165 88,72 194,91 50,126 139,147 165,142 175,175 16", "5,32 35,27 19,108 87,175 73,194 192,109 160,78 138", ",103 1,143 135,175 116,165 134,93 194,1 165,152 89", ",68 78,194 3,15 130,105 113,75 144,194 157,48 148,", "168 175,90 94,133 188,79 165,175 128,111 165,45 16", "5,165 155,57 193,80 48,194 146,42 194,114 125,143 ", "165,3 198,194 140,18 28,165 110,165 189,75 44,154 ", "175,37 171,119 34,156 140,25 1,115 14,165 159,43 1", "87,147 40,84 170,150 58,124 123,165 58,151 140,163", " 175,194 95,119 129,97 194,15 194,137 194,190 187,", "98 197,71 90,60 36,186 39,74 194,196 175,67 165,19", "4 60,164 175,39 42,194 59,131 165,38 95,166 175,17", " 86,70 165,194 16,165 26,157 101,172 92,194 175,18", "9 7,125 165,100 183,82 175,171 165,165 112,143 127", ",45 4,63 165,152 165,183 165,161 197,8 16,129 34,1", "81 81,18 194,5 165,153 83,117 175,87 54,62 147,175", " 53,181 56,104 194,111 29,193 69,131 47,132 26,181", " 194,187 175,162 125,165 119,99 167,165 48,181 55,", "17 134,95 176,185 183,194 160,165 90,165 99,192 76", ",26 11,48 12,118 165,51 159,169 13,102 125,83 184,", "194 83,20 140,106 22,106 194,93 41,175 121,166 115", ",141 183,175 178,30 194,113 194,147 52,175 77,112 ", "46,197 194,195 137,145 23,9 194,24 72,194 87,49 18", ",165 50,121 179,120 75,173 136,194 199,175 200,169", " 194,194 188,191 104,172 194,21 152,121 10,180 165", ",78 165,88 61,175 177,134 86,64 15,194 165,172 33,", "27 194,166 14,35 82,179 10,5 158,3 31,194 75,122 1", "72,182 165,182 65,165 170,23 165,118 66,28 49,87 9", "6,139 174,173 149,193 175,173 194,58 85,139 175,32", " 82,42 186,194 123,6 175,58 107,175 2"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 252874013;
    if(result == expected) {
        cout << "Test Case 120: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 120: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test121() {
    int n = 200;
    vector<string> edges = {"67 81,30 16,96 127,187 84,68 136,2 137,187 181,115", " 127,44 6,23 188,181 27,89 119,103 122,35 163,182 ", "72,110 30,89 92,18 41,23 125,146 19,49 154,181 114", ",33 101,182 187,92 119,41 38,10 114,23 186,155 165", ",177 182,23 111,93 99,28 161,173 41,5 143,66 41,11", "4 59,37 30,176 189,150 166,159 41,142 11,67 36,28 ", "41,143 127,97 22,32 107,114 70,58 177,151 197,127 ", "141,184 114,120 143,154 160,88 67,139 23,24 149,75", " 182,17 12,114 53,42 56,23 9,127 64,182 191,164 10", "2,61 67,154 30,42 143,47 181,131 48,67 111,28 103,", "151 15,30 199,41 33,148 154,78 67,169 67,106 199,1", "00 67,114 144,32 140,140 114,28 50,54 182,143 80,1", "54 162,182 105,85 57,91 193,67 4,165 154,158 143,1", "43 40,132 84,121 182,157 23,68 63,194 127,67 112,1", "16 127,23 140,122 94,81 90,140 145,181 87,133 187,", "171 140,127 83,197 15,183 28,129 143,134 163,181 7", "3,192 182,140 152,63 136,174 181,30 124,107 43,21 ", "113,187 130,14 23,182 71,167 127,104 127,1 143,65 ", "127,187 74,170 181,200 23,175 33,187 48,166 97,23 ", "8,29 187,102 140,154 13,142 28,39 41,190 30,140 14", "7,117 67,101 175,187 26,89 182,127 179,67 143,46 6", "7,79 91,127 28,45 181,193 172,182 154,180 181,111 ", "97,30 63,55 124,140 135,99 23,97 193,7 154,30 41,8", "5 30,23 178,168 114,138 41,166 109,23 189,161 52,6", "2 41,82 94,134 79,154 19,182 25,26 3,2 28,187 108,", "128 127,198 127,182 15,51 181,86 187,177 20,123 12", "7,40 17,109 35,30 31,21 28,185 146,67 118,34 127,1", "26 41,60 28,30 98,103 82,153 143,154 69,181 195,95", " 154,127 196,77 109,148 156,24 28,67 76,6 143"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 100154099;
    if(result == expected) {
        cout << "Test Case 121: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 121: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test122() {
    int n = 200;
    vector<string> edges = {"74 196,126 59,79 69,64 18,3 59,58 122,63 162,121 3", "6,102 38,14 154,9 21,165 63,115 59,192 149,48 50,1", "06 88,136 172,38 164,93 37,79 171,158 14,87 84,71 ", "127,57 103,20 129,137 63,14 110,144 94,10 91,63 49", ",140 101,187 172,93 96,119 144,63 38,96 63,149 63,", "76 109,58 63,10 34,166 149,198 59,189 38,12 28,96 ", "40,49 182,29 48,90 151,193 129,183 90,118 153,79 1", "60,88 47,90 80,97 135,90 75,46 91,63 144,64 95,49 ", "100,60 68,96 85,172 88,170 137,74 11,158 17,66 123", ",117 21,19 144,120 35,144 15,124 66,31 191,74 25,2", "8 69,66 107,51 140,191 44,145 127,179 133,173 74,1", "63 137,116 46,152 86,142 66,85 159,90 63,63 97,165", " 138,16 128,105 38,60 41,66 63,125 66,38 4,149 146", ",176 110,132 57,127 143,97 197,60 63,65 140,149 2,", "66 43,85 70,152 78,22 88,128 159,81 63,48 55,30 17", "9,60 184,144 186,116 113,66 62,118 28,73 134,91 63", ",120 106,60 92,63 59,129 114,118 63,194 79,54 76,1", "12 162,5 191,6 59,60 199,118 160,165 174,64 63,139", " 60,136 120,63 121,56 100,157 152,178 46,200 129,1", "01 133,137 13,129 156,127 63,63 76,63 134,99 171,4", "7 180,21 63,179 150,116 168,167 191,165 42,72 14,1", "47 149,98 129,82 160,57 63,61 134,45 81,63 133,116", " 34,165 33,175 149,89 133,77 10,49 56,140 150,48 2", "6,137 7,112 154,83 76,57 104,155 76,129 63,63 84,2", "7 159,111 21,63 136,101 24,57 181,130 57,48 190,12", "9 39,63 191,137 169,152 63,144 23,137 188,185 127,", "93 27,168 52,53 162,32 91,74 63,51 67,159 131,152 ", "148,8 21,38 1,63 48,161 74,162 110,136 177,195 152", ",121 108,112 141"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 234959080;
    if(result == expected) {
        cout << "Test Case 122: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 122: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test123() {
    int n = 200;
    vector<string> edges = {"100 3,53 141,177 44,147 99,177 119,36 177,24 181,1", "13 170,88 135,190 151,86 127,161 39,185 99,52 97,1", "84 134,114 140,51 53,145 177,18 23,9 102,9 163,64 ", "177,76 177,183 26,177 65,27 21,120 161,42 109,94 1", "25,158 43,177 169,177 55,144 116,93 19,41 143,34 1", "22,168 78,45 35,101 54,157 99,84 192,12 99,192 177", ",177 196,179 177,177 131,49 177,139 16,177 107,146", " 177,111 177,42 177,177 82,62 89,9 195,165 186,142", " 132,188 149,119 162,198 127,14 48,177 116,120 39,", "170 70,45 165,78 133,32 129,89 177,175 138,177 71,", "145 106,117 177,16 148,95 29,195 177,21 177,177 68", ",99 60,78 177,164 198,167 159,33 177,104 55,77 177", ",177 182,177 152,177 153,129 177,130 188,25 115,17", "7 113,144 75,11 60,1 36,177 118,177 51,72 129,125 ", "177,152 52,177 183,165 177,76 56,78 29,177 112,79 ", "1,104 87,6 179,81 177,124 177,126 67,172 156,154 4", "9,165 121,132 155,135 111,92 33,79 36,177 40,179 1", "94,96 177,108 89,164 177,78 63,177 143,74 180,169 ", "31,118 100,17 177,177 136,191 156,177 188,196 178,", "160 173,110 64,107 50,10 103,101 177,177 25,24 146", ",15 177,112 2,165 90,91 85,7 177,177 173,192 197,1", "94 6,177 128,91 177,10 20,33 189,166 38,117 98,18 ", "77,200 25,58 107,37 177,175 187,124 174,199 78,22 ", "193,177 34,113 70,177 38,140 177,83 98,150 38,123 ", "40,74 177,177 134,19 128,158 7,20 103,139 148,125 ", "105,126 177,46 68,177 132,86 164,191 177,52 30,15 ", "28,5 126,50 58,71 66,43 7,171 24,125 48,137 125,93", " 128,130 149,177 161,73 177,84 197,3 118,59 112,96", " 8,61 165,51 141,83 117,191 172,177 80,125 57,69 1", "90,145 4,47 131,167 177,177 22,177 16,176 73,187 1", "38,20 177,187 177,151 177,13 144,177 99,87 55"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 663545262;
    if(result == expected) {
        cout << "Test Case 123: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 123: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test124() {
    int n = 200;
    vector<string> edges = {"78 82,154 36,92 169,63 31,188 60,182 30,108 137,60", " 120,80 129,27 36,142 38,36 19,94 10,36 170,198 12", "6,179 76,33 19,36 38,147 133,16 17,133 28,195 36,8", "1 36,178 84,156 25,122 161,148 36,198 5,15 77,160 ", "88,117 36,59 36,36 12,178 48,41 162,45 36,181 36,1", "92 36,164 80,36 16,36 60,96 36,150 96,7 186,193 19", "9,81 98,45 169,42 139,9 117,7 36,128 88,77 72,102 ", "180,7 151,166 124,127 38,36 119,28 147,170 103,35 ", "6,158 24,36 190,36 78,101 36,110 107,14 131,54 122", ",174 63,36 158,36 137,36 179,32 36,59 138,136 152,", "142 127,36 51,47 186,36 25,52 36,163 188,40 78,50 ", "176,171 11,21 63,36 183,67 68,190 121,91 32,111 39", ",88 36,162 114,78 185,69 36,2 134,103 37,56 132,67", " 199,36 161,36 42,167 85,36 23,36 1,109 45,57 87,4", "6 36,111 92,107 36,124 53,194 187,14 58,36 105,70 ", "3,36 102,146 34,163 146,90 165,62 97,50 36,49 75,7", "1 36,143 46,6 189,120 34,65 175,86 36,112 27,95 36", ",11 36,113 51,43 145,61 86,36 93,75 151,36 194,36 ", "64,36 4,179 196,161 54,132 197,166 118,153 36,10 1", "3,36 83,184 190,36 182,36 44,36 70,116 52,170 20,7", "4 181,133 36,72 15,36 106,165 123,63 36,18 179,104", " 114,126 36,87 36,143 200,58 36,166 36,36 66,155 3", "6,36 191,36 6,125 70,149 8,114 36,152 36,145 20,19", "0 55,193 98,89 144,2 138,144 36,172 42,36 80,178 7", "3,29 148,83 115,130 181,99 132,94 36,36 65,173 6,3", "9 109,177 129,157 36,36 165,97 36,126 5,178 36,36 ", "168,37 43,135 106,3 125,22 194,88 141,36 15,36 132", ",159 107,49 47,36 8,46 200,68 81,79 165,131 58,71 ", "100,101 140,110 159,130 26,134 59,74 85,26 167,13 ", "94"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 849304118;
    if(result == expected) {
        cout << "Test Case 124: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 124: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test125() {
    int n = 200;
    vector<string> edges = {"159 59,190 73,107 9,11 54,194 187,44 165,61 159,18", "5 107,43 78,72 180,152 105,141 107,77 176,140 197,", "69 44,40 44,75 135,31 75,159 173,134 103,107 92,18", "1 48,184 107,45 44,107 15,27 96,167 157,144 167,21", " 107,79 93,138 171,7 123,14 75,199 167,111 107,133", " 170,187 85,97 44,37 107,6 91,70 75,153 44,107 16,", "95 44,58 90,11 18,11 17,107 33,188 176,36 147,46 1", "45,172 29,167 118,75 176,190 5,190 29,75 115,44 39", ",126 107,87 44,98 162,107 125,50 190,113 167,183 1", "57,108 129,131 121,167 107,192 159,75 2,110 63,75 ", "107,164 66,44 3,94 107,73 133,10 91,79 115,90 163,", "44 78,58 76,142 98,161 75,167 181,175 70,56 94,190", " 148,99 159,120 38,117 78,116 172,166 71,155 107,2", "5 178,68 167,51 101,167 102,190 103,12 101,11 190,", "62 51,167 200,167 86,88 130,164 159,44 81,60 44,15", "9 186,44 151,147 195,13 107,190 84,195 36,35 70,17", "1 75,44 189,128 159,39 105,104 73,159 100,44 179,8", "3 103,146 194,44 32,190 158,137 55,57 26,42 174,1 ", "159,142 109,146 190,53 167,44 20,44 169,44 182,44 ", "119,177 156,46 49,159 123,196 64,175 23,75 71,23 7", "0,107 28,107 129,85 146,121 159,154 190,29 89,75 3", "0,75 101,42 75,172 89,107 46,159 140,152 39,36 190", ",142 75,112 107,167 139,107 47,87 106,189 24,65 27", ",74 36,75 82,170 104,167 156,27 124,6 167,65 31,75", " 8,52 75,90 190,196 75,107 120,144 122,159 25,27 3", "1,58 163,132 107,44 130,114 80,54 18,67 190,41 107", ",19 180,145 49,167 44,162 142,168 58,44 143,190 19", "1,44 190,107 137,198 93,149 167,42 180,4 44,193 17", "2,57 190,12 62,190 110,34 94,190 22,160 75,186 127", ",159 75,190 159,114 190,174 180,150 167,44 136,115", " 198"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 544962976;
    if(result == expected) {
        cout << "Test Case 125: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 125: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test126() {
    int n = 200;
    vector<string> edges = {"153 178,79 135,153 16,53 158,37 197,31 68,53 152,1", "19 68,68 140,53 8,102 176,53 91,153 112,105 53,34 ", "70,68 48,10 54,21 53,197 53,197 195,177 91,121 192", ",153 151,197 88,138 91,35 130,187 91,58 53,1 53,11", "9 173,149 53,197 110,10 68,53 131,163 182,197 134,", "3 154,14 68,172 153,132 136,170 153,166 53,22 153,", "11 153,91 89,68 153,111 87,118 197,82 147,130 197,", "66 197,153 137,91 174,53 74,177 159,53 144,44 166,", "50 197,2 130,103 197,63 117,75 71,91 33,198 53,91 ", "97,114 68,179 53,160 153,68 180,174 47,18 53,109 6", "8,38 68,62 153,153 26,76 63,91 142,133 162,153 64,", "153 194,107 153,150 68,77 32,9 197,4 53,19 91,91 1", "65,196 197,28 91,197 52,152 139,68 12,84 68,192 15", "0,65 83,181 153,42 197,197 120,23 98,91 123,7 153,", "91 96,99 136,153 78,101 153,143 28,197 72,128 70,1", "53 186,3 68,146 68,67 197,153 43,91 30,91 51,53 65", ",68 75,91 155,156 68,153 13,84 113,53 36,117 76,19", "1 153,68 6,15 91,98 68,124 53,53 55,158 41,91 80,6", "8 116,153 190,126 153,122 68,32 197,184 153,91 193", ",188 153,91 164,161 198,53 59,73 53,53 90,108 91,1", "82 68,38 5,68 167,45 145,197 162,169 129,24 68,67 ", "125,153 92,197 29,51 132,20 153,91 157,68 129,61 1", "53,127 153,68 197,91 168,93 197,153 40,111 53,165 ", "49,199 91,85 197,91 34,104 140,197 82,2 35,51 99,6", "8 81,200 153,94 153,141 85,197 135,46 153,197 95,6", "8 25,53 39,12 56,185 153,176 197,53 145,93 175,197", " 57,106 91,153 171,197 86,60 197,24 148,100 3,27 5", "3,121 150,197 69,183 197,53 189,17 91,117 68,115 5", "3,91 153"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 243000290;
    if(result == expected) {
        cout << "Test Case 126: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 126: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test127() {
    int n = 200;
    vector<string> edges = {"44 64,27 32,71 52,22 192,197 170,186 136,162 148,1", "68 85,3 147,42 56,74 108,173 103,169 45,33 114,187", " 36,186 140,70 186,186 23,77 51,163 128,178 85,55 ", "195,52 152,45 148,146 2,109 58,154 36,156 81,34 37", ",140 121,11 119,127 83,140 194,180 121,13 2,21 94,", "49 55,186 40,71 106,148 55,24 172,183 149,68 126,2", "6 186,145 120,76 36,32 134,111 199,106 152,12 68,1", "48 56,90 3,48 189,140 174,190 112,103 122,165 164,", "69 145,182 23,40 147,78 176,13 14,171 193,149 66,1", "86 72,36 126,105 156,177 94,180 29,137 26,140 28,6", "1 188,36 149,61 64,191 2,68 7,4 88,148 19,9 51,132", " 155,186 103,130 179,186 148,150 1,33 43,131 148,1", "25 45,148 53,63 119,27 134,97 58,32 41,78 151,141 ", "56,4 187,128 186,116 70,94 110,55 91,93 36,24 186,", "192 194,80 84,170 133,148 36,5 146,143 94,19 167,1", " 123,144 196,162 189,135 51,148 34,12 7,176 181,62", " 45,133 63,18 166,50 124,34 6,98 128,190 53,92 46,", "36 44,33 35,99 149,22 65,36 140,122 175,117 75,97 ", "102,39 78,73 45,51 186,186 117,83 79,186 85,64 188", ",164 115,164 113,55 17,101 128,76 25,151 176,34 10", "0,140 179,176 140,29 121,160 186,36 108,148 92,200", " 155,16 84,87 133,140 123,8 154,138 192,88 20,72 1", "07,129 118,165 113,106 140,120 69,18 118,83 175,19", "4 89,123 150,10 113,161 167,172 50,147 90,20 4,36 ", "142,148 105,15 36,157 45,30 142,140 164,149 95,96 ", "139,155 31,160 5,198 93,51 158,55 82,159 128,36 94", ",184 34,174 80,69 136,18 129,15 60,36 155,166 186,", "36 96,28 59,11 197,140 193,59 111,30 47,196 186,19", "9 28,11 36,47 58,85 67,127 173,16 174,22 194,124 1", "72,54 46,148 33,38 165,102 142,151 86,57 85,153 34", ",14 160,104 155,36 41,56 185"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 370472432;
    if(result == expected) {
        cout << "Test Case 127: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 127: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test128() {
    int n = 200;
    vector<string> edges = {"96 171,83 61,38 93,194 166,175 109,13 41,18 96,121", " 168,146 127,40 192,105 175,30 49,131 66,140 180,4", "7 132,174 17,118 36,98 26,113 184,195 103,122 72,6", "9 38,131 78,114 91,9 111,81 167,10 138,33 96,193 9", "0,181 186,66 126,82 75,96 118,168 193,177 182,104 ", "186,67 66,45 189,10 62,161 80,70 153,77 88,17 184,", "5 192,66 186,57 85,174 184,178 137,178 45,6 199,66", " 135,57 8,183 100,185 147,48 41,125 23,98 182,7 10", "5,74 71,30 168,21 37,77 154,4 193,80 173,42 58,21 ", "108,138 59,192 45,124 162,64 66,55 42,144 111,61 1", "56,127 144,66 132,15 103,162 139,136 143,193 197,1", "33 123,188 102,56 52,170 92,96 80,83 121,20 65,19 ", "170,120 91,69 93,116 114,165 45,90 79,33 162,105 1", "93,41 168,29 171,176 66,193 45,21 103,106 150,63 9", "0,21 95,179 160,190 158,168 177,146 101,55 121,172", " 85,145 199,35 120,30 82,188 164,123 66,198 26,149", " 126,101 53,113 191,112 66,19 169,141 129,197 31,1", "09 84,58 156,147 52,48 172,3 94,145 76,34 87,60 4,", "4 151,143 115,123 12,2 96,1 110,45 113,140 18,92 4", "6,96 87,153 130,21 14,81 113,9 33,33 185,134 34,11", "2 157,119 197,45 23,6 27,53 9,39 62,191 65,45 50,7", "5 154,74 155,110 196,191 20,46 100,177 179,159 112", ",32 81,158 27,195 99,155 66,106 59,21 96,84 129,11", "8 43,136 115,25 23,142 73,21 148,171 107,124 187,1", "52 16,13 8,97 116,96 188,44 45,35 86,22 132,190 76", ",142 45,45 11,70 56,187 51,31 119,131 28,110 96,72", " 96,68 126,60 151,113 93,86 33,62 168,54 96,72 24,", "89 96,33 190,45 117,45 163,63 79,92 113,178 128,32", " 167,168 66,15 194,97 86,169 183,160 198,3 64,88 4", "9,141 7,185 130,33 113,16 51,139 152,193 115,39 15", "0,66 21,166 99,200 142"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 887089422;
    if(result == expected) {
        cout << "Test Case 128: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 128: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test129() {
    int n = 200;
    vector<string> edges = {"117 164,94 75,62 9,54 146,78 161,84 164,193 92,154", " 120,143 71,200 159,14 33,56 197,157 80,164 125,14", "2 80,46 2,196 48,71 175,159 138,83 196,80 9,69 27,", "129 133,186 144,60 69,33 62,19 156,107 139,130 84,", "193 173,122 167,197 23,88 115,198 135,180 34,146 3", "0,40 123,50 79,107 28,173 82,132 80,25 78,66 80,46", " 1,32 104,93 25,57 75,149 136,195 67,86 183,36 159", ",160 3,54 95,49 129,5 68,113 84,191 87,161 165,101", " 32,89 127,26 104,77 87,69 16,183 29,81 57,167 150", ",46 172,109 195,194 35,62 10,116 148,34 22,80 117,", "133 141,160 96,80 42,103 162,104 58,41 153,110 129", ",129 17,33 7,189 80,87 99,167 171,135 160,73 152,9", "1 179,80 29,175 188,80 97,41 31,38 69,80 153,85 13", "2,133 189,105 88,102 195,34 132,4 41,95 128,63 187", ",103 42,178 173,185 103,61 197,98 11,80 163,197 14", "7,31 126,37 25,192 76,176 94,90 29,50 80,160 114,2", "1 15,56 190,106 85,143 144,183 177,179 76,88 37,19", "5 171,79 43,179 97,68 79,137 179,167 195,153 59,12", " 164,72 1,193 182,136 24,126 21,139 64,13 154,168 ", "32,173 18,146 166,145 136,56 142,85 13,148 169,182", " 173,135 55,27 19,76 121,187 127,50 68,47 152,80 3", "7,188 174,80 171,66 32,189 129,158 148,44 95,138 8", "0,39 80,22 120,46 53,140 79,159 65,81 196,1 155,83", " 176,151 133,44 98,90 118,119 32,19 69,68 134,81 8", "0,54 80,157 46,159 194,71 181,157 1,39 135,148 42,", "108 90,111 76,56 52,19 8,127 163,57 199,97 76,160 ", "39,70 79,33 9,15 59,11 30,152 145,194 74,40 45,163", " 107,188 131,40 87,117 84,80 175,100 90,51 59,124 ", "193,66 104,90 183,164 184,136 170,62 6,64 63,99 80", ",99 40,186 174,197 142,105 165,80 145,136 152,112 ", "40,194 138,148 103,33 20,27 80,80 182"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 106396865;
    if(result == expected) {
        cout << "Test Case 129: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 129: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test130() {
    int n = 200;
    vector<string> edges = {"158 85,157 20,13 84,99 96,129 48,136 116,167 158,2", "8 158,95 168,102 26,139 134,86 151,27 46,133 8,85 ", "31,194 119,7 113,159 48,87 158,25 82,46 43,159 179", ",125 95,74 24,20 85,125 27,4 133,161 187,27 198,16", "0 174,72 145,71 87,158 199,123 49,128 85,27 13,187", " 121,46 73,137 62,45 63,199 107,48 85,21 196,62 16", ",146 71,180 58,114 68,187 158,117 20,187 149,51 66", ",181 39,189 175,196 7,11 99,82 158,186 61,125 168,", "85 169,47 81,27 163,134 90,9 65,28 54,126 83,27 2,", "27 142,53 165,76 143,121 45,66 187,27 187,53 149,9", "3 135,27 102,59 103,17 56,68 37,79 111,23 177,41 1", "56,29 24,41 85,85 200,103 120,121 63,48 160,158 13", "7,178 77,38 77,107 32,162 49,193 108,172 106,74 18", "7,158 110,130 27,92 187,36 92,104 41,42 200,33 144", ",84 190,158 197,184 141,53 60,79 48,58 132,178 14,", "147 140,48 61,144 35,128 34,22 185,91 97,48 100,65", " 57,109 36,85 97,115 48,127 118,184 167,124 66,197", " 175,199 81,145 37,154 148,124 152,89 15,135 193,1", "9 163,187 89,170 89,188 100,75 86,17 48,88 5,198 2", "2,37 187,14 77,21 131,166 31,48 140,176 26,148 187", ",146 150,30 105,74 29,44 54,27 116,10 142,107 81,8", "5 49,134 85,116 52,167 141,155 115,27 33,178 187,8", "2 173,128 182,12 195,4 27,64 1,171 154,148 126,166", " 101,2 23,195 67,163 164,193 110,14 98,71 122,70 9", "1,138 89,50 200,6 130,109 92,3 89,112 85,110 135,6", "0 153,177 2,137 127,57 9,18 82,27 119,101 31,1 48,", "181 192,87 146,76 112,78 82,149 60,195 85,70 97,11", " 191,158 57,51 69,55 130,11 161,183 172,99 161,106", " 48,35 33,190 13,103 85,189 197,169 105,176 102,14", "3 112,88 28,192 39,151 75,40 129,198 185,142 80,85", " 39,158 196,182 34,58 27,27 48,169 30,4 8,85 151,9", "4 119"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 664049648;
    if(result == expected) {
        cout << "Test Case 130: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 130: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test131() {
    int n = 200;
    vector<string> edges = {"108 188,192 179,24 52,126 82,30 51,183 51,67 119,1", "76 118,173 168,105 115,145 144,67 181,44 75,47 30,", "144 67,95 145,103 184,57 7,139 21,72 28,67 93,84 1", "35,164 42,114 94,170 148,67 73,82 35,109 110,6 50,", "7 125,158 141,67 45,38 132,199 68,31 67,178 71,193", " 59,67 51,173 182,65 169,67 118,193 82,71 5,28 133", ",107 65,162 12,17 90,172 73,14 67,67 90,178 67,73 ", "110,181 91,14 25,118 150,186 100,67 142,192 98,130", " 70,174 103,23 41,187 23,68 53,185 142,189 12,51 1", "96,13 75,191 64,160 105,52 177,129 140,160 179,56 ", "104,130 163,16 111,158 67,182 39,198 133,172 109,2", "1 20,67 23,7 16,37 31,115 98,189 144,142 77,54 116", ",191 119,106 67,3 198,173 66,160 67,156 142,155 76", ",173 157,9 11,106 149,79 53,67 84,101 184,61 173,8", " 176,94 137,60 108,32 106,82 190,17 60,131 154,113", " 178,65 67,93 55,79 199,72 124,45 137,67 21,127 46", ",93 62,120 51,49 83,101 86,125 111,116 67,82 63,15", "3 132,49 27,38 27,112 118,167 130,97 147,170 56,16", "1 64,95 162,142 10,51 195,21 2,154 67,37 99,67 7,1", "78 180,151 81,139 26,67 52,34 130,15 74,130 88,85 ", "164,52 43,1 36,58 199,1 18,4 174,78 188,26 20,52 1", "86,114 152,33 81,23 29,146 152,106 89,148 74,117 1", "58,173 134,23 102,67 72,14 18,200 73,92 87,142 140", ",23 138,92 67,93 136,67 130,194 82,67 82,119 123,1", "59 106,83 153,25 121,86 4,45 146,19 13,11 197,164 ", "48,31 197,128 131,119 161,15 104,151 154,52 175,40", " 52,69 106,33 128,121 36,164 96,65 147,22 106,67 1", "73,78 90,6 23,67 74,62 122,132 67,164 67,164 166,1", "71 51,155 158,127 67,165 13,67 199,67 103,80 142,6", "7 13,143 22,99 9,3 124"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 873065675;
    if(result == expected) {
        cout << "Test Case 131: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 131: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test132() {
    int n = 200;
    vector<string> edges = {"7 115,167 19,196 67,58 53,147 165,16 173,62 93,147", " 157,140 181,141 58,76 53,97 190,21 115,11 48,146 ", "118,21 132,79 150,59 73,164 21,84 93,136 99,42 175", ",61 64,58 111,58 51,123 199,33 192,167 92,95 30,19", "3 170,88 165,113 58,173 119,42 140,123 75,85 137,1", "23 156,109 22,141 28,123 95,168 110,114 58,152 21,", "86 23,196 163,138 126,131 162,107 163,35 114,3 130", ",123 144,70 139,58 95,169 14,195 21,196 148,29 116", ",79 198,81 80,56 75,182 33,37 8,23 108,58 124,62 1", "80,45 3,112 95,161 61,44 58,38 21,159 8,94 177,117", " 198,173 45,177 95,25 112,103 20,93 104,84 71,13 1", "54,37 92,21 123,197 185,174 118,172 165,48 60,187 ", "175,138 36,71 180,23 27,85 128,15 179,158 41,80 50", ",59 166,63 186,82 136,60 6,125 144,194 51,127 80,1", "83 131,106 38,139 123,163 95,23 95,112 72,200 115,", "21 170,113 77,44 101,76 160,54 38,57 20,123 14,2 2", "1,58 134,9 173,79 102,58 1,70 43,123 97,43 87,199 ", "149,21 185,74 58,156 142,81 99,1 12,184 78,170 121", ",32 174,173 3,95 80,68 134,176 179,118 178,4 163,1", "30 90,184 21,166 34,123 96,160 143,91 55,26 59,34 ", "111,58 180,21 98,80 99,8 19,164 133,160 135,22 158", ",123 186,123 24,17 135,97 103,130 89,183 151,84 40", ",30 105,144 155,11 199,139 15,74 153,123 109,198 2", "9,116 102,61 21,173 95,123 175,138 21,53 129,116 5", "8,163 69,113 100,122 184,188 177,189 30,187 168,17", "4 18,125 192,100 183,26 111,47 124,123 55,135 129,", "37 49,67 10,60 149,12 147,5 83,33 155,192 52,163 1", "48,96 18,77 131,145 30,67 65,5 20,96 178,21 58,31 ", "177,166 191,5 190,109 128,58 167,24 46,48 39,123 1", "54,66 80,140 168,88 1,171 112,136 120,179 43,85 15", "8"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 353521490;
    if(result == expected) {
        cout << "Test Case 132: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 132: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test133() {
    int n = 200;
    vector<string> edges = {"56 163,77 57,110 77,58 171,96 155,196 198,112 75,1", "85 168,9 149,177 138,141 192,50 144,125 47,133 155", ",4 82,9 172,152 180,6 44,162 109,77 81,199 58,82 1", "98,21 58,69 112,25 124,162 118,187 126,23 57,57 10", ",160 53,176 50,57 32,198 184,84 107,91 52,41 57,17", "8 57,149 128,150 2,20 9,195 89,104 181,76 108,17 8", ",130 191,188 155,84 14,63 12,43 75,88 134,59 151,1", "08 149,189 187,57 164,160 84,176 137,50 33,190 180", ",25 155,100 48,176 149,62 200,79 148,55 57,57 111,", "176 65,69 43,90 77,77 26,117 77,121 144,25 7,135 3", "8,79 84,159 135,179 118,137 125,24 21,154 155,174 ", "169,105 57,160 19,45 166,161 155,73 137,52 54,145 ", "87,115 147,4 196,146 123,14 78,182 187,102 84,26 1", "13,66 84,187 71,57 95,62 106,39 172,145 9,155 147,", "17 9,187 57,13 20,93 7,72 90,193 149,127 57,42 149", ",51 123,187 22,77 138,108 185,114 37,104 9,29 92,2", "7 146,183 28,9 63,67 132,192 107,155 131,176 169,7", "7 175,97 149,33 121,44 48,15 58,62 57,101 120,80 6", "8,187 35,139 6,151 147,98 149,142 77,58 35,86 77,6", "0 66,38 159,67 95,190 152,158 157,149 37,170 84,47", " 73,136 187,187 34,186 197,40 18,103 170,29 174,19", "8 35,35 155,93 124,122 178,169 29,197 84,132 95,19", "8 194,158 134,45 116,141 107,48 36,48 35,143 77,34", " 129,200 106,54 91,46 173,2 102,85 155,77 9,24 15,", "94 74,139 48,65 45,57 83,85 46,49 155,64 18,155 84", ",57 119,22 140,68 56,163 68,195 9,101 28,166 65,16", "7 42,18 77,90 1,59 115,54 35,157 149,190 57,146 84", ",3 117,75 176,102 150,76 185,61 187,84 176,99 53,1", "63 176,120 183,38 9,9 130,157 134,165 189,187 31,1", "49 16,109 179,155 109,94 187,97 30,153 187,70 173,", "70 85,77 11,136 5,156 187,155 183"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 239069517;
    if(result == expected) {
        cout << "Test Case 133: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 133: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test134() {
    int n = 200;
    vector<string> edges = {"147 86,158 62,182 12,122 112,45 166,188 2,145 138,", "70 52,181 3,2 80,184 155,51 159,148 69,22 142,43 2", ",183 132,172 110,28 191,117 93,150 12,21 185,198 7", "3,115 12,12 161,170 191,198 110,190 63,99 159,25 1", "2,162 198,94 27,12 20,181 153,176 199,165 137,195 ", "181,168 44,36 174,156 153,149 162,18 173,193 67,49", " 16,83 89,78 141,11 181,151 67,87 18,74 162,162 54", ",183 94,178 8,196 82,181 70,1 27,144 181,130 2,94 ", "51,183 158,129 125,125 181,181 45,181 174,127 197,", "88 51,12 124,160 75,65 183,133 159,113 164,24 35,1", "89 151,2 12,16 51,94 8,21 162,85 77,180 198,170 28", ",87 58,29 112,19 120,108 2,68 39,186 198,169 183,1", "57 139,16 84,199 37,30 59,12 68,181 93,2 104,97 12", ",51 170,167 26,162 14,48 75,183 162,66 45,55 171,4", "1 19,13 9,61 45,109 56,177 197,4 183,98 127,116 43", ",127 119,78 109,7 182,29 122,165 50,35 51,106 105,", "12 164,45 46,10 96,19 94,103 196,139 181,64 163,53", " 183,200 110,176 37,175 181,189 193,6 53,140 186,8", "2 51,79 162,192 119,179 78,168 35,66 32,198 121,13", "5 183,198 2,12 142,186 89,83 140,143 198,155 12,18", "3 176,162 85,94 138,171 12,192 177,111 143,183 167", ",194 188,17 11,134 114,114 45,106 102,100 80,12 45", ",183 64,48 160,44 24,30 181,33 66,131 104,190 94,4", "0 154,147 88,183 92,102 105,105 94,73 81,137 50,5 ", "14,163 57,150 38,82 103,56 179,181 42,29 94,195 18", "7,45 123,181 126,45 137,71 200,183 10,15 92,9 81,7", "2 76,86 88,172 71,91 101,179 51,181 60,121 152,90 ", "54,128 2,32 33,198 151,97 31,23 132,34 168,58 173,", "181 51,101 118,2 136,91 51,41 120,91 118,57 64,107", " 46,177 94,99 133,2 18,40 12,162 47,13 73,183 146,", "149 95,94 75,148 139,72 12,49 84"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 47879731;
    if(result == expected) {
        cout << "Test Case 134: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 134: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test135() {
    int n = 200;
    vector<string> edges = {"33 186,96 74,41 92,84 168,131 61,135 51,27 103,131", " 167,45 86,171 192,92 124,200 169,176 169,106 41,1", "31 160,196 69,134 169,19 80,89 15,88 164,115 144,5", "4 112,83 167,80 7,117 57,169 189,108 124,93 55,86 ", "169,172 59,11 51,67 56,184 10,29 98,154 107,174 11", "1,39 132,134 49,84 96,141 28,185 171,126 29,24 28,", "100 120,37 43,50 104,39 113,156 151,92 166,131 53,", "152 185,128 28,49 15,131 101,4 171,134 89,114 170,", "154 131,12 131,84 82,87 34,6 176,171 29,65 114,33 ", "167,47 168,198 165,109 171,121 148,53 73,189 58,19", "4 20,25 19,84 114,146 51,95 129,18 10,85 177,46 11", "1,25 7,131 92,40 136,114 31,131 177,117 37,142 114", ",70 114,92 54,183 169,149 143,110 23,169 19,170 62", ",22 171,32 193,92 163,100 84,158 114,159 22,123 16", "9,44 41,197 147,95 114,5 177,151 179,29 14,192 138", ",198 84,84 39,133 85,193 84,44 3,133 5,180 109,9 9", "7,181 88,188 193,121 199,48 198,101 199,84 10,72 4", "2,169 81,8 109,191 65,195 55,150 169,77 131,144 68", ",145 182,114 1,61 35,13 104,171 130,136 139,131 78", ",136 16,151 36,34 114,171 114,39 190,197 131,42 14", "2,66 92,84 169,169 92,84 104,169 127,101 148,114 2", "7,110 84,169 20,69 60,200 21,51 84,92 182,173 160,", "57 43,114 119,125 166,140 4,3 41,64 119,187 163,28", " 84,79 114,137 192,102 131,90 198,144 99,56 131,18", "5 118,92 164,162 185,168 30,169 122,172 197,130 11", "6,171 136,110 178,83 186,94 69,171 144,10 2,169 46", ",76 193,143 92,151 171,55 171,164 52,110 71,150 10", "5,69 171,17 104,181 164,38 109,169 37,66 155,161 8", "2,131 75,157 1,192 26,46 153,158 63,91 55,171 131,", "97 131,59 147,175 168,153 174"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 603709937;
    if(result == expected) {
        cout << "Test Case 135: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 135: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test136() {
    int n = 200;
    vector<string> edges = {"123 114,89 124,22 120,102 31,42 12,98 78,175 42,15", "5 158,196 147,61 141,151 42,61 116,192 67,49 175,1", "75 148,168 54,23 77,166 192,93 104,86 13,93 120,14", "3 193,146 161,21 193,73 90,138 66,150 151,50 16,79", " 183,68 135,22 84,13 35,42 40,65 178,104 190,178 1", "77,155 102,48 194,140 161,186 78,120 97,40 71,123 ", "33,12 90,50 42,42 125,157 50,144 7,82 64,27 200,20", " 141,178 92,2 137,152 19,42 179,79 129,10 42,42 15", "2,199 123,167 9,184 32,188 136,185 154,28 134,174 ", "88,77 27,16 85,169 75,84 197,3 43,159 165,16 162,4", "2 133,131 74,134 165,142 6,200 111,154 118,144 101", ",120 42,48 126,38 79,191 26,105 106,130 3,192 99,1", "93 160,18 1,141 25,42 178,181 34,117 23,193 76,134", " 42,79 42,55 42,3 196,23 47,52 42,155 172,56 10,51", " 141,13 137,135 75,180 55,193 119,170 42,170 156,1", "73 197,58 121,125 107,193 121,94 154,187 126,110 1", "19,91 119,2 11,132 96,154 149,144 42,84 15,45 155,", "175 109,56 153,163 174,45 31,18 125,64 55,8 50,145", " 123,83 188,154 42,135 42,13 11,69 170,80 70,187 1", "08,5 112,126 42,81 3,95 37,34 24,192 150,164 135,1", "84 12,70 136,81 147,39 104,72 50,42 17,2 42,46 34,", "62 79,59 88,57 40,78 34,74 141,191 41,147 42,53 16", "7,182 175,65 177,50 96,123 42,42 193,163 170,200 1", "13,14 36,156 191,60 133,66 122,29 55,87 198,23 189", ",31 42,4 174,42 54,28 100,44 74,5 79,140 87,1 125,", "66 42,167 115,140 42,42 141,36 195,128 34,36 79,11", "1 52,42 106,139 66,144 63,141 30,152 115,42 136,34", " 42,34 124,104 173,50 171,6 10,19 167,95 40,59 191", ",52 103,176 179,52 117,151 166,101 7,127 66"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 680763302;
    if(result == expected) {
        cout << "Test Case 136: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 136: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test137() {
    int n = 200;
    vector<string> edges = {"158 199,71 34,100 29,50 15,160 115,147 112,75 197,", "159 193,84 131,66 24,27 97,69 28,38 168,119 55,38 ", "106,96 122,95 123,31 194,199 126,61 100,37 151,146", " 167,77 22,32 72,38 91,41 117,143 70,196 22,195 11", "4,80 87,138 65,178 102,135 30,133 39,170 115,104 1", "74,174 115,58 148,147 107,101 186,152 93,108 81,12", "1 187,73 13,69 23,184 89,38 101,4 83,107 112,11 5,", "136 188,200 47,16 161,75 43,134 165,150 187,122 10", "0,11 127,12 39,91 113,4 57,45 113,100 48,134 100,1", "00 185,115 159,23 28,136 115,64 193,115 180,109 98", ",10 115,51 97,38 78,73 21,63 122,33 58,85 102,6 10", "0,149 10,38 99,168 92,140 115,169 119,38 115,196 7", "7,36 106,191 128,1 19,34 88,185 145,126 100,190 10", "0,66 115,162 115,115 44,2 30,148 33,78 132,3 70,11", "6 6,130 19,173 5,9 153,105 189,73 38,115 25,145 12", "5,72 115,138 118,105 66,191 153,8 80,100 187,100 9", "3,9 128,84 180,100 137,144 100,185 42,198 38,194 5", "3,115 54,200 48,53 115,173 183,38 41,125 42,151 18", "2,70 115,33 115,161 186,56 71,16 94,38 108,90 29,1", "51 132,158 156,76 109,159 64,18 198,78 182,75 100,", "190 139,150 79,74 100,144 89,106 27,72 177,69 38,1", "00 191,162 52,88 38,121 79,71 111,52 7,163 4,101 9", "4,129 100,147 38,86 138,68 146,80 20,61 50,60 38,9", "8 76,17 81,115 100,85 195,168 179,82 100,177 166,1", "71 143,130 1,137 62,131 180,88 111,6 110,91 45,184", " 144,195 38,38 39,60 175,96 63,164 154,181 41,124 ", "82,19 67,156 126,47 48,35 93,137 155,114 178,146 3", "8,2 135,65 99,31 53,53 49,38 100,38 30,115 26,160 ", "46,162 157,136 40,100 192,4 115,115 19,100 59,174 ", "14,86 99,120 198,176 136,100 196,115 55,183 127,60", " 172,38 98,61 15,192 141,38 127,55 169,164 115,197", " 43,142 115,100 95,17 108,103 55,181 117,14 104,80", " 115,51 36"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 890077166;
    if(result == expected) {
        cout << "Test Case 137: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 137: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test138() {
    int n = 200;
    vector<string> edges = {"12 158,154 180,122 23,181 128,71 122,112 76,167 76", ",5 45,185 114,187 5,178 42,26 189,128 34,105 7,33 ", "30,148 82,5 110,169 91,87 140,181 103,171 142,9 16", ",25 17,133 132,184 70,76 32,76 119,117 131,197 125", ",128 105,156 52,106 147,14 153,26 5,109 42,112 44,", "49 76,33 176,122 166,105 75,173 62,86 167,128 29,7", "1 33,171 180,186 42,112 159,56 3,145 133,95 122,10", "8 42,120 191,38 62,42 151,5 168,5 61,6 20,44 192,1", "9 122,120 39,96 143,8 65,73 106,144 97,4 101,179 8", ",139 59,89 76,93 76,135 105,42 128,171 198,133 88,", "161 112,122 126,60 28,8 10,83 132,71 139,71 143,3 ", "196,106 21,59 120,171 33,76 137,8 18,8 190,133 64,", "115 23,197 28,162 71,105 183,122 9,17 97,171 37,19", "3 99,195 51,78 171,62 148,111 122,68 128,156 106,1", "95 62,187 102,5 171,124 104,163 76,150 155,164 76,", "117 133,199 146,116 166,84 77,151 58,122 132,73 60", ",55 53,122 90,177 122,94 19,182 76,60 62,24 60,54 ", "62,132 11,105 8,42 72,133 62,25 144,71 185,112 81,", "36 79,121 133,70 151,33 194,136 126,33 84,132 104,", "85 195,71 91,78 92,43 130,41 60,60 149,134 60,46 1", "33,22 128,122 100,124 15,151 150,76 5,118 161,127 ", "186,40 8,81 200,128 152,101 160,79 151,129 183,172", " 42,60 130,58 67,141 5,42 48,69 159,122 165,98 41,", "101 62,76 158,8 73,71 17,128 35,193 112,66 172,196", " 6,74 122,196 27,47 21,131 50,128 113,174 30,107 1", "23,188 54,112 123,151 53,13 42,103 1,45 138,14 171", ",157 43,2 76,80 5,57 162,8 140,146 112,139 191,175", " 5,112 151,73 196,133 170,1 181,63 148,31 122"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 387491272;
    if(result == expected) {
        cout << "Test Case 138: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 138: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test139() {
    int n = 200;
    vector<string> edges = {"124 28,63 58,90 106,21 171,49 48,194 192,168 50,4 ", "100,36 33,57 144,200 175,102 59,115 4,122 74,29 18", "4,11 21,65 41,103 146,106 43,26 4,130 101,26 93,12", "5 131,171 32,38 21,162 53,72 66,196 24,69 183,58 4", ",55 115,65 178,34 119,14 86,106 4,176 135,6 25,91 ", "21,39 62,21 139,106 47,152 60,145 18,68 103,11 16,", "176 4,30 176,149 56,103 197,162 132,168 98,49 87,1", "68 94,31 170,98 156,130 23,11 35,61 70,117 105,109", " 126,5 25,171 98,17 119,162 4,121 153,95 18,121 13", "8,127 198,114 65,127 171,89 62,52 140,60 171,33 4,", "184 8,58 19,165 149,141 86,139 191,189 49,122 157,", "11 179,139 83,21 101,123 26,171 126,15 171,186 59,", "139 172,11 97,194 37,196 112,88 176,188 161,164 4,", "20 32,21 158,168 120,164 29,65 113,169 71,99 103,3", " 56,54 11,74 80,193 116,51 118,79 171,9 58,153 138", ",200 122,117 27,198 143,108 148,21 70,193 171,23 1", "67,165 3,93 123,42 72,49 190,21 49,18 171,177 171,", "21 140,86 76,148 21,33 104,86 1,171 125,139 13,4 1", "38,186 102,162 182,45 28,126 73,163 150,86 21,107 ", "12,163 158,21 110,196 10,64 4,160 65,194 21,15 118", ",133 78,24 112,59 171,91 5,104 36,73 109,42 66,105", " 27,11 96,144 84,119 171,4 21,12 171,139 92,155 17", "1,28 142,75 28,4 89,174 145,134 33,18 44,12 147,18", "8 111,60 46,129 44,110 159,28 137,171 173,84 171,1", "99 89,8 164,65 21,180 138,195 188,21 7,135 88,4 16", "5,21 27,4 171,82 162,86 77,158 150,31 67,4 67,95 8", "1,122 171,69 177,23 101,49 40,185 49,166 106,2 86,", "136 115,78 171,28 128,151 38,65 22,154 105,21 28,7", " 187,157 85,136 55,25 91,89 39,139 181,173 71,67 1", "70,103 4,21 112,42 4,193 188"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 904959861;
    if(result == expected) {
        cout << "Test Case 139: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 139: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test140() {
    int n = 200;
    vector<string> edges = {"185 6,31 32,110 51,106 92,121 98,1 156,23 156,156 ", "43,164 156,187 94,194 75,122 152,52 191,55 101,68 ", "36,94 156,171 145,142 159,76 94,5 24,94 180,105 48", ",154 173,179 66,109 22,67 24,17 34,176 94,150 131,", "166 99,94 154,100 17,36 102,59 36,31 154,143 3,157", " 13,190 112,9 176,99 83,23 77,182 107,36 159,130 6", "4,25 61,94 44,151 27,2 99,20 132,199 18,154 182,10", "5 174,193 133,162 154,101 43,196 159,156 129,160 8", "7,136 18,60 184,148 92,88 52,67 36,57 97,127 194,1", "23 82,32 151,71 33,36 99,109 149,198 116,169 129,1", "77 155,117 53,133 159,82 156,140 40,153 42,62 99,6", "3 65,74 41,159 93,171 164,19 185,137 155,91 98,167", " 145,77 163,16 97,79 36,50 63,30 95,36 149,36 38,1", "34 105,106 148,71 197,125 167,124 182,139 116,157 ", "46,99 138,28 81,8 140,188 1,123 132,99 156,158 146", ",99 139,129 25,26 69,60 156,119 78,103 128,198 139", ",75 127,94 56,154 195,54 133,97 159,94 200,58 33,1", " 89,18 154,99 128,118 81,182 37,113 141,88 165,45 ", "36,63 99,156 70,147 190,22 149,80 93,141 135,72 14", "1,45 111,59 114,28 118,41 36,156 15,90 56,47 46,91", " 121,192 115,163 23,36 21,31 27,4 10,125 164,36 34", ",108 42,159 42,172 99,154 73,82 20,85 94,192 36,18", "1 41,39 18,117 156,53 8,99 161,99 98,154 105,35 94", ",126 24,191 165,65 50,14 70,159 154,94 10,58 197,1", "59 95,160 62,13 47,131 159,112 147,118 99,194 36,6", "9 36,59 104,128 29,86 183,193 175,94 144,7 154,49 ", "45,155 144,86 154,36 106,61 169,11 17,159 191,99 1", "79,89 188,119 86,114 104,142 168,44 170,154 141,12", "0 196,186 85,152 159,146 159,161 189,94 84,94 51,5", "4 175,147 156,36 96,78 183,159 33,3 94,94 130,62 8", "7,159 185,15 12,117 40,154 13,178 187,103 29,55 43"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 23148999;
    if(result == expected) {
        cout << "Test Case 140: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 140: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test141() {
    int n = 200;
    vector<string> edges = {"82 173,116 161,105 103,88 47,32 8,126 149,118 82,1", "82 142,28 22,9 80,146 126,193 185,112 49,42 32,104", " 160,27 86,16 30,2 152,76 124,119 124,141 145,71 9", "9,126 53,105 38,32 176,150 82,95 177,74 65,128 10,", "128 76,64 200,126 41,5 105,16 144,117 137,28 54,13", "5 164,76 32,70 76,31 76,16 12,66 141,131 75,140 16", ",46 192,166 128,18 60,167 58,135 32,193 17,11 44,1", "07 126,65 126,136 103,193 174,48 165,128 159,66 14", "5,49 76,63 179,147 198,79 167,119 163,11 105,182 1", "10,32 161,197 36,32 15,59 194,163 124,49 87,169 10", "5,32 109,134 184,133 175,18 138,8 97,55 189,20 128", ",50 103,30 34,126 187,51 49,126 132,107 147,84 45,", "170 37,126 171,26 38,105 158,21 197,33 113,102 101", ",94 134,52 32,196 162,126 48,49 1,16 27,55 139,114", " 153,156 123,188 17,120 109,105 145,75 25,32 121,9", "5 15,81 126,49 193,177 15,181 30,96 16,172 148,47 ", "170,4 82,171 40,76 19,33 108,22 54,122 49,76 85,18", "1 34,93 76,105 183,94 184,72 105,143 135,7 160,61 ", "105,76 82,157 160,49 126,105 114,155 144,50 136,49", " 170,69 76,129 24,78 192,58 79,152 154,43 126,16 1", "13,183 123,131 25,49 71,6 130,126 62,125 98,84 72,", "68 96,36 49,78 59,139 189,191 151,105 16,49 142,21", " 36,149 172,188 174,28 32,46 59,168 57,75 16,32 80", ",92 105,88 90,49 60,126 83,152 16,160 56,52 67,189", " 49,16 134,49 175,137 32,108 113,160 127,16 126,64", " 126,49 35,140 151,169 100,106 61,90 170,126 190,6", "3 126,101 111,81 115,178 126,12 186,199 128,105 32", ",81 91,83 13,130 16,76 24,14 109,195 180,73 105,11", "1 102,5 23,82 3,111 32,77 176,16 58,29 70,148 149,", "49 59,191 140,110 142,162 93,195 76,76 160,93 196,", "60 138,32 39,168 146,158 125,89 149"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 420973206;
    if(result == expected) {
        cout << "Test Case 141: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 141: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test142() {
    int n = 200;
    vector<string> edges = {"90 148,37 177,33 38,181 147,91 162,19 58,46 129,11", "7 158,34 99,13 27,23 97,57 116,116 78,147 20,72 16", "5,192 40,118 102,110 53,150 162,83 68,159 119,129 ", "117,96 180,192 150,91 52,153 140,166 25,139 84,89 ", "70,132 43,150 146,39 85,100 63,171 79,44 51,142 4,", "107 46,141 105,106 200,185 122,108 175,130 156,104", " 53,114 196,133 195,121 150,12 17,101 173,36 150,1", "65 47,159 33,69 42,75 9,143 10,111 57,29 103,183 6", "4,196 3,50 41,42 56,93 125,18 177,160 112,137 15,7", "4 136,97 16,78 63,170 155,102 62,81 59,14 171,22 2", "8,76 43,148 143,197 139,77 107,186 150,142 82,134 ", "94,163 21,199 32,132 15,188 37,175 88,48 168,86 44", ",10 72,161 21,61 54,100 80,105 150,110 70,18 153,1", "36 45,163 93,66 65,191 200,125 135,71 60,189 82,31", " 99,151 190,73 86,162 183,189 30,89 38,164 98,120 ", "195,150 182,19 126,119 35,154 35,138 136,123 80,11", "5 176,62 138,158 92,16 87,174 7,1 174,39 12,90 111", ",4 154,134 41,96 113,150 39,69 103,140 157,50 172,", "179 198,167 198,104 8,29 122,173 186,71 101,11 182", ",67 184,127 83,77 157,141 59,164 125,49 94,127 150", ",49 36,152 85,28 113,22 176,64 6,191 32,95 42,131 ", "115,188 145,184 124,72 150,25 145,137 190,130 54,1", "72 36,199 6,27 73,192 144,182 179,30 8,150 77,156 ", "68,50 2,124 34,105 5,127 61,128 187,65 26,175 187,", "55 123,106 13,180 23,160 194,118 146,150 128,47 19", "3,24 126,9 84,17 131,169 68,45 146,178 65,79 133,6", "6 24,1 11,48 60,152 87,121 67,114 128,55 193,103 1", "50,98 150,24 150,7 198,14 121,5 160,144 197,178 58", ",181 76,98 161,31 149,70 150,170 120,109 155,92 16", "6,81 194,20 168,40 9,109 149,151 186,52 51,108 3,1", "85 56"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 11448977;
    if(result == expected) {
        cout << "Test Case 142: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 142: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test143() {
    int n = 200;
    vector<string> edges = {"110 79,160 173,160 117,152 145,163 67,43 162,52 16", "6,43 118,90 67,65 134,152 82,24 67,93 151,131 65,1", "52 156,67 58,47 56,155 186,65 63,178 152,78 52,176", " 124,162 67,103 56,152 7,152 27,61 151,112 196,191", " 149,10 160,65 75,52 152,49 12,67 1,154 65,180 67,", "9 68,52 23,52 106,160 188,162 133,101 80,164 25,15", " 160,150 89,19 182,95 57,152 103,194 97,152 187,67", " 91,196 122,52 139,94 67,65 191,44 97,135 52,70 13", "5,115 42,152 77,36 160,125 33,112 122,67 88,99 67,", "52 182,68 128,171 160,152 55,33 8,160 81,169 67,16", "0 109,175 52,120 132,29 51,60 76,87 58,136 6,183 1", "60,67 181,121 185,65 152,67 31,52 143,48 159,142 1", "62,66 195,127 152,67 141,36 69,124 129,122 160,160", " 101,65 11,160 65,117 161,145 126,52 72,160 25,52 ", "60,2 169,113 152,64 3,152 125,24 50,52 16,174 96,5", "2 83,102 52,160 14,152 51,168 67,42 46,67 42,82 32", ",85 52,48 65,160 49,139 192,100 179,67 74,105 52,4", "9 86,132 67,152 195,168 116,152 97,46 115,160 45,1", "62 59,10 111,133 39,77 4,152 165,13 27,123 16,140 ", "148,31 38,84 146,89 199,52 185,160 136,157 65,20 9", "8,114 152,52 96,189 65,65 184,21 65,199 172,65 130", ",67 197,8 125,176 129,162 148,40 156,152 124,54 91", ",35 65,144 17,17 107,22 65,92 67,137 152,153 67,93", " 52,44 194,177 119,68 52,147 67,34 108,86 12,65 5,", "171 18,47 103,52 162,52 193,20 67,160 62,155 152,1", "60 67,170 62,89 162,65 28,162 64,52 104,93 61,160 ", "108,67 167,73 152,52 30,37 52,160 144,84 160,65 41", ",52 79,138 65,160 200,119 190,53 36,162 95,26 167,", "144 107,71 67,162 198,52 179,67 119,69 53,187 158"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 862360866;
    if(result == expected) {
        cout << "Test Case 143: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 143: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test144() {
    int n = 200;
    vector<string> edges = {"106 94,20 94,100 132,70 147,185 105,105 178,172 69", ",4 196,37 35,181 193,115 188,161 55,183 93,15 91,9", "2 167,12 194,101 111,155 96,91 68,27 122,158 132,1", "34 6,138 91,20 102,91 128,101 61,86 44,27 55,92 91", ",103 179,28 180,22 30,101 91,51 56,159 131,166 91,", "34 64,157 109,133 138,18 48,3 159,91 56,106 127,64", " 91,91 19,10 21,79 15,144 26,99 89,59 29,64 16,177", " 76,91 29,7 34,8 169,91 116,142 171,91 168,165 110", ",91 5,91 42,130 108,114 49,198 90,153 192,42 173,1", "70 29,23 115,91 180,138 113,84 16,29 160,122 91,30", " 36,149 3,91 140,73 91,19 118,91 62,111 200,128 19", "4,17 90,137 86,120 138,18 33,91 4,186 91,165 14,15", "1 116,65 140,117 95,24 199,69 165,91 144,91 192,15", "7 62,70 187,9 169,187 60,91 115,91 52,29 129,11 21", ",88 46,183 5,67 15,152 178,134 35,127 91,91 137,77", " 80,128 130,96 91,26 49,82 4,39 96,124 140,44 137,", "28 2,18 38,40 92,91 88,85 148,178 146,147 187,156 ", "166,85 68,66 168,116 197,32 157,134 91,189 56,150 ", "69,5 41,91 30,8 186,88 164,43 137,173 3,139 144,12", "1 161,122 136,31 199,74 198,197 98,41 93,19 89,72 ", "191,191 151,163 71,115 190,132 91,52 83,25 48,18 9", "1,177 61,195 18,167 40,47 77,144 114,169 104,100 1", "58,31 24,47 11,173 131,154 17,107 8,54 176,192 126", ",65 13,91 172,91 74,182 176,68 97,68 148,71 91,54 ", "91,102 81,91 187,4 45,146 185,54 182,140 50,180 11", "7,193 30,103 112,63 163,5 162,46 1,56 141,192 145,", "174 163,150 110,168 175,87 103,121 136,96 119,91 2", "1,181 22,135 52,123 154,99 58,76 200,184 15,78 52,", "91 178,142 57,125 168,98 72,74 123,31 91,106 102,9", "1 87,80 10,107 9,19 58,1 88,53 140,134 37,75 166,1", "29 143,142 73,75 156"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 361697259;
    if(result == expected) {
        cout << "Test Case 144: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 144: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test145() {
    int n = 200;
    vector<string> edges = {"124 129,97 197,129 94,183 120,51 69,1 166,88 181,6", "7 57,147 77,63 67,142 133,14 193,94 116,172 45,35 ", "188,129 151,53 80,144 63,89 53,29 129,129 2,90 67,", "4 199,26 84,42 129,85 199,138 105,16 38,174 93,30 ", "68,49 94,152 148,115 73,100 62,74 161,3 117,6 158,", "20 24,189 78,120 174,87 191,186 181,157 182,120 13", "1,159 67,31 98,25 47,53 101,88 7,18 14,157 21,157 ", "137,157 134,155 103,129 47,188 143,30 120,10 9,172", " 67,112 116,147 153,81 79,90 26,78 157,129 163,95 ", "66,198 67,145 157,160 150,151 27,120 52,103 165,14", "6 179,147 53,43 41,159 38,1 74,63 40,121 74,105 74", ",102 118,109 184,175 74,156 161,74 14,157 54,167 3", "4,63 133,36 101,34 178,195 89,74 12,123 74,146 107", ",178 167,53 35,146 53,162 74,90 84,97 63,80 79,159", " 16,102 94,74 62,110 199,129 113,63 127,104 200,12", "7 132,72 74,120 94,198 99,4 67,163 96,67 115,114 1", "57,167 53,74 53,48 61,196 87,74 10,4 85,22 200,56 ", "157,63 117,53 88,120 169,158 94,125 153,117 82,168", " 99,120 67,71 195,63 20,129 33,108 120,98 92,8 129", ",191 67,44 128,120 171,191 13,147 125,17 32,190 17", "5,163 164,146 139,64 5,75 42,187 176,94 170,131 65", ",10 19,74 194,64 129,53 70,67 98,94 59,120 11,152 ", "57,109 94,191 196,55 129,63 111,162 180,55 37,123 ", "86,120 69,74 157,160 120,187 83,130 36,41 63,122 4", "5,106 194,157 50,73 149,176 135,48 120,91 124,74 1", "85,76 90,23 157,192 94,187 53,63 157,141 63,94 136", ",31 92,135 187,28 98,63 103,88 186,171 154,173 15,", "11 126,63 128,174 39,63 200,177 33,60 62,179 139,1", "59 46,119 178,140 157,32 67,129 53,17 58,63 15,70 ", "95"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 303251294;
    if(result == expected) {
        cout << "Test Case 145: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 145: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test146() {
    int n = 200;
    vector<string> edges = {"158 25,158 192,88 78,138 158,82 135,96 56,80 117,1", "58 60,141 26,134 12,191 98,143 185,147 71,5 188,5 ", "161,15 152,101 87,181 80,164 38,12 130,158 149,159", " 83,140 124,57 105,7 23,66 5,87 20,141 158,170 83,", "61 194,5 4,80 12,87 109,22 176,111 87,171 12,5 85,", "129 180,59 31,21 121,126 94,200 132,6 80,141 63,80", " 195,12 129,22 83,66 94,14 47,183 133,67 73,199 83", ",113 46,31 80,187 70,167 155,74 145,5 158,195 142,", "79 87,155 80,184 197,34 72,21 5,158 124,28 129,158", " 99,87 156,200 175,83 35,182 136,80 143,125 9,16 1", "78,83 84,39 53,64 157,72 158,104 177,37 87,80 47,3", " 153,189 136,80 148,51 171,141 104,178 80,69 12,21", " 10,70 18,6 36,68 87,17 11,66 126,43 114,5 153,198", " 87,87 120,3 30,200 5,5 166,5 184,44 106,117 154,1", "2 108,48 158,97 87,83 125,12 113,76 87,80 83,158 3", "8,5 44,168 150,87 152,81 80,83 112,81 52,186 87,15", "8 90,87 13,32 5,165 148,61 12,196 83,87 135,102 83", ",83 23,12 103,80 157,111 2,87 75,45 87,141 96,88 1", "08,188 19,113 162,12 87,73 83,50 87,158 77,87 93,1", "41 86,92 128,46 162,86 173,62 129,199 144,158 41,2", "1 55,30 127,58 158,112 119,160 12,5 191,80 114,83 ", "145,92 12,130 189,137 196,100 188,141 179,141 193,", "158 115,12 89,5 83,49 102,71 87,19 100,78 108,183 ", "83,141 87,181 118,158 146,91 193,53 158,107 158,14", "1 151,105 87,200 172,84 40,24 80,141 54,158 42,99 ", "29,12 122,159 8,1 35,123 5,158 174,141 27,139 158,", "131 158,158 116,141 33,87 163,80 168,169 170,70 11", "0,153 127,95 122,85 190,11 83,65 24,182 130,70 12"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 944993344;
    if(result == expected) {
        cout << "Test Case 146: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 146: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test147() {
    int n = 200;
    vector<string> edges = {"155 184,160 114,181 118,74 73,6 189,100 196,60 74,", "190 176,170 28,74 97,1 96,47 10,39 74,1 178,146 37", ",27 74,181 51,120 183,111 102,21 1,74 19,158 144,5", "0 6,126 121,164 184,113 1,144 30,134 74,16 185,74 ", "117,88 74,74 162,135 1,50 144,54 168,133 83,144 68", ",19 192,12 74,150 64,167 74,1 65,79 144,2 1,25 39,", "153 123,18 36,74 83,138 1,78 74,68 101,76 99,143 9", "0,96 119,1 196,144 17,1 67,171 74,123 74,173 144,5", "6 172,74 182,82 132,57 74,1 180,191 188,106 122,18", "7 8,13 24,75 1,22 32,70 88,74 199,143 74,122 30,22", " 1,154 193,86 153,163 44,194 132,142 129,200 38,48", " 154,74 121,106 30,36 95,1 7,159 38,188 93,137 39,", "74 136,33 128,105 104,1 151,99 85,47 74,144 103,5 ", "65,116 125,71 26,169 94,123 86,1 155,188 1,23 44,1", "75 147,127 1,157 109,131 79,157 1,74 144,1 186,107", " 14,148 161,195 1,144 159,69 178,43 136,71 1,80 99", ",179 1,190 1,169 74,74 1,132 1,55 40,15 190,29 74,", "10 72,174 74,46 151,171 120,1 154,198 182,74 108,6", "2 34,1 111,144 63,144 128,139 74,142 144,165 65,59", " 1,125 74,91 58,187 74,24 3,1 197,144 36,141 179,1", "30 156,160 144,99 74,118 1,1 9,144 1,52 140,144 17", "5,74 110,1 58,117 41,1 177,149 74,107 144,49 17,20", " 1,168 1,135 98,170 200,45 74,145 78,74 62,160 112", ",1 161,64 1,1 185,44 144,27 53,50 189,156 74,152 1", "39,28 159,59 61,104 1,24 1,5 165,74 140,92 125,42 ", "74,31 89,74 172,1 115,87 144,35 174,66 146,188 4,1", "1 74,166 74,77 187,155 164,74 81,146 74,66 37,1 12", "4,171 183,84 60,1 55,13 3,31 144"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 891940275;
    if(result == expected) {
        cout << "Test Case 147: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 147: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test148() {
    int n = 200;
    vector<string> edges = {"29 37,114 2,113 125,199 21,37 107,70 176,71 17,142", " 146,2 99,81 65,60 82,42 16,42 27,102 157,127 4,15", " 136,16 146,146 94,43 133,74 155,70 30,119 96,146 ", "139,95 70,112 126,179 36,95 89,43 183,73 43,163 17", "2,40 199,47 26,126 118,64 160,146 121,114 188,96 1", "41,146 19,200 156,150 109,5 150,38 53,79 146,129 1", "25,126 78,142 61,170 102,85 102,174 146,139 26,193", " 62,19 29,24 57,149 153,119 164,53 100,87 153,174 ", "193,195 48,79 15,127 146,163 28,6 123,54 150,195 1", "46,42 46,125 165,128 52,98 22,187 43,78 153,198 65", ",102 185,110 48,78 146,53 106,151 125,91 52,123 14", "4,1 197,193 181,34 11,154 52,199 106,57 167,88 125", ",119 71,142 20,146 169,198 59,135 94,19 107,94 194", ",98 146,186 106,44 121,77 114,69 102,197 169,188 3", "3,106 32,7 139,94 8,86 127,2 146,41 43,125 146,18 ", "192,23 174,119 56,163 80,89 98,75 163,111 197,169 ", "159,169 57,57 101,140 39,122 25,10 163,191 92,200 ", "16,90 48,96 146,162 169,82 35,42 134,176 98,82 140", ",55 94,196 142,114 147,109 158,198 146,153 132,124", " 199,163 76,49 43,120 48,97 113,34 33,195 13,34 2,", "43 152,95 45,200 145,126 93,103 142,137 68,185 67,", "4 155,102 31,171 68,117 152,102 146,174 150,1 167,", "136 115,58 96,200 180,121 179,195 84,18 155,115 79", ",63 2,108 92,123 17,142 175,75 184,163 189,53 14,1", "46 106,116 139,168 26,125 72,66 52,83 94,52 3,177 ", "197,163 146,143 52,18 86,131 82,139 68,148 82,158 ", "193,26 166,44 36,9 142,123 96,190 34,94 105,94 160", ",102 104,50 68,59 81,14 124,178 52,146 52,51 125,1", "30 143,127 161,47 171,92 138,142 122,12 82,195 92,", "182 174,146 82,43 146,173 82,120 191"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 787987169;
    if(result == expected) {
        cout << "Test Case 148: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 148: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test149() {
    int n = 200;
    vector<string> edges = {"42 57,74 31,93 134,115 167,53 193,17 148,46 89,170", " 89,132 159,16 196,15 35,167 98,150 176,75 8,117 8", "9,28 176,144 9,85 199,113 98,5 3,67 188,68 148,159", " 65,25 111,120 157,97 87,57 155,12 174,57 170,116 ", "77,130 123,103 120,10 54,34 9,164 198,197 169,58 9", "1,20 46,30 151,146 138,53 19,138 191,98 128,59 142", ",157 103,187 19,64 68,89 162,194 124,82 32,46 160,", "16 168,120 100,56 152,90 46,59 147,175 129,163 10,", "55 135,119 7,60 111,33 12,182 177,122 145,196 26,9", "2 32,48 12,85 156,43 68,64 99,62 137,1 52,172 39,1", "0 89,70 109,145 23,68 89,89 25,6 193,63 175,33 89,", "45 191,78 157,50 25,147 195,22 198,151 41,37 137,1", "12 120,186 133,110 85,55 144,181 64,106 33,89 152,", "37 5,24 10,58 44,89 80,153 71,89 16,171 132,71 127", ",94 117,158 159,85 76,67 154,57 101,189 12,65 162,", "171 162,39 21,1 77,30 7,131 80,23 136,198 190,10 1", "79,39 83,75 26,40 116,97 200,89 130,192 84,89 103,", "3 62,89 71,15 161,34 135,170 108,182 154,47 50,140", " 35,89 198,94 70,141 198,188 130,150 89,66 131,154", " 123,58 96,89 34,106 12,49 188,82 140,115 89,18 19", "8,91 192,71 104,85 73,115 98,47 60,71 139,166 71,1", "34 80,72 51,89 1,89 63,121 109,133 28,89 3,87 152,", "165 195,10 88,168 36,13 97,106 95,120 4,81 124,119", " 184,89 35,51 114,89 145,52 40,31 89,89 172,63 169", ",79 82,89 59,186 150,26 2,191 118,121 117,57 108,1", "71 149,168 2,39 102,167 125,108 126,180 46,122 105", ",143 46,74 7,129 197,200 56,31 151,69 39,69 14,89 ", "91,178 158,38 13,66 93,191 124,172 69,29 56,19 148", ",81 51,173 198,79 15,58 27,138 72,61 71,72 11,105 ", "136,165 142,185 98,192 58,85 89,46 183,89 138,107 ", "10,86 85,193 64"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 593405443;
    if(result == expected) {
        cout << "Test Case 149: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 149: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test150() {
    int n = 200;
    vector<string> edges = {"6 134,176 95,124 190,133 191,36 134,30 133,133 69,", "195 164,19 40,87 137,164 166,66 92,114 106,66 126,", "26 38,16 32,15 72,14 66,109 98,134 54,133 163,4 56", ",118 97,40 134,66 94,111 114,164 169,101 164,137 1", "41,18 133,81 74,133 185,164 68,34 189,34 145,66 26", ",174 134,164 115,159 99,139 164,108 180,134 29,103", " 81,2 47,122 133,194 29,125 156,19 136,147 134,81 ", "151,134 138,176 7,134 157,50 40,134 89,134 130,37 ", "146,132 139,40 16,110 168,193 134,189 100,200 172,", "198 73,98 40,66 188,183 107,40 104,83 90,66 99,52 ", "133,114 100,41 133,108 139,70 139,27 55,75 164,58 ", "100,66 88,81 139,82 134,189 67,4 40,96 186,113 59,", "80 13,14 64,133 139,44 133,143 73,160 81,13 139,12", "0 66,63 114,119 134,158 164,134 9,105 40,148 66,39", " 146,66 61,41 142,140 134,164 66,134 179,133 27,77", " 133,40 59,134 24,58 173,76 164,121 134,137 152,17", "5 133,134 144,75 181,196 133,164 22,100 177,66 72,", "40 118,164 3,66 128,49 176,71 40,134 25,176 139,13", "3 161,66 1,133 134,139 73,134 35,134 178,137 117,1", "23 164,134 135,12 166,96 66,112 40,182 40,116 42,1", "55 162,33 196,150 164,183 40,45 164,187 164,164 2,", "164 116,71 53,182 85,134 192,105 129,168 40,48 66,", "100 40,134 21,28 126,40 154,137 139,134 62,65 164,", "57 73,131 90,73 11,13 93,10 133,162 40,165 66,133 ", "199,37 100,100 90,90 5,164 197,46 37,134 153,133 7", "9,66 102,84 177,176 170,60 70,8 13,40 190,134 20,1", "49 104,43 66,145 189,164 156,100 66,86 132,23 18,4", "8 184,133 171,127 134,164 78,109 167,37 39,17 165,", "133 200,164 31,98 167,51 13,91 116"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 351976383;
    if(result == expected) {
        cout << "Test Case 150: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 150: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test151() {
    int n = 200;
    vector<string> edges = {"119 64,156 49,166 74,108 5,51 175,89 119,113 51,20", "0 118,126 86,53 119,159 132,15 59,157 119,191 173,", "66 190,51 190,158 77,27 127,199 164,122 185,78 33,", "96 87,5 191,196 79,51 196,5 200,196 39,196 169,115", " 1,23 148,143 144,144 99,132 69,75 104,79 161,116 ", "54,195 89,64 100,77 95,50 106,67 11,156 60,125 144", ",179 51,102 196,133 196,192 12,170 42,9 116,97 72,", "2 162,26 21,130 16,160 194,123 17,30 84,46 157,90 ", "196,158 68,98 35,157 171,94 110,118 56,28 51,12 64", ",185 57,141 48,193 95,27 6,4 150,125 51,18 39,3 14", ",150 155,128 103,90 97,57 112,28 185,167 134,163 5", ",119 154,181 169,159 123,109 192,194 136,119 68,14", "6 40,68 193,119 123,51 135,15 51,92 19,140 198,51 ", "2,34 119,161 121,113 75,135 36,45 148,176 55,131 1", "14,65 173,147 139,140 61,111 186,103 156,29 160,29", " 43,39 10,200 170,169 151,48 16,62 5,75 197,182 29", ",146 163,83 104,51 178,168 21,183 15,7 62,93 18,1 ", "191,82 183,168 195,63 175,54 9,13 20,96 133,51 149", ",24 117,177 25,49 128,41 185,33 120,111 51,32 170,", "101 76,46 131,16 152,126 134,5 119,86 47,73 119,52", " 185,182 194,51 165,196 25,13 58,75 187,196 147,10", "3 5,35 102,149 16,169 124,86 108,129 190,108 134,1", "63 140,119 137,62 148,74 196,76 179,118 42,92 172,", "145 76,109 100,150 44,91 144,22 58,120 196,8 177,1", "19 51,88 1,50 76,164 51,88 173,144 94,17 69,22 190", ",23 7,92 174,128 81,196 14,74 176,24 44,90 72,6 82", ",37 16,31 53,198 146,5 160,73 107,151 124,138 178,", "54 196,30 119,85 90,180 133,189 54,92 165,171 114,", "196 5,92 142,70 119,14 67,174 71,155 24,7 105,139 ", "38,76 153,188 119,89 26,127 15,155 5,129 20,75 80,", "137 184"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 568596969;
    if(result == expected) {
        cout << "Test Case 151: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 151: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test152() {
    int n = 200;
    vector<string> edges = {"15 184,31 15,88 14,64 130,98 138,194 148,130 71,60", " 176,177 194,128 58,143 78,166 35,74 60,180 35,29 ", "79,73 77,67 128,200 15,176 74,5 16,33 108,128 141,", "137 100,185 61,161 1,13 47,21 33,121 102,77 184,99", " 22,153 67,189 143,186 2,119 196,191 149,99 75,17 ", "36,117 48,148 84,86 36,108 40,170 8,91 55,171 10,5", "8 135,57 196,184 99,119 160,14 51,36 164,133 76,12", "6 94,194 128,129 110,32 57,154 76,96 149,158 122,1", "10 106,156 140,76 194,147 7,17 86,83 119,103 95,19", "4 12,150 113,58 139,59 20,83 81,107 20,167 126,121", " 10,193 140,75 53,41 67,22 75,85 194,165 83,197 4,", "14 119,60 173,141 11,183 95,151 200,114 105,67 120", ",128 184,183 118,158 168,194 182,8 194,7 182,177 1", "13,197 1,185 89,174 65,144 149,141 93,5 29,94 119,", "94 167,130 128,118 95,19 110,45 155,176 24,166 168", ",86 34,152 199,54 90,119 1,122 180,105 116,194 98,", "188 49,188 70,175 149,5 128,124 163,104 155,198 17", "1,140 115,100 112,38 83,187 83,46 82,44 22,186 190", ",42 110,128 140,89 128,104 181,190 159,109 1,16 27", ",141 131,125 72,185 142,133 154,68 14,102 160,92 1", "16,31 200,54 66,189 77,118 172,132 99,25 14,145 14", "1,47 169,97 66,40 33,28 138,128 158,56 67,184 66,1", "47 182,161 39,119 194,174 181,23 130,195 119,40 17", "8,142 179,87 123,2 119,65 45,128 105,84 146,12 80,", "62 94,130 9,107 184,167 111,5 192,3 107,72 20,15 6", "3,107 72,195 117,13 169,89 69,40 119,152 134,37 12", ",43 18,140 136,32 134,80 37,183 119,52 8,85 55,183", " 6,48 101,194 112,66 82,189 157,13 194,127 17,143 ", "77,104 128,139 49,184 119,160 198,82 54,196 199,85", " 91,163 92,26 31,2 43,87 195,162 74,74 128,70 135,", "170 52,119 149,128 86,150 177,98 28,29 16,114 124,", "142 89,30 108,148 146,126 50,159 18,112 137,101 12", "3,197 161,119 110"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 567001147;
    if(result == expected) {
        cout << "Test Case 152: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 152: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test153() {
    int n = 200;
    vector<string> edges = {"29 152,85 38,145 195,138 118,72 190,21 156,106 152", ",19 31,140 39,152 114,72 51,93 32,163 50,128 181,1", "73 40,81 64,175 118,190 149,98 150,178 187,169 122", ",118 145,199 142,77 71,9 151,1 125,176 190,144 105", ",25 73,118 68,9 62,98 153,128 132,118 50,188 4,174", " 96,14 11,54 6,95 29,1 52,13 92,89 151,170 100,1 9", "2,131 5,63 94,16 139,118 25,168 43,24 88,1 143,3 2", "4,32 152,47 34,40 15,7 18,117 142,99 14,30 45,191 ", "14,16 32,54 185,5 152,79 38,175 67,104 137,121 183", ",190 58,156 165,99 40,1 25,72 150,151 158,116 99,1", "01 83,116 60,105 147,188 44,38 51,123 116,186 86,7", "2 178,118 140,75 150,75 47,78 33,160 101,180 145,2", "7 32,143 22,38 130,199 80,86 53,129 121,192 73,97 ", "89,94 65,133 40,167 96,197 193,164 97,20 168,62 11", "2,40 194,157 14,103 192,168 162,28 46,40 152,150 8", "7,172 184,79 130,59 178,128 51,174 74,150 37,87 18", "2,126 99,105 150,152 165,114 161,101 56,128 46,8 1", "69,154 158,19 30,30 31,31 25,126 198,196 57,12 116", ",126 82,58 57,76 40,32 148,41 101,90 35,25 115,84 ", "83,126 10,73 103,42 118,173 90,66 192,152 55,132 1", "20,5 108,50 146,122 32,99 151,48 52,51 101,174 167", ",26 116,152 102,44 4,128 78,112 9,141 118,134 115,", "178 155,65 136,49 16,40 17,109 114,1 101,137 165,6", "1 189,1 86,121 127,2 40,126 100,200 169,20 43,35 1", "73,80 117,151 118,7 1,37 23,56 171,135 153,119 125", ",65 63,111 141,91 182,134 64,37 179,183 158,168 51", ",166 52,57 110,193 101,159 160,156 137,158 127,8 2", "00,74 32,1 142,3 150,118 124,54 32,61 59,123 70,61", " 36,64 115,190 110,177 41,107 127,29 69,113 181,71", " 14,32 150,172 101,178 36,40 188,89 164,94 25"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 634332058;
    if(result == expected) {
        cout << "Test Case 153: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 153: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test154() {
    int n = 200;
    vector<string> edges = {"20 157,49 121,169 46,53 36,143 46,13 30,50 154,84 ", "77,69 156,86 85,24 12,177 109,100 31,26 88,108 154", ",22 197,40 131,81 105,61 41,71 200,43 84,107 104,3", "3 175,77 28,23 25,145 164,70 116,178 69,157 174,15", "2 141,98 100,23 112,81 95,84 12,47 157,130 2,67 84", ",33 38,136 84,183 180,114 195,19 46,106 37,180 48,", "160 113,118 56,189 51,39 48,76 83,70 190,110 123,4", "1 84,84 100,153 117,109 67,191 122,126 69,110 104,", "68 189,16 122,53 125,33 184,12 143,122 69,105 34,7", "6 84,41 127,47 14,3 15,18 139,158 54,146 76,7 46,7", "4 39,23 142,115 43,117 161,181 173,43 149,172 51,6", " 56,113 37,22 9,28 117,12 79,84 182,59 30,84 88,19", "9 158,151 114,110 42,164 60,111 44,143 186,1 94,15", "8 159,8 100,14 90,125 58,122 84,10 128,86 40,163 1", "00,29 74,147 63,33 84,189 130,157 52,43 104,9 192,", "154 159,196 9,171 113,84 2,114 86,110 82,29 84,78 ", "30,72 88,12 194,125 84,77 101,64 181,177 147,60 76", ",116 168,118 148,18 136,71 95,84 157,113 84,165 11", "6,69 133,163 135,22 138,84 116,157 14,34 3,140 158", ",136 187,154 158,153 77,14 11,84 96,14 75,128 167,", "44 97,153 166,182 15,62 142,193 30,136 80,33 198,5", "1 2,181 141,56 103,14 170,89 72,84 22,193 41,70 13", "2,69 21,25 129,12 46,84 40,47 73,29 167,96 141,23 ", "87,10 183,45 89,41 30,99 125,27 38,121 125,119 160", ",41 57,154 150,84 154,164 83,30 55,66 190,122 126,", "188 46,93 122,168 190,96 120,144 43,159 176,113 15", "5,118 65,65 6,185 8,1 89,126 134,187 17,124 192,11", "1 137,92 198,192 197,84 56,35 158,193 162,43 110,8", "4 23,65 102,179 136,182 200,32 84,64 96,91 110,88 ", "1,83 5,195 40,63 97,67 137,2 4"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 887042365;
    if(result == expected) {
        cout << "Test Case 154: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 154: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test155() {
    int n = 200;
    vector<string> edges = {"122 108,154 151,112 150,101 131,74 38,173 114,31 1", "19,48 85,45 160,78 135,40 162,110 151,100 185,55 1", "21,109 138,200 173,27 28,169 44,63 110,190 45,168 ", "4,46 21,189 133,104 85,179 126,151 147,98 134,3 11", "3,69 25,176 26,132 151,167 62,41 1,151 86,124 130,", "47 69,91 38,7 189,134 157,94 69,183 196,131 66,141", " 61,77 63,195 127,16 115,181 114,32 183,175 104,13", "4 195,38 65,186 97,2 139,180 196,4 69,117 71,168 2", "0,107 156,70 57,61 197,60 194,38 151,151 144,120 1", "89,10 89,172 117,87 154,159 76,83 99,52 145,193 88", ",92 68,79 151,143 188,2 170,161 119,193 103,153 15", "8,82 132,5 12,49 118,61 134,146 136,9 25,158 19,24", " 83,199 73,18 149,31 154,200 39,198 44,159 151,177", " 92,193 49,113 182,118 35,193 178,194 110,176 175,", "147 29,115 146,51 151,107 172,151 131,102 140,200 ", "8,147 39,123 144,84 19,68 155,151 70,197 89,159 18", "0,51 44,151 59,64 15,50 173,54 13,90 147,147 114,1", "28 160,126 116,92 144,99 30,144 184,70 167,87 187,", "127 197,182 65,25 186,146 37,57 21,53 51,192 137,1", "44 42,109 153,36 28,160 145,72 64,102 151,36 72,15", "1 146,58 77,95 127,190 163,46 62,40 68,151 69,179 ", "151,14 125,50 129,150 67,164 93,32 76,23 49,174 79", ",152 148,56 16,86 135,101 67,151 84,192 11,152 82,", "79 33,17 137,38 3,145 43,102 17,66 112,191 18,164 ", "79,185 24,187 161,35 106,145 81,54 146,14 45,168 1", "86,169 122,34 199,86 149,118 5,140 11,97 96,84 138", ",120 164,105 179,182 80,103 5,134 151,188 113,73 1", "76,43 190,124 148,165 104,27 15,133 79,156 59,73 8", "5,51 75,193 151,122 6,64 151,111 169,151 145,105 4", "1,139 16,121 120,116 1,42 155,59 71,155 171,58 60,", "151 104,130 132,191 78,100 30,111 142,166 104,54 1", "39,6 51,30 151,22 3"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 186220906;
    if(result == expected) {
        cout << "Test Case 155: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 155: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test156() {
    int n = 200;
    vector<string> edges = {"132 48,179 36,71 99,54 127,87 27,108 76,145 133,52", " 106,145 142,3 199,145 86,57 17,13 52,61 120,164 9", "6,73 84,2 17,20 89,124 42,126 21,169 16,139 118,90", " 1,59 181,170 5,88 2,115 160,9 145,64 101,147 124,", "4 19,108 82,179 166,198 168,101 81,13 106,10 39,2 ", "98,181 95,1 15,145 45,26 51,82 76,184 23,53 142,10", "0 35,160 32,158 11,70 173,167 26,167 105,160 95,16", "0 117,166 36,113 49,160 44,193 40,2 188,145 95,2 1", "24,195 23,77 160,144 58,111 160,19 184,48 37,25 23", ",1 194,17 190,171 70,23 160,97 67,146 160,40 95,2 ", "187,26 96,123 136,192 58,23 50,175 143,78 56,5 95,", "55 23,22 123,2 145,95 58,2 189,53 165,112 23,145 7", "5,104 60,95 6,75 153,147 93,159 17,23 92,2 149,60 ", "34,121 68,173 29,1 72,23 121,74 23,160 151,138 175", ",177 23,109 59,184 4,27 150,10 51,80 145,119 140,7", " 73,46 6,12 61,101 2,90 154,65 1,157 131,133 66,17", "2 160,197 49,173 171,189 183,25 49,170 152,20 189,", "139 62,145 143,131 79,134 160,155 10,91 72,26 1,23", " 43,62 118,41 95,182 16,135 93,150 103,148 160,96 ", "21,172 196,164 21,89 163,127 145,8 160,83 157,45 9", "7,145 3,95 52,160 69,26 47,177 11,34 104,23 132,95", " 169,95 99,85 133,123 145,156 131,38 145,109 181,9", "4 116,160 60,2 30,2 200,182 169,63 148,1 116,186 7", "2,174 47,119 26,1 61,156 83,179 95,183 89,42 93,19", "4 122,142 141,82 23,160 137,145 114,168 160,28 160", ",18 44,138 125,83 2,1 162,67 31,102 160,27 23,11 1", "30,185 116,80 180,70 26,39 51,130 177,144 192,161 ", "101,160 129,197 25,150 87,45 31,125 143,132 37,5 1", "52,1 73,194 14,165 141,2 1,56 26,35 55,23 191,23 2", "6,24 43,107 129,55 100,128 9,90 178,110 2,33 95,95", " 139,176 145"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 873328416;
    if(result == expected) {
        cout << "Test Case 156: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 156: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test157() {
    int n = 200;
    vector<string> edges = {"193 66,169 97,46 51,104 171,181 32,160 93,116 181,", "109 181,118 86,113 199,115 82,107 50,192 23,178 93", ",181 15,59 195,80 82,126 136,53 153,81 166,77 128,", "138 160,48 82,109 73,61 1,195 181,45 158,87 10,114", " 123,55 117,190 193,100 50,152 187,11 71,142 5,122", " 152,78 197,39 143,17 196,196 31,131 168,134 82,12", " 186,110 100,139 181,62 22,95 181,150 181,91 98,15", "6 181,82 118,153 174,10 46,82 136,135 98,38 56,16 ", "82,9 164,72 104,8 94,82 125,125 17,170 32,58 133,1", "44 116,181 82,108 19,42 60,82 25,156 88,41 142,171", " 18,146 74,186 110,81 177,112 69,72 89,163 152,179", " 152,118 132,181 39,82 70,117 61,153 119,50 30,5 7", "7,137 156,76 191,181 103,133 1,25 129,181 152,136 ", "186,16 198,3 111,26 102,19 53,127 132,35 152,126 1", "48,156 57,168 25,91 82,31 125,180 83,196 176,79 10", "9,154 156,33 197,74 44,156 75,82 121,92 175,180 10", "3,2 95,96 181,114 23,108 126,97 15,166 182,199 60,", "140 194,65 109,165 58,80 200,38 136,169 151,136 46", ",27 39,145 71,44 160,90 20,111 181,21 190,99 135,1", "64 102,62 136,183 109,12 28,188 60,29 105,6 134,61", " 189,177 182,84 152,47 127,191 131,194 90,134 89,1", "78 146,41 29,192 92,136 58,173 96,198 197,76 129,1", "36 92,114 71,127 86,82 45,40 150,43 53,124 159,199", " 101,167 156,140 20,45 67,66 37,22 34,156 52,147 3", "9,36 39,166 181,121 4,171 6,83 63,55 165,148 174,1", "62 39,117 185,13 190,91 99,77 82,94 69,67 124,109 ", "157,141 39,115 37,156 14,161 152,128 29,7 39,113 5", "6,124 158,76 106,51 9,109 172,181 136,15 151,62 8,", "63 103,120 30,130 70,184 42,149 164,109 24,115 21,", "39 54,145 175,38 184,140 181,48 68,30 28,178 82,34", " 112,16 78,64 152,139 85,49 135,155 109,102 87"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 411171701;
    if(result == expected) {
        cout << "Test Case 157: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 157: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test158() {
    int n = 200;
    vector<string> edges = {"174 136,93 168,121 136,140 84,123 168,55 191,168 4", "6,133 180,101 180,67 192,52 121,160 99,177 199,133", " 89,168 124,164 126,177 175,97 57,118 190,161 57,6", "1 50,85 104,46 134,181 15,79 116,149 147,196 149,1", "81 168,44 168,25 65,57 115,32 79,152 176,191 172,3", "4 45,163 80,188 72,109 194,64 157,27 5,20 178,77 8", "4,71 200,29 176,9 5,126 2,37 109,36 43,81 115,106 ", "63,75 123,35 189,189 90,16 153,99 66,182 144,192 9", "9,59 97,17 133,105 145,84 38,187 103,133 131,119 8", "0,134 141,42 27,170 12,158 84,134 137,39 84,110 95", ",128 170,46 79,177 27,149 168,144 106,19 84,194 36", ",79 40,95 16,104 173,192 169,45 159,180 84,177 129", ",189 180,132 138,168 62,143 77,195 168,57 46,190 1", "80,89 71,71 8,167 181,80 77,127 108,101 130,99 22,", "165 84,77 123,137 98,151 143,68 47,94 177,168 91,7", "9 184,105 54,143 156,82 133,109 36,192 27,135 84,1", "44 4,1 133,3 96,24 3,133 50,80 14,198 1,188 123,15", "0 189,83 186,86 53,177 174,192 133,139 105,41 182,", "138 146,51 69,51 155,192 56,192 28,117 148,27 55,1", "90 171,192 104,51 79,42 20,84 100,77 170,185 84,10", "3 46,48 190,183 168,76 126,117 123,6 45,182 106,65", " 87,78 69,192 49,193 25,27 144,137 186,79 194,146 ", "70,123 110,123 122,123 31,154 104,143 197,101 18,9", " 157,79 112,16 110,176 77,97 115,177 92,47 191,102", " 178,45 180,53 180,64 5,114 94,107 131,125 176,187", " 108,113 149,26 84,120 79,32 60,142 168,134 186,10", "2 42,21 65,170 73,177 111,55 47,53 166,13 31,33 3,", "126 77,79 177,70 132,192 88,127 103,162 181,129 11", ",192 179,89 8,74 101,192 3,7 55,58 53,177 87,138 4", "6,30 112,23 192,78 155,10 84,25 87,52 174,168 105"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 354535011;
    if(result == expected) {
        cout << "Test Case 158: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 158: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test159() {
    int n = 200;
    vector<string> edges = {"96 150,55 96,56 96,96 130,96 68,96 58,168 96,96 11", "1,147 96,96 104,96 91,96 115,166 96,153 96,172 96,", "146 96,96 179,96 62,183 96,136 96,96 49,177 96,96 ", "124,96 17,192 96,23 96,169 96,6 96,96 44,167 96,96", " 64,108 96,20 96,96 72,96 118,65 96,96 33,94 96,96", " 71,96 38,31 96,96 180,96 35,96 189,96 53,96 151,9", "6 39,96 171,96 119,96 90,96 196,96 77,96 144,57 96", ",96 188,178 96,182 96,85 96,141 96,96 126,96 43,19", "5 96,143 96,76 96,96 26,96 113,96 109,96 100,93 96", ",96 32,175 96,96 50,96 99,157 96,96 123,96 18,96 1", "2,96 28,15 96,96 164,96 197,96 80,96 127,134 96,13", "5 96,96 148,96 88,96 145,107 96,112 96,95 96,34 96", ",129 96,96 114,96 14,125 96,103 96,84 96,96 4,96 8", "7,51 96,96 161,96 184,173 96,61 96,187 96,96 9,96 ", "152,96 128,52 96,154 96,132 96,96 162,193 96,96 97", ",96 170,96 3,185 96,96 131,158 96,155 96,165 96,98", " 96,96 30,59 96,66 96,96 142,102 96,96 19,120 96,1", "33 96,96 163,140 96,29 96,96 106,22 96,96 10,96 8,", "96 60,70 96,86 96,159 96,137 96,96 156,96 174,110 ", "96,199 96,96 81,96 89,96 138,47 96,82 96,96 160,96", " 54,96 176,122 96,96 74,40 96,181 96,96 79,42 96,9", "6 5,92 96,96 117,96 75,96 198,96 7,96 36,96 149,96", " 48,96 41,96 45,139 96,96 13,78 96,96 63,96 105,96", " 116,96 27,96 73,191 96,1 96,96 46,96 194,200 96,1", "01 96,96 21,96 37,186 96,121 96,67 96,16 96,96 2,9", "6 24,96 11,69 96,83 96,190 96,25 96"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 583631762;
    if(result == expected) {
        cout << "Test Case 159: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 159: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test160() {
    int n = 200;
    vector<string> edges = {"121 28,48 99,38 86,21 48,106 87,174 69,12 140,88 1", "03,5 169,18 49,77 118,130 4,66 179,141 78,50 128,1", "35 37,92 154,138 96,86 48,70 15,86 127,84 164,19 5", "6,105 58,172 130,148 48,12 157,175 164,48 9,98 100", ",79 42,148 147,115 131,157 48,87 36,93 75,43 145,2", "2 152,150 12,93 64,129 131,110 85,119 21,59 72,8 1", "68,166 180,23 163,198 7,48 110,146 188,48 154,60 1", "15,186 39,24 16,48 26,169 48,48 36,70 16,58 76,104", " 71,100 120,102 82,183 164,54 50,161 152,102 137,4", " 110,108 142,120 98,156 13,74 149,197 30,191 48,90", " 97,178 91,92 41,182 2,200 62,48 64,90 182,48 186,", "122 89,149 145,143 123,64 80,48 177,117 10,48 153,", "25 114,104 51,115 48,135 160,133 53,11 166,193 49,", "191 159,158 191,112 165,148 142,109 57,100 162,198", " 21,116 99,189 188,48 6,78 176,193 184,184 195,126", " 191,7 21,48 133,54 183,130 180,31 179,112 188,29 ", "179,185 171,6 37,62 192,103 67,138 122,1 153,114 4", "8,58 48,97 182,8 177,185 102,94 36,148 108,154 41,", "20 178,23 200,11 134,136 194,17 15,9 3,184 18,47 5", "4,91 132,181 118,158 187,69 153,45 111,64 75,122 4", "8,79 143,17 24,51 86,45 199,113 140,73 128,48 192,", "133 14,186 35,169 101,192 155,48 78,173 139,156 12", "2,42 124,99 61,170 199,28 26,58 107,134 110,37 125", ",26 121,46 99,168 177,70 48,34 186,83 128,100 48,8", "8 126,26 65,124 55,153 190,48 152,48 173,48 179,19", "4 10,176 44,29 66,48 193,48 45,115 109,161 22,95 1", "74,83 84,137 45,165 146,59 48,145 48,105 76,48 40,", "181 77,157 113,6 160,124 123,104 30,91 48,19 127,1", "06 36,177 144,170 81,196 70,11 151,57 129,48 77,48", " 112,170 171,77 33,187 67,145 74,54 48,48 124,169 ", "167,116 61,88 32,187 63,68 133,40 117,95 1,27 154,", "40 194,96 13,35 39,182 48,19 197,78 44,163 192,91 ", "20,53 68,167 5,152 52"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 56009650;
    if(result == expected) {
        cout << "Test Case 160: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 160: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test161() {
    int n = 200;
    vector<string> edges = {"61 117,166 73,10 121,195 120,70 187,130 166,186 16", "6,130 119,145 148,95 157,186 48,166 153,6 164,165 ", "155,120 43,72 146,124 79,111 24,104 133,52 79,195 ", "132,173 4,83 122,68 56,200 18,15 7,115 179,177 37,", "166 152,71 65,149 96,26 40,133 124,137 100,115 141", ",88 73,66 166,104 79,12 25,45 181,33 15,83 50,82 1", "86,192 171,84 63,166 99,102 167,46 157,118 94,13 4", "7,64 107,81 178,29 100,158 32,166 120,128 155,75 9", "9,189 166,95 16,185 83,171 53,140 110,42 80,67 169", ",161 148,50 187,109 143,127 144,83 166,20 129,170 ", "49,79 166,74 128,39 161,123 163,1 172,152 24,194 1", "4,182 90,134 155,83 85,105 101,54 92,127 149,166 7", "8,41 175,21 30,57 166,179 113,31 157,31 16,11 133,", "35 23,30 54,35 199,194 47,102 108,35 166,166 12,32", " 154,78 172,196 29,73 168,146 166,112 154,152 138,", "146 54,160 63,188 105,33 166,128 5,164 166,116 40,", "18 45,34 189,197 192,135 121,158 112,135 105,41 16", "6,113 193,115 176,189 183,62 102,40 147,155 57,166", " 84,142 79,166 80,44 88,105 87,139 115,166 4,135 1", "66,144 2,36 22,41 8,156 77,114 168,78 93,19 186,15", "9 55,166 53,51 5,74 162,91 17,29 115,116 62,157 17", "4,23 76,153 125,102 116,67 34,57 5,27 90,194 166,6", "0 120,136 71,3 157,156 33,187 185,57 198,71 9,145 ", "39,200 181,94 132,159 4,94 98,149 131,28 31,120 13", "2,99 107,146 37,9 91,12 81,75 64,86 84,182 121,19 ", "22,131 144,97 93,49 78,53 197,71 150,163 73,129 6,", "117 33,166 29,138 111,143 194,166 144,14 184,166 1", "02,173 55,186 103,89 54,166 56,166 148,16 126,164 ", "20,135 180,110 95,166 31,155 106,105 182,65 91,32 ", "166,179 100,18 166,189 58,151 8,166 71,69 144,190 ", "21,38 66,22 48,54 59,178 25,67 183,191 189,37 30"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 541158182;
    if(result == expected) {
        cout << "Test Case 161: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 161: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test162() {
    int n = 200;
    vector<string> edges = {"78 81,56 1,167 37,93 103,54 126,170 82,163 16,175 ", "190,122 32,109 116,189 80,80 191,108 73,77 163,11 ", "80,145 178,124 188,168 80,89 45,41 80,71 170,85 80", ",86 69,62 126,79 26,106 79,165 111,80 74,182 34,18", "9 28,152 128,166 3,156 126,167 80,34 119,170 21,41", " 198,80 19,172 29,80 174,139 59,187 99,69 194,16 2", "2,12 141,187 18,141 4,55 74,64 128,2 195,139 114,1", "08 81,6 167,155 167,110 144,43 184,91 26,81 164,90", " 94,29 108,50 162,13 145,27 192,97 110,25 11,161 1", ",151 189,127 80,148 1,14 181,144 141,103 185,47 80", ",80 2,43 14,83 169,142 189,173 80,183 115,24 199,7", "6 130,118 77,121 144,114 44,87 92,80 128,12 97,175", " 45,44 85,66 58,125 80,98 20,80 170,70 114,196 50,", "126 186,36 195,68 168,174 158,41 7,27 80,169 193,9", "1 33,85 123,176 128,193 61,52 84,178 179,80 77,111", " 147,2 99,165 115,80 97,160 128,98 58,100 36,53 84", ",167 48,27 179,126 105,159 3,117 107,164 172,39 74", ",46 47,128 136,102 113,74 129,80 32,162 191,174 12", "4,31 183,80 89,180 40,58 30,1 120,17 11,109 188,72", " 119,33 80,199 125,189 146,173 40,76 101,189 65,13", "9 123,23 137,1 49,11 42,80 31,137 149,150 11,38 41", ",1 80,8 74,94 30,47 83,33 95,184 32,90 98,125 101,", "128 63,74 112,134 137,84 75,104 107,72 168,19 87,1", "89 157,173 86,84 200,143 167,132 89,31 147,126 5,1", "81 122,9 74,172 80,88 11,127 60,80 126,191 185,11 ", "140,197 167,131 190,106 95,80 137,158 116,19 117,4", "1 138,80 94,80 84,166 60,57 166,182 68,13 192,41 9", "6,118 102,131 132,41 67,92 104,46 61,3 35,15 137,1", "70 153,171 170,154 137,130 24,1 177,187 36,84 10,1", "59 127,50 103,170 51,194 180,137 133,135 84,16 102"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 6893442;
    if(result == expected) {
        cout << "Test Case 162: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 162: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test163() {
    int n = 200;
    vector<string> edges = {"20 125,108 158,124 41,198 42,20 11,160 36,22 31,18", "5 69,101 15,6 69,5 110,114 164,95 191,122 160,69 1", "94,55 188,181 30,37 166,8 84,37 36,36 191,191 77,1", "6 116,178 97,24 181,81 181,3 168,36 67,99 172,165 ", "114,126 181,22 143,64 114,69 18,69 108,115 36,35 1", "16,179 38,181 163,183 69,121 198,2 178,198 70,100 ", "175,5 181,22 44,181 116,157 197,22 181,126 71,177 ", "43,103 154,85 69,56 36,152 153,20 58,46 196,15 181", ",109 104,52 81,15 25,192 116,181 41,17 41,55 94,13", "3 191,112 55,171 20,73 55,3 92,178 53,151 5,187 19", ",104 181,126 62,185 123,8 69,129 43,80 69,120 114,", "89 69,130 117,92 168,167 67,145 10,134 198,106 181", ",178 173,152 93,147 36,36 69,66 116,69 168,111 43,", "22 118,12 43,15 105,114 39,198 181,127 160,99 36,1", "04 119,55 98,160 27,87 126,23 41,104 59,63 69,181 ", "69,36 43,193 152,114 156,41 68,102 36,191 33,74 14", "5,178 13,181 146,86 126,158 142,57 43,106 32,36 14", "5,141 24,116 54,160 28,36 181,189 36,14 100,103 69", ",85 1,179 181,113 115,181 55,114 36,147 107,4 198,", "180 163,182 15,191 131,69 196,79 191,88 149,50 178", ",55 21,69 139,160 49,90 41,20 144,155 5,41 75,20 3", "6,190 102,186 69,104 48,116 29,145 40,36 178,51 19", "4,197 181,76 100,26 69,22 137,96 5,36 100,199 5,13", "2 104,82 160,159 15,187 184,34 20,152 83,170 152,9", " 8,135 145,200 69,69 138,5 195,19 184,140 56,198 6", "0,43 136,108 142,161 18,69 187,22 61,84 9,126 91,1", "69 146,78 145,7 145,139 65,100 150,128 100,162 15,", "176 104,152 36,72 126,148 152,174 189,47 30,149 18", "1,100 45,130 36"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 959585945;
    if(result == expected) {
        cout << "Test Case 163: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 163: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test164() {
    int n = 200;
    vector<string> edges = {"16 126,51 108,11 19,113 93,172 111,111 124,74 63,3", "6 161,91 62,56 12,174 166,184 50,93 91,144 179,134", " 27,187 61,182 132,93 47,64 140,31 79,114 199,146 ", "164,146 96,165 160,94 162,133 43,171 87,67 183,34 ", "190,192 99,69 66,93 185,144 98,194 54,70 93,93 150", ",148 104,4 140,86 11,67 165,192 95,59 97,194 170,1", "2 193,4 21,11 59,164 96,135 136,20 120,135 167,18 ", "110,93 45,124 85,145 141,132 150,139 171,17 60,89 ", "110,68 175,54 170,132 73,166 191,156 152,153 113,1", "19 168,4 93,200 150,145 93,20 165,24 55,69 51,102 ", "48,40 41,78 143,161 100,135 7,179 98,127 45,182 79", ",35 62,102 93,93 40,37 93,82 184,10 187,130 77,105", " 39,100 36,122 82,121 93,81 70,57 93,112 55,199 18", "8,139 87,63 47,168 181,147 189,175 72,66 108,126 8", ",127 26,45 195,20 93,64 21,93 99,133 93,19 46,102 ", "197,35 91,44 14,23 185,129 25,174 175,157 139,130 ", "184,67 25,100 93,145 58,110 111,125 29,196 98,93 1", "47,93 12,45 26,164 65,107 24,183 159,72 93,93 19,1", "41 180,155 164,2 75,91 90,75 93,106 80,49 175,12 1", "42,93 14,72 174,105 92,22 17,150 182,146 42,99 118", ",136 167,86 101,172 6,93 115,198 115,3 30,138 50,1", "97 48,132 177,182 78,1 94,88 8,130 133,53 14,20 67", ",34 154,65 158,142 56,84 186,93 88,131 59,152 121,", "112 93,39 92,15 176,37 33,163 130,184 133,27 37,15", "1 169,15 80,51 93,98 93,172 110,61 10,174 149,9 55", ",115 32,76 125,93 71,169 3,38 188,135 93,32 198,17", "0 93,93 169,93 39,190 93,53 44,83 60,189 117,83 17", ",55 125,146 93,74 47,93 139,165 52,148 11,93 1,121", " 128,96 173,147 117,84 111,190 154,57 181,33 134,1", "56 121,116 96,180 145,112 13,109 72,93 172,106 176", ",38 93,57 119,80 93,16 88,5 185,190 178,95 118,19 ", "59,1 162,38 114,149 103,169 30,93 61,137 9,5 23,15", "5 28,112 125,17 93,123 71"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 63107282;
    if(result == expected) {
        cout << "Test Case 164: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 164: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test165() {
    int n = 200;
    vector<string> edges = {"27 44,90 123,75 36,91 198,99 134,1 146,146 193,96 ", "124,66 18,59 153,20 39,36 53,3 98,69 151,6 134,4 1", "15,82 132,66 154,69 146,90 166,97 182,27 29,196 12", "7,8 155,134 146,17 55,68 134,186 146,8 146,196 94,", "108 96,134 109,182 96,58 200,30 163,5 187,51 96,16", "8 61,90 185,135 90,176 196,28 61,34 91,159 139,193", " 63,114 76,84 161,83 26,128 11,50 95,122 191,19 75", ",193 40,55 118,147 11,179 173,116 90,60 90,144 71,", "87 117,146 96,178 16,171 124,153 90,76 64,91 73,18", "6 78,88 92,90 5,90 87,17 107,142 195,132 90,146 45", ",111 137,80 12,174 3,111 37,197 60,146 152,15 143,", "7 146,21 96,24 145,102 96,140 8,98 79,110 126,181 ", "24,46 90,184 35,70 81,195 189,159 160,26 90,101 13", "4,101 159,143 96,84 125,106 30,104 57,192 52,169 1", "46,54 146,43 141,105 120,137 180,99 16,124 103,177", " 70,44 90,38 136,43 42,180 37,34 134,157 96,189 14", "6,182 30,162 9,33 35,109 76,143 61,165 63,90 184,1", "46 39,90 137,146 12,150 85,4 96,90 50,96 90,150 16", "6,113 134,16 47,166 13,19 8,69 38,188 96,181 149,2", "2 170,141 71,56 29,154 49,73 121,145 146,127 138,1", "19 50,75 155,134 90,156 21,96 48,62 31,64 109,134 ", "74,131 90,100 93,176 127,101 139,179 32,158 185,19", "9 47,64 164,10 146,153 126,175 139,21 70,190 135,2", " 55,152 41,1 31,18 58,124 84,118 134,54 128,133 93", ",14 146,100 133,18 49,147 54,169 65,184 33,146 79,", "90 173,72 7,4 167,89 182,96 120,73 34,13 85,172 14", "3,146 100,145 149,176 134,104 146,146 88,32 173,14", "2 189,56 44,90 141,21 148,118 17,79 174,40 25,23 1", "46,154 90,112 134,9 1,134 130,22 90,188 77,122 96,", "99 47,151 129,119 67,96 192,154 86,194 59,95 183"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 623361634;
    if(result == expected) {
        cout << "Test Case 165: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 165: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test166() {
    int n = 200;
    vector<string> edges = {"28 116,195 171,144 143,68 157,122 96,186 101,190 1", "76,26 196,8 171,127 186,129 186,122 145,82 155,186", " 191,189 142,186 53,171 98,61 79,75 10,80 160,98 1", "39,176 131,186 45,92 24,163 11,142 66,129 25,69 15", "3,146 128,133 37,5 11,124 161,183 116,165 43,98 36", ",19 130,36 23,141 46,142 198,133 106,178 79,48 176", ",2 69,182 146,133 78,98 144,122 167,144 134,38 146", ",57 36,69 131,122 65,151 36,113 176,133 186,36 40,", "33 72,49 119,93 176,122 56,133 81,20 176,3 190,57 ", "111,6 188,122 90,99 36,186 10,188 120,102 194,176 ", "112,12 18,83 77,84 112,14 39,168 146,75 110,122 13", "2,104 172,146 122,44 69,83 136,144 59,31 12,46 125", ",174 171,66 11,66 24,68 131,9 140,90 58,133 197,17", "2 4,98 27,103 124,30 160,133 121,112 170,66 98,155", " 191,146 52,114 83,184 122,194 13,22 171,83 66,85 ", "139,147 126,91 48,166 116,17 190,167 70,190 164,79", " 66,48 54,176 43,24 34,48 87,146 119,115 181,156 1", "37,118 7,196 200,7 20,158 46,179 160,131 124,122 1", "3,172 50,98 33,196 148,186 66,62 70,187 56,79 60,1", "21 159,160 98,42 133,146 76,188 98,71 21,12 131,20", " 118,130 133,74 133,46 66,177 42,62 167,123 12,168", " 117,82 191,186 135,122 131,108 36,97 127,41 124,1", "05 156,192 107,152 76,127 175,156 36,192 27,138 71", ",16 128,89 132,46 180,107 27,146 55,193 93,138 21,", "33 35,15 185,64 146,36 162,32 186,86 186,146 133,1", " 142,146 94,176 36,116 131,63 197,169 68,173 93,13", " 102,36 126,9 98,154 109,185 133,36 95,53 100,67 1", "62,29 24,172 131,113 150,115 186,68 73,109 133,176", " 196,122 47,199 12,10 110,175 97,146 39,94 51,11 1", "49,71 122,88 196"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 287718566;
    if(result == expected) {
        cout << "Test Case 166: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 166: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test167() {
    int n = 200;
    vector<string> edges = {"197 118,137 35,124 126,103 143,2 126,170 32,87 150", ",71 151,83 71,73 65,71 159,130 55,71 73,82 164,18 ", "71,42 177,71 12,196 63,63 124,16 71,198 101,73 90,", "163 60,104 73,68 71,87 63,84 52,178 102,30 145,169", " 97,5 132,145 89,63 149,15 175,181 52,157 121,38 7", "9,63 143,8 108,51 86,50 63,191 39,95 127,73 99,181", " 84,119 188,199 190,100 102,190 17,139 186,189 80,", "144 147,196 42,91 162,43 60,156 19,69 81,148 85,19", "3 44,26 154,30 94,63 5,153 200,138 73,28 144,180 1", "19,112 117,89 73,178 100,146 171,18 76,196 14,164 ", "73,182 81,27 17,172 49,8 114,4 33,194 45,108 114,3", "1 71,62 71,63 23,63 112,98 24,15 138,136 137,73 10", ",134 23,53 90,116 63,122 7,23 54,189 73,112 97,188", " 20,166 179,71 168,192 41,103 46,115 11,94 7,124 3", "6,92 154,86 92,37 10,142 28,144 183,166 14,188 61,", "25 40,73 105,71 57,138 175,71 60,125 1,100 71,31 1", "70,174 71,169 106,68 13,45 162,198 118,87 6,143 9,", "115 73,133 173,80 107,63 153,63 41,177 179,195 124", ",165 85,62 141,71 129,150 6,86 72,73 180,111 143,9", "3 65,101 197,186 39,180 20,22 34,91 149,41 167,152", " 115,163 70,10 67,120 57,75 112,73 52,64 63,9 160,", "3 191,158 49,24 148,116 157,63 197,81 136,73 81,19", "5 131,109 198,176 127,189 123,73 25,73 63,156 48,8", "8 56,71 173,70 43,63 85,185 63,122 89,1 63,115 110", ",168 56,117 106,123 66,71 63,66 58,147 142,25 33,3", "5 69,152 140,135 78,26 51,2 131,172 83,73 142,96 1", "73,63 27,73 8,31 32,4 22,73 139,161 73,139 59,165 ", "24,55 71,83 158,140 155,113 149,47 71,176 134,27 7", "4,11 155,46 160,113 194,44 71,121 116,105 29,34 40", ",139 3,63 77,107 58,199 74,184 168,192 167,48 19,7", "1 79,37 67,63 78,96 133,71 146,95 54,73 86,73 187,", "88 184,159 21,63 156,128 27"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 338267156;
    if(result == expected) {
        cout << "Test Case 167: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 167: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test168() {
    int n = 200;
    vector<string> edges = {"149 15,91 29,96 72,68 65,14 52,9 164,137 134,12 1,", "69 195,62 29,147 140,59 68,15 114,63 29,176 99,144", " 79,20 65,188 65,92 120,20 15,106 99,173 88,18 187", ",133 15,6 99,68 99,69 103,15 43,144 130,146 86,197", " 88,69 144,17 61,121 124,131 149,175 135,90 161,81", " 99,95 122,151 14,113 19,18 99,61 140,122 67,14 16", ",67 95,158 147,196 35,144 27,128 25,94 69,34 58,13", "5 99,155 88,12 116,15 34,124 29,88 47,184 99,99 13", "4,87 85,13 7,182 183,140 13,42 14,167 131,196 199,", "99 157,60 144,57 88,40 96,77 29,69 181,100 45,186 ", "165,88 159,86 29,105 29,88 107,65 200,73 68,12 123", ",80 198,68 169,65 46,99 39,24 198,179 88,143 21,16", "5 140,170 69,7 37,89 51,139 65,144 83,190 78,53 61", ",193 133,167 185,101 160,144 178,13 37,29 8,14 30,", "69 38,29 12,131 82,20 140,149 140,66 99,26 186,54 ", "107,23 68,154 88,69 112,68 191,144 28,110 29,71 18", "8,15 136,72 40,69 87,110 108,88 90,144 56,69 99,12", " 98,147 76,131 14,145 29,192 144,153 69,69 9,114 1", "13,10 44,181 97,12 2,133 55,129 105,14 88,190 140,", "14 49,140 40,12 172,174 68,6 22,15 74,14 125,33 12", ",68 171,99 126,200 48,80 140,199 15,36 29,53 17,14", "4 65,14 32,182 15,69 104,45 15,88 51,4 166,4 88,12", " 75,76 158,24 80,131 120,156 102,19 114,74 118,199", " 35,127 131,34 163,78 115,29 128,31 14,50 162,11 6", "9,117 43,165 26,168 74,109 12,41 29,68 194,177 103", ",99 21,132 12,144 150,152 12,88 3,140 95,190 115,5", " 69,180 144,84 162,29 88,88 102,69 141,141 64,10 1", "5,68 189,99 111,101 15,14 70,50 84,118 168,119 14,", "138 29,84 140,55 193,148 68,136 93,142 68,12 131"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 327941610;
    if(result == expected) {
        cout << "Test Case 168: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 168: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test169() {
    int n = 200;
    vector<string> edges = {"69 34,139 134,14 25,76 148,159 130,2 49,155 103,19", "9 183,104 178,178 172,32 93,72 98,174 139,133 119,", "98 8,199 198,166 104,143 171,74 15,178 77,141 84,1", "78 42,16 94,82 181,14 20,82 196,43 76,77 23,96 168", ",73 33,24 165,10 137,141 161,134 174,10 169,109 16", "3,125 24,197 100,154 66,61 50,108 138,120 46,139 7", "0,21 106,104 71,60 173,170 172,137 169,11 189,50 1", "32,17 23,133 36,176 66,123 178,146 155,85 88,34 80", ",92 188,162 195,185 178,178 119,80 114,26 7,19 104", ",93 122,177 171,144 175,99 156,55 9,108 152,50 53,", "112 57,199 178,36 101,135 199,123 129,118 192,187 ", "136,118 42,40 103,199 150,31 121,99 96,107 7,140 1", "11,185 179,2 30,18 60,52 178,120 31,63 8,76 116,18", "8 194,16 64,178 69,77 37,178 50,175 11,52 94,52 16", ",186 45,87 184,178 43,150 198,44 69,6 27,176 6,44 ", "114,79 188,11 178,109 197,146 178,178 26,178 186,1", "78 156,191 88,185 54,4 57,67 170,127 26,74 113,181", " 196,178 109,180 146,128 162,93 178,184 167,178 87", ",11 78,186 30,81 95,180 48,178 181,115 151,158 42,", "89 17,3 141,12 18,178 98,20 26,164 89,47 122,130 1", "47,54 131,43 148,178 120,110 56,45 13,156 96,22 47", ",65 130,193 164,178 200,112 4,104 126,40 180,178 1", "12,10 178,67 172,32 22,86 28,171 178,1 28,77 193,1", "78 56,21 81,51 177,158 118,65 153,186 5,178 162,20", "0 66,84 161,124 196,136 140,178 41,86 178,41 102,1", "05 56,170 117,11 35,106 55,120 121,152 60,55 178,7", "5 109,190 87,44 160,200 27,68 38,72 8,165 129,113 ", "178,113 97,1 86,49 13,83 109,188 178,179 54,28 149", ",162 115,119 68,33 188,59 125,97 74,140 41,58 110,", "130 178,122 157,84 178,71 166,68 101,62 169,167 87", ",110 105,95 9,191 51,85 171,120 91,174 178,39 50,3", "9 142,4 182,130 145,151 162,12 138,60 178,123 125,", "90 87,107 25,55 29,102 187"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 822582602;
    if(result == expected) {
        cout << "Test Case 169: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 169: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test170() {
    int n = 200;
    vector<string> edges = {"19 38,190 57,103 77,107 22,142 191,127 184,52 141,", "127 69,117 5,183 185,28 112,127 52,186 57,40 127,7", "5 70,127 63,114 69,74 195,80 136,127 51,40 192,62 ", "53,176 54,200 70,127 145,74 199,97 127,154 40,26 1", "71,135 133,15 135,127 25,42 180,4 84,156 127,119 3", "6,63 86,50 19,171 143,64 57,118 110,4 126,145 199,", "136 189,185 174,143 83,4 144,165 31,127 116,139 42", ",194 198,29 84,43 127,175 166,10 129,127 89,55 147", ",182 61,123 172,102 21,186 127,157 27,68 161,130 1", "63,98 137,81 92,125 166,85 170,99 60,3 183,185 127", ",37 191,127 56,79 196,124 120,95 172,98 197,39 108", ",140 100,15 133,117 33,119 49,135 127,51 78,127 98", ",145 195,92 127,66 106,159 31,127 166,75 200,112 9", "7,67 18,58 194,186 64,19 176,134 184,102 35,99 127", ",110 14,140 127,56 88,127 87,8 120,85 146,123 95,1", "40 115,106 46,11 155,29 4,129 127,149 156,191 62,1", "4 127,173 46,177 193,13 56,136 148,169 13,49 162,3", "1 122,116 103,200 127,180 139,132 56,153 102,12 17", "9,106 127,33 5,9 25,106 76,116 1,55 82,87 91,191 1", "09,127 123,101 58,152 164,128 127,77 158,124 92,30", " 78,27 129,182 98,127 108,130 131,163 131,128 136,", "115 100,22 151,184 85,187 145,104 194,127 21,58 10", "4,127 179,25 152,176 38,45 39,161 125,181 51,72 14", ",164 9,188 79,24 14,22 105,149 7,32 11,2 55,151 6,", "7 156,185 160,71 114,168 95,51 121,143 111,59 179,", "48 18,92 8,52 73,189 128,41 143,178 98,58 127,17 1", "85,60 193,23 25,116 158,193 65,130 127,87 196,129 ", "113,95 150,127 155,56 20,47 16,151 105,162 44,127 ", "176,47 141,21 153,184 170,127 33,89 159,94 154,31 ", "89,127 42,55 43,127 18,59 12,166 68,154 192,162 12", "7,78 121,90 21,82 43,138 106,84 127,32 155,52 16,1", "29 167,36 162,99 193,71 69,191 127,48 67,28 97,79 ", "87,57 96,63 34,72 110,154 93,151 127,127 143,86 34", ",45 108"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 74750592;
    if(result == expected) {
        cout << "Test Case 170: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 170: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test171() {
    int n = 200;
    vector<string> edges = {"173 190,5 125,34 138,56 38,5 184,7 28,170 1,56 100", ",114 22,117 163,12 190,56 62,115 92,5 10,24 5,84 1", "62,89 190,163 55,56 49,18 163,5 183,190 160,190 11", "1,81 5,194 74,64 105,96 5,8 163,80 86,190 113,21 1", "48,85 91,55 143,83 67,69 99,109 190,56 154,67 131,", "150 67,162 165,56 135,190 194,190 60,190 4,85 26,6", "8 190,129 190,177 5,169 5,105 88,190 56,190 185,5 ", "156,174 181,33 159,29 190,39 151,3 92,37 56,67 71,", "168 5,107 139,69 57,5 17,23 172,110 136,190 40,67 ", "34,171 61,90 133,118 12,44 56,147 47,14 47,50 81,6", "7 196,5 42,137 5,48 144,56 2,66 16,120 163,102 7,1", "36 104,163 165,13 58,145 88,195 151,115 3,41 136,1", "47 14,56 146,167 20,67 159,151 122,19 95,176 98,5 ", "134,102 28,105 67,172 190,56 126,106 166,136 67,56", " 199,175 5,56 65,105 21,191 85,98 163,112 168,87 5", "6,163 28,5 103,107 117,47 67,190 123,139 141,73 19", "6,175 197,117 139,5 72,99 57,5 181,132 190,67 140,", "190 63,54 94,18 30,56 121,56 108,6 150,120 189,5 1", "27,190 153,4 97,56 155,163 16,186 156,190 142,67 1", "1,105 166,164 5,7 128,32 105,68 70,144 75,43 27,19", "0 82,165 84,179 190,200 113,56 77,5 78,94 163,192 ", "5,101 9,105 27,188 134,53 56,116 105,198 190,133 5", ",178 119,19 163,190 163,67 61,137 51,25 190,190 17", "8,144 67,149 8,198 157,56 130,36 5,76 116,93 105,1", "05 99,46 56,180 162,22 5,105 13,105 5,79 5,105 92,", "42 31,144 15,182 56,163 170,158 64,52 93,105 39,19", "0 167,67 163,56 5,5 35,67 85,193 190,86 67,56 152,", "45 32,195 39,187 11,9 190,124 5,69 161,115 59"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 600230885;
    if(result == expected) {
        cout << "Test Case 171: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 171: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test172() {
    int n = 200;
    vector<string> edges = {"110 130,132 130,38 159,96 152,145 7,91 10,1 50,39 ", "183,90 72,159 185,71 159,194 6,159 191,172 8,130 1", "9,183 16,94 169,115 169,102 66,159 51,1 99,42 186,", "107 159,155 1,91 18,20 183,198 166,159 147,1 6,28 ", "169,59 43,27 177,61 70,166 124,55 91,75 136,27 125", ",22 159,130 123,1 174,168 165,3 7,1 178,200 130,12", "9 183,94 164,87 130,183 25,86 46,181 183,1 58,169 ", "138,53 190,6 27,1 126,59 29,80 199,130 195,117 76,", "159 52,91 143,13 183,189 169,74 183,136 167,6 90,9", "1 56,77 86,6 46,1 61,186 115,146 139,163 159,169 1", "59,151 91,48 91,193 6,169 66,36 91,169 152,169 79,", "31 1,84 94,183 88,6 130,183 182,130 21,60 159,82 1", "99,103 50,158 176,95 183,183 114,130 32,47 130,159", " 5,159 141,146 79,130 140,183 1,159 175,162 159,18", "3 128,173 102,183 65,101 130,104 54,6 30,111 91,12", "6 144,112 10,77 46,183 192,37 91,24 159,44 178,130", " 188,170 130,100 133,168 130,130 184,1 67,78 159,1", "35 92,169 154,199 23,183 150,133 97,130 63,1 35,8 ", "154,142 91,91 109,121 199,91 89,3 73,40 169,11 171", ",145 3,100 169,81 130,108 91,29 6,91 179,17 35,105", " 159,54 148,91 183,174 57,159 113,169 166,135 199,", "180 96,91 4,29 43,127 91,183 187,80 158,159 41,79 ", "139,196 183,130 69,153 159,119 183,134 171,83 199,", "1 93,64 159,164 84,31 122,49 183,169 106,90 12,199", " 167,116 91,197 53,152 180,27 2,157 90,130 137,83 ", "54,124 198,75 167,156 161,91 117,26 132,156 159,13", "0 118,91 15,183 14,130 159,62 92,130 68,131 130,83", " 148,190 197,183 160,42 115,199 7,134 11,33 45,98 ", "183,6 11,66 173,159 85,34 159,91 199,199 169,183 3", "3,97 100,143 9,183 149,120 159,172 154,53 169"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 222286191;
    if(result == expected) {
        cout << "Test Case 172: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 172: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test173() {
    int n = 200;
    vector<string> edges = {"16 73,188 101,90 124,16 81,58 125,11 12,101 141,12", " 9,157 160,160 106,162 115,63 145,46 80,115 194,14", "6 31,89 188,160 50,80 22,57 152,80 30,99 119,40 37", ",171 138,80 160,93 115,185 80,84 178,49 147,25 3,1", "18 109,63 52,80 122,16 18,143 49,100 57,144 101,89", " 47,70 115,57 70,98 185,2 188,126 49,70 112,156 18", "8,191 36,81 164,7 57,105 57,21 101,195 32,188 69,7", "2 41,71 1,128 101,129 83,127 153,70 163,188 75,121", " 106,108 49,134 124,85 57,190 180,80 16,149 79,74 ", "124,45 105,66 147,6 115,148 198,49 154,73 133,107 ", "49,144 20,99 67,124 35,18 136,132 124,17 106,155 2", "7,67 76,60 170,62 51,169 101,14 70,150 173,46 200,", "166 19,4 110,49 174,158 101,57 150,124 26,115 186,", "103 49,161 97,57 175,19 124,168 64,112 39,187 193,", "58 29,10 57,119 88,124 131,170 101,61 49,33 124,52", " 145,2 189,102 49,78 124,101 58,9 188,101 38,196 4", "0,99 49,24 99,148 113,82 188,160 28,16 142,65 160,", "113 198,53 124,32 80,86 192,187 160,48 160,184 85,", "57 188,10 15,5 115,124 92,169 111,178 6,57 44,197 ", "58,70 91,80 56,29 139,192 57,103 140,188 23,71 16,", "118 99,54 130,54 48,99 64,49 176,188 146,96 104,99", " 180,43 80,34 13,17 121,130 48,124 199,34 115,49 5", "8,101 114,160 115,58 179,155 80,165 125,101 36,94 ", "6,9 11,196 37,148 188,161 57,58 51,137 161,104 115", ",99 124,188 37,181 179,16 124,167 101,42 97,115 3,", "70 120,115 79,194 135,117 124,159 10,177 49,110 58", ",115 182,172 124,83 160,127 160,151 95,116 49,183 ", "49,80 8,70 123,95 70,87 80,134 59,49 55,171 16,194", " 41,15 68,77 160,160 52"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 864316318;
    if(result == expected) {
        cout << "Test Case 173: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 173: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test174() {
    int n = 200;
    vector<string> edges = {"129 48,35 129,72 151,54 61,53 19,182 170,99 155,34", " 149,64 137,93 137,151 82,81 33,169 142,16 34,155 ", "62,51 175,90 51,129 51,19 153,77 133,7 129,63 83,7", "1 61,137 155,151 110,72 31,112 28,131 158,43 192,1", "71 72,81 174,29 177,74 18,19 41,28 76,126 174,28 6", "1,144 182,173 151,93 6,120 28,131 22,84 108,22 158", ",29 172,129 128,101 108,26 126,185 50,19 182,182 1", "24,68 51,148 188,19 11,44 146,5 90,155 40,178 115,", "113 174,13 137,174 18,182 40,174 45,34 81,136 29,1", "08 36,59 108,138 182,34 80,51 191,91 146,66 126,51", " 56,123 136,30 49,44 91,164 90,134 129,155 141,137", " 89,82 85,79 129,106 143,156 81,30 34,90 132,72 19", ",40 9,73 51,72 20,34 14,198 28,130 185,163 51,96 8", ",72 55,34 78,193 90,108 34,34 169,150 72,168 19,29", " 102,19 160,34 186,90 29,129 42,40 109,3 151,100 1", "29,182 195,29 179,67 137,154 29,158 61,72 122,105 ", "29,183 81,104 129,143 4,137 189,118 129,23 174,194", " 29,34 197,157 61,23 184,61 65,39 182,75 174,65 96", ",107 40,129 145,34 87,130 50,166 34,155 116,111 34", ",176 34,58 151,152 61,43 129,115 90,51 125,140 28,", "147 81,81 139,18 2,34 10,119 193,72 121,129 190,86", " 51,65 8,143 40,170 60,28 199,165 151,32 81,129 10", "3,21 28,137 38,69 29,27 81,162 28,29 133,40 46,92 ", "108,109 52,129 108,48 180,91 61,109 127,90 83,70 1", "37,181 61,81 25,161 19,72 17,129 159,200 83,137 24", ",97 34,52 127,98 29,129 88,137 174,12 155,28 29,18", "7 34,151 61,37 51,57 29,167 137,115 94,40 114,117 ", "137,19 47,81 196,4 106,148 137,40 185,155 1,135 40", ",155 95,15 155"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 46277620;
    if(result == expected) {
        cout << "Test Case 174: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 174: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test175() {
    int n = 200;
    vector<string> edges = {"115 179,1 96,194 59,76 39,195 141,82 90,76 60,105 ", "171,189 127,85 3,117 19,164 41,162 23,38 133,116 1", "05,94 128,200 198,87 97,153 118,87 65,178 170,177 ", "36,190 132,198 44,123 87,58 73,93 187,102 159,114 ", "112,50 78,151 110,161 62,83 144,94 112,66 120,193 ", "29,87 13,14 141,32 92,101 197,114 88,130 143,9 4,9", "0 188,54 103,136 140,54 53,193 87,66 67,46 72,69 1", "29,129 163,154 104,68 122,27 17,161 87,111 125,76 ", "83,145 97,135 31,7 71,123 75,169 87,54 58,27 10,17", "7 91,96 137,54 131,180 80,12 21,11 61,167 131,187 ", "54,33 92,43 54,109 106,107 81,127 86,62 151,180 87", ",156 93,98 20,21 82,54 154,51 60,182 146,178 87,17", "6 168,159 8,85 76,76 54,64 87,33 32,64 81,124 162,", "8 57,150 17,115 35,179 50,46 54,13 111,121 24,10 1", "73,87 21,34 168,47 167,128 88,178 196,12 188,30 19", "2,172 100,191 26,117 87,193 31,54 101,45 64,54 68,", "87 112,18 77,54 137,54 160,24 84,54 6,40 28,62 139", ",102 54,43 22,157 76,4 29,121 7,54 67,185 160,142 ", "76,31 4,87 54,14 195,124 46,108 5,80 42,189 138,20", " 126,164 136,75 16,41 53,168 105,72 23,76 49,18 13", "2,2 58,126 68,126 95,115 78,196 170,19 186,117 186", ",165 189,84 54,190 15,25 49,78 183,2 73,37 52,87 1", "90,54 153,45 48,38 194,180 42,102 199,54 108,34 11", "6,187 156,43 134,44 28,143 87,15 77,38 175,67 191,", "152 100,155 127,87 76,87 33,61 158,57 199,59 166,1", "57 59,122 20,63 101,26 120,40 200,184 165,1 30,149", " 17,192 137,131 47,87 179,125 13,70 6,34 54,113 55", ",197 63,134 22,148 169,54 14,103 119,165 86,109 16", ",165 181,152 113,147 76,11 74,54 113,48 107,36 154", ",65 158,76 189,163 69,84 7,106 123,129 87,172 55,1", "0 56,27 79,174 121,99 151,157 38,140 53,89 157,91 ", "104,87 37,110 161,87 198,65 74,10 149,87 182,27 76"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 896561145;
    if(result == expected) {
        cout << "Test Case 175: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 175: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test176() {
    int n = 200;
    vector<string> edges = {"79 71,79 195,84 183,43 183,55 174,34 44,79 140,31 ", "192,175 51,101 54,114 51,46 19,69 104,42 93,143 58", ",128 35,178 79,104 111,57 190,47 79,10 79,23 79,90", " 21,44 131,53 34,41 150,157 183,143 113,18 187,3 7", "9,97 24,96 52,68 52,79 85,31 8,13 100,24 156,34 10", "0,79 105,154 196,191 29,159 93,79 22,32 133,156 19", "3,165 158,40 183,95 142,26 136,16 103,79 147,26 95", ",77 183,124 109,174 38,96 157,146 36,193 164,52 15", "1,75 81,20 128,33 79,65 8,84 97,109 196,101 135,81", " 14,79 84,37 109,183 7,72 183,99 172,23 159,97 139", ",1 79,62 51,121 164,89 183,152 20,146 60,20 124,36", " 38,52 94,16 175,96 44,117 190,183 123,164 156,64 ", "79,30 183,111 143,115 79,52 161,59 16,190 118,23 1", "7,141 136,179 79,158 65,48 183,87 103,108 27,157 1", "41,187 41,60 157,32 122,74 52,88 79,148 11,183 70,", "113 102,114 87,8 173,196 81,144 183,9 17,45 52,157", " 145,135 9,57 118,127 183,183 199,120 99,78 53,15 ", "146,78 21,34 4,112 183,28 81,192 165,100 39,93 49,", "185 19,5 155,67 79,183 170,92 54,110 21,154 160,18", "3 86,17 92,134 119,9 12,73 52,183 132,79 6,122 186", ",56 183,98 28,60 55,181 183,41 159,137 183,27 142,", "102 69,183 116,139 118,182 183,99 35,186 145,66 44", ",126 79,166 79,92 130,197 79,125 183,79 194,172 12", "9,27 141,113 23,52 14,180 120,183 83,189 183,172 1", "1,133 134,44 185,153 81,172 148,82 100,79 2,81 99,", "188 183,79 168,90 19,169 4,185 191,200 176,76 79,1", "67 50,52 80,149 68,186 106,14 23,145 134,81 198,15", "5 52,107 79,184 183,136 63,79 25,176 52,183 162,18", "3 91,18 42,44 50,171 55,157 175,39 82,163 192,61 4", "4,102 138,177 79,31 23"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 408341563;
    if(result == expected) {
        cout << "Test Case 176: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 176: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test177() {
    int n = 200;
    vector<string> edges = {"101 184,14 197,153 168,81 120,25 164,190 78,112 12", "9,34 2,200 70,118 158,63 172,30 152,50 104,186 14,", "63 176,92 62,67 170,117 15,31 94,164 66,186 132,72", " 83,86 101,143 35,119 27,200 99,186 71,49 81,13 96", ",40 112,41 186,50 8,101 72,98 75,59 151,117 39,32 ", "90,146 63,134 124,120 141,40 154,170 63,118 32,66 ", "36,164 50,11 68,90 136,14 63,163 168,80 63,122 174", ",118 45,91 186,110 54,144 118,31 181,181 94,178 12", "3,60 169,123 131,176 116,77 87,163 37,137 97,93 18", "2,154 32,109 107,182 131,111 142,177 126,180 188,3", "3 139,182 145,104 166,93 89,42 60,22 50,192 149,16", "4 23,63 187,118 198,167 63,158 173,57 193,69 63,11", "8 73,118 171,14 58,69 51,139 186,17 95,141 49,154 ", "35,150 63,129 82,70 99,56 122,130 40,145 77,145 11", "1,4 194,50 40,156 72,79 154,50 161,143 114,53 140,", "192 118,157 82,55 17,8 169,75 26,111 188,127 117,2", "7 62,46 171,145 2,154 38,190 194,40 107,87 195,159", " 166,28 161,90 168,108 118,48 180,197 189,28 65,50", " 119,165 117,183 105,124 88,81 40,18 118,130 138,1", "37 168,128 2,118 145,63 64,101 5,109 196,63 9,57 5", "3,65 161,3 137,121 197,131 178,58 85,186 12,186 15", "1,104 175,13 52,148 151,148 59,45 10,72 57,55 58,1", "05 88,52 30,179 57,8 42,119 92,76 89,26 98,24 137,", "115 164,182 155,189 121,137 90,182 106,40 78,36 12", "5,157 112,184 147,133 66,154 44,117 74,118 185,75 ", "186,113 90,164 21,61 154,85 68,63 110,180 174,162 ", "22,177 114,182 43,68 95,146 164,76 93,133 47,128 3", "4,72 146,199 33,175 159,16 64,117 160,126 35,7 155", ",182 94,4 78,164 88,183 134,103 24,139 199,191 12,", "20 132,107 196,19 118,152 96,47 125,168 1,101 57,1", "42 122,6 182,117 186,17 135,29 182,102 29,182 117,", "195 77,84 117,154 52,100 144,99 14"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 549595121;
    if(result == expected) {
        cout << "Test Case 177: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 177: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test178() {
    int n = 200;
    vector<string> edges = {"156 187,15 98,124 79,129 94,87 51,114 158,91 44,19", "2 98,180 39,52 120,98 48,148 168,33 169,191 93,9 1", "88,84 188,191 36,188 113,183 182,9 145,98 44,181 1", "82,121 191,177 152,157 149,45 130,149 58,196 55,18", "2 152,109 115,123 9,4 25,153 147,143 159,171 148,1", "91 69,109 104,169 58,37 137,135 11,199 156,190 7,9", "7 2,131 196,19 167,37 152,77 71,83 35,40 18,98 46,", "68 6,129 133,154 10,131 150,45 90,44 40,135 20,23 ", "20,191 126,55 191,194 88,125 82,65 93,44 159,166 1", "35,16 98,161 22,70 149,30 10,36 56,17 98,176 116,1", "9 57,139 132,26 90,30 39,58 135,197 170,190 38,66 ", "100,44 68,43 55,170 86,135 22,200 65,37 173,194 19", "1,59 138,98 156,98 102,111 157,177 53,52 127,57 16", "7,3 178,128 165,120 124,116 29,189 98,42 50,85 12,", "135 25,191 122,61 98,176 78,98 151,98 106,67 54,15", "3 110,21 159,135 164,185 182,149 93,184 44,180 175", ",43 99,69 38,108 135,34 47,103 98,86 130,57 156,19", "1 54,148 130,197 86,31 2,177 81,182 156,136 108,55", " 176,68 75,149 139,47 107,100 6,91 160,187 73,184 ", "104,133 94,96 182,125 112,7 8,188 33,91 24,147 110", ",68 130,24 160,193 187,80 149,105 98,186 122,98 15", "5,5 184,166 195,63 130,26 45,62 182,193 73,172 3,1", " 146,143 21,59 93,165 82,124 55,134 75,12 118,13 7", "9,59 162,126 144,93 128,142 9,152 135,164 64,174 7", "8,14 162,42 92,77 149,2 156,191 158,130 55,68 178,", "198 30,117 34,101 174,169 180,118 68,28 49,98 163,", "92 50,60 63,171 168,112 128,169 95,179 11,182 129,", "173 137,121 72,138 76,107 34,74 98,87 141,9 30,1 1", "49,6 66,177 89,31 97,152 50,5 115,14 76,172 178,18", "2 27,118 85,150 196,83 130,149 34,140 40,13 127,15", "6 110,51 65,101 29,98 41,140 18,49 135,177 119,32 ", "149,8 69,141 200"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 346795221;
    if(result == expected) {
        cout << "Test Case 178: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 178: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test179() {
    int n = 200;
    vector<string> edges = {"69 107,20 57,159 149,185 32,23 124,66 48,106 136,1", "84 13,121 101,138 147,171 20,71 48,60 119,13 177,1", "23 89,196 97,29 38,27 34,15 28,27 42,183 198,131 1", "60,120 60,102 179,16 163,166 112,57 171,110 133,35", " 132,78 147,161 24,128 43,75 5,169 31,100 88,132 6", "0,110 60,4 115,173 14,62 197,151 105,9 30,46 192,1", "83 137,116 139,72 69,58 80,148 48,113 6,31 76,83 4", "8,47 127,188 146,70 147,79 130,24 153,114 80,60 9,", "167 122,128 41,23 104,15 164,69 91,113 67,36 140,8", "6 13,60 168,70 129,113 49,86 44,151 137,70 150,136", " 180,4 82,52 35,173 120,74 41,155 81,154 193,119 1", "70,60 113,199 138,139 80,112 154,157 147,181 68,11", "6 144,182 45,31 60,200 31,40 120,64 133,190 113,3 ", "105,41 60,91 196,99 152,101 68,170 109,69 90,169 1", "40,18 87,93 80,60 183,26 156,85 120,194 12,53 9,62", " 194,62 111,10 13,77 109,100 118,142 62,82 115,143", " 2,160 45,60 79,34 41,143 117,113 141,80 60,147 37", ",100 38,41 50,54 17,80 84,28 61,34 42,113 162,110 ", "127,120 8,60 68,62 60,167 130,52 95,54 131,178 159", ",16 121,55 100,152 98,95 5,120 108,163 181,60 174,", "56 162,188 174,141 39,134 47,30 153,198 3,186 48,3", "1 195,13 57,132 75,120 149,125 2,1 147,192 117,156", " 176,103 145,156 48,25 62,165 33,77 165,155 61,19 ", "63,99 168,69 172,92 13,146 124,26 176,73 41,39 65,", "119 33,13 59,106 180,179 98,80 32,113 187,62 175,1", "47 60,60 69,36 169,17 182,145 193,164 81,131 60,51", " 31,104 174,21 100,62 82,191 31,22 80,51 126,168 1", "02,94 120,150 129,60 100,41 135,53 161,60 103,134 ", "64,69 19,89 122,192 60,13 60,69 96,147 11,100 158,", "60 15,103 166,65 141,79 123,91 97,48 87,178 149,60", " 48,46 125,180 100,31 7,41 189,144 139"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 361387612;
    if(result == expected) {
        cout << "Test Case 179: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 179: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test180() {
    int n = 200;
    vector<string> edges = {"51 155,92 10,138 79,40 115,91 100,25 169,98 6,173 ", "124,3 155,40 9,184 113,185 92,136 44,114 118,60 74", ",32 178,87 50,45 148,187 170,178 132,129 114,74 10", "4,80 134,173 150,165 84,17 11,107 166,33 123,28 21", ",42 158,14 178,142 149,116 142,180 108,195 59,42 7", ",79 148,143 196,146 6,122 32,74 3,16 65,182 89,165", " 53,18 32,149 125,81 20,125 160,143 121,26 20,89 1", "03,82 196,163 158,148 89,1 148,78 48,70 53,161 171", ",72 165,73 190,97 191,162 72,52 115,25 83,2 127,11", "4 49,173 136,192 133,189 45,21 50,157 167,178 130,", "96 135,113 128,68 90,142 21,53 109,174 199,18 122,", "78 43,3 51,131 30,35 20,165 108,141 84,147 120,182", " 103,46 126,142 111,104 63,85 130,139 13,77 177,15", "2 186,164 53,139 142,128 184,178 131,17 165,145 39", ",165 31,142 59,172 54,27 65,143 36,111 119,24 74,1", "23 165,75 192,107 54,13 19,46 178,75 62,107 65,57 ", "144,177 20,165 175,22 17,74 169,1 76,86 123,62 188", ",188 133,40 34,132 88,110 74,74 154,179 154,66 116", ",114 165,169 45,190 101,175 58,147 157,4 180,83 38", ",181 194,121 169,127 110,176 157,150 55,178 97,64 ", "18,96 193,24 171,136 143,100 71,137 135,178 57,152", " 189,159 167,83 56,80 116,200 35,22 11,173 121,40 ", "25,72 15,96 35,37 43,24 161,183 60,140 166,74 178,", "198 111,158 7,92 69,4 108,71 91,165 133,23 92,114 ", "153,154 117,146 98,9 94,59 41,45 107,187 29,99 47,", "102 14,96 26,38 67,176 99,142 45,58 197,145 178,15", "6 31,47 176,115 83,48 105,31 106,184 74,189 71,101", " 73,26 169,101 165,110 2,5 84,112 37,61 84,165 178", ",189 199,68 78,53 93,156 106,43 112,12 84,178 194,", "117 179,123 95,168 139,123 151,92 142,142 165,78 4", "5,45 157,149 8,185 10,27 16,15 162,29 170,74 187,1", "97 175,178 42,6 165"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 877732671;
    if(result == expected) {
        cout << "Test Case 180: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 180: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test181() {
    int n = 200;
    vector<string> edges = {"148 77,179 61,86 11,112 6,142 58,163 18,108 81,172", " 103,77 41,128 4,64 98,125 31,40 24,30 199,169 59,", "63 55,58 144,1 120,187 183,83 179,12 197,159 10,17", "9 53,58 47,167 76,152 191,113 168,46 28,111 101,12", "4 118,4 143,60 113,58 194,115 143,58 124,78 82,154", " 198,135 22,143 104,172 91,143 90,18 77,105 76,53 ", "188,77 143,19 86,105 61,172 87,33 142,143 15,116 1", "09,23 177,29 43,94 14,168 60,63 172,121 159,133 15", "0,13 92,47 149,108 79,143 99,199 145,147 5,3 143,4", "0 185,22 91,110 160,96 54,79 81,84 130,70 87,30 77", ",87 92,87 39,58 122,59 77,104 173,95 106,100 10,83", " 188,131 167,190 143,134 175,64 61,58 158,152 172,", "162 64,50 172,49 152,98 7,140 63,107 101,183 153,1", "3 45,122 189,157 68,135 150,195 116,62 152,110 152", ",139 96,58 37,14 152,146 16,51 148,152 82,56 143,5", "8 73,44 197,157 80,126 5,92 45,186 42,155 87,198 5", "0,93 94,193 17,26 20,130 77,58 65,20 151,7 64,157 ", "61,71 115,143 48,124 28,165 27,113 87,133 91,147 1", "26,59 123,58 9,70 102,192 196,25 62,37 72,31 152,1", "03 24,89 176,118 139,151 26,124 152,88 166,152 2,6", "1 197,152 180,58 95,19 11,90 132,8 34,41 137,79 13", "0,146 143,181 58,32 80,69 132,127 143,38 88,143 15", "7,21 10,170 93,99 136,156 87,126 172,89 157,52 30,", "157 34,69 90,105 131,119 112,43 39,195 109,88 196,", "119 28,14 170,182 68,100 159,114 136,107 117,12 44", ",166 196,97 194,87 165,18 161,67 47,111 61,152 120", ",159 130,85 59,195 143,130 87,52 145,200 73,17 157", ",178 87,175 84,54 118,114 99,50 154,29 39,171 35,1", "86 87,134 84,153 187,196 130,138 57,130 187,18 74,", "75 180,19 172,36 65,20 157,35 157,107 111,184 144,", "44 164,138 87,26 129,77 177,185 103,58 61,55 140,6", "6 118,6 28,141 151,174 191"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 21836939;
    if(result == expected) {
        cout << "Test Case 181: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 181: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test182() {
    int n = 200;
    vector<string> edges = {"28 24,41 115,87 51,165 199,28 183,173 106,137 115,", "43 167,15 42,136 176,25 131,194 103,45 28,163 177,", "125 124,65 177,4 164,3 97,187 163,137 89,124 43,55", " 111,11 190,102 122,168 28,55 84,177 3,163 38,187 ", "162,164 28,83 103,83 13,131 122,197 62,78 164,192 ", "138,10 11,57 122,47 41,74 111,61 141,123 131,14 13", "0,50 111,114 161,12 68,95 9,177 184,37 158,58 28,1", "31 134,90 132,174 6,139 177,191 111,154 46,163 70,", "112 142,174 122,131 10,58 157,137 55,155 21,55 143", ",82 43,189 198,52 11,120 137,62 28,18 10,15 36,147", " 35,6 114,100 169,28 171,163 73,151 24,142 43,111 ", "54,109 79,161 174,71 129,119 116,193 167,153 27,16", "6 105,200 115,188 145,33 111,131 104,113 152,67 18", "7,121 39,113 156,81 29,111 146,112 23,10 2,118 131", ",57 92,55 15,43 3,34 94,86 5,150 172,170 127,55 13", "0,190 52,48 101,68 122,135 141,84 133,56 51,110 41", ",180 47,87 56,164 105,122 27,93 43,164 128,187 81,", "3 192,71 131,63 139,60 111,46 30,147 1,25 159,55 8", "8,60 196,30 3,28 64,28 158,66 184,185 138,85 10,76", " 43,156 152,26 54,39 178,169 93,121 70,122 96,136 ", "33,99 82,186 170,20 187,78 19,10 77,137 122,163 13", ",187 132,72 82,32 30,5 55,98 131,142 23,119 101,18", "2 128,20 31,70 178,93 80,22 168,187 111,164 170,43", " 7,35 149,1 149,152 122,187 16,76 144,177 59,53 93", ",148 172,177 107,4 160,185 192,195 105,40 137,79 1", "77,10 164,192 175,35 122,28 93,97 173,108 187,49 1", "83,44 43,163 119,30 154,95 93,13 194,61 135,69 102", ",48 116,198 177,165 93,3 141,172 28,99 72,21 55,93", " 145,176 33,179 80,10 75,28 126,117 187,108 140,94", " 131,78 181,200 47,8 10,3 87,106 97,91 117,17 15"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 896543860;
    if(result == expected) {
        cout << "Test Case 182: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 182: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test183() {
    int n = 200;
    vector<string> edges = {"176 54,183 31,25 165,46 157,69 177,160 38,121 59,1", "3 131,76 166,47 13,42 85,15 164,55 181,1 194,191 1", "59,31 158,135 133,61 13,184 196,77 32,92 28,52 170", ",35 135,78 59,196 76,70 19,38 27,182 33,53 92,79 4", "7,199 87,102 113,96 160,174 86,167 12,84 186,63 19", "4,125 200,71 114,185 143,13 95,7 157,135 152,166 1", "61,21 76,193 44,3 135,12 138,131 116,76 112,146 10", "7,163 172,76 50,44 72,175 120,78 121,93 9,14 142,3", "5 175,35 51,46 76,6 76,7 46,76 31,18 15,13 24,53 1", "4,81 22,118 66,45 90,35 44,197 10,71 43,94 140,141", " 99,10 115,182 35,187 2,191 13,117 194,76 82,136 1", "27,186 36,179 76,103 101,131 122,116 122,64 20,74 ", "41,69 151,93 128,57 61,41 178,19 73,195 24,146 190", ",140 13,142 13,171 76,86 180,29 191,112 16,111 76,", "34 13,162 102,51 137,93 76,50 123,170 30,82 65,155", " 51,174 180,140 150,147 186,175 104,56 27,118 60,1", "45 44,110 64,51 97,54 95,139 153,22 21,23 190,106 ", "34,69 149,76 15,189 118,111 100,76 113,171 127,194", " 35,108 172,187 136,34 4,76 170,171 48,45 37,35 19", ",17 77,35 13,48 2,119 153,58 13,169 118,130 111,76", " 85,36 147,199 40,99 58,62 13,175 188,141 58,200 2", "1,90 76,198 171,35 76,182 134,25 89,13 64,86 13,41", " 67,154 175,182 49,13 96,15 173,30 52,10 76,185 11", ",101 91,162 113,165 110,156 62,13 186,69 192,108 1", "63,98 64,185 13,76 71,179 8,89 98,77 13,77 105,13 ", "181,19 144,13 75,76 78,26 44,126 135,148 123,37 90", ",194 132,13 40,86 83,173 164,103 91,168 182,51 124", ",19 39,68 50,118 35,167 76,35 69,196 5,46 88,153 1", "3,80 156,87 40,183 158,50 148,13 76,91 76,96 56,12", "5 81,105 32,167 138,129 167,74 67,6 23,176 95,142 ", "28,41 13,108 13,80 62,75 109,107 6"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 956799713;
    if(result == expected) {
        cout << "Test Case 183: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 183: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test184() {
    int n = 200;
    vector<string> edges = {"143 92,78 50,143 193,93 40,10 73,143 5,97 184,89 1", "1,150 55,110 77,44 137,70 114,116 143,134 167,127 ", "21,5 95,185 198,187 96,80 193,111 42,137 179,60 14", "3,163 45,143 29,51 68,11 62,183 193,45 67,7 199,14", "5 30,128 148,4 198,20 145,44 143,153 99,7 57,13 11", "5,188 154,61 186,78 1,139 23,157 174,94 48,112 148", ",91 75,189 200,120 91,89 99,138 39,50 47,130 107,1", "25 145,136 27,66 118,177 118,166 39,106 174,81 191", ",173 136,143 188,50 143,51 56,100 61,175 180,17 75", ",180 192,143 56,141 54,53 60,8 143,5 32,63 57,81 1", "4,136 79,84 178,169 24,143 153,66 59,115 74,5 26,1", "15 196,55 143,29 140,132 143,22 128,143 66,55 157,", "36 191,143 14,2 46,109 182,117 124,46 162,124 143,", "44 69,108 152,169 52,43 178,126 35,35 143,143 45,2", "5 10,132 170,15 103,143 115,143 87,154 73,70 4,38 ", "115,143 70,194 145,176 53,186 124,136 143,29 151,4", "8 87,24 181,101 134,37 64,142 72,62 21,105 58,83 1", "51,178 143,159 187,131 193,37 144,197 101,135 50,1", "43 187,102 41,150 146,165 161,28 50,106 164,140 85", ",5 182,15 25,185 77,102 116,153 127,88 132,64 142,", "165 92,144 42,192 94,40 84,177 6,129 196,35 82,158", " 113,5 31,83 12,123 193,87 98,60 63,152 168,108 12", "2,93 171,71 3,90 41,76 115,56 18,146 164,50 190,68", " 133,184 195,43 200,19 132,34 19,113 97,69 49,86 1", "32,149 193,72 111,2 100,59 33,23 49,79 65,188 160,", "175 98,167 14,133 138,159 121,145 9,176 147,143 42", ",110 114,125 172,12 119,130 33,179 139,90 17,117 1", "62,199 147,54 8,67 195,8 58,92 122,161 168,85 119,", "120 116,126 112,145 143,36 197,18 166,171 189,141 ", "3,136 104,16 136,163 158,156 131,160 103,107 6,82 ", "22,96 52,155 132,121 181,105 71"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 186681573;
    if(result == expected) {
        cout << "Test Case 184: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 184: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test185() {
    int n = 200;
    vector<string> edges = {"170 96,133 170,170 31,95 52,2 88,127 180,95 9,39 1", "81,94 54,71 95,53 65,93 5,12 170,166 199,200 158,1", "55 84,48 171,39 180,170 3,54 170,161 152,120 170,8", "0 115,75 137,142 194,180 170,138 95,88 173,28 40,6", "0 88,180 50,119 124,46 143,149 166,168 159,114 52,", "147 166,155 135,180 154,95 187,174 86,166 106,78 1", "78,61 150,49 57,1 74,66 81,154 172,195 122,45 89,3", "1 144,111 95,153 20,179 180,123 34,112 19,84 135,1", "05 33,170 51,18 136,180 104,23 157,27 25,180 161,1", "50 180,11 71,68 180,98 185,131 130,16 170,166 88,1", "56 29,197 117,88 72,58 101,95 166,7 169,58 42,180 ", "95,23 97,22 81,69 170,85 152,100 118,36 180,79 9,7", "6 154,59 124,193 88,66 22,135 180,95 20,95 97,70 1", "94,95 139,69 67,18 133,176 90,166 103,180 113,192 ", "83,129 64,29 47,6 5,125 181,109 88,86 104,130 50,1", "72 76,179 41,68 24,116 28,166 186,88 92,95 195,50 ", "131,160 147,192 166,190 141,59 119,170 88,132 88,1", "08 64,44 189,162 30,99 8,3 163,77 88,34 95,186 128", ",91 123,4 25,168 187,107 167,175 6,171 166,166 32,", "4 191,105 95,37 111,115 166,194 180,180 22,166 55,", "127 134,198 113,88 183,140 139,80 146,167 126,166 ", "99,126 170,95 129,125 39,160 10,82 95,32 26,106 14", "5,170 47,63 166,98 180,116 40,75 138,85 161,88 17,", "71 188,112 95,20 38,170 182,170 143,30 170,95 101,", "170 14,103 13,170 90,102 88,44 166,108 129,88 184,", "166 21,166 1,127 177,88 43,110 96,124 95,187 159,1", "66 35,117 36,78 166,68 164,153 38,97 157,56 140,19", "7 36,82 158,15 21,57 180,177 134,170 45,21 169,151", " 9,56 139,6 170,88 73,88 121,137 138,178 196,90 11", "8,62 88,70 142,141 171,82 200,25 170,79 151,74 165", ",166 65,28 180,174 104,34 91,147 148,87 166,42 101"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 629028903;
    if(result == expected) {
        cout << "Test Case 185: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 185: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test186() {
    int n = 200;
    vector<string> edges = {"114 92,78 132,174 60,1 54,66 150,82 14,1 139,71 92", ",1 97,147 70,103 1,20 57,145 104,84 98,59 84,27 39", ",87 120,123 71,141 188,14 151,90 195,39 188,87 111", ",67 160,109 90,183 72,77 182,183 113,174 41,87 147", ",19 102,128 93,14 61,90 20,24 173,28 14,78 90,87 1", "79,114 94,196 24,150 67,126 128,106 87,67 31,63 85", ",20 117,24 62,147 79,114 186,44 106,158 58,134 67,", "73 114,177 121,24 50,87 77,66 101,75 187,192 149,1", "24 24,47 52,14 121,37 170,95 194,20 169,112 77,14 ", "190,157 161,24 21,103 110,163 90,138 84,92 123,3 3", "8,144 180,146 33,194 147,84 114,26 24,97 34,178 84", ",11 133,137 3,179 46,120 164,156 189,14 175,75 193", ",40 14,67 119,1 146,114 128,53 140,72 171,81 22,49", " 1,87 165,141 137,186 9,136 80,84 122,23 165,69 17", "5,8 14,73 148,115 130,14 156,14 17,20 19,161 147,1", "74 147,167 157,130 72,162 20,197 14,37 99,147 193,", "64 115,1 142,15 114,96 194,6 142,192 24,14 200,2 7", "3,15 105,114 116,101 150,65 1,90 153,148 2,84 131,", "114 127,18 20,90 154,74 67,76 20,1 90,38 171,45 67", ",99 170,90 81,186 4,187 193,152 20,136 90,129 147,", "1 24,20 87,83 199,5 160,159 1,3 185,140 24,118 94,", "161 29,166 15,87 68,133 32,48 24,56 181,55 67,14 6", "3,173 171,67 14,107 67,41 60,90 108,20 99,51 88,10", "4 84,100 13,20 58,76 56,114 14,72 125,20 91,7 67,8", "4 100,91 51,154 135,42 45,67 147,36 152,84 184,16 ", "130,172 89,181 76,84 133,24 43,89 87,161 167,27 64", ",12 114,52 20,84 173,198 147,25 179,24 143,114 191", ",144 87,83 1,10 49,84 168,90 176,91 88,86 165,95 9", "6,155 90,30 24,94 35"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 909830046;
    if(result == expected) {
        cout << "Test Case 186: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 186: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test187() {
    int n = 200;
    vector<string> edges = {"57 120,88 175,193 58,48 59,66 55,78 137,88 174,56 ", "88,79 152,142 66,81 83,2 65,96 92,84 63,166 52,109", " 112,125 158,88 10,139 45,88 27,87 198,95 199,125 ", "4,88 2,193 57,125 45,118 125,124 179,125 52,169 20", ",96 119,157 45,7 111,177 125,187 181,88 23,49 181,", "55 125,10 39,9 141,88 149,125 198,7 86,58 42,88 18", "8,31 175,88 47,74 125,5 160,182 50,113 103,150 194", ",27 13,193 163,99 27,60 171,86 111,96 88,131 129,4", "9 25,75 150,26 182,167 133,80 8,193 43,116 142,37 ", "101,89 85,102 122,99 13,193 103,49 194,115 125,125", " 108,69 193,62 125,88 89,77 125,61 88,33 88,126 43", ",37 181,114 125,132 88,1 28,48 98,125 112,50 193,1", "25 148,74 121,125 195,36 112,88 104,88 53,88 78,88", " 14,186 88,169 184,184 147,12 88,50 26,69 97,76 2,", "194 61,192 156,9 88,130 194,199 107,200 125,146 22", ",17 29,193 59,151 193,191 67,98 59,156 180,193 125", ",144 32,88 169,16 130,10 172,133 176,62 94,102 162", ",159 74,44 183,193 88,161 181,3 119,47 8,193 44,11", "3 106,154 93,173 37,25 24,125 79,91 16,46 181,68 1", "7,88 164,134 181,138 128,145 125,12 72,23 90,123 1", "9,54 88,21 177,132 136,179 130,170 118,87 38,14 82", ",63 188,168 49,194 144,88 140,125 83,125 197,196 4", "9,165 125,34 37,51 132,88 131,40 195,125 67,88 123", ",35 198,29 68,92 3,71 175,200 127,70 100,37 41,107", " 95,162 122,103 106,196 190,38 35,128 125,157 139,", "70 115,80 47,115 100,125 160,171 151,125 155,102 1", "25,110 6,138 11,151 60,135 37,156 88,29 88,88 30,3", "1 71,37 130,189 53,153 77,117 30,185 154,73 158,61", " 125,125 28,64 181,110 193,147 20,125 111,88 154,1", "43 177,128 11,105 168,149 15,193 199,125 133,116 5", "5,130 146,188 84,178 163,79 18"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 764941950;
    if(result == expected) {
        cout << "Test Case 187: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 187: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test188() {
    int n = 200;
    vector<string> edges = {"98 16,199 171,99 146,118 102,75 104,34 129,101 16,", "136 170,127 16,7 20,105 163,15 10,59 117,66 25,72 ", "75,139 50,142 184,95 29,153 112,194 33,13 113,86 1", "76,27 129,158 179,191 66,89 18,16 36,136 193,107 1", "86,21 102,108 30,67 140,75 155,46 47,165 104,11 33", ",56 155,166 2,178 134,66 84,72 175,14 155,16 89,32", " 131,70 16,115 75,185 135,153 39,24 33,66 150,125 ", "150,92 4,111 156,59 145,87 31,199 193,102 107,33 1", ",166 75,40 5,33 143,80 137,167 125,73 102,79 27,29", " 181,189 33,28 71,149 156,45 38,33 45,17 33,67 77,", "197 24,90 153,31 73,55 137,64 88,183 78,129 65,21 ", "6,101 168,62 73,8 3,160 195,66 116,180 45,188 11,9", "1 135,54 35,100 33,62 87,132 190,104 22,16 151,176", " 99,66 75,99 12,26 159,74 164,85 33,143 147,169 14", "6,102 193,159 25,180 38,153 187,118 91,128 37,16 6", "9,157 66,121 134,66 92,15 75,153 7,126 43,193 192,", "66 41,193 97,193 50,132 186,60 182,95 181,47 88,28", " 137,194 106,111 198,33 196,64 47,12 61,66 16,153 ", "16,134 34,153 173,29 75,195 6,53 179,115 122,109 2", "9,34 2,149 8,138 33,48 93,16 144,193 182,85 103,66", " 152,153 33,97 141,183 19,44 138,153 13,58 67,185 ", "118,123 153,160 21,114 110,66 162,43 193,104 49,12", "4 153,16 67,119 72,153 42,175 119,120 65,80 55,17 ", "63,33 102,9 192,48 193,165 22,76 16,66 130,83 15,1", "93 74,52 133,5 57,158 81,71 35,114 187,153 172,190", " 107,53 81,78 19,156 169,111 12,66 105,96 186,193 ", "128,26 25,91 94,200 163,184 153,81 102,16 133,187 ", "110,117 153,65 71,16 23,193 166,105 200,82 10,193 ", "30,41 68,5 16,153 161,66 88,146 183,33 131,167 150", ",117 145,177 72,174 6,121 178,115 154,28 2,196 148", ",15 82,3 149,51 198,169 166"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 176727439;
    if(result == expected) {
        cout << "Test Case 188: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 188: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test189() {
    int n = 200;
    vector<string> edges = {"148 183,55 114,68 67,140 98,107 175,62 48,122 141,", "163 114,18 54,123 8,110 32,88 49,181 39,123 97,24 ", "34,114 33,162 57,128 143,176 153,15 29,6 144,143 1", "99,29 174,30 42,176 129,133 58,24 36,200 38,105 13", "8,138 107,108 171,73 160,60 87,18 1,9 176,194 63,1", "09 49,119 142,75 74,48 50,147 79,91 143,75 100,52 ", "34,114 156,7 6,46 138,60 101,112 138,19 194,28 18,", "111 83,121 123,98 48,14 53,11 22,132 87,78 83,130 ", "114,162 53,27 48,24 49,118 123,52 71,114 5,104 145", ",139 157,173 40,87 157,18 198,150 157,195 186,86 1", "25,18 138,86 138,143 188,143 85,167 29,62 92,90 13", "8,29 79,29 177,2 18,57 16,61 158,180 11,76 148,62 ", "35,29 45,43 123,4 37,18 99,123 191,190 172,160 53,", "111 124,35 92,117 123,190 157,76 63,133 190,145 17", "6,113 136,179 18,116 123,61 123,195 63,48 123,138 ", "63,132 101,76 183,38 138,53 29,69 155,126 18,138 1", "02,3 123,65 139,186 96,143 114,49 176,189 123,48 1", "57,9 164,192 114,49 169,120 156,64 83,10 49,59 53,", "66 7,141 18,137 143,103 176,119 18,64 124,4 48,149", " 143,80 106,29 136,17 138,115 152,100 74,42 165,13", " 123,123 131,72 29,127 123,182 143,187 29,41 21,18", "0 129,18 159,162 16,166 53,193 158,195 96,14 95,47", " 49,166 67,56 135,193 61,53 74,178 29,157 108,52 3", "6,115 53,30 165,82 114,172 58,18 173,18 143,51 153", ",138 168,166 68,26 59,194 184,72 110,114 197,124 4", "9,18 170,81 123,138 44,196 50,18 146,79 70,70 147,", "93 29,63 42,49 157,167 20,103 25,18 84,12 143,151 ", "102,39 138,53 114,123 77,155 114,150 89,94 29,63 4", "1,32 72,19 184,63 123,174 23,63 56,123 161,185 143", ",7 176,176 80,152 134,31 138,134 115,129 22,144 66", ",176 29,154 123"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 315197794;
    if(result == expected) {
        cout << "Test Case 189: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 189: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test190() {
    int n = 200;
    vector<string> edges = {"182 2,43 6,196 199,6 112,116 82,22 15,177 85,71 10", "5,38 16,61 105,11 72,30 176,141 14,159 27,129 123,", "75 29,12 27,27 26,48 192,193 109,130 147,93 156,55", " 24,142 162,86 173,30 67,25 96,134 39,1 94,182 45,", "102 27,117 180,127 27,74 113,105 107,181 3,109 144", ",123 173,113 49,193 144,114 165,105 182,8 162,148 ", "75,156 133,74 49,156 51,148 192,174 23,6 110,90 13", ",44 6,175 104,99 130,174 160,86 52,156 152,54 129,", "81 141,59 31,139 107,46 148,6 56,65 156,36 197,156", " 125,174 169,196 167,105 192,89 87,87 20,185 192,1", "23 128,111 107,95 27,63 20,27 156,158 156,174 108,", "24 189,101 105,27 194,126 73,174 200,105 42,40 62,", "174 6,148 39,192 19,94 107,175 46,6 190,57 156,59 ", "139,132 146,118 148,88 187,148 117,149 43,67 176,2", "7 148,196 96,105 78,15 192,6 172,7 106,121 38,186 ", "105,40 33,137 115,140 134,110 120,82 106,62 33,182", " 179,53 97,105 119,20 105,183 43,165 98,34 174,40 ", "107,46 104,163 27,191 105,105 88,3 21,196 188,1 66", ",50 183,58 135,111 90,20 89,143 199,54 100,185 47,", "43 37,79 24,195 118,150 174,36 174,54 131,155 56,5", "8 38,5 157,60 118,48 164,183 35,8 105,82 43,43 161", ",91 196,66 94,151 156,189 86,191 184,144 107,192 9", "8,166 6,98 114,92 6,43 85,124 8,181 21,83 27,35 50", ",192 137,14 81,8 142,148 3,43 173,174 69,103 192,1", "05 70,18 192,156 154,85 157,174 156,196 107,27 168", ",105 132,80 156,196 4,16 135,6 53,195 60,192 30,31", " 139,156 17,140 39,107 141,64 156,196 10,28 6,156 ", "171,153 105,11 178,148 74,41 156,27 76,55 86,123 1", "31,13 111,147 99,107 68,136 122,135 32,177 5,173 1", "35,145 196,9 6,169 138,156 84,179 45,99 107,178 72", ",116 7,198 43,156 170,126 196,196 173,148 11,105 1", "22,174 77"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 222589882;
    if(result == expected) {
        cout << "Test Case 190: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 190: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test191() {
    int n = 200;
    vector<string> edges = {"66 4,130 56,80 63,171 36,9 46,196 71,43 71,158 142", ",118 164,142 91,126 71,2 84,120 59,131 66,9 90,155", " 127,129 71,142 185,171 75,31 35,71 81,153 154,87 ", "20,185 89,128 66,19 52,33 11,84 93,59 77,179 171,1", "57 171,29 18,38 142,21 179,170 142,142 57,188 69,1", "09 71,117 71,10 171,112 1,106 167,5 119,72 142,193", " 182,66 87,155 111,40 142,47 94,24 66,188 177,111 ", "127,66 116,13 67,76 149,173 150,174 15,74 71,172 1", "71,97 142,191 36,122 186,75 197,181 88,51 121,163 ", "113,142 95,163 171,153 94,5 198,7 20,145 36,142 92", ",128 199,73 115,36 139,120 171,166 22,124 71,120 1", "35,124 137,66 36,142 34,30 36,140 71,25 157,129 18", "9,142 79,142 99,136 143,60 12,169 28,141 71,101 98", ",142 60,5 142,132 70,55 171,5 39,72 114,142 121,16", "8 85,14 175,71 144,128 42,108 23,5 71,142 171,184 ", "71,112 142,110 5,71 166,36 151,147 75,53 197,56 66", ",142 200,142 101,74 125,161 133,13 142,61 162,115 ", "104,71 49,107 50,58 142,71 133,32 171,44 5,102 73,", "93 2,55 193,173 71,69 177,4 28,84 171,45 183,5 35,", "53 147,66 70,24 48,6 81,41 132,76 131,142 195,116 ", "82,171 14,167 5,71 52,71 37,187 36,49 160,29 105,2", "3 71,171 155,62 25,66 47,69 66,71 152,71 156,27 40", ",103 36,83 17,77 135,157 178,66 122,82 168,71 50,1", "92 38,116 85,146 172,32 136,71 88,62 178,142 45,19", "0 71,142 86,36 134,41 70,18 10,46 90,138 176,66 33", ",171 9,16 142,5 96,159 36,78 142,66 104,36 176,3 7", "1,104 102,131 8,54 36,36 165,7 87,174 71,118 142,1", "99 42,143 32,198 26,194 71,142 83,71 66,71 80,162 ", "142,180 57,65 144,123 92,154 47,39 68,182 55,71 64", ",149 8,169 4,142 100,5 148,105 10"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 21384793;
    if(result == expected) {
        cout << "Test Case 191: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 191: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test192() {
    int n = 200;
    vector<string> edges = {"160 65,188 143,134 174,116 161,89 4,25 89,29 130,6", "3 1,89 199,20 89,138 166,89 164,63 143,24 96,167 1", "89,54 189,83 145,138 31,73 25,123 138,175 89,152 6", "3,121 85,7 63,146 172,129 170,138 89,108 138,185 1", "38,100 65,181 194,68 89,60 91,74 130,174 79,138 24", ",64 178,190 196,3 104,48 138,101 140,106 99,124 10", "3,173 138,63 118,184 5,111 89,32 28,53 63,141 187,", "138 38,117 96,63 69,21 63,94 138,43 66,9 138,187 1", "38,158 170,131 51,75 162,73 70,32 13,194 170,139 1", "47,144 89,172 187,26 41,84 44,63 97,55 8,57 138,89", " 81,89 126,184 122,76 195,183 10,104 110,166 49,19", "7 155,153 42,62 15,136 120,88 178,71 89,16 83,173 ", "27,168 149,138 37,46 43,31 107,14 138,94 120,138 1", "53,171 191,63 41,121 12,168 138,63 101,169 19,6 11", "5,145 119,13 186,89 67,177 22,120 125,98 118,89 11", "2,67 162,15 138,24 117,131 8,63 156,88 64,167 54,1", "00 173,159 63,18 109,47 89,63 16,63 61,106 138,138", " 171,40 68,58 92,89 195,78 63,63 109,134 56,51 55,", "93 63,30 89,17 159,138 77,42 151,45 142,89 200,63 ", "130,161 59,19 63,2 102,23 103,22 40,132 89,113 15,", "183 140,110 48,138 131,144 35,36 9,33 89,70 25,91 ", "138,150 193,86 192,4 165,3 110,180 2,63 189,52 80,", "148 138,102 180,134 63,105 63,34 13,89 182,122 5,1", "86 28,89 127,89 11,90 138,46 138,181 63,155 63,192", " 63,154 107,137 89,63 102,199 133,89 63,74 29,138 ", "87,10 140,63 138,89 198,63 176,142 92,116 89,28 63", ",55 95,61 103,138 50,128 113,90 163,12 85,80 89,11", "9 83,190 138,82 21,151 153,135 157,63 45,72 122,13", "8 179,63 135,125 136,138 39,22 68,129 181,147 63,8", "9 5,121 87,154 31,56 79,138 115,138 193,84 138,58 ", "45,64 63,128 62,23 124,114 63,59 116,46 66,67 75,6", "5 27,146 141"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 273851077;
    if(result == expected) {
        cout << "Test Case 192: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 192: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test193() {
    int n = 200;
    vector<string> edges = {"174 106,6 81,149 109,80 22,16 93,70 156,163 125,22", " 135,82 110,82 179,196 47,28 165,37 95,113 112,153", " 119,23 28,83 82,53 82,10 21,200 182,101 173,148 8", "2,55 136,82 176,44 63,82 142,49 134,82 131,124 82,", "150 110,31 188,149 25,167 82,51 32,183 131,188 179", ",95 194,114 118,50 82,140 75,157 84,191 115,37 194", ",122 58,82 4,17 82,117 87,90 70,195 54,121 58,15 1", "78,82 64,82 21,3 158,157 82,14 151,166 99,104 167,", "93 173,82 38,152 38,67 28,114 133,182 164,60 107,8", "2 106,161 82,57 155,41 145,129 171,96 71,144 44,38", " 9,137 145,103 115,127 42,6 102,111 82,69 182,8 62", ",53 168,13 171,130 28,51 158,12 6,181 167,1 84,98 ", "48,88 4,200 164,40 78,141 20,119 82,82 170,187 105", ",68 82,192 65,10 162,82 115,73 82,161 77,28 82,60 ", "120,82 184,195 151,72 74,103 59,66 96,127 142,82 7", "2,117 82,139 17,172 138,147 12,82 118,109 143,156 ", "50,1 157,79 160,82 140,20 43,110 65,100 90,148 19,", "101 146,152 9,112 60,134 33,190 52,24 82,100 50,82", " 171,82 2,179 128,16 146,24 78,14 54,43 141,65 190", ",22 153,35 138,61 73,6 91,30 64,86 82,120 113,27 3", "9,180 148,138 46,82 199,172 35,199 85,82 98,137 41", ",82 58,45 97,42 79,198 170,82 25,82 136,141 82,82 ", "138,39 21,17 45,94 154,116 99,143 25,59 115,182 92", ",134 159,6 147,47 82,145 82,67 165,185 77,166 82,8", "2 182,82 113,24 40,82 5,132 184,108 2,110 52,7 138", ",18 117,82 134,85 44,139 97,76 193,82 8,36 88,95 8", "2,6 82,11 124,89 31,142 160,144 199,86 178,119 80,", "64 56,15 86,115 189,94 82,82 32,163 30,182 126,186", " 28,159 33,36 4,101 82,131 169,187 82,71 57,82 71,", "161 185,27 10,82 54,197 134,155 66,76 8,136 29,34 ", "98,21 123,89 128,166 116,175 73,193 62,177 158,133", " 118,109 26,32 3,163 56"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 892890055;
    if(result == expected) {
        cout << "Test Case 193: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 193: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test194() {
    int n = 200;
    vector<string> edges = {"24 83,24 175,83 12,6 101,51 47,114 177,13 171,20 3", "5,124 99,5 4,47 148,24 122,32 6,189 141,24 138,198", " 124,122 162,24 118,200 171,110 22,172 113,6 88,16", "0 52,170 88,189 114,123 83,141 43,190 50,83 116,16", "3 113,112 19,6 179,1 6,120 171,185 117,174 6,76 35", ",133 113,98 51,29 145,198 125,15 47,143 10,113 122", ",18 198,7 192,140 47,88 153,190 188,75 171,160 5,1", "24 40,62 99,93 143,190 65,191 89,143 78,11 143,113", " 186,24 37,107 143,149 44,139 6,192 6,79 171,137 3", "5,53 171,151 51,199 128,128 141,143 171,81 151,111", " 51,155 191,51 41,97 29,192 34,113 171,86 60,24 15", "8,24 30,83 27,190 100,83 190,166 35,87 122,125 18,", "122 147,191 46,39 122,165 83,72 58,143 3,115 6,182", " 152,24 132,74 6,90 171,160 45,161 6,35 141,190 19", "4,92 83,129 113,83 77,122 25,122 59,192 164,110 88", ",82 47,17 91,36 6,191 67,37 167,191 72,191 105,33 ", "60,35 8,197 47,94 143,171 31,84 130,136 24,160 38,", "191 178,160 49,185 124,192 119,169 128,184 47,85 2", "9,143 183,88 61,190 47,83 157,51 146,63 51,190 21,", "9 117,190 134,131 141,60 29,121 47,83 66,55 19,160", " 156,143 141,83 56,17 160,6 187,24 195,83 95,196 1", "43,151 40,124 112,113 14,169 199,149 35,191 29,171", " 28,192 16,154 122,33 86,43 193,9 185,160 29,104 1", "92,142 151,109 47,191 84,99 150,102 35,171 68,106 ", "83,191 40,152 141,83 26,35 180,88 35,177 189,160 1", "92,113 103,35 144,192 80,143 57,192 64,51 71,181 1", "22,168 6,96 29,23 113,62 150,171 173,158 42,135 15", "1,151 54,160 2,112 55,159 88,127 88,191 176,69 191", ",190 48,191 108,73 143,49 126,51 70"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 420224084;
    if(result == expected) {
        cout << "Test Case 194: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 194: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test195() {
    int n = 200;
    vector<string> edges = {"92 51,89 73,199 38,197 33,77 186,38 89,197 116,120", " 38,55 72,84 138,92 153,197 63,114 38,169 175,171 ", "38,18 89,197 14,38 163,197 86,177 131,129 85,25 13", "3,58 1,132 89,130 194,106 133,2 95,197 102,197 155", ",38 16,21 177,48 89,89 15,35 197,197 88,5 161,197 ", "149,155 50,192 181,16 96,147 37,75 197,176 29,19 3", "0,38 125,195 26,55 107,173 47,83 197,137 18,197 8,", "179 38,197 174,46 42,32 168,175 185,128 89,79 175,", "94 3,89 176,17 196,17 50,70 126,174 105,53 134,58 ", "167,178 200,177 13,89 69,89 170,38 166,107 72,154 ", "89,126 120,168 89,22 89,197 180,115 197,155 17,110", " 154,197 113,89 200,38 151,89 145,89 192,38 68,193", " 49,183 89,57 70,197 56,124 18,144 108,46 122,38 1", "30,197 165,89 99,79 197,197 46,91 89,197 81,89 10,", "59 89,113 82,38 191,89 84,98 125,187 38,71 41,89 9", "0,150 197,164 158,89 153,37 38,197 129,146 197,173", " 153,197 9,135 89,38 76,27 160,89 112,76 101,45 63", ",44 7,38 40,94 75,197 31,38 19,172 189,145 4,97 89", ",38 5,104 197,162 197,52 89,54 18,70 120,152 197,1", "22 42,197 20,117 139,75 3,89 1,38 64,21 131,89 139", ",106 95,62 39,74 67,197 184,79 169,197 77,66 21,19", "7 38,188 169,193 89,55 89,58 87,136 38,197 89,103 ", "89,103 6,11 89,23 80,95 133,23 38,197 62,89 60,12 ", "132,131 197,71 197,78 24,93 197,143 197,38 123,173", " 92,89 106,89 157,134 197,137 54,141 111,89 43,197", " 160,197 109,65 38,38 190,167 148,89 198,89 100,28", " 50,164 89,197 74,118 56,38 144,156 89,1 167,127 7", "5,159 197,142 89,182 89,126 121,83 119,189 38,140 ", "88,197 7,61 146,38 141,197 34,89 195,36 183,24 89"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 991749098;
    if(result == expected) {
        cout << "Test Case 195: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 195: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test196() {
    int n = 200;
    vector<string> edges = {"194 165,109 134,91 186,110 167,110 51,33 169,29 37", ",179 110,154 145,84 91,64 155,98 110,131 186,150 6", "4,188 43,70 64,153 64,14 33,188 79,10 87,51 108,12", "7 173,110 83,13 24,64 110,1 110,147 119,155 129,3 ", "11,28 155,123 81,121 191,110 170,155 101,110 171,1", "61 111,139 135,110 128,59 93,149 7,87 110,186 119,", "64 157,40 110,64 102,152 155,64 62,193 97,137 110,", "110 100,106 155,155 15,55 71,155 116,119 103,92 15", "5,156 186,69 158,41 13,110 50,142 131,155 107,79 8", "8,194 110,164 140,114 110,56 85,186 37,106 139,185", " 138,162 27,110 97,180 179,143 155,196 167,11 155,", "19 110,186 111,155 22,5 63,159 64,154 172,17 64,64", " 118,74 93,105 191,110 186,64 175,138 174,123 110,", "141 186,192 31,64 177,168 3,134 110,171 39,67 146,", "45 120,18 186,57 155,68 21,64 34,136 155,18 163,11", "0 133,12 49,155 146,73 155,149 155,36 64,155 144,1", "10 85,195 64,110 166,13 155,32 110,65 155,105 186,", "110 188,96 91,58 54,155 189,8 155,126 155,110 176,", "35 111,73 200,130 44,9 32,190 110,42 199,110 63,13", "1 23,110 138,64 38,76 80,197 64,127 114,113 64,124", " 155,78 186,64 86,104 64,122 112,181 64,162 110,14", "3 99,122 155,53 155,188 88,37 66,198 50,169 14,117", " 64,64 89,186 155,110 49,155 192,189 48,155 21,64 ", "77,155 154,21 120,132 64,46 64,152 25,115 136,44 1", "10,144 20,197 75,105 121,52 110,64 61,169 186,151 ", "2,199 110,18 59,160 187,90 64,155 187,29 69,123 95", ",110 2,64 184,155 94,26 126,155 4,30 39,155 58,78 ", "16,72 64,21 45,183 155,178 64,23 142,82 183,155 16", "4,125 155,155 47,60 116,163 74,55 110,158 66,110 7", "6,6 101,169 182,129 148"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 123806746;
    if(result == expected) {
        cout << "Test Case 196: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 196: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test197() {
    int n = 200;
    vector<string> edges = {"76 29,112 177,102 144,104 122,31 147,131 142,114 1", "47,74 144,164 42,170 186,165 164,144 186,159 177,1", "94 7,11 68,168 164,25 121,174 63,144 45,171 31,129", " 24,197 131,138 35,131 13,144 57,164 62,165 28,63 ", "56,109 169,186 181,49 63,196 147,79 115,70 63,165 ", "16,30 147,195 164,63 166,198 63,46 63,2 138,27 119", ",186 92,131 3,40 131,144 69,125 165,131 19,28 39,1", "1 152,77 114,63 160,147 61,20 165,144 55,115 110,1", "65 82,63 95,144 140,53 9,186 34,143 165,124 66,18 ", "106,146 10,178 131,164 21,129 186,8 131,53 34,147 ", "68,120 92,144 113,58 164,43 131,131 133,132 144,36", " 25,165 50,165 80,94 99,131 4,173 165,156 175,108 ", "131,131 90,73 153,144 93,131 116,147 194,186 191,1", "44 32,65 63,182 34,29 81,144 199,165 200,172 144,1", "26 144,144 184,84 131,148 58,147 36,9 163,117 86,1", "87 14,144 161,60 131,63 157,100 99,52 63,164 63,13", "5 144,149 165,76 147,131 48,98 164,41 183,104 29,1", "92 144,118 165,100 38,63 139,6 144,165 23,131 176,", "144 130,112 159,79 14,147 12,181 151,144 103,121 3", "6,22 186,168 91,141 18,63 67,136 165,186 76,63 96,", "156 18,145 63,131 37,144 71,164 179,63 88,131 26,1", "47 35,131 147,63 86,2 35,163 34,190 165,66 186,89 ", "63,165 51,144 165,150 164,147 167,186 27,196 59,15", "4 164,63 101,16 123,75 165,144 47,169 97,165 146,6", "3 158,89 44,137 186,115 187,186 109,134 94,63 111,", "165 5,175 141,147 115,165 189,63 185,41 85,147 18,", "122 81,131 162,147 72,85 183,152 68,87 144,78 165,", "15 164,73 63,198 188,54 131,180 165,143 155,94 38,", "94 186,193 165,105 33,159 186,131 128,109 97,165 8", "3,63 131,1 144,33 147,131 127,17 42,186 107,186 18", "3,64 131"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 1705956;
    if(result == expected) {
        cout << "Test Case 197: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 197: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test198() {
    int n = 200;
    vector<string> edges = {"34 65,69 102,9 62,37 115,13 152,21 179,78 165,6 46", ",54 86,13 143,190 21,190 2,195 163,149 165,38 122,", "42 80,107 197,178 24,186 165,190 86,165 135,8 82,4", "3 189,175 103,47 116,99 52,58 184,138 143,174 190,", "42 190,132 141,169 14,190 120,24 95,191 126,15 165", ",165 68,113 98,190 136,109 87,175 37,75 15,196 35,", "116 77,90 111,19 120,124 175,188 1,29 111,111 192,", "82 194,34 180,8 88,109 8,13 128,109 99,14 113,40 1", "43,190 187,161 35,24 84,172 173,119 8,175 129,118 ", "142,122 187,97 58,50 171,153 111,74 22,3 13,131 11", "3,155 51,165 114,32 113,100 149,111 121,24 34,155 ", "4,164 98,10 187,173 165,84 140,20 93,165 33,151 14", "3,44 39,45 24,199 175,35 175,101 8,146 198,197 30,", "74 175,114 167,190 133,166 143,30 130,23 150,31 8,", "131 59,106 94,131 117,55 142,165 35,156 119,57 13,", "189 165,24 173,139 13,200 122,111 63,55 141,10 107", ",175 127,145 132,24 73,146 147,148 72,76 8,147 198", ",184 97,34 77,82 193,50 173,65 170,13 41,27 161,11", "1 5,109 13,77 181,166 110,144 11,122 146,79 13,171", " 105,61 88,183 199,87 16,23 196,89 34,111 143,176 ", "122,77 18,24 154,111 64,111 159,177 36,191 16,162 ", "32,108 157,11 109,117 59,196 150,25 105,174 8,127 ", "102,122 134,77 56,85 34,62 158,25 195,66 111,122 1", "04,13 137,118 145,77 122,83 111,60 51,13 28,77 123", ",48 77,8 49,10 7,122 148,36 122,160 136,91 175,96 ", "111,70 190,13 67,193 194,12 13,175 113,165 39,109 ", "46,185 85,174 184,123 182,154 168,9 158,69 127,130", " 7,190 17,24 158,20 24,172 60,111 113,4 71,8 188,8", "7 191,134 81,53 48,13 92,112 34,187 118,157 174,50", " 163,190 26,125 117,172 71,34 106"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 660652165;
    if(result == expected) {
        cout << "Test Case 198: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 198: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test199() {
    int n = 200;
    vector<string> edges = {"80 15,186 9,44 179,18 105,193 174,22 157,179 131,2", " 188,97 169,139 105,160 182,180 146,71 63,169 89,1", "12 86,100 146,182 137,197 196,174 198,96 177,48 15", ",12 171,81 48,122 178,84 105,131 113,131 169,182 1", "25,137 98,109 121,48 157,124 170,200 169,77 41,169", " 37,110 172,61 182,7 134,161 14,72 131,58 131,121 ", "48,138 62,130 44,69 186,151 147,150 12,133 99,176 ", "148,141 133,136 24,136 182,61 25,29 135,108 125,42", " 193,151 167,68 150,181 113,125 70,182 66,182 14,2", "00 129,33 19,48 88,88 36,122 97,162 82,88 107,70 4", "1,100 180,179 132,54 145,111 187,30 35,169 9,173 1", "38,103 160,1 31,117 87,158 104,5 120,111 29,169 38", ",124 139,140 22,131 184,158 74,101 125,87 133,45 1", "60,69 6,30 93,20 48,174 12,12 187,97 178,168 127,5", "2 14,58 32,48 146,81 127,182 114,81 152,194 110,60", " 114,131 2,159 128,147 73,131 57,49 86,73 12,55 72", ",74 104,164 85,143 27,157 140,108 194,190 77,16 18", "9,169 48,71 200,115 10,108 126,15 149,78 166,82 14", "4,95 121,61 153,182 155,183 166,149 80,56 189,171 ", "85,175 123,169 8,118 164,106 191,91 169,139 120,13", "4 83,156 165,197 12,76 89,172 194,191 131,23 101,2", "1 72,89 11,12 119,136 13,11 94,125 90,126 75,191 1", "44,175 17,12 17,95 109,12 53,59 182,8 192,67 182,4", "0 88,131 19,182 92,42 198,101 185,195 102,28 119,1", "32 130,159 28,90 1,142 12,117 141,6 9,169 4,7 142,", "54 20,20 145,131 50,169 158,167 147,64 169,177 182", ",154 157,65 126,84 18,90 79,143 108,182 131,118 85", ",81 168,93 139,63 129,49 4,123 199,35 93,31 79,112", " 4,78 183,176 12,165 8,125 12,47 39,183 48,83 7,94", " 76,139 125,121 3,12 195,48 115,108 47,75 65,138 4", "8,46 114,192 156,191 162,48 12,70 190,43 10,26 55,", "34 23,199 175,107 36,66 51,163 67,43 115,34 185,18", "7 135,131 133,116 137,26 21,16 56,189 53,62 173,11", "9 128"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 848967706;
    if(result == expected) {
        cout << "Test Case 199: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 199: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test200() {
    int n = 200;
    vector<string> edges = {"66 170,194 125,118 78,120 55,111 97,66 94,31 79,19", "7 9,115 200,57 64,64 66,12 152,85 2,78 123,159 138", ",131 54,64 15,170 78,79 78,29 119,68 143,26 147,12", "7 5,17 106,199 108,42 154,76 191,155 141,65 46,29 ", "78,85 12,21 19,81 52,60 78,40 10,83 67,135 85,64 1", "57,90 189,92 65,23 75,88 85,94 77,199 82,140 14,17", "7 79,59 91,162 39,118 187,58 108,163 128,102 64,60", " 93,121 29,161 61,173 82,104 133,192 161,177 31,6 ", "199,121 119,139 21,169 81,44 123,4 156,48 183,112 ", "66,153 36,158 65,35 195,48 147,13 95,67 195,39 150", ",132 131,66 80,199 179,78 62,65 39,96 101,155 149,", "122 148,62 76,65 64,8 64,190 199,27 113,190 97,43 ", "179,132 78,45 99,62 84,54 132,64 86,130 196,16 94,", "26 7,75 72,60 24,166 94,43 42,1 65,13 199,82 53,18", "8 78,25 179,98 169,156 33,51 78,161 199,94 68,30 3", "4,184 182,93 100,103 85,148 114,65 49,5 165,163 20", "0,94 167,105 63,196 24,198 187,20 106,85 107,7 140", ",178 65,72 4,39 12,96 78,184 12,138 51,87 45,141 1", "49,66 197,37 133,188 110,71 33,198 118,113 190,125", " 78,194 142,100 56,82 180,94 174,134 27,71 75,28 3", "2,185 39,176 90,72 199,199 106,117 32,70 3,6 117,6", "6 116,175 109,199 115,124 192,172 25,78 26,85 41,1", "14 122,164 129,95 129,144 17,195 199,78 199,58 109", ",169 52,181 64,199 169,189 199,47 59,120 10,123 18", "6,65 50,12 3,44 186,43 38,104 175,126 124,96 136,1", "8 11,176 171,192 151,130 56,78 11,139 84,144 20,73", " 126,66 160,73 61,183 14,40 136,164 13,111 134,19 ", "191,188 22,94 153,63 99,101 55,85 74,47 91,174 168", ",78 91,159 51,125 165,173 180,6 28,34 39,110 22,18", "9 171,146 158,199 170,142 137,154 172,39 141,78 11", "4,35 83,127 137,11 105,89 113,18 87,133 108,193 94", ",115 128,65 145,39 69,85 94"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 756254871;
    if(result == expected) {
        cout << "Test Case 200: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 200: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test201() {
    int n = 200;
    vector<string> edges = {"166 169,94 134,63 162,2 67,70 25,88 172,40 36,176 ", "10,136 125,133 44,33 84,89 129,133 148,98 177,97 1", "72,36 55,166 39,75 177,48 41,80 36,145 10,133 82,1", "31 155,131 143,138 148,119 114,36 93,188 84,35 142", ",51 80,31 148,147 36,87 28,133 60,191 133,176 134,", "46 121,43 194,129 64,133 170,149 68,178 65,35 131,", "151 184,159 28,36 131,164 53,28 30,15 14,144 160,3", "2 157,54 105,74 84,133 47,127 106,85 190,131 68,14", "0 69,28 188,88 141,112 20,150 171,16 165,196 45,12", "0 168,94 151,127 172,172 25,139 133,115 36,192 46,", "134 73,66 51,66 80,1 123,147 136,43 131,131 188,12", "3 86,131 77,133 107,57 148,71 28,152 148,100 48,12", "5 168,123 172,104 8,135 35,153 36,144 92,122 43,13", "4 81,108 175,72 97,67 116,147 20,174 115,4 104,52 ", "108,120 136,21 9,184 94,179 89,148 53,78 69,176 14", "5,42 77,28 23,95 36,172 54,121 24,76 129,53 117,41", " 134,200 185,162 22,156 14,175 36,143 90,88 38,13 ", "171,157 12,192 24,146 133,190 77,89 124,50 169,134", " 110,130 133,89 158,180 138,149 19,33 26,48 161,14", "8 75,20 116,134 58,172 147,181 90,18 32,148 134,49", " 28,7 198,75 98,165 155,91 57,52 175,133 163,103 1", "44,182 46,25 11,186 114,57 126,42 198,132 133,173 ", "74,155 16,12 18,183 127,123 118,144 172,196 194,10", "4 172,73 185,41 114,142 135,68 19,96 28,3 133,133 ", "56,109 54,97 27,122 45,128 133,196 101,17 129,111 ", "17,59 127,14 36,140 78,63 22,58 178,25 34,137 62,1", "54 74,50 197,186 161,134 21,193 168,148 137,67 112", ",87 189,88 79,167 104,133 29,13 150,9 5,78 131,21 ", "5,198 85,65 58,22 148,156 15,24 147,99 54,187 84,2", "8 195,97 102,74 113,134 13,143 181,134 172,83 134,", "169 28,133 199,133 28,17 74,133 61,37 157,133 6,73", " 200,18 147,166 50,33 89"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 79651610;
    if(result == expected) {
        cout << "Test Case 201: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 201: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test202() {
    int n = 200;
    vector<string> edges = {"97 56,146 186,125 50,123 137,186 37,126 114,90 14,", "55 62,24 139,28 106,92 85,146 190,167 48,59 36,101", " 187,166 186,103 66,62 108,93 194,94 189,59 197,13", " 126,73 93,42 132,17 133,113 184,57 168,120 186,59", " 186,96 122,52 102,125 159,137 195,25 172,87 172,8", "7 25,171 95,147 162,152 178,83 67,107 146,132 158,", "76 125,135 19,3 186,173 146,153 186,90 98,92 62,13", "2 152,105 159,158 24,44 55,188 81,14 17,163 165,12", " 103,123 55,120 26,145 199,91 158,74 193,25 8,23 1", "23,49 110,33 53,128 120,170 11,125 114,55 80,125 2", "7,54 4,10 149,167 131,10 45,88 187,106 161,158 6,1", "80 13,108 184,125 46,92 129,179 7,134 158,179 124,", "171 86,142 138,51 158,69 106,176 20,152 177,20 55,", "81 154,97 14,103 62,78 155,106 135,35 70,32 189,10", " 15,191 2,165 146,57 23,14 125,106 9,89 21,81 174,", "150 125,60 106,156 106,16 3,71 116,170 61,64 106,1", "14 135,10 1,73 194,103 160,43 81,147 157,168 23,13", "8 62,109 120,67 115,162 157,66 2,21 31,175 153,51 ", "34,58 158,4 35,126 189,138 130,140 39,30 132,143 6", "7,112 154,65 163,36 197,106 75,44 119,132 198,135 ", "95,178 177,55 110,54 70,120 132,88 45,132 41,132 1", "57,143 135,18 14,174 82,103 25,146 29,158 74,145 1", "35,62 77,181 43,17 96,191 66,96 133,81 10,158 81,1", "3 189,148 134,40 125,14 33,70 10,100 68,6 185,22 1", "83,169 68,125 127,146 144,121 132,113 108,186 47,6", "3 80,167 62,126 124,111 79,22 55,101 45,120 11,100", " 169,14 123,73 146,164 106,19 72,65 165,146 106,81", " 182,84 106,95 151,10 103,120 38,78 132,188 136,12", "0 100,91 141,182 5,192 66,151 171,71 81,99 103,126", " 117,83 143,39 52,130 142,123 111,13 200,31 89,132", " 196,61 11,140 102,120 31,104 58,118 77,7 124,10 1", "02"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 271528729;
    if(result == expected) {
        cout << "Test Case 202: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 202: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test203() {
    int n = 200;
    vector<string> edges = {"199 140,43 132,128 90,168 11,63 119,164 105,154 77", ",144 186,191 28,192 33,53 105,125 187,113 63,78 11", "0,28 137,183 152,192 172,78 176,147 135,41 147,148", " 167,58 29,126 65,99 129,142 53,166 79,42 183,2 10", "5,116 172,33 13,171 142,138 91,96 102,19 181,113 4", "8,28 82,26 75,184 147,193 54,54 64,122 163,196 33,", "174 97,39 33,197 33,52 147,63 105,179 72,28 7,176 ", "103,195 110,114 154,50 135,49 140,129 111,25 148,7", "9 74,175 39,2 71,126 20,155 176,91 54,105 88,101 1", "47,37 105,120 126,128 170,10 47,117 105,138 193,83", " 181,185 12,16 171,44 85,143 3,155 56,28 177,72 18", "8,33 31,35 150,33 199,32 28,38 109,139 30,32 118,4", "2 1,78 106,97 4,158 13,9 70,192 116,87 156,76 33,3", "4 148,161 9,149 77,105 161,173 40,135 112,25 112,4", " 160,47 168,78 79,28 178,159 82,198 7,150 112,176 ", "107,108 143,19 33,183 25,61 135,189 73,133 105,93 ", "28,136 199,200 177,131 25,105 77,180 106,177 58,26", " 134,104 123,45 183,146 21,8 130,33 153,105 55,28 ", "186,165 36,11 105,94 33,167 34,130 38,26 33,19 157", ",28 33,100 135,197 44,33 194,3 79,66 33,189 2,105 ", "28,163 5,36 76,165 76,75 134,57 69,123 126,133 179", ",149 114,112 46,78 105,94 129,85 197,37 125,43 78,", "17 147,124 175,98 183,174 160,146 23,108 79,95 52,", "92 141,92 88,28 130,33 151,109 8,28 145,121 141,46", " 89,33 67,59 90,14 42,43 182,80 135,78 122,28 87,1", "19 48,78 31,162 84,157 181,29 200,78 126,23 43,140", " 136,81 147,169 70,104 20,147 96,78 57,188 133,107", " 56,176 190,24 187,31 25,71 73,11 10,86 27,137 127", ",122 5,42 147,88 121,124 39,135 22,162 112,16 53,6", " 25,40 112,128 28,169 161,105 4,93 62,12 33,54 78,", "94 99,105 15,196 68,112 27,115 54,37 24,43 21,18 1", "35,28 51,59 170,145 60,28 30"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 523939867;
    if(result == expected) {
        cout << "Test Case 203: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 203: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test204() {
    int n = 200;
    vector<string> edges = {"64 120,35 36,19 147,137 200,147 165,85 28,170 21,1", "4 32,20 138,8 111,156 146,97 24,116 137,37 161,132", " 54,183 93,39 63,79 29,173 25,4 14,126 134,170 27,", "132 96,195 91,136 25,20 11,84 167,12 23,128 31,80 ", "74,172 133,66 20,37 66,98 109,167 141,104 46,37 3,", "20 65,67 167,75 18,62 89,155 73,125 56,132 48,180 ", "103,64 124,44 157,110 118,64 168,37 76,67 84,9 39,", "178 14,83 108,170 35,52 107,183 124,197 26,171 94,", "111 149,44 123,154 29,190 183,142 105,50 101,4 178", ",13 74,64 8,41 7,88 147,64 71,98 73,184 155,130 61", ",127 132,38 47,198 172,131 52,102 147,179 85,139 1", "47,66 141,143 163,66 58,160 43,22 174,17 132,54 12", "8,182 127,33 20,199 141,72 194,169 194,50 141,44 1", "47,19 80,198 73,156 140,161 3,58 16,122 154,99 159", ",66 194,193 15,141 135,64 117,85 177,126 143,69 17", "0,106 132,154 141,145 57,45 44,124 132,145 98,129 ", "35,7 73,96 187,180 119,53 57,66 18,152 51,156 34,7", "3 77,132 131,188 175,148 156,70 75,130 104,191 64,", "2 183,73 125,46 132,110 127,48 116,189 175,17 162,", "109 57,8 149,124 83,93 49,82 39,47 117,64 68,158 1", "8,1 18,85 124,135 25,64 151,189 188,86 177,55 50,1", "44 169,170 113,152 92,9 196,138 11,156 124,182 110", ",64 95,185 35,31 54,94 99,103 175,153 150,91 115,1", "34 180,64 166,134 35,73 105,18 70,114 64,32 44,196", " 73,34 148,59 180,91 153,87 44,83 81,181 35,58 15,", "171 141,147 78,90 83,122 29,99 171,80 13,141 62,14", "1 97,46 130,19 172,170 40,164 52,132 6,23 132,49 1", "83,106 73,10 77,121 44,91 150,174 141,51 92,106 18", "0,91 124,82 196,55 101,135 136,141 197,108 5,64 15", "2,192 37,67 30,131 107,5 83,35 176,117 38,101 60,1", "03 170,163 126,64 66,144 194,48 137,58 193,198 141", ",86 85,58 100,194 186,172 112,172 32,43 132,42 128"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 47740486;
    if(result == expected) {
        cout << "Test Case 204: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 204: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test205() {
    int n = 200;
    vector<string> edges = {"39 137,89 154,188 16,2 148,35 164,160 146,106 149,", "200 4,81 173,140 110,73 27,72 31,147 101,73 54,123", " 128,39 178,80 109,79 55,174 181,58 59,116 82,188 ", "58,126 188,120 195,172 83,88 72,15 18,42 112,101 2", "4,165 109,197 23,143 75,128 200,163 170,146 52,72 ", "6,81 194,77 48,147 22,30 19,17 87,147 149,136 146,", "192 94,29 158,161 91,59 96,113 171,139 153,187 120", ",135 196,75 125,131 149,161 185,84 121,179 172,168", " 86,176 138,146 108,179 128,189 198,105 111,132 17", "6,14 90,125 143,41 146,142 88,133 26,87 144,106 10", "5,65 146,150 43,189 44,164 114,154 12,193 32,134 1", "15,171 37,34 77,63 169,176 189,91 128,20 146,181 1", "75,148 99,176 69,51 64,19 186,44 198,91 185,176 88", ",193 12,11 110,64 168,118 29,128 157,56 182,5 73,8", "8 192,56 107,11 140,133 176,21 102,34 93,146 120,2", " 99,23 157,188 180,62 177,43 152,76 190,121 55,10 ", "145,120 25,46 128,15 16,146 128,188 39,181 146,78 ", "153,145 88,170 112,180 70,128 167,79 40,163 112,32", " 102,63 37,38 24,176 188,162 33,106 162,176 150,15", "7 197,17 188,13 146,58 96,114 35,183 136,141 145,1", "16 71,146 151,88 112,8 124,9 176,67 103,60 188,124", " 199,10 177,88 34,88 64,199 68,98 159,71 82,178 13", "7,102 89,139 130,49 108,163 36,149 169,128 95,127 ", "128,66 109,114 188,128 88,45 103,134 192,3 128,158", " 200,67 142,107 182,150 152,121 149,1 76,30 186,14", "6 109,116 119,81 47,176 19,131 8,33 111,146 104,11", "5 94,22 38,102 128,17 144,16 18,45 142,188 149,159", " 60,88 78,53 181,86 64,156 6,74 117,128 110,188 14", "3,71 122,166 191,100 128,149 146,168 28,97 135,97 ", "196,71 88,81 146,7 180,139 78,117 200,48 93,146 85", ",84 40,83 179,78 155,90 146,146 50,60 98,133 57,26", " 57,113 169,176 107,176 148,188 1,191 126,70 7,146", " 73,176 184,68 131,177 145,31 156,118 74,196 188,6", "1 176,190 1,92 128,13 129,166 126"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 483750593;
    if(result == expected) {
        cout << "Test Case 205: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 205: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test206() {
    int n = 200;
    vector<string> edges = {"139 135,104 51,35 89,37 185,139 46,89 136,16 102,1", " 81,115 10,196 128,25 69,18 123,168 89,159 114,194", " 154,61 147,183 54,12 162,194 64,185 114,171 85,19", "0 161,100 190,144 127,190 148,106 135,35 42,162 13", "5,135 187,117 197,77 102,183 88,33 115,185 141,161", " 116,140 38,83 104,82 55,76 194,89 188,162 58,2 12", "3,48 183,94 22,19 29,173 22,183 160,78 90,96 160,1", "83 118,103 79,22 25,153 108,190 39,93 53,44 4,15 1", "34,79 129,38 138,177 25,15 89,123 79,86 89,75 146,", "9 114,60 161,27 111,185 151,22 75,134 40,22 171,13", "5 5,25 101,35 55,73 68,112 12,185 200,108 185,167 ", "183,159 9,179 190,161 110,20 79,44 109,80 194,13 1", "39,35 21,126 46,138 93,135 35,183 26,169 79,189 16", "4,93 115,195 25,62 132,183 22,174 177,127 150,87 1", "68,75 45,198 35,23 194,121 4,192 162,133 93,161 18", "1,92 133,138 59,8 183,111 162,79 17,93 194,15 199,", "65 199,79 99,152 97,111 79,61 89,115 105,86 91,120", " 25,190 137,71 24,15 47,117 56,25 79,122 193,35 17", "0,15 57,44 106,21 66,50 183,161 41,56 81,115 176,3", "2 183,14 111,194 30,172 57,163 25,182 183,57 77,25", " 119,175 192,34 190,183 157,72 161,43 130,18 2,183", " 166,125 34,131 83,161 143,63 190,15 78,75 74,113 ", "39,177 97,15 194,19 89,184 153,193 31,194 98,6 135", ",154 95,158 183,183 124,71 22,193 28,191 14,15 81,", "190 183,184 108,67 190,35 70,144 150,107 58,74 146", ",180 135,155 186,47 142,165 183,51 131,162 196,7 1", "61,1 197,73 17,126 13,11 53,43 161,172 16,115 185,", "111 189,156 35,59 140,162 132,185 161,186 162,28 1", "22,111 149,52 194,144 93,3 185,68 17,36 137,152 17", "4,104 93,193 89,178 145,156 84,4 106,15 178,49 79"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 360393619;
    if(result == expected) {
        cout << "Test Case 206: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 206: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test207() {
    int n = 200;
    vector<string> edges = {"138 165,185 156,166 52,191 113,127 65,130 58,191 1", "3,106 19,142 32,65 35,112 58,69 7,21 168,50 83,108", " 1,194 15,45 36,111 33,161 141,198 140,18 75,166 1", "38,59 156,177 170,187 173,126 75,188 59,75 35,65 2", "3,102 1,135 10,156 50,183 171,86 104,116 52,23 199", ",104 58,96 34,40 185,47 63,94 197,26 139,64 87,103", " 3,129 156,43 57,13 113,27 65,151 193,68 65,189 15", "8,184 45,48 156,137 167,72 160,165 109,131 189,136", " 76,158 178,43 156,98 190,44 48,14 80,65 161,39 14", ",157 183,68 70,26 129,57 175,16 153,131 178,100 13", "8,118 71,144 69,35 103,2 5,149 143,132 5,79 54,126", " 53,121 58,169 40,30 119,195 156,7 138,35 58,81 58", ",41 121,138 179,133 114,43 84,56 48,25 89,178 58,2", "2 43,122 73,152 144,57 101,119 9,114 77,74 200,82 ", "65,56 44,71 35,137 159,81 157,103 37,138 194,65 32", ",118 182,28 73,163 79,60 65,112 78,117 98,118 99,1", "16 166,67 109,180 138,21 65,186 100,179 124,162 1,", "147 43,65 138,12 104,173 43,169 185,36 184,191 65,", "145 6,192 172,89 174,160 35,85 195,156 95,159 125,", "9 153,31 50,155 37,91 149,61 35,134 38,91 143,73 6", "1,196 138,162 102,66 164,92 43,147 30,97 196,91 35", ",65 42,35 110,173 120,90 34,84 51,87 138,61 28,58 ", "79,42 107,76 92,90 96,3 37,105 110,71 182,156 47,1", "23 82,29 72,145 138,35 172,150 49,25 35,41 134,35 ", "98,159 58,117 190,58 14,160 29,43 58,92 136,177 15", "0,46 79,55 24,8 172,181 43,115 65,112 128,164 11,6", "2 104,167 159,150 138,180 17,65 45,156 34,138 140,", "94 65,138 135,19 22,16 147,138 24,193 138,148 95,5", "3 18,66 11,49 170,130 33,112 176,67 165,156 2,101 ", "93,38 121,74 65,88 14,4 195,77 133,43 1,92 146,192", " 8,132 2,152 7,156 138,139 129,133 138,25 174,93 5", "7,43 20,31 83,106 22,81 171,85 4,130 154,156 164,1", "30 111,187 120"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 719498785;
    if(result == expected) {
        cout << "Test Case 207: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 207: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test208() {
    int n = 200;
    vector<string> edges = {"192 28,98 109,172 138,135 32,157 8,94 65,134 172,8", "4 172,174 38,48 9,86 125,72 96,25 167,51 179,179 1", "0,178 179,99 53,109 108,168 93,57 103,70 184,122 1", "27,130 187,53 172,104 172,61 116,3 71,86 7,126 42,", "42 26,146 32,6 173,50 12,158 173,62 120,23 139,115", " 18,169 16,114 133,37 92,50 110,81 24,60 101,27 17", "0,117 137,87 152,52 40,174 71,85 47,109 197,115 17", "2,93 190,35 22,135 109,164 163,64 54,144 73,34 127", ",135 56,172 140,21 128,159 73,109 7,179 105,179 47", ",68 22,43 179,102 131,73 39,35 109,51 100,176 102,", "137 198,71 166,102 93,22 118,30 71,59 10,109 83,96", " 135,157 109,75 74,102 129,116 135,2 107,82 88,22 ", "89,32 19,172 37,21 180,109 64,71 127,181 155,106 1", "72,20 189,78 172,132 160,1 200,160 135,65 32,22 16", "9,43 6,174 177,67 123,13 148,57 43,193 22,24 43,21", " 32,36 39,63 135,109 46,85 182,22 192,97 57,80 47,", "71 195,187 135,124 22,158 6,127 102,45 102,81 165,", "199 112,142 119,7 125,43 172,126 26,150 19,147 67,", "109 70,43 73,135 75,123 147,172 22,106 148,111 19,", "191 120,113 126,193 14,183 22,24 149,179 44,22 5,4", " 95,22 163,98 171,175 124,179 161,24 165,101 109,1", "94 118,143 95,57 181,8 17,121 22,87 22,174 35,154 ", "24,109 69,141 183,32 133,33 127,196 40,135 143,142", " 63,138 15,189 156,20 172,31 178,172 167,17 157,18", "8 11,116 162,135 123,48 172,27 172,186 29,77 93,15", "1 109,55 93,49 127,143 4,66 56,93 174,84 136,112 1", "79,61 162,140 76,32 50,200 172,120 11,188 120,40 1", "79,179 32,36 73,6 58,145 146,43 120,90 179,32 126,", "41 22,63 119,196 185,22 29,109 198,153 78,107 91,1", "98 117,22 88,32 107,6 79,172 23,57 155"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 113357177;
    if(result == expected) {
        cout << "Test Case 208: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 208: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test209() {
    int n = 200;
    vector<string> edges = {"75 159,69 38,103 132,117 185,200 14,142 149,161 16", "4,2 8,25 157,84 113,48 193,80 81,155 90,173 125,15", " 111,176 149,106 185,173 153,143 60,50 145,31 145,", "74 70,44 165,125 44,189 76,128 66,19 197,183 104,3", "0 111,147 113,99 23,114 180,57 169,173 161,161 123", ",144 160,102 149,169 94,140 70,70 152,97 128,12 10", "6,2 55,79 119,50 86,14 183,188 18,194 107,52 135,9", "4 101,181 11,176 121,27 79,73 173,150 126,172 31,7", "1 100,39 60,79 44,71 124,127 131,161 177,2 65,2 96", ",171 149,143 39,193 118,63 2,78 53,142 112,100 10,", "110 198,7 36,128 59,113 185,158 61,104 70,70 78,17", "3 46,70 166,1 2,175 74,93 59,138 174,80 151,77 158", ",149 131,104 200,43 123,148 123,161 80,84 136,163 ", "56,87 166,32 161,70 149,158 182,51 103,128 141,80 ", "11,186 2,106 170,173 109,109 156,115 78,49 130,139", " 195,16 2,181 28,122 81,59 111,64 164,43 42,80 41,", "185 132,90 3,44 146,169 22,146 40,185 26,129 41,12", "0 79,122 24,184 80,198 33,53 29,88 158,5 173,128 1", "18,178 77,58 169,23 164,20 71,22 35,159 80,92 19,1", "36 113,142 91,110 192,179 169,189 161,27 52,145 80", ",145 185,11 28,144 199,145 67,163 47,52 165,71 9,1", "73 68,99 64,149 169,116 161,69 165,194 154,134 185", ",163 133,169 128,112 91,140 98,108 161,162 178,190", " 32,21 2,2 70,71 7,17 102,173 137,18 149,157 2,173", " 167,82 71,191 173,62 179,81 24,149 6,12 89,19 182", ",105 93,155 3,2 168,55 77,155 149,196 173,72 52,14", "5 138,173 4,2 45,56 133,160 128,130 145,34 116,139", " 80,54 37,59 185,55 71,184 180,42 148,13 93,95 58,", "187 80,143 149,128 110,114 184,115 29,19 154,125 7", "1,77 154,80 54,70 85,83 185,33 110,128 163,89 106,", "126 117"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 349391024;
    if(result == expected) {
        cout << "Test Case 209: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 209: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test210() {
    int n = 200;
    vector<string> edges = {"71 100,23 99,172 50,194 10,61 199,52 53,120 41,16 ", "68,88 30,74 63,36 178,106 67,33 23,175 116,190 33,", "56 33,43 103,6 33,94 96,33 5,176 102,133 138,41 10", "3,126 48,33 60,200 95,12 60,33 107,68 33,89 33,30 ", "25,152 49,24 117,1 196,75 145,159 175,23 125,78 54", ",57 95,53 198,37 185,166 102,105 91,197 146,49 33,", "38 92,118 33,55 33,98 94,68 19,44 47,61 132,70 153", ",65 2,2 33,10 31,109 184,127 81,165 40,154 153,33 ", "3,34 22,114 52,33 45,175 33,97 177,33 195,167 161,", "14 106,13 166,77 94,92 140,36 170,33 165,146 33,18", " 138,56 133,174 76,33 172,55 66,33 134,183 85,101 ", "32,85 33,163 33,139 97,130 97,71 33,143 49,46 93,6", "0 43,33 184,16 19,113 157,196 159,168 65,59 85,106", " 33,193 141,11 75,145 8,169 131,85 58,33 127,167 6", ",107 194,78 112,181 47,169 175,124 69,134 139,160 ", "22,82 122,33 121,33 47,120 28,148 173,164 38,137 2", "2,45 39,95 33,157 55,51 102,98 195,192 184,198 114", ",100 129,81 158,21 92,110 85,147 193,132 33,91 7,1", "12 86,172 108,158 127,27 23,185 178,49 83,79 80,15", "4 24,190 87,171 118,173 118,96 195,182 184,33 124,", "187 39,136 115,147 119,48 73,179 73,11 33,163 26,1", "40 164,84 2,25 136,132 199,35 49,62 146,24 33,155 ", "71,147 33,4 23,150 7,3 151,56 18,161 174,13 33,119", " 141,90 47,49 156,74 87,187 64,20 194,150 105,142 ", "146,168 180,78 33,46 124,115 3,198 33,15 122,32 12", "1,162 47,111 93,107 10,165 79,70 117,33 22,15 62,2", "6 104,121 101,63 190,17 22,72 80,134 130,72 40,186", " 22,86 54,23 128,47 144,14 67,6 9,108 50,82 197,16", "4 33,191 104,200 57,42 155,42 129,48 89,29 85,180 ", "84,111 69,189 184,3 88,184 123,148 171,178 33,13 1", "76,113 66,76 9,5 188,135 6,5 149,11 8,89 73,191 16", "3,185 36,7 33,188 149,28 60,45 64,131 1"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 301435993;
    if(result == expected) {
        cout << "Test Case 210: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 210: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test211() {
    int n = 200;
    vector<string> edges = {"54 158,94 195,90 10,133 104,186 115,141 135,39 199", ",176 193,139 79,79 145,150 124,79 184,189 43,14 10", ",128 14,186 76,182 20,103 153,117 158,188 89,77 24", ",8 165,113 73,69 177,188 54,115 126,78 33,134 2,2 ", "154,64 2,88 109,26 84,91 151,26 168,77 101,107 54,", "103 191,121 24,144 25,2 110,125 7,102 192,81 34,16", "3 97,54 69,64 19,10 18,92 181,81 149,144 2,133 2,1", "70 18,89 86,51 10,171 92,63 116,16 160,79 146,44 7", "3,111 49,20 105,38 188,31 87,6 61,109 143,172 6,71", " 118,118 79,101 121,51 129,136 2,122 67,173 69,88 ", "54,153 54,26 167,125 70,93 44,161 117,147 37,97 5,", "82 49,176 138,32 191,10 70,106 186,2 147,46 54,31 ", "195,156 14,192 59,126 132,52 198,71 174,10 199,48 ", "1,2 148,4 154,112 124,18 21,167 168,107 22,189 98,", "54 137,197 9,66 183,151 176,79 164,79 10,181 10,62", " 30,32 153,170 21,139 176,10 195,78 52,12 5,54 169", ",11 57,78 10,146 122,119 120,14 200,71 130,178 44,", "43 98,155 15,9 80,3 199,30 8,122 36,6 159,2 54,23 ", "46,157 111,112 150,2 96,80 197,174 175,54 124,118 ", "175,29 173,180 146,71 190,12 163,132 186,142 58,90", " 58,136 123,53 22,75 152,155 41,40 108,127 149,54 ", "8,195 87,199 95,197 27,47 185,54 149,2 162,127 34,", "198 78,157 82,10 54,139 91,131 176,137 85,119 192,", "2 185,137 57,41 10,172 159,197 10,5 196,40 2,35 12", "2,166 71,70 7,42 110,184 113,17 129,5 60,2 79,83 9", "6,82 54,192 45,171 181,10 26,1 164,65 169,2 116,19", "4 28,165 62,140 23,158 161,44 55,20 179,187 148,20", " 164,100 46,186 114,145 120,53 107,15 41,143 88,13", "4 74,17 51,20 48,29 177,99 5,97 79,132 79,141 2,28", " 2,183 169,50 72,85 11,160 2,122 68,142 90,56 41,5", "4 43,86 38,6 10,35 180,54 24,44 184,13 162,100 140", ",95 3,200 128,72 2,145 192,66 65,2 152"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 710998209;
    if(result == expected) {
        cout << "Test Case 211: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 211: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test212() {
    int n = 200;
    vector<string> edges = {"131 78,182 147,153 142,171 102,31 38,178 175,41 19", "0,126 180,135 75,57 182,151 99,151 180,103 41,132 ", "184,182 163,78 184,106 76,66 106,179 38,65 171,118", " 119,134 174,47 180,29 183,73 129,16 64,106 124,37", " 113,182 168,165 47,53 66,109 184,28 200,41 110,41", " 156,68 6,19 76,76 166,7 131,96 128,182 42,173 9,1", "98 47,136 65,187 121,151 158,68 90,180 181,66 113,", "88 76,200 184,44 22,135 106,119 90,176 197,103 117", ",97 55,20 123,15 46,13 155,51 47,96 182,16 184,35 ", "90,162 41,135 199,184 121,191 38,180 184,90 112,15", "5 142,85 154,28 169,38 106,109 74,180 80,149 151,9", "7 104,172 56,139 174,179 191,195 11,74 48,182 27,1", "61 76,125 43,11 5,152 41,14 46,76 94,164 117,90 46", ",52 123,27 3,186 64,182 106,24 41,41 182,65 106,10", "6 122,47 188,22 108,67 187,76 176,6 115,90 60,145 ", "150,144 93,122 39,91 184,91 172,23 95,188 137,76 1", "85,116 124,96 100,90 41,114 106,101 143,127 106,12", "3 106,77 11,180 95,169 200,121 67,184 90,71 106,41", " 173,2 41,160 10,21 180,182 17,76 36,189 71,12 41,", "192 41,90 87,127 33,25 147,42 69,84 182,154 168,18", " 180,26 174,163 81,151 143,41 138,140 176,48 109,1", "36 102,11 90,180 76,142 13,182 10,119 92,104 55,13", "0 106,132 61,140 197,89 90,37 66,193 68,114 50,54 ", "23,91 56,26 148,22 182,130 34,32 68,45 180,108 44,", "70 180,76 72,58 84,170 68,76 40,61 79,41 133,19 12", "5,157 90,105 1,41 144,119 86,90 167,85 168,180 174", ",174 146,49 94,55 90,79 132,76 8,76 82,199 75,57 1", "20,106 105,54 95,150 11,129 76,20 52,103 164,43 19", ",27 175,96 4,4 128,14 15,194 90,111 29,142 182,3 1", "78,159 41,83 17,111 183,76 59,41 63,78 7,107 98,76", " 62,29 180,192 107,196 76,186 16,177 92,98 192,180", " 141,30 119"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 529306205;
    if(result == expected) {
        cout << "Test Case 212: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 212: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test213() {
    int n = 200;
    vector<string> edges = {"74 153,116 117,84 79,76 52,119 196,178 182,85 1,16", "6 190,132 97,138 74,65 157,132 69,104 126,126 131,", "79 127,153 68,67 148,96 8,135 129,86 40,85 195,36 ", "132,100 89,195 26,35 3,72 193,85 178,109 126,119 7", "9,92 111,92 168,92 172,199 187,52 36,123 100,32 36", ",126 16,99 31,93 159,123 132,181 83,195 157,185 13", "7,79 95,65 87,17 86,181 147,115 91,47 33,10 36,51 ", "74,3 132,56 75,74 24,176 79,194 118,141 161,90 117", ",183 18,138 25,79 186,86 73,165 51,30 2,96 117,74 ", "151,178 5,1 146,93 115,126 6,151 19,21 6,114 137,7", "4 161,89 123,158 119,36 61,62 58,118 126,101 154,3", "8 117,63 80,108 184,143 94,140 92,82 96,152 53,160", " 101,60 92,185 132,164 124,130 180,126 54,36 121,1", "78 192,155 19,135 197,74 117,64 188,152 71,122 22,", "186 39,128 27,20 92,189 182,7 81,3 112,77 72,143 4", "1,130 69,41 132,109 105,141 12,145 176,36 2,36 179", ",92 152,117 188,72 34,126 70,33 5,18 167,149 74,10", "3 132,187 92,51 4,71 53,195 159,94 41,144 92,171 7", "9,134 85,132 126,36 72,13 194,163 36,81 26,85 125,", "126 50,195 9,85 148,60 48,58 24,183 192,116 14,200", " 157,36 178,85 49,55 189,154 160,139 92,91 159,180", " 69,114 185,169 119,190 11,133 191,46 36,98 197,42", " 86,162 153,161 12,74 92,103 191,96 113,110 124,12", "6 79,200 87,198 126,79 124,126 107,86 78,98 129,97", " 45,56 117,25 44,22 9,117 175,184 149,88 117,92 15", "6,102 85,177 119,117 15,174 119,62 24,118 13,61 13", "6,128 23,117 195,170 86,142 17,112 35,167 192,23 8", "6,59 36,173 60,47 5,111 66,7 26,79 150,162 68,23 2", "7,178 197,97 106,28 117,110 164,154 195,166 11,83 ", "147,29 86,117 43,151 155,11 178,165 4,119 86,149 1", "08,119 31,86 92,48 173,120 119,92 37,9 122,55 182,", "126 83,80 119,138 44,57 170,106 45,133 103"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 129527742;
    if(result == expected) {
        cout << "Test Case 213: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 213: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test214() {
    int n = 200;
    vector<string> edges = {"10 36,53 93,74 182,8 10,157 125,190 157,67 157,168", " 55,146 157,49 148,4 151,11 189,95 173,12 21,150 1", "07,36 2,15 189,75 167,20 60,109 98,49 128,108 20,1", "56 145,109 194,59 116,109 157,84 53,22 27,117 5,13", "7 171,36 94,88 130,121 10,107 26,35 174,10 25,186 ", "74,43 123,80 78,10 92,174 109,103 106,157 163,72 7", "4,60 108,24 10,140 40,38 40,186 102,81 43,98 61,62", " 32,168 87,173 74,40 111,196 72,1 77,104 111,37 10", "9,14 54,139 129,33 79,101 120,129 10,174 44,109 10", "7,156 46,13 157,56 103,67 17,129 47,113 36,160 112", ",80 68,108 74,102 41,199 159,200 157,114 123,86 54", ",74 109,93 84,162 163,74 166,107 138,164 119,10 11", "8,3 157,139 47,159 161,74 77,134 40,193 154,149 72", ",43 40,9 117,58 155,13 191,148 119,78 68,30 169,74", " 40,33 3,140 85,36 89,76 130,171 99,74 189,40 49,4", "0 147,66 98,30 109,75 83,199 161,10 5,105 180,198 ", "89,30 143,184 157,63 51,118 70,42 10,12 10,137 36,", "157 187,133 36,10 39,175 157,54 122,7 157,179 132,", "17 131,187 32,45 34,54 109,112 36,179 153,10 154,1", "54 6,141 69,82 65,19 126,59 10,174 50,10 157,149 1", "96,73 40,15 11,75 109,164 49,193 6,100 178,52 43,1", "92 40,157 71,64 40,133 97,36 4,91 97,166 19,188 15", "8,7 110,157 103,186 41,131 67,28 194,177 37,23 181", ",40 141,36 46,158 36,70 136,163 18,115 157,74 105,", "36 82,37 142,87 55,133 91,96 75,5 9,185 10,56 106,", "23 197,46 145,192 183,36 195,187 62,16 37,3 79,153", " 157,172 165,74 22,88 76,31 182,194 152,162 18,137", " 99,161 10,120 135,40 155,101 135,157 68,114 81,13", "5 157,45 10,181 197,13 170,144 98,166 126,36 76,17", "6 68,40 36,23 74,90 127,57 30,53 74,170 191,89 124", ",51 157,67 48,29 194,40 100,132 153,10 172,168 10,", "127 10,136 118"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 291227694;
    if(result == expected) {
        cout << "Test Case 214: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 214: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test215() {
    int n = 200;
    vector<string> edges = {"50 135,15 58,192 135,34 92,14 91,50 193,47 34,167 ", "16,110 18,103 167,45 165,80 148,63 16,20 30,34 183", ",107 185,50 119,110 187,150 42,79 32,34 50,189 20,", "50 8,58 1,84 48,167 51,138 146,73 54,191 198,32 71", ",118 34,62 34,149 48,32 41,108 100,184 137,93 16,4", "1 59,32 86,105 152,53 167,50 19,34 156,119 115,29 ", "32,186 34,147 148,151 16,159 167,16 15,16 45,6 163", ",34 146,27 28,54 50,167 19,179 50,78 2,19 122,50 1", "75,134 32,184 32,139 34,49 36,31 16,16 94,89 169,3", "4 126,25 94,195 120,40 163,102 19,108 32,196 34,23", " 19,130 107,114 179,74 50,170 160,108 197,87 167,8", "5 198,34 190,128 167,155 93,85 191,105 19,141 167,", "50 21,177 77,180 90,110 32,14 57,39 90,15 1,11 16,", "188 8,57 91,39 32,10 93,51 116,34 46,50 95,117 61,", "44 96,11 153,132 167,169 167,122 104,144 82,84 149", ",55 167,50 142,32 34,145 171,170 13,65 34,101 112,", "16 195,26 16,167 143,69 167,178 75,22 168,50 199,1", "31 19,19 82,167 20,7 200,83 74,18 187,19 77,19 111", ",167 33,32 16,50 70,12 34,5 21,167 56,72 19,106 63", ",157 193,185 130,17 176,125 53,142 133,75 34,88 16", "7,164 37,32 17,39 180,81 11,60 113,171 167,50 64,5", "2 127,16 124,16 61,140 175,26 172,19 84,199 97,164", " 16,72 68,173 34,91 167,194 32,3 141,19 127,101 76", ",194 42,4 124,158 167,13 160,167 78,34 181,147 16,", "167 35,167 67,60 86,107 19,150 194,50 28,50 36,121", " 16,24 34,154 95,113 86,19 66,66 99,19 168,167 109", ",163 16,161 56,38 34,147 80,129 121,50 200,44 16,1", "62 112,144 9,98 151,9 82,43 34,31 174,162 76,123 1", "39,166 13,12 182,30 189,167 136,19 162,32 13,198 3", "2,197 100"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 256814368;
    if(result == expected) {
        cout << "Test Case 215: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 215: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test216() {
    int n = 200;
    vector<string> edges = {"168 62,129 162,64 43,132 80,123 5,182 110,74 121,1", "63 97,43 182,155 177,67 120,42 25,124 12,188 107,8", "5 103,174 65,40 96,33 168,84 97,35 124,111 119,58 ", "119,12 198,76 192,162 192,38 173,100 192,192 121,1", "60 125,184 1,43 168,93 148,43 122,192 135,143 9,14", "1 93,27 43,1 192,23 189,43 177,140 136,123 168,13 ", "176,34 126,76 104,53 181,65 71,161 63,25 154,168 3", "5,43 192,11 168,46 77,121 41,144 98,91 26,43 152,1", "42 143,160 37,68 175,185 179,146 14,29 159,181 26,", "137 103,131 194,165 182,130 167,20 131,151 47,113 ", "157,168 186,62 69,118 114,7 43,79 91,141 153,200 2", "4,2 39,105 18,145 166,92 147,60 81,192 106,49 39,5", "5 121,35 97,168 49,150 43,192 35,66 70,157 22,32 1", "48,66 43,135 171,157 35,43 120,151 192,182 36,21 3", "5,125 43,82 112,13 90,10 86,35 20,159 135,6 188,82", " 137,195 128,156 45,193 187,194 96,153 32,53 79,16", "8 185,146 127,74 134,72 154,82 35,168 172,36 110,2", "2 113,193 173,168 68,66 99,132 77,104 140,158 190,", "57 61,43 138,169 72,45 17,192 109,75 51,98 114,28 ", "172,116 89,169 42,21 83,81 199,41 74,2 59,3 27,31 ", "109,65 101,65 192,195 170,180 52,106 164,49 50,95 ", "156,46 132,42 192,185 52,173 35,180 185,62 111,43 ", "149,21 44,56 168,125 37,43 132,43 166,124 198,142 ", "4,58 69,92 176,117 71,133 166,16 197,83 44,56 48,1", "08 15,88 35,168 148,35 54,186 139,168 81,11 115,87", " 33,14 105,16 6,168 92,147 90,191 88,130 128,118 1", "96,192 158,84 163,94 29,168 9,178 102,192 126,196 ", "144,9 30,168 200,59 50,188 16,30 4,192 14,170 167,", "86 199,61 168,8 180,19 43,168 114,100 17,71 174,14", "5 133,178 192,112 85,187 78,192 181,192 170,127 18", ",40 20,51 35,183 54,99 70,35 15,38 78,100 95,168 1", "88,89 192,73 76,136 73,171 94,168 189,10 60,192 16", "1"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 140109060;
    if(result == expected) {
        cout << "Test Case 216: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 216: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test217() {
    int n = 200;
    vector<string> edges = {"37 13,196 34,156 27,4 174,97 66,13 10,68 101,73 17", "5,13 55,46 97,93 183,146 3,35 123,166 55,13 144,48", " 68,132 80,108 55,152 93,33 144,147 79,25 7,16 81,", "197 16,132 13,138 134,69 122,41 183,85 10,102 25,1", "52 13,153 115,196 13,24 155,14 51,31 2,157 50,136 ", "173,91 185,9 68,44 129,68 154,143 93,195 90,6 117,", "167 93,118 102,170 68,103 68,34 165,189 70,68 49,1", "04 192,57 175,67 127,197 149,68 198,194 30,128 93,", "150 69,129 183,93 138,20 128,68 157,130 198,13 68,", "13 148,8 21,118 7,108 179,6 146,68 23,62 37,141 38", ",13 174,152 3,68 93,42 11,71 51,162 3,93 199,126 9", "6,163 122,161 106,93 73,59 105,152 98,131 98,190 1", "43,66 171,139 117,189 164,78 182,37 2,76 141,179 5", "5,132 42,200 144,177 60,68 92,168 89,174 82,64 148", ",60 93,93 90,19 72,131 186,93 104,91 93,124 46,13 ", "113,161 56,163 69,83 36,54 86,181 53,93 30,188 57,", "68 74,93 78,68 125,170 121,97 26,85 133,72 113,172", " 84,68 65,137 75,141 187,68 135,148 193,93 126,35 ", "71,38 187,98 159,93 115,193 64,105 29,171 124,68 1", "69,68 142,156 93,111 112,191 110,191 152,189 13,14", "4 114,84 152,41 44,196 165,133 10,83 178,39 174,88", " 75,68 105,140 68,75 152,61 59,21 77,152 97,68 1,3", "5 152,63 140,22 68,89 199,106 18,21 17,93 53,19 11", "3,12 68,93 155,45 148,93 145,68 47,75 178,94 15,82", " 4,13 197,43 167,67 68,123 14,184 168,10 176,33 20", "0,95 196,8 110,188 73,35 99,23 119,70 28,84 111,86", " 98,31 37,161 18,93 147,36 137,32 145,68 107,28 18", "9,139 3,116 68,172 52,61 105,141 13,136 93,5 12,40", " 68,132 11,13 69,118 93,161 68,100 1,191 77,68 87,", "135 109,15 68,112 52,84 158,68 58,180 191,160 68,8", "1 197,186 54,151 113,199 184,8 120"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 490031254;
    if(result == expected) {
        cout << "Test Case 217: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 217: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test218() {
    int n = 200;
    vector<string> edges = {"145 33,89 101,92 33,74 38,29 104,172 150,64 138,58", " 77,159 104,11 24,193 88,162 120,103 147,187 87,12", "6 102,117 52,55 168,196 159,192 64,144 188,13 170,", "73 21,60 77,133 104,56 45,197 1,14 198,79 120,101 ", "41,104 34,36 116,85 177,118 140,51 20,162 85,199 6", "4,150 20,58 20,163 173,70 160,37 169,149 121,80 84", ",47 20,11 20,8 116,112 98,3 121,5 104,100 27,15 12", "9,48 47,137 129,153 129,104 142,20 55,34 165,104 1", "9,143 114,32 129,12 131,73 129,70 10,155 126,14 72", ",177 120,132 6,39 26,130 173,148 54,107 129,99 95,", "104 96,63 68,94 187,191 93,14 99,20 13,184 146,175", " 89,104 91,110 20,194 155,109 46,54 20,101 151,20 ", "74,20 173,92 20,86 19,104 1,161 53,93 66,69 129,9 ", "137,174 43,20 129,42 129,119 18,49 156,20 17,110 3", "0,104 117,116 104,134 22,160 98,107 65,64 129,104 ", "49,55 182,69 81,166 23,101 20,164 119,107 39,192 1", "38,83 173,114 123,108 196,104 167,111 86,126 136,7", "6 104,174 44,37 20,168 182,31 40,161 135,129 3,105", " 104,75 73,20 84,63 176,194 102,35 140,25 179,31 6", "7,72 95,70 129,32 178,128 104,129 120,20 164,153 2", "00,104 97,38 154,40 71,104 20,135 129,141 104,20 1", "26,135 53,4 169,103 25,106 60,104 181,166 54,129 1", "87,122 74,26 124,67 50,90 58,144 104,189 51,107 12", "4,183 9,129 104,180 170,143 104,93 56,131 129,59 8", "3,145 92,109 15,118 171,129 171,3 149,2 104,62 11,", "78 125,57 104,129 100,129 193,174 185,23 139,190 2", "8,163 59,62 24,17 190,7 15,7 46,54 139,35 171,21 7", "8,176 68,16 153,87 94,127 76,129 22,115 64,179 147", ",157 88,20 132,4 37,125 73,43 158,111 19,17 28,159", " 108,186 104,104 82,25 20,183 137,129 40,157 193,1", "43 123,70 112,66 45,174 158,146 104,174 20,58 106,", "20 14,16 200,42 113,104 152,175 41,176 129,13 180,", "5 61,154 122,104 195,164 18,129 93,8 36,50 40"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 466820625;
    if(result == expected) {
        cout << "Test Case 218: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 218: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test219() {
    int n = 200;
    vector<string> edges = {"31 143,165 74,54 84,136 192,168 110,36 135,168 21,", "168 190,110 2,176 110,168 186,168 107,116 74,110 1", "55,144 192,167 168,31 192,168 115,200 192,12 110,6", "0 196,192 150,62 179,16 71,40 192,46 100,72 112,12", "9 101,147 134,165 116,10 185,85 161,150 39,87 44,1", "56 199,109 192,192 108,85 113,26 37,85 13,168 67,5", "7 168,169 69,110 174,25 110,110 145,93 11,132 90,8", "8 85,118 86,75 22,20 73,56 110,34 110,168 195,85 1", "87,168 129,85 19,183 110,9 168,192 159,90 192,198 ", "186,85 62,84 192,196 192,89 110,192 37,168 42,123 ", "192,137 85,168 131,50 85,154 110,49 110,192 14,11 ", "168,128 192,47 92,44 192,135 192,57 156,192 164,12", "2 32,160 192,1 70,82 192,149 36,134 192,199 57,60 ", "97,110 162,110 80,81 110,192 79,110 64,96 117,124 ", "85,98 14,192 140,83 169,3 192,85 182,139 131,192 1", "12,92 168,85 102,85 168,127 192,85 33,18 85,22 168", ",192 111,55 23,70 168,168 133,138 43,110 153,190 1", "41,76 21,16 107,28 113,168 20,168 181,168 185,103 ", "29,77 119,192 125,83 69,15 85,5 168,4 192,7 110,17", "2 85,158 192,68 127,30 85,24 166,104 134,168 130,5", "1 192,191 192,85 192,168 100,110 170,192 86,168 16", "3,168 122,8 168,168 48,117 168,17 33,94 110,85 173", ",135 149,23 168,85 189,41 110,192 91,195 184,192 6", "3,168 99,95 110,168 38,148 82,65 192,110 78,192 11", "9,105 168,192 110,85 175,46 121,192 194,59 168,192", " 114,151 168,69 85,53 142,104 147,6 85,35 168,121 ", "100,157 43,188 110,85 177,197 114,110 152,107 71,1", "67 120,168 53,168 61,180 168,196 97,138 157,85 58,", "146 110,193 110,66 168,178 85,194 126,106 168,192 ", "74,171 168,192 45,52 191,192 103,24 192,27 168,43 ", "168"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 406059526;
    if(result == expected) {
        cout << "Test Case 219: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 219: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test220() {
    int n = 200;
    vector<string> edges = {"163 117,16 115,199 133,101 22,77 28,22 153,82 108,", "46 6,163 91,180 46,178 22,14 156,107 57,106 103,13", "5 199,191 156,48 46,103 141,46 199,115 26,148 173,", "66 122,59 46,113 22,190 141,189 183,21 71,151 116,", "122 44,167 111,115 123,74 192,36 8,115 69,46 91,46", " 129,199 22,90 131,199 165,26 21,81 39,157 22,91 1", "92,76 64,44 199,13 199,22 132,38 29,65 46,61 46,46", " 121,46 97,46 60,87 128,87 92,105 165,171 115,35 1", "54,22 47,22 160,22 147,20 195,199 191,199 195,54 1", "15,40 199,22 162,56 83,10 115,25 22,199 34,22 145,", "22 78,91 43,199 85,179 46,199 103,171 142,3 166,19", "9 35,199 3,43 194,91 134,152 80,177 22,55 91,52 19", "6,46 164,44 66,51 72,22 73,151 91,136 83,42 167,46", " 126,22 119,46 187,91 176,184 102,115 197,83 200,1", "04 22,42 111,52 150,22 115,46 30,87 46,143 46,88 4", "0,46 98,91 24,133 19,183 135,27 84,22 8,46 7,168 4", "6,5 171,199 112,198 115,53 79,167 91,173 46,175 22", ",91 169,12 110,4 3,50 22,37 159,115 152,115 83,91 ", "155,13 138,57 64,109 46,95 133,14 191,41 140,198 1", ",32 34,67 22,22 100,22 49,184 68,82 35,22 63,45 22", ",79 91,31 22,172 18,91 174,71 26,56 136,146 46,96 ", "155,84 115,75 22,174 188,125 115,17 11,181 15,142 ", "5,190 103,4 166,144 69,57 91,172 46,91 99,28 91,91", " 38,91 140,81 91,46 186,11 115,9 91,33 123,22 72,8", "9 46,86 158,193 46,149 85,102 68,68 115,62 46,23 1", "12,70 134,115 15,12 22,46 137,46 118,196 150,37 11", "5,22 185,115 90,46 130,189 135,46 2,99 161,58 191,", "127 46,19 95,199 52,22 124,199 158,35 108,139 168,", "114 46,93 46,182 46,120 47,94 6,92 128,57 76,91 11", "5,170 22"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 224218582;
    if(result == expected) {
        cout << "Test Case 220: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 220: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test221() {
    int n = 200;
    vector<string> edges = {"50 113,111 10,50 137,66 159,199 84,159 42,154 111,", "129 29,142 114,195 124,111 29,119 123,95 200,4 159", ",51 101,91 29,53 50,65 50,191 145,60 21,111 9,50 1", "89,118 178,160 122,159 24,75 29,96 70,50 198,5 89,", "184 180,111 12,30 140,84 94,191 148,200 58,29 123,", "152 84,40 126,97 168,150 112,146 159,80 111,109 72", ",172 159,159 59,186 72,29 188,14 101,192 106,178 6", ",108 169,118 179,16 159,106 29,161 199,56 100,156 ", "46,111 37,15 18,118 73,84 118,50 197,126 33,13 188", ",61 126,11 82,29 108,200 83,111 77,2 82,92 2,111 1", "39,88 49,194 159,55 100,52 81,136 72,14 51,55 56,1", "79 156,181 29,142 118,28 92,50 63,76 132,191 127,4", "0 175,84 90,125 159,48 72,41 67,22 191,190 191,25 ", "41,85 29,72 64,25 67,43 110,150 156,58 68,27 95,16", "6 171,156 177,19 112,98 72,62 177,99 191,50 104,38", " 10,171 84,72 93,84 183,72 65,149 105,52 29,7 30,7", "6 17,35 36,87 175,150 19,162 50,156 182,50 147,65 ", "191,84 34,56 84,131 152,107 72,8 156,175 126,117 1", "83,115 111,180 181,8 5,193 118,122 193,118 101,170", " 84,21 118,156 7,7 140,50 97,2 11,57 191,159 130,1", "91 138,159 15,96 118,87 135,179 126,102 111,71 156", ",118 17,159 47,124 111,78 95,31 50,3 50,39 118,181", " 184,185 156,159 23,89 8,156 50,143 156,160 193,1 ", "35,29 149,12 69,74 159,117 44,187 191,176 82,44 18", "3,72 79,158 111,17 132,159 133,121 73,29 65,171 19", "6,43 29,128 50,155 159,84 88,144 163,159 167,156 1", "20,156 134,50 86,171 164,50 153,151 72,116 39,191 ", "174,159 45,95 179,111 173,159 163,179 82,32 50,82 ", "141,159 84,83 95,50 26,157 50,84 35,20 111,111 159", ",165 173,1 36,54 50,118 41,185 103,166 196"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 144784822;
    if(result == expected) {
        cout << "Test Case 221: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 221: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test222() {
    int n = 200;
    vector<string> edges = {"97 140,168 138,140 177,24 134,13 87,15 120,189 82,", "127 168,140 39,106 98,194 67,79 184,182 199,8 179,", "104 44,69 92,186 176,143 67,52 106,158 134,44 70,1", "67 17,115 173,133 134,163 167,17 154,179 191,41 17", "9,146 92,167 15,77 155,92 48,85 141,181 106,23 67,", "185 118,67 47,89 179,196 92,64 140,92 19,152 96,11", "6 167,18 136,88 179,80 152,164 67,53 131,134 67,60", " 150,1 67,15 38,119 168,140 74,131 167,167 179,27 ", "100,140 83,90 197,198 195,174 106,195 57,67 103,12", "8 167,139 50,78 134,92 151,115 148,91 15,162 56,94", " 130,161 5,104 3,127 186,106 21,152 140,54 36,106 ", "77,179 195,160 67,113 152,67 20,70 195,193 95,14 6", "2,192 195,92 81,92 106,167 2,22 15,61 106,32 67,42", " 26,67 109,33 134,9 43,58 101,93 24,195 125,66 92,", "65 105,140 40,166 117,10 32,3 44,169 106,12 179,13", " 120,51 45,86 8,54 106,195 72,84 161,200 34,175 15", "2,15 49,92 150,132 179,71 90,127 118,183 120,92 4,", "105 195,79 26,161 70,167 108,29 116,149 195,77 7,9", " 121,137 106,15 63,110 167,145 80,138 82,106 144,9", "0 70,100 141,67 59,127 136,124 134,197 71,67 200,2", "8 195,30 102,183 87,70 56,179 55,76 67,42 184,193 ", "134,142 56,67 190,99 33,179 11,106 70,43 121,62 15", ",147 195,15 79,152 117,85 100,58 152,140 35,114 10", "6,62 73,126 106,129 152,199 179,110 170,37 15,73 1", "57,180 134,172 165,84 5,70 173,16 15,159 140,112 1", "67,187 140,127 92,140 127,194 123,140 25,140 111,1", "62 142,153 178,7 155,31 103,152 107,152 46,134 152", ",67 139,92 75,188 177,148 173,122 179,135 134,189 ", "119,100 127,92 30,68 196,9 106,15 67,172 167,51 13", "4,195 6,14 157,75 156,195 171,153 134,130 195"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 999310688;
    if(result == expected) {
        cout << "Test Case 222: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 222: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test223() {
    int n = 200;
    vector<string> edges = {"110 59,181 75,129 27,138 84,157 87,99 40,196 84,77", " 90,36 200,93 52,81 72,198 78,23 67,139 36,33 13,3", "4 29,137 181,106 24,136 183,182 125,71 103,127 156", ",143 192,15 40,160 16,5 82,1 166,60 142,94 111,67 ", "99,163 155,8 74,173 118,100 18,33 140,4 116,5 102,", "176 195,16 110,96 98,59 83,98 21,69 75,50 142,51 1", "74,90 40,86 189,59 45,164 20,160 154,95 177,199 14", "5,152 103,180 119,6 47,181 59,1 138,193 105,37 128", ",114 53,135 195,147 191,90 135,57 133,83 6,179 83,", "141 157,75 12,151 182,131 26,103 108,78 181,3 16,1", "93 112,109 23,107 179,181 35,53 83,58 26,97 75,59 ", "169,146 15,62 101,12 95,132 96,175 113,169 112,5 1", "53,43 161,122 125,106 178,97 81,141 30,35 42,126 1", "25,55 61,75 80,63 37,138 166,149 45,31 144,162 51,", "87 30,39 172,33 45,65 120,92 121,83 5,48 115,90 17", "6,70 172,178 37,120 121,95 139,173 181,119 22,55 9", "7,59 50,165 14,116 57,53 18,14 62,60 150,103 40,12", "6 59,116 197,85 71,133 197,64 6,2 13,29 150,156 18", "4,200 7,83 147,68 73,124 32,148 91,49 159,48 151,4", "0 84,105 11,124 158,48 126,157 19,15 175,110 20,50", " 29,157 40,40 172,78 186,84 83,170 39,200 12,9 185", ",149 76,179 28,56 196,51 69,181 52,20 154,136 55,1", "31 68,147 123,44 15,69 185,27 194,130 101,114 100,", "169 11,149 2,171 119,194 46,147 43,156 40,88 132,1", "28 24,54 82,96 84,26 73,79 142,83 26,83 116,155 6,", "143 179,167 11,158 32,82 159,91 191,178 75,172 104", ",84 119,32 181,171 190,191 161,41 165,40 75,112 18", "7,138 17,156 121,99 168,117 56,22 180,17 10,163 64", ",196 94,27 99,129 67,183 81,70 170,25 185,66 188,1", "81 66,38 53,101 80,102 54,152 85,96 21,28 192,144 ", "43,127 92,9 162,113 44,89 137,186 198,127 189,181 ", "199,74 102,196 117,80 165,106 134"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 735534168;
    if(result == expected) {
        cout << "Test Case 223: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 223: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test224() {
    int n = 200;
    vector<string> edges = {"148 186,54 194,41 103,145 110,86 96,114 36,60 168,", "30 127,109 85,77 24,181 152,109 179,32 102,159 56,", "169 150,64 186,144 28,86 99,109 61,11 184,135 77,6", "3 94,15 41,141 135,26 57,155 87,4 121,120 15,96 18", "2,187 111,10 36,109 121,126 91,131 55,99 51,36 101", ",70 38,109 36,196 158,10 104,171 192,106 15,172 15", ",36 152,14 173,75 98,81 63,182 27,5 161,185 10,132", " 185,54 53,94 81,145 170,95 139,61 97,36 171,96 7,", "96 135,161 135,96 144,44 25,75 146,1 199,41 129,38", " 112,109 18,93 82,21 29,130 142,128 13,36 71,12 8,", "116 7,190 161,116 123,182 68,137 66,90 17,187 36,1", "38 15,48 191,88 191,13 188,10 15,66 106,8 96,110 1", "82,151 98,84 12,46 119,76 164,182 48,31 168,184 14", "9,104 112,200 141,47 93,128 188,5 22,185 65,154 10", ",71 118,55 113,85 80,182 108,102 23,141 195,182 16", "2,135 119,25 37,15 23,71 26,114 124,105 67,176 55,", "49 15,86 69,79 50,21 150,156 197,94 10,96 105,196 ", "109,39 166,162 148,91 15,88 48,153 19,135 55,137 1", "06,147 73,149 10,153 10,73 49,47 15,194 117,68 174", ",101 140,89 34,36 125,143 63,126 136,134 164,62 18", "4,31 100,16 132,28 20,45 105,37 44,96 75,67 45,6 1", "33,182 122,3 195,3 141,62 149,18 83,146 151,176 11", "3,198 58,163 16,182 42,96 157,170 107,118 57,52 46", ",15 135,127 172,147 49,69 51,70 104,58 109,133 157", ",1 109,43 62,15 188,183 36,47 82,68 35,129 103,183", " 33,9 81,7 123,15 37,22 161,177 95,177 154,30 172,", "169 29,74 180,117 54,59 2,109 14,164 96,31 10,78 1", "5,109 2,57 189,107 110,84 8,100 60,136 91,15 160,1", "79 193,10 169,178 165,72 169,134 76,167 115,135 17", ",52 119,182 92,159 27,50 36,39 19,109 87,109 165,1", "39 154,144 20,175 35,156 109,162 64,40 15,135 54,1", "85 163,157 6,130 92,180 109,174 175,56 27,167 36,1", "09 182,92 142,89 36,23 32,166 153"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 634092726;
    if(result == expected) {
        cout << "Test Case 224: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 224: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test225() {
    int n = 200;
    vector<string> edges = {"45 120,45 116,153 136,26 148,138 119,145 125,146 1", "45,141 164,30 55,41 198,89 43,101 118,145 73,160 1", "5,155 174,90 112,139 146,62 13,169 159,125 175,129", " 19,187 94,118 42,163 59,95 189,125 7,59 18,60 106", ",32 64,15 45,8 54,15 163,162 172,125 170,97 51,125", " 50,189 14,137 104,69 44,68 13,125 130,32 153,72 1", "03,62 107,164 76,99 89,153 148,155 3,144 13,108 13", "2,137 140,137 70,47 13,156 98,107 11,165 14,194 49", ",78 94,179 32,167 14,32 94,169 109,123 76,171 189,", "171 176,24 23,51 22,165 4,127 71,157 10,63 110,154", " 108,166 94,129 2,113 186,96 186,125 193,145 184,5", " 128,6 161,75 9,147 174,145 181,14 126,76 29,33 76", ",115 179,158 48,19 100,154 79,111 94,50 151,8 189,", "183 125,48 189,168 134,108 14,32 103,59 6,25 184,8", "4 31,156 32,194 94,100 31,42 53,199 184,45 119,76 ", "52,14 57,67 28,80 5,177 82,174 14,30 38,89 2,192 6", "9,125 46,94 192,76 157,192 102,189 60,194 20,91 31", ",96 113,97 145,63 55,186 87,25 199,32 41,108 79,66", " 19,77 46,31 189,196 200,13 55,89 124,165 40,34 14", ",14 180,76 100,26 153,5 36,5 118,94 131,49 20,190 ", "194,152 31,117 76,62 177,94 186,138 15,165 143,83 ", "178,197 123,76 71,159 172,118 100,139 1,161 137,14", "9 46,56 90,114 149,94 142,13 163,114 46,62 23,88 5", "2,94 35,188 125,14 185,112 9,56 75,59 137,13 90,93", " 183,173 13,31 86,31 58,85 14,13 191,172 31,163 76", ",39 62,3 174,110 38,89 19,95 195,134 122,5 53,133 ", "45,97 22,76 81,178 125,62 182,32 65,193 27,130 21,", "37 135,12 61,28 32,146 1,14 125,162 109,31 16,13 1", "50,40 4,74 32,37 122,189 200,135 31,121 182,32 145", ",94 62,192 44,145 17,105 39,135 168,62 12,32 92"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 272486393;
    if(result == expected) {
        cout << "Test Case 225: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 225: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test226() {
    int n = 200;
    vector<string> edges = {"117 169,142 57,152 21,9 115,181 51,9 156,145 74,17", "9 172,154 19,161 24,128 194,149 87,153 195,84 181,", "34 193,6 112,19 117,140 40,113 24,35 18,63 165,154", " 87,36 142,95 177,25 99,180 87,198 9,9 61,178 6,18", " 107,31 66,184 122,6 122,167 24,44 160,98 105,176 ", "47,42 86,132 92,51 123,168 106,149 133,58 91,123 1", "71,175 42,95 105,49 24,85 37,78 139,145 32,18 1,75", " 105,150 99,145 55,149 88,77 9,170 18,24 105,126 3", "4,122 34,46 124,48 181,129 23,95 30,184 10,84 48,1", "90 87,14 129,142 6,118 123,101 200,18 121,54 42,74", " 5,148 123,38 45,29 101,170 42,111 81,120 105,97 1", "37,6 27,154 179,33 166,70 189,197 32,149 119,69 11", "8,42 158,87 187,47 154,142 3,160 176,123 182,9 125", ",179 138,89 96,135 144,18 93,99 110,122 46,6 103,4", "0 141,191 105,123 11,118 142,151 198,131 111,83 95", ",8 142,68 18,87 196,15 134,141 140,58 82,23 14,154", " 200,118 131,170 59,198 95,155 83,104 80,22 149,42", " 128,6 162,52 55,2 59,8 173,189 69,99 105,66 87,94", " 123,87 7,28 36,91 82,118 146,145 199,143 9,6 26,9", "7 198,67 199,64 95,158 13,29 200,65 12,123 100,109", " 122,19 169,123 147,198 73,132 43,123 136,170 183,", "78 195,12 198,170 85,116 6,174 95,34 149,9 76,17 7", "3,57 56,79 142,104 83,90 34,71 105,157 186,155 80,", "145 18,9 42,43 51,33 109,95 21,106 170,51 145,102 ", "30,123 108,82 198,123 39,153 191,150 25,144 146,13", "8 172,123 41,62 87,81 131,20 135,185 146,6 164,127", " 50,53 54,114 9,92 43,70 69,188 116,166 109,154 24", ",183 163,38 87,50 34,34 60,145 23,95 89,51 40,165 ", "24,44 47,191 139,192 24,72 151,135 185,149 130,16 ", "161,15 9,4 143,42 157,58 159"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 165419605;
    if(result == expected) {
        cout << "Test Case 226: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 226: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test227() {
    int n = 200;
    vector<string> edges = {"161 110,85 164,32 122,110 66,78 3,139 62,30 101,12", "9 41,134 154,148 189,41 24,7 155,183 169,198 159,7", "8 142,157 154,200 38,151 81,59 125,106 51,98 170,9", "7 54,91 157,54 131,197 99,33 121,75 97,58 106,86 7", "1,154 32,2 15,98 78,151 194,188 160,73 97,127 197,", "182 129,99 88,8 32,116 46,197 169,26 171,115 45,14", "6 6,14 74,194 124,13 156,109 154,144 138,152 28,14", "6 25,98 108,5 181,74 85,103 170,97 13,158 1,115 77", ",68 148,191 118,45 176,97 93,10 46,58 31,26 98,167", " 130,148 154,16 81,187 54,152 96,65 158,104 4,139 ", "32,197 140,145 181,65 1,44 150,145 78,199 101,71 1", "66,69 114,13 177,32 102,94 168,108 50,48 63,117 14", "2,84 193,27 4,65 32,90 105,98 197,2 43,56 28,31 16", "2,113 142,16 194,54 98,190 167,186 182,73 35,196 1", "84,197 198,20 83,64 116,42 151,19 182,187 23,112 3", "4,56 98,173 94,172 165,9 82,119 128,71 120,53 127,", "67 197,80 152,20 128,49 109,98 83,57 93,82 195,87 ", "193,97 55,19 186,168 173,9 198,180 76,55 39,22 47,", "32 197,132 114,190 154,86 18,194 197,37 157,197 10", "4,54 112,135 80,154 196,155 11,95 56,179 52,104 27", ",33 32,60 22,191 150,86 154,166 18,69 132,30 91,19", "5 198,14 164,59 3,84 87,32 116,176 149,95 80,147 1", "69,38 79,63 67,84 154,119 20,21 144,44 83,179 140,", "36 178,51 58,54 105,175 83,54 29,130 190,12 76,178", " 134,79 200,61 21,137 29,185 137,70 54,113 117,97 ", "31,77 197,10 64,176 77,60 47,89 11,174 54,77 153,1", "80 154,177 155,195 123,136 32,54 160,154 97,102 11", "1,74 32,122 100,68 43,66 129,157 101,150 107,196 1", "43,138 31,36 134,165 40,2 148,180 12,181 59,144 16", "3,67 48,72 127,79 54,129 97,172 40,92 98,172 154,2", "4 110,141 86,56 69,11 156,197 173,146 13,29 185,16", "2 21,92 126,17 70,175 191,72 53,133 24,183 147,75 ", "192,143 184,25 6,22 54,140 52"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 243281571;
    if(result == expected) {
        cout << "Test Case 227: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 227: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test228() {
    int n = 200;
    vector<string> edges = {"136 151,34 15,118 178,181 29,120 95,19 24,18 105,8", " 29,46 81,168 117,116 171,179 131,46 125,187 126,1", "16 29,135 91,46 13,140 101,176 45,65 110,117 20,16", "5 139,29 15,145 26,53 55,172 21,94 117,6 117,97 90", ",146 158,122 121,195 46,56 64,117 130,200 113,186 ", "153,122 30,179 46,89 115,93 116,104 168,63 133,109", " 86,121 179,151 28,50 128,110 165,125 4,181 60,176", " 29,142 117,79 77,157 100,20 132,152 7,174 29,117 ", "144,194 40,114 155,116 189,98 117,173 156,29 135,1", "49 153,41 46,185 116,117 116,72 78,116 23,139 108,", "179 78,107 29,35 26,94 3,179 87,74 161,148 81,146 ", "105,46 102,53 44,195 154,36 26,183 138,120 109,32 ", "29,163 116,170 143,138 184,132 24,152 154,86 117,1", "1 68,81 31,66 142,136 68,117 172,116 77,32 70,141 ", "196,14 12,71 50,171 177,115 29,194 10,164 16,107 1", "82,73 96,22 144,69 10,9 143,179 117,84 117,57 34,1", "74 38,68 29,141 5,168 73,101 46,128 116,118 116,11", "4 119,163 27,12 198,61 115,179 64,192 116,188 134,", "46 175,25 29,14 80,183 113,6 49,147 69,23 75,155 4", "6,128 71,137 82,149 186,132 2,86 95,72 193,30 106,", "30 160,120 169,97 117,99 199,199 117,35 13,33 84,4", "2 112,134 29,46 29,42 54,78 193,187 116,44 37,89 6", "1,138 200,8 48,39 46,179 17,59 116,88 18,179 113,4", "6 159,44 55,179 69,9 179,85 102,9 170,29 162,46 80", ",146 179,92 162,82 101,124 116,196 197,108 110,167", " 4,129 47,116 129,117 133,53 29,16 15,155 119,131 ", "1,147 194,64 150,11 151,123 29,31 51,167 125,20 24", ",103 130,18 158,180 123,80 191,41 83,39 100,179 19", "6,190 152,73 104,76 137,67 25,197 5,55 166,106 121", ",74 179,12 191,43 104,62 5,139 46,34 16,116 52,149", " 117,39 157,137 140,127 98,145 13,54 179,148 51,19", "5 7,112 54,173 150,111 51,173 56,116 58"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 72950576;
    if(result == expected) {
        cout << "Test Case 228: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 228: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test229() {
    int n = 200;
    vector<string> edges = {"33 60,158 150,70 113,1 36,180 59,60 119,134 71,25 ", "32,70 110,36 57,182 177,50 99,64 106,136 48,3 36,3", "8 56,188 63,13 188,1 82,157 6,152 191,149 49,116 1", "78,11 94,32 70,15 50,192 144,60 182,141 51,196 37,", "6 27,11 81,82 166,156 41,90 169,175 52,80 36,81 10", "7,123 32,186 81,149 60,113 117,26 39,21 102,152 34", ",195 60,120 32,182 13,151 6,42 45,10 179,119 43,19", " 18,83 36,128 135,148 31,61 2,70 192,64 18,73 142,", "60 187,76 163,63 13,134 99,98 47,60 127,176 143,10", "2 140,168 100,53 112,167 156,159 200,57 128,26 182", ",21 2,40 39,65 45,169 70,34 191,60 45,114 53,32 74", ",70 125,56 78,87 76,89 70,190 81,172 104,55 106,64", " 148,146 24,98 168,193 45,194 189,136 189,81 92,96", " 187,134 64,165 122,178 64,88 142,32 131,8 41,20 1", "17,36 81,129 192,118 31,120 91,36 64,198 147,111 1", "79,136 70,115 132,68 173,170 48,90 137,22 36,72 32", ",36 69,81 185,81 191,124 62,171 106,108 81,151 157", ",57 135,79 197,29 146,103 11,188 154,60 143,182 64", ",148 118,20 113,76 136,66 194,86 84,58 170,10 19,7", "7 126,174 25,104 92,55 171,89 164,131 95,183 200,1", "96 153,17 44,129 14,177 86,139 182,54 32,47 126,11", "1 18,199 60,75 110,73 88,105 45,15 71,70 126,77 10", "0,121 139,93 54,7 178,184 36,29 132,136 81,158 130", ",81 28,66 189,40 26,116 138,164 9,182 157,160 45,9", "7 164,32 45,1 166,36 67,79 125,64 153,8 156,145 32", ",64 112,133 105,24 115,97 89,41 182,72 30,155 195,", "4 199,181 101,60 198,180 139,60 175,32 17,81 16,13", "6 38,60 124,78 38,136 146,36 161,181 159,48 58,122", " 32,51 75,183 101,36 88,45 35,173 130,2 182,85 7,5", "1 110,84 177,92 172,81 162,90 109,85 138,109 169,1", "2 32,129 144,153 37,136 173,145 46,121 180,197 125", ",23 140,5 12,87 163,150 68,23 61,103 94,136 183,11", "2 114"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 244635848;
    if(result == expected) {
        cout << "Test Case 229: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 229: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test230() {
    int n = 200;
    vector<string> edges = {"178 103,173 43,16 56,35 128,133 178,151 189,66 182", ",7 197,8 19,86 40,16 46,35 166,64 135,151 50,128 1", "88,147 197,165 31,101 115,101 67,168 187,53 134,10", "6 120,190 182,58 155,151 101,150 151,193 38,183 67", ",184 94,153 198,185 158,111 160,4 127,160 190,60 3", "9,70 87,94 175,55 63,130 53,117 80,79 167,78 37,13", "5 77,180 72,136 36,138 118,76 104,190 172,157 75,8", " 155,60 118,151 57,176 89,17 144,71 1,78 101,185 5", "9,22 58,131 135,25 75,44 190,117 190,68 135,3 118,", "173 48,127 143,176 156,82 139,102 174,91 161,72 71", ",51 78,144 199,46 105,116 140,184 63,23 97,127 71,", "184 33,27 14,91 71,125 177,62 181,125 174,6 18,99 ", "96,118 190,181 15,134 20,32 134,118 164,151 87,71 ", "151,171 44,163 49,155 62,153 98,156 135,135 83,179", " 92,72 109,155 200,42 122,31 84,62 116,124 99,118 ", "106,191 101,123 108,88 47,63 129,24 162,23 29,79 1", "55,124 96,81 119,160 9,10 128,73 2,9 21,190 71,69 ", "110,98 198,110 195,112 92,101 136,101 97,137 37,90", " 1,149 135,52 187,101 141,178 71,135 63,118 154,10", "5 56,197 200,55 148,11 193,11 38,62 75,65 71,19 41", ",61 171,54 22,63 49,32 53,62 40,65 169,175 184,30 ", "173,123 165,17 199,154 162,71 168,11 135,86 45,58 ", "54,101 47,158 59,159 172,155 135,63 101,10 142,151", " 192,1 114,133 103,102 177,13 151,101 30,174 155,5", "9 62,63 139,186 141,118 62,157 25,17 71,170 26,28 ", "107,189 34,151 32,135 152,69 118,64 74,108 71,44 5", ",84 108,151 128,129 194,170 79,69 195,200 147,48 3", "0,24 154,4 143,97 29,105 190,126 32,184 196,37 51,", "122 118,109 180,168 52,90 114,62 104,41 8,61 5,115", " 93,167 26,111 21,191 146,62 92,63 6,63 2,40 45,12", " 71,29 95,100 64,63 14,100 74,62 98,35 10,118 107,", "62 121,12 113,150 145,112 179,155 96,156 89,132 13", "5,85 62,63 119"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 240865345;
    if(result == expected) {
        cout << "Test Case 230: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 230: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test231() {
    int n = 200;
    vector<string> edges = {"169 62,27 103,138 61,97 142,81 62,164 39,109 97,92", " 175,127 102,38 133,177 103,77 11,24 44,163 74,187", " 2,62 128,131 174,62 101,103 164,70 1,109 90,140 1", "30,174 15,182 69,22 55,103 35,129 158,15 69,145 33", ",188 80,154 185,146 181,185 172,175 170,78 165,25 ", "172,103 29,98 73,69 62,34 103,10 120,120 62,181 12", "8,62 161,177 108,99 55,123 72,92 69,8 80,157 149,6", "9 140,113 5,98 63,153 186,188 103,66 48,96 193,184", " 92,84 60,64 125,52 2,56 4,60 8,82 22,101 137,111 ", "115,128 146,28 14,169 176,152 151,114 132,62 4,22 ", "34,49 44,124 40,87 90,190 103,103 160,138 77,182 1", "49,136 10,66 88,89 134,143 153,135 16,135 7,118 89", ",80 59,165 104,63 62,114 103,83 43,60 188,91 195,1", " 180,129 12,112 45,20 184,138 66,68 52,107 14,6 69", ",168 121,26 101,147 40,20 170,71 12,155 67,190 166", ",13 148,179 55,94 27,150 111,137 75,81 38,133 36,1", "4 9,34 99,155 79,180 70,42 58,49 24,153 69,162 68,", "69 77,187 103,15 145,116 139,125 183,123 143,131 3", "3,125 119,118 134,32 72,72 186,86 166,160 65,193 1", "73,11 88,192 178,199 4,141 50,67 79,62 40,136 110,", "3 126,78 140,41 65,166 30,69 45,178 190,29 91,152 ", "69,23 46,53 182,103 158,62 111,26 93,100 191,76 12", "1,141 106,57 110,7 16,56 199,99 31,58 62,24 103,14", "7 124,39 159,67 62,139 29,23 47,21 170,120 57,161 ", "74,51 103,90 19,126 37,108 197,115 150,58 50,103 6", "2,62 89,163 95,69 142,103 46,183 6,9 152,27 122,14", "4 139,102 103,157 200,54 64,164 193,91 116,62 16,3", "5 18,94 122,18 196,167 165,103 69,17 76,156 131,45", " 25,158 100,51 5,47 46,81 105,95 198,180 62,130 16", "7,198 161,176 3,107 151,68 187,171 175,194 2,86 17", "8,53 200,43 85,85 83,196 35,17 148,58 106,62 83,11", "7 129,169 37,142 19,75 93,63 73,197 177,200 189,12", " 100,54 6,105 36,173 39,185 112,69 148,13 121,113 ", "51,41 160"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 949554225;
    if(result == expected) {
        cout << "Test Case 231: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 231: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test232() {
    int n = 200;
    vector<string> edges = {"59 13,155 47,123 153,150 104,85 123,73 143,63 158,", "88 112,188 83,127 131,38 140,163 54,35 19,120 140,", "65 138,1 22,54 3,86 40,32 199,193 131,147 17,162 1", "66,36 27,107 176,6 179,31 107,44 40,18 108,86 116,", "132 145,176 46,119 40,98 127,55 39,96 24,35 85,147", " 199,196 178,183 40,40 12,181 21,50 111,166 140,45", " 61,54 160,75 147,166 14,45 136,110 76,67 71,169 2", "7,24 59,123 193,48 166,2 125,186 194,168 6,105 96,", "54 40,53 34,21 89,123 79,92 62,118 72,147 43,113 1", "23,52 198,90 152,123 133,147 181,92 200,93 8,23 54", ",123 7,60 116,160 55,144 155,2 123,54 167,54 166,1", "03 197,93 85,27 147,67 182,165 164,149 185,100 5,1", "14 40,154 114,25 178,105 159,37 189,165 184,126 15", "8,194 85,16 95,85 112,187 159,16 101,30 23,191 128", ",32 42,37 54,14 178,135 44,182 40,151 188,40 107,1", "36 161,47 123,166 161,128 166,147 69,185 91,174 19", "1,107 92,29 54,15 147,170 54,187 139,40 188,68 173", ",147 84,14 105,54 143,125 146,78 17,175 85,80 123,", "38 120,40 11,146 97,40 148,181 89,130 197,107 9,17", "2 166,119 90,108 123,9 179,147 107,166 134,115 157", ",18 156,177 198,173 85,129 56,118 75,200 70,25 56,", "95 40,83 151,164 184,41 166,62 70,85 82,128 174,75", " 72,121 85,81 166,47 144,166 137,77 3,54 190,163 1", "17,26 54,53 107,85 33,109 123,132 58,122 88,108 15", "6,160 39,177 40,147 64,193 98,152 119,142 147,60 8", "6,169 36,104 40,74 84,106 11,29 51,147 102,74 99,9", " 168,166 195,171 85,66 1,166 76,76 65,58 145,171 1", "41,97 2,110 138,196 63,40 111,177 52,180 31,124 43", ",123 10,139 13,20 69,42 199,197 147,61 161,147 91,", "99 84,100 147,123 57,28 40,33 49,4 148,112 122,85 ", "147,64 94,130 103,22 54,66 22,95 101,182 71,91 149", ",164 40,85 192,129 126,166 87,147 157,14 123,58 85"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 116113712;
    if(result == expected) {
        cout << "Test Case 232: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 232: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test233() {
    int n = 200;
    vector<string> edges = {"92 97,93 43,126 186,9 29,175 14,23 184,4 85,37 94,", "111 97,199 150,3 130,127 23,190 183,61 15,82 124,1", "49 121,122 145,105 159,1 179,128 141,100 72,137 74", ",79 23,37 161,129 65,87 185,102 63,98 43,48 9,153 ", "77,62 100,17 22,167 137,14 155,129 47,113 186,195 ", "71,131 173,12 37,142 193,38 147,79 129,135 149,74 ", "37,23 115,72 62,19 131,48 144,95 64,22 182,181 196", ",164 190,18 196,158 102,81 129,53 31,199 75,128 67", ",145 51,156 94,23 166,66 190,146 23,93 7,85 71,64 ", "114,125 4,79 63,55 90,17 38,162 194,152 153,99 91,", "191 127,76 99,24 23,161 61,73 111,10 60,113 31,14 ", "131,58 171,190 112,91 74,179 40,109 190,135 104,63", " 97,35 30,154 121,40 23,95 114,132 6,48 29,101 6,9", "6 50,32 163,49 116,101 132,63 46,94 67,129 93,89 1", "28,198 139,103 174,193 57,8 25,35 59,123 198,59 74", ",53 126,147 34,63 87,129 153,112 135,74 44,15 161,", "108 23,68 12,182 17,38 74,106 52,102 106,56 147,20", "0 177,129 13,69 14,136 124,171 18,130 153,195 118,", "86 49,43 143,28 46,74 86,59 30,122 74,112 138,38 1", "03,117 178,44 70,105 200,38 170,16 167,149 11,169 ", "185,37 63,170 190,82 136,97 73,189 90,23 170,20 15", "7,153 42,24 107,28 176,156 27,41 26,163 105,46 176", ",80 23,149 165,198 148,50 189,88 43,110 190,187 14", ",174 83,134 181,129 2,122 51,116 86,16 137,23 117,", "169 87,68 192,142 57,75 150,58 134,38 31,196 10,85", " 172,172 118,56 34,112 78,37 124,54 20,197 23,27 1", "41,84 93,55 74,23 162,184 140,89 119,76 91,5 135,6", "3 85,38 48,121 14,1 40,103 168,43 160,43 33,153 21", ",52 102,83 103,63 57,189 54,151 130,133 63,37 101,", "112 45,39 14,139 43,199 38,36 153,41 31,112 120,17", "1 37,25 133,38 72,44 159,190 131,192 12,70 32,198 ", "130,37 64,180 112,8 133,55 157,188 139"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 945798773;
    if(result == expected) {
        cout << "Test Case 233: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 233: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test234() {
    int n = 200;
    vector<string> edges = {"184 85,106 101,109 125,154 158,170 52,90 81,109 17", "8,66 75,86 60,85 37,44 181,164 107,8 177,54 23,194", " 140,150 131,121 193,60 85,75 41,192 22,7 163,41 1", "07,109 7,34 52,73 144,85 109,91 52,136 5,36 142,11", "5 85,140 85,108 14,41 68,169 107,38 123,41 2,41 15", ",109 199,198 52,187 100,102 52,157 130,141 102,111", " 148,12 27,175 82,73 57,109 192,40 182,4 107,43 70", ",98 146,32 85,159 107,38 11,167 107,52 133,150 197", ",147 104,126 85,85 56,132 65,128 115,191 47,88 143", ",52 185,109 51,98 48,109 19,184 77,37 72,24 170,97", " 13,190 60,56 89,195 107,107 109,35 189,109 9,75 6", "9,55 85,102 1,109 153,16 90,82 41,181 109,196 155,", "150 67,181 186,1 26,128 139,171 126,85 39,25 107,1", "42 182,144 57,67 197,162 200,191 135,85 20,52 41,1", "5 46,41 57,34 70,74 46,54 173,179 95,132 41,93 84,", "117 61,112 147,63 28,50 83,174 126,13 10,37 53,103", " 142,161 193,52 188,149 100,115 139,41 105,142 40,", "120 132,109 62,164 71,140 64,180 55,14 166,11 41,1", "72 125,97 10,183 178,106 96,41 58,107 106,109 119,", "41 108,107 87,41 83,59 66,52 17,107 189,61 30,176 ", "181,85 165,94 179,42 6,121 161,124 181,48 146,107 ", "114,55 80,85 149,47 135,41 146,13 109,63 58,24 113", ",113 170,96 101,52 85,194 29,162 49,102 26,69 59,7", "6 85,86 190,33 147,149 187,163 143,33 104,191 107,", "129 179,156 89,198 79,127 42,133 160,127 6,108 166", ",64 29,65 120,193 41,109 142,23 151,117 30,137 76,", "107 127,167 134,43 34,5 85,152 109,58 28,49 200,18", "8 122,107 93,177 45,30 52,41 154,173 107,88 7,109 ", "177,41 92,124 186,175 138,107 179,107 155,3 150,15", " 74,107 150,109 12,53 72,85 200,32 78,16 81,123 11", ",31 119,95 99,105 116,174 171,85 118,156 56,111 52", ",145 165,52 18,168 32,52 147,82 138,45 8,80 180,16", "8 78,109 81,173 151,99 179,110 109,107 21,41 157"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 879557517;
    if(result == expected) {
        cout << "Test Case 234: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 234: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test235() {
    int n = 200;
    vector<string> edges = {"9 51,112 89,91 114,78 174,131 200,18 111,34 113,13", "2 200,74 119,174 69,200 151,122 72,37 70,178 41,18", " 2,192 144,199 160,146 189,122 104,8 164,8 156,200", " 88,87 167,138 176,198 10,19 96,45 114,25 80,22 19", "4,147 170,99 188,122 82,91 18,125 200,169 115,49 1", "49,166 162,121 56,189 84,44 94,148 176,111 89,48 6", "2,177 34,122 111,14 97,84 124,4 95,11 171,104 25,1", "6 157,84 75,68 148,58 175,187 142,153 156,18 187,9", "9 128,72 30,184 176,162 18,154 54,59 194,79 26,52 ", "183,12 120,55 65,101 136,82 23,51 117,67 178,98 15", "4,78 73,170 77,92 200,163 17,79 63,86 158,13 10,28", " 102,53 33,90 194,126 12,11 181,131 64,5 104,191 1", "67,200 137,35 47,166 145,127 108,154 122,65 1,99 1", "68,33 200,180 46,18 84,165 105,187 28,190 7,178 83", ",182 2,9 117,13 198,24 71,8 18,8 3,111 194,81 91,1", "00 2,122 121,73 69,104 80,107 37,74 137,90 22,122 ", "183,143 173,200 160,65 18,31 142,15 200,181 161,40", " 162,183 36,193 101,132 152,3 179,200 190,73 111,1", "77 92,44 62,144 110,157 140,167 21,178 32,147 122,", "13 200,37 122,162 145,172 81,173 103,158 61,147 77", ",65 130,85 121,122 173,183 20,65 14,178 122,15 140", ",185 158,19 196,120 126,12 60,151 186,167 135,6 37", ",68 176,42 186,91 39,192 111,197 89,158 109,195 27", ",76 150,115 122,12 106,200 195,43 110,54 98,133 11", "8,200 18,122 101,167 122,122 76,194 141,192 43,38 ", "76,16 15,49 118,200 122,89 123,105 162,2 95,85 57,", "196 96,88 63,109 61,136 193,71 200,125 46,67 83,99", " 122,2 4,188 128,75 66,112 197,38 150,155 127,122 ", "96,108 200,12 111,116 163,111 158,134 17,47 72,57 ", "121,155 108,111 161,187 29,111 176,116 134,58 200,", "149 133,180 125,172 91,200 50,55 130,129 104,93 18", "2,66 84,89 139,103 143,200 9,111 118,26 88,87 191,", "111 48,151 42,187 31,153 8,92 113,72 35,163 111,16", "1 171,94 48,36 20,159 50,119 137,107 70"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 781550953;
    if(result == expected) {
        cout << "Test Case 235: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 235: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test236() {
    int n = 200;
    vector<string> edges = {"124 200,187 200,22 101,139 148,155 117,84 193,64 4", "2,64 38,56 125,6 70,193 170,58 122,200 53,148 45,9", "4 198,176 53,200 18,53 175,106 130,137 59,117 141,", "111 144,63 115,182 120,198 190,54 196,175 14,200 1", "65,146 182,124 98,189 37,53 147,137 110,169 181,12", "3 6,54 6,85 24,53 135,50 53,100 3,15 59,79 12,160 ", "163,107 74,156 171,26 67,153 41,58 124,53 67,149 1", "52,129 138,167 168,143 25,177 23,22 161,53 8,143 1", "73,200 128,6 76,145 68,53 12,139 126,200 52,25 19,", "140 148,186 87,200 90,20 9,171 99,174 48,136 30,12", "8 197,200 170,53 160,93 165,63 53,165 192,53 16,39", " 6,114 53,61 72,150 154,53 138,49 167,191 200,6 15", "7,44 166,179 16,76 111,130 135,81 164,200 198,107 ", "29,200 109,125 151,53 47,194 82,53 35,21 133,164 1", "51,122 98,137 200,113 11,90 34,120 146,51 69,153 7", "2,141 78,184 99,32 102,145 5,1 47,28 9,6 3,116 66,", "7 159,26 119,6 53,88 199,194 135,6 120,50 48,102 5", "3,131 110,152 53,200 78,155 78,7 200,109 40,48 60,", "17 129,112 49,53 133,118 172,174 134,99 200,188 17", "5,113 55,36 153,43 147,77 73,133 180,172 200,89 13", ",83 33,168 112,53 161,72 36,6 45,95 80,132 10,18 4", "6,1 4,192 105,77 149,94 96,73 152,174 50,38 52,177", " 6,17 86,184 156,187 97,47 10,200 92,200 68,27 92,", "6 151,101 162,8 143,121 123,91 200,142 129,167 53,", "55 35,93 105,113 35,91 150,186 108,190 96,84 75,57", " 30,183 2,8 25,87 200,136 53,18 169,200 29,200 51,", "66 12,200 6,127 199,45 139,119 158,103 180,57 178,", "170 75,6 166,110 59,91 89,20 200,52 42,104 176,88 ", "191,162 161,188 195,130 194,37 29,20 71,67 158,116", " 79,17 138,10 1,178 136,71 28,125 164,95 87,191 19", "9,68 85,55 62,150 89,185 114,46 31,195 14,37 107,4", "6 169,65 88,95 186,76 144,103 21,145 85,83 53,53 3", "6,2 6"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 395993023;
    if(result == expected) {
        cout << "Test Case 236: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 236: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test237() {
    int n = 200;
    vector<string> edges = {"128 42,178 38,151 57,159 126,25 78,30 73,30 86,139", " 39,55 179,80 67,18 131,68 117,143 22,162 186,62 1", "68,135 148,83 26,97 42,145 139,110 109,144 26,68 8", "9,15 82,78 112,173 178,127 126,152 106,178 170,42 ", "179,187 138,118 64,169 100,37 139,149 126,184 78,2", "1 25,139 119,186 124,194 81,13 61,7 9,7 48,27 68,3", "7 126,199 40,69 160,180 87,117 44,106 33,162 130,1", "60 60,136 55,140 106,164 133,194 52,108 106,117 12", "0,167 120,22 52,158 39,1 78,147 19,151 38,137 155,", "192 167,175 198,97 107,185 103,172 11,105 178,25 1", "56,59 9,147 39,52 183,12 126,142 117,139 87,50 101", ",68 146,68 76,13 126,95 131,65 78,137 163,20 47,68", " 122,68 126,73 84,54 139,7 128,192 120,108 64,139 ", "15,104 117,107 62,176 3,129 142,43 130,155 39,63 2", "5,174 184,106 157,139 175,94 79,117 52,10 168,6 45", ",86 17,56 39,129 98,39 185,164 26,134 25,26 8,117 ", "36,113 68,51 177,128 9,106 78,165 126,88 117,153 9", "0,39 200,190 2,178 11,18 95,63 51,37 154,108 118,1", "48 16,115 12,97 10,92 78,121 26,42 26,83 161,91 54", ",171 49,178 43,141 117,181 99,195 147,196 166,43 1", "24,58 106,66 194,98 142,81 66,25 42,47 68,32 25,26", " 178,125 52,28 78,199 39,85 189,188 68,26 187,5 13", "9,114 72,52 150,147 191,181 126,117 93,79 154,24 1", "46,8 46,16 171,109 56,26 14,71 121,37 60,25 67,197", " 90,4 112,117 34,163 155,190 78,106 96,75 25,39 17", "1,193 26,56 132,68 74,122 123,6 196,3 69,18 106,39", " 70,60 176,84 17,57 38,53 78,106 52,73 37,126 90,1", "39 182,147 178,135 49,179 72,23 106,139 31,77 52,3", "1 116,101 25,189 154,178 100,111 166,197 153,45 11", "1,41 110,178 166,136 114,79 189,63 177,102 78,132 ", "41,35 26,134 29"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 355761971;
    if(result == expected) {
        cout << "Test Case 237: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 237: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test238() {
    int n = 200;
    vector<string> edges = {"66 30,48 84,199 124,100 53,30 87,153 146,140 69,11", "9 133,4 140,133 159,81 140,127 59,192 154,133 27,7", "3 30,30 33,7 93,128 127,20 94,196 30,191 150,89 90", ",139 189,4 86,92 175,1 2,30 57,116 30,61 6,105 119", ",140 75,44 65,192 83,53 21,196 34,98 74,199 22,166", " 159,42 180,6 93,133 173,27 180,106 63,97 4,84 91,", "92 27,192 76,30 55,85 84,54 194,60 30,84 191,69 15", "1,12 4,94 158,84 176,109 140,152 130,53 144,28 194", ",142 125,27 196,149 67,80 69,80 188,194 6,194 4,93", " 192,15 99,130 94,86 16,69 132,148 93,197 3,162 84", ",18 140,162 125,133 153,46 53,156 198,183 196,59 1", "28,114 17,15 136,122 196,30 104,174 179,194 164,16", "1 132,6 98,80 38,4 1,92 181,123 53,82 6,196 79,108", " 131,59 156,15 115,120 107,173 37,156 84,84 94,10 ", "6,62 140,50 53,100 107,196 182,140 43,110 39,137 7", "0,194 68,134 140,22 72,95 17,103 119,115 94,32 69,", "168 194,88 84,22 165,148 111,192 143,140 121,119 1", "78,167 31,30 100,69 96,189 19,119 192,194 44,23 14", "0,84 185,117 157,138 195,35 114,163 200,9 35,25 69", ",12 118,156 197,155 200,156 17,72 124,17 19,196 14", "7,99 115,186 14,89 133,53 112,108 171,24 94,179 11", "7,139 19,17 171,4 13,145 84,101 13,163 155,71 7,18", "7 140,194 141,194 40,188 38,77 3,140 45,133 14,17 ", "53,84 11,39 4,93 56,197 77,119 47,76 129,68 5,140 ", "51,172 56,8 150,138 95,177 119,126 140,194 193,120", " 149,190 7,142 162,196 135,200 36,191 8,169 30,184", " 137,71 190,170 119,41 119,102 53,49 24,20 64,4 63", ",119 167,171 131,124 100,184 70,114 9,156 184,29 6", "1,194 78,175 181,97 58,52 149,113 158,160 119,52 1", "07,95 195,94 69,26 53,179 157,192 155,157 192"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 896539590;
    if(result == expected) {
        cout << "Test Case 238: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 238: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test239() {
    int n = 200;
    vector<string> edges = {"16 95,121 81,29 91,14 142,181 96,108 179,128 151,1", "00 183,48 159,31 61,139 9,30 81,90 164,166 81,120 ", "176,63 146,81 139,48 13,139 83,14 36,81 112,16 127", ",79 42,8 16,48 192,188 81,81 11,21 70,16 48,74 25,", "86 16,39 48,135 48,107 48,89 48,77 130,19 48,44 68", ",180 48,184 131,96 2,196 189,16 169,16 28,153 48,1", "30 16,132 49,170 74,94 199,25 170,104 48,20 81,161", " 16,81 126,137 38,117 71,138 197,176 16,81 149,167", " 123,127 133,16 5,48 29,108 50,48 168,72 144,195 5", "4,51 165,143 55,157 96,35 90,65 16,134 22,48 182,1", "6 114,154 48,48 162,102 121,186 85,76 7,1 98,42 16", ",16 80,97 48,116 27,23 81,33 97,81 103,69 105,150 ", "48,116 54,16 25,111 16,158 81,165 48,31 190,134 12", "7,41 47,143 147,61 190,59 81,142 36,99 113,112 144", ",75 181,110 180,9 119,34 149,151 20,101 140,114 88", ",56 16,129 16,98 48,126 50,15 43,179 126,58 16,34 ", "37,4 129,175 68,120 26,7 193,76 193,44 114,133 22,", "37 124,20 128,183 81,15 178,48 73,32 48,48 78,48 4", "6,105 67,16 81,115 48,48 187,16 6,191 194,137 56,6", "4 152,101 81,53 52,35 164,96 81,47 129,155 192,200", " 62,16 116,85 81,185 48,21 81,131 102,109 81,16 17", "8,31 16,20 145,113 42,121 184,194 21,48 173,18 198", ",24 172,25 45,84 176,81 36,169 148,56 92,57 72,49 ", "198,93 81,99 42,81 122,69 67,48 87,123 16,17 81,19", "6 86,52 125,174 125,40 177,189 106,64 81,119 83,4 ", "41,118 48,118 141,81 49,48 12,157 75,160 16,65 60,", "149 124,53 174,60 40,70 191,81 69,55 147,132 18,16", " 82,118 138,156 48,106 86,197 141,158 163,81 3,24 ", "48,76 81,92 38,177 65,178 43,84 26,175 114,53 16,8", "5 199,10 69,81 63,48 81,16 136,62 48,55 16,66 16,8", "1 90,171 161,186 94,112 57,195 27,16 117"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 636512028;
    if(result == expected) {
        cout << "Test Case 239: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 239: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test240() {
    int n = 200;
    vector<string> edges = {"169 76,82 105,181 163,188 64,44 76,104 199,36 4,13", "1 68,154 60,97 191,6 82,72 71,172 155,157 199,76 5", "2,64 22,64 88,40 121,43 122,150 134,31 64,59 176,7", "6 45,82 172,191 153,82 27,61 111,178 41,58 126,116", " 199,101 83,22 164,199 122,110 64,60 66,65 109,53 ", "15,115 96,67 24,17 173,20 51,50 107,176 5,159 76,8", "1 28,129 20,151 56,195 199,75 125,73 56,76 11,61 1", "18,76 82,55 124,117 69,82 55,106 199,199 114,190 1", "79,200 117,12 88,15 107,65 32,136 133,181 82,21 76", ",190 89,74 163,54 76,64 15,123 141,192 81,14 185,1", "8 135,103 76,29 194,194 76,64 72,175 76,173 62,49 ", "123,15 123,197 182,76 127,62 190,140 64,64 156,64 ", "91,199 190,90 33,119 15,62 17,105 111,120 64,191 1", "31,192 76,190 174,148 72,134 64,167 72,143 76,130 ", "79,76 184,73 190,76 170,74 93,91 162,126 168,49 20", "0,64 166,64 19,105 171,199 138,76 180,16 103,66 15", "4,169 34,63 64,168 58,92 72,15 101,147 76,8 68,199", " 137,118 70,18 172,15 136,130 15,191 121,3 199,190", " 82,64 158,190 109,40 94,72 76,37 64,196 199,125 1", "91,146 64,64 38,186 84,87 179,199 108,59 128,79 67", ",121 94,80 189,191 199,10 15,64 58,5 128,82 80,171", " 70,199 77,184 99,76 177,132 72,113 190,193 198,57", " 76,30 159,48 72,1 82,72 154,85 82,84 64,35 39,183", " 72,46 174,131 8,33 82,41 97,89 2,145 64,9 72,86 1", "99,149 76,36 64,72 160,28 192,141 69,97 178,174 98", ",142 76,13 191,197 15,187 57,161 15,102 1,130 24,1", "55 135,64 112,9 23,73 151,191 35,51 129,191 51,42 ", "188,191 95,109 32,153 7,15 176,47 82,191 15,76 25,", "46 98,93 181,190 115,199 78,100 147,64 139,85 152,", "64 198,10 26,165 199,76 185,144 190"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 567886081;
    if(result == expected) {
        cout << "Test Case 240: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 240: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test241() {
    int n = 200;
    vector<string> edges = {"61 104,53 153,123 43,64 44,98 79,170 108,66 110,10", "0 24,83 100,80 70,9 114,168 56,140 31,65 123,120 6", "6,146 5,34 63,14 154,123 25,66 149,11 123,116 62,1", "01 178,183 116,52 142,169 66,28 46,138 124,36 123,", "68 123,161 123,123 96,7 151,77 140,88 46,176 123,8", "8 28,18 66,29 84,108 178,60 132,59 90,150 178,70 1", "78,49 61,180 66,67 97,139 103,178 117,167 139,183 ", "85,100 154,90 49,178 71,160 192,88 178,66 22,173 1", "23,66 89,133 35,69 38,118 191,183 49,148 43,171 49", ",55 159,52 104,6 135,66 146,26 183,37 84,188 10,81", " 66,141 66,108 76,59 4,52 1,183 195,183 72,56 2,66", " 7,166 183,123 33,173 75,104 84,123 99,109 121,30 ", "76,192 178,123 164,183 123,198 89,136 178,30 170,9", "7 178,99 20,123 102,113 98,91 66,21 80,106 82,51 8", "3,14 144,25 185,177 183,23 123,183 39,152 66,139 1", "19,196 21,58 45,109 93,183 182,17 178,66 125,21 70", ",139 140,174 183,143 130,194 123,178 162,183 153,6", "6 90,171 56,44 9,193 155,81 111,165 133,200 134,66", " 127,19 178,131 9,66 109,112 28,37 29,32 123,123 4", "2,68 115,33 190,189 126,56 58,157 85,54 165,168 13", "5,9 165,154 74,134 44,177 181,135 94,117 3,165 98,", "184 120,83 95,66 178,159 4,187 12,160 57,84 186,17", "8 118,129 178,199 123,166 175,50 66,183 34,179 64,", "123 187,183 128,192 57,27 47,129 172,16 119,10 123", ",83 24,163 59,174 92,13 152,126 66,165 27,135 145,", "144 154,122 66,24 49,168 171,159 98,183 60,8 71,48", " 123,158 56,86 44,119 59,40 105,41 159,147 178,121", " 93,38 52,140 15,98 73,66 87,183 40,123 130,82 66,", "78 123,6 145,80 156,178 123,155 4,46 197,44 140,61", " 52,66 137,16 107,83 124"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 964101959;
    if(result == expected) {
        cout << "Test Case 241: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 241: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test242() {
    int n = 200;
    vector<string> edges = {"175 31,55 23,75 103,132 57,60 13,79 148,146 37,174", " 152,180 191,31 185,123 98,75 81,73 68,82 33,6 30,", "162 132,20 14,190 54,158 165,162 33,158 173,139 46", ",197 178,48 143,106 162,74 129,193 49,104 147,68 1", "05,1 49,23 155,159 46,136 107,21 16,23 187,142 48,", "68 100,172 37,21 37,110 27,39 136,30 166,110 68,13", "1 23,48 60,46 4,126 23,149 37,46 7,153 37,48 160,5", " 167,98 138,194 30,34 46,152 17,37 2,48 41,151 33,", "109 49,98 161,49 113,100 63,110 167,77 167,98 72,1", "4 30,186 136,145 33,15 98,104 137,48 67,46 171,3 1", "15,49 58,79 61,44 7,137 147,33 188,46 197,162 51,1", "62 152,119 37,68 64,76 167,136 184,107 192,162 32,", "177 144,97 46,112 100,25 176,52 68,176 98,35 97,87", " 162,165 173,24 23,30 37,46 152,127 30,152 177,98 ", "68,107 54,37 170,68 26,23 182,50 23,8 75,189 136,7", "5 120,98 108,89 182,70 30,61 148,48 75,107 88,48 1", "79,37 45,128 68,95 37,116 30,37 19,165 162,30 9,12", "1 98,56 136,131 111,66 20,200 33,98 46,136 94,59 3", "8,75 136,71 98,141 46,68 92,37 129,3 98,134 30,68 ", "10,124 98,91 48,75 181,78 33,14 66,175 68,33 199,9", "0 75,150 98,23 164,107 69,75 42,23 195,133 98,5 76", ",40 68,43 37,99 68,152 96,185 175,114 23,117 68,16", "2 84,110 30,168 49,46 28,136 137,38 37,156 98,23 1", "07,125 98,108 118,154 49,198 49,93 30,191 23,30 62", ",157 11,48 53,11 49,112 63,30 102,107 196,65 68,47", " 37,152 86,37 23,163 186,183 103,152 22,30 169,24 ", "18,83 98,130 37,36 75,80 140,46 80,98 122,135 151,", "61 30,33 49,12 46,85 33,29 37,107 101,48 49"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 688240731;
    if(result == expected) {
        cout << "Test Case 242: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 242: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test243() {
    int n = 200;
    vector<string> edges = {"174 153,95 42,174 4,183 62,61 97,41 154,16 41,36 1", "74,123 20,86 47,123 69,174 120,61 179,28 174,54 19", ",21 41,44 99,121 174,99 146,166 111,108 98,64 92,1", "40 154,157 110,124 122,147 41,102 45,41 173,182 14", "1,99 71,99 134,187 41,41 117,61 12,174 85,99 41,15", "5 41,133 15,33 86,28 129,26 152,80 128,51 166,73 4", "1,171 1,127 166,99 188,70 127,32 143,29 41,99 185,", "141 100,120 79,130 99,83 30,100 182,25 113,46 81,6", " 139,131 111,174 190,105 174,99 144,142 99,174 1,1", "12 99,9 5,149 67,38 99,174 66,39 58,143 99,103 174", ",44 40,41 50,99 89,95 53,6 74,166 42,41 145,175 17", "4,174 70,104 41,60 181,66 35,158 174,48 150,169 13", ",163 174,99 87,119 158,99 132,17 61,189 18,166 67,", "78 99,92 62,4 169,56 52,54 99,109 99,99 107,156 16", "7,139 74,15 174,65 162,174 88,163 126,137 50,111 1", "98,194 25,70 41,41 26,99 68,196 54,161 148,182 41,", "41 135,92 183,41 14,133 118,69 174,115 99,158 200,", "41 172,55 111,102 41,31 75,167 111,99 174,15 118,3", "7 76,127 193,174 22,43 7,83 99,84 151,138 99,41 75", ",99 27,176 2,91 111,99 164,57 11,53 42,160 99,168 ", "99,41 65,186 41,18 174,116 99,111 61,33 47,99 82,9", "1 96,114 93,77 41,24 90,99 180,5 174,174 165,41 13", "6,4 13,150 41,61 2,174 195,157 41,18 3,111 197,192", " 193,60 41,39 41,72 165,52 64,127 64,99 23,99 24,4", "1 47,63 41,43 61,170 41,174 98,178 41,61 64,195 19", "9,117 10,20 69,174 113,148 174,3 189,151 99,111 18", "4,174 159,76 174,113 194,125 134,59 104,104 191,19", "1 59,93 64,174 139,128 174,99 34,131 8,200 119,49 ", "12,11 99,177 36,46 174,122 127,51 106,14 94,196 19", ",61 101"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 558284405;
    if(result == expected) {
        cout << "Test Case 243: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 243: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test244() {
    int n = 200;
    vector<string> edges = {"60 122,189 130,130 114,148 150,74 53,88 74,74 196,", "145 57,83 119,185 150,74 109,180 67,74 194,74 12,1", "30 58,7 59,154 149,150 162,130 113,107 88,101 130,", "142 1,66 74,98 8,11 120,130 49,23 130,31 150,150 2", "2,69 2,95 67,157 8,174 199,21 111,117 137,150 144,", "50 88,130 174,151 150,7 105,89 67,83 150,59 195,8 ", "67,20 14,17 7,137 8,123 186,191 67,200 67,48 135,5", " 8,149 74,27 57,8 168,8 38,62 8,29 88,139 156,130 ", "146,86 130,67 176,150 159,150 96,88 99,132 88,121 ", "74,143 88,139 3,8 115,7 153,190 8,88 164,34 130,67", " 10,177 7,46 175,43 8,180 118,129 130,73 175,141 8", "8,51 14,3 8,148 92,155 175,7 127,150 122,88 39,130", " 77,155 106,130 100,175 130,74 82,150 32,103 150,1", "25 175,130 104,8 71,188 8,140 74,126 37,19 67,130 ", "14,158 186,175 150,193 130,33 88,8 70,91 8,8 123,4", "7 128,150 152,24 8,71 183,74 150,8 142,28 67,175 3", "6,25 187,11 130,150 163,85 130,84 7,74 145,150 9,1", "73 67,74 133,55 7,97 143,61 109,7 181,26 88,27 145", ",2 88,54 88,74 48,189 102,172 174,130 7,179 136,17", "1 150,88 94,172 199,161 8,67 166,45 150,130 4,130 ", "76,81 8,112 79,18 7,8 198,52 91,88 37,72 147,93 17", "5,130 13,150 108,175 75,63 88,175 65,67 25,35 144,", "67 88,130 131,88 30,7 179,61 167,88 6,170 88,3 156", ",74 87,192 7,175 40,146 42,8 80,160 113,178 141,51", " 20,74 15,16 175,74 64,150 21,165 5,47 88,150 184,", "116 124,7 8,72 88,41 88,175 68,90 58,123 158,169 1", "75,116 175,150 197,110 26,112 150,22 182,8 134,138", " 88,56 67,44 8,78 130,109 167"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 513529302;
    if(result == expected) {
        cout << "Test Case 244: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 244: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test245() {
    int n = 200;
    vector<string> edges = {"199 141,85 32,179 2,44 34,38 107,71 97,97 22,193 1", "95,107 100,10 107,26 100,133 130,180 162,17 26,23 ", "98,92 88,42 13,108 63,162 71,196 141,111 41,101 85", ",180 115,7 173,69 141,100 192,40 100,167 15,133 17", "9,17 94,166 129,72 166,75 100,141 136,14 133,192 3", "9,113 5,85 141,100 120,29 85,141 122,22 174,117 11", "5,148 15,128 85,191 33,64 100,85 52,65 80,177 105,", "155 133,98 93,111 125,11 134,15 162,83 107,153 54,", "98 133,36 170,172 181,85 159,139 18,68 107,171 105", ",98 114,95 21,98 149,133 42,99 139,59 98,177 87,12", "6 107,73 48,185 145,35 98,81 103,156 70,7 85,116 1", "20,111 1,139 98,5 103,111 8,194 169,98 165,98 25,1", "12 85,132 85,13 151,174 71,8 197,75 19,141 121,14 ", "108,131 98,117 154,105 144,105 190,104 141,58 47,5", " 102,111 20,162 181,86 15,6 139,61 49,107 5,111 16", "2,16 85,33 181,141 198,139 100,169 88,92 194,46 98", ",15 157,43 64,200 98,182 7,107 189,75 45,49 111,50", " 15,152 164,7 135,100 175,53 62,63 14,183 139,141 ", "56,147 54,95 105,3 111,60 15,150 107,146 72,78 114", ",98 168,77 15,79 130,44 155,160 125,55 134,162 169", ",57 107,140 15,74 188,12 111,56 187,15 91,143 12,1", "41 96,7 62,138 15,98 51,27 98,85 176,133 111,67 14", "1,119 98,4 79,36 84,98 178,7 15,82 182,109 113,185", " 133,184 183,24 111,98 28,11 105,130 31,111 65,154", " 180,7 106,142 107,147 153,127 18,140 161,163 105,", "141 137,139 164,118 6,141 89,30 107,162 166,54 5,5", "5 11,19 45,85 66,5 105,124 68,36 100,98 90,76 105,", "84 170,141 105,139 156,172 191,107 123,7 48,94 26,", "146 129,4 31,155 34,107 74,151 42,47 100,200 186,1", "10 98,98 193,102 9,158 99,37 190"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 34424219;
    if(result == expected) {
        cout << "Test Case 245: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 245: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test246() {
    int n = 200;
    vector<string> edges = {"171 55,93 195,197 191,97 134,180 148,4 173,125 72,", "125 98,151 173,21 136,1 146,168 111,119 125,141 19", "5,52 99,122 165,143 21,66 63,141 82,168 37,55 99,1", "59 140,66 11,55 65,21 88,100 29,61 200,122 9,182 1", "03,157 93,133 55,159 113,91 21,61 131,122 7,127 11", ",66 77,31 99,45 118,186 125,168 64,168 150,66 51,5", "8 122,49 125,36 21,118 191,42 141,61 59,99 27,116 ", "113,14 168,108 119,142 110,175 93,19 118,86 140,14", "1 29,143 188,54 172,118 13,118 50,61 8,21 61,130 1", "68,163 118,54 163,196 119,66 112,162 44,180 125,43", " 55,92 195,99 75,122 104,122 2,99 83,139 128,195 2", "1,122 30,200 15,61 119,60 181,73 110,122 168,66 55", ",66 141,179 93,87 168,68 55,85 61,74 151,39 194,11", "8 70,189 106,122 166,142 163,99 123,174 66,185 122", ",181 189,66 44,120 96,61 79,99 152,21 41,122 56,16", "9 61,168 154,10 179,121 18,66 24,193 26,184 41,30 ", "33,12 16,137 21,61 22,128 141,61 101,124 38,4 158,", "157 10,55 129,32 142,168 192,80 125,92 145,62 66,1", " 181,167 42,122 153,161 55,54 39,182 118,46 9,55 4", "0,84 55,183 66,156 66,66 26,138 21,102 75,81 83,48", " 141,118 107,48 135,78 122,150 47,132 160,55 176,1", "72 194,168 99,4 195,28 58,65 164,55 89,57 165,35 1", "42,21 198,149 118,94 119,181 163,115 34,95 125,69 ", "108,122 181,122 23,55 187,132 181,86 113,177 91,18", "1 12,60 170,120 141,20 125,90 122,6 67,92 134,199 ", "168,122 126,38 66,117 119,25 125,168 190,109 97,73", " 35,71 61,82 53,118 125,168 114,115 119,5 105,61 6", "7,5 125,121 181,144 125,92 109,163 113,66 3,118 76", ",178 66,54 147,19 17,4 74,21 155"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 955847935;
    if(result == expected) {
        cout << "Test Case 246: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 246: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test247() {
    int n = 200;
    vector<string> edges = {"1 2,1 3,1 4,1 5,", "1 6,1 7,1 8,1 9,1 10,", "1 11,1 12,1 13,1 14,1 15,", "1 16,1 17,1 18,1 19,1 20,", "1 21,1 22,1 23,1 24,1 25,", "1 26,1 27,1 28,1 29,1 30,", "1 31,1 32,1 33,1 34,1 35,", "1 36,1 37,1 38,1 39,1 40,", "1 41,1 42,1 43,1 44,1 45,", "1 46,1 47,1 48,1 49,1 50,", "1 51,1 52,1 53,1 54,1 55,", "1 56,1 57,1 58,1 59,1 60,", "1 61,1 62,1 63,1 64,1 65,", "1 66,1 67,1 68,1 69,1 70,", "1 71,1 72,1 73,1 74,1 75,", "1 76,1 77,1 78,1 79,1 80,", "1 81,1 82,1 83,1 84,1 85,", "1 86,1 87,1 88,1 89,1 90,", "1 91,1 92,1 93,1 94,1 95,", "1 96,1 97,1 98,1 99,1 100,", "1 101,1 102,1 103,1 104,1 105,", "1 106,1 107,1 108,1 109,1 110,", "1 111,1 112,1 113,1 114,1 115,", "1 116,1 117,1 118,1 119,1 120,", "1 121,1 122,1 123,1 124,1 125,", "1 126,1 127,1 128,1 129,1 130,", "1 131,1 132,1 133,1 134,1 135,", "1 136,1 137,1 138,1 139,1 140,", "1 141,1 142,1 143,1 144,1 145,", "1 146,1 147,1 148,1 149,1 150,", "1 151,1 152,1 153,1 154,1 155,", "1 156,1 157,1 158,1 159,1 160,", "1 161,1 162,1 163,1 164,1 165,", "1 166,1 167,1 168,1 169,1 170,", "1 171,1 172,1 173,1 174,1 175,", "1 176,1 177,1 178,1 179,1 180,", "1 181,1 182,1 183,1 184,1 185,", "1 186,1 187,1 188,1 189,1 190,", "1 191,1 192,1 193,1 194,1 195,", "1 196,1 197,1 198,1 199,1 200"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 583631762;
    if(result == expected) {
        cout << "Test Case 247: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 247: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test248() {
    int n = 200;
    vector<string> edges = {"1 2,2 3,3 4,4 5,5 6,", "6 7,7 8,8 9,9 10,10 11,", "11 12,12 13,13 14,14 15,15 16,", "16 17,17 18,18 19,19 20,20 21,", "21 22,22 23,23 24,24 25,25 26,", "26 27,27 28,28 29,29 30,30 31,", "31 32,32 33,33 34,34 35,35 36,", "36 37,37 38,38 39,39 40,40 41,", "41 42,42 43,43 44,44 45,45 46,", "46 47,47 48,48 49,49 50,50 51,", "51 52,52 53,53 54,54 55,55 56,", "56 57,57 58,58 59,59 60,60 61,", "61 62,62 63,63 64,64 65,65 66,", "66 67,67 68,68 69,69 70,70 71,", "71 72,72 73,73 74,74 75,75 76,", "76 77,77 78,78 79,79 80,80 81,", "81 82,82 83,83 84,84 85,85 86,", "86 87,87 88,88 89,89 90,90 91,", "91 92,92 93,93 94,94 95,95 96,", "96 97,97 98,98 99,99 100,100 101,", "101 102,102 103,103 104,104 105,105 106,", "106 107,107 108,108 109,109 110,110 111,", "111 112,112 113,113 114,114 115,115 116,", "116 117,117 118,118 119,119 120,120 121,", "121 122,122 123,123 124,124 125,125 126,", "126 127,127 128,128 129,129 130,130 131,", "131 132,132 133,133 134,134 135,135 136,", "136 137,137 138,138 139,139 140,140 141,", "141 142,142 143,143 144,144 145,145 146,", "146 147,147 148,148 149,149 150,150 151,", "151 152,152 153,153 154,154 155,155 156,", "156 157,157 158,158 159,159 160,160 161,", "161 162,162 163,163 164,164 165,165 166,", "166 167,167 168,168 169,169 170,170 171,", "171 172,172 173,173 174,174 175,175 176,", "176 177,177 178,178 179,179 180,180 181,", "181 182,182 183,183 184,184 185,185 186,", "186 187,187 188,188 189,189 190,190 191,", "191 192,192 193,193 194,194 195,195 196,", "196 197,197 198,198 199,199 200,200 1"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 400;
    if(result == expected) {
        cout << "Test Case 248: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 248: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test249() {
    int n = 200;
    vector<string> edges = {"1 2,1 101,2 3,2 102,3 4,3 103,", "4 5,4 104,5 6,5 105,6 7,6 106,", "7 8,7 107,8 9,8 108,9 10,9 109,", "10 11,10 110,11 12,11 111,12 13,12 112,", "13 14,13 113,14 15,14 114,15 16,15 115,", "16 17,16 116,17 18,17 117,18 19,18 118,", "19 20,19 119,20 21,20 120,21 22,21 121,", "22 23,22 122,23 24,23 123,24 25,24 124,", "25 26,25 125,26 27,26 126,27 28,27 127,", "28 29,28 128,29 30,29 129,30 31,30 130,", "31 32,31 131,32 33,32 132,33 34,33 133,", "34 35,34 134,35 36,35 135,36 37,36 136,", "37 38,37 137,38 39,38 138,39 40,39 139,", "40 41,40 140,41 42,41 141,42 43,42 142,", "43 44,43 143,44 45,44 144,45 46,45 145,", "46 47,46 146,47 48,47 147,48 49,48 148,", "49 50,49 149,50 51,50 150,51 52,51 151,", "52 53,52 152,53 54,53 153,54 55,54 154,", "55 56,55 155,56 57,56 156,57 58,57 157,", "58 59,58 158,59 60,59 159,60 61,60 160,", "61 62,61 161,62 63,62 162,63 64,63 163,", "64 65,64 164,65 66,65 165,66 67,66 166,", "67 68,67 167,68 69,68 168,69 70,69 169,", "70 71,70 170,71 72,71 171,72 73,72 172,", "73 74,73 173,74 75,74 174,75 76,75 175,", "76 77,76 176,77 78,77 177,78 79,78 178,", "79 80,79 179,80 81,80 180,81 82,81 181,", "82 83,82 182,83 84,83 183,84 85,84 184,", "85 86,85 185,86 87,86 186,87 88,87 187,", "88 89,88 188,89 90,89 189,90 91,90 190,", "91 92,91 191,92 93,92 192,93 94,93 193,", "94 95,94 194,95 96,95 195,96 97,96 196,", "97 98,97 197,98 99,98 198,99 100,99 199,", "100 1,100 200"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 200;
    if(result == expected) {
        cout << "Test Case 249: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 249: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test250() {
    int n = 200;
    vector<string> edges = {"1 2,1 81,2 3,2 82,2 161,", "3 4,3 83,4 5,4 84,4 162,", "5 6,5 85,6 7,6 86,6 163,", "7 8,7 87,8 9,8 88,8 164,", "9 10,9 89,10 11,10 90,10 165,", "11 12,11 91,12 13,12 92,12 166,", "13 14,13 93,14 15,14 94,14 167,", "15 16,15 95,16 17,16 96,16 168,", "17 18,17 97,18 19,18 98,18 169,", "19 20,19 99,20 21,20 100,20 170,", "21 22,21 101,22 23,22 102,22 171,", "23 24,23 103,24 25,24 104,24 172,", "25 26,25 105,26 27,26 106,26 173,", "27 28,27 107,28 29,28 108,28 174,", "29 30,29 109,30 31,30 110,30 175,", "31 32,31 111,32 33,32 112,32 176,", "33 34,33 113,34 35,34 114,34 177,", "35 36,35 115,36 37,36 116,36 178,", "37 38,37 117,38 39,38 118,38 179,", "39 40,39 119,40 41,40 120,40 180,", "41 42,41 121,42 43,42 122,42 181,", "43 44,43 123,44 45,44 124,44 182,", "45 46,45 125,46 47,46 126,46 183,", "47 48,47 127,48 49,48 128,48 184,", "49 50,49 129,50 51,50 130,50 185,", "51 52,51 131,52 53,52 132,52 186,", "53 54,53 133,54 55,54 134,54 187,", "55 56,55 135,56 57,56 136,56 188,", "57 58,57 137,58 59,58 138,58 189,", "59 60,59 139,60 61,60 140,60 190,", "61 62,61 141,62 63,62 142,62 191,", "63 64,63 143,64 65,64 144,64 192,", "65 66,65 145,66 67,66 146,66 193,", "67 68,67 147,68 69,68 148,68 194,", "69 70,69 149,70 71,70 150,70 195,", "71 72,71 151,72 73,72 152,72 196,", "73 74,73 153,74 75,74 154,74 197,", "75 76,75 155,76 77,76 156,76 198,", "77 78,77 157,78 79,78 158,78 199,", "79 80,79 159,80 1,80 160,80 200"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 929958200;
    if(result == expected) {
        cout << "Test Case 250: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 250: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test251() {
    int n = 200;
    vector<string> edges = {"1 2,1 81,2 3,2 82,82 161,", "3 4,3 83,4 5,4 84,84 162,", "5 6,5 85,6 7,6 86,86 163,", "7 8,7 87,8 9,8 88,88 164,", "9 10,9 89,10 11,10 90,90 165,", "11 12,11 91,12 13,12 92,92 166,", "13 14,13 93,14 15,14 94,94 167,", "15 16,15 95,16 17,16 96,96 168,", "17 18,17 97,18 19,18 98,98 169,", "19 20,19 99,20 21,20 100,100 170,", "21 22,21 101,22 23,22 102,102 171,", "23 24,23 103,24 25,24 104,104 172,", "25 26,25 105,26 27,26 106,106 173,", "27 28,27 107,28 29,28 108,108 174,", "29 30,29 109,30 31,30 110,110 175,", "31 32,31 111,32 33,32 112,112 176,", "33 34,33 113,34 35,34 114,114 177,", "35 36,35 115,36 37,36 116,116 178,", "37 38,37 117,38 39,38 118,118 179,", "39 40,39 119,40 41,40 120,120 180,", "41 42,41 121,42 43,42 122,122 181,", "43 44,43 123,44 45,44 124,124 182,", "45 46,45 125,46 47,46 126,126 183,", "47 48,47 127,48 49,48 128,128 184,", "49 50,49 129,50 51,50 130,130 185,", "51 52,51 131,52 53,52 132,132 186,", "53 54,53 133,54 55,54 134,134 187,", "55 56,55 135,56 57,56 136,136 188,", "57 58,57 137,58 59,58 138,138 189,", "59 60,59 139,60 61,60 140,140 190,", "61 62,61 141,62 63,62 142,142 191,", "63 64,63 143,64 65,64 144,144 192,", "65 66,65 145,66 67,66 146,146 193,", "67 68,67 147,68 69,68 148,148 194,", "69 70,69 149,70 71,70 150,150 195,", "71 72,71 151,72 73,72 152,152 196,", "73 74,73 153,74 75,74 154,154 197,", "75 76,75 155,76 77,76 156,156 198,", "77 78,77 157,78 79,78 158,158 199,", "79 80,79 159,80 1,80 160,160 200"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 80;
    if(result == expected) {
        cout << "Test Case 251: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 251: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test252() {
    int n = 200;
    vector<string> edges = {"1 2,1 51,51 101,101 151,51 151,", "2 3,2 52,52 102,102 152,52 152,", "3 4,3 53,53 103,103 153,53 153,", "4 5,4 54,54 104,104 154,54 154,", "5 6,5 55,55 105,105 155,55 155,", "6 7,6 56,56 106,106 156,56 156,", "7 8,7 57,57 107,107 157,57 157,", "8 9,8 58,58 108,108 158,58 158,", "9 10,9 59,59 109,109 159,59 159,", "10 11,10 60,60 110,110 160,60 160,", "11 12,11 61,61 111,111 161,61 161,", "12 13,12 62,62 112,112 162,62 162,", "13 14,13 63,63 113,113 163,63 163,", "14 15,14 64,64 114,114 164,64 164,", "15 16,15 65,65 115,115 165,65 165,", "16 17,16 66,66 116,116 166,66 166,", "17 18,17 67,67 117,117 167,67 167,", "18 19,18 68,68 118,118 168,68 168,", "19 20,19 69,69 119,119 169,69 169,", "20 21,20 70,70 120,120 170,70 170,", "21 22,21 71,71 121,121 171,71 171,", "22 23,22 72,72 122,122 172,72 172,", "23 24,23 73,73 123,123 173,73 173,", "24 25,24 74,74 124,124 174,74 174,", "25 26,25 75,75 125,125 175,75 175,", "26 27,26 76,76 126,126 176,76 176,", "27 28,27 77,77 127,127 177,77 177,", "28 29,28 78,78 128,128 178,78 178,", "29 30,29 79,79 129,129 179,79 179,", "30 31,30 80,80 130,130 180,80 180,", "31 32,31 81,81 131,131 181,81 181,", "32 33,32 82,82 132,132 182,82 182,", "33 34,33 83,83 133,133 183,83 183,", "34 35,34 84,84 134,134 184,84 184,", "35 36,35 85,85 135,135 185,85 185,", "36 37,36 86,86 136,136 186,86 186,", "37 38,37 87,87 137,137 187,87 187,", "38 39,38 88,88 138,138 188,88 188,", "39 40,39 89,89 139,139 189,89 189,", "40 41,40 90,90 140,140 190,90 190,", "41 42,41 91,91 141,141 191,91 191,", "42 43,42 92,92 142,142 192,92 192,", "43 44,43 93,93 143,143 193,93 193,", "44 45,44 94,94 144,144 194,94 194,", "45 46,45 95,95 145,145 195,95 195,", "46 47,46 96,96 146,146 196,96 196,", "47 48,47 97,97 147,147 197,97 197,", "48 49,48 98,98 148,148 198,98 198,", "49 50,49 99,99 149,149 199,99 199,", "50 1,50 100,100 150,150 200,100 200"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 346492430;
    if(result == expected) {
        cout << "Test Case 252: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 252: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test253() {
    int n = 200;
    vector<string> edges = {"1 2,2 3,3 4,4 5,5 6,6 7,7 8,8 9,9 10,10 11,11 2,1 ", "12,12 13,13 14,14 15,15 16,16 17,17 18,18 19,19 20", ",20 21,21 12,1 22,22 23,23 24,24 25,25 26,26 27,27", " 28,28 29,29 30,30 31,31 22,1 32,32 33,32 34,34 35", ",35 36,36 32,1 37,37 38,37 39,39 40,40 41,41 37,1 ", "42,42 43,42 44,44 45,45 46,46 42,1 47,47 48,47 49,", "49 50,50 51,51 47,1 52,52 53,52 54,54 55,55 56,56 ", "52,1 57,57 58,57 59,59 60,60 61,61 57,1 62,62 63,6", "2 64,64 65,65 66,66 62,1 67,67 68,67 69,69 70,70 7", "1,71 67,1 72,72 73,72 74,74 75,75 76,76 72,1 77,77", " 78,78 79,79 80,80 81,81 77,1 82,82 83,83 84,84 85", ",85 86,86 82,1 87,87 88,88 89,89 90,90 91,91 87,1 ", "92,92 93,93 94,94 95,95 96,96 92,1 97,97 98,98 99,", "99 100,100 101,101 97,1 102,102 103,103 104,104 10", "5,105 106,106 102,1 107,107 108,108 109,109 110,11", "0 111,111 107,1 112,112 113,113 114,114 115,115 11", "6,116 112,1 117,117 118,118 119,119 120,120 121,12", "1 117,1 122,122 123,123 124,124 125,125 126,126 12", "2,1 127,127 128,128 129,129 130,130 131,131 127,1 ", "132,132 133,133 134,134 135,135 136,136 132,1 137,", "137 138,138 139,139 140,140 141,141 137,1 142,142 ", "143,142 144,142 145,1 146,146 147,146 148,146 149,", "1 150,150 151,150 152,150 153,1 154,154 155,154 15", "6,154 157,1 158,158 159,158 160,158 161,1 162,162 ", "163,162 164,162 165,1 166,166 167,167 168,166 169,", "166 170,166 171,166 172,1 173,173 174,174 175,173 ", "176,173 177,173 178,173 179,1 180,180 181,181 182,", "180 183,180 184,180 185,180 186,1 187,187 188,188 ", "189,187 190,187 191,187 192,187 193,1 194,194 195,", "195 196,194 197,194 198,194 199,194 200"};
    CactusAutomorphisms* pObj = new CactusAutomorphisms();
    clock_t start = clock();
    int result = pObj->count(n, edges);
    clock_t end = clock();
    delete pObj;
    int expected = 886565533;
    if(result == expected) {
        cout << "Test Case 253: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 253: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    test67() == 0 ? ++passed : ++failed;
    test68() == 0 ? ++passed : ++failed;
    test69() == 0 ? ++passed : ++failed;
    test70() == 0 ? ++passed : ++failed;
    test71() == 0 ? ++passed : ++failed;
    test72() == 0 ? ++passed : ++failed;
    test73() == 0 ? ++passed : ++failed;
    test74() == 0 ? ++passed : ++failed;
    test75() == 0 ? ++passed : ++failed;
    test76() == 0 ? ++passed : ++failed;
    test77() == 0 ? ++passed : ++failed;
    test78() == 0 ? ++passed : ++failed;
    test79() == 0 ? ++passed : ++failed;
    test80() == 0 ? ++passed : ++failed;
    test81() == 0 ? ++passed : ++failed;
    test82() == 0 ? ++passed : ++failed;
    test83() == 0 ? ++passed : ++failed;
    test84() == 0 ? ++passed : ++failed;
    test85() == 0 ? ++passed : ++failed;
    test86() == 0 ? ++passed : ++failed;
    test87() == 0 ? ++passed : ++failed;
    test88() == 0 ? ++passed : ++failed;
    test89() == 0 ? ++passed : ++failed;
    test90() == 0 ? ++passed : ++failed;
    test91() == 0 ? ++passed : ++failed;
    test92() == 0 ? ++passed : ++failed;
    test93() == 0 ? ++passed : ++failed;
    test94() == 0 ? ++passed : ++failed;
    test95() == 0 ? ++passed : ++failed;
    test96() == 0 ? ++passed : ++failed;
    test97() == 0 ? ++passed : ++failed;
    test98() == 0 ? ++passed : ++failed;
    test99() == 0 ? ++passed : ++failed;
    test100() == 0 ? ++passed : ++failed;
    test101() == 0 ? ++passed : ++failed;
    test102() == 0 ? ++passed : ++failed;
    test103() == 0 ? ++passed : ++failed;
    test104() == 0 ? ++passed : ++failed;
    test105() == 0 ? ++passed : ++failed;
    test106() == 0 ? ++passed : ++failed;
    test107() == 0 ? ++passed : ++failed;
    test108() == 0 ? ++passed : ++failed;
    test109() == 0 ? ++passed : ++failed;
    test110() == 0 ? ++passed : ++failed;
    test111() == 0 ? ++passed : ++failed;
    test112() == 0 ? ++passed : ++failed;
    test113() == 0 ? ++passed : ++failed;
    test114() == 0 ? ++passed : ++failed;
    test115() == 0 ? ++passed : ++failed;
    test116() == 0 ? ++passed : ++failed;
    test117() == 0 ? ++passed : ++failed;
    test118() == 0 ? ++passed : ++failed;
    test119() == 0 ? ++passed : ++failed;
    test120() == 0 ? ++passed : ++failed;
    test121() == 0 ? ++passed : ++failed;
    test122() == 0 ? ++passed : ++failed;
    test123() == 0 ? ++passed : ++failed;
    test124() == 0 ? ++passed : ++failed;
    test125() == 0 ? ++passed : ++failed;
    test126() == 0 ? ++passed : ++failed;
    test127() == 0 ? ++passed : ++failed;
    test128() == 0 ? ++passed : ++failed;
    test129() == 0 ? ++passed : ++failed;
    test130() == 0 ? ++passed : ++failed;
    test131() == 0 ? ++passed : ++failed;
    test132() == 0 ? ++passed : ++failed;
    test133() == 0 ? ++passed : ++failed;
    test134() == 0 ? ++passed : ++failed;
    test135() == 0 ? ++passed : ++failed;
    test136() == 0 ? ++passed : ++failed;
    test137() == 0 ? ++passed : ++failed;
    test138() == 0 ? ++passed : ++failed;
    test139() == 0 ? ++passed : ++failed;
    test140() == 0 ? ++passed : ++failed;
    test141() == 0 ? ++passed : ++failed;
    test142() == 0 ? ++passed : ++failed;
    test143() == 0 ? ++passed : ++failed;
    test144() == 0 ? ++passed : ++failed;
    test145() == 0 ? ++passed : ++failed;
    test146() == 0 ? ++passed : ++failed;
    test147() == 0 ? ++passed : ++failed;
    test148() == 0 ? ++passed : ++failed;
    test149() == 0 ? ++passed : ++failed;
    test150() == 0 ? ++passed : ++failed;
    test151() == 0 ? ++passed : ++failed;
    test152() == 0 ? ++passed : ++failed;
    test153() == 0 ? ++passed : ++failed;
    test154() == 0 ? ++passed : ++failed;
    test155() == 0 ? ++passed : ++failed;
    test156() == 0 ? ++passed : ++failed;
    test157() == 0 ? ++passed : ++failed;
    test158() == 0 ? ++passed : ++failed;
    test159() == 0 ? ++passed : ++failed;
    test160() == 0 ? ++passed : ++failed;
    test161() == 0 ? ++passed : ++failed;
    test162() == 0 ? ++passed : ++failed;
    test163() == 0 ? ++passed : ++failed;
    test164() == 0 ? ++passed : ++failed;
    test165() == 0 ? ++passed : ++failed;
    test166() == 0 ? ++passed : ++failed;
    test167() == 0 ? ++passed : ++failed;
    test168() == 0 ? ++passed : ++failed;
    test169() == 0 ? ++passed : ++failed;
    test170() == 0 ? ++passed : ++failed;
    test171() == 0 ? ++passed : ++failed;
    test172() == 0 ? ++passed : ++failed;
    test173() == 0 ? ++passed : ++failed;
    test174() == 0 ? ++passed : ++failed;
    test175() == 0 ? ++passed : ++failed;
    test176() == 0 ? ++passed : ++failed;
    test177() == 0 ? ++passed : ++failed;
    test178() == 0 ? ++passed : ++failed;
    test179() == 0 ? ++passed : ++failed;
    test180() == 0 ? ++passed : ++failed;
    test181() == 0 ? ++passed : ++failed;
    test182() == 0 ? ++passed : ++failed;
    test183() == 0 ? ++passed : ++failed;
    test184() == 0 ? ++passed : ++failed;
    test185() == 0 ? ++passed : ++failed;
    test186() == 0 ? ++passed : ++failed;
    test187() == 0 ? ++passed : ++failed;
    test188() == 0 ? ++passed : ++failed;
    test189() == 0 ? ++passed : ++failed;
    test190() == 0 ? ++passed : ++failed;
    test191() == 0 ? ++passed : ++failed;
    test192() == 0 ? ++passed : ++failed;
    test193() == 0 ? ++passed : ++failed;
    test194() == 0 ? ++passed : ++failed;
    test195() == 0 ? ++passed : ++failed;
    test196() == 0 ? ++passed : ++failed;
    test197() == 0 ? ++passed : ++failed;
    test198() == 0 ? ++passed : ++failed;
    test199() == 0 ? ++passed : ++failed;
    test200() == 0 ? ++passed : ++failed;
    test201() == 0 ? ++passed : ++failed;
    test202() == 0 ? ++passed : ++failed;
    test203() == 0 ? ++passed : ++failed;
    test204() == 0 ? ++passed : ++failed;
    test205() == 0 ? ++passed : ++failed;
    test206() == 0 ? ++passed : ++failed;
    test207() == 0 ? ++passed : ++failed;
    test208() == 0 ? ++passed : ++failed;
    test209() == 0 ? ++passed : ++failed;
    test210() == 0 ? ++passed : ++failed;
    test211() == 0 ? ++passed : ++failed;
    test212() == 0 ? ++passed : ++failed;
    test213() == 0 ? ++passed : ++failed;
    test214() == 0 ? ++passed : ++failed;
    test215() == 0 ? ++passed : ++failed;
    test216() == 0 ? ++passed : ++failed;
    test217() == 0 ? ++passed : ++failed;
    test218() == 0 ? ++passed : ++failed;
    test219() == 0 ? ++passed : ++failed;
    test220() == 0 ? ++passed : ++failed;
    test221() == 0 ? ++passed : ++failed;
    test222() == 0 ? ++passed : ++failed;
    test223() == 0 ? ++passed : ++failed;
    test224() == 0 ? ++passed : ++failed;
    test225() == 0 ? ++passed : ++failed;
    test226() == 0 ? ++passed : ++failed;
    test227() == 0 ? ++passed : ++failed;
    test228() == 0 ? ++passed : ++failed;
    test229() == 0 ? ++passed : ++failed;
    test230() == 0 ? ++passed : ++failed;
    test231() == 0 ? ++passed : ++failed;
    test232() == 0 ? ++passed : ++failed;
    test233() == 0 ? ++passed : ++failed;
    test234() == 0 ? ++passed : ++failed;
    test235() == 0 ? ++passed : ++failed;
    test236() == 0 ? ++passed : ++failed;
    test237() == 0 ? ++passed : ++failed;
    test238() == 0 ? ++passed : ++failed;
    test239() == 0 ? ++passed : ++failed;
    test240() == 0 ? ++passed : ++failed;
    test241() == 0 ? ++passed : ++failed;
    test242() == 0 ? ++passed : ++failed;
    test243() == 0 ? ++passed : ++failed;
    test244() == 0 ? ++passed : ++failed;
    test245() == 0 ? ++passed : ++failed;
    test246() == 0 ? ++passed : ++failed;
    test247() == 0 ? ++passed : ++failed;
    test248() == 0 ? ++passed : ++failed;
    test249() == 0 ? ++passed : ++failed;
    test250() == 0 ? ++passed : ++failed;
    test251() == 0 ? ++passed : ++failed;
    test252() == 0 ? ++passed : ++failed;
    test253() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=8365685&rd=13510&pm=10055
********************************************************************************
#include <string>
#include <vector>
 
#include <cstdio>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <algorithm>
#include <utility>
#include <sstream>
#include <iostream>
 
using namespace std;
 
#define REP(a,n) for(int a=0; a<(n); ++a)
#define FOR(a,b,c) for(int a=(b); a<=(c); ++a)
#define FORD(a,b,c) for(int a=(b); a>=(c); --a)
#define INIT(a, b) __typeof(b) a = (b)
#define FOREACH(a, b) for(INIT(a, (b).begin()); a!=(b).end(); ++a)
 
#define PB push_back
 
typedef long long LL;
typedef pair<int, int> pii;
typedef vector<string> vs;
typedef vector<int> vi;
 
#define INF 1000000000
 
template<class T>
inline int size(const T&t){return t.size();}
 
//////////////////////////////////////////
 
#define MOD (INF+3)
 
vi edges[200];
vi cyc[200];
int tab[200], tab0[200], tab1[200];
int N;
int ile[200][200];
 
void zaznacz(vi &v, int *t, int val)
{
    FOREACH(it, v)
      FOREACH(e, cyc[*it])
        t[*e] = val;
}
 
vi child(vi &v, int *t) 
{
    vi res;
    FOREACH(it, v)
      FOREACH(e, cyc[*it])
        FOREACH(n, edges[*e])
          if (!t[*n])
            res.PB(*n);
    return res;
}
 
int probuj(vi &c0, vi &c1)
{
int mn = 1;
    REP(poz, size(c0))
    {
      vi ch0, ch1;
      FOREACH(n, edges[c0[poz]])
        if (!tab0[*n])
          ch0.PB(*n);
      FOREACH(n, edges[c1[poz]])
        if (!tab1[*n])
          ch1.PB(*n);
      if (size(ch0)!=size(ch1))
        return 0;
      while (size(ch0))
      {
        int prz = -1, c = 0;
        REP(a, size(ch1))
          if (ile[ch0[0]][ch1[a]])
          {
            prz = ch1[a];
            ch1[a] = ch1.back();
            ch1.resize(ch1.size()-1);
            --a;
            ++c;
          }
        int mnw = ile[ch0[0]][prz];
        REP(a, size(ch0))
          if (ile[ch0[a]][prz])
          {
            ch0[a] = ch0.back();
            ch0.resize(ch0.size()-1);
            --a;
          }
        if (c==0)
          return 0;
        if (size(ch0)!=size(ch1))
          return 0;
        FOR(x, 1, c)
        {
          mn = (mn*(LL)x)%MOD;
          mn = (mn*(LL)mnw)%MOD;
        }
      }
    }
    return mn;
}
 
void call(vi &v0, vi &v1)
{
    if (!size(v0))
      return;
    zaznacz(v0, tab0, 1);
    zaznacz(v1, tab1, 1);
 
    vi nv0 = child(v0, tab0), nv1 = child(v1, tab1);
    call(nv0, nv1);
    
    FOREACH(it0, v0)
      FOREACH(it1, v1)
      {
        int x = *it0, y = *it1;
        ile[x][y] = 0;
        if (size(cyc[x])!=size(cyc[y]))
          continue;
        ile[x][y] = probuj(cyc[x], cyc[y]);
        if (size(cyc[x])==1)
          continue;
        vi odw;
        odw.PB(x);
        FORD(a, size(cyc[x])-1, 1)
          odw.PB(cyc[x][a]);
        ile[x][y] = (ile[x][y]+probuj(odw, cyc[y]))%MOD;
      }
    
 
    zaznacz(v0, tab0, 0);
    zaznacz(v1, tab1, 0);
 
}
 
 
void szuk(int x0, int x, int pr, bool start = false) {
    if (x==x0 && !start)
        throw 0;
    if (tab[x])
      return;
    tab[x] = 1;
    cyc[x0].PB(x);
    FOREACH(it, edges[x])
      if (*it!=pr)
        szuk(x0, *it, x);
    cyc[x0].pop_back();
}
 
    class CactusAutomorphisms
        { 
        public: 
        int count(int N_, vector <string> edges_) 
            { 
              N = N_;
              REP(a, N)
                edges[a].clear();
              string str;
              FOREACH(it, edges_)
                str += *it;
              int x, y; char ch;
              istringstream is(str);
              while (is>>x) {
                is >> y >> ch;
                --x, --y;
                edges[x].PB(y);
                edges[y].PB(x);
              }
              // szuk cykli
              REP(x0, N)
              {
                REP(a, N)
                  tab[a] = 0;
                cyc[x0].clear();
                try {
                  szuk(x0, x0, -1, true);
                  cyc[x0].PB(x0);
                } catch(...) {}
              }
              // work
              int res = 0;
              REP(x0, N)
              {
                  REP(a, N)
                      tab0[a] = tab1[a] = 0;
                  vi v0, v1;
                  v0.PB(0);
                  v1.PB(x0);
                  call(v0, v1);
                  res = (res+ile[0][x0])%MOD;
                  printf("aaa\n");
              }
              return res;
            } 
        
 
        }; 
 
 
 
 
// Powered by FileEdit
// Powered by TZTester 1.01 [25-Feb-2003]
// Powered by CodeProcessor

********************************************************************************
*******************************************************************************/