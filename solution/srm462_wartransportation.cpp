/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=8404
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class WarTransportation {
public:
    int messenger(int n, vector<string> highways);
};

int WarTransportation::messenger(int n, vector<string> highways) {
    int ret;
    return ret;
}


int test0() {
    int n = 5;
    vector<string> highways = {"1 2 310,5 4 924,1 4 168,4 3 779,2 4 260,2 3 758,4 ", "3 315,2 4 344,5 1 232,2 5 89,2 4 228,1 5 585,2 5 9", "30,4 2 37,3 4 815"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 310;
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    int n = 20;
    vector<string> highways = {"10 8 490,18 14 402,17 15 430,19 16 274,18 12 599,8", " 16 184,9 12 525,5 13 533,3 10 886,19 4 413,17 5 7", "33,7 2 758,20 11 872,9 1 488,14 18 799,13 5 306,16", " 5 169,20 9 962,5 11 143,2 9 138,15 18 784,15 6 26", "7,3 18 106,17 15 904,9 19 561,4 3 730,15 3 43,19 1", "4 185,12 14 674,10 11 308,7 6 936,14 20 973,13 3 1", "11,18 19 265,14 19 896,14 2 938,3 8 393,5 19 446,1", " 10 311,15 19 702,14 18 227,9 11 547,2 3 101,12 1 ", "251,8 6 309,3 19 122,13 2 709,5 6 327,10 19 469,12", " 13 39,13 6 28,12 7 479,18 8 713,18 11 485,8 18 50", ",8 1 969,9 13 322,9 17 799,8 18 937,8 9 761,6 14 5", "79,14 5 325,4 14 324,8 3 334,5 2 971,14 9 483,14 9", " 807,15 17 983,6 16 512,2 3 353,3 1 206,1 14 650,5", " 9 935,17 13 592,18 15 266,6 18 611,14 4 278,2 19 ", "743,18 10 144,20 14 658,20 19 398,5 20 814,5 14 55", "3,13 10 977,16 7 372,1 4 249,4 17 284,1 11 302,3 2", "0 832,18 19 417,16 11 856,5 7 647,11 4 21,15 8 202", ",12 3 849,3 16 524,3 19 653,6 11 43,8 5 862,11 2 7", "52,7 9 574,14 6 433,1 8 156,1 2 63,14 5 745,14 7 1", "72,18 1 250,10 7 312,12 6 396,5 8 998,8 14 478,2 2", "0 883,14 20 730,9 12 924,3 5 88,7 11 696,7 12 977,", "5 4 300,2 19 484,9 8 771,15 18 632,14 20 277,5 2 7", "7,16 5 939,18 2 890,20 9 637,3 5 113,6 4 495,17 7 ", "195,16 10 989,14 5 770,18 6 846,5 2 785,17 5 34,10", " 15 765,19 3 227,3 15 733,19 1 381,5 16 816,6 4 22", "1,19 10 125,8 7 962,5 12 303,1 20 587,14 9 761,18 ", "19 275,5 2 550,9 12 22,1 16 337,16 14 993,8 12 562", ",4 11 80,5 15 991,7 16 162,6 1 823,18 19 601,13 15", " 454,2 15 285,3 15 833,12 2 606,4 10 449,17 13 779", ",16 10 145,19 16 980,12 13 373,14 11 31,7 15 237,2", "0 16 723,17 10 517,1 13 138,18 8 159,6 4 704,16 12", " 733,20 10 900,12 1 793,4 7 875,6 13 69,14 4 276,1", "6 12 517,2 1 289,9 12 306,5 7 101,16 19 393,5 10 6", "64,17 14 659,3 8 684,15 8 649,19 15 984,10 12 187,", "14 13 879,2 13 730,20 17 988,20 12 626,12 8 516,7 ", "5 901,5 7 809,20 14 488,8 4 443,3 5 914,9 18 218,8", " 12 330,9 11 207,17 2 510,14 6 898,1 4 294,2 1 600", ",2 20 465,9 20 568,11 2 73,16 3 402,5 2 493,15 2 3", "55,13 18 737,14 4 734,11 16 657,4 17 517,16 10 349", ",20 19 448,20 1 501,4 17 343,5 13 204,10 7 166,4 1", "1 215,12 5 330,5 7 26,14 3 554,4 18 201,14 17 880,", "14 18 983,2 20 840,15 16 189,4 16 327,16 12 657,12", " 18 34,5 12 587,7 1 662,4 2 35,13 1 981,10 16 334,", "1 15 500,8 3 213,20 18 820,7 13 771,15 17 820,20 1", "3 312,18 19 892,20 15 25,6 7 686,18 8 33"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 265;
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    int n = 15;
    vector<string> highways = {"4 11 496,8 10 787,15 6 405,10 6 679,10 3 799,8 14 ", "42,2 5 67,4 1 104,7 15 136,5 9 354,15 1 946,2 8 50", "7,7 2 721,5 3 851,2 12 46,10 4 151"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    int n = 9;
    vector<string> highways = {"7 2 203,4 1 724,9 6 974,9 4 271,6 4 283,9 4 653,3 ", "4 224,7 9 836,8 6 515,4 7 648,9 7 269,6 3 242,5 4 ", "513,5 9 839,8 2 584,6 9 872,9 2 33,6 3 269,1 4 764", ",2 8 864,5 3 643,5 3 367,5 6 322,4 2 281,4 9 463,1", " 3 833,1 3 716,9 8 277,3 6 923,9 6 706,2 8 564,3 2", " 427,8 1 714,7 4 964,4 3 478,7 1 863,6 3 644,2 7 7", "45,7 3 591,3 2 46,1 2 750,1 9 138,1 9 518,5 2 995,", "9 2 209,6 9 192,7 4 509,2 4 452,2 3 497,1 5 246,1 ", "4 735,8 9 190,7 9 70,7 9 423,8 2 376,7 1 420,1 2 5", "07,2 1 133,2 9 963,9 1 697,7 9 238"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 507;
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    int n = 32;
    vector<string> highways = {"12 22 872,26 6 889,18 8 97,6 29 868,14 7 374,11 20", " 858,1 9 871,14 11 689,19 27 994,2 17 91,8 28 136,", "23 21 205,23 6 716,31 11 137,2 24 623,23 3 627,9 3", " 347,31 17 678,31 3 56,8 5 24,2 12 299,17 3 8,6 25", " 525,1 24 16,7 24 952,9 10 432,12 4 782,28 9 172,3", "0 9 204,2 24 29,14 3 990,16 2 155,8 6 387,31 21 10", "8,24 28 451,7 4 772,30 15 87,19 10 784,6 8 536,1 9", " 663,30 22 441,11 5 578,29 13 888,15 11 916,26 2 2", "47,28 8 243,7 5 993,22 23 931,13 29 706,12 29 266,", "2 26 792,27 4 748,20 32 592,19 15 755,7 8 564,21 4", " 324,7 10 464,8 31 119,18 11 459,3 22 687,28 24 83", "3,11 18 588,31 5 756,30 24 722,8 30 297,20 18 580,", "7 25 342,30 32 20,12 17 751,22 19 68,29 14 987,29 ", "25 948,32 23 529,3 20 968,20 28 533,13 15 470,8 21", " 22,13 18 885,17 30 637,31 19 687,2 15 301,29 11 6", "21,8 11 747,24 13 270,31 1 297,3 13 391,25 20 579,", "6 1 973,19 17 746,28 30 352,11 26 924,21 14 796,31", " 24 195,12 21 914,12 14 516,24 20 588,11 15 386,11", " 27 716,27 4 386,9 31 743,25 9 752,4 30 733,23 28 ", "460,2 7 809,11 18 806,22 9 193,26 20 159,3 30 449,", "30 25 484,7 1 523,14 25 699,13 29 504,26 19 724,29", " 20 194,21 30 932,26 20 668,19 13 895,25 15 741,26", " 12 157,29 18 909,6 10 788,2 17 581,1 8 254,22 5 1", "85,15 24 204,1 4 99,26 18 839,19 29 347,31 14 973,", "4 23 112,5 7 44,25 27 581,32 24 882,4 16 104,28 11", " 89,31 29 698,17 3 28,13 21 562,27 20 879,8 23 325", ",31 28 756,27 20 246,23 19 989,8 22 268,7 17 750,7", " 16 683,13 11 164,2 5 575,21 11 310,11 8 156,6 11 ", "398,25 8 572,11 28 627,1 31 138,17 12 736,32 22 32", ",31 3 354,11 4 942,17 24 57,30 2 200,9 8 98,15 32 ", "241,10 11 724,13 11 474,22 27 325,5 27 507,20 25 8", "45,14 3 104,11 19 63,19 16 48,2 25 263,27 7 943,27", " 16 721,22 28 219,15 17 629,20 22 263,14 9 120,10 ", "22 714,9 1 621,31 19 796,22 21 452,21 15 986,19 10", " 970,27 31 381,13 14 710,25 1 339,32 14 651,31 23 ", "705,32 31 737,20 29 507,24 18 567,19 6 310,21 24 3", "1,6 18 101,18 30 346,15 23 442,1 22 543,28 20 197,", "12 19 155,28 7 831,9 21 320,14 26 972,6 8 945,23 2", "0 651,21 14 65,11 7 818,32 14 925,19 10 384,27 8 6", "16,3 28 936,17 21 259,22 28 556,12 16 206,32 29 27", "0,10 3 439,9 16 363,27 26 98,32 30 380,10 24 716,1", "8 27 23,9 11 612,3 32 863,6 11 878,3 11 354,9 20 7", "33,23 29 260,10 23 781,11 22 450,23 32 450,10 17 7", "56,24 25 166,13 26 177,23 7 323,1 17 91,21 29 298,", "17 24 867,7 13 237,29 30 635,28 7 452,12 10 940,4 ", "23 390,30 3 703,30 26 894,1 26 790,11 14 770,12 30", " 9,22 5 381,11 1 203,21 28 473,9 7 851,20 10 745,2", "5 7 260,24 5 189,29 5 350,18 15 124,3 27 809,11 16", " 205,32 26 21,18 15 192,10 23 142,12 10 423,5 2 27", "0,32 25 210,20 21 566,1 6 780,28 8 446,21 19 838"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 829;
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    int n = 46;
    vector<string> highways = {"43 31 804,1 27 8,14 31 308,24 16 867,18 1 614,11 3", "0 414,32 44 986,16 3 70,32 34 710,13 43 19,3 39 87", "2,6 40 218,23 1 338,42 24 728,6 36 30,35 40 898,23", " 25 897,32 40 341,23 19 975,4 31 743,35 27 539,4 2", "7 658,45 3 677,12 39 196,41 38 953,25 21 8,32 37 8", "31,36 16 476,36 32 651,24 35 275,8 17 504,25 20 49", "2,28 12 598,32 18 130,14 12 602,24 36 682,28 15 80", ",1 13 616,32 35 173,14 42 121,31 29 959,44 36 806,", "4 45 682,21 41 401,32 22 776,16 23 159,30 8 20,28 ", "8 61,15 39 751,25 46 68,37 30 536,33 22 199,5 25 1", "08,8 45 498,18 30 489,5 45 513,14 23 616,19 44 555", ",31 12 515,32 30 114,27 21 832,45 1 173,7 4 946,5 ", "43 863,28 11 908,21 41 111,43 26 685,34 18 672,45 ", "42 409,28 26 565,42 27 257,43 3 500,41 9 849,1 7 6", "96,17 34 382,32 2 581,14 44 394,3 31 114,22 23 699", ",20 45 750,44 40 984,15 30 390,36 25 738,14 19 22,", "29 35 156,9 15 933,23 22 523,16 24 497,21 39 562,2", "2 12 262,41 4 863,41 18 311,42 1 737,46 14 735,9 4", "3 871,46 45 53,39 21 743,23 30 624,31 5 73,10 26 7", "92,33 14 403,44 8 810,32 4 512,44 43 710,28 5 98,4", "0 45 58,21 37 170,23 7 179,42 31 551,8 41 984,26 2", "1 580,40 12 321,26 43 950,11 40 204,44 15 457,27 9", " 511,8 23 651,9 39 399,27 16 194,15 18 323,36 27 2", "06,1 43 251,38 17 808,31 32 73,10 2 728,17 24 378,", "26 16 776,7 43 379,22 32 851,33 40 824,7 42 143,4 ", "22 258,20 7 60,45 36 471,39 45 690,44 9 209,40 28 ", "22,31 34 691,3 10 552,28 5 623,23 15 404,44 22 743", ",45 2 491,28 26 809,20 6 503,28 8 278,10 20 828,43", " 28 757,46 15 536,36 42 842,26 12 291,19 4 348,31 ", "2 465,35 29 405,32 42 386,26 23 223,7 32 434,12 23", " 983,26 22 788,23 5 31,25 30 807,35 2 810,14 32 54", "3,41 21 229,1 6 878,12 25 354,30 25 670,10 36 46,2", "2 16 991,37 32 956,2 4 913,18 38 915,37 6 406,11 4", "0 878,1 40 139,38 5 43,45 28 515,38 37 87,1 7 162,", "32 43 627,21 38 677,39 3 952,7 39 449,1 43 40,14 4", "3 425,27 28 693,5 27 715,14 12 275,6 13 61,1 44 50", "8,33 12 997,17 4 336,39 5 36,13 5 289,27 12 673,33", " 32 419,38 37 231,18 4 426,34 3 754,11 43 205,18 2", "9 86,16 46 662,17 32 846,5 44 396,29 24 893,9 5 77", "3,11 42 429,39 13 728,27 40 404,26 4 322,17 21 108", ",12 31 439,11 1 266,14 45 390,15 21 201,28 30 773,", "20 34 150,8 27 46,39 1 88,20 26 687,43 36 1000,34 ", "41 164,28 24 940,27 45 462,1 38 877,24 40 64,12 32", " 679,32 29 21,32 14 118,5 3 888,41 6 118,42 39 786", ",1 20 71,20 40 98,2 35 325,4 12 676,26 17 825,2 42", " 372,23 21 5,10 26 677,40 14 348,19 9 96,38 9 748,", "28 23 857,17 18 107,37 21 925,5 40 899,43 42 773,9", " 41 753,28 25 564,41 9 196,43 30 613,46 25 453,22 ", "14 741,39 30 706,7 12 994,41 5 810,30 39 998,34 9 ", "805,6 11 13,14 24 950,44 35 29,22 21 196,29 17 618"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 1221;
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    int n = 48;
    vector<string> highways = {"16 10 99,45 42 448,7 11 341,10 39 454,32 43 488,33", " 48 241,47 20 756,1 31 947,8 40 215,47 42 188,24 2", "5 766,2 22 71,17 28 505,39 10 36,2 33 357,1 9 723,", "37 29 588,19 47 691,27 13 737,20 16 776,44 13 913,", "33 4 497,29 4 773,33 11 151,37 28 719,41 44 176,11", " 32 92,30 3 954,8 29 382,1 16 645,32 27 26,1 12 82", "9,1 40 784,6 40 538,20 44 341,2 36 449,41 15 144,1", "2 44 202,13 20 774,26 36 885,23 19 856,32 19 931,4", "4 20 794,27 41 889,21 12 901,9 29 888,41 22 574,9 ", "1 898,42 14 549,8 7 264,36 29 522,11 28 885,13 23 ", "200,6 2 240,7 38 507,19 14 719,18 23 404,48 31 357", ",41 24 826,5 47 248,20 35 565,21 13 208,41 26 951,", "48 47 632,15 21 789,41 39 762,16 25 704,11 40 758,", "7 32 126,32 4 580,16 39 358,44 11 315,3 20 84,1 35", " 106,48 2 975,4 10 237,38 25 133,45 36 236,3 42 14", "7,32 42 414,27 9 300,25 20 31,19 22 138,22 23 524,", "23 38 725,45 10 951,42 15 919,14 27 738,26 29 412,", "36 28 117,18 23 101,5 47 984,3 17 917,36 6 907,8 2", "8 585,44 41 386,26 34 776,1 47 810,10 40 599,29 44", " 914,9 29 40,29 33 334,36 4 462,33 7 859,19 14 631", ",43 10 103,28 3 160,43 19 638,37 45 422,11 41 361,", "28 2 165,20 46 837,9 2 56,31 2 663,25 20 180,47 15", " 333,29 10 424,12 21 370,42 9 614,31 35 863,31 30 ", "584,43 17 581,7 26 134,39 24 863,13 48 27,32 15 50", "5,13 43 738,28 23 150,45 16 902,27 14 296,17 44 89", "4,8 6 438,44 12 615,30 8 990,46 34 262,12 26 218,2", "2 44 597,44 1 697,27 47 411,8 14 339,3 43 850,8 9 ", "294,36 15 871,37 45 662,35 10 480,48 21 153,9 10 5", "64,45 6 125,29 32 939,24 40 48,34 10 51,4 34 195,1", " 21 953,31 25 301,20 11 814,11 26 706,28 2 876,7 4", "6 121,35 43 128,29 34 191,37 19 273,7 38 226,1 38 ", "518,9 36 46,14 24 505,43 34 154,45 29 564,8 36 329", ",40 38 147,7 35 484,30 39 975,30 45 468,15 13 962,", "36 21 973,1 34 868,41 29 422,27 41 490,14 48 637,1", "4 39 987,25 13 125,36 42 451,18 39 367,38 21 67,31", " 24 855,11 25 385,15 33 469,20 11 813,5 40 644,26 ", "22 730,4 14 902,32 1 352,34 19 350,48 24 827,42 22", " 594,8 32 402,24 14 755,20 33 509,24 38 229,27 31 ", "242,36 2 695,10 1 775,25 34 753,46 1 152,40 10 581", ",26 17 717,35 41 74,45 28 427,18 4 968,14 46 334,3", "1 34 511,13 43 623,11 35 472,44 32 72,19 40 545,48", " 17 41,28 3 1,21 48 893,15 33 176,14 46 197,11 44 ", "38,25 24 248,23 34 882,38 45 642,5 16 1,29 31 257,", "38 10 459,38 46 714,34 29 530,1 42 839,14 21 530,1", "1 45 649,19 36 971,44 25 599,37 30 686,5 10 812,21", " 47 45,40 5 107,25 38 479,11 7 424,9 20 684,3 46 6", "5,3 16 892,21 28 988,4 16 73,1 37 43,29 9 641,1 16", " 517,3 41 915,1 19 9,9 27 348,4 29 321,28 48 529,7", " 20 500,11 39 227,11 40 63,21 36 616,30 36 991,10 ", "7 255,28 23 937,4 47 228,15 3 8,24 46 631"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 1051;
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    int n = 2;
    vector<string> highways = {"1 2 636,2 1 251,1 2 429"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 636;
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    int n = 4;
    vector<string> highways = {"3 2 363,2 4 723,1 4 677,3 2 371,4 2 484,3 1 761,2 ", "3 491,2 4 179,1 2 666,4 3 29,1 2 103,1 3 455,4 3 8", "74,1 2 501,2 1 279,3 1 412,1 3 55,1 4 96,4 2 476"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 418;
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    int n = 11;
    vector<string> highways = {"11 4 918,7 5 736,5 7 925,3 2 70,9 11 558,9 3 35,9 ", "11 874,1 9 188,9 7 667,6 8 936,4 6 816,2 1 703,4 1", "1 773,3 1 763,2 9 4,2 4 27,9 6 960,7 11 283,5 10 2", "56,6 2 71,7 11 126,9 11 250,10 8 637,1 10 148,10 8", " 885,7 4 161,11 3 103,8 6 369,3 7 440,7 5 565,2 4 ", "166,10 1 177,7 4 895,3 10 640,10 6 234,2 5 269,3 1", "1 619,1 7 599,5 7 721,7 1 665,8 2 200,9 1 894,6 5 ", "224,2 7 54,8 3 120,8 3 346,7 5 675,3 5 336,2 7 875", ",7 3 140,6 8 169,5 6 683,3 9 983,1 10 234,11 5 579", ",2 1 890,9 6 941,1 6 549,9 7 731,5 1 170,10 4 388,", "2 3 499,11 6 833,9 2 573,11 1 431,2 4 814,1 7 362,", "9 2 444,8 1 72,9 4 879,10 9 661,11 3 393,5 10 647,", "7 2 281,6 5 453,7 10 966,2 9 397,1 9 267,11 1 421,", "3 11 27,9 2 118,11 2 324,7 8 935,9 2 529,2 8 996,7", " 1 627,11 3 972,4 7 384,2 9 625,1 9 647,11 6 652,1", " 5 121,6 9 329,8 7 355,2 8 833,2 8 629,11 3 922,7 ", "2 542,4 2 548,10 7 657,2 1 908,6 1 301,3 5 467,8 1", " 499,4 1 487,11 1 686,4 2 220,3 4 786,2 3 313,9 2 ", "270,7 11 277,5 1 323,9 11 586,7 9 413,7 8 781,5 9 ", "311,5 10 115,6 2 460,2 3 704,4 9 605,8 4 413,4 8 5", "21,11 3 95,6 9 871,2 5 781,6 9 377,10 11 744,2 6 3", "54,8 5 598,1 6 920,7 11 67,10 3 198,2 3 212,2 6 6,", "10 5 961,4 8 141,4 6 429,2 5 750,2 1 889,4 10 228,", "3 11 72,4 9 435,4 7 597,9 11 276,11 9 88,7 2 628,1", "1 3 264,4 8 253,3 5 839,2 6 696,7 9 620,11 10 93,4", " 2 129,7 8 170,10 5 524,2 11 666,7 8 589,8 3 765,1", "0 6 463,5 8 740,2 11 89,9 7 872"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 372;
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    int n = 100;
    vector<string> highways = {"26 28 969,62 46 834,25 74 1,17 73 115,78 45 466,90", " 14 789,63 20 649,18 26 394,99 26 254,22 46 34,54 ", "72 62,22 33 859,56 9 284,8 26 557,22 55 453,40 44 ", "567,28 59 586,29 76 263,74 26 388,27 47 434,61 52 ", "405,89 32 781,50 67 88,75 23 861,29 28 100,24 94 4", "80,34 31 860,9 94 985,86 33 12,84 66 72,36 22 897,", "9 63 580,41 64 546,28 38 421,88 18 748,40 93 641,7", "1 27 823,82 87 268,66 73 101,77 56 718,100 91 92,4", "8 51 506,27 91 669,73 70 758,93 58 327,40 49 319,3", "2 71 597,6 52 384,26 17 756,78 46 263,95 97 554,38", " 45 156,95 71 147,15 95 316,72 39 525,98 30 225,69", " 61 895,65 19 746,48 44 115,55 21 660,70 67 156,23", " 57 500,30 51 623,76 66 717,44 89 556,20 39 885,45", " 7 698,91 71 168,37 71 211,3 77 983,62 46 201,69 2", "0 957,21 50 460,43 77 377,11 72 465,18 44 755,3 40", " 861,52 30 84,19 66 806,81 20 782,15 81 980,15 2 9", "51,24 22 852,35 16 181,11 26 252,27 44 647,82 98 8", "86,94 1 216,77 19 733,34 51 553,68 65 685,47 31 28", "6,49 54 559,1 88 774,81 50 352,84 77 495,31 10 144", ",16 3 644,31 32 514,16 65 964,68 32 680,52 30 510,", "38 79 116,96 31 955,22 11 405,73 46 633,19 28 42,1", "4 44 196,57 26 827,22 41 444,37 60 475,16 12 957,7", "7 1 487,44 48 917,99 69 779,55 41 324,87 11 552,80", " 24 347,75 32 924,54 53 17,97 89 176,23 56 439,79 ", "85 739,65 28 987,81 78 955,11 32 348,35 18 10,38 9", "7 734,84 24 865,7 77 270,75 25 558,51 47 466,89 26", " 150,80 42 77,66 75 555,72 85 986,71 19 356,81 8 7", "04,66 91 579,30 50 455,51 24 479,9 26 478,74 67 55", ",23 46 696,51 63 670,5 34 107,43 57 977,50 37 185,", "53 2 427,32 83 276,38 34 452,69 94 129,46 19 395,1", "00 93 692,47 43 654,69 100 940,75 94 896,51 43 884", ",87 47 285,14 30 19,41 68 4,44 88 797,73 85 567,19", " 36 759,11 34 802,16 2 953,7 76 846,2 79 188,85 65", " 34,21 30 964,92 71 783,95 14 322,44 38 58,10 57 6", "93,21 19 626,22 86 528,26 93 855,71 94 585,58 31 9", "02,43 51 231,58 94 201,40 89 967,13 84 304,70 45 9", "60,14 65 330,40 38 716,19 63 408,25 33 653,62 42 9", "83,63 85 386,45 42 879,98 34 819,64 46 2,67 68 347", ",79 81 963,8 72 301,75 90 15,34 67 248,87 28 241,2", "1 42 325,58 86 519,37 83 252,7 46 549,61 65 116,59", " 43 349,21 2 520,73 77 862,88 10 228,87 48 907,27 ", "69 448,52 26 433,70 14 768,73 21 65,21 33 629,89 9", "1 123,37 11 525,8 84 253,69 23 714,48 9 562,54 35 ", "130,1 38 507,86 59 573,5 31 145,69 4 577,50 44 567", ",24 32 77,100 39 112,52 60 334,66 7 342,27 61 729,", "8 13 466,66 98 425,38 2 207,82 23 362,58 24 5,24 4", "7 188,53 47 727,64 98 538,98 15 144,91 93 156,19 5", "2 669,85 18 818,61 7 372,19 89 746,81 98 569,37 22", " 315,25 74 861,3 89 811,40 86 525,35 77 270,91 95 ", "821,11 31 390,28 43 197,51 62 385,96 94 882"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 3023;
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    int n = 50;
    vector<string> highways = {"46 9 945,13 9 559,18 15 338,12 50 456,38 2 158,50 ", "9 774,28 25 352,34 45 766,50 7 901,43 24 796,25 21", " 604,19 33 465,30 2 379,17 13 978,24 1 332,31 50 4", "40,6 29 716,10 13 912,27 14 919,29 9 244,24 33 116", ",30 4 249,44 33 452,24 49 115,1 22 165,34 4 816,24", " 9 944,41 20 608,5 46 872,23 27 830,16 50 114,17 3", "1 74,1 33 699,50 22 15,35 25 830,10 34 125,1 5 85,", "5 3 956,37 44 630,2 26 161,21 9 586,21 43 285,20 4", "1 586,41 5 820,18 34 780,3 10 532,7 44 636,9 1 714", ",37 39 9,17 41 284,29 11 844,14 33 436,50 2 526,35", " 45 630,5 12 915,36 14 677,17 22 170,2 31 971,17 1", "9 259,27 35 501,10 15 13,6 29 496,41 30 199,17 15 ", "193,48 21 256,15 6 371,41 24 93,12 27 623,32 43 49", "1,43 19 328,45 30 644,8 35 674,3 28 54,1 46 368,46", " 45 140,3 9 797,24 1 870,16 13 346,40 46 290,32 38", " 358,11 35 889,5 42 376,28 46 253,33 48 750,2 43 1", "44,41 46 55,37 21 805,6 38 917,1 29 65,42 10 802,4", "9 23 38,40 29 729,17 8 74,21 41 272,20 42 866,13 3", "3 113,19 21 383,24 27 472,42 29 650,6 21 112,10 21", " 184,47 12 862,19 3 398,9 26 917,3 42 932,35 6 100", "0,7 41 225,33 12 367,24 36 175,35 8 358,34 20 219,", "11 47 389,13 47 850,39 13 652,32 46 338,39 48 894,", "29 22 529,43 40 794,6 14 179,30 50 938,37 33 807,7", " 43 656,47 8 902,16 47 679,12 36 917,9 32 98,32 10", " 340,22 5 645,37 35 124,36 22 312,19 29 70,13 36 2", "16,20 37 212,17 4 210,47 15 546,14 25 479,11 7 940", ",2 30 194,46 16 978,21 3 699,32 23 579,1 38 114,16", " 7 550,29 26 754,39 22 170,36 35 597,14 47 55,5 48", " 284,48 45 651,25 15 805,25 48 428,4 50 115,17 18 ", "873,19 46 350,22 36 872,43 23 58,39 36 655,43 40 7", "04,28 39 499,30 15 865,35 40 115,14 43 964,30 11 3", "33,2 29 729,2 50 416,25 43 589,32 33 76,38 28 818,", "42 5 6,42 35 971,8 19 410,22 34 254,38 13 264,20 1", "4 343,50 17 594,16 41 188,4 23 73,29 12 950,46 5 4", "54,4 48 940,24 6 860,35 29 993,40 16 805,5 38 521,", "49 37 489,43 2 230,32 5 504,4 36 317,3 33 22,9 38 ", "819,50 13 926,10 49 105,4 38 22,11 45 659,31 43 96", ",21 35 747,50 19 554,5 22 591,22 25 675,43 35 813,", "13 34 325,39 45 974,45 49 363,16 9 757,25 41 850,2", "2 11 586,20 13 154,25 19 978,17 40 654,42 34 988,6", " 47 271,30 37 68,5 31 666,18 48 926,26 22 368,25 4", "5 128,13 15 492,16 41 611,43 8 152,46 1 786,35 6 3", "4,8 37 470,25 42 902,42 11 999,17 36 773,34 13 317", ",13 25 83,7 42 976,17 37 233,18 32 233,5 19 788,40", " 26 574,11 50 917,12 41 827,13 9 765,35 44 227,3 8", " 151,38 14 394,13 32 230,45 2 664,29 6 682,16 48 9", "07,41 8 758,8 22 900,36 34 610,50 20 903,26 22 610", ",28 9 576,22 21 57,3 17 558,16 45 216,47 12 63,5 3", " 272,14 12 393,13 47 776,24 49 545,19 38 206,27 15", " 179,50 21 381,18 31 247,13 46 145,26 10 950"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 1253;
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    int n = 100;
    vector<string> highways = {"68 21 402,60 41 207,77 54 778,40 60 384,27 44 262,", "51 8 132,97 13 456,5 88 450,70 65 979,3 21 827,89 ", "26 716,40 68 337,77 80 294,22 24 763,58 74 376,76 ", "20 706,71 38 702,77 81 400,53 63 773,41 46 151,29 ", "59 966,16 69 92,17 38 941,47 65 459,54 41 569,49 2", "2 839,3 42 386,81 24 45,5 62 293,78 69 883,39 59 4", "65,11 60 149,97 42 500,39 75 349,8 1 332,24 49 657", ",7 52 485,43 80 422,46 44 992,28 20 48,63 71 870,1", "6 24 844,54 2 413,24 66 638,85 96 46,60 81 78,21 5", "2 108,46 87 380,39 26 126,94 33 230,25 98 931,11 7", "4 458,68 29 337,41 95 544,89 75 111,1 8 240,78 37 ", "830,18 78 587,48 68 674,10 62 3,50 64 743,38 14 93", "3,35 45 10,53 55 160,80 96 744,19 47 944,8 53 978,", "82 85 793,12 4 983,72 74 346,77 82 279,89 40 425,2", "2 25 371,28 3 406,43 42 586,26 32 114,38 73 192,77", " 71 530,65 89 711,7 93 335,24 93 430,30 31 184,87 ", "78 734,59 80 425,17 4 663,2 18 514,96 25 706,33 59", " 105,50 78 301,79 26 119,43 85 270,8 69 566,77 58 ", "279,52 71 13,22 69 489,57 2 498,51 37 681,37 83 29", ",53 38 656,75 70 482,32 38 223,75 37 316,47 12 285", ",87 80 356,41 73 282,36 66 822,57 19 59,66 4 363,4", " 37 187,17 99 381,13 3 425,57 97 944,38 22 559,53 ", "71 871,86 68 426,37 89 588,2 96 51,54 46 280,52 9 ", "323,100 27 623,16 92 814,14 71 858,14 11 183,89 17", " 264,47 74 298,50 90 395,25 42 873,26 5 179,49 63 ", "311,79 59 349,2 92 104,48 69 87,40 47 191,1 67 192", ",5 32 706,12 5 820,23 17 610,64 59 94,64 86 248,21", " 55 865,64 93 352,74 63 618,66 30 597,97 30 655,73", " 16 196,20 77 346,5 23 290,31 77 157,76 64 503,46 ", "84 696,63 27 514,12 71 430,93 5 543,9 60 619,81 97", " 231,24 76 334,26 12 741,14 6 157,80 62 99,56 43 9", "48,30 34 517,28 30 650,49 83 78,77 40 990,90 30 50", "6,5 19 491,82 96 552,42 47 846,42 89 146,5 56 884,", "69 24 298,5 22 661,67 97 873,58 41 80,53 37 332,89", " 82 321,34 95 320,18 8 358,94 49 128,55 1 680,25 7", "0 385,3 11 356,43 15 793,81 53 30,77 86 17,69 94 1", "7,40 91 187,74 1 705,53 57 846,20 83 85,8 86 162,9", "3 67 376,78 92 375,69 16 582,46 51 433,65 30 487,6", "2 30 135,16 49 752,5 36 395,100 48 217,8 95 751,98", " 78 78,18 72 262,53 75 347,28 12 269,15 43 635,35 ", "17 188,3 94 263,32 17 448,38 45 416,69 4 810,94 6 ", "696,87 54 448,59 91 223,88 47 932,34 98 957,48 100", " 25,75 62 970,8 25 871,51 87 745,92 18 451,33 69 5", "69,23 10 93,10 18 552,84 95 27,85 29 419,55 100 92", "5,42 95 780,51 55 265,18 98 918,16 32 793,4 86 878", ",12 96 964,18 45 455,59 83 867,31 16 973,80 10 281", ",12 79 954,34 26 75,77 34 265,26 63 529,53 28 937,", "78 30 501,42 38 177,58 25 422,4 94 313,71 4 671,23", " 84 735,12 37 740,36 27 820,69 9 739,6 91 922,26 8", "1 36,87 62 744,57 34 437,16 79 211,75 69 396"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 4715;
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    int n = 100;
    vector<string> highways = {"6 72 737,30 35 371,96 11 451,83 76 817,47 27 754,6", "6 28 155,97 5 269,92 86 165,47 71 675,49 98 25,43 ", "36 436,31 46 143,15 65 945,79 17 454,48 16 543,37 ", "43 733,89 57 143,20 9 297,38 8 275,77 79 675,90 34", " 409,64 86 814,41 77 741,78 43 206,68 26 97,44 85 ", "539,67 50 686,8 77 501,22 60 886,14 81 249,50 15 2", "42,39 15 60,74 64 139,91 70 680,99 89 172,48 29 14", "4,15 54 887,80 60 608,51 86 936,86 76 395,37 9 747", ",91 66 915,6 18 317,67 7 765,38 50 73,80 64 983,72", " 92 49,41 57 50,56 20 749,54 3 303,62 59 435,65 13", " 851,38 16 755,38 30 301,99 69 975,76 66 425,51 10", "0 331,40 29 856,94 38 458,99 9 201,46 58 336,83 93", " 196,75 46 576,36 49 274,33 95 325,46 92 243,20 65", " 373,59 21 433,37 26 903,81 42 521,76 3 483,48 53 ", "301,74 80 989,38 18 163,87 100 127,78 100 328,83 5", " 250,9 40 549,98 4 767,89 43 149,80 29 749,4 86 20", "2,46 98 188,26 89 952,21 81 422,53 30 670,75 79 12", "2,93 18 68,64 5 477,11 70 907,18 92 298,93 12 768,", "97 51 756,14 23 372,90 7 841,37 88 317,92 13 968,7", " 27 414,24 29 856,69 51 949,52 29 541,86 19 533,17", " 11 292,18 11 475,42 51 534,52 87 75,66 74 967,21 ", "7 730,80 73 862,58 4 948,80 33 677,4 23 643,79 64 ", "486,16 25 503,63 56 124,84 15 321,83 7 772,8 39 30", ",37 24 509,95 1 887,47 29 238,35 87 577,60 23 506,", "2 26 630,24 83 462,40 37 421,30 76 545,35 59 134,9", "5 61 822,56 64 74,55 60 790,3 37 313,16 21 951,24 ", "30 680,7 95 199,84 92 205,28 86 878,30 36 991,81 9", "6 438,75 59 102,43 78 550,71 20 389,90 32 288,73 2", "4 828,56 79 862,30 80 758,28 27 647,40 11 917,98 6", "0 116,89 40 760,68 25 866,72 25 101,13 36 744,23 7", "5 478,57 33 64,19 83 784,50 29 157,89 7 410,22 95 ", "398,58 17 257,91 65 490,19 91 967,16 81 436,35 100", " 437,87 39 182,43 51 217,25 29 160,46 27 142,20 38", " 112,1 68 140,21 99 902,11 78 491,18 57 799,51 28 ", "207,7 12 841,89 80 159,5 24 477,95 69 170,83 55 71", "1,42 8 166,32 36 154,64 9 291,72 46 51,5 79 921,43", " 100 403,70 14 689,81 6 335,24 13 418,57 23 135,73", " 64 32,63 13 87,28 63 9,79 5 19,69 96 530,58 69 13", "6,65 9 974,82 60 77,14 96 954,95 35 48,54 29 640"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    int n = 100;
    vector<string> highways = {"86 96 890,71 40 352,44 76 763,86 62 160,38 79 932,", "82 24 633,49 51 624,6 61 358,10 25 133,68 21 872,1", "8 3 126,28 63 125,4 32 965,82 12 850,56 61 197,14 ", "50 742,60 19 379,46 93 79,59 91 358,48 4 554,63 86", " 240,27 76 600,91 53 965,64 67 713,31 63 395,29 47", " 423,86 18 128,6 51 527,62 73 338,61 86 325,70 28 ", "849,31 16 675,55 54 863,66 8 368,31 33 344,38 37 8", "61,97 27 163,60 20 797,19 3 769,25 8 928,25 15 796", ",68 54 35,12 28 248,42 69 368,76 94 289,46 88 823,", "7 22 461,5 49 717,12 74 602,52 1 895,47 69 61,29 4", "2 231,25 20 918,31 91 53,79 8 888,15 29 201,14 63 ", "681,22 66 959,63 62 500,16 52 217,5 34 369,96 58 2", "77,33 18 239,96 82 856,3 24 781,8 45 489,79 20 208", ",9 20 415,50 51 99,34 60 163,4 34 447,6 16 373,68 ", "18 302,45 18 759,46 17 360,7 68 941,15 97 717,54 2", "0 909,94 47 562,30 69 499,55 89 865,6 77 534,10 4 ", "411,92 74 548,57 62 414,58 63 846,5 8 778,86 77 43", ",64 32 253,9 98 936,20 69 127,27 24 692,25 7 444,1", "00 19 853,56 84 67,34 30 50,8 76 43,7 58 706,17 84", " 882,30 85 313,15 87 668,39 6 859,54 16 432,7 20 5", "79,13 60 53,85 7 649,75 2 741,77 58 77,86 78 292,7", "7 80 893,52 15 633,77 67 993,29 91 229,38 54 831,8", "6 43 303,65 25 758,75 50 356,15 99 470,74 19 221,4", "7 1 824,13 89 914,45 37 804,67 27 163,30 9 191,26 ", "36 161,5 71 164,49 5 729,52 3 171,58 4 205,39 64 4", "20,70 12 199,32 19 181,55 19 496,71 59 694,61 47 5", "1,53 49 989,53 36 340,5 22 970,46 48 375,46 79 308", ",78 75 947,42 29 680,63 43 978,83 52 984,94 6 907,", "41 91 393,57 20 283,20 60 660,44 89 576,19 16 494,", "25 45 221,83 71 941,84 8 977,90 18 61,13 27 422,13", " 1 591,24 13 542,84 90 395,90 9 176,1 26 53,64 1 4", "85,24 83 188,54 8 370,43 82 897,20 99 551,31 35 27", "4,89 81 224,90 70 34,28 35 477,52 36 608,9 5 166,1", "1 3 266,82 11 171,5 32 578,94 27 741,15 3 429,20 6", "2 426,20 85 696,59 55 814,78 79 444,58 31 334,86 4", " 190,62 35 284,6 9 814,90 72 668,27 16 9,13 80 970", ",60 76 892,83 40 637,17 9 838,83 35 450,99 66 658,", "75 82 233,45 60 374,52 26 297,65 41 465,53 84 239,", "25 4 891,13 25 228,54 15 985,19 63 476,83 91 80,51", " 61 619,41 33 289,16 62 439,93 15 688,62 4 744,51 ", "56 115,4 68 698,93 99 726,99 93 9,70 30 328,42 9 5", "48,76 84 472,81 41 274,3 31 22,47 44 801,8 85 546,", "24 41 72,70 64 377,4 93 311,49 86 750,98 82 410,39", " 69 734,19 100 408,81 79 805,80 89 352,79 51 367,6", "0 5 701,26 72 674,46 39 646,15 19 75,53 42 148,38 ", "88 216,54 100 157,37 67 434,11 45 8,98 53 225,2 60", " 751,29 31 876,74 49 768,50 91 277,77 100 515,53 8", "8 370,27 55 833,22 25 893,13 49 441,68 65 275,59 3", "1 290,82 6 160,90 20 433,59 8 616,72 61 127,85 42 ", "209,3 50 149,12 48 738,27 1 467,1 53 739,10 84 9"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    int n = 5;
    vector<string> highways = {"3 2 556,4 1 98,2 3 408,3 4 691,4 5 458,2 5 303,3 1", " 148,4 2 873,1 2 713,5 2 208"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    int n = 5;
    vector<string> highways = {"3 4 59,2 5 902,2 3 133,1 2 280,1 3 607,4 2 220,4 3", " 576,2 1 988,1 4 704,2 4 934,3 2 865,3 1 287,3 5 8", "97,4 1 918,5 1 735"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 886;
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    int n = 50;
    vector<string> highways = {"32 4 553,6 7 27,25 16 834,23 44 71,25 47 674,42 44", " 656,21 25 549,46 29 543,8 37 379,13 27 205,45 39 ", "573,39 38 930,35 39 572,42 17 871,42 25 175,23 3 1", "70,36 22 741,5 21 166,42 2 393,28 9 515,30 38 169,", "43 18 496,6 43 41,50 45 276,38 20 908,9 18 957,31 ", "15 812,34 13 325,43 46 574,4 32 730,15 9 289,50 22", " 827,6 28 446,22 36 955,6 48 931,36 3 608,24 10 34", "2,18 1 871,46 45 197,50 49 505,35 21 977,29 10 935", ",15 17 50,45 9 875,26 4 806,36 6 723,44 42 207,2 4", "1 827,44 26 244,9 20 195,28 26 953,49 12 328,16 23", " 961,4 50 379,37 30 695,44 19 613,46 10 696,2 49 5", "15,12 28 159,44 23 721,32 50 697,5 45 762,31 35 69", "6,1 27 908,39 31 720,38 4 169,30 35 607,9 35 669,1", "9 15 46,32 39 725,10 27 634,43 9 467,28 11 236,13 ", "16 779,43 36 73,31 47 62,31 6 645,35 38 377,40 10 ", "114,24 41 983,6 5 89,26 17 856,38 19 998,34 6 262,", "7 44 626,5 34 839,1 21 27,22 17 293,14 19 989,5 27", " 360,42 46 625,4 36 182,35 33 947,33 13 961,16 27 ", "193,23 34 244,29 32 445,30 44 328,15 41 326,19 30 ", "189,5 15 631,13 22 914,44 20 683,41 1 622,14 27 98", "0,14 20 83,17 24 105,29 22 577,18 36 526,46 13 814", ",44 21 183,42 45 703,37 45 507,6 15 772,38 48 323,", "38 6 839,7 3 338,34 37 961,3 43 310,31 21 746,19 4", "3 915,44 47 597,13 20 797,39 48 774,48 25 61,11 49", " 392,40 13 996,6 45 573,5 48 476,29 33 390,11 17 8", ",21 1 102,49 26 979,37 49 421,15 8 996,40 30 633,1", "4 25 346,19 3 632,50 12 753,38 7 464,42 39 696,6 3", "2 111,3 6 653,35 31 896,21 18 378,38 3 278,33 24 8", "64,2 26 82,15 21 793,47 48 834,32 7 19,15 10 401,1", "2 26 398,8 36 506,32 9 493,38 33 666,50 31 880,12 ", "36 230,2 35 810,29 13 12,13 35 114,34 25 276,46 28", " 373,19 48 172,45 5 562,27 46 657,42 26 175,29 44 ", "297,46 19 793,28 27 74,41 19 475,19 6 473,26 48 21", "9,23 33 237,38 16 884,14 37 919,27 48 242,18 43 97", "4,27 14 255,12 11 834,30 4 854,24 6 101,22 31 899,", "2 5 951,38 39 198,11 25 976,23 31 467,13 3 377,22 ", "32 207,43 19 416,24 5 566,17 18 86,37 33 233,24 29", " 124,25 41 908,12 50 7,16 15 799,22 18 140,49 46 8", "55,50 20 387,26 27 466,35 11 428,1 31 515,37 24 32", "0,40 47 122,48 8 162,7 34 422,14 44 845,46 20 10,2", "1 6 844,12 10 276,41 37 382,25 21 661,16 30 122,15", " 46 964,31 8 272,38 46 223,44 4 417,37 38 207,39 9", " 161,8 26 823,31 45 14,47 40 920,18 33 601,20 2 17", "7,18 39 551,30 12 999,29 17 230,43 41 157,44 31 23", "0,22 44 564,13 23 253,5 40 552,18 13 226,20 26 756", ",48 39 86,17 35 59,29 37 526,22 43 309,17 23 963,2", "2 37 923,1 4 993,35 5 149,2 15 635,48 9 278,41 43 ", "777,13 11 717,22 39 330,38 17 49,23 40 378,22 26 2", "92,5 46 86,21 13 913,45 2 31,38 25 90,32 17 762,2 ", "40 858,40 27 988,18 32 680,13 15 311,25 15 838"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 1522;
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    int n = 30;
    vector<string> highways = {"11 22 752,9 28 573,8 20 549,2 29 96,12 25 835,11 2", "3 443,28 20 59,5 16 223,29 24 382,14 6 436,5 21 47", "7,28 1 290,20 23 567,6 26 347,14 8 436,23 7 585,22", " 14 829,19 8 897,18 7 161,29 22 446,6 3 47,6 11 11", "9,23 13 357,15 2 539,30 27 246,20 26 364,11 13 518", ",20 29 360,10 9 140,9 19 178,24 5 75,4 9 465,22 4 ", "271,21 25 632,25 16 705,23 19 777,15 11 668,25 6 9", "11,26 21 940,27 12 114,23 29 775,15 22 907,10 15 1", "86,25 21 727,26 7 324,15 21 251,20 7 369,29 9 5,5 ", "4 780,10 23 774,13 15 65,2 8 938,9 3 150,6 9 109,4", " 22 649,24 13 274,14 3 403,12 19 66,3 13 798,7 20 ", "912,24 14 751,25 27 575,14 20 580,2 5 110,24 7 215", ",1 5 194,3 2 786,2 19 716,22 24 331,9 21 375,15 9 ", "397,18 27 753,24 23 181,17 27 386,12 30 313,18 25 ", "155,19 24 162,11 7 533,13 2 307,20 21 100,14 24 52", "6,29 8 505,28 8 776,5 27 949,16 14 43,16 30 84,10 ", "1 323,12 18 590,8 15 357,12 6 185,20 8 328,26 4 83", ",5 10 67,1 11 582,9 23 610,16 1 246,6 4 679,22 21 ", "149,17 10 321,29 27 560,20 19 771,11 30 506,6 25 1", "83,1 23 948,23 17 125,26 5 912,15 23 470,30 10 293", ",4 18 313,11 19 261,16 29 259,19 5 408,18 12 960,2", "4 3 743,17 3 4,30 17 347,11 2 648,16 8 868,12 10 6", "50,21 14 425,5 28 947,10 13 578,14 15 681,5 2 656,", "16 12 447,26 27 915,16 10 477,8 25 994,20 10 582,9", " 7 420,10 26 389,20 22 360,26 10 321,28 19 922,23 ", "20 393,13 14 447,29 15 33,30 1 811,2 28 597,13 8 5", "9,18 29 437,23 2 101,30 12 999,1 27 701,19 28 534,", "23 21 518,3 11 589,18 14 662,5 14 455,16 15 230,2 ", "17 633,19 13 242,10 18 404,10 4 731,15 6 221,25 15", " 747,3 23 465,24 9 569,12 11 645,5 24 748,23 26 44", "4,30 21 451,29 17 141,25 3 292,26 6 400,18 8 497,2", "4 19 901,17 5 49,21 12 141,30 18 7,20 18 271,13 3 ", "17,29 4 952,2 13 903,1 24 558,25 1 125,14 13 914,1", "4 12 385,1 3 40,30 8 704,18 5 901,19 10 822,22 27 ", "938,5 18 808,5 29 1,10 8 791,2 7 920,12 5 359,5 9 ", "744,1 25 819,6 30 262,24 6 7,12 7 870,17 25 932,28", " 18 771,23 16 699,26 24 834,27 20 824,30 23 95,22 ", "5 553,26 29 150,25 4 70,4 20 501,9 16 291,2 30 40,", "19 18 602,19 3 108,29 11 827,19 22 702,26 11 238,2", "8 22 392,22 10 496,13 25 160,12 24 700,22 29 654,9", " 2 701,28 7 946,21 5 223,7 22 902,12 15 43,21 8 67", "8,28 27 946,7 15 603,15 8 114,25 10 234,19 4 128,2", "4 8 990,11 12 554,23 9 646,10 24 755,8 16 857,23 1", " 806,15 13 929,21 11 601,19 30 245,17 21 474,27 25", " 638,11 21 411,4 26 895,13 24 599,12 13 226,30 22 ", "104,30 24 53,29 10 69,29 30 263,28 6 349,6 16 982,", "4 6 273,1 30 533,29 21 443,7 3 867,17 11 756,1 7 6", "87,29 2 799,5 22 42,16 20 708,25 11 476,23 8 186,2", "3 3 820,23 18 226,21 9 429,17 26 201,25 26 79,12 2", " 671,23 14 698,10 30 92,3 25 380,14 30 420"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 799;
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    int n = 100;
    vector<string> highways = {"21 65 66,43 99 115,20 21 905,18 11 677,35 18 986,3", "3 63 684,22 27 649,1 83 195,57 70 101,89 47 349,54", " 16 953,2 49 985,6 8 981,91 29 911,24 67 687,53 77", " 959,39 20 540,37 16 316,15 28 588,100 78 649,52 1", "8 247,79 45 956,71 15 699,39 41 883,65 72 876,70 4", "5 868,86 76 151,53 97 448,49 2 548,63 95 946,83 82", " 372,23 5 689,14 68 330,4 43 59,17 13 699,25 82 84", "1,45 25 742,8 78 191,91 50 298,94 48 944,31 51 656", ",90 75 704,69 61 663,15 29 640,79 27 213,92 97 147", ",18 42 193,46 73 847,47 6 190,88 20 142,71 46 315,", "16 97 184,33 3 130,64 50 848,85 87 798,7 52 303,20", " 5 954,6 4 962,90 55 861,86 48 529,57 6 890,90 4 6", "56,47 22 509,88 50 308,93 32 110,79 14 585,28 93 7", "83,49 50 832,55 63 493,75 1 42,70 69 822,74 47 799", ",3 44 701,49 86 742,75 28 65,94 87 985,36 28 944,7", "8 53 739,93 71 846,50 79 501,8 92 847,92 24 731,60", " 58 556,68 2 596,35 22 593,61 95 41,4 48 684,40 7 ", "540,37 89 303,30 10 649,37 67 902,29 41 672,9 72 9", "77,72 2 648,3 89 160,21 22 130,65 90 936,75 35 338", ",83 68 126,21 64 242,77 70 273,50 64 131,75 37 825", ",88 54 43,66 71 302,64 53 493,88 35 676,92 40 399,", "46 51 629,71 50 826,39 89 897,25 70 145,63 39 167,", "49 24 26,31 43 766,44 7 361,85 41 900,54 19 697,27", " 25 864,19 76 202,71 93 782,7 93 719,100 31 561,78", " 77 461,41 64 866,91 41 977,51 25 241,30 44 297,47", " 31 955,45 88 402,54 79 940,70 2 462,10 9 956,58 9", "2 267,97 13 250,73 47 335,8 86 162,20 40 840,61 27", " 873,94 60 615,20 35 585,57 87 555,80 62 417,51 2 ", "287,39 62 524,25 53 795,36 75 153,41 40 5,52 15 11", "9,75 71 278,77 61 739,19 34 750,80 14 368,8 15 677", ",13 59 240,44 57 33,14 11 587,20 6 353,3 28 789,80", " 98 77,74 13 31,48 96 478,42 49 184,97 2 291,4 69 ", "105,14 48 21,72 37 532,79 53 798,77 79 63,76 34 84", "3,40 47 118,2 10 478,31 75 462,96 55 410,24 60 822", ",78 51 266,52 77 61,8 49 35,69 96 930,18 86 897,9 ", "13 598,2 96 581,65 71 391,42 38 380,75 54 556,24 2", "7 106,28 91 450,89 92 432,41 34 766,3 78 513,7 19 ", "31,15 24 142,94 100 226,16 61 687,41 35 206,26 46 ", "540,35 75 204,19 17 283,56 94 202,83 57 750,87 69 ", "237,83 97 134,67 48 494,72 54 948,43 86 758,30 91 ", "549,27 55 943,40 62 230,14 57 219,26 74 674,1 5 20", "3,3 94 578,68 59 37,56 61 703,15 93 874,2 3 698,94", " 76 362,53 23 147,85 49 100,55 77 466,78 91 611,16", " 6 996,62 97 57,16 64 424,86 80 845,78 79 50,81 5 ", "661,58 98 156,55 7 486,4 97 638,37 10 13,88 24 821", ",37 6 870,18 19 581,78 38 118,65 56 177,36 2 413,8", " 33 632,83 24 101,67 89 95,99 33 503,44 9 47,62 22", " 122,42 21 564,77 29 763,52 14 318,10 26 240,100 5", "1 852,9 54 810,43 32 782,70 17 831,8 71 6,99 86 83", "4,4 8 415,6 80 43,17 7 934,60 34 4,82 75 411"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    int n = 100;
    vector<string> highways = {"1 34 484,34 63 405,63 9 588,9 42 885,42 11 637,11 ", "85 17,85 70 615,70 20 981,20 61 866,61 54 669,54 5", " 347,5 98 582,98 80 997,80 21 972,21 35 931,35 88 ", "120,88 12 115,12 74 106,74 37 420,37 43 608,43 83 ", "118,83 33 665,33 15 770,15 64 7,64 4 954,4 73 323,", "73 57 273,57 7 941,7 39 321,39 90 229,90 50 231,50", " 56 157,56 81 633,81 10 818,10 19 41,19 26 269,26 ", "82 186,82 72 7,72 44 601,44 16 52,16 30 676,30 71 ", "947,71 76 633,76 36 24,36 29 271,29 75 916,75 100 ", "144,100 45 737,45 95 21,95 25 915,25 67 344,67 89 ", "139,89 92 579,92 13 465,13 91 497,91 40 533,40 94 ", "787,94 14 769,14 69 825,69 17 108,17 68 997,68 59 ", "55,59 3 264,3 86 630,86 46 225,46 99 656,99 53 250", ",53 23 762,23 66 663,66 2 203,1 33 927,33 57 93,57", " 18 410,18 17 289,17 63 316,63 7 694,7 75 658,75 3", "9 672,39 78 493,78 76 347,76 3 584,3 73 392,73 37 ", "865,37 35 242,35 46 96,46 11 419,11 93 482,93 48 7", "16,48 74 889,74 14 824,14 84 293,84 64 455,64 6 68", "4,6 25 274,25 28 611,28 52 387,52 86 626,86 67 240", ",67 50 757,50 89 111,89 59 237,59 15 683,15 79 556", ",79 36 647,36 68 972,68 31 871,31 26 340,26 96 629", ",96 21 542,21 85 184,85 53 327,53 42 477,42 30 575", ",30 71 191,71 5 718,5 69 670,69 34 609,34 13 552,1", "3 47 385,47 56 849,56 87 727,87 70 29,70 43 304,43", " 95 762,95 65 655,65 80 266,80 16 501,16 54 632,54", " 83 857,83 62 257,62 97 743,97 29 94,29 60 939,60 ", "41 650,41 49 740,49 66 262,66 12 520,12 82 431,82 ", "61 890,61 98 61,98 81 614,81 22 568,22 45 889,45 2", " 540,52 62 958,80 70 71,90 2 945,23 35 587,40 2 57", "4,79 60 980,10 19 849,61 23 696,50 58 705,39 44 43", ",66 46 880,97 96 225,58 17 546,56 71 275,26 38 525", ",80 10 575,96 33 374,91 57 991,97 45 564,15 2 643"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 5088;
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    int n = 100;
    vector<string> highways = {"1 41 952,41 67 851,67 61 390,61 90 172,90 24 187,2", "4 19 290,19 45 874,45 88 911,88 96 882,96 52 336,5", "2 16 741,16 75 732,75 91 208,91 25 526,25 59 776,5", "9 43 60,43 18 221,18 9 107,9 73 16,73 44 1000,44 3", "5 407,35 30 397,30 36 193,36 79 94,79 76 445,76 50", " 867,50 95 643,95 13 25,13 20 529,20 11 325,11 23 ", "585,23 69 832,69 58 175,58 62 974,62 39 4,39 4 362", ",4 74 264,74 21 229,21 14 272,14 49 145,49 57 916,", "57 64 364,64 15 228,15 5 124,5 78 241,78 27 3,27 4", "2 535,42 85 462,85 28 109,28 82 903,82 53 461,53 9", "8 868,98 2 651,1 13 699,13 95 587,95 94 986,94 11 ", "291,11 56 23,56 97 43,97 45 936,45 67 678,67 90 72", "2,90 32 630,32 7 366,7 33 812,33 87 515,87 46 224,", "46 19 114,19 48 13,48 10 456,10 93 374,93 77 848,7", "7 43 208,43 17 501,17 23 555,23 57 474,57 15 516,1", "5 84 887,84 29 599,29 55 441,55 70 558,70 25 731,2", "5 26 522,26 16 237,16 40 781,40 44 461,44 72 222,7", "2 30 423,30 81 483,81 65 617,65 64 358,64 34 512,3", "4 74 690,74 73 988,73 96 877,96 60 502,60 91 854,9", "1 38 452,38 5 615,5 68 218,68 3 907,3 79 340,79 76", " 66,76 42 114,42 75 841,75 53 972,53 85 939,85 66 ", "708,66 2 858,30 68 148"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    int n = 100;
    vector<string> highways = {"1 97 163,97 53 670,53 90 66,90 78 177,78 89 196,89", " 62 551,62 88 291,88 82 327,82 85 990,85 72 495,72", " 64 275,64 16 437,16 60 11,60 49 688,49 77 508,77 ", "81 451,81 8 666,8 94 338,94 70 655,70 84 956,84 15", " 471,15 65 397,65 34 71,34 95 752,95 93 724,93 4 9", "79,4 24 478,24 13 587,13 43 437,43 79 737,79 83 19", "2,83 25 951,25 40 758,40 96 609,96 91 480,91 39 30", "6,39 80 511,80 21 770,21 99 984,99 61 500,61 56 61", "7,56 100 259,100 36 937,36 41 979,41 32 298,32 37 ", "444,37 12 429,12 17 963,17 73 133,73 30 436,30 87 ", "270,87 35 603,35 38 832,38 48 341,48 10 355,10 31 ", "555,31 47 319,47 52 184,52 44 493,44 58 107,58 92 ", "920,92 57 36,57 14 57,14 2 30,1 50 457,50 4 371,4 ", "83 138,83 15 352,15 34 924,34 49 646,49 76 119,76 ", "84 153,84 55 996,55 100 946,100 96 982,96 39 304,3", "9 54 642,54 7 939,7 41 220,41 51 60,51 9 905,9 11 ", "5,11 70 315,70 52 295,52 22 357,22 98 388,98 74 79", "7,74 42 8,42 79 908,79 32 127,32 47 95,47 26 449,2", "6 61 689,61 10 500,10 16 537,16 2 497,1 36 225,36 ", "4 560,4 77 636,77 78 813,78 42 336,42 47 233,47 39", " 718,39 73 639,73 6 535,6 52 901,52 100 942,100 41", " 439,41 74 343,74 95 419,95 83 255,83 44 411,44 29", " 983,29 23 595,23 22 85,22 70 83,70 28 868,28 49 7", "92,49 93 799,93 88 335,88 98 144,98 63 765,63 25 7", "75,25 51 536,51 96 813,96 56 462,56 59 332,59 80 3", "7,80 27 373,27 85 968,85 14 850,14 35 708,35 62 55", "2,62 58 567,58 2 346,67 52 819,81 64 876,97 100 41", "0,7 33 923,86 84 725"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 7095;
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    int n = 9;
    vector<string> highways = {"7 9 25,5 9 834,6 7 453,7 5 142,5 7 710,4 1 707,2 3", " 352,3 6 67,6 2 996,3 2 283,1 6 978,9 3 614,6 9 60", "4,4 9 307,5 4 246,9 7 927,4 3 435,5 3 804,6 5 375,", "3 8 580,1 5 680,8 3 501,7 2 890,8 1 996,3 1 996,9 ", "8 678,5 1 676,5 2 803,2 7 144,8 4 718,1 2 338,7 6 ", "658,3 5 109,7 3 11,5 8 111,7 1 918,1 4 876,8 6 876", ",3 7 337,1 8 355,2 1 853,6 4 305,2 9 379,3 4 510,5", " 6 568,8 5 263,8 7 224,8 9 30,9 1 733,4 5 814,4 7 ", "982,9 5 688,4 6 500,4 8 679,2 5 434,1 9 168,9 2 12", "0,2 6 165,2 8 283,1 7 372,8 2 254,3 9 755,7 4 553,", "1 3 160,7 8 176,6 8 184,9 4 55,4 2 718,6 1 435,9 6", " 390,6 3 132,2 4 506"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 338;
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    int n = 100;
    vector<string> highways = {"51 39 5,86 54 8,1 66 2,82 22 5,39 76 2,87 2 7,38 5", "1 2,6 17 2,46 97 6,72 58 7,85 50 1,6 98 1,53 26 6,", "25 13 7,92 82 2,25 22 4,2 66 7,60 93 4,25 23 1,33 ", "10 2,32 40 8,44 69 6,1 95 5,95 88 8,84 36 5,40 20 ", "3,54 69 4,23 72 1,87 12 5,100 12 1,72 15 5,93 62 7", ",12 30 3,36 29 7,44 23 5,80 68 3,9 8 2,53 92 1,29 ", "16 5,19 61 6,16 82 8,79 100 8,34 67 8,37 19 1,15 9", "0 3,75 78 4,83 66 2,69 62 4,13 71 9,74 69 4,99 83 ", "5,96 26 2,9 89 1,89 78 8,33 68 8,92 37 1,93 71 9,4", "7 96 6,11 22 5,96 6 5,1 29 5,32 13 2,5 8 9,57 96 5", ",78 98 4,41 73 5,66 93 7,54 78 9,71 73 6,22 87 8,6", "9 38 7,89 62 7,85 44 3,17 29 9,61 13 7,67 73 3,8 1", "2 3,50 39 3,27 32 5,62 35 3,20 27 1,67 31 9,94 91 ", "2,67 79 3,70 4 4,98 49 7,98 48 7,63 22 6,19 63 3,9", "2 4 3,11 28 7,10 14 7,29 75 4,75 13 5,21 5 4,46 69", " 9,72 20 3,19 13 9,89 87 7,17 20 7,20 9 1,44 92 9,", "42 35 4,79 29 3,19 94 6,71 60 1,1 92 5,24 17 6,91 ", "86 5,78 63 3,100 98 7,97 10 8,10 55 8,61 95 9,21 2", "3 5,61 55 2,74 59 5,37 7 8,84 16 9,79 38 9,68 74 2", ",41 96 3,39 58 6,34 58 4,94 14 8,74 99 5,77 88 6,4", "2 29 2,88 87 4,12 58 7,81 94 2,99 29 2,28 8 3,65 8", "4 3,66 19 6,8 13 4,31 15 1,24 86 5,2 56 3,48 98 4,", "85 100 2,90 45 3,12 18 8,25 59 1,31 49 1,95 42 8,3", "0 93 2,26 12 7,43 54 4,25 88 3,32 60 7,38 21 6,7 6", "4 9,54 38 3,62 36 6,64 97 1,44 63 4,31 91 3,28 42 ", "6,71 86 1,49 95 6,81 64 4,56 15 3,92 48 8,23 95 6,", "99 37 5,71 21 4,61 99 1,66 43 8,47 54 3,8 24 7,91 ", "82 8,58 30 5,100 56 9,37 65 9,57 46 9,61 24 4,43 3", "7 9,38 4 2,83 72 2,3 57 5,38 15 8,85 38 4,43 12 9,", "7 55 6,20 98 3,37 34 3,6 88 9,58 61 7,75 38 3,15 7", "1 5,31 65 9,58 8 4,3 7 1,91 4 4,64 51 8,66 10 3,6 ", "42 3,49 60 9,84 27 7,28 61 2,15 68 4,65 56 8,100 4", "6 5,75 23 8,52 74 9,72 93 5,93 25 6,80 91 4,57 47 ", "9,67 53 4,51 4 2,44 11 1,47 5 3,25 30 2,29 18 9,45", " 73 7,47 34 3,26 10 3,69 80 1,67 63 9,80 5 1,100 6", "4 4,59 88 1,16 70 1,45 19 1,85 96 4,72 67 9,83 95 ", "4,35 10 8,60 34 9,23 6 4,19 32 5,100 25 2,39 61 8,", "46 68 5,79 11 7,36 7 1,54 80 8,31 86 4,50 14 6,96 ", "78 9,60 40 3,64 68 9,42 14 7,2 50 8,90 86 1,100 49", " 4,56 84 6,18 46 9,73 36 3,76 92 9,36 74 4,40 5 5,", "46 73 6,99 82 5,39 82 7,51 53 8,14 49 9,51 84 5,38", " 60 1,24 39 3,4 2 2,86 97 4,77 50 7,42 56 9,58 52 ", "1,36 13 4,2 23 4,69 91 2,77 80 3,17 26 8,22 70 7,1", "0 69 7,6 81 9,11 36 3,51 77 2,52 9 7,52 58 7,25 78", " 8,33 41 9,84 45 1,58 23 4,33 88 1,13 59 9,52 45 4", ",50 44 6,28 66 7,98 43 3,86 15 7,69 10 4,89 9 8,14", " 87 1,28 21 6,56 67 4,79 72 8,80 22 2,82 60 9,50 8", "9 9,79 69 7,2 93 8,17 47 6,70 78 9,88 98 3,71 22 6", ",84 49 9,77 89 5,80 76 3,16 28 2,59 94 7,5 30 3,96", " 84 6,21 85 1,39 88 3,52 99 3,60 88 4,77 17 1"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 45;
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    int n = 100;
    vector<string> highways = {"1 17 3,17 37 6,37 42 5,42 51 8,51 99 1,99 28 9,28 ", "23 4,23 15 4,15 63 5,63 46 3,46 9 2,9 22 8,22 76 3", ",76 71 9,71 87 8,87 61 7,61 93 1,93 29 5,29 97 9,9", "7 18 6,18 69 3,69 70 3,70 11 3,11 25 9,25 45 1,45 ", "74 7,74 24 2,24 78 7,78 36 8,36 91 6,91 20 5,20 14", " 1,14 67 9,67 54 7,54 32 8,32 72 8,72 95 5,95 6 1,", "6 55 2,55 60 9,60 30 3,30 33 3,33 50 6,50 7 4,7 40", " 1,40 12 4,12 80 1,80 90 1,90 10 6,10 94 7,94 47 4", ",47 62 8,62 43 8,43 77 4,77 85 8,85 96 6,96 53 8,5", "3 86 7,86 100 4,100 58 6,58 44 4,44 34 6,34 98 6,9", "8 57 1,57 3 2,3 52 5,52 41 8,41 2 4,1 98 8,98 2 4,", "1 7 5,7 13 1,13 40 7,40 38 2,38 68 7,68 90 6,90 23", " 3,23 71 4,71 63 8,63 16 3,16 19 8,19 17 3,17 98 9", ",98 82 3,82 10 9,10 83 4,83 24 3,24 58 7,58 5 5,5 ", "14 1,14 30 2,30 78 9,78 54 3,54 67 4,67 95 3,95 77", " 9,77 27 8,27 34 7,34 60 7,60 18 7,18 29 4,29 3 2,", "3 21 7,21 35 8,35 85 2,85 72 3,72 31 4,31 96 4,96 ", "80 6,80 22 9,22 48 7,48 26 4,26 6 1,6 93 4,93 4 4,", "4 76 9,76 91 5,91 51 6,51 53 5,53 64 7,64 86 4,86 ", "25 6,25 84 6,84 74 4,74 56 7,56 61 7,61 79 4,79 9 ", "5,9 2 2,62 8 9,31 93 7,31 13 3,2 54 7,77 21 1,70 8", "3 2,19 60 6,26 27 8,89 11 9,38 98 3,24 32 8,8 21 7", ",87 29 7,79 51 9,8 33 7,89 19 6,29 46 4,20 94 9,36", " 42 2,63 79 6,17 76 8,39 88 6,43 37 9,73 11 8,52 8", "4 2,7 63 9,11 66 2,86 76 2,83 1 9,58 79 5,67 64 7,", "8 27 8,57 19 2,95 79 2,47 39 3,79 75 1,8 20 4,11 8", "1 9,80 47 7,91 98 9,14 20 3,51 22 5,26 83 1,58 99 ", "6,19 100 3,72 70 2,64 4 6,26 65 5,87 83 3,29 51 7,", "58 75 1,31 46 2,33 44 2,39 59 4,63 89 4,87 2 4,69 ", "74 7,41 43 6,60 81 4,29 53 5,46 28 9,87 31 2,41 10", "0 3,17 34 1,71 60 8,39 5 8,4 34 1,71 44 2,79 67 5,", "17 69 8,6 37 6,27 87 3,4 67 6,41 52 8,13 62 7,58 4", "2 2,80 52 8,10 64 8,8 57 4,76 71 2,75 28 2,78 83 1", ",41 83 4,86 44 2,74 6 6,57 80 5,83 94 4,79 57 1,58", " 32 3,16 6 7,10 8 8,24 5 1,13 1 6,12 50 9,38 91 3,", "89 77 1,69 36 5,92 63 2,30 71 1,38 97 5"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 28;
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    int n = 100;
    vector<string> highways = {"1 69 2,69 98 5,98 60 4,60 37 8,37 54 3,54 93 8,93 ", "70 5,70 88 8,88 51 5,51 75 6,75 25 6,25 59 7,59 91", " 3,91 20 1,20 64 2,64 39 3,39 2 9,1 83 4,83 79 2,7", "9 57 2,57 56 2,56 34 9,34 52 9,52 88 9,88 27 3,27 ", "94 5,94 55 9,55 40 3,40 68 6,68 75 9,75 71 7,71 30", " 9,30 14 9,14 24 4,24 51 4,51 21 5,21 67 6,67 10 2", ",10 9 6,9 69 1,69 6 3,6 38 1,38 15 7,15 47 1,47 54", " 1,54 19 7,19 92 6,92 61 9,61 33 8,33 73 7,73 11 9", ",11 17 7,17 53 4,53 32 8,32 13 6,13 89 5,89 25 1,2", "5 60 6,60 86 5,86 85 6,85 77 3,77 70 2,70 78 5,78 ", "63 3,63 97 6,97 22 7,22 96 5,96 76 9,76 42 8,42 26", " 8,26 7 7,7 45 2,45 48 8,48 41 5,41 65 9,65 18 8,1", "8 37 9,37 5 3,5 72 6,72 81 5,81 99 9,99 29 3,29 82", " 3,82 93 1,93 49 1,49 59 8,59 98 5,98 12 2,12 36 2", ",36 50 1,50 62 5,62 84 3,84 28 9,28 3 1,3 20 3,20 ", "39 5,39 31 5,31 87 7,87 64 4,64 90 1,90 91 6,91 58", " 2,58 8 2,8 44 2,44 35 4,35 46 8,46 80 8,80 4 1,4 ", "2 1,1 7 8,7 36 9,36 23 9,23 15 7,15 94 3,94 43 8,4", "3 28 4,28 73 1,73 96 6,96 35 8,35 17 6,17 71 2,71 ", "18 9,18 8 3,8 48 4,48 38 7,38 14 2,14 60 6,60 27 1", ",27 12 1,12 3 6,3 56 8,56 24 6,24 2 2,1 17 9,17 67", " 2,67 82 6,82 94 9,94 27 6,27 47 3,47 61 5,61 56 4", ",56 48 4,48 92 9,92 42 5,42 45 1,45 33 4,33 95 2,9", "5 79 3,79 37 8,37 22 4,22 57 6,57 68 3,68 30 3,30 ", "36 6,36 97 3,97 16 1,16 41 3,41 83 8,83 23 7,23 69", " 9,69 9 1,9 53 2,53 87 8,87 10 5,10 93 1,93 39 7,3", "9 64 1,64 4 8,4 20 4,20 74 2,74 78 3,78 14 5,14 86", " 3,86 49 1,49 81 8,81 63 1,63 75 4,75 24 9,24 32 3", ",32 26 3,26 84 3,84 66 6,66 91 3,91 72 3,72 3 1,3 ", "80 3,80 58 3,58 55 3,55 62 2,62 21 8,21 76 9,76 71", " 9,71 90 9,90 54 7,54 7 4,7 25 1,25 46 3,46 28 2,2", "8 40 8,40 85 6,85 29 1,29 88 8,88 34 8,34 43 3,43 ", "96 8,96 60 6,60 52 3,52 11 1,11 12 3,12 19 3,19 6 ", "1,6 89 3,89 15 9,15 70 3,70 65 6,65 31 7,31 99 3,9", "9 35 8,35 18 7,18 50 2,50 44 6,44 51 6,51 5 1,5 38", " 4,38 59 2,59 77 2,77 2 4,28 50 2,95 8 7,99 45 5,1", "9 36 3,33 80 9,95 57 2,95 65 8,56 28 3,39 52 9,14 ", "99 9,16 59 4,37 76 4,8 93 2,97 80 2,78 12 2,74 93 ", "2,20 84 2,42 77 2,93 37 2,92 55 5"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 27;
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    int n = 100;
    vector<string> highways = {"1 64 5,64 45 2,45 48 3,48 17 7,17 77 6,77 19 3,19 ", "26 3,26 11 5,11 76 5,76 65 8,65 95 4,95 68 9,68 32", " 8,32 94 8,94 39 6,39 22 2,22 52 5,52 62 2,62 56 7", ",56 63 5,63 92 7,92 40 9,40 6 8,6 28 3,28 96 8,96 ", "2 2,1 33 8,33 78 8,78 29 3,29 74 9,74 4 2,4 18 9,1", "8 7 2,7 40 4,40 50 6,50 93 3,93 99 3,99 45 9,45 16", " 1,16 58 6,58 31 7,31 53 9,53 19 8,19 21 9,21 13 5", ",13 69 3,69 36 3,36 64 8,64 86 7,86 71 6,71 60 8,6", "0 87 2,87 24 5,24 89 4,89 28 4,28 82 1,82 100 7,10", "0 17 9,17 59 8,59 83 8,83 11 8,11 61 7,61 12 7,12 ", "41 9,41 42 1,42 8 1,8 32 1,32 98 2,98 38 7,38 97 1", ",97 65 7,65 51 2,51 85 7,85 22 3,22 68 2,68 88 2,8", "8 35 5,35 27 4,27 84 9,84 95 1,95 96 8,96 77 7,77 ", "3 9,3 30 1,30 39 9,39 92 1,92 9 1,9 90 6,90 91 9,9", "1 63 7,63 79 2,79 67 7,67 76 4,76 34 6,34 94 5,94 ", "49 3,49 26 4,26 52 5,52 20 4,20 81 1,81 25 3,25 56", " 1,56 44 3,44 15 9,15 37 3,37 6 2,6 14 2,14 46 5,4", "6 23 3,23 80 8,80 10 3,10 62 1,62 54 6,54 48 9,48 ", "70 8,70 57 5,57 55 9,55 73 9,73 5 8,5 43 8,43 75 6", ",75 72 8,72 47 4,47 66 7,66 2 4,1 16 7,16 92 7,92 ", "50 1,50 73 3,73 90 2,90 8 8,8 3 2,3 95 9,95 29 9,2", "9 89 6,89 4 9,4 34 1,34 80 1,80 70 9,70 74 3,74 56", " 6,56 77 6,77 57 1,57 43 9,43 65 5,65 23 4,23 97 9", ",97 14 6,14 38 1,38 21 1,21 49 5,49 24 9,24 52 2,5", "2 78 4,78 85 4,85 6 6,6 9 8,9 47 8,47 45 6,45 86 8", ",86 93 7,93 12 2,12 17 1,17 66 6,66 55 1,55 5 6,5 ", "32 5,32 83 8,83 35 4,35 36 4,36 68 1,68 98 9,98 27", " 7,27 22 9,22 42 7,42 81 1,81 11 1,11 91 4,91 79 6", ",79 82 1,82 46 2,46 19 1,19 15 9,15 51 3,51 96 2,9", "6 99 2,99 37 6,37 72 9,72 20 7,20 54 1,54 48 8,48 ", "39 3,39 67 2,67 44 6,44 59 8,59 87 3,87 26 9,26 94", " 2,94 25 1,25 40 3,40 33 3,33 28 9,28 76 1,76 88 1", ",88 31 6,31 100 7,100 63 1,63 84 6,84 71 8,71 61 4", ",61 53 7,53 60 9,60 62 2,62 30 4,30 13 9,13 64 2,6", "4 7 3,7 75 6,75 2 1"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 37;
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    int n = 100;
    vector<string> highways = {"1 47 4,47 33 2,33 36 2,36 52 9,52 67 1,67 62 8,62 ", "42 4,42 37 9,37 21 4,21 20 1,20 23 3,23 35 1,35 64", " 6,64 31 5,31 65 2,65 70 7,70 95 7,95 88 5,88 91 1", ",91 76 5,76 68 6,68 16 2,16 58 8,58 83 7,83 84 7,8", "4 74 3,74 43 3,43 86 6,86 27 2,27 40 9,40 79 5,79 ", "77 3,77 75 1,75 71 6,71 60 2,60 38 8,38 25 2,25 4 ", "4,4 9 7,9 94 5,94 66 2,66 39 1,39 3 6,3 11 6,11 5 ", "3,5 6 7,6 7 3,7 57 9,57 78 1,78 45 1,45 72 4,72 29", " 4,29 12 1,12 80 9,80 28 8,28 53 5,53 89 2,89 97 9", ",97 13 1,13 51 2,51 73 8,73 96 3,96 61 4,61 82 7,8", "2 90 8,90 44 4,44 30 5,30 17 1,17 55 5,55 32 1,32 ", "50 3,50 54 6,54 99 8,99 48 8,48 41 9,41 85 1,85 18", " 4,18 100 1,100 34 7,34 69 4,69 49 1,49 59 2,59 56", " 5,56 46 8,46 92 8,92 81 4,81 63 3,63 87 1,87 2 3,", "1 83 6,83 71 3,71 44 9,44 12 3,12 21 3,21 61 6,61 ", "76 8,76 22 3,22 60 4,60 33 9,33 72 1,72 82 5,82 27", " 7,27 2 4"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 164;
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    int n = 100;
    vector<string> highways = {"1 76 9,76 85 6,85 55 7,55 90 3,90 49 5,49 87 8,87 ", "31 9,31 82 2,82 62 7,62 48 3,48 57 9,57 41 6,41 92", " 4,92 100 9,100 45 1,45 65 4,65 19 8,19 21 2,21 79", " 2,79 2 2,1 63 7,63 74 8,74 87 3,87 82 6,82 39 9,3", "9 10 1,10 45 7,45 94 3,94 28 2,28 65 7,65 81 6,81 ", "24 9,24 27 3,27 42 3,42 53 8,53 89 3,89 100 9,100 ", "44 8,44 15 2,15 7 5,7 29 4,29 33 6,33 97 8,97 2 2,", "1 52 2"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    int n = 100;
    vector<string> highways = {"1 76 1,76 47 2,47 90 8,90 39 2,39 2 2,1 34 6,34 91", " 3,91 17 7,17 61 2,61 7 3,7 74 5,74 47 5,47 14 7,1", "4 42 9,42 6 4,6 5 9,5 78 3,78 16 9,16 94 4,94 30 9", ",30 39 5,39 100 9,100 58 7,58 26 8,26 81 1,81 11 8", ",11 46 7,46 77 9,77 68 6,68 41 9,41 65 5,65 15 3,1", "5 54 1,54 79 1,79 28 9,28 66 1,66 82 6,82 67 2,67 ", "45 7,45 27 6,27 13 2,13 12 9,12 8 1,8 32 6,32 57 9", ",57 73 4,73 80 5,80 25 9,25 87 1,87 89 8,89 98 9,9", "8 29 6,29 97 5,97 9 4,9 70 2,70 40 5,40 93 3,93 95", " 8,95 88 3,88 33 6,33 90 8,90 48 7,48 20 8,20 23 6", ",23 36 7,36 71 5,71 75 6,75 19 2,19 24 4,24 21 1,2", "1 63 7,63 38 6,38 31 9,31 72 5,72 64 2,64 53 6,53 ", "3 6,3 52 5,52 50 6,50 86 6,86 44 1,44 51 5,51 84 2", ",84 60 6,60 99 6,99 59 4,59 2 8,1 23 7,23 79 3,79 ", "15 3,15 17 5,17 36 5,36 76 5,76 86 1,86 68 2,68 38", " 2,38 83 3,83 51 6,51 27 7,27 7 3,7 42 9,42 57 2,5", "7 75 1,75 47 1,47 25 4,25 34 3,34 8 9,8 2 8,1 53 5", ",53 79 4,79 20 1,20 77 1,77 91 8,91 76 3,76 55 1,5", "5 85 7,85 32 1,32 42 8,42 54 7,54 50 8,50 70 9,70 ", "40 9,40 10 6,10 82 6,82 23 1,23 31 8,31 51 9,51 71", " 8,71 24 8,24 27 5,27 8 1,8 6 1,6 60 9,60 72 2,72 ", "39 1,39 58 1,58 9 8,9 86 2,86 2 3,1 100 6,100 4 2,", "4 7 3,7 70 4,70 78 6,78 62 1,62 43 3,43 51 4,51 14", " 1,14 93 4,93 33 1,33 77 1,77 67 2,67 49 5,49 86 5", ",86 9 7,9 50 8,50 98 6,98 30 3,30 53 1,53 47 1,47 ", "3 3,3 82 9,82 52 2,52 2 3"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 21;
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    int n = 100;
    vector<string> highways = {"1 21 9,21 45 1,45 39 7,39 10 5,10 37 7,37 95 4,95 ", "38 1,38 23 8,23 11 6,11 63 8,63 32 3,32 87 4,87 91", " 1,91 96 5,96 15 9,15 71 4,71 29 6,29 42 7,42 69 7", ",69 50 2,50 88 3,88 28 1,28 4 6,4 68 5,68 47 9,47 ", "74 7,74 36 4,36 55 8,55 61 7,61 77 1,77 100 9,100 ", "18 4,18 6 1,6 52 4,52 34 8,34 56 5,56 27 5,27 85 7", ",85 84 1,84 72 9,72 76 5,76 13 1,13 81 3,81 94 4,9", "4 33 5,33 46 9,46 99 5,99 12 2,12 92 4,92 25 2,25 ", "60 3,60 16 6,16 65 3,65 17 6,17 35 8,35 51 9,51 62", " 2,62 98 3,98 19 7,19 24 8,24 54 1,54 75 4,75 2 3,", "1 12 7,12 88 8,88 20 5,20 39 8,39 52 1,52 31 4,31 ", "79 8,79 59 6,59 54 5,54 36 7,36 4 2,4 70 6,70 61 4", ",61 6 2,6 86 7,86 91 7,91 76 7,76 40 6,40 57 8,57 ", "19 2,19 72 4,72 62 3,62 44 1,44 81 6,81 21 2,21 56", " 3,56 53 2,53 49 4,49 32 5,32 64 6,64 77 3,77 99 2", ",99 65 4,65 83 8,83 93 1,93 13 2,13 7 2,7 82 6,82 ", "63 7,63 94 6,94 90 1,90 47 7,47 30 9,30 28 2,28 75", " 8,75 29 4,29 23 9,23 3 6,3 66 1,66 43 7,43 35 5,3", "5 80 2,80 85 7,85 18 3,18 10 7,10 33 9,33 34 3,34 ", "25 8,25 15 1,15 11 7,11 100 3,100 38 4,38 16 9,16 ", "87 4,87 17 9,17 27 7,27 14 6,14 55 1,55 41 1,41 2 ", "1,1 29 4,29 84 2,84 20 1,20 32 1,32 6 6,6 3 4,3 39", " 3,39 92 1,92 63 6,63 11 8,11 75 6,75 96 3,96 23 6", ",23 25 2,25 81 8,81 73 5,73 42 5,42 61 2,61 67 5,6", "7 41 8,41 44 4,44 18 3,18 88 8,88 13 2,13 21 1,21 ", "100 1,100 16 6,16 35 4,35 47 7,47 85 4,85 54 2,54 ", "64 8,64 82 3,82 45 9,45 86 9,86 56 8,56 71 2,71 33", " 9,33 65 8,65 22 5,22 49 7,49 31 4,31 53 7,53 68 3", ",68 46 4,46 90 6,90 97 5,97 91 6,91 27 7,27 24 9,2", "4 36 5,36 48 8,48 52 9,52 99 1,99 34 8,34 95 7,95 ", "94 1,94 26 4,26 80 1,80 12 5,12 87 5,87 37 1,37 79", " 3,79 55 7,55 14 9,14 70 9,70 15 4,15 62 8,62 93 6", ",93 9 2,9 83 3,83 28 3,28 51 4,51 98 8,98 43 3,43 ", "7 5,7 40 2,40 77 7,77 76 1,76 57 6,57 89 4,89 58 3", ",58 59 5,59 5 3,5 78 3,78 38 1,38 10 1,10 2 3"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 37;
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    int n = 100;
    vector<string> highways = {"1 97 5,97 7 2,7 6 7,6 85 2,85 88 6,88 40 7,40 74 9", ",74 33 7,33 23 5,23 61 8,61 36 9,36 65 9,65 66 5,6", "6 69 8,69 5 9,5 31 7,31 18 9,18 78 9,78 89 7,89 76", " 7,76 20 5,20 22 6,22 79 4,79 58 3,58 57 2,57 16 1", ",16 38 7,38 68 6,68 75 8,75 25 6,25 3 8,3 91 3,91 ", "45 7,45 67 3,67 26 3,26 81 3,81 42 7,42 92 2,92 43", " 7,43 4 3,4 35 9,35 44 4,44 96 9,96 94 3,94 60 9,6", "0 98 6,98 13 7,13 90 9,90 54 3,54 50 2,50 37 6,37 ", "87 7,87 100 7,100 48 7,48 21 8,21 24 8,24 2 5,1 66", " 6,66 23 9,23 30 4,30 8 5,8 71 4,71 87 2,87 17 9,1", "7 96 2,96 24 3,24 14 2,14 88 3,88 43 6,43 47 4,47 ", "13 4,13 39 5,39 26 3,26 45 6,45 74 4,74 93 3,93 91", " 8,91 46 5,46 20 3,20 95 1,95 40 4,40 59 1,59 22 8", ",22 67 1,67 38 8,38 34 6,34 92 7,92 12 2,12 72 9,7", "2 65 6,65 42 5,42 9 2,9 15 7,15 56 6,56 62 1,62 60", " 8,60 83 6,83 58 1,58 61 9,61 32 3,32 35 2,35 44 1", ",44 11 5,11 4 4,4 31 6,31 81 9,81 100 4,100 78 3,7", "8 82 2,82 63 6,63 89 3,89 57 4,57 79 5,79 80 1,80 ", "75 4,75 52 3,52 51 4,51 19 2,19 2 2"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    int n = 100;
    vector<string> highways = {"1 27 66,27 35 14,35 52 75,52 39 84,39 56 96,56 22 ", "73,22 97 59,97 10 82,10 65 3,65 20 97,20 48 29,48 ", "28 89,28 91 35,91 41 13,41 77 86,77 94 37,94 86 34", ",86 16 20,16 99 75,99 37 65,37 12 11,12 61 17,61 7", "2 25,72 6 29,6 8 26,8 88 90,88 4 80,4 45 54,45 76 ", "27,76 25 98,25 24 8,24 75 91,75 43 12,43 92 83,92 ", "73 75,73 38 6,38 49 54,49 68 32,68 31 87,31 79 56,", "79 3 27,3 89 14,89 14 43,14 80 61,80 59 25,59 85 2", "8,85 13 97,13 51 58,51 26 47,26 98 71,98 82 21,82 ", "93 55,93 11 87,11 63 46,63 83 83,83 53 13,53 30 34", ",30 81 62,81 36 65,36 84 59,84 21 58,21 100 72,100", " 15 50,15 87 67,87 90 53,90 40 23,40 42 72,42 69 8", ",69 32 52,32 47 58,47 46 61,46 78 78,78 64 71,64 6", "7 5,67 19 40,19 29 95,29 17 30,17 5 35,5 95 51,95 ", "71 74,71 70 4,70 50 72,50 66 29,66 9 90,9 7 16,7 5", "4 10,54 2 2,1 84 25,84 28 31,28 14 62,14 4 86,4 70", " 76,70 51 11,51 50 86,50 9 36,9 73 28,73 27 81,27 ", "57 13,57 55 1,55 31 24,31 3 45,3 53 17,53 41 98,41", " 78 5,78 97 12,97 33 64,33 98 64,98 89 86,89 100 5", ",100 52 88,52 16 62,16 17 13,17 40 42,40 61 3,61 7", "9 53,79 90 51,90 65 79,65 22 12,22 26 73,26 91 8,9", "1 35 74,35 69 57,69 12 82,12 37 82,37 63 43,63 38 ", "18,38 81 8,81 46 22,46 11 30,11 58 9,58 43 43,43 6", "4 72,64 60 25,60 30 41,30 87 74,87 71 34,71 92 3,9", "2 18 39,18 29 18,29 49 6,49 72 27,72 74 79,74 68 1", "6,68 77 66,77 54 82,54 59 67,59 25 17,25 94 59,94 ", "75 78,75 2 87,17 66 50,31 45 47,40 3 84,99 44 38,3", "7 79 89,51 99 49,10 69 68,99 58 36,49 80 90,70 98 ", "17"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 542;
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    int n = 100;
    vector<string> highways = {"1 15 95,15 74 66,74 79 93,79 53 85,53 98 11,98 35 ", "81,35 52 58,52 89 99,89 36 4,36 5 47,5 72 17,72 37", " 91,37 92 51,92 51 15,51 86 91,86 46 6,46 25 13,25", " 56 66,56 75 3,75 97 45,97 11 87,11 83 6,83 81 23,", "81 90 64,90 13 38,13 91 84,91 33 4,33 38 10,38 44 ", "11,44 7 64,7 8 68,8 41 4,41 55 30,55 26 59,26 28 8", "8,28 93 39,93 4 40,4 59 46,59 27 36,27 30 44,30 96", " 93,96 62 52,62 40 33,40 49 42,49 17 65,17 16 23,1", "6 88 45,88 21 75,21 39 88,39 94 47,94 66 20,66 57 ", "73,57 10 50,10 64 40,64 6 38,6 85 85,85 67 25,67 3", " 39,3 2 95,1 8 34,8 94 99,94 27 88,27 82 87,82 57 ", "10,57 84 91,84 7 98,7 32 15,32 74 31,74 5 1,5 62 1", "7,62 88 23,88 97 48,97 65 56,65 12 56,12 75 82,75 ", "48 26,48 54 36,54 44 15,44 13 67,13 76 14,76 25 94", ",25 73 2,73 70 55,70 52 7,52 9 49,9 37 67,37 53 40", ",53 80 91,80 24 88,24 50 7,50 38 23,38 34 87,34 35", " 95,35 31 9,31 15 96,15 11 86,11 30 7,30 93 11,93 ", "6 15,6 83 5,83 99 25,99 19 38,19 36 52,36 16 81,16", " 87 91,87 4 35,4 10 5,10 78 28,78 47 47,47 51 72,5", "1 92 39,92 72 41,72 28 73,28 63 91,63 85 45,85 43 ", "21,43 39 59,39 56 82,56 67 10,67 68 45,68 66 89,66", " 100 32,100 90 33,90 86 82,86 69 40,69 77 27,77 3 ", "66,3 20 46,20 40 36,40 49 80,49 45 48,45 79 60,79 ", "64 16,64 21 1,21 42 39,42 41 8,41 60 33,60 22 44,2", "2 18 33,18 61 79,61 46 14,46 29 69,29 95 19,95 71 ", "84,71 55 60,55 14 63,14 59 5,59 96 17,96 17 46,17 ", "98 14,98 91 62,91 58 33,58 23 46,23 33 94,33 81 15", ",81 26 85,26 89 21,89 2 80,29 31 56,13 56 77,70 54", " 76,61 34 53,67 14 10,70 16 12,54 99 8,25 15 6,21 ", "29 40,29 91 96,21 57 12,58 18 19,37 60 54,44 72 58", ",37 77 31,84 50 68,97 42 96,16 15 97,67 48 21,38 2", "2 51,95 64 43,53 37 16,37 70 42,82 35 40,1 35 88,7", "6 99 36,19 61 43,30 82 44,13 80 64,87 64 35,70 20 ", "38,16 25 76,24 14 47,48 92 2,49 80 21,36 45 93,10 ", "8 12,34 36 10,49 68 27,57 67 31,79 70 83,38 83 12,", "100 5 17,6 92 20,3 36 53,6 3 69,98 63 56,44 80 21,", "15 14 16,74 100 63,5 88 72,56 73 95,56 50 63,69 62", " 31,52 66 52,76 17 2,99 69 24,87 61 57,16 87 65,93", " 30 18,92 41 31,21 92 6,1 26 30,3 29 82,72 10 46,5", " 97 78,68 30 1,32 8 96,100 89 74,75 21 49,43 90 86", ",94 71 56,63 45 60,38 73 45,58 17 87,1 25 42,41 85", " 45,11 89 1,53 41 68,75 34 17,54 83 26,86 47 29,89", " 11 65,23 42 85,85 66 49,90 65 62,43 20 84,76 52 4", "0,68 25 29,4 8 67,79 16 43,65 78 30,49 50 49,92 55", " 60,24 37 8,30 23 30,70 52 68,49 74 55,44 7 80,60 ", "1 68,83 38 74,51 58 58,18 60 45,49 25 97,30 11 78,", "23 79 85,11 4 69,44 15 6,5 53 42,98 73 34,53 31 40", ",43 9 80,35 53 19,28 57 40,20 35 73,90 28 21,96 24", " 34,58 25 1,83 24 74,58 85 48,8 16 59,12 4 70,25 7", "9 45,74 56 42,45 52 39,22 24 35,92 4 36,32 6 85"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 323;
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    int n = 100;
    vector<string> highways = {"1 48 42,48 99 73,99 22 1,22 26 28,26 56 55,56 79 4", "8,79 67 54,67 32 59,32 52 29,52 12 15,12 90 91,90 ", "37 74,37 72 19,72 9 18,9 74 65,74 44 6,44 2 12,1 2", "3 37,23 94 34,94 62 88,62 28 29,28 39 34,39 63 21,", "63 17 39,17 25 32,25 46 6,46 97 57,97 98 76,98 14 ", "14,14 11 94,11 5 66,5 53 63,53 60 26,60 48 64,48 8", " 98,8 65 26,65 40 18,40 55 44,55 29 98,29 19 92,19", " 20 79,20 41 41,41 86 65,86 87 90,87 6 20,6 58 82,", "58 15 45,15 38 57,38 37 19,37 80 77,80 24 45,24 45", " 47,45 47 9,47 10 65,10 16 84,16 52 40,52 82 68,82", " 36 39,36 13 14,13 78 81,78 90 33,90 4 77,4 93 42,", "93 67 59,67 61 40,61 83 40,83 76 84,76 54 55,54 91", " 82,91 99 80,99 89 47,89 74 59,74 84 22,84 100 10,", "100 75 49,75 51 41,51 96 91,96 31 92,31 57 97,57 7", "9 11,79 18 69,18 33 42,33 81 55,81 12 77,12 69 5,6", "9 27 39,27 59 16,59 3 72,3 64 77,64 49 27,49 9 51,", "9 30 11,30 42 5,42 71 92,71 44 67,44 73 44,73 34 3", "0,34 92 49,92 7 98,7 70 10,70 95 30,95 85 43,85 88", " 69,88 72 49,72 66 52,66 56 16,56 22 87,22 26 42,2", "6 50 6,50 77 82,77 43 52,43 21 74,21 68 22,68 35 5", ",35 2 50"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    int n = 3;
    vector<string> highways = {"1 2 1,1 3 2,3 2 3"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    int n = 8;
    vector<string> highways = {"1 3 1,1 4 1,3 5 1,4 5 1,5 6 1,6 7 1,6 8 1,7 2 1,", "8 2 1"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    int n = 4;
    vector<string> highways = {"1 3 1,1 3 2,3 2 1,1 4 1,4 2 1"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    int n = 4;
    vector<string> highways = {"1 3 1,3 2 1,1 4 1,4 2 1,3 4 1"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    int n = 20;
    vector<string> highways = {"1 13 3,13 4 7,4 3 4,3 10 8,10 18 9,18 12 6,12 2 3,", "1 17 6,17 13 6,13 9 4,9 10 8,10 7 2,7 5 5,5 19 9,1", "9 14 6,14 16 9,16 18 7,18 15 5,15 20 3,20 12 9,12 ", "8 4,8 11 3,11 4 1,4 3 7,3 2 3,20 10 2,1 18 2,16 19", " 9,4 15 9,13 15 6"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 23;
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    int n = 9;
    vector<string> highways = {"7 2 19,3 2 207,4 5 823,6 7 301,6 4 661,5 4 236,3 7", " 705,6 3 241,8 6 862,2 6 61,2 1 255,6 5 610,6 3 17", "7,2 1 896,7 9 573,5 9 20,6 9 40,2 9 45,7 8 423,9 5", " 3,3 2 534,6 3 518,9 4 421,8 1 853,8 5 549,3 1 938", ",5 1 716,2 5 851,8 6 563,6 3 12,2 3 569,4 2 694,9 ", "4 221,6 5 756,4 9 455,6 7 286,4 6 838,8 4 911,1 5 ", "344,1 8 363,2 7 811,5 6 633,6 1 798,8 1 823,6 5 57", "7,8 6 914,6 1 103,9 8 65,5 1 468,3 4 39,5 8 657,3 ", "2 600,1 9 541,8 4 803,7 2 507,8 6 821,5 8 516,6 8 ", "704,5 9 834"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 1472;
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    int n = 5;
    vector<string> highways = {"4 5 416,4 5 295,5 4 493,3 5 539,2 4 336,2 3 494,1 ", "5 472,4 1 227,3 2 322,2 5 392,4 2 310,5 1 284,5 1 ", "3,3 4 531,1 4 571,1 5 18,5 3 210,4 3 374,2 1 328,1", " 5 306,4 1 438,2 1 512,3 5 243,2 4 365,1 5 223"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 1069;
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    int n = 5;
    vector<string> highways = {"2 3 6,3 1 94,3 1 82,4 3 179,2 1 325,1 4 14,5 1 156", ",5 3 92,1 4 84,3 2 284,4 1 2,3 5 241,3 4 277,4 1 2", "83,4 3 243,5 1 154,4 3 285,2 4 110,2 3 270,5 2 308", ",2 4 24"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 742;
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    int n = 5;
    vector<string> highways = {"2 1 756,1 5 893,3 5 132,1 5 456,5 2 708,2 4 304,2 ", "5 409,2 5 332,4 1 331,4 5 612,4 1 527,1 3 94,4 5 4", "59,2 1 557,5 1 18,5 3 129,1 2 682,4 1 462,1 3 239,", "3 2 106,2 4 897,1 5 12,2 3 50"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 682;
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    int n = 5;
    vector<string> highways = {"3 1 1,1 3 191,4 3 215,2 5 262,5 4 425,3 4 489,1 3 ", "569,1 3 21,4 3 595,5 4 229,5 4 489,5 1 213,5 1 335", ",2 1 666,2 1 677,5 3 535,4 2 684,4 2 651,4 2 45,2 ", "1 105,1 5 119,4 3 310,5 3 34,3 1 499,1 5 185"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 999;
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    int n = 5;
    vector<string> highways = {"2 1 417,3 2 449,5 4 296,2 4 644,1 5 27,3 5 6,4 5 3", "64,1 5 130,1 4 52,1 5 10,2 4 165,3 5 665,5 1 6,3 1", " 52,2 3 95,5 4 201,4 3 277,4 5 363,3 1 124,4 3 128", ",2 1 274,4 5 407,5 3 240,4 2 44,5 3 77"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 536;
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    int n = 5;
    vector<string> highways = {"5 3 284,2 5 272,4 3 55,2 5 325,1 4 107,5 1 321,5 3", " 321,1 3 94,3 2 441,1 4 526,4 3 447,4 1 606,3 5 35", ",1 4 598,3 4 288,2 5 199,5 2 70,1 4 5,3 5 478,1 3 ", "610,4 1 3,2 1 147"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 501;
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    int n = 5;
    vector<string> highways = {"3 2 319,2 1 116,3 5 122,3 2 151,1 5 262,5 1 1,3 2 ", "47,5 4 257,2 5 105,5 1 201,3 5 305,4 5 272,2 4 311", ",1 3 81,2 5 172,5 1 311,4 2 201,5 4 122,1 5 3,5 3 ", "47,4 2 309,3 1 261,2 1 51,3 1 291"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 201;
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    int n = 5;
    vector<string> highways = {"3 1 752,5 4 22,5 3 784,1 5 67,3 4 203,4 1 706,3 1 ", "2,5 1 165,2 1 726,2 4 592,1 3 7,4 2 206,3 4 779,4 ", "5 99,5 3 369,1 3 750,1 3 679,2 4 172,3 1 14,3 2 51", "5,1 5 779,4 5 547,1 4 108"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 522;
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    int n = 5;
    vector<string> highways = {"1 5 532,3 1 18,3 1 425,4 2 537,5 3 383,5 1 494,1 3", " 106,5 3 481,4 3 18,4 2 285,1 3 6,4 1 170,3 5 376,", "2 5 59,2 1 157,4 3 372,5 4 541,2 5 530,1 3 281,5 2", " 48,4 3 232,2 4 235,2 4 504,2 4 474,2 4 547"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 1208;
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    int n = 6;
    vector<string> highways = {"6 1 362,4 6 719,3 2 57,2 1 634,4 2 683,2 6 449,6 3", " 660,1 3 270,6 3 695,2 4 297,5 4 465,6 1 9,2 4 364", ",5 6 756,5 4 672,2 4 370,4 2 444,1 4 601,6 1 115,3", " 1 260,1 6 6,4 6 542,4 3 551,3 4 423,2 6 185"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 1137;
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    int n = 2;
    vector<string> highways = {"1 2 1"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    int n = 2;
    vector<string> highways = {"1 2 1,2 1 1,2 1 1,2 1 1,2 1 1"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = -1;
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    int n = 2;
    vector<string> highways = {"1 2 1,1 2 1"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    int n = 5;
    vector<string> highways = {"3 2 1,5 2 987,4 5 997,3 1 956,1 4 1,4 1 1,4 3 7,1 ", "3 7,4 3 6,1 4 715,2 1 446"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 2948;
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    int n = 6;
    vector<string> highways = {"5 2 1,6 2 982,3 4 1,4 1 1,5 4 977,1 6 988,1 3 1,3 ", "4 3,4 5 1,1 5 3,2 5 685,2 4 720"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 2951;
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    int n = 4;
    vector<string> highways = {"3 2 989,3 2 2,1 4 1,1 4 1,4 1 1,4 3 1,4 3 1,3 4 86", ",3 4 407,3 4 19,4 3 68,1 4 537"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 991;
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    int n = 10;
    vector<string> highways = {"1 4 1,4 6 1,9 2 1,7 9 2,6 1 1,5 9 885,10 5 975,6 1", "0 930,6 7 3,3 2 889,8 1 970,1 7 1,9 8 967,4 1 1,5 ", "3 719,10 4 156,10 6 168,5 1 118"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 8244;
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    int n = 100;
    vector<string> highways = {"74 91 72,14 1 438,79 74 560,57 92 739,16 32 293,67", " 84 134,82 62 522,13 76 133,12 67 370,82 71 574,71", " 61 68,39 45 342,58 57 348,30 22 309,61 22 457,7 1", "1 519,1 54 367,42 14 252,20 47 198,94 68 369,9 29 ", "161,39 63 253,42 27 417,35 1 207,29 4 590,53 56 37", "8,57 79 395,85 30 115,12 26 1,31 2 112,79 83 293,5", "4 83 390,11 12 2,78 13 663,86 52 666,26 20 19,24 7", "2 80,69 42 658,72 15 42,39 8 724,43 50 403,15 48 5", "37,35 56 180,26 12 1,16 87 263,68 79 184,16 19 289", ",47 16 20,46 40 14,93 100 566,94 78 806,86 88 424,", "4 35 693,100 65 60,83 92 514,62 89 334,17 78 84,19", " 9 241,48 94 782,92 12 411,11 94 758,71 69 699,78 ", "72 203,87 25 367,72 7 396,67 57 700,22 14 697,7 94", " 282,58 33 217,3 22 2,80 34 350,28 31 394,9 34 112", ",55 22 813,51 43 706,88 8 8,36 34 23,48 35 42,32 4", " 673,86 57 593,69 29 447,14 100 541,1 3 150,54 48 ", "813,27 31 630,27 17 428,62 47 314,44 72 144,84 19 ", "3,64 1 140,31 54 261,49 3 38,92 82 740,8 15 787,76", " 9 525,64 76 107,34 2 751,77 7 682,85 14 278,43 49", " 89,96 51 907,86 57 37,65 58 222,33 23 287,40 81 4", "15,45 93 148,4 91 444,82 59 101,46 51 637,49 42 43", "7,12 75 464,96 48 63,28 19 580,84 88 41,43 66 44,9", "2 4 607,78 73 106,46 80 327,6 86 77,43 14 474,85 5", "4 78,58 81 173,80 18 109,2 43 85,63 89 38,26 20 41", ",59 54 368"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 12940;
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    int n = 100;
    vector<string> highways = {"74 91 144,79 74 167,57 92 739,67 84 39,13 76 494,1", "2 67 568,82 71 574,71 61 39,39 45 466,58 57 348,61", " 22 408,7 11 157,1 54 940,42 14 653,20 47 179,94 6", "8 335,42 27 524,35 1 696,29 4 882,57 79 293,12 26 ", "1,31 2 597,79 83 410,54 83 895,11 12 19,78 13 658,", "69 42 596,72 15 11,15 48 353,26 12 1,68 79 595,16 ", "19 289,47 16 25,94 78 734,4 35 693,100 65 184,83 9", "2 805,17 78 552,19 9 141,48 94 556,92 12 746,11 94", " 724,71 69 791,78 72 562,72 7 62,67 57 700,22 14 1", "39,7 94 58,3 22 872,9 34 822,48 35 229,69 29 682,1", "4 100 176,1 3 106,54 48 371,27 31 789,84 19 80,92 ", "82 983,76 9 475,34 2 42,65 58 136,12 75 53,85 54 1", "14,26 20 193,52 80 327,51 20 181,3 24 488,75 85 28", "9,38 47 229,53 6 144,2 63 18,77 94 177,82 35 128,3", "7 100 18,26 10 682,96 58 162,38 52 7,56 27 325,82 ", "16 446,63 24 89,75 12 2,28 35 305,67 33 85,49 95 1", "57,85 52 88,17 2 208,60 39 11,31 71 137,76 68 34,8", "0 36 194,99 34 111,91 49 440,60 62 198,88 98 242,3", "9 21 30,27 7 397,87 100 784,33 50 534,16 95 815,34", " 64 67,15 97 759,1 74 528,28 54 345,39 80 588,86 4", "5 443,18 82 253"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 15787;
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    int n = 100;
    vector<string> highways = {"57 92 868,67 84 237,12 67 955,82 71 844,7 11 943,1", " 54 940,20 47 274,42 27 84,35 1 772,29 4 882,57 79", " 900,12 26 1,31 2 853,79 83 28,54 83 257,11 12 792", ",69 42 601,26 12 1,16 19 686,47 16 760,94 78 900,4", " 35 952,100 65 128,83 92 492,19 9 213,48 94 604,11", " 94 116,71 69 909,78 72 944,72 7 615,67 57 834,7 9", "4 559,3 22 367,9 34 48,69 29 723,1 3 13,54 48 584,", "27 31 112,84 19 726,92 82 983,26 20 193,27 7 175,1", "8 82 8,97 18 293,72 21 129,62 32 6,42 88 313,89 97", " 199,32 68 158,88 62 130,52 35 37,75 62 260,78 79 ", "8,22 100 348,85 57 324,71 48 248,36 38 170,68 94 9", "19,10 26 33,52 30 107,31 79 244,82 85 78,87 39 224", ",49 5 9,65 97 103,92 75 135,21 76 145,66 22 474,47", " 21 154,70 49 10,61 47 6,4 40 8,94 83 253,21 14 27", ",99 7 889,14 46 822,74 28 603,34 2 14,46 35 24,83 ", "6 114,57 93 14,98 27 156,96 53 3,96 29 341,51 56 3", "10,61 41 110,10 61 235,67 21 751,38 3 398,42 53 11", ",95 30 181,54 46 809,48 79 151,31 57 246,28 81 169", ",6 93 161,99 1 103,16 15 11,77 59 50,17 6 295,50 8", "4 390,59 22 239,48 83 9,73 48 324,80 71 113,56 99 ", "306,90 96 292,30 11 261,55 48 217,46 97 382,89 6 1", "5,10 48 313,44 20 5,75 22 9,16 93 5,87 57 2,11 36 ", "243"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 23555;
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    int n = 100;
    vector<string> highways = {"57 92 868,67 84 237,12 67 955,82 71 844,7 11 943,1", " 54 940,20 47 278,42 27 14,35 1 838,29 4 922,57 79", " 373,12 26 1,79 83 21,54 83 294,11 12 948,69 42 10", "9,26 12 1,16 19 686,47 16 760,94 78 900,4 35 952,1", "00 65 425,83 92 54,19 9 88,48 94 900,71 69 909,78 ", "72 944,72 7 852,67 57 834,7 94 6,3 22 52,9 34 320,", "69 29 723,1 3 299,54 48 958,27 31 594,84 19 726,92", " 82 983,26 20 196,97 18 29,72 21 43,42 88 549,78 7", "9 343,22 100 12,85 57 395,71 48 16,31 79 369,82 85", " 503,34 2 324,59 22 309,48 83 557,58 42 609,41 66 ", "211,18 54 590,92 15 18,15 77 251,77 59 260,19 67 1", "70,25 6 343,21 66 342,87 21 197,40 30 18,5 99 188,", "44 21 31,87 41 117,66 77 266,11 4 51,27 55 606,60 ", "45 375,36 45 7,90 13 17,81 98 283,42 2 222,94 97 4", "65,3 83 43,73 89 477,43 4 327,46 62 9,71 56 199,62", " 55 78,22 35 1,89 55 510,63 54 105,60 65 593,8 49 ", "417,74 81 1,47 66 575,45 54 277,35 21 238,53 36 81", "6,96 27 51,85 8 215,81 82 144"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 26248;
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    int n = 100;
    vector<string> highways = {"57 92 868,67 84 204,12 67 955,82 71 844,7 11 943,1", " 54 782,20 47 99,42 27 212,35 1 858,29 4 922,57 79", " 146,12 26 1,79 83 97,11 12 948,69 42 5,26 12 1,16", " 19 686,47 16 760,94 78 900,4 35 952,83 92 274,19 ", "9 757,48 94 900,71 69 909,78 72 944,72 7 775,67 57", " 834,7 94 308,9 34 710,69 29 723,1 3 6,54 48 958,2", "7 31 585,84 19 868,92 82 983,26 20 422,78 79 272,7", "1 48 149,31 79 459,34 2 893,48 83 28,15 77 5,11 4 ", "51,42 2 6,81 82 89,94 81 174,5 8 174,100 8 195,96 ", "12 110,82 1 409,92 100 39,27 46 67,8 15 101,77 81 ", "500,31 44 399,54 5 113,3 100 542,28 48 475,73 68 1", "23,11 22 15,19 69 23,17 70 157,79 90 5,13 67 114,7", "7 86 421,72 1 27,91 66 970,90 23 753,39 7 183,27 4", "3 24,84 88 139,55 64 206,52 76 3,56 35 148,97 17 8", "0,96 72 489,2 86 75,38 85 87,36 71 606,30 71 485,5", "0 32 438,79 75 86,50 95 54,53 90 140,56 97 173,81 ", "32 415,50 36 210,74 33 204,86 61 173,40 75 202,55 ", "2 33,64 46 536,100 44 11,82 35 61,92 24 6,24 1 19,", "67 91 149,57 63 29,87 8 31,51 14 102,35 61 172,49 ", "88 121,11 80 176,13 47 60,17 53 165,56 71 122,52 6", "9 50,93 34 99,64 24 96,12 81 125,4 14 170,32 88 19", "2,10 24 98,55 60 66,96 76 61,69 21 74,5 63 138,98 ", "72 6,96 83 130,66 16 47,87 100 12,53 100 170,99 17", " 176,25 9 138,23 44 140,47 79 91,46 79 110,84 75 1", "01,2 39 85"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 27476;
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    int n = 100;
    vector<string> highways = {"57 92 868,67 84 107,12 67 955,82 71 964,7 11 943,1", " 54 782,20 47 74,42 27 804,35 1 858,29 4 922,12 26", " 1,11 12 948,69 42 661,26 12 1,16 19 686,47 16 161", ",94 78 900,4 35 952,83 92 240,19 9 757,48 94 900,7", "1 69 909,78 72 944,72 7 775,67 57 759,9 34 910,69 ", "29 9,1 3 166,54 48 958,27 31 559,84 19 267,92 82 6", "62,26 20 405,78 79 165,34 2 782,48 83 94,11 4 223,", "42 2 9,81 82 16,94 81 53,5 8 158,100 8 33,82 1 769", ",92 100 362,8 15 575,54 5 20,3 100 9,19 69 7,72 1 ", "191,61 22 907,15 46 240,15 1 879,22 29 699,49 61 6", "42,46 92 412,96 49 701,31 96 789,7 41 277,85 56 10", "2,57 96 135,89 23 9,74 53 183,51 21 73,63 56 281,5", "0 65 170,79 29 338,71 48 110,22 68 614,7 15 119,34", " 42 254,60 48 343,17 62 440,51 1 106,50 74 98,80 7", "3 143,12 44 302,85 11 470,5 29 333,32 39 467,97 51", " 280,98 87 490,86 82 440,5 53 16"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 31687;
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    int n = 100;
    vector<string> highways = {"57 92 868,67 84 840,12 67 922,82 71 964,7 11 943,1", " 54 835,20 47 9,42 27 844,35 1 858,29 4 950,12 26 ", "1,11 12 859,69 42 894,26 12 1,94 78 900,4 35 952,1", "9 9 801,48 94 900,71 69 925,78 72 910,72 7 823,67 ", "57 949,9 34 910,1 3 582,54 48 969,27 31 825,84 19 ", "807,92 82 778,26 20 14,34 2 782,42 2 1,82 1 170,92", " 100 448,3 100 11,61 22 907,22 29 964,49 61 699,96", " 49 948,31 96 841,41 71 131,54 3 2,47 42 5,69 92 8", "1,12 6 1,6 54 9,100 47 2,7 41 123,72 35 394,86 42 ", "208,94 86 937,71 27 461,59 55 9,78 20 498,11 50 13", "7,57 11 208,76 43 400,50 96 204,32 3 21,55 10 40,5", "3 95 419,48 86 597,82 16 837,8 69 25,43 82 192,11 ", "98 65,78 75 89,69 48 23,100 85 149,40 78 304,59 34", " 93,10 67 398,80 43 945,18 47 307,81 98 217,5 78 5", "74,83 19 706,23 14 3,68 96 123,19 28 163,54 4 203,", "55 6 40,82 29 398,89 74 54,65 76 33,16 14 332,6 15", " 204,15 44 180,21 6 473"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 34428;
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    int n = 10;
    vector<string> highways = {"4 2 1,9 2 927,4 10 990,10 7 971,7 1 994,8 9 974,5 ", "3 982,6 8 984,3 6 947,5 4 163,1 4 164,5 1 1,1 5 1,", "5 4 163,2 4 330,3 10 281,3 5 5"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 7934;
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test67() {
    int n = 20;
    vector<string> highways = {"11 2 2,11 17 961,5 7 1,20 1 985,6 20 964,9 19 954,", "1 5 988,10 15 971,16 6 964,19 10 956,15 4 966,4 2 ", "951,5 9 988,8 11 1,17 13 975,13 18 933,5 8 1,14 16", " 978,18 14 975,6 11 994,7 8 2,7 5 1,10 14 994,16 1", "7 850,14 8 1,9 18 403,6 16 245,1 18 227,11 8 45,19", " 5 613,5 17 137,3 19 943,2 16 37,19 13 823,4 20 69", "4,14 8 623"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 22325;
    if(result == expected) {
        cout << "Test Case 67: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 67: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test68() {
    int n = 30;
    vector<string> highways = {"18 24 965,8 7 977,21 2 1,13 2 960,16 22 1,7 13 937", ",28 18 981,9 21 1,26 12 936,12 8 959,22 16 1,25 1 ", "962,30 17 984,17 28 968,16 9 1,22 9 1,22 14 945,6 ", "25 948,14 6 935,21 23 954,23 16 982,20 19 918,19 3", "0 971,1 20 974,25 21 959,11 26 922,24 11 924,4 16 ", "44,1 4 158,14 23 35,4 1 837,6 16 76,25 10 165,28 6", " 522,18 30 321,18 29 491,1 4 210,18 20 548,7 28 66", "2,15 20 775,8 4 131,29 30 352,27 14 328"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 23093;
    if(result == expected) {
        cout << "Test Case 68: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 68: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test69() {
    int n = 100;
    vector<string> highways = {"1 3 1000,3 1 1000,3 4 1000,4 3 1000,4 5 1000,5 4 1", "000,5 6 1000,6 5 1000,6 7 1000,7 6 1000,7 8 1000,8", " 7 1000,8 9 1000,9 8 1000,9 10 1000,10 9 1000,10 1", "1 1000,11 10 1000,11 12 1000,12 11 1000,12 13 1000", ",13 12 1000,13 14 1000,14 13 1000,14 15 1000,15 14", " 1000,15 16 1000,16 15 1000,16 17 1000,17 16 1000,", "17 18 1000,18 17 1000,18 19 1000,19 18 1000,19 20 ", "1000,20 19 1000,20 21 1000,21 20 1000,21 22 1000,2", "2 21 1000,22 23 1000,23 22 1000,23 24 1000,24 23 1", "000,24 25 1000,25 24 1000,25 26 1000,26 25 1000,26", " 27 1000,27 26 1000,27 28 1000,28 27 1000,28 29 10", "00,29 28 1000,29 30 1000,30 29 1000,30 31 1000,31 ", "30 1000,31 32 1000,32 31 1000,32 33 1000,33 32 100", "0,33 34 1000,34 33 1000,34 35 1000,35 34 1000,35 3", "6 1000,36 35 1000,36 37 1000,37 36 1000,37 38 1000", ",38 37 1000,38 39 1000,39 38 1000,39 40 1000,40 39", " 1000,40 41 1000,41 40 1000,41 42 1000,42 41 1000,", "42 43 1000,43 42 1000,43 44 1000,44 43 1000,44 45 ", "1000,45 44 1000,45 46 1000,46 45 1000,46 47 1000,4", "7 46 1000,47 48 1000,48 47 1000,48 49 1000,49 48 1", "000,49 50 1000,50 49 1000,50 51 1000,51 50 1000,51", " 2 1000,2 51 1000,52 53 1000,53 52 1000,53 54 1000", ",54 53 1000,54 55 1000,55 54 1000,55 56 1000,56 55", " 1000,56 57 1000,57 56 1000,57 58 1000,58 57 1000,", "58 59 1000,59 58 1000,59 60 1000,60 59 1000,60 61 ", "1000,61 60 1000,61 62 1000,62 61 1000,62 63 1000,6", "3 62 1000,63 64 1000,64 63 1000,64 65 1000,65 64 1", "000,65 66 1000,66 65 1000,66 67 1000,67 66 1000,67", " 68 1000,68 67 1000,68 69 1000,69 68 1000,69 70 10", "00,70 69 1000,70 71 1000,71 70 1000,71 72 1000,72 ", "71 1000,72 73 1000,73 72 1000,73 74 1000,74 73 100", "0,74 75 1000,75 74 1000,75 76 1000,76 75 1000,76 7", "7 1000,77 76 1000,77 78 1000,78 77 1000,78 79 1000", ",79 78 1000,79 80 1000,80 79 1000,80 81 1000,81 80", " 1000,81 82 1000,82 81 1000,82 83 1000,83 82 1000,", "83 84 1000,84 83 1000,84 85 1000,85 84 1000,85 86 ", "1000,86 85 1000,86 87 1000,87 86 1000,87 88 1000,8", "8 87 1000,88 89 1000,89 88 1000,89 90 1000,90 89 1", "000,90 91 1000,91 90 1000,91 92 1000,92 91 1000,92", " 93 1000,93 92 1000,93 94 1000,94 93 1000,94 95 10", "00,95 94 1000,95 96 1000,96 95 1000,96 97 1000,97 ", "96 1000,97 98 1000,98 97 1000,98 99 1000,99 98 100", "0,99 100 1000,100 99 1000,100 2 1000,2 100 1000,1 ", "52 1000,52 1 1000"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 148000;
    if(result == expected) {
        cout << "Test Case 69: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 69: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test70() {
    int n = 100;
    vector<string> highways = {"1 74 1,44 18 949,1 93 13,74 1 1,93 2 1,54 72 946,3", "9 54 923,74 93 12,70 47 921,17 28 956,47 57 979,52", " 2 937,53 85 921,99 73 973,28 49 986,59 53 903,73 ", "83 967,49 99 903,57 96 897,51 17 957,58 86 947,42 ", "58 919,86 59 1000,91 6 947,6 51 950,55 39 955,30 5", "5 943,5 30 900,24 5 984,93 90 964,65 29 959,29 24 ", "959,90 65 994,85 36 894,36 52 965,8 91 924,62 8 92", "2,96 46 923,77 70 915,38 77 953,18 38 955,21 62 98", "0,46 61 918,61 21 966,32 42 939,83 32 890,16 44 94", "8,72 16 889,23 29 619,47 26 234,94 33 108,1 85 70,", "45 65 344,58 4 446,58 56 198,20 25 50,62 90 231,58", " 55 95,42 20 479,42 11 299,8 79 76,1 59 8,70 98 16", ",27 11 89,12 32 10,97 26 6,1 11 532,6 29 284,16 5 ", "2,32 37 131,98 26 426,92 58 203,23 26 955,66 75 16", "5,18 67 121,43 33 426,37 29 56,14 98 410,88 92 7,7", "0 37 331,35 85 98,38 41 718,22 37 2,62 44 196,91 1", "9 219,20 24 471,74 45 226,89 8 376,58 67 17,53 69 ", "569,12 33 265,88 28 447,47 19 375,78 23 14,13 95 1", ",53 78 16,61 15 193,51 93 246,69 54 264,13 46 311,", "74 14 359,69 99 274"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 40533;
    if(result == expected) {
        cout << "Test Case 70: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 70: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test71() {
    int n = 100;
    vector<string> highways = {"1 74 1,44 18 960,1 93 9,74 1 1,93 2 1,54 72 946,39", " 54 923,74 93 9,70 47 921,17 28 956,47 57 979,52 2", " 963,53 85 971,99 73 973,28 49 986,59 53 972,73 83", " 967,49 99 932,57 96 918,51 17 981,58 86 947,42 58", " 935,86 59 1000,91 6 978,6 51 974,55 39 955,30 55 ", "943,5 30 977,24 5 984,93 90 965,65 29 959,29 24 95", "9,90 65 994,85 36 894,8 91 957,62 8 922,96 46 923,", "77 70 915,38 77 696,18 38 955,21 62 980,46 61 918,", "61 21 966,32 42 939,83 32 890,16 44 948,72 16 889,", "43 23 981,36 43 658,23 52 881,68 9 276,77 87 94,14", " 98 142,70 15 211,86 97 296,82 11 652,52 33 249,59", " 39 102,2 63 30,96 24 68,36 48 154,12 36 601,87 3 ", "76,8 72 558,98 15 8,76 43 129,91 20 403,44 7 54,40", " 88 757,46 7 737,43 59 570,95 38 224,87 63 519,87 ", "1 164,81 24 594,98 97 267,75 13 97,22 38 23,79 91 ", "43,77 31 783,33 31 425,40 20 58,50 59 22,81 17 122", ",32 92 795,62 54 101,84 54 576,35 52 16,31 55 607"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 42239;
    if(result == expected) {
        cout << "Test Case 71: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 71: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test72() {
    int n = 100;
    vector<string> highways = {"12 2 941,71 8 942,32 2 134,96 100 935,97 53 935,32", " 16 972,87 34 940,30 56 56,1 50 974,68 72 840,77 1", "2 987,53 79 952,72 65 929,28 22 946,1 32 967,90 37", " 920,50 28 872,62 89 945,91 13 950,8 77 984,23 74 ", "953,92 20 957,60 99 35,81 9 329,16 18 980,81 56 95", "5,34 41 954,20 1 992,37 23 952,79 26 722,18 96 908", ",15 53 301,65 91 974,70 16 419,13 87 972,94 68 952", ",41 38 249,25 48 70,52 6 954,53 86 938,61 86 125,4", "4 4 341,5 93 950,82 52 966,56 82 951,74 78 961,35 ", "33 499,47 71 975,11 80 53,28 38 419,35 94 949,77 4", "9 795,35 84 664,54 39 106,54 46 134,36 67 208,88 6", "9 671,40 58 193,89 92 956,36 49 983,74 39 257,6 35", " 945,78 59 953,57 84 4,36 18 659,98 26 123,34 42 1", "22,59 67 958,68 80 474,88 3 755,87 65 591,87 43 29", "9,67 81 983,59 43 563,66 65 399,28 16 218,63 24 16", ",27 26 540,39 45 690,29 64 543,35 73 795,50 31 270", ",27 66 382,51 80 181,29 46 456,36 27 313,41 36 950", ",6 9 38,63 13 365,2 60 65,10 46 654,91 59 107,32 9", "5 170,100 64 946,63 36 514,92 31 668,28 17 10,68 6", "7 408,49 97 921,36 67 32,93 95 706,79 62 923,29 25", " 153,89 58 275,46 90 937,4 10 736,80 37 113,72 26 ", "82,17 95 286,9 100 416,31 18 14,40 59 606,92 27 15", ",36 54 915,63 73 31,59 84 224,47 15 904,2 98 657,1", "9 54 504,85 78 259,71 20 558,49 3 62,70 91 683,98 ", "84 933,64 5 910,1 62 253,61 71 47,48 24 198,3 76 3", "92,93 46 927,31 3 82,14 44 456,19 55 17,75 49 821,", "89 91 1,54 38 2,77 87 392,34 7 192,69 100 284,47 3", "6 109,85 46 95,22 47 955,5 32 326,24 9 365,71 3 36", "6,13 55 141,73 33 352,33 86 470,33 18 302,88 98 24", "9,14 23 242,47 23 522,37 39 511,77 20 900,24 87 15", "0,2 80 871,36 39 27,56 4 230,6 51 198,58 41 719,99", " 35 351,61 23 462,10 84 619"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 47433;
    if(result == expected) {
        cout << "Test Case 72: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 72: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test73() {
    int n = 100;
    vector<string> highways = {"12 2 975,71 8 947,32 2 930,96 100 988,97 53 973,32", " 16 972,87 34 954,30 56 605,1 50 974,68 72 956,77 ", "12 987,53 79 936,72 65 929,28 22 946,90 37 811,50 ", "28 954,62 89 955,91 13 989,8 77 938,23 74 953,92 2", "0 957,60 99 262,16 18 906,81 56 955,34 41 988,20 1", " 992,37 23 969,18 96 908,65 91 982,13 87 972,94 68", " 955,25 48 263,52 6 954,61 86 336,5 93 950,82 52 9", "66,56 82 907,74 78 961,35 33 20,47 71 975,28 38 52", ",35 94 986,77 49 98,35 84 367,54 39 96,88 69 806,8", "9 92 932,6 35 871,78 59 984,57 84 437,36 18 335,34", " 42 232,59 67 982,87 43 677,67 81 919,59 43 749,66", " 65 933,28 16 570,39 45 568,35 73 739,27 66 961,51", " 80 561,29 46 422,36 27 916,41 36 974,6 9 152,63 1", "3 828,2 60 896,10 46 318,91 59 769,32 95 291,100 6", "4 881,92 31 871,28 17 489,68 67 731,49 97 801,36 6", "7 180,93 95 491,79 62 944,29 25 693,46 90 918,4 10", " 40,9 100 347,40 59 336,92 27 658,63 73 413,59 84 ", "429,19 54 13,85 78 575,71 20 476,49 3 625,98 84 88", "7,64 5 923,1 62 851,48 24 150,3 76 54,93 46 770,31", " 3 707,19 55 896,75 49 961,89 91 411,54 38 263,77 ", "87 745,69 100 452,47 36 942,22 47 955,5 32 950,24 ", "9 757,71 3 377,33 86 38,33 18 317,14 23 427,47 23 ", "343,37 39 349,77 20 416,24 87 410,2 80 767,56 4 66", "5,58 41 926,61 23 469,10 84 177,24 79 348,55 5 874", ",34 99 726,89 16 835,24 31 803,51 33 524,48 62 20,", "94 99 410,54 34 135,66 75 987,41 37 837,22 13 500,", "85 57 983,57 84 425,15 46 272,23 43 820,19 3 644,8", "8 37 294,55 21 252,35 42 339,49 96 387,55 35 736,6", "5 55 942,42 76 141,50 15 219,2 1 712,67 59 814,10 ", "33 277,81 40 596,89 96 419,72 76 587,97 30 104,52 ", "61 206,12 24 646,27 100 499,31 95 726,57 16 306,83", " 70 824,78 37 675,78 98 512,54 58 713,58 95 342,17", " 25 212,15 69 291,89 7 557,85 5 453,46 84 495,92 8", "1 82,89 99 120,58 57 948,6 14 340,85 11 404,5 51 4", "91"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 59446;
    if(result == expected) {
        cout << "Test Case 73: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 73: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test74() {
    int n = 20;
    vector<string> highways = {"1 13 3,13 4 7,4 3 4,3 10 8,10 18 9,18 12 6,12 2 3,", "1 17 6,17 13 6,13 9 4,9 10 8,10 7 2,7 5 5,5 19 9,1", "9 14 6,14 16 9,16 18 7,18 15 5,15 20 3,20 12 9,12 ", "8 4,8 11 3,11 4 1,4 3 7,3 2 3,20 10 2,1 18 2,16 19", " 9,4 15 9,13 15 6"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 23;
    if(result == expected) {
        cout << "Test Case 74: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 74: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test75() {
    int n = 100;
    vector<string> highways = {"40 100 259,72 3 330,10 27 890,96 90 708,89 29 644,", "4 84 523,43 30 135,82 49 481,47 7 835,96 75 46,95 ", "92 634,10 25 324,97 65 500,100 50 157,63 3 810,93 ", "74 795,76 41 230,47 16 9,35 95 386,36 47 838,23 36", " 219,58 10 523,21 19 68,98 70 424,42 72 679,53 58 ", "913,74 17 632,39 20 237,36 88 465,100 46 107,29 54", " 605,97 73 921,36 83 738,100 67 591,51 74 189,62 9", "5 231,91 44 886,89 82 640,59 88 326,95 94 778,40 3", "9 41,80 45 804,65 8 38,57 28 243,90 35 574,97 82 1", "94,20 37 249,22 83 969,54 58 713,38 61 868,68 21 9", "75,29 91 899,48 32 515,33 45 890,56 98 799,91 54 5", "68,7 80 462,19 15 464,36 77 809,43 100 963,28 89 7", "36,51 22 379,89 32 517,73 93 535,27 80 727,52 65 9", "31,94 6 727,31 17 354,26 29 802,15 26 693,37 67 50", "8,33 45 641,25 80 542,28 11 953,32 60 116,66 78 25", "2,41 86 260,46 68 35,36 83 249,48 87 912,85 5 946,", "1 61 973,32 29 244,36 78 921,61 46 596,27 2 67,3 5", "8 903,9 71 916,1 61 921,35 46 376,25 45 594,95 68 ", "14,51 59 663,92 56 409,78 77 489,70 85 278,36 7 58", ",48 49 907,95 92 531,74 78 731,59 10 550,35 20 496", ",22 58 913,9 16 638,13 69 327,56 70 447,23 84 601,", "89 82 345,71 45 121,65 93 472,31 23 15,59 47 341,2", "9 42 128,89 87 267,48 60 30,39 43 364,17 47 688,57", " 15 551,99 30 220,69 60 969,27 2 171,57 85 69,92 6", " 379,53 3 412,38 90 928,6 19 415,92 28 502,28 11 2", "46,49 93 553,66 59 307,7 79 236,67 92 595,15 89 87", "7,37 98 996,71 16 939,48 32 34,91 72 429,1 61 374,", "10 84 917,84 64 178,62 37 981,96 100 987,79 2 241,", "97 60 222,60 49 846,63 3 845,42 51 583,29 93 747,7", "4 17 239,68 92 630,50 6 889,33 81 538,11 60 349,23", " 77 348,80 45 298,100 50 830,69 32 358,21 6 735,28", " 86 206,69 32 324,38 35 394,75 43 4,100 20 748,71 ", "16 502,96 46 614,1 75 670,46 67 407,50 56 254,29 6", "5 583,29 93 16,84 77 378,58 78 353,51 59 223,8 72 ", "636,30 94 110,35 39 193,32 60 729,1 24 301,28 13 7", "11,15 52 492,54 66 978,21 6 409,47 71 972,69 48 36", "6,68 12 939,20 68 340,86 5 400,70 18 827,48 49 356", ",40 20 192,12 57 11,20 95 558,17 4 483,19 18 885,3", "6 25 267,83 33 241,40 100 829,50 12 437,36 47 23,1", " 38 817,71 2 539,51 4 917,38 75 601,96 100 869,9 1", "6 5,92 94 469,16 45 453,86 97 335,85 5 118,4 59 51", "2,40 46 361,91 51 994,61 20 466,98 41 102,51 59 26", "5,25 76 247,93 57 386,97 18 785,31 67 271,100 39 5", "51,64 28 815,76 58 427,69 5 648,35 5 255,36 73 189", ",100 97 364,98 41 372,83 37 689,42 19 46,92 34 925", ",7 10 982,85 78 839,32 64 743,38 51 915,26 3 63,41", " 100 303,12 83 439,52 54 510,59 95 281,4 87 614,28", " 45 575,61 81 805,99 13 768,93 2 271,59 80 873,21 ", "20 172,75 32 554,66 35 859,75 93 654,55 96 192,21 ", "75 936,95 36 16,99 86 80,19 79 382,89 37 813"};
    WarTransportation* pObj = new WarTransportation();
    clock_t start = clock();
    int result = pObj->messenger(n, highways);
    clock_t end = clock();
    delete pObj;
    int expected = 4130;
    if(result == expected) {
        cout << "Test Case 75: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 75: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    test67() == 0 ? ++passed : ++failed;
    test68() == 0 ? ++passed : ++failed;
    test69() == 0 ? ++passed : ++failed;
    test70() == 0 ? ++passed : ++failed;
    test71() == 0 ? ++passed : ++failed;
    test72() == 0 ? ++passed : ++failed;
    test73() == 0 ? ++passed : ++failed;
    test74() == 0 ? ++passed : ++failed;
    test75() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=8394868&rd=14147&pm=8404
********************************************************************************
#include <map> 
#include <set> 
#include <cmath> 
#include <queue> 
#include <vector> 
#include <string> 
#include <cstdio> 
#include <cstdlib> 
#include <cstring> 
#include <cassert> 
#include <numeric> 
#include <algorithm> 
#include <iostream> 
#include <sstream> 
#include "float.h" 
#include <ctime> 
using namespace std; 
 
class WarTransportation { 
public: 
  int messenger(int n, vector <string> highways); 
}; 
 
typedef pair<int,int> pii; 
 
#define FOR(i, a, b) for (int i(a), _b(b); i <= _b; ++i) 
#define FORD(i,a,b) for (int i(a),_b(b); i >= _b; --i) 
#define REP(i,n) for (int i(0),_n(n); i < _n; ++i) 
#define REPD(i,n) for (int i((n)-1); i >= 0; --i) 
#define MP make_pair 
 
template<typename T> inline int size(const T& c) { return (int)c.size(); } 
 
const int inf = 100000000; 
 
int n; 
vector<pii> forw[100], back[100]; 
int dist1[100], dist2[100], dist[100]; 
bool was[100]; 
 
int solve2() { 
  REP(i, n) { 
    dist[i] = inf; 
    was[i] = false; 
  } 
  dist[1] = 0; 
  for (;;) { 
    int j = -1; 
    REP(i, n) 
      if (!was[i] && dist[i] < inf && (j == -1 || dist[i] < dist[j])) 
        j = i; 
    if (j == -1) break; 
    was[j] = true; 
    REP(i, size(back[j])) { 
      int x = back[j][i].first, w = back[j][i].second; 
      if (dist[j]+w < dist[x]) { 
        dist[x] = dist[j]+w; 
        dist[x] = max(dist[x], dist2[x]); 
      } 
    } 
  } 
  return dist[0] >= inf ? -1 : dist[0]; 
} 
 
int getDistance(int x1, int x2) { 
  REP(i, n) { 
    dist[i] = inf; 
    was[i] = false; 
  } 
  dist[x1] = 0; 
  while (!was[x2]) { 
    int j = -1; 
    REP(i, n) 
      if (!was[i] && dist[i] < inf && (j == -1 || dist[i] < dist[j])) 
        j = i; 
    if (j == -1) break; 
    was[j] = true; 
    REP(i, size(forw[j])) { 
      int x = forw[j][i].first, w = forw[j][i].second; 
      if (dist[j]+w < dist[x])  
        dist[x] = dist[j]+w; 
    } 
  } 
  return dist[x2]; 
} 
 
int solve() { 
  REP(i, n) { 
    dist1[i] = inf; 
    was[i] = false; 
  } 
  dist1[1] = 0; 
  for (;;) { 
    int j = -1; 
    REP(i, n)  
      if (!was[i] && dist1[i] < inf && (j == -1 || dist1[i] < dist1[j])) 
        j = i; 
    if (j == -1) break; 
    was[j] = true; 
    REP(i, size(back[j])) { 
      int x = back[j][i].first, w = back[j][i].second; 
      if (dist1[j]+w < dist1[x])  
        dist1[x] = dist1[j]+w; 
    } 
  } 
  if (dist1[0] >= inf) return -1; 
 
  REP(i, n) { 
    if (dist1[i] >= inf) { 
      dist2[i] = inf; 
      continue; 
    } 
    if (i == 1) { 
      dist2[i] = 0; 
      continue; 
    } 
    bool found = false; 
    REP(j, size(forw[i])) { 
      int x = forw[i][j].first, w = forw[i][j].second; 
      if (dist1[i] == dist1[x]+w) { 
        forw[i][j].second = inf; 
        dist2[i] = max(dist1[i], getDistance(i, 1)); 
        forw[i][j].second = w; 
        found = true; 
        break; 
      } 
    } 
    assert(found); 
  } 
 
  return solve2(); 
} 
 
int WarTransportation::messenger(int n, vector <string> highways) {     
  ::n = n; 
  REP(i, n) { 
    forw[i].clear(); 
    back[i].clear(); 
  } 
  string s; 
  REP(i, size(highways)) s += highways[i]; 
  if (!s.empty()) s = ","+s; 
  REP(i, size(s)) 
    if (s[i] == ',') { 
      int u, v, w; 
      sscanf(s.c_str()+(i+1), "%d%d%d", &u, &v, &w); 
      --u; --v; 
      forw[u].push_back(MP(v, w)); 
      back[v].push_back(MP(u, w)); 
    } 
  return solve(); 
} 
 
 
 
// Powered by FileEdit
// Powered by moj 4.12 [modified TZTester]
// Powered by CodeProcessor

********************************************************************************
*******************************************************************************/