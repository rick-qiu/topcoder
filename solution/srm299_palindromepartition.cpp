/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=6043
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class PalindromePartition {
public:
    int partition(vector<string> s);
};

int PalindromePartition::partition(vector<string> s) {
    int ret;
    return ret;
}


int test0() {
    vector<string> s = {"AAAA"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<string> s = {"ABCDEFGH"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<string> s = {"QWERTY", "TREWQWERT"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<string> s = {"BBCDDECAECBDABADDCEBACCCBDCAABDBADD"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 22;
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<string> s = {"GKTQWLBWOGQCGERTMYHENNMGUNCAIRFDTPGZFRSHTEAKUGBAIJ", "BLMJJGQYQRRSASFRMRDCUSEVUJYUXGQEZKRLGKVCGFAFVGGPFA", "TRRCIACXCMLWOUHJNZSKXYCBPUMNLMEMWBGWTWBAKUBWICDQCB", "SMLRETHSDQQSYGWOOXERMRLXRPFZMPBINEFSFPOAHGQXXSTHBP", "HYDRLSLYQSDKSHTRZRYBJNVMLVGBZBQVZKPZHUVGDQUKXCMNQL", "UMKPXWCNCNUKJWFAGKKMUHHMWSCPYTGADEXMBLSGJIXOUNZYJS", "UWLIUAUPILVXVTDKQBETPLVPSMSZMQBTBQKEKJTCFXEYPCULBZ", "MSZVBLBVJAXRGFLJNYAUSJZBHIUVAODPOUJGNZNBFUOWTVSEBK", "PVPNMRYZVVNXNYHYGXOHGFFZXHFGHBQPFFCOEEDHEHWRJVYMFB", "HJYENRLFBEEPCGBWVNAUGCJPKYMRDHAHQGXMRMTCREYEUJIZDJ", "PKATAIKXGVURLLNXAKQMOSDXTWHNKYICFSOAYIYOQCELIKPGVY", "QEPXOVKMNUSILPOZFEYPZZEFYVTMIEKVGOVWSOFNWOUZLUBJVZ", "YKGECOBOSBCQKLKDFYINFGXWGYDMSPLPAFKCDEVVLUDKEZKUUS", "YFXORCWLCPCFNSFSXTPYYIENMINHWYSAYCMELEKBVVJKXLUWAZ", "MIKDHLAEYYTMIVOMQLYLUJQAHERLBSYSIPNXGTMRNGITXKVVSN", "FUAJSWGDITKRQVFSBRPAKPXGIOYESLRFOKEEZCDRRYIHYBXKYZ", "YAHPHSREYWYPZBREMDIJOXYZKIOHSBRVCQKJPATIPIDQVISHFV", "MIQRPJIVZFNUWRUDTNEKGHOSSSVAYMSBXPCMMCWZPQXKRNBXKP", "DTERSIZDKVFWNVATGPVNXFQDXNMSVOCGBRXRZSCAIENECIAIBZ", "EPLGCMGLAEGXMYENDYHQZOEEJLFCZVZIJPLXYHFCJGNABFHIYN", "WDMVASMIOSUUFCSLDIWDQFBTZEDNUXTZUJHYNJYUACGQJKTJSU", "MPBHUYYXXISSHJLTXYYLHLMJXUTBJDOWFFNLSPZWJAQYQEDZQW", "EXGGAWFQHRWABGJMSNIYQAKYTOGJKWTSROARTBLOMNVRUZZYWD"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1013;
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<string> s = {"VFWJVNFLMVCPWUSWJQFHJFCZUQFZNUUYFGRBAGZYGWGLTZAWPS", "INLJMAAADLLIBQYTBWTOSEGPRCTWFWMEULXBTMNBBEFYVTNOXQ", "YEAAGPYWJWVAWGPRPEMRYEETYTBOCEIQLCHGSFWOGPMOETBFNS", "YYNPAFSYTGMUVQKLVRRMSMBXMSMIWPUAJPCFMBVZQYZLFYWQRD", "TEYIPXZOLHAUOPTWARUGNNJUMUTFCHVIDTNHRVCGGRVGDCYZJH", "NGIOIXPGXRKGBZPMRCJGPWTGCYWORDRDOZRCXHKWOZFNZTQFYX", "QWHKJMTEFBMMEZDUGODBQNXFBLDHDQIGSQRXCNHWUBUFRIXOSM", "CEPUOZNLTHTBAIVSEKOJIIDBWKMLUOWQOOFYKJIGBFPQSOIMCU", "ZPBICYTCQFBQQAGGYXQXFUBTNCHCQPMADPVEMTJISHJAYWPCXM", "XNCEPIVYCIHVGAKJKOERNEVCRLYOBYUADUZVILNMUGYFFOTUXS", "HGVOURHBTUUSWSPOWIWQCQIIIBANVHUGWDTLXVWPRLVEZKXGAK", "OGUBAKFVCTSEVKEGOTDELDBOCDRSBUPDPTGDQWNFUYGHESMSLI", "ZWJHJMHHYYHLATCMWACNGCFVTKIGFXJCQXHCDSALLBICTSZUOM", "USORKEEVBPVJFVVAGDAASFMWEZHQZYWCMENHFQBRPTZWPIUOSL", "TKPHWVCVGNSHVDDFNNIUOUKEHKCINRHKEZVHZBVXLKQZGPFLXC", "FIKSKWPGAPNECAFEJVYNKVPQAHJDLCDCIVYRSFRVRVVROSWPYL", "IUEVSTZKDGWVUTWUBQXBPUARFLKHGCGRJFVMTONLZZZSNMXTHJ", "XWIZATXMTFOUTBWWNXVALOBGMJCYHESFXJCOJRULAFDWVAGMOR", "DILUZQNVIBVPCHMXCUSBJWAPIVOAMPSTYYAFBLOQEXDIQNPFRG", "KKSVWDQLBLEKCRSMMXDQKURVOWILLOHRUFMGAARQCRNVDKWVCU", "SZERYJMMPIRQLAYZXSIZBNLCGNQKZBWWUYKIFHZOMFFPTMVDWN", "YEPMQZVVQOSLRABRWBUNZKTVKBXNHDUSJFDDAQDWRFVOFFSBTT", "DIKGPOVEURYHTALFRHXHUKOGFCDHQTPTRCVIXQMNGWHBHYJTEX", "HFYAKYVAUCFAHWAMTXDXSCHEQRTRRVWHENHYSCQNMKNYAIXIOB", "HZDLZUFLWBGZYXGKGCJZVZGBCHHYBSKABEVONHARBTHETLFARE", "MGPACSGNBXKXJWQODWFKXNJDKVRTLKEORDIMVDSWOVXLGRWVSI", "JAQGKGMXHAGRVKTHKJZAWFIYPAVMENQGNISZHVTSFNUVJOYUHA", "DZUGIURRRHOVHOESOW"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1240;
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<string> s = {"LWFBWBXCNUHRWOQZHVNJMDERPKPZUKAOHSPSUWWXPGVFQLPQLL", "PAVNZQNBCSIJNGGQTBIXPITNXRGTKPMDDCKWSIYRIFJJJOBFWB", "RRBLTFOZWKPDYEPCYEFCXZBJFDPQBLSUGNDXZGGCWBRGBFYROF", "IYFDMGHIEGIQLMTRQBOXXCTFBNTHOOLPZKKNGZHKBTSMSIZEJS", "LVXDKIGATRJODTWRRANTDRDBSXSSCXEJDZDMUPOPKCTNIBUOYS", "XWYGJTOJADJQTCAQZNFCLMUNNOWQNJYBLSCENXHLRCIXWNAMEQ", "BSERVJZRZMSBZYSVDHMHOGFGTDDYYMBLBGCQZHYDZMCEFMSUWF", "ZFTDRJOPHDGAJNBHLOOKPEMHGWLGYGGNVPZWNFYLYOCTIQEGNC", "NBRDFLUWFAIANOTYDLRUIOQHKSOPUMMOOZIPFIJMUBHYDOKIUI", "OBIUZWUHHHKBOWDHFASDLRCXTZUOMMEFBDTUNPOEDTVAWMKKMD", "EYPYXKAFHLQRHHNGSZSFTLDDZCONDBRQGSHJOVZUTZKTXXURLT", "CEFMXOEBRQAKWKVCZRFTWYNTLGKYCVMGAMKALISIHCGXPKATCE", "TBMBDEGFYLGFMMZSMFGWJHLUXJUPDCASTABMHOIILXLJKIHAML", "HQXEDESXZETKDVKGGUAZDUMEKZLMHFYMAFLYHGDZAJOWSNVSHP", "NLENJKGVXMJRHMIGGOXTHNJKQJDNSSUQDSWXCBQUKTTJPXPNXS", "UWCQWUCTPCMVWROLNAMAQTTNRVRORWCZWLFVWZKRJCHCBQPDOM", "YNWWZVKGBPVGVTZXXADOFRRYCVLNIDGNRAIEJPCJYMWSFIYHFJ", "ZGHAQSKRNJAQYYPKNZHQYNICBKRUMEYLCVVZLAPQHLGPWEIZLQ", "NOBQXQCMWCKVOETEANEDSDEZQZGFFFNMXUNGAODJOAJZHSOFKO", "YWLVDJFLHRIBRBOQKMWUXKVFBCATSCTUTPJTNACNDSKUHBWFSB", "FOLDYCEDLDVXZURKPHFNQQYEZZFCJONIQKKEKCHRVEYYHZQWBF", "NOMBVLHPTZVLSCKFWEXGAXIMQNZPQFLOHVKVVKGWSRHPHYMGGZ", "JRWPSZZCTSOEBTREMXASNMICXMDYRCRLXELDNAJEKHJEYONOYB", "KNMKIICNDUHSNOYLELYFVLYCVFYBZZHXXOFYXPPWDTPIUJBBOC", "ZOUPQUWWNUSPEXOENTTDFOYSJPVCAIZFHJCKAVFHYLVOMJFIYV", "YHBNICFNOZVOXPFJDWSMQGDFAFLLUOTNDOLNBALIHIUUQNYNUX", "SYXCTOIYHCDZWOIMWBWCCSVQHXPYFFHQCFTVEHGHRFAJAYDRDP", "KQXSMMASZKRELGGETXNQWUILIZQBNWDJKKIPZKYUEZNLMBSLQO", "QBQEHHTTUQZYCOKXOBOEBPIKTKDKIOZLZLMDUEAEISKTKBACLE", "WRUKSYBVOUCYJYXYVQFGXKVTHKSSWRRHBSRJNOWTJUFUJYIDPP", "GQYBPMLYVCLVNCUKLLVRJPTADELZYXDCUEXMOZGPVTGIBSEUCM", "VKJEGFOZDEENHFYRHONTMRZZTQCMRBVCPMLPXHJZWEEMHHZQSS", "WNNNTYKTBFLODVDCXIHDQTCITTYQMOSBULASXSPFGXWQOBODUD", "IVSTEMNOMQERVFCYHTJCSHMBZUBYUBUDNMDGMETOPWACMMLYYI", "GUCRNMFORNUYJXTGRKJLLSLYGWDSDMFFYKCUQFLRRRNKSGMOGC", "CYJGSOGRGIFERIBGYPZTBVPEWTSHNTEGYZXVLNQGDJJULNKQXQ", "IYXWFNTSZPGITLDKGLGTGCFMDOCYZPFCFXGVMEXUVAKXRFXRHK", "FFFMUVQARRBBBSWDYRNKGAIUIDVXLUPKTATQCIVARYCVPUGMFO", "THMYFKTWFRVKNMYJKOMIIVCDTLYIACSSUUJVZUVYEPFUCXEMXD", "DWMYIRYKFVQOSMNRPLVFHIFMRTCLKUDBFNIJJAUALKETVGXPXG", "RGGCBDGSYCZTHXYMRGMVQKRUMVEOGBXDETILQCZQXHUWUBLOAH", "PTBOYHCJJZBHFUSCQNDSVFVTEVDUUDOJARVHEVIHLGAOLIHVRU", "YHTQJNXKGDBDFVNLXHIWDWXDBVDOUXNPRXRQXBFJCBJFSFKANC", "HMFQVNIXUURRQOCNMQMCXSYIPLJOIODAZLANQJEPYBETZGJXBR", "XTDLGPVRHENDJHFYSWGUFIAWHCZKQQFFQMOQTGZEHRQCCZVYEG", "CYFONJQ"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1976;
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<string> s = {"OVKGTNZCJPIRYXXDUULXOVXRBBFMTHQKALKBLIUSCODYPLJWPR", "RXFRHKLNLEDAJBHGOEAZUUWYMCWXRODGILMFICBTJOALSKOJZP", "FMJEGGYZMZMHYFEBBPTTFIQKRCEDRXAFRHPAFBIFIAFJAHDYPS", "BTRWEHKCBHWGHSAPHWGBPKBYAOVHKFSZJTPCBRLDHIVSNOWEAO", "HAAWMGSXHELVALQTSVRVZNPYTVUFVGAHVVAVHAVWWXUPCSLDDA", "NXGELGHBGVMVHPRLFICZSELRIELADROQKWIOXQNELNGKMKFXOH", "OKHXIPCAPFTJZUHOKUXWBWYERCBXGJCKIDJNIBKLZPCQBSKQNN", "YCYZSNFOCSDCEIXSHUUJSRCGQFTQDPUAJUSLVEHCNROLIMWEHW", "KCTRHTPFOAEUEDFRIJPOHRVDVUGCTFFELTMJZHXCMHIKRKEZHU", "OZORJQPRAIZAQPPBZJMQFOYATNHVSDMZNOLGCEATSCAMXHAURH", "DDXUVXRZYAZAIGLGGATAURVGHBZSITENFVZFORRONHX"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 490;
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<string> s = {"RZNXFGVVZIYLEUSTPYGHZEJRYFLUWLCXWSDCQWLNEOYDBHNOML", "XQQLMIGMZBWWWISAZKQGMNKKVRETOSYHLOJHQQILKSIRGGMPWD", "LMOKEXZFYBUBMVHTICULKIETZKAEWFXNEEYGNGVVMPUVDJDVRU", "OYEHWFPHRAEUJOZOTKWTDJDIYQHGXIMXKSVSHVWDKAZGUCWNSN", "CTUNBYIIXCSLVPKNBZOGNIETNRWXZKHRQSAWKOQEHMWJTNKRYP", "XYDWNEIGONGGSHIEDVIZMUJCYCFAZSCEUGKJXOOEAJSSVAMWVP", "XQZCLUSKFAKMOLZHXZJMSVRRIYIZYLUGFLDKGJFBSZQIWDJDDL", "RXVRCNZTOQYUEUIZOICXPMOAKTBECQREKDKFDXONOQFVEYFLRW", "SKIBRVDSNNNKZDTVKCVOZFDFZPGIXPOHGCBAXRANHHGBOVQZFZ", "KDBLUSWFCLHSZIJGRKBLVURPBZVLVXTUJCNKTZAVRNHVNXGFGB", "XOGLPSYJDSPHKIKTGUZECWBUVKLKLKCUFDNVJAFHXYEEARMHWA", "DTDQQETPQNBLSDRUSOVYHRMDHWVWRQEZOMRRYOWEWHQYWNAUNS", "GBVHDSNCRDJRUHLQSNTPYKNCDQOGWZKNKYTSEWEZTTDDIBMRUY", "DVUFSRAIXJWUPTLJEKUHEVUBTMMAILVQFQCDHBHZJWPHYLDCKR", "GHGKZPGDUMEDFMNFOFURJPNNRACWODZQTSVUYXVHUJAIXNRPWF", "NHBHGAOGJVJLTGJDBLUQZAAFOXESORQJMZTHOUUVVJQEPIGOTC", "CNJGYDEBXGGGNOKEHVTFVBGXZLUPNSNXZKVSAUBKKKCXAIRSYK", "JKDBCDJPTNEWRHXHNZSNAWKMQARQNSLKALCIQEIZCLIWFAVDTN", "JFQRCXPWBGTPAMTDCBTLUDSPWFWIHDBQJHFLHFZQPJAFKGQFMC", "BTGORZVWCQEMFKAXTDBAYFUVOTSNCGOTAFOAHNDPCVXLEVQRYB", "BBXLZDMRPDROPBRHDECXROSAHNERMXHULDMYPHNWEBFLWMUUUY", "UTHPOUSDORVLXJTDOGAXCMYITZPGYWVFIKWEZYZXBGVSRCABFR", "NGLBBCMBZDIZACYEEHATIOMVRUGRUZRKKCLNXQXLEKYARSYEZO", "LSNVXNMHXBBCMLXXSANFSTGAMELGAICETTTQQKLMSQFSIRIQQF", "JHUMJNHYNBZKEZCCSYEIODJCFDEVUXGYHJHWOANEPNVBXJLJOU", "FBXTKNLWFLNYIMSBMCXGZEUFXUYHLKWITCNGAGUMTXPMJLNCZD", "INGKQSRWXJLOTWZWIICBNPLMEZPTYHNVWTQVGSVNKUMKTSFRJD", "HYLZCGGIZSVLEUKKBQEZHRYHKXXHCOMMYKWLTCYDDXKQCPXPGM", "ILFHCGSKRELLQTDEMYPXGNLJLYSPFZRHGBYYIQPMAYIEQXQJNM", "EECIAJCMSAEXLHWXCHDZCDLJZHIOYLPFELNVQPAOYVQEKDODMQ", "XLVTSGWJNXIDXIMZIAWBINMZIHFVEABFBUEZIMSQZQRQADGYMK", "YCRVRFAHDPDXCCZIGUACLHLESLBBTIUDVKDBACLWFEEGCGZZYQ", "DEEHOKUINORZDYFZEVGBHGDMQPRKKHSDLWGOCYAMLFSOGCNHWW", "KIFHKYFPSDMJWLDNHSQWFLHTWPXOVYQAOBWKEEDYKXLXJVALAH", "VZXAAYLMWVBCLFFEUQKFCMZZPGZDFFNSFOIMBQUKTZRDSLYMOP", "QMGDCOAGBKIHZDINNHIUPLITBVHVOQTNGQFXKOXKTBOJWRTKDJ", "CMULDKDFPPECVEHTCWAVJVYXKFVFYHPYHWKFVVQUJBBGHBNGLG", "BANDEZARUNIYBQCEUHZMAIYORENBLXHJYRJRVVVRUFIOIHKSLD", "DKLZBQTZZWHSDOKCZHVFWGFQKDZFIZEZUJTEYVFLBPYFXIFMJL", "XGPNPEWBJZQL"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1756;
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<string> s = {"AKNPTHVFJBBBCCFMYKDPMXTRWALKPNUWDLTFXHKEEHQBNPYNGC", "BASGFLTFAXHNRLEINRBMKQJBHYZTGWGIMBCLICQSYGTWXHULVT", "DBUKDQOPGLZFKZEIFWPBCSDQYAKFLDIWIOQNOFQMNYBOFWQDWG", "PYTLBXECEHNTHGCABFOYFXFAPBXUVPIYBQWCTSDPHVDNLUKYIZ", "XBRTGZRCOOJKCRTFRUVJVNYIJTGCKHSMFRZTTNNHDXNCBPOYDQ", "NXQGJNCRTNTOSPXVPHHUMMLMBWNLKIFSRBEUAIYLMDGPUNIQSN", "SMYSCBIPZIKDPBSHPMHWOHQRGUONPDZEGRLHPGKYLWSHVSQWFE", "TPIHBSHAUESHUXMAPQFRVHDEOYHRBQUFBCLOCLIPEHMCZZGNCM", "EXURRTIOIWFHKJZDAFTURHSVOMBIVTRULNBYARLQYGVDLYHUAG", "OKXJIZNJDSWRHRXAAOLLKBDRIFSRAHERRRBODGRPXOFUXMFYPV", "RYWWQATKHSCDCMXSJBGGGBQZEZPVYSIPQQOICCODQUSZHQOGPN", "AVHNEXKSMNLTLQRLHXATAQNZBUAAOYRBTDSVAVVVXNANPHLSYH", "QRWXDXKQLNNXZHXKERGDTSDCQIDSAGOLERLPXRFXPAMFFHCFIV", "MVWCRTHNBQSKGLPLSARUXDGHGNJPWIPYZQDHACSKVSGXDRUQFJ", "PIDCCFDFWFAQESPAYBWAMHODSAOSKXCKFSPWSLZLKPJKGSTEYP", "XSBKZXLMWIZWCSKXZPLTJACRVZTOMZDQZLTXKTFKOPXBNNHJGU", "MWINHYLALVKCYGZTSBRCCMERJCHUMXIAWKQGUEHIAATUADXMWZ", "JANVKAMLZGVYGGNANFQUPZYSIDNJYNBUMLGZYICQPHPHENFIWB", "IPRGNHNYTMEEYOTYKASNABYAIGKEMXEHQVXQZGJRNNZUAJLTLM", "OPUFGJYPFTVGNBRITWGZKOXZSBRFKZEJQZXKKVSMAZLXNFYGVV", "HWXNHWWUCCCHSCYEPCYTHSLVMJMJGIUSTFOFNNZDIAPDPQVYZN", "XCNKAOXAFUSSLXEJUYSYTJFWNTQIMGCBYPUEMMMIFPXAPZYQNX", "HLYANOCZZBKISXJSSEQHYRLLQJFSJFJUCXJUUYFKEFCOMIZPGZ", "KVTKPWCHJELJMFGPAQMXHKCNCQXOHETPUDEWXAVXFPCHOJIJYU", "UFIAYICIITIZWPVNMHDVSPYLDCZFBJFOXQXZGHYUYASJPXTLQZ", "SXZLXKEYSLSKDRRYHUYRMGUNRJIZURODRPEWOIQXFMTPZWYWHR", "FDRHTICSTUJEYZPYGTJLVBRKCQFFJAGNRVPPNLIYXRXAHSRTKM", "ZZWMTAZQHZJCFAGJKCRXKFEMZRBJSOHXCOUCUZXEVSHSTLGVIZ", "QTYLHPGRNDCMVJNYKXSMUIOBHLAYFUTRQWDHJTLXRBTOHPDDJW", "ZNXQGYKWUHDGCSTFVBTGKHMEHKIYXIFWSVVBUNMNMAIRXZYRIV", "GUBFUNXJXBZYHVOVMDDDEVZIKCVMACRKYQLBCAHOIDLSUNWRES", "KLBIWFKWNMOILHIJRNYRUVGWQKUULGMFSDNKIHPXVMBEUTDFZO", "QIKRSKXEELUCLOJITMBASPSEUJLQOSQGHZRIBHRIRFYOHBSFWY", "KLTTCMZRVSBZBZXJRVYPNJVUPPSNEGUBILCRCNPUWHMNTIIKET", "LXBBDYYBRGHCFFHNKDYQLKCMYKHAGULPXECIVGXHOZTSUQLZTK", "XLHDRDZBJCEJLMBXJKZJWOBXFDYPMUOEISPQIUMMTULVRFABWR", "PXVSESOTAHTQOQSLTKJSPBIMJWGIDAPTLKMKGPQBBXCYUJQXAB", "SVXSBXWEVEERRMEKZYBDOWCPAWTOSMKDXVHTZYYIRTGJGYHLFK", "QLIEYMQHDUSXWABFYAGPIZTSUXSJCXNNJCFDHPOTCBNADHVANV", "CHOSMOPPKHUIXVACMFPCDOCYAZUGOEVYXNCAYKVFUJIBZNRYMB", "GYFSYJHBHKCFGPBZFLUDWYNQQMYNUPTNKDFZTWLUXAZKHLDTAL", "HIQMFDKZNMCNVREQFUAIRZTMFUZSSYMNHJFAQIEUETTPKVJKXI", "PEIQVBNBOANZKAFEDERTIHULFFFMTHLMRFUWYBDSRMJOLIDPHA", "HFCQYKHEDLXFSVSVPDSRZWIQDKCWRBUENUODVBDWBOFZDTQVIC", "RDKKVOWRRXBTFQMRRYESGZDCYKTGQLRPEQOZVTPQKSCOLXLIEE", "IHMVKLEGDCFLLRJGZVJFNUGPFESZTMRAENACDDXINVIALQIDZB", "UKY"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 2096;
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<string> s = {"DUKWOHUZQOIUIZQCXGTPFWSBYKJKVFETSLHSXTDAIVWEJCIIVT", "DILCHOWAOJLBTRPUAOAUIWYXMNHQSCCMSQXJJFSBNCDTFZEWLU", "MECCKTOKREKXBACYXTDBWNYNOQEHQWWTGGGNPIYCLSDLWAKHBV", "ZPOHZHUOKJDVIGPVSCEQDPVVQRPAMMIOIJYJLTGSSIOUJBEDKB", "RNGPKNVSANQBZLSEXQSYTWCJSTEMXXMVKWZNDGSXVAVFSMUDHW", "USIFNYFSMQEJBCPOPNHZHWQZQXMBGLQAFNMKDUMPQJPDLRHKYM", "MAUKUVEUQCYQMUEPAQDVVIPDEJYRKDNZRJLNMZGHUZSJCALXAL", "VDLVXFHQBKQOKIEGQKVVDNBMQORJJCZYRCIXRPPAJLPJFNQOTP", "SQUITYUJEPYOUSBGGJQZEBLLSGFIBNKTYUSEPDHEMKQJNRRKYB", "CSJUBLFXFFVYFTBNAKQHNMHJQKTJDOYSAZXQBPFXSIOZWROCLY", "GDVCCCREHTGXOBVOWOIHSWSPHJFXSSHOFVRCGFCXKFXYBUSCQZ", "YEMIUQLFEZQNKQOAPRBHUPPRAHMOIVZUYCDXGTREUQISJITVIG", "NTGZSMRWSAYSAHPBEZWACICXPLELOVNNOEQKBLARMULOFJEKYD", "ZFBGIZCSOQCBDIXYPBEWHDLKISGGBPPTSVJYUGJQUEVCAWFOMT", "ZNVTYLRKJSTIEFOBBXWLTFSANWGKVIEBTQCGIJCMAZWPNZSWPD", "ZILLUZIXYMDRCIBXOQQSXNYTAMJIAWTBUBMHBNTBHWEXKMXMXC", "XXXVKFAKEOULROXWTSFSQTRNZISHNBUZXIOMVYRYLAARTACJYO", "MODVMRHEIFPRBAHKXFCBAXJYHJWHFERTQOURETWTBJCYPZOLPL", "KDBHZMSBDQFJJCFDMCKJCFKRJYKZAVVKHFYKGYAYCXEBGJDIIH", "VJKSKSADOGXUKAQVXQYJQAOIEQLKBVZBFVZLQVDMHJFQUWQWGS", "RZLZRPLTWYFEHPMCUMKBZNUZUPZIWWMOWUYFBXIEIRJONOOPTY", "NDJCMBJVOLGRAGWYIVMXHAMGYXFDODPVKNGPVUMNRABSOETKGQ", "GSTNUJXWIXPPWEBMBYKNPUFNWUTVOFBGWYJENQXUDYYFZZCWNK", "UWWTMEQGKACIRWFRVSYQATFVZHEFSISUUPLMMYPXLTASOOQJXA", "ZYCNOPCNOUSFAJGVFATLLYVFXFVZQBNGMAMRMSVRBOMPGWCSZJ", "NBDEQWAUEOEFPUFLCJOCVVLKZGMMHVJNMYYSBJRFVNNUHERQOQ", "WGUFJEVSEXBUVLAVPGJPVISQHDSGGAZCRBOIHREFDGNOQZCHBY", "XOKYHNNEDAEACERVBVOQUQLDAFZBEOSIDRETPMKGXTMZHYYLFS", "GUBSRQZDVOMPFOPKRNIPRDMVDGKGTFFBLXWVOHWXAGRDPCZNHY", "RNIDJZWEBQWWFFYPUAIDHGGZBNGAYYJQOTRZGDHYHKHRLULNZE", "MPXGBLQXXSKXZGIMKXWIWWVMMIJOMHEUWSMBTKVEPEFVCKBPOP", "ZXWDAPEAKOKNSCSVYDQPTUVVKGMQKSMEOMKXSDKKDZMRLEMVFE", "RPDDGNDCVLNEYHPTMKKIPPFHTJYPEDJAUDGEZPOJOKGBYAFTXR", "FYODJDCAIWXNNTTTYPNYAJBYZBXZOQJVTPKCNLICGBIIYTEATW", "PTWOLMTTPCZXJYJPPANIZBBCJGZMKNSDJVQSUMDHCZVDFAXYWX", "MBNGPMGPBTTSMHHKWSYHHQUNOGEAUILDMEGBKMOASNJDIXFEGT", "OGAKOEVHGZCHUTTNGUMFIROYEEBHGGNEGRSALVGNHUMYSBPZMU", "OHTGHMZHFMYIPOIWHNXXOOCJEFLZLUVHWFOVTTMVTGCMKTDBJT", "UERBFOAQLUUKXNHDQZUOCFIBZGATRLBEGAMAAFLQPJGKESHYKT", "LAFRDBBSOUWHDBUEBPUDLFDXMSBAWGMRUJAOBEFIGJNRYKFXNF", "QCRCOEGISPRJWSAEMCLBSDLEFTKVSXDLNWIWVKNODOZHYHJCNO", "JACNOBKQBUWKEDFCFQDGEYFYPWKKGDVCJDHLCEKJAJMACIJNSJ", "BXIFSWXMHJDKZXRENGSWIAAKUWJIKUVROXDHEHYJZBOHICBRKU", "BSFOJLJOQPS"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1937;
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<string> s = {"DYXJVJZFJLGVEKEUXVXKZLVYYUDEPVLHUGRWTVKPHJCLSOOBEO", "HVJBXDGKHEAYOQQJWKJGNJPKAFAULYMNDKEUXAKALQUDYCZVTL", "FMHLPSTUBIPLYCNTMCFNCAOZWTHEVWZAWONQIBJLVSQNIKRENP", "ALPQWEKIEIRMOMDTTUJYIVLNZEAGHGMEKPTQAPMSXASGUTTNNS", "VOLBDUZHXDKDUXFVBRZCKXUPRPJFQPDFOXWTEOUSOIHLWCFUOB", "ABNEVLWRISWWTYVQBZAFKJCUSFHHZHYUWHGXZXGHAMLMIQRCWI", "DHQBGFRARGYYLPLAEWAHIYEJQVUAPLKTCPDNJAOWTXIMWYDCYW", "MWGZUORKTRSLFUPEMPIIBEKLHMSBQQFBWXRIHUYBTFVQEILEBY", "PYIYMGTNYTYJWULPYRKGXUFGEIMVLBAHJMRNBAOGGSKKUPJCYM", "GOEVIITMQEQNLIHEXWGNHCUGULAFPPDXGVJQDYBTPTZKFQQBDH", "FVMQKLDORSYEQTDRGVOPEPNITUDWHVTQHGLIMAWGWFCZDQACSJ", "KSUDAFCBSOTYPDWFIPBNRPZEOAXWKRPHETGEZFJSKGBOUPKNEV", "SDSCJGRIUKBKAZJDLJSMAMNMYOUFNAWLPUJRNHQXGADRBYGDUY", "VVPJESOMJSWYAUNCLVZJMSIDDLYYYELYFIROGJVRUFFPHDWMBK", "LUCRSZWDAZKMABFQALQXEEMJLPAUOARVQDFSPKNPRFMJVTMXJR", "ZSQTHGMTLZFMCXLBKQVBQELCVAREYRRCSCVVLMKCPZYLMYVNCJ", "WFAQWHXRBGYAYTFKAQMBIWMYNCITUTORSXYGROCOZODKFYRYZA", "GNNNVBHKMNMDVHZZYVPBOSCKPVSFCYERZUGTGJECDADGXAWWXM", "PCJIRVQURFIQOXGIAMFBSNULCYOOFTBZPCIKNPYDNXDGTUZCIU", "ZEZUIKTGLPKPZKRVGCAEOHRMAYZBKKTASSUUZBPMATKAPKYHQI", "GUXDRHLUZHDEBTKSJBGZHCPRUKFASOXDTHSYGYOZDRDQYTWDRV", "DFLUKYUVLWICHLUKAOBGONMCQRKBUXEDUIYNJCDAFYFNXFCKGF", "AGHMNHHLKVRYZRWHQKJRFPVSWOSHDKFRAEOWLPBTZMWCUWHOMV", "CEZSYDZIMPVDZCBOZRZCITJTQHVWICPJDBAJNRFCUXTEZEHAAV", "OPRCTLYGAOOICUVUKFYFLHEADSBAYMYFARDZPQTUVMBBHEJRYQ", "WCORXTRSHHICZUZOBXGSTRHAARMSXEXTHENCDUUVFAUGBJOEEA", "JDOPCCDZEWIPHJQTMTXWJKQUWKBTLHLVNQOHLOLGWIJFOCNPPZ", "AQAPSODLPTZFHIMGBKFUGGFZQJXDBYDIETVFYWHHHDBELZBCCN", "VZFEXYPGYMQMNPYVOUGQCGKQFXYUEQSGIBKRVNNBBWZLF"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1284;
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<string> s = {"QLOPTHLSFYOBFDWLQFIPFZXIOBCRELUGNESOBSGIURTXAWGJOW", "BZHRBBRIOBRPVGRMNKZGQAZOBKLJNMYTIGSWMTSZOXFLEOYWDP", "VURVODLHYLZACINEYCIPHETTYDRBCUFEDNRDCZIZHKAOFAQFQK", "WAYWJYHCEVTSCBWIZKAQTSQZCSIHHPYGORBEJLAKVFJZQUFIZL", "QQLGKJWMHMRHHRUKTBDAJLRTEYJRUHFFBKQGMIXAUXNXMBFIDL", "TCTEYEHZHRQJHXFMDAZZCRJYGVOHMRCIWWBZANTJDOYFYXXFMP", "LZEBLUVDBVIBHORFKSFYIJDUJXZWVZPSQKFYGUVQTKPDIACUJT", "DWRFEMYBIQLDFVWVEJVDIVVKHXRONVUWHYHDROYRXGBBMEOHGP", "DZEZTPJNMZYLVJKZNHSPBHWAYZGPRHRCYNQBKFBKYBZKDYGDPU", "XYIXJMAFZTLUTNVWRSXZNDZNXENVSQMUNPBYSHGXPZIHYUHCVJ", "VBDPJCLZGRUACJIIYIGLHISJJQSAOHFDBDGUTLARYRNAENUQCL", "KBRPPQSFTOVNOVTILZPGRZLKBOFIXSVDUNWXYJBXRZCSEBNFGS", "FDXFCYRVSTHLXTBMBIFSGAJADXYAGVLQUQZMNXRFVTDLKCXRJX", "IQQJQSRAKTEUTRJJPNPFOISGGDTLGERSWUVDOGFXPZYZCASUDY", "SLVYHDAORMYGVSZNVCDBCNFCKYLAPMPWLNCEIGKMILAJKZMZXL", "PUNRPGXQXGOVNIVWDFMLALDYQFWJQYSWEJOFOJAJOMXIAZEKSP", "ENAQWFARMVMYIKHVCWPYSCTTYHWFEMSAUGEASUKXMGMFATIMWK", "TJJCUISEKDVXFJKJVGCTHGVMVUNYWWKOSPOGEQCHNONAHUCOYS", "XRCGIIEHWMOSFZSKHUJJYXTBYOCRQMBOGPKTRQXDLKCANKOGYL", "BLTJGWDVYNUVINRXZRKCWLZFJZLKSHEMZXAVRZNLEEAEMFAQNI", "WMQCMUHYXOFMAPXCBPJCWQIRTDUVNEXCHLHQLPWNTMRJWWVQZU", "FREBXEDFGKRLDQSSNIOMEQORIIJZRGSORUYVPEIZJPKTFWBWPE", "YUMHXRZLRZQXEBXJWNDJEWFVXYJVBOKYBKBTAXAKCMVWYJNYDD", "KOLINGUHUXIHLZRNINDVLULMPMONUWFHIXTWORYPUPGRTNXZSJ", "GVWTVMIMKOQBVXXTMUFSRCWQCEAKGYVDGIMFPLLQQMLIELIPYM", "AQNMNAAHNGNCJBVQBWPVODHFJCSWTFHHALNXJYYMBIWRCLMBYC", "YNJEHTYOHNNPMMWWWZDVTDBSVGWYRXDXBWPIIYMPCIBYHJVJHW", "PGZQQCEYPHPLEEUTCIZRUVRPVQKEUBSDRDFJJAEHJOIWFJHLVD", "RUIOVDMJHBFXLUJMTPNQJJJAVIBUBUVXRBBVUFRYJGCLGKTPUR", "WVORTCVBZIXZFBBHRLCOEMTWCZAXAZIWVHBEXLYEYTBSGETGIV", "SKXGNALQFUMJGIKGJIGBPSMJZGGCQPVGUJUTNUACLXLRGHGXKA", "HZEUSIQEPXGBPPYRXTMFEWVTKCXYNYMQQOTKJNDQWWCHQNCXLD", "ZIYDSBXZQLAWDAZJIOSKDGPKNVMJODQDKDYVVGPZPUCYINDFSH", "SIMANIRJIFWXVCAOJNHCGVZESCJXAAPLVHLNKLPKZWBGMRWNAR", "MVRPRONYVLPCNAEXPTEABLUVKSBQZXHGDFVOLZPXTVZUVULSWE", "UIVBRJNEHABQECKLSEXKTBKHGURSWUPRHZKQFKKCVEUMFSTEMD", "NVIFLMUYENJAISXTFQPPLJMMPGPHYOHIQCGXXMXKEAKAAEVSLL", "NKGIFRVSBVCFNYIDBJDZAKLYABBIMCEMIVXWYRPQAYSEMGQTXO", "VYTNOBWFBBGHJAYVSHWQYRKBQAUWKWMGAASMXAFDAQTBSKWVKH", "DXROTGAUXOHEDTBDQGUNXIGTNGVXHDAEZANWFIJXPIVLUFRTJZ", "HDJAMQJZESVUZQWVZGMWOIQJKMXMZXVDKMPBTACOBDWLAWFHMH", "YCUNVFEWPDIXZHWDHAJBPPOHGMFLORENMAOIFLGJPLNSAIJQQI", "CIXUSJNCZOQKELPHUDUYMPELPPDGJLK"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1917;
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<string> s = {"YYDFILRECUDEIOLJSTTVRCFUCLPKFBAUKLLZBPMFREYWLJSIXM", "ILJNDYSNUFCYNGDXEOKYDPEEZODFQBHCWGAJCBPPGKZLMNHURQ", "SMPGKWHOTOFEDVTBWDSAGVMYTABNGBLAFEGZMSAMRSVWZIPVBI", "FLMAGZCYBZVEAUXADFYOIBYBPFWVYTOJNOLFHWPNWFEADGSYZC", "PWOFPVFXBYNGDSZNQDKFQDKIRZMYIWZOPMEGJIXKETEXMSTZXV", "QVLYHCEXYQIPYFNSPMAUOXFXTPCSJLLXZRCEQBWBMFDAIIEKMP", "ZLPFLJHKGBCBVJ"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 293;
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<string> s = {"CNBELFHCWAYEAUVMMPKCAQRWQFBTUWSTMLSIGAUZACCBAXRJDB", "WROTWRSYXTGWYTOOIYDOHIHGHFVKFCXLXOYCIYKIXCTHMZFFXQ", "MGZMMIELPPBOHPQPWLZCRBEJJDHZOUPLLBNVRYMDIZLWAFCEWV", "FPQSZUXQRKYLJDVEAWCPVHPOXDAWHJCPYYSSJDVKNYYBHAEDCG", "GOVMVNNRMZFSLNLWLGLUKIEJHOGZUVURWADXAOXUUVUMQRNASM", "JSNSJPAOGOROPXVAFIAOBXOLZLYLKINGCMVGJPIPEUMWPVIJQC", "IWLPPVRYLPXSCKQHTVYLRBXKSSELSTXEEDBMYSTAYGDDZMAWIV", "GIRCHQLJIUOTLDNIHHXTZGZWVTUBEOLWYOFVEKPMKBRSSCBTBU", "WKFTSGCUMIAIOYEKKBGETYINAXDWDESYQZEIDMOOENKSYLOKNP", "JZEDKMYKBRXNCTBRQJXCHLFOFUOBDCCYENYSLLVBUODFOGHKHT", "KXUYEIGJDUKBWPKZTPTYIRRYLXUSRCVBSBDQVNISBBLCWVSGCF", "CPKWYAASBIVKWLRCUFEPFTKOSAERSTDEPDDAXLYZCONWAQVVSM", "LAPZBJDTGDZNTOBJWMSOVMBWSWXYKNHGBXFMPXDHTADEPTOGDK", "PGDHPUSPZHKRKNSJSAHXOULYQXZKTTSRRAAVVYYDWFMEMJGGSV", "DMULKJBOZQRZOFBXHWIEBJAUDHHWVJVUVBQNYSVOIVZEYPWQOM", "EHYCVTLNDJRGRKVLKKNBKWPSQPGKDLDFWFSXVJGWUDKJSTHTVR", "WLECXJDQDZXGAUJZSEHOCOLQSZNKCLDVYTNKGHMULMELYKFSLG", "RTJFWJQFNTVJANWRVPFFCOHYWDJNGRRGGCZTFYHZENURQPZTJA", "GGWSYIYZLYYEKCJFSMBDDDYGAWQXYKKSJXEYYGHDCXCOVQGJAB", "PSUIEXHUCJNVGDKYWDAJUNXXBJJNELZLIOCBGEAQQASDCNWOFF", "DCHOFVRGQHHWPYJSCPLGLYFBVFCPAFCGLQOFBVEUNFUSJHEFDF", "BZLPJRIWMRVUQIKCLDEMHWCNWPQLTGRWJTRVCFVRHSYKQTNMPO", "DSHIPGOTNTNELMPOLEUCHCSHURHUSNTGBSUDPHZARYLGJSZAVO", "KWVMTLLJEWAWRPXCYIVIFVPBXAQDQJPGIDUWLYUUMNRAXQHUJC", "EXFEOMTZQDRIGVKORIUBJMTHEHDYPBESWMZQJYHVXZGHBGXZIR", "UTKHBYGVXRXNXMHHNMTNJHIULGWURHSNKNZOZGVQUPZDPWALRM", "ZQEFXKGUKCYMAMLKSUMCAPICJERKWVKZEANOXRSBACKPTVWCCY", "ZLFJACIHESXGOACVNGTEUUVEIVNVMXGHMJANHFTNMNKJYEGMYN", "FKLJPYIMEMDSCNJCELPOIDMQVQJOXUVNDQOTXKNWVSPZDMNUSJ", "JWLWPZWIPZZWWPRABKZYNLUFPTSPGWXHXMGSPOLQJVDFBCEOUN", "UFKVPQWRVLKTEFOJOZUKSOJZTQAOFCOUZHSOZIDAHBFAGWRYWM", "ZUAYIAYISPOIEPBNKLXPZPMTMGYVNLMFKZXLVCNTQVGSJTBQAI", "OOCXPGKFLPINKOUIFQNXAVTALSXWWSMCIEBXPNQTAKIMHGGIYW", "ZVRTMDQLLYADFT"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1483;
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<string> s = {"ELHAZJSHKRFPLMNHKSTNASBLARTVSALZGTFGJFEZPNFMMOOTGH", "FFOTWUJGOGMIJSXNNIRGFBUZPTECGZIDHEOMSTDSFBYYVKLEPA", "IBAUQEZZQEKVKURNQFWRZSGRVEFNAFLVCRWORDSOHGYLBPSDSQ", "QAISRFHSAURZSYCOFAFXPJZJYCTAHPAALPLGFPUUUCHXMIRSLA", "MLDGVYMKTJVDDCWKKWBKEEGQNIQPROFRMTIQJYVCEZLUCALOGX", "DYPYDTYNMDFZEGDSXQJTHDADVHDKZNTWUFOUHBYUZBTKAHEHAF", "AFGSBDFCXJFXNBDAWTSJTKTCBPRODHOYWRFHYGLJKMCNCXUVUL", "LRLPYVJYBYMPYDTYUMGPAYYUONUSZUUXQGYMGMCEGRKAFXXGRD", "GKZMEVTDVSNVUQMOBHAADPICBHXYWKRIDVYGCOVWEGUOZPJHID", "GDQVNWJEITNPPJZXCIDLCLSMWIZFRIGCLEEDFVDKGODMMSQUJM", "YJWVERGFRLYUDGRIODUZAQAHHEIEVNCDNURDCYGZHQTACPSJBZ", "SPLNSOWJJQCCJNJMAUXKODLQWPCEWXEFRFSRVSECUIWMSOCWOJ", "UFQXCUAGAYBDXYINBSPWUYAOKRJWWQBRXLJFNWEANWSDKRLLME", "UUSWKZUPDUBDIUDCKSJCHDCUAPHKYCUOUAGLNLZCKKMBJXHEXU", "OHKZDROXNQUVSKMUAOAXSCEMDPDNYSONLNTGUHSFIGCIUENAAR", "PSQJZOPLTIOPTTROOUEMHLKRYGKGZKORBIFSZWOTMGMULZHLFR", "CAUDQURTTCPJJYIKUZAIFCPKWEELPWEGKRGPKYPZXATYKHKXMU", "KQBNMDQOBEHUYAOEIWHXDKVKJACBJYIYBDWRRASUVULWGSCEHR", "JZXSGNXDCZLXDBPYVMTVSRUTKATJEJZMXYNVUQONMHXHQUCWLL", "JOEYWEWSHBZJUMQZRVWBAFRSDZHTIMPNILMJOVZZVHLTVOPTFB", "TYOWILOYONPZMDMYVPZKCDJQJCQJCMBBQNCXQCULPQWLQEVSHI", "VBYDAXJZNEXTFPMXCNYUMWNQPLXZJPUEJWSHZFYVFBBQTRCESN", "ADJYEAXMPKHSZTMNTKPVLDDVZSYMDNNMBEHMJFNRGSWJOQRMXU", "EFAJHYKAZLCXXTLKFRQQSVTRJDWJZWHEGCSXIQKAJGKKQHZWEV", "MRKOLOGTFLBOIVLKIDIULTMSEZGWVYHLDTAEVACDSIGEYLIIQK", "EDHOZXLQSYNQUHTDSPYGLOJNHAFCUFDAEYBLLEEGTQUHYKHDBQ", "BXBJXKRDQNPQGHHJFRSABUPXXVFXPALSUBSFAJMGDUTKELDEOE", "OEQBBHJNCGGAPZDHIZFSGVVLHOARVYHGAPIYOEAEDCVJBIKQXR", "VWHBHNJJSFDVVPBLKFDOBCCHQGWIHROQZAJWJNFGAFKWCOWEZR", "KGBASWXSQJUHKHUNYWIMEXNVOSGVQIAAOSYEXDPZPLGATLANYK", "STQGSBCTUOTTGBKEWEPQQCPHKSZAMGBOKIDKVBECPKNNJJJMME", "WBSBAKGVNDRXLBTNHRCWNPXNOXUQLJSWXKLYXAFEZEZOXLGGUQ", "KKLVHMKJWNEDUGYUESXZACZUSIUYWUMCRSVAPJUQUOTXJYHQEI", "DZSJGTXIBMYXFBNRFFCRNQNIZLKXLNOSLITHRDMOJRBXZRMGQC", "KKKMZIEGDRXHGTFDXNEDFBUZEMWKYHUBLBNOUCIOHEIZBIKDFJ", "SGUUDKQWBXARZHMOWMMCZJVWKVOGQXEKMFPRSVDQUBWDCRDHRZ", "NSHIBQZJGIBPPVRWYRMSPAMYHOPTKCDDCJAVRVYGKILFPGOJAQ", "AKLONWCQMWOKQDGKLZSHHKGYCKQSPBVLKUIINIUBMAHZQMXGOP", "NIDZTYBNOTHNDXKOHWBDWPVZOBRVWCVFURQHTZUSOKDORVHESF", "YFNWIDSMJCRHJDPQDZYRNTCDXCYYASHUYUYMMTLJMIVBYIIXYU", "WRWFCYJLJZBAEPAEAAGRTMUYPQVMSQPTWNGIRFIZBQOSRZEBOD", "HOBXFKCDXAWMPCFUPCLUUKEQEZQWNHGGVSBIVOIUSDEORHXZIF", "GCVPNNFXCOHWNYQEVVRJCRGPLLNYXPQBJZPQYYNEMYTDTREUTX", "YABWHBUEZZYCF"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1938;
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<string> s = {"IQHVYMQFQHHOBVKYNRZYTLAUPIBMPWIHBXITZROFRHLVMXYYIO", "DVNKJVUWSVIIWBVABCIAAZBGSXXEYROPWMOUUVKFDNLWJLGQAW", "CZFEPVWYABFUZEVZXOHIYIMIZTVLHYXHHBACMEPIIWCQTFPSLP", "PMIQDFAIYTFPISRPWTEXVPHWPIHBZCWVWEQYMKHVAVQREUWBVX", "OELPDHHRKOVXUCZZLPZHMOXWPUIKLSNAUNOJWJGEICBCQHIGOL", "HNCQZSJYTORYDHLZHCMHIBLJTWQFZBGSBZMHKZQROPTAOQKBWI", "TGUISQAPWOODBDCRUQSZLZXZSFDRVSQRFIPRFQDWIEFAWZGZCU", "FUCHDLLSXSJLZCKQGLNNJOUSUVXWNIHVRCJNOXQTLVWCMROGYT", "NZDSXWRNTYZNAVOLFBQPVNZWQBTTWFIMKDZOCIWUJWTLXTWABU", "YVKCHFFGKXGMUDSPMQTQYXZRCIJRFRRADFRPTFPXIXPADBKJJP", "ZLCAGYJNPLUDBNZPSDISAWKSOVYERZKLUGBWCRAPTBJRRPGYJS", "PJEIPPRUGFEMMGCQGAVKPLSKKKHYYPNITPZCAZGUUQTIPKNBPR", "DBRBHHVBAUAZSZNMUHUMOQUNTKUMRARVYBATCPFGGVRULQFVGQ", "FZPEEUUEGIWXPCPHLYQDTCWDBYAFWEIFQQGEKBUNFWKEDWUEVJ", "EQFPYINOONYULQOQHKNOCSBLHCPINMFYXVYKZNLZBNPOGZMPHO", "EIJPGLLCYFFOQUVLXXUGIUKYOHUUBGQIQDPLHORMQDNEJGUDQF", "ONTTFQDHLBANQKSLCBVROMXIMNQZLOHDUULWBIGSXGGQKKWKOO", "QYNJITOIVRIIOEIBCKHTKLHHPZVXEYBSLRWIHEKVKJVZURKSQU", "DPSZZRCEUMERXQGKTORZEPYIFDYNNQAQPOWQSFYBXQDXWZBXDF", "ZIGUDZMHMLPFHWQGDKQGFSPYVSYUXEUKGBLYRZNXNXWFQOYHKA", "EQHJHUSWPRBLMGFSVEMGELUYXAGAEGEXCQOOCRTWOQUBQTCRWZ", "KVZIOMPIMVRQMFNANZBZOXWEMTQZVXJIODJYTCGKURUZAWYARO", "ZCHXBGQJRXUDMSAQPRUALXSPPUAJFIUMRITOUITYUMBVSAACWV", "VHDBVTBMICLBPCPBHFHGPVWRIDWRWOCTMQPMWNZMKBDXYZDNYX", "ZMWNQJVZDOAEDQAMMGQPBDHADYVZPZENQUKTRLIZAYYIPUHAUZ", "AUSVPLSSGBAQENMMFMKRILLRFTZIUDVRBEJXPMHIJOHSTEYKHW", "AYUKNBOFRNOJGXUACQBCVEKVGJDLXTUJSAKQWTTVVMEDCPKWAH", "KXNITQLRJANFYNJPIPJAQWNHYKSGGKYBQFYFUWJVYGJBBFVLJO", "GOGVOAQYUTPOPEKCZSAQHUYHHXPMQEYKCLPNSUSHKMYNOUVIYF", "CGJQEZMVAOJNATVIWVOOENXIWREATLJPRIPJWWNMXZHAEATIHX", "LIQRBQAPTANQFDQPUYYFIXBLPIQFLYGERAHHWDDDIVEWURUBQI", "XADPDWHYDEWFEFHQYTVCAHWMETSKDZPLWZNQDJELAKIQOXHZYE", "SIRHDAUSZBUSCCNOLJZIAIIDNECFKZIGOYBRSJSUWWXZIFCXDW", "UJHZNIIGLLHLRPVQIDDNHVAMUQINNVGKQGLXVRETLBLECIJPSM", "QKNJNASSZWFYUYXZRMXNSAAUCXKMHJLZKVXPQCGPAAGPAUVVAB", "EZYYENMKYRABAWKSPPDTWUBQIUPUYFLANXFVZKOJRIMFWTNWGY", "ZOFALLRFMETWSQLWHJQUEMCMTVPLJBHCPMBGNBCJCRXQJECBEW", "KGBKLALKXXNCOERBERJEBLCPDRXXEOIASORRJLHWOJIQOAIEPS", "YJPIMOFGQBZZKAAULYFAPQKHALLEYGFZBEIRQSDZPTKUNMWCPS", "YSVQLIQEWZGEGHIDLSGSWPWEYCCNXZEOZGYFSIBKDJJHVSFTUP", "LPNCFLSUYTXBBXOZDEJLBUCCTLHNDNUCPAHRIRILDESHBGGDZV", "QYFXHOEWAGEWJQ"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1831;
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<string> s = {"XMUSWDJDKHTSZLMKYXJZGSZUKMOJEEMBVLBSBYOUIQSNNAPQSN", "MOJBEAEIKPVKOXSSJNHFSDLXURFKVIWCHDTPTTYDYPFVMTAUTE", "MAJUSISKKSDLPFYRVEBBWTOVPTRSQLOOOAQMMDLPJPGFNPVXZG", "BNNZUTGGEHYIHKMLKLQWGCKJQITAQOQUOYCVNPNVUFUJRHADIF", "NXLPSWLSVLECDNANBISKNQBSLLSQCMRPYXTNNMNTWVNWUPQVNP", "QDMKFHTRNRNOOVDOZHAIOCHGYAXWGSYXTNONFSXENNZYRMWRFA", "HAUTEXZQTSOKIOTEXYTFQDIDHWOKIBUVNVHBXBINOFXLDZOPOD", "FIEXTHEDKWFSDNSNVTKCYKMXHUFSGBQGTXCXWQGCCMRTBVZNVV", "CNYWSZNRAJEREZDEOQYPGVICIGLIHXOTVUUHJHDRIQXMCRZSES", "MPSVKBFNNKRFXEXQZXPDHUNHFGMGNJAVDRGJMYYXQJCSLFDUKV", "LOZGIHCSEDTLOTWYLCHSMVKGKDQGUBCYYBWSBPTIENKMUKWFVN", "IQJVQAOXLCPKGCCWGDKGQMGZXLGTKEVMXLONKLKZSVTVJVXSHV", "OMKKJXKQVWCJZPXBLQYDTZYXXMEQIYTNFNXCFCTQYXUFRZBVYZ", "TQKBJCGOOVFNFCLSGMRANKLELWIKSKKMNEDYXPIJQONYXAXPSH", "LUBHSYIMIFZWREDYSBGVHHTVCKUXQQWBHAJXNTWXYHSNBBUXUH", "TRPWMLSOOVFNLHWZEHEBUYOELDIKVZBFOGIRPCETPEOZKEVMYT", "KOYEKZKSSMUVEZLBXJDHHXCQGVXXVZXZKZMATLQQYRNYTHYAIT", "HLSOVHDZJIKNWZXCSVUVVRFKZSJNJHARNTFTJORMLIFSNEBWER", "SBJXCHKKNORKWCMGKFAFTMXNSUFHMHQPRQLUTYGAUXNHECAVYF", "THSCWJLNXIFMDJTPWATEFMQRJDVVHGLQIHJRPFVILRXPURCRGU", "EUDPNPHNBNOCLYEZZQPGJGIEMZDZTCWMNTEWWYFKSNKVNGKMJK", "OMLVSVOASSRTUZUBPUBQQAZGOREFYHSPKTKHPCZDLAYCRJLWAR", "MDXZOFZUWBJESXIUQJOUHYKZMFZDKKCOLMAGPCWCBQYJNBRCLM", "AAIDXKGRYEBZXMFKQCUOQKDKUIUYBDCOAEMKLCCUKOGZPGDDHD", "ELXKNJPXPNFCWFKEPQTPXJZXJYPMJNCKKPO"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1066;
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<string> s = {"OFVHNVHBZOSCZUUIOWABEKOSEBZELBPFPESAPZKZOICMKXTNVG", "NEZDIHSTMEWXJOWZDAIGCOWYPDDDAHMEHWMWYJCGYJQJJOQDSL", "SZBLYGWHWQEPHWVZXNTALVLDFQGEFPUXEPEDXVIKVVDFYCHVXA", "GCWGRENCBBRZLGPONVWTBLPBWUDGPXRLDHJZENXHWTHMKVKONT", "UVXNJWRUMILEUYKGAZCOGRCSDWGFLFQWSHLGSVBORYEXJVEHUY", "JAXZJDIOEHZKTZPBYNRRRGFGVSYJWSPZQZPXLDYNBJWZUUJQJP", "UFNVSBFONACPKYGXRHJPAHQDJYYVZDLBBGRFSRWTPJRXCFGMVC", "KJPBGMDJSKGGQWYWOBQCZXEZQJNULVGIBAPOZTJLTSCFAGKBSY", "AWPBPPFQMEILQCZZAEQQUKWXGYNVUAYEGCHNWBYFWQDCCQCQSV", "UDNQETOWSQAAGBSPMYGGNJJWVXGGNCQBQOCPABTBXXLKYQVRHJ", "QFVHSHBKEIPIPAEQRVXJOFBIVQKVYGODIYAYRUFIKJXFLKCKSZ", "ODQNAXMFIJHVVABTLEWYJYZZGKYOVEGUYQRWEZEVQXEOIZCWRS", "YXJSJVPLWJLUUCHXHRSFBEKVWDBNDQMCOJTMNRFRYIUFFUYZBZ", "OQWBAMPWTHJOYQGSTLVKNHWPMXZYOQPJHQTLZYMRUJLGGOOUKF", "GZDLIVTPZPYMJCHXHIBGRZJGMHVAZEIPBMZYXIPKNAFAYZPNQU", "GFJYHRALKVCYZWDADNGYUTKMPPTKYXIAULPEDSEQUTHVMPTWYV", "YFSLZKPJFJXUKJBMKZGXLSELZCSRRJYHLDOPZFZIUMPFIETSVG", "PZUTUGPQFKEXVDJKESPOPKVXASCYRHXLXDRWGNLZGJXBQNDHDO", "PBQGRLUZDFYGNORVCHHKYDWOALNJEQVJBNMKRLGDIRWNRGBWJI", "XUHUVEFTXNZWFOQVSHBXOSCBYTGVZMJJGNVGMYOUKPVABAMWCD", "CJLMFHXPCBZELZUHTIBVQMXCETVZCSTAAZMPBGSLBLKVLSDOHM", "KCMUKKHHTXOOWVANXOKZPOYXIPOGERPUENQVGQLLSTJOWJGIQF", "LRWANDMCOKYWVWQACUYWYPHRLCNGVHKSYNETOHKDSATCCYWZGX", "EXZUWGIPRXWAOQBVJPTFGBPCDIMWOCAPXNUQNLWPMQKOHULBME", "TIYJKRTFAAHLWHGGNHALLQGPMQILGRTYGOEAUYQHSLEJPNRMHO", "VWXMOUDQIEBITGXNFITDWBPTDQOASLFVFSPXFAHJNVXQCGFJFV", "YPYSPDVHNMEGJBCEIVDXXKWQIMTYTYZMHTJJPKQUTTDWUVDYGF", "PBXUDHJSWECNYRIEAXPYOVZTVZMHRZFDZUCGTQLIVRSDKZAMXE", "IRKPLNSHLFWPIUZILAUZMJDYBHIJUJIUSHSMUEMEPZMMHLMSQA", "FYYZRJOEIGNRSFNWRIDYCAWMBPFMOUOSOMRNLFQMVGPIVSNFGF", "CCQYDGVHRHMJXCCXZGQNQPYKVGNNMQDRTBLXHMUHVLVYKXYXS"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1377;
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<string> s = {"TFXKNBOQAPAEQNRICVCVQPCQIATJTKDGMAULAYNQOUXHYWWMKH", "JQTQPOYVPHAVZRRPMWVCYMVUSFUITFIWWWGCSBVLPDYVNSLJHH", "VYOQNDBOURJIDYIYZALALXHXJKJDEPKDTEONTEOTDDCPFSLAOW", "ENJYHHYYSWJLZFBXOTQEURWGVCGFWUEKVRLFDLBEFYVXGAWNSX", "SDEVQXWVEJHNXRRPSEHFRDXLMTGSAVOUQAGJWIDYZXFCLDPSNF", "GZPGJOPRCWCZEGGPMYSDWSBKHAFPWIHMKTJGPPPEVVKJCFRJHW", "ZEWLYIBIKEFYUZGDCGEYCQNMZUGSHWBBGUHOJXZRVIXEYPCHVQ", "ZBZFCFMLEWOHDYWNXQHIOJDWPQWZIADGNOIZPCMUTYHWXRUIWH", "XMGFQAMEYTFRKEQBKUXUBQKFLMPVTNVEQELQIFDPTFCGSWTIUK", "XOCFZBFYMTETWDDCOTZJTWESEHWERHEINFHAUBAZWGGZOBFTXD", "BPUBDFRYKFSUNBOEWXRUOBWVWNZZYLWATMKGYSUZOMRYAUVMYB", "XWPMSMQBPYQISFYXZTBYSSHWUVBRBTHCEEGMOWVQLETMQDIBPX", "EOODHNUTGQCEIWTOVCMFNNYXBTYVEOPBDZJSYYVYLLOOHPHYUF", "OJMNANMVVVOGZTDMHPJAPXRUEIDXXLYMVSDPBMDIKKHLCQLGHM", "KAECFBPLLSGFDNJITEXJLOWHWTTKRFKSPLEDNRKNQHKMQSCTEZ", "XUAWGWMBIVOHOFFFRSJSFRSFYPUJAFBCVOQGSDCRPVDBUKHOFQ", "PGPTOMVAEMBMTXZLJRFRIFUKQCXLMCTULCBBQJOHQCBAJFCKLY", "UPPRRPKTUAGTTDEZCQEODAFXXTQCILIQLSZKJPEFJJSVETLKDY", "DAZYEOKGCAJTTFCIGZQRUNJJUWKVBTREFBYVAPLSZUILPZRKAM", "NFIPQOAYJPZICBTJLQLFRXFNWXZDBNMFQPDEWXSHIKMCSYYAHJ", "HRXDLSANGPCTPWCMRUVCYODSZAYTNHUCUXVLCEJTAGQVCNJLTX", "FKJUBCFWBACYSAGUDHHBXGATLCJNNFIUQRNHWDBGHVWAHLGZKW", "TXCPGRHLNOAQONSINUTPPPYXXXGSQBHXCPXRZIWKKUURVCDJIG", "KHFEGOWJTHIJKROHUHQYXAOOGHVHJLNCADJDHRDLLUPDFECNOL", "WOCCIQGQISZULADEYMIUYPLVXLIWMFQDODAURCFWKXMEDCYLVA", "KXBPIEXDDXAOVPUIICILWIJDIBKRXEHJPUDNERMBEYXELAXUOK", "RKPKRQYKSPDRTCBQKWMGTSVHAYETLYHVYDBPBKUUGWBHVNSJXK", "GZBPNVWDJFCAZAYCNLLHFKAYSOKWPKKHXYXZOBTJQYXFDGIDSQ", "ZZOCPQMZOESVIBLJBZIBRPEOAKEIKJTZBCCEKBGHOHXHVMFQNO", "CNKDQUXLOTDIGHGYFPMQMFZZDZVTBBLNDQJOCLCYRNIVJNJUBY", "RFXPOUGUXJJFIORISWEKNLVHLDQULSXKMYYLEDCDLGXQTEXAJL", "WRGHJHRSCDTQYRDHHSCGMAKPZBORBUWWTIMPPHYMGXRIHDQDFP", "QIEBQXHGWHGGOFTOVLTTUQBIZKDSPRLIMFXMOCBCYZOPMVIQYR", "BRRTAXNHNXMJEEKTKCLLYPHSCTKKKYUZTQ"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1485;
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<string> s = {"UZCKINWJDAPMOJHDMDTQEXBUZKYMZYVHXJOBQEICEDDADKBIEG", "TZWZOVZDEMAVCIUZZYENPGBDILUEYIUIWLHJVLBYIIILTYIFEW", "VLNCSAXMQGEHXXKKQYDHJPCWBXVAVUAWFZROIJQBTFNZNCVNAR", "FRGLICCGVFXZMCXZCLNELIZNIWXHSOKMMSODAIFMZYOMSAFIND", "GWHRZSOGSNPPNEXDIWCZBPZGCOUHJWEUTKGQIGUAYEHWAPCNBJ", "UTBMGZEVBTJLZGSEMAJOCXXDNWJOFBNSFONDRRULVOEUKDACGW", "JBIHHUHIWUZRVOSOQJVOHYPYNSLSAMXKJCTGDANCSCUBMZSBJC", "VPJMXMXWVBJDXBIAHPVAJJWDPPINRQNCJNCNKWVZTWAIUPYCNY", "ZRZMEOYJMDFCVEVRUCUDNTCQKVFUWRMNTDRAIBYFNJZLUBCFGS", "XLDSHNDVWWNXYILEUTXGJRGDTWUOQZMGSEONIKGBOBFCFAWXVR", "FRNZXXLVZHPOXEFYQTWYDQHABKDBBBJCNWIDANZZNZREHJMQZX", "DLMEZKAXFPMRAJWKHVMILFFFDWTDUGCNXZKUUHZVPLWJOFETOL", "NFZPWPWJRHJCIZQHGBXWNEWGJEWNEIUDRKUMATJCXERSVVHYUY", "PNFBJGKQVKLPHUXSGKDEREONDSPLLBCAGYKLYLVSNDMYZYMJVC", "MJLNBOJDNEIPQFJYGKBQSXAHNRHWZAZNEWYTHYBBHJRGEZNQVV", "TGQDPQSFJPJXJXEABCJXYWLJXIUEJJARRLJTODAUUWYQRPHJER", "VAXEKKYYAGRONWCDBRIAGSXCIHTHDEKENJWUJUJWQZHAXGVWIF", "JRBENMNMLVGXHBPPXSLSJRUSERQRHBYEHSYLDVVFUGZUDPQREE", "OKQPZEJTYXMREUUBGQSVXBXVLDSPMDXSLYOOBRYOXUCONWQTFX", "ZTVZXCSGLTKYLYTNAHEXGUNAGDXPSBUJDRWKCUQIIJXODUXFQD", "XBMFNHVQPQAOXCAIUGVVZPZNYWPKFCLGCUEXPIFYDDPXGEAEQY", "PIFDPZUGKBUEELZFTEEUITMSPCKPELTHYTUEYHZPGJRLFHBXVL", "PGVKWLHHTIBZWQOQXULPNEYCQYJBIYELAIWYXXAVPIYNDVCUSB", "BXRVJFKNFTZWMDMPFFPCEKZOOJWBMICZIVATNZMEUBPRSPVNGR", "FNKTWWIOXCPKVPKTPSMUESUKCUUGSQYQKDFZADFXICMOOXCTSW", "KHUZNZVEVQSKUZDIKICFVYOUHMTUTRAYPKGWWPJHZPEGALUBTH", "NWIWLIEARGHBNZKEOBGWSXNCKOHJARENRWLQCFMJMCFCOQHXJJ", "TDCLULJTZWWZSZQZOYZQQWEFSVVZTEHMAIGRFABCBUQHKTLWQC", "YBBAQLNXINNRUDIHDWJOFYYQCJLHYGEGEOKSMOXSNHHJBYNKCV", "WXLNWTGMEBVSJFCOIWGHUJCTWMGOZXVSLFEELBNIXXQXYMRBPS", "IKSUCWEKHOUQIFYVSAAGRCDWSKFKBLCSXPTMYZHTANOGANGGEG"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1368;
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<string> s = {"USKLDHTCXUQUOBMPSKBHJAYMCPGKGOBJVEJMDLMCRTZSCQUONO", "KJHWJKFCLMWQNRESPAPBBJDFHBKMAMQVVVUUHSJYTSGDTEKNDV", "JXYOKRVBUCVWLCRCKABLBWCJWOVBWANYOPOZJDLAWYSUDJQPVO", "ECMZBVJFSGOARIMNHNOVHKHHEXOFYZZGYZOROOPILEFSDESZNR", "HIDSCGSMIJIWAVTTZUBEPYZWGNUQZDONOQBPMUUITCXBIVYXCK", "LISXGBXHBBHXTSCAUTVSUYWUJKNQSHZACTMADXZFTWVCHOICKZ", "TRCILJTWIMJOLKWIPUNHEUHOALLWLXLFCDCCWZRMWMDVATAABQ", "GPTXKSNJKCISALZMCNLFCKHNFWYNKVAVDXUUJACGKHPFPSRWJK", "ZYQWEJSZDOFXWMYUBYZHYHNDNKDFQIEEDIEECPUDJBFNFNJMAH", "KJGMXUDRDGQTTUGZEVATNVYONXWTFTXBIGQSPDGRNFPUIXKVPG", "ACAGAYWOYUCBPVWZSSRPINQNQAARKCUDNSGBLJHZRESITORSNB", "DDNNKSFWZXRKODZRGOSLMSODPETMVTECZLVLBNXOHZLQHCFTAS", "FBKNHWLTRFXJBEEQUJMPMECWSETWGQLZVMREUKTWHSWBVIQNUS", "WVARJDCOEKHVLLHGFOFPBXCIGJHMFOXGZETUCYZVHXSSXVCINR", "YDVTJQZWLLWRYBBPDEJBLHILGLSJIAONNNOABRNIPVHLKORHXG", "AVIOXHSEPZVXRJUFRVUTSNFCKBMQCKZJAEDREWFRKCHZUKSJPY", "AOAKZPXGDJUGKRFRCZSPBTWUXOFZOCQRVCEYWMPLBGYGQCNLGE", "PAUZSTTGUPVHFZATNFYSCNPCBXDOSFFHKVDTPEOCTUDSNIEGVM", "PDDBWBEVTRPHKRCRBIGYVKXDJZYXNOIZKMIFRSSQMAXOZCELSW", "FLRXKKRNRJCETBDGHRPVRDOYKPUQOBPHDTAOZKKRYBOTHGVWQU", "WRLEJQTLJQRNFKPMMUTCBMXVJLNCSMWMLUYUQDRVZXKZNWBWKH", "JLLASEQQPGFENHAANZEKTAQNBPMCCRVDYONANGFCDMZWCHBQAW", "DEPXCYNRKNDIOSZQNFKQRZDPZIAERESTVZVZTYARUGQVBUOZWC", "JRJRDPGDTGRPIZUIXGUQJZIHZUOLDZEZNFGBELDSQLRDEYTKKL", "ANSFZNPJYCSCICUSCFQIFICEYLXERJTVDKVCYRTJXNRXKNEFIR", "MLEEKPNKRIUFLEJLVIMGWDUXZCSBPJEGCCAEXHBIEBMSXZUEJV", "GQCRSQZLUMYKLDJSZDUPCWLGKNLHDKNNBDVMLONTIICFUVPULS", "KISADSJCMTXIWLYUEUNVXZHBXDOFQYBLWYWCFNMVHNFNLTC"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1245;
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<string> s = {"JIEXYEWXDGTLSVSQKMCSHSZXFLBUTSAAOKJRVMMZPEDEOFKMCQ", "TZGNKHMZZLUQKAWYVIHDSGBDGFLBNBDPWEPELXICJZZXDXLOWI", "OLKLEWGUZGMENEFBGBCLYKHJFCIZGHRQGVPGQVBOJXBOJVGQOQ", "LLNBMVXUJLKXBJMUOCDZJLDDFVQNEHKLYHDXMYXSTEXROEWYUJ", "GYMQMGCJJXXTDEDHYHNSNRHCROMXLZZEPVMVWOCKMEBDOOXNAF", "NJNNYWRAUVTSBOSMEXJMVBXDZUWLEVJGCOEGZYVDENVAFJCFBG", "LQCFOEUOVSHCANRGGZVSZPDYBWTHIAKLCOYTGGGMRLSWZUJTWW", "CKZSUILIGVULENRARFWYWBATCQDLXUSERBRJZIJOOLXPZUDVSB", "ELVBAVKRLKXGYGROWZHXSWRHEHGXWWURYMDQIZSETFOPDPJQFQ", "BJUOVNWVCXPEUFXMLFZQJDYZWLJSIXNZHKLCMYICIFTVXPUIDS", "NGZIWMMXEGGSLHTYYAHKYRNLAALSFPGFYLHNGZVGOZDKQJWJAZ", "FMXQXSRBAHXKSGUXJDXKBIZSDATRVIXSGPMTMJLHKUKNZSYKJQ", "OHZCKJRPIGNXHZWCXGYELEPQHGIUWUTEWSEAFYJVARPKHTNAIC", "TFJHVAENTALAEWNJXWIPBLHFIQPBZLXSZXIIOBNWXHAENNDOFR", "CMVXQRWOFYIDUFOBXALPVIHVLKXYIDTYHZXNPKXQUQQTAIASDE", "KJORYEZZPSSQAMGKVMNMYPILLVSGRKNUNBDETIKEFGTBDIRGGU", "XMGNHSISVXNWDWCAZTIMZMKWABYAWDEHBNRWQZEPKRIHJOSPJV", "WGIJGPYZDJLTTTJLYKWTBNJSNEDBCWSNMQSNWMAPYNPUHRCQJG", "WTIJSPGHXRHVGMVWSPRHQJKZYELLPABWYSKWGPMWLWKHHZIQLL", "HSEJIPQVZHCEUBAMCPYOTKEBXXCXGWMYPEZECPEVYITHDZJAJY", "OWKUWYLDURJYWCRAKBZLQHOMWBHETJJFXOMEUDWKPIJMEZTNTV", "VCMMIMMVGKMQMMVHUERLFWRNNOHUJPFWGSTSXYVORYFCJRZFUR", "TTUNCNWLSUGDBFRYWKEIXUYFDBUPDERWQADHYBEXJJIXMLBPSC", "IYWQFEYXVWYOJJPIYVHRYZQZTKRUHZRJQXRUHASFUACJNDDVFU", "DHHAKEXBSZUSQYRGJOTHBNCIDDMJJUBNMOFUYPKDULUSWQGTXX", "WWAONYTCISWNXHHQIJBZAQWEGGEIICGHQBEDYXKAWEQLIELKZD", "AGVPBRUYWZDVHUSKMCOBSFQZEEEDWEFWPFCSJEVVOTCHWDPX"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1193;
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<string> s = {"LQDBSUULHMYKYVSYAGQTJLEOSWQWOKTYFWPABJQWNNFXIIBTRA", "VDQLRLFIADZZPKQZWYIZVIRTLDLZTEMHONYJHJOOGJVZLSYZFG", "IBAEQWXXCRWURFARULKYGWCKEQOFMEQIKSHIMUVYQCYRSCFOIR", "RGUUCXSZQRRZCNKSYZGRDXZQUJBOYYHSEUWASPQVQLDCICYRSZ", "DWSNTKPXIIXPZZHPFQFDUNXFLJYJCWQNKYFLZFVUELPIIPRDQS", "SCQJDFIYJOOECJNSFFNPJXJDLWVKMJBRDDFEIDQEYWRKWPWDBL", "PUKTVVPWOYCQNEHUDOXDHOUNHZBZAMZSFUNDMFDZGOFXCBVPPX", "OVGXVQYYAORFBMUINMJCYXEFAMBJFBKGIISFYIRGOXOYEINTSO", "RQVGFQXFRIUQAJQETQTSELUCNQCPBFRSQDHNWFRJHNSUKTGJTQ", "UVTUERNIJUTPGSPCUGDELRMQBXDPFMCVKRGJNPOJNGKLUSZIQB", "TIRJTOPJLVAKFDVHDWYIUHTJPBVMHUXHYIGEUMDOBDJQSPAQKT", "YVLWFMILJEFQPMPLGGKUDSKVLAGNYPUEJLUCXVHIRLJHMACTFE", "KAZEKASZOKGDMBKBGDPTUDJJQLFHMYZDUBZEQOYIOAPBIAOAKL", "ZMQAMNXVHRLNTPQVEYGXHJDIIGUIRCTPNEHYHZDPBLERCSZRMR", "AHHXJLSMVCZPZNPAUKNFLARXMHVWEARNGTUFKVXOBAAGZHJEUU", "CGAPFIVAFDLOJPXXXXKCUFTRRHNDXTODLNDAMYDEUWHEAZNEFH", "TAEDREFIPPAVWEHYEHFYBVMBGZXUEQPYWRSBGNFOIKNLDJPYNN", "ZMUUPBVIEAQFGZFJWOKHPPVNWPKYUHVCESDNQSVUUSFJTBLOZI", "UVQMICOIHVPKSPATLGPIAEQTUKYEGYEYOHYVGNUNZQCAXXQPRY", "USIJJEVJEXJLMXMKLQYKREGSSKHZXKLFUDQSMVMWYFTGTVYTMK", "APEDNCEISDRCWLPGDOIPLLFPIRRCWNSBBCAGUQQYHUMRTTNIZO", "EJYDHZFHVGVQCAUEWKOVNYCRVBKYGAKQZXWXTSOZNSZVYFAIFI", "BWQMIRAFUOSKTWRASGPTPRBWBLZASFHWBSCEJYFALUJDONALNO", "DKTQMCKQFGUVIRXALBNVKINRVGHDOXYVZMJJRSYFZFLGINOFKR", "IWJXSWDHQMTCFTEGCMLBERARTVBBNIFCKWWPIUSHINVSFW"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1129;
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<string> s = {"LMXJJFJJWCEHYZGJSKUKEIOGRFLXHJHHIITWXVFKNUBNTQMTOC", "YHIEZVLEPYNSYXOKIHXGZXUIMDBVHNBJRVTZRVYGRTXVLGHRFS", "NLAXIHSJLMQFAESZDLXADOMYZZDCECEEXVMXGHDFLDFTWOXSCW", "ROHHBAHYBMGUELEOGPEDMRMVMJJRITHCRUGTSIHDZUCZLFKGXD", "CRQLBJNQXUJRFQJOIJXAJPLUTYLYSFTZOURCPYFLDGMYLOXZGO", "KCAVOOTBSBBHUYOOXDMMDCKLMTMNEOGZCLODJNZUFSMZSDOBXU", "BMNDIYHIUTTBBGDTIELMYTZZXIBBMPKFSALOCIDNWDYQTEYPRK", "ENNPIRHYYNSLLJQTPRJJLGCCUWBPBIWUREBBTPNBGTDZDBFYKC", "FUUBWRAOZLHFDVRELZBHLPPGBTZYPMCVGOB"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 389;
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<string> s = {"MNDWEVRHTTUSYKDDYXIWIIONAUMDMRHXJWIKQVMNWGFHJGELVA", "MUEKTERXFTMEULSMMZWTDRQSXTZTOHUOWQJTQARMPQEGBEWVFV", "WWJIFANGLCYQRTWGBHMEDTQFAFUXZXWOAQBYRTNJZPCGEJTXZZ", "VLENECZLZJHGNBHOHWCAZXGRDUXWLDHWKOUGPKKITDYEZPBGLE", "MNSDIWISPEPXOCCDAYDNDMNPCISTEKCXWPJOWSCIVXNMWYENWE", "SCNOVAWFXLYVZVFDCDXZFWEFILVUYZGEYHKHNLGTOADLCRLQZD", "YMOGFXUUKZAPCTENYNPVJNHBAFRXMERBAZHJLILVCDHJJHNMYE", "KYFRNNIFEYEMQXPPUYKMNEXWSAVTSIPHIKTYGUGQEYLUAYOHPM", "OVZVEWPFJSIMPZBSXTKMMTQYAARTJIPKHPMCXYLJTINUALOCPZ", "KPCWPXSPFJWWSWAMKSJBXVULGIMZYTUEPNSNIMIPXBKJFADWXR", "LEXTEIFQDBNQFNXXJFLIMRUMVEPSYQTILKPDQZTMLCXRURZURP", "QUYCPQJXMTTINJCYIVVXACLSVLGZIPPJWFJRVVTEUSXBMWSARN", "KIUXPPJNKJZZPLJQIWPVGRQBONPGYCLTZWQWXNRGYIUBQRLBMS", "WOOHJBYBPFYPQWDYUCUJGWOYJGDDVGJUFMTXMWGNWWLBLCKKFE", "BBSLYYZGYXHWMJZHNNUMRLPPMFKOIVQZERYVSPPGLEXJJFGZYG", "HRHWPFRUCBKHMUWKAUMUYPKHZDNTTBPHECENMVBPLKAMVCMLIX", "UAMDEPYIIAZELYVIKPNWEPOFRTPWUDJQGHJYLPPXFOEMBPYRZB", "UEAVTXSYHJAXWFHILONXUUOOHJJSKJYHXWAKOSNNGEVIVULJIU", "ADSRRUXRVXFJFKLLDOTVKPLHLZKIDGJTDCTCYRKMHTTQTAMSTP", "IFRVQYLOBPULMYNRMKQEYFFCMXKJZXSZMQPNFVAYJGUYOHGTSY", "YUFUJUERDGNMKDPUKLKXRZGVMLYXWLLRDTVGCTUKREKIORIEID", "BMLRRPEDXJLWYPJTZEDZLJYDTRMIODNPUGXCAVFUIOMGSLWDRI", "VSQQPSGBYWHVDNXEALTLUXVRYYJVRXNZUCWEMEKJCDXIGBLRFA", "OKELUHHJWEYNAPGNBTFHKWRDWMZBELLELJOAFIKAHWSCEBWIFB", "OLGCTYXAJZOMBJMWCVWBSNZZAKXPTBQMDQMZARZNKVVFXDEJXQ", "IAAQONWTSTMJTKOLNWNPHICFVJJDACDVUFQBSHFAXMEWIZKBLG", "UCDULHGAFEVCVKEXKTMZARMYHKGFGHZFXOFYHXLORASIAXCSOS", "CCFXDUWWSZQLTYIOGSOKLTNQWPTNAQUZYBPHGYJFAYANXEZSKX", "CVCTZAULZZZZISTZCEBRSMUQWA"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1268;
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<string> s = {"WJSWDUSVYQIEKQQUKUGHYMKJQIYULQDZIHKCXJGXESTXSQMZXJ", "XSWNMUTBTCQSQYGFSWMREIOTQDPXZWVQDIMALQIGIXGLUMRXPA", "BJWRPWIFZHIIXQNRIRYXBTBRFFNJYRETQEHIBPIRTOFBCYRLWD", "FIXUOCHHLEUHQJAUYMEYGIPOYOWNIQIDDKGDKBBYODFBGMXVAW", "LKUEZAMVXXJLWFCISAJQZLRHQPLXWYGBSYSLHSHUGZQFKBFYJC", "GGIABHVCQOGRXHEYVOUGMAIEEQTDZWPOZJGUOOVHKTGPZPJIEE", "MKUSXJEONBTMBZNUTZSHCELXAFXPFKUFGSKYCYSYGHGVWMBMPR", "QHJKLSJAWTXBVSXVIKIRFEFIWQKQSSMYYDUBHABLNEBNNAZIYO", "JWZRQPRLLMVVXVYDUOXZTYFTNQFSYSINJHNFMMGLALTOGKNIFZ", "JWVWTZQOIMANFEUDLRRJSPQOARRRBLDTTGOQRFZAKHJGUDLDLF", "WQYMZGDIGNRXDVHXDOBLMFBKXIYSMKFGPPFOGKUTVZAXZOITMX", "OKMTADNECYMQQIHMOVXKUODWIIVVGBKYLNOTBFUDHNFWSHEOND", "TCYKUCKUHYOFOZOZSTCKFQEZWRMCICGAXUEHDMRPDUVWMDKQHW", "DVDYYMADACRGMRWGPJNVFUQOUWMPZCYOGTTILXOSRRYEPCNSGB", "YYPFHAGGUOXSSUQQCDBYRLRNVZNYBYMYLNBGBJAJJBMMXCOHZN", "VWYRMPRUTQYBNWTIJEDICSEGMEHIJPESJUGKRYWRLHBUVXNZYW", "CZNZWDJHVWPSFWUMXZTYNQISRFXHFFTYXZNEATCAYQSBMCZLMF", "NEQSRMIYINFPLWUKHLCCIFJXLEGOGWXMSJZVKWXAVHPSDPKUED", "GBGPFLNXPHPSMOFOIZAWQYFOKCPARERXQQRMVPSHKIQPVSCXCA", "PFDUIMNIGPXAGOFSYXABAPNRLZYPJXRWWGJZDJPXZOTIODSCBS", "XAMHOJVWCMFEHJBFOLUUFFKXFNIWTRPJXDEAXGDDAAYQZHBYJP", "KQSTQHPMKIWFUCVPITYIHHQHWHQLJATHFWJXLBQOPCINHWUYFP", "UMWOIYLNZPATZXQRFBDKGPAFHGOJHIHWLNYYVAGUQLRDTFBQEM", "QBXXSSTEMYDFAESGICCBYXYRPYBNBIAOMQGGWZOZQRNRAHINGM", "PCFVG"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1063;
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<string> s = {"PRGOHQINUKJWUPLGDLZEYFTBREZOXRQYCKZOKTPQGHPMVJWQTT", "IRPDLQCAJKZXBEFDHFIZADFBTHMHGSUVTOUONWPPCCKDHHMKNQ", "XVVDNCWWHPVAESVTODCMXEALIFZTDPLMDDYVSNKKXTPBKBKPXS", "ACHTDVYEQBATCVFVFIVGCKDKNIPHUXAJCIQCZCOHPTNRXGFCIS", "PWBAULJILNMACMXSLOHMNBZFQUOUOLSBGPUSUYQLHQLQNNVVSJ", "ETJGWWYJEXNMUKQMBLFHWAYEXATHDEEJEDRSBBRHFOQBSRGHZS", "DAHNZMNXFTAFBEAJDQHFOFLGMGOXELDMVVBEKMELQCJKFAYOLK", "DOZOYVRKFZZDGBPTCJXZFFRSAEBBKJOPYKYJFRBZJVZFPKVZHH", "TJGKDGQXSYHVIAYBZLBQKTPIZIQUAXFFVVHOYORXSFTPXSGRGI", "RASRIGJVGAUFLJNGPRBSMOIZJSJXTLMFMQAXVMGSQJVSGXYFYJ", "QYHDKFZPZBGOBDJRLVFUETIPXNWYSBGNUUAWHMVHBWIDXTMXEC", "KWJLHXXWIPBUWQUAQABENFBGLGNKKLQOELQZSZUINAUFPQBMVU", "GJWGLHYZBGYBEEFFJHEYRPDEJUJXBKDHCUFVWIWJFEKTHHYVPA", "PLQQSCTSQHIEYSKZDUBYHKIQGEQJRXWNHNAQSUQXDCMIMDNDNL", "TYZBHZLKXDQAJWUTCYJFCYXDISXQKETPWGRGOEFYVMVSWWEEID", "TGBGJSRJCHQVJMKEVYIXDTJPAOSAQGGDVVVWHNLOVALJKULAVZ", "EQEJLUABXPWYMXJVKOUTRTTXMZEUDOWFLNOSERHPZMWRTSABKX", "IBMPHUELHBUQAKZKZDSBFRCKYJXBFHYBRQCBTRLGUVSHELHWJP", "HYBQYTTJVRHIUZZCUGHLUSAPKVAZJGAIHPXXXQJNNKJWJISLAN", "YWKTRNKWEUYNPGDKPUXVDDBLNRONSGFKMWZCUBJBBOFMCOKDZQ", "MYTYQCNJYRDPASQDWCTGZKYXBNWBSQPQSFHFPACQQNMWCMXNYY", "GPDCXNWXPXUZXDHQCQGXUAKRQBFWQSSKJZTNYYSMHWMOFGPXZL", "CVYENJUPFICKHDOXUIVTEWJARYQFLLYFRATQZPMJDOHGJINDKH", "FNNJMAJVDFKJMCSWJWGAQSZLDXGAJCVOOROCSZSGOHMPIRWDPK", "LBKLXAKZUYOPHIFTQVMLVJPOLQQZBQHRGWKXDQQBMNWYGDJEVA", "OKCRSBLVVOFMYDZHPVCVGQKYLVDRZIRXZKWUGXMFRKIACDNXEL", "CJPFFASNPXZPJJEKQOMZXLKYOUYCKZUMUFTIDJNSGZAISCZUXB", "IHVBKDDOQHPOJCROQKAIBOWGRWBMMOLQUUXEPJJHEAWHFWOUDW", "JWUSJHJLJODZXTNIISDMREIPLSYZFOVBEVOFQYGJFDUZGFDVZG", "NVNQUFEYPANSFJBPPRTFLVTUOVJXZCGDQGNJACOVKYMHRCHLKD", "WJXZTRYIHAKYFKRYJDKKOBDJFQJOREWCFWIBNVUSEZLEKWERWB", "DHXXTEXEIAPMFMDJJCAXHRGKBMCYBSVLFWTJPXUSKRBSZVAUNH", "UIZKWBCPCWOQITNFZHKKGDITSWEZKHZQXDSPJBCFUNHRJUTJZB", "ECTPPJTUYIXDZEDGSIIRPYDQCKBLOJVYIWWNSSXZYTGXLYTENG", "IJXMTMIXTWGEAUPZGLVWOPCOFLGWRFCJBVEIUFNSTNDUWIBHPG", "BXTQRMRRBXKIQFIAKDBNSXMYGBBUDAVYIWZSJWQVIYAGSUABMI", "XAEYNZPYCIOXUTLUMGBJEINYGLHPCJCMHXOULSYGXSLDOEAPYH", "DFLWTQIZRORLUZTDVVZIXWBLGLGYMGURGAUHCXETLAWCXILKIA", "ZJYOSTUXCWDRWYJZMRMNEJPYYKSXDASSINKCROEDIEEUUIXQAI", "PFMDKPHPHBDFBSARKFHPWGLDNKRUMDZVATSBNVICMDKSSIEZYQ", "NDTTWJCIGADXYWFTCWZXQODMKCIJZUXZWKYRFQNKULIBRLKYNB", "CPUYUHHQABRSYYNDZMEZJJGDSZARSXJUPCOIYWUHEBSMPDEXSD", "NOYYDAISXBDHSYLCTAVKEVMPNDGDEYJBDVMVOPROIDKPEEATHQ", "QCIPCHQYCLLFKDYMBREEMLKVFJYUCREWHCUUKHUHGQMMVTAKPD", "HTUTJCZDWWSYOTQMPFEERXPEKDTRNQTUUACGLHCJHDFEONIKLN", "NYDPWMXGVGROFGDLEHCWTLHDKINNXWQYXEEORBITZFWQIBKEDO", "VOXWKBJZVLSXZNDWTBLFNDLVMRKRHCLHDHKZVVNAYEYOAYIKBQ", "LJYTUTBQOPAUZFTGABIDQXLTPSSTAUGBWVSPAEFSTIKNWLLTGN", "IGWPAMPJTBAKSJPXMKLSRIUEZKPRCKNP"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 2197;
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<string> s = {"JRKKXQJJTMBURNWNOQNGBIQSEAYPABNFFVELTJQLMZDBLFXSHQ", "EUVWZGGIWARXOUJNFCZCZINILAHGHLMSRJQSOVVCLONAWHAGIK", "TEECYTGLCZDVRPNBUBRGWDEJCEQAEVUNMQBJOVGCXNQLGGTZUY", "OYYTCWBYYXMMGRUMJITKSVAYVPFAVMJGMXKLPKHVXOJRXELLTT", "VTHQZDXBIRPWMQPTIDPNYBPAXILKOFZCQLDOMUVGCFMRGRDRNC", "MWIWBAZQZYKFQJVKVUMNQFRAJKCUDLKYCDBDHXCFCJLUIBUXNO", "ERIOZVOSOFTLGOTBWUGOPWWIKDSKPOSFXNVMRTVJNBCRAHHPSL", "WMKXUREFHFAIKFHECTCDMFZEDRITWTXQBTGXXHXYQTQNDBEOAT", "IUFDEKYPOXHOUSSBPVQDAXECPTWKOLKNDVGFPJLGUBTECWRSOX", "YGATLSWBZZTLEPARGNZMPYWWVYQESPZUFWTVVUETLOFCBDFDIH", "ECIQIKTEMORCNKJFGISBWMNCQQVYRJDWHJOWJYBIARHJKDRRSJ", "NVCHDOZHHJCUTPTFBTZEWYSDHZSOZQPVNBQOOCHAAJUHRABOTB", "XERRJJIGETPRPMCHBZOVAQVLXAYRBAIAMIMHWQBZFZFLQYMPPO", "JBRXGTGMAHSDQQVIUPLBEQBYCQTRXSHUSFCHZBJOXPFIIKVGNM", "NPFGORWCIXPXVITSGFNRMKZNBSDJBMCAQZTKJPTTYVTDPHDDKW", "MNQODYXLTGTVKITYIJVJIPHJNVUCADAHJCMZTAPJTJXJUOVYKX", "ZASTKKZDFNXMSMQNLWPWGFUOHNAAEHOLPBLJMOHRLRYZKCUMQT", "AREPKIICMDGDCZDDPUYILTVAOQETEHYPUVXYDTDGWKWONCWJPJ", "MDMFJJVLJYHWWRCUFNNLQJKJWJEASFLQWCKNUVDONWKQUORABL", "ASJJUSKHKMGLPCGHETNYLDKSWRRFRFQSCJSIFFXWNXYDYLYPSO", "TMEOZLASGXTZJBEXQUGSYMVEVVVLKTYDKRDFLVCZYIAGVFPIYQ", "BFHKNYSGDZKHSIAZSQGOIIYKAVYPSGBAESAQXICQDYYRWPZIRI", "ADXFCMUTSPXXELPJIFCBGLRKCDFYIXHBPXBSBGXCLJKEGWXLTU", "HMDMXMIUNAVHIPBBXKDSHBQXNJVLBGXBPOLAQLGONYXHAVRPNO", "IFLXBELPIUMFSKDVOMZPRGZQWGYSAKBAKMFZPUKJTUBVHEYJOV", "QIRNNKNRJITGMEWMBUKINYXRFTZNBYIFSEMUVGPNUUWQWAXSVX", "XGYBHCUQJJNVLFUSQKMVLBJKNZEGLVVXRSVDDZCIEPGYCTYSUO", "CGCXRMBOIZCXVPNWEDJPXSMWEUJBSWXGGHJZRMEMIAEJDUMPBQ", "QONUKRGMXSBDCILIURWXQPAUVAMLVSMUIXPPLLIRDSMMULEIOO", "FLMUHGUYAOAVLJNXKIFHHQGGXYMEXWRQDTZQYAPPMGTJWSAFNG", "QHXGDZSTAYBBUFPSPQTFLSZTXRQTKVETTJYAHWVCKXAQHAWECB", "OPINCJRWSAWDWGWGFZBGOJXEFYHCVEICBOVLYMIZXRKVSIOMKT", "NTSAZQYYQSUULSXBLIAPNVBLSXHPNNFQIJOPGBMCVQMFUUWQEI", "KIYCXPFTNVSQHMZLXSRCEPEXFTZZNKWZNIRHHCYDYUJXGRSRWC", "HDFBQYPTTWNCCCJJWUWMWBLMWHSHIBFONLVWXLXREUKBCXIJAU", "JTLZNXVQGXMACCVGFXLOTDLZTFVZIFUKLRZQYDCMJUNFCQBLMP", "IPFTAMBBZERAAMTNODEKSLOSMTHHDWUCMLXIOGWTASFXVTXEUX", "YAYSICEZIHIFFCMEXQYYNXAEGDOVKCDTOJIPCYBSDXAZUUPFRR", "IGOXWMOBREWKUUVXOAGWIZHOVMODVKGLZPHPDXICZZURQMXGOW", "FZYHSRSZNNYXCCLFDLCAHTMLPGFQNBNVIDOIV"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1756;
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<string> s = {"QLQAJDCVNGJOTVQRHMVXVMVCTMWSNHPTAVVHHZRZDRIPWPZOWX", "UDPLMGXFDPXPIDGUAOPQSYOIHVVZKFVJYZELNMSGJLOBXWEYBR", "XONFDVLCVYNOAKQBCPPUHRVIYWQWSSUBNQXLORBWTUJPMHEPMN", "RJVJRBJMHFBIZTNDCFQGFFFFLJOFVJIAHKUEBZTUDBOWMIQNXL", "MTESNFTCSFWWEIKHXQDZUXVOWJZBKTNXJDYRRDSBREOBLBMKAG", "YPWKPCUNFRZAPPVIRVNTHPKUBNCCKHHHQZCEDBKAVPHYIPOBJR", "LAVEAPONARPNBYEWJJMZYINWZKGBNXBFRJFJYAETQLWVVCONDP", "HLYTXAKTNGWFSAENTVTHARFIOALRVWTTPEBMOGQNQNBGIIMOGI", "GNDFROLAWIVKFCXXGMZINSQGPEUYAWZQMPQYQVUTINOFEEHPRR", "UPNPBBJVAFVGRSSILBNCHHGRVACYDEQRLAWWUNKBWDSVNQKIPH", "LQEXHYNADRKTUBKFOMHIZMEIEZELGBAADECTHLKFDBOLWGBGGT", "MJOOSXLOULEUPDESEGKZIYSYJOYKXXHKRNVPGQLRZVHSHFVNAW", "WJZIDSGLGRFNVKTUSUNXWVUCXVXKBJSDHDDBLAZNFXJZSEZGJB", "HRCWVRRYGJNHTRITLHKVWINWRWLJEDCIDLFWBFISDMQPEGZKPZ", "LNQOBEKGHBNROGUKALYJWTIQNCLRMHELTTMWYHUWGRTHMJUGCK", "NXNIOJBUNXEHVVFODDNLCABXBLXBTIRYCRSSMSUDUYRGCQMHSG", "JWKPBVBSANGOTQRRDYVKYWDWWUMFVRXGELZBMYXSIVTLAINZRX", "ETPBXYTKNGKUSEZBVODYEFMXTCWHMSKJEPLFYKRLSGXBTHAIDS", "PYWBIMTGLBXCQXJLXBNSBBKEVEAWRUXUDMOGAEDDPPMNXYHJET", "KHSFCPKGAHPVESWGFSWJGRXDMJZULZBTUUMWDSPSTAQOYYKMHR", "KKOJRHQFWNJPFWJVNQVHZIQRXBDLHQTHKKIHWZAQRCLAXIIEGD", "OTZHOWRGTZQOZXVHWCGOJIWICSFOISGSNAQZXKMUQRKJUYXYLB", "FQTEBXSSWKKKIQBRUFNCBHRMCROWBYHZZETBCHSRIDDHMYJWZF", "SXKESSDGCHWWQKKOJXAUIVTFPNZPPJJKGXPSOMOJRYFAPJDJEW", "EQWYCOGHHIXLARJFDYZJBOZNFOJLKRDDAVQLZKCZCUMDNEVAOW", "SOFTHZCOBXIVSXIGVJTGPAHKJXILUSTGMXDCGGKXTOPNUQZPRH", "LCQWZLQWOJXRSTYUVGALXHLVTUUTDKGKVDPFNDIUZDIKTVUEXD", "FQMHFUZAOVFDUNLZIRMJLYGJPNIUPRRZWEIIZZDZKMVYJAMODD", "QAZHOWUSEVZLHLPIVPUPXRDMSAAVXFVLYUVGYYLUFYNHMMKPPG", "MMQPARZFVPJNRPRDXYCFOQPYROVJTMLFZAJMUZVHUKFLJRFLDC", "LOPFQPZENTQPKGEDXKRLUYXBNICWGXHYDGMQYKXTNQLSUZWMUW", "GDNPBXEWOKQPGJAZRAJUWKNJDPAXVFFQUIXNFWRZVRMJUWTQZQ", "WXHXWOAEVHXBCVUHCXHNGCPDBAPMOOTVRWMNSHYLDJTJEZJLMT", "BYWWVIYBLVNKVCHPVGWYFNBBCDTWBGOWJXGJDXVYAFJELYJWQP", "WDPPZHQXZRWIEZARTXMPSYZLNFKAUFEQZAIYLRZURXIJHNUGOG", "JFTEZZEFXASDRDGYEXGTUOJLIDDYKBMMSSJONWGDPUKYJJHQFA", "KYPMHLIMDLNGBZYDEXHRILRHMSKFOFEUDLYNLMFKABWMQNYNBW", "SQUUTLRLZFFBCXYIKFOMIXORABDEBDZYJPRGXLYYEKBYQDKMKP", "ZPMFYBPWILCFHLRXTFSKOXCMTBVHMQLLWLZNMVEJQAJGMNCQNM", "ESYWVTOTEIHLXZCYPEQIIQFDPQGFAIDCVQRCIALXRHBIFEFIPP", "GXNIYEAZNJWEPMQTRVQUFRTHLNSLMGQJFRGTKAIZMSYZOMZPZD", "RCHLKOCFTXZQWAUNYRYVSKLUOBIDVWYWLPVEZKCIQFJTZJIJAP", "OBUCBZALAYNGBTUNTYJGPSOQDHADMT"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1911;
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<string> s = {"OZPPACNPRLTYRBJPSQIWOAZWAKEQGDGXDTPUFPNMXDRIBXDSOV", "EIZZRRVCUVSHEKPZQKVVVVXHEMLUHXEKRZEJDFDUUCPHRPUPOW", "CFGWYXESYBZACBLOXFOONVDMCPUVBGQFJLLRBQVRVJCSOIHICW", "XXGFFJNYLGMGKWBLUJRYPOKOLTJKMXSVDHDSTTEGGDPSUSQIQZ", "AWLACQRVXFQMUUYTQVUXPTVQQIZFUKCPSHOFKXHOEKQQNSWIST", "RUGTOVJRRDFHDFESMRYWNPTHUMCUIZAJDSWWSWEZTVRSQTFMCN", "KEQMVZSOYJPSTIILEXIVACNCBRGEJOSGOUPVFHHWLCTJRZOGZY", "JSNTPEJLMKSQWXHWFCESXYEUSYEKRWFEPOUIZUSJSHYDNWQSGV", "TMESTLHFHJTMZDQJQWYDGEDSJGYDQZFMMOCPWKCAOKGVHMYAJE", "FWFRTLVVTCKLNLNPZNIBQFDTYYLDVNXWSCAZOIULYQHCJEOANV", "CEDNVHZNSELQWCWMBLEBJKUBPFUAZXTJEQWRZSVPMAUIHXHBYN", "GJDTYFUGUISCZKPPSJNLJSHFRJZYCJHZFYJEKJKVBJGDZUPJPI", "ZORXRNUOFPPKVVHMYFOGBXFMSHURMPFEOVJQIYRRXBPQKEPPHZ", "ADNOSVVNTUOABMZWFWCSRKPCBAYMCVKKWQOEVRXPRJJRMWNXLZ", "THAMIIMZMJPUXCLYDFTEUWPZKUTWDXQYIITOVZPJBQTABKMRHN", "JNBMZUKVYZIPPAVSUGKCMOZJZARJBXAAOUSJNKCKXTGIQDLMWE", "XKPJLWRFCTNGQZZCMALUHLLPNHINKAOYVISBXOACJBRRJUCMQT", "CNZBDXMINYBWHAGZYKWFZACNOSPDIZAQJPDOKDBANQVSJZUHVQ", "WTLLKAQIVUWPCIJMYMNPRPYHGOXHSVDLPICQDGSXQYRGYJOBPP", "RRKCTDYQVJXYAZUHMYQOWLRVSXEVVTKXTPZHETPHYQUPZWJHAQ", "XAOFSZRMARILUOQRQOXGAEYMKPXFHBYZLMQDPDEUJNOKHAYDEC", "YFEEIHKJZPNQIEMKGNHHOSPPKNKWEFDUOSZHJJZDSBHIBLRBVB", "VOCBUBBAYARANGKFOWHZZUACVNZXLLHCIJYOMQCQPORSZTPTBJ", "CKUYBRKZPSSEUHAHAAYUJPGSDMTJJTVNRVKZMFMNMYZRWWGFCC", "ZTEOYAAHQWNCFHTOMXDSPIVSKBKLKEVMYLBRRFYHBRAGQVVQDO", "HLITVZRFOEALRWWMZPQGOKBBHARMIGGKOIKHLUCPYPSMZWHGEJ", "CHGSFWCSZWNNDQWRPSOCQOLWDAXZLUGNITFCTULEHVMNUGNGVC", "TWSBIKDYLWBYEDWEQMMDUQMKDGUWDHBPQYLVDHOMLANEHQEKJV", "TZWWLUFTHWSPKRNHOGWYKXPYUUEBXNGYOCVAFMKZAJNHAZPSHN", "TISWMBKRWTUUWRMBCUYEDXJDFBEJZZNNKVRDMVONRRQQTUSAMI", "UVSLHTWAGXMYTUWIOSTQXTHDIUDCAZCFCMHLGKUURYWIZQJESW", "LWWLTBXDFHSOLNGOWUMDQKZASWYCOEOAKWIKJQLWADTDJVUOHH", "QONMWVLFUXMPSXMXVFWSDIJGSWYCFIETBDTYAJJBLOMESJEHMD", "IMHBXHSNUWHVDYQZCHHUNBIEFEJOAGYEDSGWFXNRSBUIMOYXPL", "POXSLSRFLTFAPZANMURPLOYCNFKIZNRWZFHRLTINWOZTIZBOPA", "MZJDZVMEBXNBCLORJLNQURRSGPPJRZFASOWDTSSBFXVNYLMYON", "MLFTZFWSMYRJCLHVZZLMKASYURRTCIFJUXXIYGMDRIDTCFXFMT", "RMUIDPWYAQTINLJNSMWHOZMVNQDKFDQJJLEOVKDLFWAPNDVNQQ", "EXNFSKQBHJQAHISPAKEWHCQQKEZWKVEUGBOVVUQLQPLFZYKRWX", "FMNLDQPCSXVCBKUTRWYNZSLXTAUGJVHEYRSWWCJVFQMRLIJITE", "RROHZGOUJYWSBSDXIIJOPXWHIRUZUHORGFMZRVRTZMOKXCMMJP", "LEFDXEZXXEXJQGMRIFABTDMBKMUELVMEHNHPKMNVXGQNKTWLXT", "RPHEINUASAKFXGMPYMJJTTJYBYDYJOMVGGPAOLINSXMZMRWYLH", "LAZPBNGZXQPUOFOEYWVEAYAJTJOCRMCRIPDBETNIROVPACMOHT", "JUGUWCAPEXMSINKDUOGSDTFLUEEFZANUZATXRBBVXCENRAATBE", "FEOIEYYMOQDFJACHNTWJKHAMAITMILPTFEGIBSGDCACCKMTWYD", "ALL"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 2059;
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<string> s = {"FOQXFLHFVWUIVFEKHNBLCWBDOQTKUXLJYNYPYRSAOTXSASQOFQ", "CMNXNYRGBJXNMDDJFGTEHWILUWOTNTWKCCUUXVXAFGFIMLJRCB", "RFOPFQBTKLQMOFLVLJERRABUQPEIUXPTUEVDYTOWMFRIGKSQDR", "CKZCRGFUHTFCZOGSJHSYRCXPFRNWYXNZITISMFAQERYBYCISEW", "MCYXUKQYNHLOLTGPYBHWJZFAYILNKGERSTJDLRDPZBWZVRHQOE", "GVMANQTEWLXQBMKGHDEQUZFHHZRSNROQVDTBBKMOYXLKLYGPHR", "LSNKEUAVBZZIWWVITRSDWDPLOITVMNLDWPCFJDVJFVMJBYMMAQ", "EQFJICCIFTZOAEZFCQXPSUKVTKGSGAFYXQLJUHVOZIDUTANQZY", "OCBVYTHAFSZYEWJWCXBARNZFAEQJKFBJNKRRKRNVFFXPSVRBFQ", "ORRTAXFHBKLMLCUYOXHTPIGDPYWLXWOVACXDTYZNTSSGCFVUFR", "HMQCTFWHPRAYJKPSQRQWBXTKHMWXRWJP"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 480;
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    vector<string> s = {"NNPWWZNCNRVNERGDSACYELAJJKFBTDSRTAHIFNWQJNDMNBCUTB", "DPWQPGJGFGRZNWHSOJDKCNSZKKPWXBLUIPEIQICSYCSSZSLAWY", "DXMFIHDWIPZPSCCDABCBKZJAPLQJTGNMOPSFFPVDGBZZUPUACO", "LALDMETSJBZNWBKLYDMWXCTKCBAYROSXOXKAEDIINBDUEKJTVS", "QXUETDXRYLCUZQULXKKDHMBVJXUSYEMTGJWKCDNULJFGRNANRV", "ABFQGVDMWXHQLEERNKFNOLMUJCKSNBPTVHJTYRCBQKFNUXMGAL", "HXATIQQBHSDDXJQWXYJCAYHFKLZDLGRHGDKZLRGMKKBVZUGKNU", "HUBJYBDLCYPSTJSLSLNNIIJXZKLAKDSGWSMHTCMXNRQLMSAJIP", "MQXCOUEEDUVVRMWUURSFEMEQNFBYFWGYKGDYEWFOBTEWJCICSE", "ZURFLJKOQECEUCQPZOYLGBOKCIJAZUFKMVFOFKRXJGDWVSTQMH", "NAWHAAFSCNVEMTGZREUIXLINPXRRNDOZCMEZGVDFPGLNVLGLSD", "ZZXHQAKODVYVGETDQWDUJPRCVHYPJZRX"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 523;
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    vector<string> s = {"ETKHGFNLEGGJZCOHWUTMHWKNAPDNAQGRUQMHKJRIUVSVBQQOYQ", "LZEIVLJVWONJFDXCFRGAJYWJKLRNSKEFKHWDIBAYJIAJIBQUBJ", "CXIAQTLCSOIGTIZWLWGFUKEPUXIPDQGGYQLRLAQMQJNZXALCSY", "GHQXODMWJJVUAFHKEMVNULOGPWZMVJZLKDMIRSNZXKZNIEHEDN", "HTLQBFEULFBZFGABMWOAWPUIFMAWQSKHLMBUKBGZWXXHWWVUVW", "ATBUFBAKTDRIIWCRWNMEEEVJZNBPWQUWTMELRDDIBSIEQRANYM", "SUQRCVSYOJOFSSHWABZMILIIBDLSDKIHBTRCLNJUQYPUC"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 317;
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    vector<string> s = {"AWIJKLKJIOOOOOOOOIJKLKJIWAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "ABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "CBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZYXZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZABAZABAK"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 11;
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    vector<string> s = {"NWLRBBMQBHCDARZOWKKYHIDDQSCDXRJMOWFRXSJYBLDBEFSARC", "BYNECDYGGXXPKLORELLNMPAPQFWKHOPKMCOQHNWNKUEWHSQMGB", "BUQCLJJIVSWMDKQTBXIXMVTRRBLJPTNSNFWZQFJMAFADRRWSOF", "SBCNUVQHFFBSAQXWPQCACEHCHZVFRKMLNOZJKPQPXRJXKITZYX", "ACBHHKICQCOENDTOMFGDWDWFCGPXIQVKUYTDLCGDEWHTACIOHO", "RDTQKVWCSGSPQOQMSBOAGUWNNYQXNZLGDGWPBTRWBLNSADEUGU", "UMOQCDRUBETOKYXHOACHWDVMXXRDRYXLMNDQTUKWAGMLEJUUKW", "CIBXUBUMENMEYATDRMYDIAJXLOGHIQFMZHLVIHJOUVSUYOYPAY", "ULYEIMUOTEHZRIICFSKPGGKBBIPZZRZUCXAMLUDFYKGRUOWZGI", "OOOBPPLEQLWPHAPJNADQHDCNVWDTXJBMYPPPHAUXNSPUSGDHII", "XQMBFJXJCVUDJSUYIBYEBMWSIQYOYGYXYMZEVYPZVJEGEBEOCF", "UFTSXDIXTIGSIEEHKCHZDFLILRJQFNXZTQRSVBSPKYHSENBPPK", "QTPDDBUOTBBQCWIVRFXJUJJDDNTGEIQVDGAIJVWCYAUBWEWPJV", "YGEHLJXEPBPIWUQZDZUBDUBZVAFSPQPQWUZIFWOVYDDWYVVBUR", "CZMGYJGFDXVTNUNNESLSPLWUIUPFXLZBKNHKWPPANLTCFIRJCD", "DSOZOYVEGURFWCSFMOXEQMRJOWRGHWLKOBMEAHKGCCNAEHHSVE", "YMQPXHLRNUNYFDZRHBASJEUYGAFOUBUTPNIMUWFJQSJXVKQDOR", "XXVRWCTDSNEOGVBPKXLPGDIRBFCRIQIFPGYNKRREFXSNVUCFTP", "WCTGTWMXNUPYCFGCUQUNUBLMOIITNCKLEFSZBEXRAMPETVHQND", "DJEQVUYGPNKAZQFRPJVOAXDPCWMJOBMSKSKFOJNEWXGXNNOFWL", "TWJWNNVBWJCKDMEOUUZHYVHGVWUJBQXXPITCVOGRAIDDVHRRDS", "YCQHKLEEWHXTEMBAQWQWPQHSUEBNVFGVJWDVJJAFQZZXLCXDZN", "CQGJLAPOPKVXFGVICETCMKBLJOPGTQVVHBGSDVIVHESNKQXMWR", "QIDRVMHLUBBRYKTHEYENTMROBDEYQCRGLUAIIHVEIXWJJRQOPU", "BJGUXHXDIPFZWSWYBGFYLQVJZHARVRLYAUUZDRCNJKPHCLFFRK", "EECBPDIPUFHIDJCXJHRNXCXMJCXOHQANXDRMGZEBHNLMWPMHWD", "VTHSFQUEEEXGRUJIGSKMVRZGFWVRFTWAPDTUTPBZTYGNSRXAJJ", "NGCOMIKJZSDWSSZNOVDRUYPCNJULKFUZMXNAFAMESPCKJCAZXD", "RTDGYRQSCCZYBNVQQCQCJITLVCNVBMASIDZGWRAATZZWPWMFBF", "JKNCVKELHHZJCHPDNLUNMPPNLGJZNKEWWUYSGEFONEXPMMSBAO", "PMDGZQMKQZXUVTQVNXBSLQZKGLZAMZPDNSJOLVYBWXXTTQOGNR", "BAIAKQLLSZKHFZCONNMOQKLPEEFSNSMOUWQHODSGCFOHESYSHM", "GXWTOAYUVNOJDJFTQTWKBAPRIUJIMQWSPSLGVLCSAQBDBGWTBS", "EETTWDNFNBYJVPDJXYUZQXSTATBZPCTTHOOFREMGFKRBCVKZVG", "BOFTHGOJHDNAYWPNBITORAAIBEDNEZWFPDAWLOHSSVTQTKFVSY", "LJZLUCQXSWYQDNTDMFRTZLQSEKEJHZKSKLFEPXCHVCZYSVDGCX", "BBISWMEAYLZIFKTMOIKSSFXTGPOJXQIYSRSQFWQDJQNQCGDQRN", "LLUIEAZVMWNUUFNNXVLOYVGMLIUQANDLYAVFAUAOSNLNVACSVP", "IUMOIAWCQXSWKQWGXYAZNTNAIKAMEYBNUQBCQAGGXACHRYNQXQ", "QMLFOTPQHVOKIIAMMQMVXJVBSOAIFZYXNJCBERRNMIXXSYJHOV", "ENGBPYQRIXQGWDRYGXRXKFHICAINHWILKQMBPESZDIGZNZXTZQ", "SJWATYCBMJAWWMNINEPFDUPLUCLTXMKPVGRRGTUSEURAGELTKC", "APWPBQROMQAWIXEZQKVLFBHWCOCPJMRMBPBEGVSULUQTUUVKES", "VJTDHVTJMEXFQBVUFDPAXCWNWQJTBPLYZEDICWSODPWTQRPYUE", "ARHWGFNPAQELOFRSOTQIKTXIPQZEQVLQMUOUBBJBRPMIXFCLBS", "TNOSVDKUJCPWSDQHXRKIUEZIOWOQJPIECWXXBJTNMKJGNCPMVA", "UQGTAUSOKBFUGJTFIUQBJCLVLAZAMUCIMICNEWDOXJLFUEMDAD", "GKHUFSUEVJAXRNIVCORHFRQQWNUJQUOYEVSLQPRLYSKRHUNLJG", "SOXLEUYYFQUTOZQHMGYETYYEPFAESJLKZIVDEVDLLYGAZXJNDJ", "RXHRDYYDDQNQDOAYSHWXSHXZJYWUMBFFAMXDNXJQOYIRMIRERN"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 2211;
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    vector<string> s = {"ADCDAJADCGQCGERTMYHENNMGUNCAIRFDTPGZFRSHTEAKUGBAIJ", "BLMJJGQYQRRSASFRMRDCUSEVUJYUXGQEZKRLGKVCGFAFVGGPFA", "TRRCIACXCMLWOUHJNZSKXYCBPUMNLMEMWBGWTWBAKUBWICDQCB", "SMLRETHSDQQSYGWOOXERMRLXRPFZMPBINEFSFPOAHGQXXSTHBP", "HYDRLSLYQSDKSHTRZRYBJNVMLVGBZBQVZKPZHUVGDQUKXCMNQL", "UMKPXWCNCNUKJWFAGKKMUHHMWSCPYTGADEXMBLSGJIXOUNZYJS", "UWLIUAUPILVXVTDKQBETPLVPSMSZMQBTBQKEKJTCFXEYPCULBZ", "MSZVBLBVJAXRGFLJNYAUSJZBHIUVAODPOUJGNZNBFUOWTVSEBK", "PVPNMRYZVVNXNYHYGXOHGFFZXHFGHBQPFFCOEEDHEHWRJVYMFB", "HJYENRLFBEEPCGBWVNAUGCJPKYMRDHAHQGXMRMTCREYEUJIZDJ", "PKATAIKXGVURLLNXAKQMOSDXTWHNKYICFSOAYIYOQCELIKPGVY", "QEPXOVKMNUSILPOZFEYPZZEFYVTMIEKVGOVWSOFNWOUZLUBJVZ", "YKGECOBOSBCQKLKDFYINFGXWGYDMSPLPAFKCDEVVLUDKEZKUUS", "YFXORCWLCPCFNSFSXTPYYIENMINHWYSAYCMELEKBVVJKXLUWAZ", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBAAABBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBAAABBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "WDMVASMIOSUUFCSLDIWDQFBTZEDNUXTZUJHYNJYUACGQJKTJSU", "MPBHUYYXXISSHJLTXYYLHLMJXUTBJDOWFFNLSPZWJAQYQEDZQW", "EXGGAWFQHRWABGJMSNIYQAKYTOGJKWTSROARTBLOMNVRUZZYWD", "GKTQWLBWOGQCGERTMYHENNMGUNCAIRFDTPGZFRSHTEAKUGBAIJ", "BLMJJGQYQRRSASFRMRDCUSEVUJYUXGQEZKRLGKVCGFAFVGGPFA", "TRRCIACXCMLWOUHJNZSKXYCBPUMNLMEMWBGWTWBAKUBWICDQCB", "SMLRETHSDQQSYGWOOXERMRLXRPFZMPBINEFSFPOAHGQXXSTHBP", "HYDRLSLYQSDKSHTRZRYBJNVMLVGBZBQVZKPZHUVGDQUKXCMNQL", "UMKPXWCNCNUKJWFAGKKMUHHMWSCPYTGADEXMBLSGJIXOUNZYJS", "UWLIUAUPILVXVTDKQBETPLVPSMSZMQBTBQKEKJTCFXEYPCULBZ", "MSZVBLBVJAXRGFLJNYAUSJZBHIUVAAAAAAAGAAAAFUOWTVSEBK", "PVPNMRYZVVNXNYHYGXOHGFFZXHFGHBQPFFCOEEDHEHWRJVYMFB", "HJYENRLFBEEPCGBWVNAUGCJPKYMRDHAHQGXMRMTCREYEUJIZDJ", "PKATAIKXGVURLLNXAKQMOSDXTWHNKYICFSOAYIYOQCELIKPGVY", "QEPXOVKMNUSILPOZFEYPZZEFYVTMIEKVGOVWSOFNWOUZLUBJVZ", "YKGECOBOSBCQKLKDFYINFGXWGYDMSPLPAFKCDEVVLUDKEZKUUS", "YFXORCWLCPCFNSFSXTPYYIENMINHWYSAYCMELEKBVVJKXLUWAZ", "MIKDHLAEYYTMIVOMQLYLUJQAHERLBSYSIPNXGTMRNGITXKVVSN", "FUAJSWGDITKRQVFSBRPAKPXGIOYESLRFOKEEZCDRRYIHYBXKYZ", "YAHPHSREYWYPZBREMDIJOXYZKIOHSBRVCQKJPATIPIDQVISHFV", "MIQRPJIVZFNUWRUDTNEKGHOSSSVAYMSBXPCMMCWZPQXKRNBXKP", "DTERSIZDKVFWNVATGPVNXFQDXNMSVOCGBRXRZSCAIENECIAIBZ", "EPLGCMGLAEGXMYENDYHQZOEEJLFCZVZIJPLXYHFCJGNABFHIYN", "WDMVASMIOSUUFCSLDIWDQFBTZEDNUXTZUJHYNJYUACGQJKTJSU", "MPBHUYYXXISSHJLTXYYLHLMJXUTBJDOWFFNLSPZWJAQYQEDZQW", "EXGGAWFQHRWABGJMSNIYQAKYTOGJKWTSROARTBLOMNVRUZZYWD", "GKTQWLBWOGQCGERTMYHENNAAAAAAAAAAAAAAAAAHTEAKUGBAIJ", "BLMJJGQYQRRSASFRMRDCUSEVUJYUXGQEZKRLGKVCGFAFVGGPFA", "TRRCIACXCMLWOUHJNZSKXYCBPUMNLMEMWBGWTWBAKUBWICDQCB", "SMLRETHSDQQSYGWOOXERMRLXRPFZMPBINEFSFPOAHABCBAJABC"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1895;
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 63;
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    vector<string> s = {"ZZ", "XF", "XZXZXZX", "HHHHHHHHHHHHH", "GH", "LLLLLLLLLL", "LLLLLLLLLLLL", "KL", "BABAABAABBABBBBABABBBABBBBAAAAAABABAAABBBAABBAAABA", "BBAAAABAABBAAABAABAAABABABBAABAABBBABBBABAAABABBBB", "AAAAAABBBBBAAAABABABABAABBBAABBABABABBBAAABABABABA", "AABBAAABABBBBBAABABABBBBBBBAABBAAAAABBABBBBBBABABA", "ABBBBBBAAABBAABBBABAABABAABABBBBAABBAAABABABBAAABA", "ABBBAABABBABBABAAABBABABBBBAABBABBBBBABABBBBBAABAB", "AABABAAABBABBBABABBAAABBBAAAABBBBAABAABABBBAAABABB", "BABABAAABBAAABABBBBBABBBABBABBBBBBAAAABAAAAABBAAAB", "ABBABABBAABBBAABAABBBBBAABAABBAAAAAABBABAABBBAABAA", "AAAAABBBABBBBAAAAABBAAAABABABAAABBBAAAAAABBABABBAB", "BAABAAABBBABABBBBBAABBABAABABAABBBBBBBAABABBBBABAA", "AABAAAABBBBBAABABAABBABABBAAAABBABBBBBABABAABBAAAB", "BABABBAAAAABBAAABABABBABABBABBAAAABBBAAAABAAABAAAB", "AABABABAAABABBABAABAAAABAAAABBBAABAAAAABAAAABBABAB", "ABABAABBABAAABABBABAAAAAABABBBBBBAAABABABABBABABBA", "BABABAAABBBBBABBAAAABBABAAAAAABAABBBBBBBBBAABBAABA", "BABBBBAAABAAAAABAAABBAAAABAAABABBBBBAABABAABAAABAB", "ABBAAABABAAABABAAABBBABABABAAAABAAABAABBBABAABABAB", "ABBABBABABABBBBAABABAABBBBBBAAAABABBAAABABBBBBBBAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 149;
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 22;
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    vector<string> s = {"BBAABAABABBAAAAAABBAABABBABABBABABABABABBABAABABA"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    vector<string> s = {"ABCDCBAGHGABCDDCBA"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    vector<string> s = {"NSFIOSFNIAOFINASFIASNFIDSIOFNOAFNAOFIDAFOAAOFEAROF", "YELLQHQRVMZWSXDOJQMTHIBXTABAXJJRZSHANCDIKSJOXEKJDK", "DBHXFYAMRQGYSMJLCQJLGMUKAWQQNTOFIMMLPMCBNEUKWQVGGM", "OABBCDUBEYVITOSYMFTYLYSCOSTBNXGRZNTQBFICQGHLEFAZTM", "YNLWREFRXESXWTIPCTDLKDKENCLNWUPLVJLKCNQGCQJMERWQAC", "TUOESCGHHRCFMIHZOQTSFUIDGLGJANPZVKBFKDITCNSUQOWHQX", "CCMHDMAGNJFRYOFAHOACGHJRPHPYLNOUKMXBKAHBZCBGQAHSQZ", "RNPNWGJWQZZTDTQSUARHNOBHSVQYTTUEBFBMHCLSUDGDEOVALA", "TDJHJZQCSGPHAYZEFKDHPSDCASYCIEMEBYKYEUQHULWTPKHAXQ", "VIIIYFKCBTKFEQCKKDQNKGMJXJUJFTQGXQJGDVYURTWGHKSMBG", "WKTPKJOFZRJVGIRTZWKRIAZOTNVZMPGMQHAEDDJHPGRWQTARUZ", "ALJPILKTZYXJUEAPYYNKDKVSGRXJLYUPUCHDHAOXJSPMPJOONA", "YZLAOLINPAEBIXARKDNBLVIMPWLPQOOXOFEQTBYZGBBOHGTNAU", "QIHOOIJNDWBICLYRPLCNQJTEUFZORDULUIUORIWYFUVFPHNAUK", "IOABTFKBJHLRINEPTLHGTTDDLSAQCCDMRCIVEFETBITTCQJOXU", "USEZVJIUNHTVYSVKXCYEFIMDSXXVRZWHVJZYYQLFBSJICUFJQZ", "DICNAZCSJAZYIEOJHINTEIZWSNEAYBZKEZAPDDWCWRBRBVJVUT", "ARTNXZGFXMOWQYBCPMNMIPYPBSOQNPEMYVQNBOGMSUYXHVFBSP", "NDTWXAJSKGBBENACJQVATVPCZKAMCJVBXBYRPSAYAWCFDATSJW", "OGYHOBAVCKNVBFRATXBPJIMYWWZAJLQYVOEMXAKPZPOBIXTNOL", "SDBELDLZOMRBYCSGPSYNVAFGFXQYRYHATDIGFKCCKPUBAWVTKT", "HAMZFXDHRLSUSOZYZUFLJFIPXKIRBYJZAKJEXYDKUBDAPVXLEV", "ZLWJXOGTULEUNZEACINSSXZGRRHXFKGGGVQVAVPSEULGUKYGBX", "ZUYIEQWIPALDHLBREAEQHMELMOPSQCABLSHCZCGZYXIGOPCYHC", "BASKNIPPAXZHBKWMXLHCAYCXYMUJHIQHVBGHOPKVMWGVZCCTZH", "KTFUFFUXKMDZPMHKXJULPCUGXRYJJGLIIZGPECQHORXYGBMJBV", "CZEJHPAXUWIWQGGSKCIKDPXHBNTWOWBLWXWXAEXEKBHVLSIUFE", "ZNNOSNUYQHFDDOOYYRWWXTWPGPKSQGYKNFUTCHTGJPSJSBPHFZ", "BYIGMTRZIWMFHSROZQSOVSCHCEOUJXONKYHTXUSRRUTVPBVUDT", "DLFDSTARWBOUHTBCABVKTFSNVOROMNGJZTNPSWBRNNWUNFSJUL", "XBKPFBGRGIQJWYCGAORELKBYUUDPQNRXHMXRDXDOOVHLPBLIAV", "NTBGYTXILSFCMFHBXYRSLLYBYANPWROHLLKFPDDKCBUNTAUGAL", "GXVHPCGAJTYZBNILIENARYHGQUCUNYENDUHOZMPUKQFUDVBOXD", "HTRJBLXOFJJAXSWVOGSFUTMVZLQKKFCBTGTSHCSPOQPQAADDGJ", "EGUDNEFDTZPCPQZJHBQYHWTWQWIUSZTYDRRPEWXCJKPHJULNJN", "YOFWBAHVHUUDRRPSCIANXTMTBOJFXHSCXQTNKVFNQVETLQMXQM", "WRYCROWMBMLPBRDGELXRBXUVEVCVJNHLRHDEAIJDYZRVRSIVKR", "DORONDGBJBKAXKLPWMTJOSGWLHJRXULXYNVEYICMCLXMVMVYVV", "LPMJCUBZJSUZABUJOUDMYRMZIQGORCTTZDPGCCEJZYVHLICULL", "CWYFHBBLHNIMGREMVNQHULBRAIFTLSUTFXUDJGIGDYVRAPTSGV", "HEAIALLQDBHGUYVQUSLNAUINYIRCJAGSARKNBDGDCEPQHVUQQU", "FWPMDYWUPSBMUFLNLYPVESIYMWYZVFZTGUZVRCYNKWJHUTBZUS", "YMBGILEJSIWERAWSQXRIHGOJAQWXIAZOONZWFQYJRPKXQHRGIU", "MOXISQNUZUWQNFAMLNBRGHNWNXSWJVHTYPXTVNAKLDMSOASIBS", "ASDOFISDOFNDSFOAAAAAAAAAAAAAAAAAABADONDFOINFOIDNFO", "IONFSDFONOIAHFBSAFOIDANFOITOITHFAIADSNFOISDFNAFIOF", "IONFSDFONOIAHFBSAFOIDANFOITOITHFAIADSNFOISDFNAFIOF", "AAAAAAAAAAAAABBBBBBBBAAAAAAAAAAAAFDIOAFNONFOASAFFN", "SAFIODSFINDOFSDNFIDAFOODOFNIFIDFNSDFAIOSDFOIASFIDD", "ASNFOISNFAAAAFINASFOADSFIDSFODSFDOFIDOSFNDOSFIOSAF"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 2196;
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 14;
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 13;
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    vector<string> s = {"ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA", "ABAABBADZZJJKKKMAVFFVELITERTIUPNAAANITALAVALATINA"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1100;
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    vector<string> s = {"GKTQWLBWOGQCGERTMYHENNMGUNCAIRFDTPGZFRSHTEAKUGBAIJ", "BLMJJGQYQRRSASFRMRDCUSEVUJYUXGQEZKRLGKVCGFAFVGGPFA", "TRRCIACXCMLWOUHJNZSKXYCBPUMNLMEMWBGWTWBAKUBWICDQCB", "SMLRETHSDQQSYGWOOXERMRLXRPFZMPBINEFSFPOAHGQXXSTHBP", "HYDRLSLYQSDKSHTRZRYBJNVMLVGBZBQVZKPZHUVGDQUKXCMNQL", "UMKPXWCNCNUKJWFAGKKMUHHMWSCPYTGADEXMBLSGJIXOUNZYJS", "UWLIUAUPILVXVTDKQBETPLVPSMSZMQBTBQKEKJTCFXEYPCULBZ", "MSZVBLBVJAXRGFLJNYAUSJZBHIUVAODPOUJGNZNBFUOWTVSEBK", "PVPNMRYZVVNXNYHYGXOHGFFZXHFGHBQPFFCOEEDHEHWRJVYMFB", "HJYENRLFBEEPCGBWVNAUGCJPKYMRDHAHQGXMRMTCREYEUJIZDJ", "PKATAIKXGVURLLNXAKQMOSDXTWHNKYICFSOAYIYOQCELIKPGVY", "QEPXOVKMNUSILPOZFEYPZZEFYVTMIEKVGOVWSOFNWOUZLUBJVZ", "YKGECOBOSBCQKLKDFYINFGXWGYDMSPLPAFKCDEVVLUDKEZKUUS", "YFXORCWLCPCFNSFSXTPYYIENMINHWYSAYCMELEKBVVJKXLUWAZ", "MIKDHLAEYYTMIVOMQLYLUJQAHERLBSYSIPNXGTMRNGITXKVVSN", "FUAJSWGDITKRQVFSBRPAKPXGIOYESLRFOKEEZCDRRYIHYBXKYZ", "YAHPHSREYWYPZBREMDIJOXYZKIOHSBRVCQKJPATIPIDQVISHFV", "MIQRPJIVZFNUWRUDTNEKGHOSSSVAYMSBXPCMMCWZPQXKRNBXKP", "DTERSIZDKVFWNVATGPVNXFQDXNMSVOCGBRXRZSCAIENECIAIBZ", "EPLGCMGLAEGXMYENDYHQZOEEJLFCZVZIJPLXYHFCJGNABFHIYN", "WDMVASMIOSUUFCSLDIWDQFBTZEDNUXTZUJHYNJYUACGQJKTJSU", "MPBHUYYXXISSHJLTXYYLHLMJXUTBJDOWFFNLSPZWJAQYQEDZQW", "EXGGAWFQHRWABGJMSNIYQAKYTOGJKWTSROARTBLOMNVRUZZYWD"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 1013;
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test67() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 67: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 67: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test68() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 129;
    if(result == expected) {
        cout << "Test Case 68: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 68: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test69() {
    vector<string> s = {"AAAAAAAAABABA"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 69: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 69: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test70() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 70: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 70: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test71() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 71: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 71: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test72() {
    vector<string> s = {"ABAAAABAAAACCA"};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 72: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 72: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test73() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 23;
    if(result == expected) {
        cout << "Test Case 73: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 73: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test74() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 31;
    if(result == expected) {
        cout << "Test Case 74: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 74: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test75() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 75: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 75: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test76() {
    vector<string> s = {};
    PalindromePartition* pObj = new PalindromePartition();
    clock_t start = clock();
    int result = pObj->partition(s);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 76: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 76: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    test67() == 0 ? ++passed : ++failed;
    test68() == 0 ? ++passed : ++failed;
    test69() == 0 ? ++passed : ++failed;
    test70() == 0 ? ++passed : ++failed;
    test71() == 0 ? ++passed : ++failed;
    test72() == 0 ? ++passed : ++failed;
    test73() == 0 ? ++passed : ++failed;
    test74() == 0 ? ++passed : ++failed;
    test75() == 0 ? ++passed : ++failed;
    test76() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=19849563&rd=9820&pm=6043
********************************************************************************
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
 
using namespace std;
 
const int maxl=3000+5;
class PalindromePartition {
public:
  char s[maxl],rev[maxl];
  int f[maxl],L;
  bool check(int a,int b)
  {
    return memcmp(s+a,rev+L+1-b,b-a+1)==0;
  }
  int partition(vector <string> vs)
  {
    int i,j,k;
    string str="";
    for (k=0;k<vs.size();k++)
      str+=vs[k];
    strcpy(s+1,str.c_str());
    L=strlen(s+1);
    f[0]=0;
    for (i=1;i<=L;i++)
      rev[i]=s[L+1-i];
    for (i=1;i<=L;i++)
    {
      f[i]=f[i-1]+1;
      for (j=0;j<i;j++)
        if (f[j]+1<f[i] && check(j+1,i))
          f[i]=f[j]+1;
    }
    return f[L];
  }
};

********************************************************************************
*******************************************************************************/