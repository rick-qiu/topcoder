/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=5909
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class Horoscope {
public:
    int maxGoodDays(vector<string> predictions, int R, int W);
};

int Horoscope::maxGoodDays(vector<string> predictions, int R, int W) {
    int ret;
    return ret;
}


int test0() {
    vector<string> predictions = {"GGGG"};
    int R = 4;
    int W = 1;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<string> predictions = {"GGGG"};
    int R = 2;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<string> predictions = {"GBGBBB"};
    int R = 3;
    int W = 4;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<string> predictions = {"GGGBBBGBGGGB", "GGBBBBBBBBBGBGBGBGBGBGBGBGBBBBBBBBBBBBBBGGGG", "G"};
    int R = 4;
    int W = 35;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 56;
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<string> predictions = {"GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB", "GGBGBGBGBGBGBGBGBGBGGGGGGGGGGGBGBGBBBBBBBGGGGGGBGB"};
    int R = 50;
    int W = 50;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2450;
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<string> predictions = {"GBBGGGB", "BBBBBGBGBGGGGGGGGGBGGGGGGGBBBBBGGBBGBBGGGGGBG", "GBGBGGGBGGGBGGBBGBBGGBBGGGBGBBGBBGGBBGB", "BGBBBBGBGBGGGBBBBBGBGGBBGBGGBBBB", "BBBGGBGG", "BBGGGGBBBBGGGBBGGGBBBGGBGGGBBBBBBBBGBBGBGBBGB", "GBGBGGGGBBBBGBGGGBGBBGGGGGGBGGBB", "GGBGGG", "GBGGGBBBGGBGBBBB", "BGGGBGBGG", "GBBBGBBBGGGBG"};
    int R = 21;
    int W = 43;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 252;
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<string> predictions = {"BBBBBBGBGGBBGBGGGGBBBBBGBBBGBGBBBBGBBGBBBGGBBGGGGG", "GBGGGG", "BGGGGGGBBBGGBBBBGBGGBGBBBBBBBBBBBBBBBBBBGGBBG", "BGBBGGGBGGGGBGBB", "BGGGGGBGGB", "BBBBGBBBBGGGB", "GGBBBGBBBBBGBGBGGGBBGBBGGBGBBBGBGGGBBB", "GBGBBBBGBGG", "GBBGBBBBBBBBGBGBBBGGBGGBG", "BBBBBBGBBGGBGGBGBBGGGGBBBGGBBBBGBGGBBBBGG", "GBGGGBBGGGGGB", "GBGGGBBGBGBBG", "GBBB", "GBG", "GGBBBBBGBBGGBBGBGBB"};
    int R = 29;
    int W = 8;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 305;
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<string> predictions = {"GGBGB", "GBGGBGBGBBGBGGGB", "BBGBGBBBGBBGBBGGGBGBGBBBGBGBBGGGGBG", "BGGBBBBBBBGGBBBGBGGBGGB", "GBBBGGGGGBGBBGB", "BGBBGGBBBGBGBBGGBGGBBGBBGBGGGGGG", "GG", "GGGGBGBGBGGBGBBGBGGGG", "GGBBBBGBGGBBBGGBBGBBBGGGGBBBGBGGBGBGBBBGGBBGBGGG", "GBGBBBBBB", "BGBBGGBGGBG", "BBGBGB", "BBGGBGBBBBBBGGGGGBGGBGGBBBBGGGGBGGB", "BGBBBGGG", "GGGGBBBBBBBGGBGGBGBBGBBBBBBBGBBBBBBBGG", "GGBBGBBBGGGGGBBGBBGGGGBBGBGG", "GGBGGGBBGBBBBGBBBBBGBBGGGB", "BGBGGGBBGGGBGGGBBBBGG", "B", "GBGGG", "BBGGGBGBGGGBGGBBGGBBBGBGBGB", "BBGGBGGBBGBGBBGBBGBBBBBBGGGGGGBBBGGBBBGGGG", "B", "GBBBBBBGGBBGGGGGGBBBGBBGGGGBGBBBGBBBGGBGG", "BGBBBBBGGBGBGBBBGGBBBBBBGGG", "GBBBGGBBBBBGGBBBGBGBGGGGGBBGBGBBBGBG", "BBGBGBGBGBG", "GGGGBGGBBBGBBBBBGGGGGBGBBGGBGGBBBGGGGGBGB", "BBGBBBBGBGBBGBBGBGBGBBG", "BGGBGBGGGBGGGBBGBBBGBGGBGGBGG", "BGGBGGGGGGGGG", "BGGBBBGGBGBGBBBBGBBGGBGGGGGGB"};
    int R = 9;
    int W = 22;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 704;
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<string> predictions = {"BGGBGBGGBBBBGGGB", "BGBB", "GGGGGGBBGBBBGBBGGGGBBGBBGGBGGBGBGBBBGGGGGGB", "BBBGBBGGGBB", "GGBBGBGBGBBBBGBGGGGBGGBBGBGGG", "GGGGBBGGGBBBGGGGBBBBBBBBGGGBBGGBBBBBBG", "GBBGBGBGGBBBGGGBGGGBBGGGGBGGBBBGGGBGB", "GBBBGG", "BBBBGGGBGBGBGGBBGGGBGGBG", "BGGBGGBGGBBGBGBGGGBBB", "BGBBGGGBGGBBBGBBGBBGBGGBBBGGGBGGBGBBBBGBG", "GGGBBBBBGGGGBGGBGBB", "BGBBBBGBBBBBGGBBGBGGBG", "BGGGBGGGBBGBBBBBGBBBBGGBBGGGGGGBGBBGG", "BBGGBBGGBG", "GBGGGGGGGGGBBBGGBBGGBBBGGBGBGGBGGGBGGBGGGBGGGGBBBB", "GGGBBBBBBBBBGGBBBGGGBGGBBGBGGBBGGBGGGGG", "BBGGGGBBGBBBBGBBGGBGGGBBBGGGGGBGGGGBBG", "BGGGGBGBGBGBBBGGGBBGGBBGGBG", "GGGBBGBBGGGBBGBGG", "GBBGGGGGBGGBGGGBBBGGGBBG", "BBBBBBBBBGGGGGGBGGGBBGBBBBBGGGBBGBGBGBGGBBBBGB", "BGBGBGGGGGBGGBGGG", "G"};
    int R = 46;
    int W = 33;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 617;
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<string> predictions = {"BBBGGBBBGBGGBBBBGBGGGGGGGGGGGGBGBBBGGBGGBBGGGG", "BBBGBGBGGGGGGBBBBGBBBBGGGGGBBGBGGBGGGB", "GGGBBGGGGBGGGGGGBGBBGBBBGBBBBBBGGGGBGBGBBGGBGBB", "BGGGBGB"};
    int R = 22;
    int W = 13;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 138;
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<string> predictions = {"GBBGGGGBBB", "GGBGBBBGGBBB", "GGGBGGBBBGBBGGGBGGBGBGGBGGGGBGGBBGGBGBGG", "BGGB", "BGGGGGGGGBBGBGBBGGGGGBBGGBGGGBGGBGGBGGGBG", "GGGGGGGGBGBBBGBBGBGGBBBGGGBGBGBGGBBBB", "BBBBBGBBBGBBG", "GGGGGBGBBGGBBBBGGBGGGBGBBBGGGGGGGGGBBBGG", "BGGBBBBBBBBGGGBGBGGGBGGBBBGGG", "BGGGGGBGBGBBBGGG", "BBBGBBGBGBBBGGGBBGGBGGG", "GGGGGBGBBBGBGGGB", "BBBGGGBBBGBBBBBBBGGGBGGGB", "BBBBBBBGBGBGGBBBBGGGBGBGGBGGGBBGBBGBBGBBG", "GG", "GGBBGGBGBBGBGBBGBGGG", "GGGBGBBGBGBGGGGGGGBB", "BBGGGBBBGBBBBGGBBBGGGGGGBGBGGGBGGGBGBGBBBGGGGBGGBB", "BGGGGGGGBBBGBBBGGGBBBG", "BBBBGGBGGBGGBGGGBGGBGGG", "GGGGGGBBBBGBBGBBBBBBGGGGBGBGBGBBBGBBBBGGBBGGGB", "BGGBBGGBBGGGGGGBBBBGBBGGBBGBBGGGGGG", "GGBGGGGBBBBBBBGBGGBBBBBGBGGGGBBBGGG", "BBBGBBGBBGBGGBBGGGBBGBGGGGGBGGBGBGBBBGGGGBBBBBBBGG", "GGGGGBBGBBGBGG", "GGBGGGBBBGBGGBBBBGGGBBBGB", "GGBGBBBGBGBBBBBGBGGGG", "GGGBGBBBGBBGGBGGBGGGG", "GBBBBBBBGBGBGGBBGGGGGGBGGBGBGBBGBGGGBGBGB", "GBBBBGGGBGGGGGBBGBBBGGGGGBG"};
    int R = 17;
    int W = 28;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 799;
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<string> predictions = {"BGBBGGGGGG", "GBBGBBBGGGBBGBBGGBGGBGGBBBGGGGBGBBBBBB", "BGBGGBGGBBGBBBBBGGGB", "GBGBBBGGGBBBGB", "BBBBBBBGGGBBBGGGBGBBGBBGGBBBGBBGBBBBBBGGBBGB", "BBGGGGGGBBGBGGBGBBBBBBBGBBBBBBB", "GGBBGGBBBGGBGBBBBGBGBBGGGBGGBGGGGBGGBBG", "BGBGGBGGBGBBGGGBGBGGGBGGBB", "GB", "BGBGGBGBGGGGBGGGGGGGBGGGGGBBBGGGGGBBBBBBG"};
    int R = 23;
    int W = 49;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 265;
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<string> predictions = {"G", "GGGGBBGGBGGBGGBBBGBBBGGBG", "GBBGGGBG", "BBGGGGGBGBBB", "BBGG", "BGGGBBBGBG", "GGBGGGBGBBG"};
    int R = 32;
    int W = 13;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 71;
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<string> predictions = {"BGGBGBBBGGBGGBGBGGBGBGGBBBBBBBBGGB", "BGGBGGBBBBGBBBGGBGGGGGG", "BBGGGBBGGGG", "GBBGGGGGGBGGGGBBGBBGGGGGGGBBBBGGGBBB", "GGGBBBGGBBBGBGBBGBBBGGGBBBGBGBGGG", "GGGBBGBGGBGBGGBBBGGBGBBGGBGGGBBGG", "BGGGBBBBBGBBGBGBGGGGGGBGGGGBBBBBBBGGGGGBGBBG", "GGGGBGGGBGBBBGGBBGGBBGGBBGGGBBGBGB", "BBBBBGBBGGGGBGBBBGBGBGBGGBGBBBGGBBGGGGBB", "GGBGGGGGBBGBGBBGG", "GGGGGB", "GBGBGBBGBGGBGBGGGBBGGBGGBBBGBBBBGGGGGGG", "BBBGGBBGBGGBGBGB", "GBBBGBBGBGBGBBGBGBGBBB", "BGBGGBBGGBBGGGBGGBGGGGGGGBGBBGGGBGBG", "BBGBBGGGGBBBBGGBGGGGGGBBBGBBBGBB", "GGGGBBGGBGBGGBBBGB", "BBBGGGGBGBBGBBBGGGBGGGGGBGGGGBBBBBGGGBGGGGGGBB", "BBGGBBBGGGGBGGBGBBBBGBGBGGGBBG", "GBBBBGBBBGBBGBBBGBBG", "GBGBBGGBBBGBBGGGGBGGBB", "GGBBBBBGBGBBGGGBBGGGGGGGBBBGG", "GGBGGBGGGG", "BB", "GGGGBBBBBBGBGBGGGGGBBGGGBGBGGGGBBBGGBGGGGG", "BBGGGGBGGG", "GBGGGGGGBBGGGBBGBBGBBBBGBBBB", "BBGGBBGBGGB", "GGGGGGGBBBGBGBGGGBBGBBBBBBGGGBBGGBGB", "BBGBGBBBB"};
    int R = 2;
    int W = 11;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 701;
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<string> predictions = {"B", "BBBGBGGBGBGGGGBBBGG", "BBGGGGGBBGBBBGGGBGBGGGGBGBGBBGGBBGBGBB", "BBGGGGBBBGGGGGGGBGBBGGBBGBGB", "GBBBBBGGGGBGBBBGGBBGGGGBGBGBBBBBBGBGBBGBBGBBGGBGB", "GBGGGGBGGGGBGBGBBBGBBBBGBBGGGBBGGBB", "GBBBBGBBBGGGGBBBBGGBBBBGBGBGBGGBGBBBGGGBGBGBGGB", "GBBBGGGBGGBBBBBBGGGGBBBGBGBGGBB", "BGBBGBBBGBGGBGBBGGGBBGGGGGBBGGGGGBBBGGBGBGGB", "BBBGBBGBBBBBGGBBBGBGBGGGGBG", "BBG", "GGGGGBGBBBGBGBBGBBBBGGGGBBBBBGGBGGBG", "GGGGBGBGBBGGBBBGBGGGBBGBBGBGGGGBBBBBBBG", "GBG", "GBBGGBGGBBBGGGBGBBGGGGBBBGGBBBGGBGBBGGBGGBGBG", "GBBGGGBBBBBBBGBBBBBBGGGBGBGGGBBGGGBBG", "BGGBBGGBGGGBGGBGGGBBGBBGBBGGGBGBBBBGB", "GGGBBBBGGGBGBBG", "BGBBBGBGBBBBBGBBGBGBGGB", "BGBBBBGBGBBBGGBBBGGBBBBGBB", "BBGGGGBGGBGGBBGBGGGGBBGBBGBGBGGGBBGBBGBGBBBB", "GBGGGGGGBBBGGGBGGBGBGGBBBGGBGGGBG", "BBGBGGBBBBBBBBBBGGGGGGGGGGGGBBGBBB", "BGBGGBGGGGBBGBBGBGBBBBBBGBBBBBGGB", "GBBBGBGBGBBBBGBBGGGBBGBBGGGBBGGGGBGBGGGBBGBBGGBBB", "GBBGGBBGBGBBBBBGBGBBBGGBBBGBGGBBGGBGBB", "BG", "GGGGGBBGGGBBBGBBGBBGBBBG", "GGGBGBBGGBGBGGGBGBGGB"};
    int R = 44;
    int W = 25;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 861;
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<string> predictions = {"BBBBBBGBBGBBGGG", "GGGGBGGBBBGGGBGGBGBBGBBGGBBBGBGBBBGBBBGGBBG", "GBBGBGGBBBGGBGGBBGGBGGBBGGBB"};
    int R = 24;
    int W = 24;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 86;
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<string> predictions = {"BGBBGBGGBGGBGGBBBBBGGBBBBBGGGBGBGGGGG", "GGGGBBBBBB", "GGBBBBBBBBGGBBGBBBBGGBGGBGBBBBGBBGGGBBBGGGBGBBG", "BBBGBGGBBBGBBBGBBGGBBBBGGBBGGBGBBBGBBGBGBBGBB", "BBGBBGGGGGG", "BBGGBGGGBGGGGBGGGGGGGGBBGGGGBGGGGBBG", "GGGBGGBBBBGGGGBGGGBGBGGBBGGGBBGGBBGGGBBBGBGGGGBGBB", "GBGBBGGBBBGBGGBGGGBGBBGGBGBBBBGBGGBBBGBGBG", "BBBGG", "BGBGGGBBBBBBGBBGBBGGBGBBGGGBBBBBBB", "BGGBGBGBBGBGBBBGBBBBGBBGBBGBGGBBB", "BBGGBBGGBBBGBGGGGGGGGGG", "GBBBBGGGBGGGGG", "BBBBBBGGGBGBGBBGBGGGGGGBBGBBBBGBBGGGGB", "BBGBGBBGGGBBGBGBBGBBGBGGG", "BGGBBGB", "GGGGGG", "BBGGGGGGGGBBBGBGGGBBGGBGBBGBGBGGBBBGGG", "GGGGBGGGBGBBGGBGGGBGGGGBGBGBGGGBBBBGGB", "GBBBGGBGBBBBBBBBGBGG", "BGBBBGGB", "BB", "GGB", "GGBBBGBBBBBBGBGBBBBGBBBGGBBBGGBBGG", "GGGGBGGGGBGGGBGGGBBBBGGBGGBGGGGBBGGGGGGGGGGG", "GBBBBBBBGGBBBGBBGGBGGGBGGBBBGBBBBGBGGBGGBGGBGBBGB"};
    int R = 33;
    int W = 47;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 699;
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<string> predictions = {"GBBBBBBBBBBBGGGGGGGGBGBBGBGBGBBBBGGGGGBBBBBBGGGGB", "GBGGBGBBBGGBBGBGGGBGGGGGGBGBGGGBBGBGGBBBBG", "GGGGGB", "BGBBBBBGBGBBBBGGBBGBGGBBBBGBBBBGGGGBBBBBBGG", "GBGGBGGGGBGGGBGBGBGGGBBGBGGG", "BGBBBBGBBGGBBGGGGBBGGBGGGGBGGGGGBGGGGGBBBGG", "GGBBGBGGGBBBGBBBGBGGGBBBGB", "BBBBGGGGBGGGGGBGBBBBBGGBBG", "GG", "GGBGBBGG", "BBGBGBBBBGBGGGBBGGBBGGBGGBGGBGGGBGGBGGGBBGBBGBBGB", "BGGBGGGB", "BBBBBGGGBGGGBBBBB", "BBBBGBGBBGBBBG", "GBBGBGGGBGGGBBBBBBGGGBGBBBGBGGBBBBBBBB", "BBBGBGGGBGBBBGGGBBGGBBGGGBBBBGGBBGBGBBGGBBBBBBBBB", "GGGBGGBGBBBBGBBGGGGGBGBGGBBGGGGGGBBGGGGGGBBG", "BBBGBGGBBBGGGGGBGBGGGBGB", "GGBGBBBBGGBGGGBGBGGB"};
    int R = 18;
    int W = 28;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 536;
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<string> predictions = {"BGBGBGGBGGGBBGGGGBGBBBBGGGBBGGGBGGBBGBGGG", "GBGBBBGGGBBBBGGBGGBGBGBGGBGGGGGGBBBBGG", "BGBB", "BBGBBGBBBBBBBBBBGBBBGBBBGGBBGBBGBBBBBGGBBB", "GGGGGBGGGBGGBGBBGGGBGBBBBGGGBBBGBGGBBGBGGGGBB", "BBBGBGGGGGGBBBGGGGGGBGBBBGBGG", "GBGGBGGGBBBGGGGGBBBBBGBGGGBBGBGBGGBBGGBGBBBBBGGGGB", "GBGGGGGBGGGGGG", "BBBGGGGBGBGGGBGGBGGGBBBGBBBGBBBGGGB", "BBGBGGGGBBBBBBBBBGBBBB", "BGBBBBGGGGBBGGGBGGBBBGGBBBBGBBBGBBBG", "GBBGBGBBBGGBBBBBGBBBGBBGBBGBBBBGBBBBGGGBBBBBGBG", "BGGGBGGBGGBBBBBGBBGGGGGGGGGBBBBGGBBBGG", "BGBBGG", "GBGGGBBBBBGBGGBBGBGBBGGBGGBBGG", "GGBGGGGGBGBBGBBGGGGGBGGGBGBBBBGGGBBBBGGGBBBBBBBBGG", "BGBGGGBBGBBBG", "BBBGBBG", "GGGGBGBGGGBBGGBBBGBBBBBBGBGGBGGBBGBGBGG", "BBGBBGBBGGGGBBBBGBGBGBBGGGBGBBBBGGGGGGBBG", "BBBGBGGBBGBGGBBGGGGGGBBBBBBBBBG", "BBBBGBGBGBGGBGB", "GGGGBGBBBBGBGBGGBBB", "BBGGGGGGBGB", "GGGBBBBGBBBGBGGGBBGGGGGBBBGGGBGGBGBGGG", "BBB", "GBBGBBB", "GBGBBGBGGBBGGGBGBBBBBGBBBGGGGBGBBGBBGGBBBB", "GGBGBBGGGBBGBBGBBBGGGGBBGBGBGGBBGGGGBBGBBBBBBG", "GBBGBBGGBGGBGBGGBGGBGGBBBBBGBGGGBBBBBGBGGGGGB", "BBGBBGGBBBBBBBBBBGBGGGGBBBGGG", "BGBGGBGGBGBGBGBGBBGG"};
    int R = 17;
    int W = 45;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 933;
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<string> predictions = {"BBGBGBGBBGGBBGBBGGGGBGB", "BGBGGBGGGBBGGGBGBBGGGBBGGBGGBBBBBGBB", "GGBGBGBBBGBBGBGBBGGBGGGGBGBBBGBGGGBBGBGBGBBGBB", "BBBBBGGGBGBGG", "GBBGBBBBGGGBGBBBBGGBGGGBGBGBGGGB", "BGGBG", "GBGBBBGGGGGGBGGBGBBGBBBBGBBGBGGBGGGGBGBGGBBBGGBGB", "GBGGBBGGBGBGBBGBBGBGG", "GGGGGGGGGBBBGGGGBBBBBBBGGGGG", "BGBBBGBBBBBGBGGBBGBGBBBGGBGBGBBB", "GGGGBGGGBGBBBBGBGGGG", "GBGGGBGBBGGBBGGBGGGGBGBBBBGBBGBGBG", "BBGBGBGBGGBBGBBB", "BGBBGBGBGBBB"};
    int R = 2;
    int W = 30;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 343;
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<string> predictions = {"BBGGGGGGBGBGBGBBBBGBBGGGGBBBBBGBGGGGGBGBGGGGBG", "GBGBGBGBGGBGBBBBGBBGGGBBGGBBGGBBBBBBBGBGBGBBG", "GGBGBBGBBBGBGBBGBGGBGBBBBGGBBBBGGBBGBGBGGGGGBG", "GGBBBGBBGGGGBBBBBGBGGBBGBBBGBBBGBBGBBBGGGBGBBBG", "GBBBGGGGBBGGGGGBBGGGBBGBBGBBGBBGBBGGGGBGGBBBGGGB", "GGBBGBGGGBBGGGGBBBBBGBBBBBGGBBBBBBGBBBGBBBBGGGBBG", "GBBGBBGBGBGGGBGGGGBBGBBBGBBGGBGBGBGGBGGBBBGGB", "BGBGBGBGGBGGGGGBBBGGBBGGBBBGGBBGGBGBBBGGGGGGBGGB", "BGBBBGBGGBGBGBGGBBGGGGGGGGBBBGGGGBBBBGBGBBGGG", "GGBGBGGGGBGGGGBBBBGBGBBGGBBGBGBBBBBBGBBGGGBBGGGGG", "BBBBBBBBGBGGBBGBGBBGGBGGBGBBGGBBGBGBBBBGGBBBG", "BBBBGBBBGGBBBGBGGBBBBBGBBBBGBGBGGGBBGBGGBGGBGGB", "GBGBGGBBBGBGBGBBBGGGGBGBGGBBGBGGBBBGGBBGGBGBB", "BBGGBBGBBBBBGGGGBGBGGGBBGBGBGBGGBGGGBBBGGGBBGB", "BBBBGBGGBGBGBGBGGGGGGGBBBGGBBGBBGBBGGGBBGGGGG", "GBGBGBBGBGBBBGGGGBBBGBGBGBBGGGBGGGGBGGBBGGBGBBG", "BGGGGGGBGGBGGGGBBBGGBGBGBBBBBBGBGBGGGGGBBGBGGBBG", "BGGBGGBBGGGGGBBGBBGBBBGBBBGBBBGGBBGBBBGGGGBGGGGG", "GGGBGBGGGBGBBBGBBBGBBBBGGGGBBBBBGGBBGGBGBGGGGBBBG", "BGGBGGBGGBGBGBBGGGBBBGGGGGGGGBBGGBBGBBBGGBGBGB", "GGBGGBBGGBGBBGBGGBGGGBBBBBBBBBBBGGBGGGGBGBGBGBBBG", "BGGBBBBGBGBBBBBGGBBGGGGGGBBBGBGBBBBGGGGBBGGBBBGG", "GBGGBGBBGBBGGBGGBGGBBGGGGGBGBGGGBGGBBBBGBBBBBBGB", "GGGBGBGBBBBGBGGGGBBBGGGGBGBGBBBBBGBGBBBBBGBBGGGBB", "GGBBGGBBGGBBBGBBGBGBBGGBBBGBBGGGGGBGBBGGBBBGGGB", "GGBGGBGBGBGBBBBBGBGGGGBBGBBGGBBBGBGGGGBBGBBBB", "GBBBGBGGGBBBGBGGBGBGBGBBGGGGBBGGBBGGGGGBBGBBG", "BGGBBBGBBBGGGGBGBBBBBGGBGBBBBGGBGBBBBBBGGGGGBBGGB", "GGBBGBGGBBBGGBGGBBGBGGGGGGBGBGGBBBGGBGGGBBGGBGBG", "BBGBBGGBBBBBBBBBGGBBBGBBBBBBBBBBBGGBBBBGGBBGGGBG", "GGGGBGGBBBGGBGBGGGGBGBBBBGBGGGBBBGGGBGGGBBGBBBG", "BBBBBGBBBBBGBBBBBGGBBGGGBBBBBBGGGBBGBBGBBBGGBBBGG", "GBGBGBBBGBBBBGBGBGBGGBBGGGGBBGGBBBBGGBGBGGBBBBBG", "GBBGBBBGGGBBGBBGGBBBGGBGGBBBGBBBGGGBBBBBBBBBB", "GGGBBBBGBGGGBBGBBBBBGBGGGGBBGBBBGBBBBBBGGGBBGG", "BGGBBBGGBGGBBGBBBBBGGGGGBBGBBGBGGBBBGGGBBBBBGBGBG", "BGGBGBBBGBGGGGBGGBBGBBGGBGGGBGGBBGGGGGBBBBGGBGG", "GBGBGGGBBBGGBBGGBGBGBGGGGGBGBBGBBBGGGGGGGGBBB", "BGBGGGBBBBBGGGGBBGGGBGBBBGBGBGBGGGBGGBBGGGGGGB", "BBGGBBGGBGBGGBGGBGGBGGGBGBBBGBGGBGBGBBBBBBGGBB", "GGBBGGGGGGGBBBBBGBBBGBGGBBGBBGGGBGGBBGBBBBBBBB", "BGGBBGBGGGBGGBGGGBBGBBGGGBBGGBGGBGBGGBBGGGGGBBGG", "BGGBGBBBBGGGGGGBBGGGGGBGBGBBGGBGBGBGBGBBBBBBB", "BBGGGBBGGBBGBBGBBBGBBGGBBBBBGBGGBBGGGGGGGGGBB", "GBBGGBGBBGGBBGGGBGBBBBBGBBGBBBGGGGGGBGGGGBBGGBGGB", "BBBGGBBBBGBGBGBGGGGGGBBBGBGBGBGBBBGGGBGGGBGGGBGG", "BBGGGBBGBBBBBGBBGBBGGGGGBGBGGBGGGGGBGBGBGBBGB", "GGGGGGBBBGBBGBGBGGGBBGBGGBBGGGGGBGBGGGGBBBBBGG"};
    int R = 21;
    int W = 44;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2250;
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<string> predictions = {"BGBBGBGBBBGBBGBGGGGGGBGBBBBBGBGGBBGBGGGGGBBGG", "GBBBBGGBBBBGGGBBBBGBBBBBBGGGBGBBBBGBBGGBGBGGGGGG", "BBBGGGBBGGGBGGBBBBBGGGGBBBBBBGBGGGGGBGBGBBGGGG", "GBGBBGGBGGGBBGBGGGGBGBGGGGGGGBGGBBGGBBBBBGGBGB", "GGGBGGGGGGBGGGBGBGBBGBGBGGBGBBBGGBBBBBGBBGGGB", "GBGGGGGGBGGGGGBGGBBGGBBBGBBBBGBBBBBBBGGGGBBGBGBG", "GGGBBBBGBGGGBGBBGBGGBBGGBBBGGGGBBGGBGGGGBBGBGGGB", "GGGBGGBGGBBBBBGGGBGGBBGGBGGGBBGBGBGBGGBBGBBGBGGG", "BBBBBBGGBBGBGBBBGGBGGGBGBGGBGGBBGGBGBGGGGBBGBG", "GGBBBBGBGGGBBBBGBGGBBGBBBBGGBBGGBBBBGBBGBBBGBB", "BGGBGBBGBGBBBBGGBGGGBBGBBBGGBGGBBBGGBBGBGGBBG", "GBGGGGGBBBBBBGBGGGBBGBBGGBBBBGBGGBBGGGBGGBGGB", "GGGBGBBGBGGBBGBGGBBBGBGGGBGGBGBGBGBGBGGBBGGBBGGG", "GGGBBBGGGGGBBBBBGBBBBBBBBBGBGGBGBBBBGBGGBGBBGGG", "BGGGBBGGBGGBGGGBBGBGBGBBBBBGBBGGGGBBBGGBBGGGBGBGB", "BBBGBGGBGGGGGGGGGBGGBGBGBBGGBBBGGGGGGGBGBBBGBBGB", "BBBBBBGGGGGBBGBGBBBGGBBGGBGGBBBGBBGBGBGBBBBBB", "GBGBBGBBGGBBBGBGBGBGBBGBBGGBBGGBBBBBGBGBGBGGBGBGG", "BGBGGBGBBBBBGGBBBGBGBGGBBBBGBBGGBBBGGBGGGBGBGGGG", "GBBGGBBBBBBBBBBGBGBGBGBBBBBBGGGGGGGGGBGBBBBBBGG", "BGBBGBBGBBGBGBBBBGGGBGBGBBGGGGBGBGBBGGGGGBBBGGG", "GBGBBBBBBBGGBBGBBBGGBBGGGBGGGGBGGBBBGBBBBGBBBBG", "GGBBGBGBGBBBGBGBGBGGGGBGBGGBBBGBGBBGBBGBGGBBGGBB", "BBBBBGGGBBBGBBGBGGBGGBGGBBBBBGGGBBGGGBBGBGBBBBBG", "BGGGGBGBBBGBBGGBBGBBBBGGGGGGBBGBBGGBGBGGGGGBGBBG", "BGGBBGGGBBBGBBBGBBGBGGGGGGBBGBGGGGBGGGGGBBGBB", "BBBBBBGBBBGBGBBGBBGBBBGBBGGGGGBGGGBBBGGBBGBBG", "GBGGGGGBGBGGGBBBBGGBGGBGGBBBBBGGBBBGBBGBGBBBBB", "BBBGBBGGGBGGGBBGGBBGGGBGBGGGBGGBBBGBBBGBBBBBGG", "GBBGBBGBBGBBGGGGBGGGGGGBGGGBGGGBGBBBBBGBGGBBBG", "BGGGGBGGBBGGGBGGGBGBGBBBBGBGBBGBBBBGGBGBBBGGBGBG", "BGBGGBBGBGGBGGBBGGGGBBBGGGBBGGGGBGGBBGGGBBGBGBBBG", "GBGGGGGBBGBBGGGBGGBGGBBBGGBBBBBBGGGBGGBGGBGBGBGGG", "BGGBBGGBGBGGBBGBGBBGGGGGGGGGBBBBBGGBGBGGBGGGBGGGG", "GGGGGBBBGBBGGGGBGBGBBBGGBGBBGGGGGGBGGBBBGGGBBBGG", "GGGBBBBGGGGGBGBBGBBGGBBGGBGBBGGGGGGGGBBGBBBBGBBGB", "BGBGBBGGBBGBGGBBBGBGBBBGGGGGBGBBGGGGBGGGGBGGGGG", "GGGGGGBGBBBBGGBGBGBGGBGGBGGBGBGGGBGBGBGGGBBBBGBG", "BGBGBGGBGBBGGGBBBBBGBBGGBBGBGBBBGGGGBGBGGBGBGB", "BBBGBBBGBBGGBBBBBBGGBBBGBGBBBGBGBBBBGBBBGBGBBBB", "GBGBGBBGBBGGGGGBBGGBGGBBBBGGGGGGGBBBGBBGBGGBGGG", "GBGGGBGGBGGBGBGBGGGGGBBBGBGBGBGGBGBBBGGGGGGBB", "BBBBGBGBGBBGGBGBBGGBGBGGBGGGGBBBGBBBGGGGGGBBGGGGG", "BGBGBGBBBGBBGGGGGGBGGBBBGBBGBGGGBBBGGGGGBBBBBB", "GGBGGBGBBGBBBGBBGGGBGBBGGGGGBGGBGGBGBBBGBBGGBBB"};
    int R = 8;
    int W = 25;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2112;
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<string> predictions = {"BBBBBBBGGBGGGGGGGGGGGBBBGGBGGBBGBBGGGGBBGBBGGBGG", "GGBGBGBBGGBBBBGBGBGBBGBGBGGGBGGGBGGBBBBBBBGGGB", "GGGGBBBGBBGGBGBBBGBGGBGGGGBGBGBGGGBGGGBBBGGGGB", "GGBBBGBBBBGBBGGGBBGBBBGBBBBBBBBBBBBBBBGGGBGBBGGB", "GBBBBBGGBGGBGBGBBBGBGBBBBGBBBBBBBGGBBBGBBBBBBBBGG", "GBGBBBBGGBGGBGGGGGBGGGBGGGBGGGBGBBGGBBGGBBBGB", "GGBBGBBBGBBGGGGGBBBGBGGGBBBBBGBGBBGBGGGGBGBGBBBBG", "GBBBGGBGBBBGGGGGBGGGBGGGBBGBBGBBBGGBBGGGGBGBGGBGB", "BGBBBGGGBGGBGGBGGBGBBGBBBGGGGBGBBGGGBGBBGBGBG", "BGGBBBBBBBBGBGGBBBBGBGGGGGBBGGGBGGBBBGBGGGGGGB", "GGBGBBGBBBGBGGBBBBGGGBBBBGBBBBBGBBGGGGBGGBBGBGBG", "BGGGBBBBBGBGGBBBGBBBGGGGGBGBGBBGGGGGBGGGGGGGBGGB", "BGBBGGBBBGBGGGBBGBBGGBBGGGGBBGBBBBGGGBBBGBBGBBBB", "BGBGGGBBBBBBBGGBGBBGBBBGBGGGBBGBBGBGGBBGGBBBBGG", "GGGGGBGGGBGGBBBGGBBGBGBBBGGGGGGGBGGBGGGBGGBBGGGGG", "BGGBGBGGGGGGBBGGGBGBBBGBGBBGGBBGGGBBGGGBBGBBGB", "GGGBGBGBGGGBGGGBBBBBGGBBGGGGBBGBGGBBBGBBBGBGBBBBB", "BGGGBBGGBGGBBGGBGBGGBBGGBGBGBBBBBBGGBBBBGBBBGB", "BGGBBBBGBBGGBGGGGBBBGBBGGGBGGBBBGBBBGGBGGBBGGB", "BBBGGBGGGBGBGGGBGGBBGGBGBGBBGGBGGBGGGGBBGBGBG", "GBBGGBBGBGBGGBGGGGGGGGBBGGBBBBBBGGBGBGBGGGBBGBGG", "BBBGBGGBGBGBBBBGBGBBGGBBGGGGBBGBBBGGGGGBGGBBBGBGB", "GGBBBBBBGGGGBBGBGGBGGGBGGGGBGGGBGGGBGBGBGBGBBGBBG", "GBBGBBBGGGGGGBGGGBGBGGBBBGGGGBGBBGGBBBBGBGBBBBG", "GGBGBGBGBGGBGGGBBBBBGGGGGGGGBBBGBBGGBGGGBBBBGGGBG", "BGGGBBBGGBBGBBBGGBGBGGBGGBGGBBBGBGBBGGGBGGBGBBGG", "BBGGBBBBGGBGGBGBGGBGGBGBBGBGGGGBBGBGBGGBBBBGBBB", "BBBBBGBBBBBGBBGBBBGGBBBGBBGGBBGGBBBBGGGGGGBGBGGBG", "BBBBGBGGBGBBBGBGGGGBGGGGBGBGBBBGBBGGBBGGGGGBBB", "BBGBBBGBGGBBBBBGBGBBBGGGGBBGBBGGGGGBGBGGGGGBBGB", "GGGGBGGGGGBBBGBBGBBBGGGBBBGGGBBGGGGBGGGGBBGBBG", "BBBBGGGGBBBGBGBGGGBBGGBBBGGGGGGGBBGGBBBBGGGBBGGGB", "GBGBBBBGGGBGGBBBGBGGBGGGGBGGBGBBGBBBGBGBBBGGBG", "BBGGBBGBGGGBBGBGBGGBBBGGBGGGGGGGGGGBBGBBGBBGGBGG", "GBBBBBGGGBBBBBBBGGBGGBBGGBGGBBBBBBBBBBBBBBGGBBBG", "GGBGBGBBBGBGBGBBBBGGGGBBGBBGGBBGBGBBGBGGGGGBG", "GBBGBBGBGGGBGBGGBBGBBGGBBBBBGBBGGGBGGBGBGGBBG", "GGGGBGGBBGGBGBBGGBBBGBGGGBGGBGGGGBGBGGBGBBBBBGGG", "BBGGGBGBGGBBBBBBGGBBGBGBBGBBGGBGBGGGBGGBBBBBGBGB", "GGBGBBGBBBBGBBGGBGGBBGBGGGBBBBBBBGGGGBGGBGBGG", "GBGBBGBGGGBGBBGGGGGGGGBBBBGGGBBGGGBGGBGGGGBGGBGGB", "BBGGGGGBGGGBGBBBBGGBBGGBBBGGBGBBGGGGGGGGGGGGB", "BBGBBGBGBBGGGBGBGGGGBGGBGBBBGGBGBBBBBGBGGBBGG", "GBBGGBBBGBGBGGGBGGGBBBBBBBGGGGGBBBGGBBGGBGBBG", "BGGGGBGGGBGBGGBGBBBGBBBGBBBGGBBBGBGBGGBGBGBGBGB", "BBBGGBGGGBGGGBBBGGGGGBGBBGGGGGBBGGGBBGBGBBBGB"};
    int R = 46;
    int W = 18;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2166;
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<string> predictions = {"BBBBGBGGGBGBBGGBBBBBGBGGGBGBGGBBBBBBBGBBBGGBGBGG", "GBBBGBBBBBGGGBBBGGGBGBBGGBBBGGGBGBBBGGGGBBBBBBBG", "GGGGBBGGGGBBGBBBBBGBGBGBGBBBGBBGBGBGGBBBGGBBBGBB", "GGBGBBGGBBGGBBBBGGGGBGBBGBGBGBGBGBGBBGBGGBGBGBB", "BGGGBGBGGBBGBGGGBGBBBGBGBGBGGGGBBGGGBGBGGBGGGGB", "GGGGBBBBGBGGGBBBGBGGGBBBBGGBBBGGGGBBGBGGGBBGG", "GBGGBGGGBGGGBBGBBGBBGBBGBGBBGGBBBBBGBBGGGGBGGB", "GGGGBBBGBGBBGBGGBGBGBGBGBBGBBBBGBGBGBBGGGBGBGBGB", "BGGGGBBBGBBBGBBBBGGGBBBBBGGBGGBGBGGBBGGBGGBBBGG", "BBBGBGBGBBBGGBGGBBGBGGGGGGBGGGGBBBBBBGBGBBBBBBG", "BGGBBGGGGBBGGBBGGBGBBGBBBGGBGBGBBGBBGBGGBGGBGGGGG", "GBGGBBBGGBGBGGGGBGGGGBBBGGBBBBGBBGBBBBGGGGBBG", "BBBBGGBBGBBBGBGGBBGBBBGGGBGGBBGGGBGGBGBGBGGGGBG", "BBGGGBBBGBGBGGBBGGGBBGGGBBGGGGBBGGBGBBBBBGGGB", "GGBGBGGGGBGGBGGBGBBGGGBBBGBGBGGBBGGBGBBGBGBGGB", "BGGBGGGBGGGBBGBGBGBGGBBGGBBBGGGGGBGBBGBGGGBGBBBG", "BBGBGBBBBGBGGBGGBGGBBGGGBGBBBGGGBBBBGGBBGBGBBBGGG", "GBBGGBBBGGBGBGGGBGGBGBBGBBGBGBGBGGBBBGBBBGGBBG", "GGGGGGBGBBGBGBBGBBBGBBGGGGBBGGBGGGGGBGGGGBGGGG", "BBBBGGGGBGBGBBBGBBGBBGGGBBGBBBBBGGBBGBBBGGBBBB", "GGGGBGGGGBBBBGGBBGBGBGBBBGBBBBBBGGGGBGGGGBGGG", "BBGGBBGBGGBBBBGBBBGGBGBGBGBBBGBGGBBBBGGBBBGGBB", "BBGGBGBBBBGBGBGGGGGBGGBBGGBGBGBGBGGGBBGGBGGGBB", "BBBBBBGGGBBBBGBBGBGGBBGGBBBBBGBGBBBGBGBBBBGBG", "GBBBGBGBGGBBGGGGGGBGGGBGBBGBBGBGGGGGGGBBBBGGBGGG", "BGBGGBGBBBBBBGBGGGBBBBGBBBBBBBBGGGBGGBGBBGBGBGBBG", "BBBGGBGGBGBBBBGGGBGGGBGGGBGGBBBGGGBBBGGGGGBGG", "BBBBBGGBGGBGGBGGBBBGBBGBBBBBBBGBBBBGBGGBGGGBGBBG", "GGGGBGGBGBBBBGGBBGBGBGGBGGGGGBBBBGBBGBBBBGBGBGGB", "BGBBBBBGGBBGGBBBBBBBGBGBGBGBGGGBBGBGGGGBBBGBGG", "GGGGBGGBBGGGGGBBBBBGBBGGBBBBBBGBBGGGGBBGGBGBB", "BBBGGBBBGGBBBBGBGBGGGGGGGGBGBBGGBGBBGBGBGGGBBG", "BBBBGBBBGBGBBGBBBBBGGBBGBGGBGBBGBBGGBBGBGGBBBG", "GBBBGGBGGBBGBBBBBGBBGBBBGGBBGGGBGGGGGGBGGBBGB", "BGGGGBGBBBBGBGGGBGGBBBBGBBBBGBBBBBBGGBBGGGGGB", "GGBBBGBBGBBBBGGBGGBBBBBBGBBBGGBBBGBBBGBGGGGBBB", "GGBGGGBBBBGGGGGGBGGBGGGGGGBBGBGBGBGBGGBBBGGBGGBGG", "GBGGBBBGGGBGBBGGGGGGBBGGGBGBGGBBBGBGBGBGGBBBGBG", "GGBBGGBGBBBGBBGBBBGGBGBGGGBBGGBGBGGBGGBGBBGGBGB", "BBBBBGGGBBGBBGBGGGBGGBGGGBBBBBGBBBBBBGBGGBBBBGBB", "GGGBGGGGBBBBGGBBBGBGGBBGGGGBBBBGGGBGGBBGGGBBGBBBB", "BGBGGGBGBGGBGBGBBGGGBBGGGGGGBGBBGBGGBGBBBBBBGGB", "BBBGGBGGBGGBGGBBGBGGBGGGBGBGBGBBBGBGGBBBGBBGBGGBG", "BBBBBBGBGGBBBBBGBBGGGBGBBBBGBBGGGGBBBGGBBGGBGGG", "GGGBGGGGGBGBGBBGBBGBBBBBGGBBGGBGGGGGGBGBBBBBBGB", "BGGGGBBBBGBGBGGBBGGBGBBBBBBGGBBBBGGBBGGGBGBGGGBGB", "BBBBBBBBBGBGBBBBGGGGGBGBGGGBBBBGBBGBBGBGBBGGBGBB", "BBBBBGBGBGGGBBBGGBGBGGGBBBGGGGBBBGGBGBBBGBGBBBGB"};
    int R = 44;
    int W = 37;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2252;
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<string> predictions = {"BBBGGGBGBGBGBBGBBGGGBBBBGGBBBBBBGBBBBBBBGBGGGGGBB", "GBBGBBBBBBBGGBGGBGBBGGGBGGGBGGBGBBBGBBGBBGGGGG", "GBBGBBBBBBGGGGBBGBGGGBBBBBBGGBGBGGGBGBGGGBBBBBGB", "BGGGGGBGBBBBBGGBGBBBGBBBBGBBBGBGBBGGBGGBGBBBGBBGG", "BGBBBGGBGBGBGBBGGGBBBGBGBBGGBGBBBGBBGBBBBGBBB", "GGGGBGBBGBGBGGBBBGBGGBGGGGBGGBBBBBGGGGBBGBGBB", "GBBBGGGGBGGGBBGGGGGGBGBBGGBGGBGGBBGGBBBBBBBBBGGGG", "GGBBGBGGBBGGBBBBBBBBGGGGBBGBGGBBGGGBGBBBBBGGGG", "GGGGBGBGGGBGBGBBGGGGGBGGBGBGBBGBGGGBGGBBGBBBBBBB", "GGGBBBGBBGBGBBBGGGGGBGBGBGGGBGBBBBBGGBBBBGBGBB", "BBBBBBGBBBGGBGGGGGGGBBBGGGGGGGBGBBBGBGGBBBGGBBBBG", "BBGGBBGGBBBBGGGGGGBGBBBBBBGGGBGBBBBGBBGGBBBBGGBG", "GGGBBBBGGGGGBGGBBGGGGGGGGBGGGGGGGBGBBGGGGBBBBG", "GBGBGBGGGGBBBGGBBBBGBBBGBGGGBBGGGGGBBBGGGGBGBBGBG", "BGBGGGBGGBBGBBGGGBBGBGBGBBGBGGGBBGGBBBBGGBGBBBB", "GGBGBGBGBGBGBBGGGBGGBBBGBBGGBBBGGGGBGGBGGBGBBGBGB", "GBGBGGGGGBBBBBGBGGBBBGGBBBBBBBBBBGBBGGBGGBGGGB", "BGGGBGGBGBBBGBGBGGGGBBGBGGBBBBBBGGBGBGBGBGBGBBG", "BGBGGBBBBBBGGGBGBGGGGBGBBBGGBBBGBBGBBBBGBGBBG", "BGGGGBBBGGBBGBBGGGBBGBBGBBBGBGBBBBGBBBBBBBGGBBB", "GGGGGGBGGGBBBBBBGGBBGGGGBGBGBGBGBBBGGGBGGGBBGBGG", "GBGBBGGBBBGGGBGBGBGBBBGBBBGGGBBGBGGBGGBBBGGGGG", "GGBGGBGBGGBGGGBGGGBGGGBGBGGBGBGBGGGGGGGBBGGBBGBB", "BGGGBBGBGBBGGBGBGBBGGGBGBBGGGBBGBGBGGGGGBGGBGBBB", "BGGBGBBGGGBGGGGBBGGGGBBBBGBBGBBGBGBBGGBBGBGBBG", "GGBBGGGBGGBBGBBGBBBBGGBGGBBGBGBBBBBBGGGGBGBGBBGG", "BGGGGGGBGBGBGBBGBGGBGGBGGBBBGGGGBGBBBGGBBBBGG", "GBBBBBBGGGGGGGBBBGBBBBBGBGBBBBBBBGGGGBGGBGGGG", "GBBGGGBBBGBGGGBGGGGBGBBBGGBBBGBBGBBGBGBGGBGBBBBBB", "BGGBGBBGBBBBGBGBGGGGGGBBBGBGGGBGBBBBGBGGGGBGB", "GBBBGBGBGBGGBBBGGGGGBBGGBGBGBBBBGBGBBBBGGGGGGBGBB", "BBGGGGGGGGBBGBBGGGGGGBBBBGBBGBGBGBGGBBGBBGGBBBGGB", "GBGGGBGBGGGBGBGGBGBBGGGGBBGBGGGBGGGBGGGGBBBGG", "BGBBBGGBBGGBGGGBGBBBGGBGBBGBGGGGGBGGBBBBBGGGGGG", "GGGGGGBGBGGGBGBGGGGBGBBBBGBGBBGGBGGBGGGGBGGBGGGBB", "GGGBGBGGBGGBBGBGGGGBGGGBBGBGGGBGGBBBGBBBBGBBB", "BBGBBBBGGGBBBGBBGGGBGBBGGBGGGBGBGGBBBBBGGGBBGB", "BBGBGBGBGBGGBGGGBBBBBBGGGGGGGBGBBBGBGGGBBGGGGB", "GBGBGBGBBGBBGBBGBBBGBGBGGBBGBGBGGGGGGGBGGBGGBGGGG", "BBBGGGBBBGBGGGGGBBBBBBBBGGBGBGGGGBGGGGBGBBGBG", "BBBGBGBGGGBGBGGGBBGBGGGGGGGBGBGBBBGGGBBBBBGGBGBBB", "GGBGBGGGBGGGGBBBGGGGBGGGBBBBGBGGBGGGBBGBGGGBG", "GGGGBBBGBBBBBBGBBGGBBBBBGBGGGBBBBBGGGGBBBGBGBBBBG", "BGBGGGBBBBGBBBGBGGGGGBGGGGBGGGBGBGBGGBBGBBBGGG", "BBBGGBBBBBGGBGGGGGBGBBGGBBGBGGBGBBGGBGGBGGBGGBB"};
    int R = 2;
    int W = 38;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 1951;
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<string> predictions = {"GBBBGGGGBBBGBGGGBGBBGBGBGBGBBGBGBGBGGBGBGGBGGGBG", "GBGBGBBGBGGBBBGGBBBGGBGGGBBBBGBGGGBGGGGBGBGBGGBB", "BGBBBGBBGGBGGGBGGBGBBBGBGBGGGGGGBGGGBBBBGBBGB", "GBGGGBGGGBBGBGBGGGBGBGBGBBGGGBGGGGGGBGBBBBGBB", "BGBBBGGGGBGGGBBBBGGBBGGBGBBBBGBGBBGGBBGBGGGBGGG", "BGGBBBGBBBGGGBBGGBGBGGBGBBGGGGBGGGBGGGBBBBBGGGGBB", "GGBBBBGGGBBGGGGGBBBGBGGGBBBGBBGGBGBBGGGGGGGGBBGGB", "GGGBBGBGBBBBBGBBGBGGGBBGGBBGBBGGBBGBBBBBBGBBG", "BGGGGGBBBGBGBGGBGBGGBGBGBGBBGGBBBGGGBGBGGGBBGBB", "GGGGBGBBBBBGBGGBBGGBGGBGBBBBGGBBGGGGBBBGGBGGGGG", "GGBGBBGGGBBGGGBBGBGGBGGBBBBGGBBBGGBGGGBBGGBBB", "BGBBGGGGGBGBGBGGBBGGBBBBGBGGGBGGGGGGGGGGBGGGBGBG", "GBBGGGBBBGGBBGBBBGBGGGGBGGGGBBGGGBGGGBGBGGBBGGGGG", "BGGGGBBGBBGBGBBBBGBBGGGBBBGGGGBGBBBBGBGGGGGBBGBBB", "BGGGBBBGBBBBGGBGGGBGGGBGGBGBBBBBGBGBGBBGGGBBBBGBG", "BBBGGGBBGBGGGBGBGGBGGGGBGBBGGBGGBGGGBGBBGBBBBGB", "BBGGBGBBGGGGBGGGGGBGBGBBBGBGGGBBGBBBGBGGBGBGB", "GGBGGBBBGGBGGGGGGGBGBGGBBGBGGBBBGBGGBBBBGGBGGGGG", "BBGGBGGBBBGBGGBBBGGBBBGGGBBGBGBBGGGGBBBBBGBGBB", "GBGGBBGBBBGBGGBBGBBGBBGBBBGGBBBBGGBBGBBGGBGGBBGBG", "GBBGBGGGGGGGGBGBGGGBGGBBBBBBBBGBBGGGBGGGBGBGBGBB", "BGGGBBBBBBBGBBGBBBBGBGGBBBGBGGBBGBBBBBGGBGGGBB", "GGBGGBGBBBGBGGBGGGBGGBGGBBGGGBBGBGGBGGBGBGBGBBGBB", "BBBGGBGBGGGBGBGGBGBGGGGGGGGGBBGGBBBGBGBBBGBBG", "BGGBBGGGBBBBGGGBBGBBBBGGBGGBBBBGBGGBBBGGBBGBB", "GGBBGBBGBBGBBBBBBBBBBGGGBGBGBBGGBBBGBBBBGBGGGGBG", "GGGGBBGBBBBGGGGGGBBGBBBBBGGGBGBGBGBGBGBGBBBBGB", "GBBGGGGGGGGBBGBGBBBGBGGBBGGGBBBBBGBGBGGBGGBBB", "BBGBBBGBGGGGBBBGGBGBBGBBGGGBBBBGBBBGBGBBGBGGGBGG", "BBGGGGGGBGBGBBBGBGBGBGGBBGBBBBBBBBGBBBBBBGGBGGB", "BBBBGGBBBGBGGBBGGBGGBGGBGBBGBBBGBGBBBGGBGBGBB", "GGBBGBBGBGGGBBGBBBGBGBBBBGGBBGGBBGGBGGBGBGGBBGGG", "BBGBBBGGBGGGBGGGBBGGGGBBGGGBGGGGGBGBBGGGGGGGGBBG", "GGGGBGBBBBBBBBBGBBBGBGGGGBBBGGBBBBBBGGGGGGGBBGBBG", "GGBBBGBBBGGBBGGBBGGGGBGBBGGGBBGBBGBGBGBGBGGGB", "BGBGGGGGBBBBGBBGGGBGBGBBGBGBBGBBGBGGGBBBBBBBBBB", "GBBBBGBGGGBBBBBBGBGGGGBGGBBGBGBBBGGBGGGGBGGBGGG", "GBGGBGBBBGGGBGBBGGBGGBGGBBGBBBGBGBGGGBBGGGGBB", "BGGBBGGBGGGBGGBBGGBBBBGGBGGBGGGBGGBBBBGBGBBGBBBGG", "BBBBBGGBBGGGGGGGGGBGGGGBBBGGBGBBBBBBBBBGGBGGBG", "GGBGBBGBBBBGGGBBBGBGGGGBGBBGBGBBBBBGBGBBGGGGBBGB", "GGGBBBBBGBGBGBBBBBBBGGBGGGGGGBBGBBGBGBGBGGGGGBG", "BBGBGGBBGBGBGGGBGBBGGGGBBBBGBGBBGBBBBBBGBBBGBGB", "GGGGBBGBGGGBGGGBBGGBBBGGBGGGGBGBGGGBGGBGBGGBGGBG", "BGBBGBGBGGBBBGGBBGGBBBBBGGGBBGBGGBGBBBGGBGGBBBBGB", "BBGGBGBGBGGBBGGGBBBGGBGBBBGBBGBBGBBBBBGGGGBGBBBGB", "GBGBGGBBGGBGGGGBBBGBBBGBGBGBBGBBBGGGBGGGBBGGBGBBB", "BGBBGBGGBGGBBGBBGGGGGBBGBGBGBBBGBBBGGGBBGGGBBGG", "GBBGGBBBGBBBBGGBBBBGBGBGGBGGBGBGGBBGGGBGBBGBGBG"};
    int R = 13;
    int W = 7;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2306;
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<string> predictions = {"GBBBGGGBGGGBBBGBGBBBBBBBBGBGBBBBGBGBGGGBGBGBBGB", "BGGGGBGBBBGBGBGGBBBGBBGBBBBGBGBBGGGBGBBGGBBGGG", "BGGGGBBGGBBGBBGBBGBGGBBGBGGBBGGGBBBBBBGGGBGBBGBBG", "BGBBGBGGGBBBBGBGBBGBBBBGBBBGGGGBGGBBGBBGBGGBBBG", "BGBGGBBBGBBBBBBBBBGGGGBBBGBBGBGBBBBGBBBBBBGGBB", "GGBBBGGBBGBBBGGBGGBGGBBBGBGBBBGBBBBGBGBGGBGGGBB", "BGBGGBBGGGGBBGBBBGBGGGBBGBBGBBGGBGGBGBGBBBGBBGB", "BGBGBBGGBBBBBGGGBGGBBBBBBGGBBBBBGGGGBGBGGBBBGGG", "GBGBGBGGBBGGGBBGBGBGBGGGBGBBGBBGGGBBGBGBGBGGGBG", "BBBBGGBGBGGBBBGGGBGGBBBGGGGGBBGBBGGGGGGBBGGGBGBB", "BGGBGGBBGGBBGBGGBBBBGBGBGGGBBBBGBGGBGBBGBBGGG", "BGBBGBBGGBBBGGGBGGBBBBBBGBGGGBBBGGBBBBGBGBBGGGBG", "GGGBBGBBBGGGGBBBBBBGGGGGBBBBGBBGGBGBBGBBGBBBGBG", "BGBBGGBBBBGBBGGGBGBGGBGBGBGGGGBGBGGGBBBGGGBGGB", "GGBBGGBGBBBGBGGBBGBBGGGGGGGBGGBGBGBBGBGBBGGBBBGBG", "BBGBGBGBGBBGBGGBBGGGBGGGBBGBGBGBGBBBGBGBGBGGGGBGB", "BGBGGGBGBGGBGGBBBGGBGBBGBGGGBGBBBBBBGBBBBGBGBBBB", "BGBGBGGBBBBGGBGBBBBBBGBGGGGGBGGGGGGBBGBGGGGGBG", "BGGBGBGBGBBGBBGBGGGBBGGBGBGGGGBGGGBBGBGGBGGBBGB", "GBBBBGGGGBGBBGGBBGGBBGGGGGBGGBGGGGGBBGBGBBBGGB", "BBBGBGBGGGBBGBGBGBGGBGGGBBGBGGBBBGBBGGBGGGBGGBG", "GBBBBGGGGBBBGBBGBGGGBBGBGBGBBGBGGGGBGBGGBBGBGGBGG", "BBBBGGBGGGGGGBBBGBGGGBBGGBBGBBGBBGGGBGGGGGBBG", "BBBBGGGGGBBBGGGGBGGGBBGBGGGBBBGBGGBGGBGGBGBGB", "BBBGGGGGBBGGGGBBBGBBBBBGBBBBBBGGGGBBBGGBGBBGG", "BBBGBBGBBGGGBGBBGGBBBGGGBGGBBGGGBGGGGBGBBGGGBG", "BBBGGBBGGGBBGBBGGGBGGBBGGGBBBBGGBBGGBBGGBBBGG", "BBBBBGBBBBGGBBGBGBBGBGBBBGBBGBGBBGBGGGGGGGBBBBBG", "BGBGGGGBGBGBBGBGGBBBGGGBGGBBBBBBBBBBBGGBGGGBBGBG", "BGGGGBGBGGBBGGGGBBGBBBGGBGBGGBBBBGGGBGGGBBGBBGGG", "GGBBBGGGBGGBGGBGGGGBBBGBBBBBBBBGBBGGGBBGGBGGBBB", "BBBBGBBBGGGGGGGGBGBGBGGGGGBGGGBGGGBGBBGGGGBBGBGGB", "GGBGBGBBBBBGGGBBBBBGBGGBBGBGGBBBBBBBGBGGBBGGBGGB", "GGGGGGBBGGGBGBGGGBGGBBBGBBGGBGBGGGGGBGBGBGBGBG", "BGBBBBGBGGGGGBBGGBGBGGGBGGBBGGBBGGGBBBGBBBBGBB", "GGGBGBGBBBBBBBBBBBBBBBBBBGBGBGGGGBBGGGBBGGBGGBGG", "BBBGBBGGGGGBGBGBBGGGGGGBGBGGGGBGBGBGBGBBBGBGBGBGB", "BBGBGBGBGBGBGBGGBGGGBGGGGGBBBGBBBBBBGGGBGBGBGBBBG", "GGGGBBGBGBGGGBBBBGBGGGBBBGGBGGBBGBBBGBBGGBBBBB", "BBBBGGBGBBBGBGBGBBGBBGGBGGBGGGBBBGBGGGGBBGGGBB", "BBBBGGBGGBBGGGGGBGBGBGGBBBBGGBGBBGGBBBBBBGGBBB", "GBGGBGGBGGGBBBGBBBGGGGBGBGGBBBGGBGGBGBGBGBBGG", "GGBBBGGGGGGGBBGBGGGBBBBBGBGBGGGBBBGGGGGGBGGGBGBBB", "BGBGBGGBGGBBBBBBBGBBGGGBBBBBGGBGGBGGGGBBBGGBB", "BGGBBBGBGBBBGBGBBGBBBGBBBBGBBBGBBBBBGGGGBBBGGGBG", "BBGGGGGBBBGGBBGBGBGGGGGGGGGBBGGBBGGBBBBBBBGGGBG", "BBBGBBGGBBBBBBGGGGBGGBGGBGGGGBGGBBGGGGBGBBGGBBGGG", "BGBGBGBGGBGGGBBBBBBBGGBGGBBBBGGBGBGBGBBGGGGGBBB", "GGGBBBBGGGGBGBBGBGBBGBBBBBBBBBGGBGBGGBGBBBBGGBBGG"};
    int R = 22;
    int W = 19;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2307;
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<string> predictions = {"BGGBGGBBBGBGGGBBBGBBGBBBBBGGBBBGGBGGGBGGGGBBGGGBGB", "GBBGGGBGGBBGGGGBBBGGBGBBBGBGGBBBGBGBGBBGBBBGGGBGBG", "GBGBBBBBBBGGBGGBBGBBGBGBBGGBBGGGGGGGGBBGBGBBBGGBGB", "GBBGBBGGGBGGGGBGBBGBBBBGBBBGGBBGBGBBGBBBBBBBBBGBBB", "GGGBGGGBGBBBBGBGBGBGGBGGGBGGGBBGGBBGBBGBBGBGBGBGBG", "GBGBGBGBGBBGBGGGGGBBGBGGGBBBGGGBGGGBGBBBBBGBGGGGBB", "GGGBGBGBBGBGBGBBBBBGGBGGBGBBBBBBBGGGBGBBGBGBGGBGBG", "GBGGGBBGGBBGBGBBGBGGGBGGGGBBGBGGBBGGGBBGBBBGGBGBGG", "BGBBGBBGBBGGGBBGGGGBBBBBGBBGGBGGGBGGGBBBBBBBGGBGGB", "GGBBBBGBBGBGBGBGBBGGBBGBBGBBBGBBBGGGGBGBGBGBBBGGGG", "GGBBGGGGBGGBGGBGGBGBBGBBGGGBGGGGGBGBBGGBBBGBBBBGBB", "GGGGBBGBGGGGBGGBGGGGGGBBGBGBBBGBGGGGGGBGBBBBGGBBBG", "GGGBGBBBGGBGBGBGBBGGBBBBBBBBGGBBGGBGBGGBBBBGGBGBBG", "GGGBBBBBGBGBGGBGGGGBGBBGBGGGBBBGGBGBGBBBGBGGBGGGGB", "GBGBGBGGGBGGGGBGBGBBGBBBGBBGGBGGGBBGGGGGBBBGBBBBBG", "GBBGBBBGBBBGBBGBBGGBBGGBGGGBGGGBGBGGBBBGGGGGGGBBGG", "BGBGBGGGBBBBBBGBGBGBBGBBGGGGBGGGGBGBBGGBGGGGGBGGBG", "GGGBBGGGGBBBGBBGGGBBGGBBBGBBGGBBGBGGGGGGBBBGBBBGGG", "GGGGBBGBBGBGBBBBBGBBBGGBBGGGBGGGBBGGBBBBGBBBGBGGBG", "GBBBBBBBBGGGBBBBBBBBBGBBGBGBBBBGGBBBGGGGBGGBGGBGBG", "GBBGGBBGBGGGGBGGBGBGGBGGBBBBBBBGBBBBGGGBBBGBGBGBBG", "GGGBGGGGGGGBBBGBBBGGBBGBBGGBBGGGBBBBBGGGBGBBBBBGGB", "GBBBBGBGBBGBGBBGBGBBGGBBGGGGBGGGGGBBGGGGGBBBBBGBBG", "GBBBBBGBBGBGGGBGGGBBGBGBBGGBBGGBBGBGBGGBGBBGGGGBBG", "BBBGGBBGGGBGGGGGBGBGBGGBBBBGBGGGBBBGBBGBBBGGGBGGBB", "GBBGGGBBGGBGBBGBGBGGBGBGGBGGBGBBBGGGGGBGGBGBBBGGBG", "BBGGGBBBGBGGGBGGGBBBBGBBBBGBBGBGBGGBGGBBBBGGBBBGGG", "GGGBGGGBBBGGBGGGGBGBBGBBGGBGGBGBBGBGBGBBGBGBBBBBGG", "GBGBGGBBGGGBBBGGBBBBGBGGBBGGGGBBGBBGBBBGBGBBGGBBGB", "BGBGGBBBGGGBGGGBBBGBBGBGGBGBBGBBGBGBBBBGBGBGGBGBGB", "BGGBBBGBGGBGGBGGGBBBBBGGBBBBGGGBBGGBBGGBBBBGBBBBBB", "GBGGGBGGGBGGGGBGGGBBBGBBBBGGBGBBGBBGGGBBGGGGBBGGBG", "GGGBBGBBGGGBGGGBBGBGGBBBBBBBBGGBBBBGBBGBBBBGBGBGBG", "GGGBBGGBGBBBGGGGBGGBGGBBGGGGBGGGGGBBGGGGGBGBGBBBGG", "GGGBBBGGGBBGBBBGGBGGBGBBBBGGBGGBGBGBGBGGBBBBGBBGBB", "BBBGBGBBBBBBGGBGGBBGGGBGBGBBBBGBGBBBGBBBBBBGBBBBBB", "GGBGGGBBBBGGBBBGGGBBBBGGGGBBBGGGGBGGBBGBBGGGBBBGBB", "GGBBGBBGGBGBGBGBGBBGBBGBBBGGGBGGBGBGBGBBGGGBGBGBBG", "GGGBGBGGGBBGBBBGGGGBGBGBGBBBGBBGBGBBBBBBGGGBGBBBBB", "BBGBBBBBGGGBBGBBBBBGGBGBGGBBBGGBBGBGBBGBBBBBBGBBGG", "BGGGBGGBBGBBGGBBBBBBGGGBBBGBGGGGGGBGGGBGGBBGBGGGGB", "BGGBGGGGGGBBGBBBGGBBGGBBGGGGGGBGGGGGBGGBBGGBGBGBBB", "BBBBGBGBBBGGBBGGBBGGGBGGGBGGBBBBGGGBBGBGGBBGGGBBGG", "BGBBBGGGGBGGGGGBGBBGGGGBGBGBGBBBGGBBGBBGGBGGBBGBGG", "BGGBGGBGGGGGBBBBBBGGGBGBBGBBGBBGBBGBBGGGGBBBBBBGBB", "BBBGGBBBGGGBGGBGGBBGBBBBBGGGGGBGBBBBBGGGGGBGBBGBGG", "BBBGGBGBGGGBBGGBGGGGGGGBGBGBBBGGGBGBGBGGBBBGGBBBGG", "BGBBBGBBBGBGBBGGBGBBGBBBGGGBBBGBBBGBBBGGBGGBGGBBBB", "GGGBGBBBGBGBBBBBBGBGGGBGBBGBGBBGBBBBGGBGBGGBBGGBGG", "GGGBGGGBBBGBGGGGGBGGBBBBGGBGGGBBBBGGGBBGGGBGBGGGBB"};
    int R = 47;
    int W = 41;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2500;
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<string> predictions = {"GBGGBGGBGBBBGBBGGGGBGBBBGBBGBGGGGBBBGBBGGBGBBGBBBB", "BBGGGBBGGBGGBBBBGBGBBGBBGGBGBBBGBGGBBBGGBBGGBBBGGB", "GBGGGBGBBBBGBGGGGBGGBBBGBGBGBBBGBBBGBGGGGBGGBBGBGG", "GGGGBBGGBGGGGBGGGBGBGGGGGBBBGBBBGBBGGBBGGGGGBBGGGG", "GBBGGGBBBGGGGGGGBGGGGBBGBGBBBGBGGGBBGBGGGBGBBBBBGB", "GGGGBGBBGBBGGBGGBGBBBBGGBGGGBBGBBBBGBBBGGBGGGGBGBG", "BBBGBBGGGGGBBBBGGBGBGBGGGGGGBGBGBGBBBGGBGGBGGGGBGG", "GBBBBGGBBBBGBBGBBGBGBGGGBGGBBBGGBBGGBGBBBBBGGGBBBB", "GBGGBBBBGGGBGGBBBGGGGBBGGBGGBGGGGGBGGBGGBGGGBBBGBG", "GBGBGGGBGGBBGBGGBGGBBGBGGGBBGBGGBBBGBGGBBGGGBGGBBG", "BBBGGGGBBGBGBBGBBGBBGGBGBBBGGGBBBBGBGBBBBBGBGBBBBG", "GGGBBGBGBGBBGGGGGBBBGGGBBBGBBBBBBGGGBBBGBBGBBBBGBG", "BGBBGBBGBBBBBGGGGBBBBBGGBGGBGBGBGBGGGBBBGBGGGBBGBG", "BBBGGGGGBGGBBBBGBGBBGGBBGBBGBBGBGGGBGBGBGGBBBBBBGB", "BBGBGBGBBGBBBGBBGGGGGBBGBBGBBGBBBBGBBBBBBGGGGGGBBG", "BBGGGBGGGGGBBGGBBGGGBBGBGGBBGGBBGBBGGGBGBGGGBBGBBB", "GGGBBGGGBBGGGGBBGGBGBBBBBBBBBGBBGGGBGGGBBGGGGGBBBB", "BGBGGBGBBGBBBGBGGGBBBBGGBBGBGBGBBBBBBGGBGGGGGBGGBG", "GBGGBGBGGGBGBGGBBGBBGGBBBBGBGBGGGGBBGBBBBGGBGBBGGG", "GBBBBBBBBBGBBBGBBBGBBBBBGBGGBGGBBBBBBGGGBBBGBBGBBG", "GGBGGBGBBBGGGBBGGGBGBGBBBGBGBGBGGBGGGGBBGGGGGBBBGG", "BBGGGBBBBGBBGGBGGBGGBBBBBBGBGBBBGBBBBBGBBBGBBGGGBB", "BGGGBGBGGBBBBGGBBGBBBBGGGGGBBGGGBBGBGGGGGGGBBGGGGG", "GGGBGGBGBBGBBBBBGGGGBGBGBBGGGBGGGBBBGGBGBGGGGGBBGB", "GGGGBGBBGGBGGBBGBGBBGBGBBBGGBBBGGGGGGGGBGGBGBBBGGG", "BBBBGGBGBGBGBBGBGGGBBBGBBBGGGBGBGGGBGBBBBBGGBBBGBG", "BBGBBGGBGBBGBGGBGGBGBBBGGBBGGBGGGBBGBBBGBGGGBBBBGG", "BBGGGBGGGBBGBBGBBBGBGGGGGBGBGGGGGGGBGGBGGGGBBBBBBG", "BBBBBBBBGBGBBGBBGBBBGGGBBGBBBGBGBGGBBGBGBGBGBGBBGB", "GGGGGGGGBGBBBBGGGBGBBGGBGBGGBBGBBGBGBGGBGBBGBBBBGG", "GBGBGBGBGGGBGBBGGGGGGGBGBGBBGBBBBBBGGBBGBBBGBGBBBG", "BBBBBBGBBGBGGBGBGBGBBGBGBGBGBBGBGBGGBGGGBGGGBGBBGB", "GGGBBBGGGGBGBBGBBBBGBGBGBBGGBBBGGBGBBGGGBBGBGGBGGG", "GBBBBBGBGBGBGGBGGBGGGGBBGGBBGGGGGBGGBBBGBGGBBGBBGG", "GGBBGBGGGBBBBGBGGGBGBGBGGBGGGGGGBGBGGBBGBGGGBGBGBB", "BBGGGGGBBBBGBBGBGGBBBGBGBBBBGBGGGBGGBGBBGBBGGGBBBG", "BGGGGGGGBBGBBGBBBGGBBGGBGBGBBGGGGGBBGBBBGBBBGBBGGB", "BBGBGBBBGBGBGGBBGBBBGBBGBBGBGBGBBGBBBGGBGBBGBGGBGG", "GBBGGBBBGGBGBBBBBGGGGGBBBGBBGBBGBBGBBGBBBGBBBGBBBG", "BBGGGGGGBGGBGGGBGBGGBGBBGBGGGBBGBBGGBGBBGBBBGBGGBB", "BGBGGGGGBGBBBGBBBGGGBBBGGGBBGBBBBBBBGGBBBBGBBBBBGG", "BGGBGBBGGBGGBBBGGBBBGGBBGGBBBGGBBGGBBGBGBBBBGBGBBG", "GBBBGGBBBGGGGGBGBBGBGBGGGGBGBBGBBGGGBBBBBGGBBGBBBB", "BBGGGBGBBGBGBGBGBBGBGGBBBGBGGGBBGBGGBGGGBGBGGBGGBB", "BGBBBGGBGBBGGBGGGBGBBGBGBBBBBBGBBBBGGGBBGBGGBBBBBB", "GBGBGGBGGGBBBGBGGBGBGBGGGBGBGGBBGGBBGBGBGBGGGBGBBG", "GGGBBBGBGGGGBBBGGGBGBBBBBBBBBBGGBBGBGBBGGGGGBBBGBB", "BBBBGGGGGBBGBBBBGBBBBGGGGBBGBGGGGGGBBGGGGGGGGGBGGG", "GBBBGBGBGGGGGBGGBBGGBBBBBGGGBBBGGBBBGGGGGBBGBGGGGG", "GBBGGGBGGGGGBGGBGGGBBGBBGBBGGGGBBBGGBGGBGBBGGBGBGB"};
    int R = 42;
    int W = 17;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2500;
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<string> predictions = {"GBGGBGBGBGGBGGBGBGGGGGBBBGGGGGGBBGBBBGGGBGGGBBGGGG", "GBBBGGGBGBBGBGBBBBGBBGBGBGGGBGGGBBGBGBBBGBBGBGGGGB", "GBBBBGBGBGBGBBBBGBGGGGGGBBGGBBBGGGGGGGGGGGBBGGGBGB", "BGBGGGBGBBBBGGGGBGBBBGBGGBBGGGGBGGGGBGGGBGBBBBBBGB", "GBBBBGGBBBBBBGBGBBGBBBBGGBBBGGBBGBBBBBGGBGGGGGBGBB", "BBBBBBGBGBGGBGGGGGGBBBBBGGGGGBBBGBBBGBGGGGGGBGBBBB", "BBGGGBGBGGBGGGGBBBGGGGGBGBBBGGGGBBBBGBGGGBGGGBGGGG", "GGGGBBBGBBBGBBGBBBBBBGBBGBGGGBBGBBGBBBGGGGGGBBBGGB", "BBBBBBBBGGGGBBGBBBGGBBGBGGGGBGGBGBGGBGGGBBGBBBGBGB", "BGGBGGGBGBGGGGGBBBBBGGBBBBGBGGGBGGGGGGGBBBGGBBBGGG", "GBBGBBBBGGBBBGGBBGBBGBBBGBBBGBGGBGGBBBBBGGGGGGGBBB", "GGBBBGBGBBGBGBGBBBGBGBGGBGGGBBBBBGGBBGGGGGGBBBBGBG", "BGGGBGGGGGBGGGBGGBGGBGBGBBGBGGGGBBBBGGGGBGBGGBGBGB", "GBGBBGBGGGBBBBGBGBGGBBGGGGGGBBGGGGGBBBBGGGGGBGBGBB", "GGGGBBGBBBGBBBGBGGBGGBBBGBBBBBGBBGBBBBGGBGGGBGGGBB", "GGBGBGGBGGGGBBGBGGGGGGBBGBBGBGGBBGBGBBGGBGBGBGGBBG", "BGBBGBBGGGBGBBGGBGBBGBBGGBBBGBGBGBBGGBBGBGBBGGGGBB", "BBGBGGGGGBBBBBGGGGBBGGBGGBGGGGGBGGGBGBGGGGBBBGGGBG", "GBBGGGBBBGBBBGGBBGBGBBGGBBBGBBBGBBBBBBGBGGBBGGBGBG", "GBBBGBBGGBBGBGBBGBGGBBGBBBBBGBGBBBGBBBGBGBGGBBGBGB", "GGGGGGGGBBBBGBGGBGGGGGGGGGGGGBBGGGGBBGBBGGBBGGGBGG", "BBBGBBGGGBGBBBGBGBBGBBGBGBGBGBGGGGBGBGBBBBGBGGGGBB", "BBGGGGGBBBGBGGGBGBGGBBGBGBBGGGBGBBBGBGGGGBBBGBBBBB", "GBBGGGBBGGGBGBGBGBGGGBGBBBGBBBBGGGBGGGBBGGBBBBBBBB", "GGGBBGGBBBBBGGBBBBGGBGBBBBBBGBGGBGGBBBGGBGBBBGBGBB", "BBBBGGBGGBGGBGGBGBGGBGBBBBGBGBGGBBGGBGGBGGGGGBBBGG", "BGBGGGGBBGBGBGBBBGBGBBBBBBGBBGGBGBBGGBGBBGGGGBGGGG", "BBGBGBBGBBGGBBBBBBGBBBGBBBGGGGBBBBGGBBBGBBGGBBBGBG", "GBBGGBGBGBBGBGBGBGBGGBBBBGGGGBBGBGGGBBBBBBBGBBGBBG", "GGGBBGGBGGGGBGBBBGBBGGGGGGBGBBBGBGGBBGBBGGBGGBGGGG", "BBGGGGBGGBBGBGBGGBBGBBBBBGBGBGGGGBBBGGGGBGGGGBGBBB", "BGBBGBBBGGGGBGGBBGGGBGGBGBBBBBGGGGGBBBGBBGBGBBBGBB", "BGBGGGBGBBBGGBBBBBBGBBGBBBGBBBBBBGBGBBGGBBBGGBBBBB", "BBGBGBBBBBGBBBBBGBBGGGBGGGGBGGGBGGBBGBBGGBBBBGBBBG", "GGGGGGGGGGBBBGBBGBGBBBBGGBGGGGBBGGBGBBBBGBBGGBGGBG", "GGGGBGGBBGBBBGBGGGBGBGGBGBGGGGGGBGGGGGBGBGBGBBBBGG", "GGBGGBBBBBGGBBGBGGBGBBBGBGBBGGBBGBBGGGGBBGBBGGBBGB", "GGBBGBGGBGGBGBBBBGGGBGBBGBGGBGGBBBBGGGGBBBGGGGGGGB", "BGGBBGBGGGGBBBBGGBGBGGBBGBBGBGBGGGBBGBGGBGBBBGGBBG", "BBGBBBGBGGGGBBGGBGGGBBBBGBGGBGBBBGBGBBBBGGGGBGBGBG", "GGBGGGBBBGGBBGGBGGBBBBBBGGBGGGGBGBGGGGGGGBBBBGBGGB", "GGBBGBBBBGBGGGGGGGGBBGBGBBBGGGGBGGBGBBBGGBBGGBBGBB", "BGGBGGBBGGGBBBGGGBGGGBGGBGGGGGBBGGGBBGBBGBGBGGGGBB", "BBGGGGBGGBBGGBGGGGBGGBBBBBGBGBBBBGBBGBBGBBBGGBGBBB", "BGGGBGBBGGGGGGBBGGBGBBBBGBBGBGBGBGGBGBGBBBGGBGGBBG", "GBGGBBGGGBBGBGBGBBBBBGGBGGGGBGGBGBBBGBBBGBGGGBGBGG", "BGBBGBBBBGGBBGGBGGBBBGBGGGBBBGGBBGBBGGGGGBGBGGGGBG", "GBBGGGBGGBBBBBBBBBGGBGGGGGGGGBBBGBGGGGGGGGBGGBBBGG", "BBGGGBBGBGBGBBGGBBGGBBBBBBGGBGBGGGBGBGBBGGBBGGBGBB", "GGBBGBGGGGGBGBGGGGGBBBBGGGGGBBBGBBBBGBGGGBGBBBGBBG"};
    int R = 15;
    int W = 43;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2500;
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<string> predictions = {"GGGBBBGGGGGBGGBBGBBBBGGGBBGGBBBGGBGBBGGGBGGBBBBBGB", "BGGGBGBBBGGGBBBGBGBBBGBBBBBGGGGBGBGBBBBBBBBGGBBBBB", "BBBGBGBBGGBBBBBBBGBGGBGBGBBGGGBGGGBGGGBBBGGBBBBBBB", "BGGBGGGBGGGGGBGBGGBBGGGBGBBBBBBBGGBBGGGGBBBGGBGBGG", "BGGBBGBBGGGGGGBGGGBBBBGBBBGGGBGGBGGBGGGGBGGGGBBBGG", "BBGGBBGBBGGBBGBBBGBBGGBGGBBBGGBGGGGBGGBGBGBGBBBGBG", "GGGBGGGBGGGBBBGGBGGGBGBGGGGGBBGGGGGBGGBBGGBGGGBGBG", "GGGGGBBBGGBGGBGBGGBBGBGGGGGGBBBGBBBBBGGGBBBBGGGBBG", "BGBBGBBGGGGBBBBGGGGBBBBBBGGBBGBBBGGBBBGGBBBGGBBBGG", "GGGGBBBGBGBGBGGGBBGGGGBBGBGGGGGGBBGBBGGBBBGBGBBBGG", "GGGGGGBBGBGGGBGBGBGBGGBBGBBBBBGGBBBBGBGBBBGBBGGBGG", "BGBBBGGBGGBBBBBBBGBBBGBBBBBGBGBGGGBBBBGGBGGGBBBBBG", "BGBGGGGBBBGBBGBGGBGGGGGBGBBBGGGBBGGGGBBGBBGGGGGBGG", "BBBBGGBGBBBBGGGGGBGBGGGGBBBGGBGGGBGBBBBGBGBBBGGGGB", "BGGBBBGGGGGGBBBBBBBBBGBBBBGBGBGBBGBBGBBBGBGBGBGBBB", "GGBBGGGGGGBBBGGBBBBGBBBGBGBBGBBGBBGBBGBGGGBBBBGGBG", "BBBGBBBGBBGBBBBGBGGGGGBBBBGBGBGGGGGBGGBGGGBGGGGBBG", "GGBBGGGGGBGBGGBGGBBGBGBGBBBBGBGGGBGGGGBBBGGGBBBGBB", "GGBBBGBBGGGGBGBBGBBGGBGGGGGGGBGGBGBGBGGGBGBBBBGGBG", "BGGBGBBBBGBBBBBBGGGBBBBGBGGBBGBGGBBBBBBGBBGBBGGBBG", "BBGBBGGBGGBGGBBBBBGGGGBGBGGGGGBBBGGGGBBGGGGGGGGGBB", "GBBBBBBBBBGBBBGBBGGGBBBBBGBGGGGGBBGGGBGGBBBBBBBBGG", "GGBBBGBGGGBBGBBGGGBBBBGBBBGGBBGGGGBBBGGGBGGBBGBGGB", "GGGBBGGBBBGBBBGBGGBBBBGGGBGGBGGBGGGBBGGGBGGBGBGGBG", "GGGBGBGBGBBBGGGGGGBGGGBGBBGBGBGGGGBBBBGBBGGBBBBGGB", "GGBGGBGGBGGBGBGGBGGBGBBGBGBBGBBBBGGGGBBBGBGGGBBGBB", "GGBBGGBGBBGBGGBBBBGGGGGGGBGBBGBGBGBGBBGGGBGBGBBBBG", "GGGGGBBBGBBBGBBGBGGBGGBGBBGBBGGGGGBBGGBGGBGBBBBBBB", "BBGGGGGBBBBGBBGGBGGBBBBBBBBBGGGBBBBBBGGGGGGBBBGGBG", "BBGGBBBGGGGGBGBBBGGBBGBBBBGBGBBBGBBGBGGBGBBGBGGBGB", "GGBGGGBBBGGBBGGGGBGGBGBBBBBGGGBBBBBGGGGBBBBGBBGGGG", "BBGBGGGGGBBBGBGGGGBGBGBGBBBBGBBGGGGBBBGGBGBGBBGBBG", "GGGBBGBGBBGGBBBBBBGBBGBBBGBBBBBGBBGGGBBGBGGBGBGGGG", "BGBGGGBGGBBGGGBGGGBBGGGGBBBGBGBBBBBBBBBGBBBGBBGGBG", "BBGBBGBBBGGBBGGBGGBBGBBBBBBGBBGGGBGBBGGGBBGGGBBBBG", "GGBGBGBGGBGBGBBBBGGBGBGGBBBBGBBBBBGGBGBBGBGGGBGBGB", "BGGGBGGBBBGGGGBBBGGGGGGGBGBGGGGBGGBBGGGGBGGBGBBBGG", "BBGBGGGGGBGGGGGGGBGBBBGGBBGBBBGGGBGBGBGBGGGGBBGBBG", "GBBGGBBGGGGBBBGBBGBBGGBGGBGGBGBBGBGBGGBBGGBGBGBBGB", "BGBGBGGBBGGGGBBBBBGGBGBBBBBBGBGGBGBGGGBBGBGGBBGBBB", "GBGBBGGBBGBBGGBGBBGGGGBBGBBGGBBGBBBBGBBGGGBBBBBBGB", "GGGGGBGBGBBBGBGGGGGBBBBBGBGGBBGGBBBGBBGBGBBBBBGGGG", "GBBGBGBBGGGBBBGBBGBBBGBBBGGBBBBGGGBGGGBGGBBBBGGGGB", "GGGBGGGBBBBBBBGGGBGGBGGBBGGBGGGGGBGGGBGBBGBBGBGGBB", "BGBGBGGGBGBGGGBGBGBGBGBBGGBGBGBGBGGGBBGGGGBBBGBBBB", "BGGBGBGGBGBBBBGBGGBBBGBBGGGBBBGBGGBBBGBBBGBGBBBBGG", "GGGGGBBGGBBBBBBGBGGGGGBGGGGGGGBGBGGBBGBGGBGGBGBBGG", "BGBGBBGBGBBGBBBBBBBGBGBBGBGBBGBBGGBGGBGGBGBGBGBGBB", "GGBGGBGBGGGGBBBGBGGBBGGGBGGGGGBGBBGGGGBBGGBBGGBBGG", "GBGBBGBBGGBGBGBBBBGBGBGBGGGBGGGBBGBBGGGGGGGBGGBGGB"};
    int R = 47;
    int W = 33;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2500;
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<string> predictions = {"GBBGBGBBBGBBGGBGBBBGGBBBGGGGBGGBGGGBGBGGBBGGGGGGGB", "GBGGGBBGGGBGGGGGBBGGGGBBGBBBBBGBGBBBBGGGGGBBBBBGBB", "BGGGGBBBGGBGGGBGGGGGBGGGBBGGBBBGGGGBGGGBBBBBGBBBBG", "BGBBBBBGBGBBGGBGGBBBGBBBGGGBBGGGBBBBBBBGBBBBGBGBBG", "BGBBGGGBBGBBBGGGGBBBGBGBBGGBBGGBBBGBBGGGGGGBGBBBGB", "BBGBBBGGBGBBBGBBBGBGGGBGGBBBBGBGBBGBGBBBGBBBGGGBGG", "GBBBBBGGBGBBBBBBBBGGGGBGBGBBBGGGBGBGBBBBGBGGBBGBBG", "BGBBBGGBBGGGBGBBGBGBGBGGGBGBBBGGBBGGGGBGGGBGBBGGBG", "GBGBGGBGGBGBBGGBBGBBBBBBGGBGBGBGBBBBGBBGBGBGGGBGGG", "BBBGGBGBGGGGBGGGGGBBGBGGGBBGBGBBGBGBGBBGGGGBBBGBBG", "BGGBGBBGGGGGBBBBGGGGGBGBGBGBGBGGBBBBGBGBBBBBGBGGBB", "BBBGGGGGBGGBBBBBGGGGGGBGBBBGGGBBGBBGGGGBBGBBBBBBBB", "GBGGBBBGBGBBGBGBGGGBGGBBBBBBGGBGBBBGBGBGBGBBBBBBBB", "GBGGGGBGGBBGBGBGBBGBGBBBBBBBGBGGBGBBGBGBBBBGGBGBBG", "BBBBBBGGBGBGGGGBGBBBGGGGGGBGBBBGBBBGGGBBBBGBBBGBGB", "GGGGBBGBBBBBBGGBBBGBGGGGGGBGGBBBBGBBBGGGBGGGGGGBGB", "BBBGBGGGBGGGBGBGBBBBBGGBGBGBGBGGGGGGGBGGGBGGBGBGBB", "BBGGBGGBGGBBBGGBGGBGBBGGBGBGGGGBGGBGGBBBGGBBBBBBBB", "BBBGGGBBGGGBBGGGBGGGBBGGBGBBGGBGBBBGBGGGBGBGBGGBBG", "GBBGGGGGGBBGBGBGGBBGGBBBGBBGBBBBGBBGBBGBBGBBBGGGGG", "BGBBGGGGBGBGBBBBBGGGGBBBGGGGGGBGBGBGBBBGBGGBBBBBGB", "GGBBBBGBGBBGGBGGBGBBGGBGBGGBGGBGGBGGGGGGGGGBGGBBBB", "BGGGBBBBGBGBBGGGBGGBGGBBGBGBBGGBBBGBGBBGGGGGGBBGBG", "BBBGGGGBBBBGBGBGGGGGBBGBBBBGBGGBBBBGGGGGGBGGGBGGBB", "GGBBGGBBBBBGGBBGGGGBBBBBBGBGBBGBGGGBGGBBBBBBBGGBGG", "GBGGBBBBBGGBBGGBGGBBBBBGBGGGGBBBGBBBGGBGGBBBGBBGGB", "BGBGBGGGBGGBGGBGBGBBGBBGGBGBGBGBGGGBBBGBGBGGBBGGGG", "BBGBGBGBGBBBBBGBBGBBBGBGBGGGBBBBBGBBGGGGBGBBBBBGGG", "BGBBBBBGBBBGBGGGBBGBBBBGBBBGGGBGGGGGGGGBBBBBGBGBBG", "BGGBGBGGBBBBGGGBBGGBBGBGGGGBGGGGGGBBGBGBGBGBGGBBGB", "GBGBBGGBBGGGGBGBBBGBBBBBBGBGBGGGBGGBGBGGGBGBGGGGBG", "BGBGBBBBBBGBBGGGBBBGBBGGGGBBBGBBGBGBBBBGGBBGBBGGBG", "GGBGBGGBGGGGGGGGBBBBGBBGGBGGGBGGBGGBBBBGBBBGBGGGBG", "BGGBBBGGBBBGGBGBBGBBBBGBGGBGBBGGGBGBBBGGGBBBGGGGBB", "BGBGBGGBBGBGBBGBBBGGBGBBGBBBBGGBGGGGGBGGBGBBBGBBGB", "GGBGBBBBGGBBBBGGGGGBBGGGGBGBBGGBBGGBBGGGGBBBBGBGBG", "GGBGBGBGGGGGBBGBGBGGBBGGBBGBBBGGBBBBBGGGGBBBBGGGGB", "BGBBBGGGGGGBBBGBBGGGGBBBGGBGBGBGBBBGBGBBGBBGBGGBBG", "GGBGBBGBGGGBBBBBGGBGBBBBGBBBGGGBBGGGGBBGGGGBBBBGBB", "BBBGBBGGBGGBGGGBGBBGBGBGBGBBGBBBBBGGBGGBBGGGBGBGGB", "BGBGGBGGGGGBGGBBBGBBBGGGBGBBBBGBGBBBGGBGBGBBGGGGBB", "BBBBGBBBBBBGGBGBBBBGGBGGBBBBGBGBGGBGGBBBGBGBBGBBBG", "GBGGBGBGBGBBBGBGGGGBBBBBBGGGGBBBGBGGBBGGGGBGBBGGBB", "BBGBBBBGGGGBBBGGBBBGGBBGBGBGBGGGGBBBGBGGGGBBBBGGBB", "BGGBGBGGGGBBBGGGGBGBBBGBBGGGGGGBGGBGBBGBGGBGGGGGBB", "GBGBBBGBBBGBGGGGGBBGGBGBBBGGBGGBGBBBBGGGGBBBBGGBGG", "GGGGGBGGBGGBBBBGGBBGGBBGBGBBBBGBGBGGGBBGBBBBBGBGGB", "BGBGGGBBGBGGGBBBGBBGGGBGGGBBBBBGBBGBGGGBBGBGBBGBGG", "GBBGGBBGBGBBBGGBBBBBGGGGBGBBBGGBBGBGGGGBBBGBBBBGBB", "GGBBBGBBGGGGGBBBGGGGBBBGBBGBGBGBGBBGGBGBBBBBBBBBBB"};
    int R = 42;
    int W = 25;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2500;
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    vector<string> predictions = {"BBBGGGBGBGBBBBBGBGGBGGBBBGBBGGBBGGBGBGBBBBBGGBGBBB", "GGBBGBBBBGGBBBBBBBGGBGGGBBGBBGGBBGGBGBGBBGGGBGBBGG", "GGBGGGBGGBGBGGBGBGBBBGBBGBGGBBGGGBBBBBBBGBGGGGGGBG", "GBGBBGGGGBGBBGBGBBGBGBGGGGBGGGBGGGGGGBBBGBGGGBGGGG", "BBBGBBBBBGGGBBGBBBBGBBGGBBGGBBBBBGGBGBGBBBGGBBGBGG", "GGBGGGGGGGBGBGBGBGBBGGGBBGBGBGGBBGBGBGGBBBBBGGGGBB", "BBGGBBGBGGGBGGGGBGGBBGBGBBGGGBBBGBGBGBGBBGBGGBGGBG", "BGGGGBBBGBGBBGBBGGGGBBBGBGGBGBGGBBGBBBGGBGGGBGBGGG", "GGBGBBBGGGGGBBGBBBBBGBBBGGGGGGGBGBGGBGGBGGBGGBGBBB", "GBGBBGBGBGBBGGGBBBBBBBBGGBGGBGBBBGBBBBBGBGBBBBBGGG", "BGBBBGGBGBBGBGGGBBGGBGGBBGBGBGGBBBGGBGGBGBGGBGGGGB", "BBBBGGGGGBGGBBBGBBGGGBBGGBBGBBBBBBGBBBBBBBBGBBBGBG", "BGGBGBGBBGGGBGGGBGBGBGGGGGGBBGGBBGGGGBGBBGBGGBGBGB", "BGGBGGGGBGGGBBBBBGGBBBBGGGBBGBGBGGGBGGGBGBGBBBGBBB", "BGBGGGGGGBGBGGGGGBGBBBBGBBGGBGGGBBBBGGGGBBGGBGBGBB", "GGGGBBBGGBGBGGGGGBGGGGBGGBBBBGBBBGBBBBGBBGBBGGBGBB", "BBGBBBGGBGBBGGGBGBGGGGGGBGBGGGGBBGBBGBBGBBBBGGBGBB", "GBGGBBGGGGBBGBGGGGGGBGGBBBBGGGGBGBBBGBGBBGGGGBBGBB", "BBGGBGGGGGBBGGBBBGBBBGBGBGBGGBGBBGBGGGGBBGBGGBBBBB", "GGGGGGGGBBBBBGGBBGGGGBBBGGBGGBBBBGBBGGBGGGBBGBGBGG", "GBBGBGGGGBGBGGGGGBGGGGGGGGBGGGGBGBBBBGBBGBGGGBBGGG", "GGBBBGGBBBBBGBBBBBBBBBGGGGBBBGBGGBGGGGGBGGBGBBBBGB", "GGBBBBGBGBBBBGBBBGBBGBGGBGBBBGGGGBBBGGGGBGBGBBBBGB", "BGBGBBGBGBGGGGBBGBBGBGGBBGBBGBBBGBBBGBGGGGGGGBGBGG", "BGBBBGBGGBBGBBGBBBGGGGGBGGGBGBBGBBGBBGGGGBBGBGGBBG", "GGBBGBGBGBGGGBGBBBGGGGGGBGGGBBGGGBGGGGBBBGGBBBBGGG", "BGGBBGGBBBBBBBGBGBGBGBGBBBGGBBGBBBGBBGGGBBGBGGGGGG", "BBBBGBBBBGBBBGGGGGBBBGBBGGGBBBGBGGGGBGGGGGGGBBGBBB", "GBGGGGGGBGGBBBGGGGGBBGGGGGGBBGBBGGBBBGBBGGGBGGBGBG", "BGBGBGGBGBGBGGGBGBBBGBBBGGGGGBGGBBGBGGBBGGBBGBBBBG", "GBBGBGBBGGBGGGGBGGGGBGBBBGGGGBBGBBGGBBGGGBGGBBBGGB", "BBBGGGGGBBGBBBGGGBGGBBGBGBGGBBBBGBGGGBBGGGGBBBGGBB", "BBBGGBBBBBBBBBGBBBGBBGBGGGGGGGBBBGGGBBGBBBBGBBBBBG", "GGGGBBBGBBBGGBGBGBBGBGGBGGGGGGGBGBGBBBBBBBGBGBGGGG", "BGGGBBBBBBBBGBBGGGGBGGGBBBGBGBBGGBGGGGBBBGGGGGGGBG", "GBBBBBBGBGGGBGBBGBGBGGGBBGGBBBGBBGBGGBBGGGGBGGGBBG", "BGBGGGBGGBBBGBGGBGGBBBGGGBBGGBBGBBGGGGGBGGGGBGGBGG", "GGGGBBBBGBBGGBGGGGBGGBGGBGBGBBGBBBGGBGBBGBBGGBGGGG", "GGBBBGGBGGBBBGBBGGBBGBGGBGBBGBGGGGBGGGBGBGBGGBGGGG", "BGBGBBGBBBGBBBGBGGGGGGBBBGGGGGBBBBBGGGBBGGBBGBBBGB", "GGBGGGGGBGGBGGBGGGGBGBGBBGGBGGBGGGGBBGBGBGBBBGGBBG", "BGGGGGGGBBBBGGGGGGBGGGGBBBGBGGBBBBBBBGGBBGBBGBBBBG", "BGBGBBBBGGBGGGBBGBBBGBGBGBGGGBBBGBGGGBBGBGGGBBBGBB", "BGGGGGBBGBGGGGGGGGGBGBBGBBBGGBBGGBGGGBGBBGGGGBGGBB", "BGBBBGGBBGBBBGBBGGBGBBGGBBGGGGBBBBGGBBGGBBBBBBBGGG", "GBGGBGBBGGBBBBBBBGBBGBBBGGBBBBBGBGBGGBBGBBBBGGBBGG", "BBGGGBBBBGBBGBGGGGGBGGBGBBGGBGBBGGBBBBBBGGBBGBGBBB", "GBGGGBBGBBBGGGGGBBGGGGGBBBGGGBBBBGGGBGBBGBGGGBGBBB", "GGGGBGBBBGGGGGGGGGGGBBBGGGGBGBGBGBGGBGGBBBBBBBBBBG", "GBGGBBBBGGGGGGBBGBGBGGGBBBGBGGBBGGGBGGGGGBBGGGBBBG"};
    int R = 47;
    int W = 23;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2500;
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    vector<string> predictions = {"GGBBBGG"};
    int R = 2;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    vector<string> predictions = {"BBGGGBB"};
    int R = 2;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    vector<string> predictions = {"BBBBGGBGGBBGGBGBBBGGBBBGGGGGBBGGBGBBGB", "GBBBGGGBGBBBBBBGGBGGGBBBBBBBBGGBBBB", "GGGBBGGBBGBBGGGGBBGGGGBBBGBBBGBGBBG", "BGGGBGGBGBBGGGGBBBGBGGGBGGGGGBGGGBGG", "BGBGGGBGGGGGGBBGBGGBBGGBBBBBGBBGBBGGGG", "BBGGBBGGGGGGGGGBBBBGGBGBGBBBGGBGBBG", "GBGBBGBGGBBBGGGGBGBGBGBBGGGGGGGBBBGBBB", "BGBGGBBBBGGBGGGGBGGGGGGGGBBBBGBBBGBBGGB", "BBGGBGGGBGGBGBGGBGBGGGBBBGGBBGGGBBGGB", "BBGBBBBBGGBGGGGBBGGBGBGGBBBGGGBBBGGBG", "GBBGGGGGBGGBGGGBBBBGBBGBBGGGGGGBBGB", "GBGGGGBBBBBBBGGGBBGGBGGBGGBGGBGGGGGB", "GBGGGBBGBGBGGGGBBGBBBGBGBGGBGBGBGGBG", "GBGGBGBGGBGGGBBGBBBBBGBGGGBBBGGGBBBGBBB", "GGGGBGGGGGGBGBGBBBBBGBBGGBBGGGGBBBGBBBG", "BBGBGBGBBBBBBGBBGBBBBGGGBGGBBGBBBBGBBBG", "BGBGBGBBGBGGBBGGBGGBBBGBGGGGBBBBBBBGG", "GGGBGGGGGBGBBBGGBGBGBGBBGGBGBBGGGBGGBGB", "BGGBBBGBGGGBBGBGBGGBBBGGBBBGBGGBBBGG", "GBBGBBBGGGGGBBBBGBBBBGGGGGBGBGBGBGGGGGB", "GGBBGBBGBGGBBGGBGGBGGGBGBGGBBBGBGBG", "BBGGBGBBGGBGGGGBGGGBGGBBGGGBGGBGBGBGBBB", "BBGBBGBBBGBGGGBGBBBBBBGGBGBGBBGBGBG", "GBBBBGGBGBBGGBGGGBBBGBGGBBGBBBGGGBBB", "BBBGBGBBGGBGGGGBGBGGBBGBBGBBGBBBBBGGBGB", "GGGBBGGBBGBGGBGGGBBBBBBGGBGGGGGBGGGGGG", "GGBGBGGGGGGGGBGGGGGBGGBGBBBBBBGGGBG", "BGGGBGBBGBBGGBGGGBGBGGGGBGBBBGBBBGGBBGB", "GBBGBBBGBGBBGBBGGBGGGGBBBGGBGBGGGGG", "GBGBBBBGGGBBGBBGGGBGGGBBGGGGGBBBBBGGGB", "BBGBGGGGGBGBGBGBGGGGGBBGGBGBGGGBBBBGGGG", "GBBGBBGGGGGGGGGGGGGGGGGGBBGGGBGBBGBGB", "BBGGBGGGBGBBGBGGGGBBGBBGGGBBBGGBBBBGBB", "GBBBBGBBGBGGBGBBBBBBGGBBGBGGGBGBBBB", "BGBBBGBGGGGBBGGGBGGGBGGBGGBBBGGGBBGGB"};
    int R = 17;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 1211;
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    vector<string> predictions = {"BBGGGBGBBBBBGGGBGGBBBBGGBGBBBBGBBGGGBGB", "GGGBGBBBBGGGGBBGBBGGBGGGGGBGBGGGBGGG", "BGBBGGBGBBBBBBBGBGGBBBGGBGBGGGGGGBGBB", "BBGBBGGGBGBGGBBGGGBGGGBGBGBGBGBGBBGB", "BGBBGGBGBGBBBBGGGBGGGBGBGBGGGBBBGGBBBB", "BGGGBBBGGGGGGGGBGBBGBGBBBGBGGGGGBBGG", "BGGBGGGGBGBBGBGGBGBGGBBBGBGGGGGGGGG", "BGGGGBGBGGBGGBBGBBBGGGGGBGBBBBBBBBGB", "GBBBBBBBGGBBBBGGGBGBGBGBGBBBGGBGBBBBBG", "BGBBGBBGBGGBGBBGGBGBGGBBGBBGGGBGGGGGB", "GGGGBGBGGGGGGGBGBGBBBGBGGBBBGGBGBBBBB", "BBBGBBGGBBBBGBGGGGBBGBGGGGGGBBBBGBG", "BBGBGBGBBBBGGBBBGBBBBGBBGBGGGBGGGGB", "BBBBGBGGGGGGBGGBGBBBBGBGGGGGGBBGBGGGB", "BGGBGGBGBGBBBGBBGGBBBBBGBGBBGGGBBBB", "GBBBGGBBGGBGBBBBGGGBGGBBBBBBBGBBGBG", "BGBGBBBGBGGGGBBBBBBGBBGGBGGBGGGGBBB", "GBGGGBGGGGBGGGBGGBBBBGGBBGBBBGGBGGBBGBG", "GGGBBGBGGGBBBGBBBGBGGBGBBBBGGBGBBGBGB", "GBBGBBGGBGGGBBBBBBBGBGBBBGGGGGGGGGGGG", "GGGGGBBBGGBGGBBBBBGBGBBGGGBGBBBGBGGGBB", "BBBGGBGGGBBGGGGGGBGBGGGGGGBGBBGGGGGGG", "BGBBGBGGBGGBBBBBBBBGGBBGGBGGGGGBGBB", "BBGBBBBBGGBBBBBGBBGBBBBBBGGBBBBGGGBG", "BGBBGGBGGBGGGBGGGGGGBBGBBGBBBGBGBGGG", "BGBBBBBBGGBGGGGGGGGGGBBGBGBGBBGBBGG", "GGBGGBBGBGGGGBGBGGBGGGBGGGBBBBGGBGBBG", "GGGGGBGGGGBBBBBGBBBBBBBBBGGGGGGBBBGGBGB", "BBBBBGGBGBBBBGBBBGBGGBBGGBBGGBGGGBBGG", "BGBBGBBGBBBGGBGGBBBBBGGBBGGBGBGBGBG", "GGBBGGGBBBGBBBBBBGGGBGBGBBGGBBBGGGBG", "BGBBGGBBGGGBGBGBGBGBGGGBBBBGBBBGGGBGGBG", "GGGGGBGGBBBGBGGGBBBBGBGBBBBGBBBGGGGGBGG", "BBBGBGBBGBGBBGGGBGBGGGBBBGBGBBGBBBB", "BGGGBBGBBBGGBGGGGGBBBBGBGBBGGGGBBGGBB", "BBGBGBBGGBBGBBGGBBBBGBGBGBGGGBGGBBBGGGG", "BBBBGBGGGBBGBBBBGGBBBBBGBBBBGGBBBBBGBB", "BGGGGGGGGGGGBGGBBGGGBBGBGGBBBBGGGGBBGGB", "BGBGGGGGGGGBBBBGGGGGGBBBBBBBBBGGGBG"};
    int R = 17;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 1324;
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    vector<string> predictions = {"BGGBBGBBBGBBBGBBBBBBGBBBGBGBGGBGGGBGGB", "BGBBBGGBBGBGBGGGBBGBBBGBBBBGGBBBGGBGG", "BBGGGBGGBBBGGBGBGBGBGGGGBBBGGGGGGBBG", "GBGBGGGGGGBGBBGGGGGGGGGBGGGGBGGGBGBGGBB", "BGGGGGBGBGGGGBGBGBGBGGBBBGBBGGBGGBG", "BGBBBGGBGBBBGBGGGBBGBGGBGGGGGGGBBGBG", "BGGGBBGGBGBGBGBBGBBBBBBBBGGGBBGGBGBBG", "GGBBBBBBBBBGGGBBBGBBGBGGGGGBBBBGBGB", "BGGBGBGBBBBGBGGGBGBBBBBBBGBBBGBGGBBBBGG", "GGBGGGBGBGBGGGBGGBGBGBGBBGBBBGBGGGG", "BBBBGBBBBGGGBGBBBBGGGGGBGGBBGBBGGBBBBB", "GGGGBBBBBGBGBGGGBGGBGBBBGGGBGBGBGBGBBBG", "BBBBGBGGGGGGBBBGBBBBGGBGGGGGGGGGGBBGBG", "GGBGBBGBBBGGGGGBGGGGGGGBBBBGGBGBBBBGGGG", "BGBBGBBBBGBGBGBGGBGGBGBGBGBGGGGBBGB", "BBGGGGBGGGGGGGGBBBGBGGGGBBBBGBGBBGBBGBB", "BGBBGBGGGGBGGBBBBBGGBBGGBBBBBBGGGBBBG", "GBBBBBGBBBGBBGGGGGGBBBGBGBGBGBGGBBBBBG", "GGBGGBBBGGBBBBGBBGGBGGBGGGGBBGGBGBGG", "BGGBGBGGGBGGBGBBGBBBBGBGBBGBBGGBBGB", "GBBGGBGGBGGBGBBBBGBBGGGGGBBBGBGBGBGBG", "GGGBGBGBGBGBBBBBGGGBGBBGBGGGBBBBGBBG", "GBGBBGGBBGGBBBBGGBBGGGBGGGGBGBGBGGG", "BBGGBGBGBBBBBBGGBGGGBGGBBGBGBGBGBBB", "GBBGGBGGGGGGBBBBGGBBGGBBBGBGBGBBGGGGBG", "BGGGBBBGGBGBGGBBGGGBGGGBGGGGBGGBBBGB", "BBGGBBBBBBGGGGGBBGBBBGBBGBGBBBBBBBG", "GBBBGBGBGGGGGBGBBGBGGGGGBGGGGBBGGBGBGG", "GGBGBGBGBBGGBGBGGBGGGBGGGBBBBGBBBGGBBBB", "BGBBGGBGGGGBGBGGGBGGGGBBGBGGBGBBBGB", "BBGBBGBGGBGBGBGBBBGBBBGGBGGBBGBBGBGGGB", "GGBGBBBBGBBGBBGBGBGGGBGBBBBBGBGGGGBGG", "GBBGBGGGBGBGBBBGGBGBGBGBBGGGBGGBGBBBBB", "BGGBBBGBGBBGGBBGBGBBBGGGGBBBBBGGBBGGBGB", "BGBGBGGBGBBBGBGGBGGBBBGGBBBBBBBBGGGB", "BGGBGBGBGGBGGBGGGBGBGGGGGBGBGBGGBGBGBB", "BBBBGGGGGGGGGGGGGGGGGBGGBBBGBBBBBGGB", "GGBBGBGGBBGBBGBGBBGGBBGBGGGGBGGGBGBBBG"};
    int R = 17;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 1305;
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    vector<string> predictions = {"GGGGBBGBBBBBBGBBBBBGBBBBGGBBBBBGGGG", "BBGBBBBGBGGGGBBGGGBBGBBGBBBGGBGBBGB", "BBBGGBBBGGBBGGBBBBBGGBBBBBBBGGBBBBBBGG", "BGBBGGGGGGGGGGGGGGGGGGBBGGBBGBGGGBBB", "GBGBGBBBGBBGGBBBGBGGBGGBBBBBBBBGGBBG", "BBGBBGGGBBBBBBGGGGBGGGGGGBGBBBGBGBBGBB", "BGGBBGGBBBGGBGBGGBBGGGGBBBGBGGBBGBGGGGG", "BBBBBBGBGBGGBBGGBBBGGGGBBGGBGBBGBBGGG", "BBBBGBBBBBGBGGGBBGGGBBGGBGBBBGBGGGBGBBB", "GBGGGGGBBGBGBBBGBBBBBBBBBGBBBBGBBBB", "GGBBBGGGBBBBBGBGBBBBGGGGBGBGBBGBGBGGBGG", "BBBGGGBGBBBGGBGBBGGBBGBBGBBGGGGBBBGBGG", "GGBGBGBBBBGGBBGGBGGBGBBGBGGBGBGBGGGB", "BBGBGGBGGGGBGBGBGGGGBBBGBGGGGBGGGGBBBGG", "BGBGGGBGBGBGGBBBGBBBGGGBBBGBGGBGBGBBBBG", "GGGGGBBBGBBBGBGGBGGBGBGGGGBBBBGBGBGG", "GGGBGGGBGBGGBBGBGGGBBGBBBBBBGBBGGGB", "BBGGBBBGGGGGBGGBBGBGGGBBBGGGGBBBGBG", "BBBGBBBGGGBGGBGGBBGBGBBBGBGBBBGGBGBGBG", "BGGBGGGBBGGBGBGGGBGGGBBBGGBGGGBGGBBGBB", "GBBBGGBGBGBGBBBGGBBBGBBGBGBGGBBBGGBG", "GBBGGBBGGBBBBBGBBGBGBGBGGGGBBBGGGBBGGGG", "BGBGBGGBGBBGBBBGGBBGBBGGBGGBGBGGBGGBBB", "BBBBGGBGBGBBBGBBBGGGBGGGGGBGGBGBGBGBGB", "BGGBGGGBGGBGGBGBGBBBGBBGGGBGGGGBBBBG", "GGBGGGBGBGBBBBBGGGGGGGBBBBGBGBGGBGBBGG", "BBGGBBGGGGBBGGBGGBGGBGBGBBGBGGBGGGGG", "GGBGBGGGBBGGGGGGGGBBBGBGBGGGBBBGGGGBGBB", "BGGBBBGBBGGBGBGBBGGGGGGGBGGGGGGGBBGGGB", "BGGBBBGGGBBGBGBGBGBGBGGGGGBGBGGBBGGGGG", "GGBBBGBBGGBGBGGBBBGGGGGGBBGGGBBBGGG", "BBBGGBBBGBGGGBBBBBGGGBBBBGBBGGBGBGGBBBB", "GBBGBGGGBBGBGBBGBBBBGBGGGBGBBBGGBBGBB", "BGGGGGBBGGBGGGBGGBBGBGBBBBGGBBGGBGG", "BBGGBGGBGBBGBGGBGGBBBGBBGBGGBGGGBGGGG", "GGGBBBGGBBGGGBBGBBGGGGGBGBBGBGGGBBBBBGG", "GGGGBGGBBBBBBGBGGBBBBGGBBBGGGBBBBGB", "GBGBBBGGGBGGBGGGBGBBGGGBGGGBGBGBGBBBGBB", "GGBGGGGBBBBGGBGGGGGBBBGBGBBBBGGBBBBBGGG"};
    int R = 17;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 1339;
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    vector<string> predictions = {"BGGBGBBBGBBBBBGGGBGBBBBGBBBGGBGBGBGB", "BBGBBGBBGGGGBGGGBBBBBBGBGBBGBBBBGGGBG", "GBGBBGBGBBGBBGBBGGGBGGGBBGBBBBBBGGG", "GBBBGBGGBBGGBGGBGBGGGBBBBGBBBBGGGGBG", "GGBBGGGBBGGBGGBGBGBGGBBBBBBBBBGGBBBB", "GGGGBGGGGGBGGBGGBGBBGGGGBGGGGBBGBGB", "GGGGBBBBGGGGBGBBGGBGBGGGGBGBGGGBGGGBBB", "GBBBGBBBGGGBGGGBGGBGBBBGGGBGBGBGGBGGG", "GGBBBBGBGBGGGBGGBGBGGBGGBGBGBBBBBBGB", "GBBBBBGGBGBBBBBBBBGBBGBBBBBBBBBBGBBGGGG", "GGGBBBBGGBBBBBGBGBBBBBBGBGGGBBBBBGGBGGG", "BBGGGGBGGGGGBGBGGGGBBGBGGGGGBBBBGGGGG", "GGBBBGBBGBGGGBGGBBBGBBBGBGBBGGGBBBB", "BGBGGGBBBBBBGGBBGGBBGGBBBGGBGBGGGBGB", "GGGGGBGBGBBGBGBBBBGGBBGBGGBBBBGBBBBBBGB", "BBBGBBGGGGBBBBBGBBGGBGBBBGGBBBBGBGBBGG", "GGGGBBGGBGBGGBBBBBBGBGBBBBBGBBBBBBGBB", "GGGBGGGGBBGGBGBBBGBBGBGBBBBBGBBBGBB", "BGGGBBBGBGBBGGGBBGBGGBGGBBGBGBGBGGBGBBB", "BGBBBGGGGGBGBGBBGGBGGGGGGBGGGBGBGGG", "GBGBBGGBBGBGGGBBGGBBGBGBGBGBBBGGBGBGGGB", "BBBGGBGGBGBGGBBGBBBBBGGBGBBGGBBBBGBG", "BGGGBBBGGBBGBGGGBGGBBBBBGBGBGBBBGBGBBBG", "GGGGGGGGGGGGGGGGBBBBBGBGGBBGGBBGGBGG", "BGGBBGGBGBGBGGBGGBGGGBBGBBGBGBBBBBBG", "BBBBBBBBBBGGBGBGGGBBGGGBBBBGBBBGGBB", "GBBGGGGGBGGBBBBGGGGBGGBGGGBBBGBGBGGGB", "BBBGBBGBGGGBBBBBBGBBBBGBBBBGBBGBGGG", "BGBGBGGBGGBBGGBGBGBGBGBBGGBBBGGGGGGGGB", "BGBBBBGGBGGBBBBGGBBBBGGBGGBGGBGGBBGBBG", "BGGBGBGBGBGBBBBBGGGGBGGBBBGGGGGGBGGGBB", "BBGBBGGGGBGBBGBGGGBGBBGGBBBGBBGBBBBB", "GGGGBBBBBGGGGGGGBBGGBGBGBBGGBGGGGGG", "GGBGGBGGGGGBBBBGGGGGGGGBBBBBGBGBBGBB", "BGGBGBGBGGGBGGBGBBGBBBGBBBGBBGGGGGGGG", "GBGGGBBBBGGGBBGBGGBGGGBGGGBGGBBGBGBBGB", "GGBBBGBGGBGGBBGBGBGBBGBBBGBGBGBGBBBG", "GGBGBGBGBGGGBBBBGBGBBGBBBGGBGGGBGBB"};
    int R = 17;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 1287;
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    vector<string> predictions = {"GBGGGGGGGGGBBBGGBBBGGBBGGBBGBGBBGGBGBGBGGGBGBBGB", "GBGBBGBGBGBGBBGBGGBBBGBBBGGGBBGBGGGBBBGGGGBBB", "GBGGGGGGGGGBBBBBBGGGBBGGGBBGBGBBBBBBBGGGBBBGBB", "BGGGGBGGBGGGBGBBGGBBGGGGGGBBGGBBGGGBBBGGBGBGG", "BBGBGBBBBBGGGGBBBGBGGGBBBBBBGGBGBBBBBBGGGGBBGBBB", "GBGBGBGGBBBGGGBBGGGBBBGBGBBGGGGGGGBBBGBGGBBBBBG", "GBBBGBBGBBBGBGBGBBGBGGGGGGBBBBGBBGBGBGGBBGBGBGGGB", "BBBGGGBGBBBBGBGGBGGGGBBBGGBBGBGBBGGGBGBBGBGBBGG", "GGBGBBBBBBGBGBGGBBBGGBBBGGBGBGGBGBBBBBBBBGBGBG", "BBGGBBBGGGBBGBGGBGBGGGGGBBBGGGBBGGBBGBGGGBGGBBBB", "BGBGBBBBGBBBBGBGGBGBBGBGBGBBGBGBBBGGBBBGGGBGG", "GBBBGBBBGBGBBBGGBGBBBGGBBGBBBGBGBGGBGGGGGBBGGBG", "GGBBGGBGBGGGGGBGBGBBGGGBGGGGGGBGGBGBGBGBGGGGGBGB", "GGBBGGBBGBBBGBBBBBBBBGBGBBGBBGBGGBGGGGBBBGGGG", "GBGGBBBBBBBGBBBBGGBGBBGBBGBBBGBGBGGGBGBGBBBGGGG", "BGBBGGGBGBGBGGBBBGGGGGGGBGGBGBBGGBBGGBGBGBBBBGB", "GBGGBBBGBBBGGGBBBGGGBGBGGBBBGBGBGBBGBBGBBBGBB", "BBGGGGBBGBBBBGBBGBBBBGGGGGGBBBBGGBBBGBGGBGBGBG", "GGGGGGGBGGGBBBGGBBBBGBBBBGBGGBBBBBGGGGBGGBBBBGBB", "GGGBGGGGGBGGBGBBBBBGGBBGGBGBGBBBBGGGGGGBBBBBB", "BBBBGBBBBBBGGGBBBBBGGGBBBGBGBBBBBBBBBGBGBBBGGGG", "GBGBGGBGBGGBGGBBBGBBGGGBGGBGGGBBBBBBGBBGGGGGBGB", "GGGGGBGGBBBBBBBBBGGBBGBBGBGBBGBGBBBGBGBBGGBGBB", "GGBBGGBGBGBBBGBBBGGGBGBBBBGBBGBBBBBGGBGBBBGGBBBGG", "BBGBGGGGBBBBBBBGGBBGBGGGBGGBBBGBGBBBGGGGGBGGG", "GBBGBGGBGBBBBBBGBBBGGBBBBGGGBGGBBGGGBGGGGBGGGBBBB", "BGBGBBBGBBBGBGBGGBBGBBBBGBGBGBGGGBBGBGBBGGBBGBBGB", "BBGGBGGGBBGGBBBGBGBBGBGGGGBGGGBBBBBBGGGGBBGBBGB", "GBBBBBGGGBGGBGGBGBGBGGBBGBBBBGBGGBBGBGGBGGGBB", "GBBGBGGGGBBGBBGBGBBGGBGBBBBGBBBGGBGGBGGGGBBBB", "GGBGBGGGGBGBGGGBBGBBBGBBBBGGGBGBBGGGGBBGBBBBB", "BBBGBBGGGBBGBGGGGBBBBBBBGBBBGBBGGBBBGGGGGGBBG", "GBBGBGBGGGBGGBGGBBGGBGGBGGGGBBBGGGBGBGBBGGGGBBGBG", "GGBBBGBGBBBBBGGBBGGBBBGGGBGBGBGBBBBGGBBBBBGBGGGGB", "BGGGBBGBGBGGGGBBBGBBGGGBGGGBBBBBGGGBBGGGBBBBBGG", "BGBBGGGBGGBBGGGBBBBGBBBBGGGGBBGGBBBBBGGGGBGBGB", "BBBBGBGBBGBBBBGGGBBBBBBBBBGBBBBBGBGGGBBBGBBBBB", "BGGBBBGGGBGGGGGGGBGBBBBBGGBBGBBBGGBGGGGBBGGBB", "BBGBGGBGGBBBGBBGGGBGBGGGBBGGGGBBGGGGBBGBBBGGG", "BGBGGGGBBGBBGGGGGBGBGBBGGGGGBGBGBGBGBGBGBBGGBGBGG", "BBGBGGBBBBBGBGBBBBBGGBGGGBBGBBGBGGGBBBBBBGGBGBG", "GGBGBGGBBBBBGGGGBBBBGGGBGGBBBBBBGGBGGGGGBGBGGG", "GGBGGBBBGGGBBGBBGGGGBBBBGBBGBBGBBBBBBBGBBBGGGGGGB", "GGGGBBBGBGGBBBGBGGBGBGBGGBBBBGBBBBGBGBBBBBGGB", "GGBBBBBBBGGGBGGGBBGGBBBGGBBBBBBBBGBBBBGGGGBGGBBBB", "BBGBBGGBBGGGGBBBGBBBBGBBGGBGBGGGGGBGBGGBBBGGBGGGG", "BGBBBGBGBBGGBGGBGGBBBBGBBGGGGBBBGGGGGBGGBBBBGGBBG", "BBGGGGGBBBBGBGGBBBBGBBGGBGBGGGGGGBBGBGGGGGGGBGBBG"};
    int R = 1;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 1693;
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    vector<string> predictions = {"GGBBGGBBGGBBGBBGBBBBGBBGGGGBGGGGGBBBGBBGBGGBB", "BGBGBBGBBGBGBGBBGGGGGBBBBBGGGGGBBGBBGBGBGGBBG", "GGGGBGGGGGBBGBBGGBBBGGBBBBBGGGGGGBBBBGGBGGBBB", "GGGGGGBGBGGBGBGBGBGGGGBBGBGBBGBGBGGBGBBBGBGBBBB", "BBGBGGBBGGBGBGBBBGBBBBGBGGGGBGBGGBGBGGBBBGBGGGBB", "GBGGBGGBBGGGGBBBBGGGBGGBGGGGGBGBGGBGBGGGGGGGG", "BGBGGBBGGBBGBBBGGGBBGBGGBGBGGGBBBGGGBGGBGGBGBBBB", "GGBBGBBBGGGBGGGGBGGGBGGGBGBGBGGGGBBBGGGGBGGBG", "GGBBBGBGBBGBGGBGGGBGGBGGBBGBBBGBBBBBBBGBBGGGGGG", "BBGGGBGGBBBGGGGBBGBBBGGBGBGGGBGBGGBGGGGBGGGGGBBBG", "GBGGGBGBGBBGBBGGGGGGGGGBBGBBBBGGBBGGBGBBGGGBBGBG", "BGBGGBBBGBBBBBBGGGGGGGBGBGBBGGGBGBGBGBBBGBBGBBGB", "BGGBGBBBBGBBBBBGGBGGGGBGBBBBGGBGGBBGGGGGGGGBBG", "BGGBBBBGGBBBGBGBGBBBGBGBBGBBBBBGGBGBGGBBGGGBGBG", "GBGGGGGBBBBGGBBBGGGBBBGBGBGGBBGBGGBGBBBGGBGBB", "GBGBGGGGBBGGBBBBGBBBGGBGGGBBGGGBGBBGGGBGGBBBB", "GGGGBBBBBGGGGGBGGBGBBGGGBGBBBGBBBBBGGGBBGGGGGBBB", "BBBBGBBBBGGGGGBGBBBBBGGGBBBBBBBBGGBGBGBGBBBGGBGB", "BBGBGBBBGGGBGGGGBGBGBBBBBGBBGGBGGBBGBBGBGGGBBBBBG", "BGGGBBBBGGGBGBGBBGBBBBBGGGBGBGGBGBBGBGGBGBGBGGB", "BGBGGBBBBGBGBGGBGGGGGBBBGBGGGBBGBGBBBBBGGBBBG", "BBBBGGBGGBGGGBBGGBBBGGGBBGGGBBGGBBBBGBBBBBGGGGGBG", "GBBGBBBBBBBGBGGGGBGGBBBGGBBGGGBBBGGBBBBGBBGGBBBG", "GGGBBBBGGGBBBGGBGBGBGGBBGBBBBGBGGGBGBBBGBBBBBB", "BBBBBGBBBGBGGBBBBGBBBGGBGGBGGBBGGBBBBGBGBBGBGGB", "GGGGBGBGBGBBBGBBBGBBGGGBGBGGBBGGBBGBBGGBGGBBGBGGB", "GGBBBBGGGBGGBGBGBGGGBGGGBBBBGGBGBGGBGGBBBGBGGBBB", "BGGGBBGGBBGBGGBGGGBBGGGBBGBBGBGGGGBGGGBBBBGGGGGGG", "BGGGGBBGBBGBGBBBBGGGBGBBGGGBGBGGBGGGBBBBGBBBGBBG", "BBGBGBBBBBGBBBGBBGBBGGBBGGGGBBGGBGGGGGBBBBGGBG", "BGGGGGBGBGGBGBBGBGBGBGGBBGBGBGGGGGBBGGGGBBBGBGGG", "BGGGGGBBBBBGBGBGGGBGBBGGBGBGGGGGGBBBBGGGBGGGGGB", "BGGBGGGGGGGGGBGBGGBGBGBBBBBGBGGBGGGBGBBGBBBBGGBB", "GGBGGBGGGBGGGBGGBGBBBGGBGBGGBGBGGGGBGGGGGBBBB", "BGBBGGGBBBBBBGGBBGGBGGBBGGBBBBGGGBGGBBGGBGGGGGG", "BBGBGBBGGGGBGGGBBGBGBGBGBGBBGGBBGGGGGGBBGBGGGGG", "GGGBGBGBBGBBBGGBGGGBGBGBBBBBBGGBGBGGGBGGBGBBGBBG", "GBGBGGGGGGBBGBBBGBGBBBBGGBBGGBBGBBGBGGBGBBBGG", "BGGBGGBBGGGBBBGBGGGGGBGGGBGGGGBBGBBGBBGBGBBBBGBGB", "GBBGGBBBBBGGBBGBGGGGBBBBGGGBGBBGBBGGGGBGBBGGB", "GGBBBGBBBBGGBGBGBGBBBBBGGBGBBBGGBGBBBGBGGBGGB", "BGGGBGGBBGBBGGGBBBGGBGBGBBBGBGGGGGBGBGBBBBBGB", "GBGGGBBBBBBBBBBGBGBGGGGGBBGGGGGBGBBGBBGGBBGGGG", "GGGGGBGBGGGGGBBBGBGGGGGGBGGGBBBBGBBBBGBGGBBBGG", "GGBGBBGBGBGGGBGBGGGGGGBGBGGGGGGBGBGGBBBBGBBBGGG", "BBGGBBGBBBBGGGGGBBGBGBBBBBGBGBBBBBGGBGGBBBGGGGBB", "GGBBGBGGBGGGGBGGBBBGBGGGGGGBGBGBGBGBBBBBGBGGBBB"};
    int R = 7;
    int W = 1;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 1848;
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    vector<string> predictions = {"GBBBGGGBGGGGBGGBGBBGGGBBGGBGGGGGGGGBGGBGGGBBBG", "BGGGBBBGGGBBGBGGGBGGGBGBGGBGGGGGGGBBGBGBBBBBG", "GGBBGBBBBBGBBBGGGGBBBBBGGGGGGGBGGGBGBBGGBBGGG", "GBGBBBGBBBGBBBGBGGGBGBGBBBBBGBGBBGGBGBGBGBGGGB", "GGGBBBGBBBBBBGBGGBBGGBBGBGGBBBGGGBBGBGGGBBGGG", "BGBGBGBGGGGBBGBBBBBBBBGGGBGBGBBGGGGBBGGGGBBBGGBGB", "BGBGGGGGGGBBGGBBGBBBGGBGGGGGBBBBGBGBBBBBGBGBB", "BBBGGBGBBBGBBBBGGBGGGBBBGGGBBGGGGBBBGBGGGGBBBGGB", "GBGGGBGGGBBGGGBBBGGBBBBBGGBGBBGBBGGGBBGBGGBGG", "BBBGBBGBBBGGGGGBBBGGGGGBBGGGGGBGGGBBGGGGGGBBGB", "BGGGBBBGGGGGBGGGBGGBGGGBGBGGBGBBBGGGGGGBBBGGGGBBB", "GBBBBGGBGGBGGGBGBGGBBGBBBGGBGBGBBGBGBBGBBBGBGB", "GGBBGBBBBGBBGBBGBBBGGGBGGBGBBBGGBGBBBGBBBGBGBG", "BGGGBBBGBGBGBGGGBGBGGGGBBBBBBBGGGBGGGBGGGGGBGB", "BGBBBBGGGGGBGBGGBGGGGGBGGBGBBBBGBBBGBGGBBGBBG", "GGGBGBBBBBBGBGBGGGBGBBGBGGBGBBGGBBGBGBGGBGBGBGG", "BBBBBGBBBGGBGGGGBBBGBGGBBBGGBGGBBBGBBBBGBGGBBBGG", "BGBBGBBGBBGGGGGBBBBBBGGGBGGBGGBBBGBGGGBGGGGGGGGB", "BGBBBBGBBGGGBBGBBBGBGBGGBBGBBBGGGGGGGBGBBGBGBGGBG", "GBGBGBBGGBBGBBGGGBGGBGGGBBBGBBBGBBGBGGBBBGBBG", "GGGGGGGBBGBBBBGGBGBGBBBGGGGGGBBBBBGGGBBBBGGGBBGG", "GBBGBBGGGGBBBBBGGGBGBBGBBBGBBGBGBBBGBGGGGGGBB", "GGGBBGBGBBGGGBGGGBGGGGGBBGGBBBGGGGBBBBBGGBBBGBBBG", "GBBBGBGGBBGGGGGGBGGBGBGBBBGBGGGGGBBGBBBBBBBGGBGB", "GGBBGGBBGBGBGGBBBGBBGBBGGGGBGGBBGGBGBGBGGGGGGGB", "BGGGGGBGGGGBBGGGGBBGBGBBGBGBGGBGBGBBBBGGGBBGBBB", "BBBGBGBBBBBGGBGBGBGBGGGGBGGBGGBBGGBBBGBBGBGBBGG", "GBGBBBBGGBGGGGBBBBGBGBBGBGBBBGBBGBBGBBBGBBGGGGB", "GBGBBGBGBBBBBGGGBBBGGBGBGGGGBBBBBBGBBGBGGBGBBB", "BBBGGBGGGGBBGGGGBGBGGGBGBGGBGBGGBBBBBBGBBGGBB", "GGBGGGGBBBBGGBBGBBGBBBGGGBBBBBGGBBGBGBGBGBBBGB", "BGGGGGBBGGBGGGGBBBBBBBGGBBBBBGBBGBBGGBGBGGGGBB", "GBGBGGGGBBBGBGBBBGBBBGBBBBBGBBBBBGGBBBGGGBGBGBB", "BBBBBGGBGGBGGBBGBBBBBBGBBBBGBGGGBBBBBBGBGGGBG", "GGGBBGGGBGBGBGBGGGGGGBGBGGBBGGGGBGGBBGGGBBBGBGBBB", "GGGBBGBBBBBGGBBBBBGGBGBBGGGGBGGBGGBGBGBBBBGGB", "BGGBGBGGBBBGGGGGBBGBBBBGGBGBGBGBGBBBBBGBBBGGBGB", "GGGGGGGGGBBBGBGBBBBGBGBGGBBBGBGBBGBGGBGGGBGBGBGG", "BGGBGBGBBBBGBGGGBBGGGBGBBBBGBBGBBGBBGBGGGGBGB", "BGGGBBBGGBGBGBBGBBBBBGBBBGBGBGBBGGGGGGGGBGGGBBB", "GGGBBBGGBBGBGBGGGBBGGBBGGBGGBGGBGGBBBGGBBGBGGB", "BBGGGBGGBBGGGBBGGGBGBBGBGGBBGGGGGGBGGBGGGBGGGBBG", "BBBBBGGGBBGBBBBGGGBGGBBGBBBGBGGGBBGGGGBGGGGBGBGG", "BBGGGGBBBGBBGBGBGBBGBBGGBGGGGGBBBBBBGBBGBBBGGBB", "GBBGBGGGGBGBGGGGBBGGGGGBGBGGBGBGGBGGGGBGGGBBBBB", "GBGBBGBBGBBBGGBBGBGBBGGGGGBGBGGGGBBBBGBBBBBBGGGB", "GGGGGBGGBBGGBGGBBBGBBGGGBBBGBGBBBGBBGGBGGBBGG", "BBBBGGBGGBBBBBGBGGGGGBGBBBGGBGGGGGBBGBBGBBBGGB", "BGGGBBGBGGGBGBBBBGBBGBGBBBBBGBBBBBGGGBGBGBBGGB"};
    int R = 2;
    int W = 5;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2098;
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    vector<string> predictions = {"BGGBBGGBBGBGGBGBBBGBBGGGGGBGGGGGBBBGBBGGGBGBBBGB", "GGBBBGGGBBBGBBGGGBGBGBBBGGBGBBGGGBBGGBGGBBBBG", "BGBBGBBGBBBGBGGBBGBGGBGGGBBGBBGGBGBBBGBBBGBBB", "BGBBGBGBBGBGGBBBBGBBGBGBGBGBBBGGGGBBGBGGBGBBBB", "GGGBBBGBGGGGBGGBGGBGGGBGBGBBGBGBGBGBGGGGBBBBBBBB", "BBBGBGBBBBGGBGBBBBBGGGGGBBGGGBGBBBBBGGGGBBBGBGBGG", "BGGGBGGGBBGBBBBGGBGGGBBBBGBGBGBBBBGBBGBBGGGGGGGG", "GGGGGBBBGGBBGBGBBBBBGGGBBBGBBBGGGBBGGBGGGGGBBGB", "BGBGGBBGGBBBBGGBBBBGGBGGGGBBBBBBGGGBGBGBGBBGGB", "GGBBBGBGGBGBBGGGBGGBGBGBGBGBBBBBBGGBBGBBGGBGBB", "BBGBBBGBBGGBGBBGBBGBBGGBGBGGGBGGBBGBBBBGGGBBBGBBB", "GGGGGGGBBBGGGGGGBGBBBGBBBBGGGGBGBGGBGBGGBBBGG", "GGGGGBBBGGGBBBGBBGBBBGGBGGBGBGBBBBGBBGGBBBGBG", "BBBBGGGBBGGGBBBGBGGGBBGBBBGBGBBBBBBBGBBGGBBBGGGG", "BGBBBGBGGGGBGGGBGGBGBGGBGGGGGBBGGGGGGBBGBBBGGGGG", "GGGGGGGGGGGGBGGGGBGGBGGBBBGBGGGBBGGBBBBGBBBGG", "BGBGBGGBGBBBBBGBBBGGGBBGGBGGGBBBBGBBGBBGBGBBB", "BGGGBGGGGGBGGBGBGBBGGBGGGGBGGGGBBGGBGBGBGGGGBBB", "GBGBGGBGGBBBGBGBGGGBBBGBGGGGBGBGBBBGBGBGBGBGG", "GBBBGBBBGBBGBBBGGBGBGGGBGGGGGBBBBGGGGBBBGGGBGGGBB", "BGBGGBGBGGBBGGBBGGGBBGGBGGGBBGBGBGGGGGBBBBBGB", "BGGGBGBBBGBBBBGGBBBBGGGGGGGGGBBGGBBBGBBGBBBBBBBB", "BGGGGBBBGGBGBGGBGBGGBGBGGBBGBGGBGBBGGBGGBGBBBGGB", "BGBGGBBBGGGBGBBBBGBGGGGBBBBGBGBBGBBBBBGGBGBGBBBG", "GGBGBGGGBGGBBGGGBGGBGGGGBBBBBGBBBBGBGGBGBBGBB", "GBGGBGBBGGGBGBBBBGGGBBGBGGBBGBBBBBGGGBGBGBBGGG", "GBBGBGBBGGGBBGGBGBBBBGBBBGBGGGGBGGBBGGGBBBGBGBB", "GBBBGGGBGGGGBGBGBGBBBBGBGGBGGGBGGBGBGGBGBGBBGGG", "GBGGGGGGBBGGGBBGBBGBBGBBBGBBGGGGGBBGGGBGBBGGG", "GBBGBGBGBGBBBBBGGGGGGGGGBBBBGGGBBGGGGGGGGBBGBGBBG", "BGGBGGGGBGGGGGGGGGGGBBGBGBGBBGBBBGBBBGBBBBGGBBBB", "GBBBBGBBGBGBBGBBGGGGBBBGGBBGGGGBBBGBGBBBBGBBBGGGG", "BBGBGGBBGBGBBGBGBGGGGBBGBGGBGBBGGBBBGGBBBGBGBGB", "GBGGBGBGBBBGBGBGBBBGBBBBGBGGGGBBGGGBGGGBGBGGG", "GGGGBGBGGGGGBGGBBBGGBBGBBGGBGGBGGGBGBGBGBGGGBBBBB", "GGBGBGGBBGGGBGBGGGGBBBGGGGGBGBGGBBBBGGGBGBGBBG", "GBGGGBBBGBBGBGGGBGBGGBGBBBBGBBBBGBGBGGBBBBBGGG", "GGBGBBBBBBBGBBGBBGBGGGBBBBGBGBBBGGBGBGBGGBGGB", "BBGGBGGBGBBBGGGGBBBGBGGGGBBGGBGBBBGGBGBGGGGBBGBGG", "BGGBBBBGBGBBBGGGGGBGGBBGBBGGGBBGBGBGBGGBGGBGGBGG", "GGGBBBGBBGBBGBGBBBBBGBBGGBGBBGGBGBGBGGGGGBGBG", "BGGGBGBGGBGGGBBGGBBBGBGGBBGBBGBBGBGGGGBGBGGBGGGBG", "BGGGGGBBGBBGBBBBBGGBBGGGBBGGBGGGGBGBGBBBGGGBBGGGG", "GGBGBBBGGGGGBGGBBGGBGBGBBGBGBGBGBGGBGGBBBBBGBGGG", "BGBBGBGBGBBBGBGGBBGGGBGGBGGBGGBGBGBGBGBBGGBGBBBBB", "GBGBGGGGBBBGBGBGGGBGGGGGGBGBBBGGGBBGGBBGBBBBB", "BGGBBGBBGBGBBGBBGGBGGBBBGBBBGBBGGBBGGBBGGGGGGGB", "GGGBGBGBGBGBBBBGBBGGBGGBBGBBBBBBGGGGGBGGBGBBBGG"};
    int R = 1;
    int W = 11;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 1885;
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    vector<string> predictions = {"BGBBBBBBBBGGBBGBBGBGGGGBGGBBGBBGGGBGGBBGGBGBBGGG", "GGGGBGGBGGBGGGGBBGGBBGGGGBBGGGBGGBBGBBGBGBGBBBGBB", "GGBGBGGBGGBBBBBBGBGGBGGGBGBBGBBBGBBBBBGBGGGGG", "BBBBBGGBGBBBBGGGGGBGBBBGBBGBBBGGGGBBBBGBGBGBBGG", "BGBGGBBBBBBBGBGGBBBGBGBBGBBBGBGBGBGGGBGGBBGBGBBBG", "BBGBBGBBGBGGGGGBGBGBBGGBBGBBGGBGGGBGGGBGBBGBGBBGG", "BGGBGGBBGGGGGGGBGGGBBGGBGBBBBBBBGGBGGBGGBGBGBB", "BBGGBGGBBGBBBGBGBBGBBGGBGGBBGGGGGGGBBBBBBBBGGBB", "GGGGGBBGGGBGGBBBBGBBBGBGGBGBBGGGBGBBBBGBGGGBG", "GGBBBBBBGGGGBBGGBBGGBGGGGGBGGBBBBGGGBBBBGGGGBG", "GBBGBGBBGBGGBGBGGBGGGBGBBGBGGGBBBGBBBGBBBGBGG", "BGBBBBGBBBGBGGBBGGBBGGGBBGGGBGBBBBGGBBGBBGGGBGGB", "BBBBGGGBBBGBBBGGGGGBGBBGGBBBBBGGGBGBGBGBGGGBGBGG", "BBBBBBGGGGGGGBGBGBBBBGBBGGGBBGBBBGGGGBGGBBBBGBBB", "GBGGGGGBGGBBBBBGBBGBBBBGBGGBBGBGBBGGBGGGBGGGGBBGG", "GBGBGGGGBGGBGBGBBGBGGGGBGGBBBGBGBBGGBBGBBGBBGGBGG", "GGBGBBGGBBGBGGGGGGBGBBBGBGBBGBGGBGGGBBBGBBGBBGBBG", "GGGBGGBBGGGBGBBBGBBBGBGBBGGBBBGGGBGBGBGBBBGGG", "BBBBBGBGBGGBBBBGBBBBGBGBGBGBBBGBGBBGBBGGGGGGBBGBB", "BBGGGBBGBGGBBGGGGGGBGBGBGBGBGBBBGBBBGBGGBBBGBB", "GGGBBGBGGGBGBGGBGGGGGGBGGBBBGGBBGBBBBGGBBGGBGB", "BGGGBGGBGGBBGGGGBBBGGBBBBBGGGBGGBGGBBBGBGGBGBBG", "BBGGBBGBBBBGBGGGBBBGGGGGGBGBBGGBGGBGGBBGGGBBGGBGB", "BBGBBBBGBBGGGGGGBBGGBGBGGBBBBGGBGGBBBGBGBBBBGGGBB", "BBBGBGGBBBGBBGBGBBBBBGBBBGGBGGBGBGBBGGBGBBGBGGG", "GGBBGGBGBGGBGBGGGGGBGGBGBBBBGBBBBBGGBBGGBGGBBG", "GBBGBBBGGBGBBGGGGBBBGBBGBBGGBBBBGBBGGBBBBBBGGG", "GGGBBBBGBBBGGGBGGBGGGBBBBGBBGBBGBBGBBBGGGBBGG", "GGGBBBGGBGBGBGGGBGBGGBGBBGBBGBBGBGBGGBBBGGBGBGBBB", "GBBGGGBGGBGBBGBBBGBBBGGBBGBBBGBGGBGGBBGBBGGBBGB", "GGGGBGGBGBGBGBGGGGGGBBGBGBGGBBBBBBBBGGBBBBGBGB", "BGBGBBGGBGBBGBBBBGGGGBBGBBBGGBGGBBBBBGGBGGBGG", "GGGGGGGGGBBGBBGGBGGBGGGGGBBGGBBGBGBBBBGBGGBBBG", "GBBGGBBBGGGBBGGBBBBBGBGBBGBGGGBBGGBGGGGGBBBGBBG", "GBBGBBBGGBGBBGBBGBGBBGBGGBBGGGGGBBGGBGBGGGGBBG", "BBGBGBBGGBGBBBBGGBGGGGBBGBBGGGBGGGBGGBBBGBGBBB", "BBGBBBGGGGBGGGGBGGBBGGGGGBGGGGGGBBBBGBGGGGBBBGBG", "BBBGBGGGGGBGBGGBGBBBGGBGBGBBGGBBGGBBBBBBBGGGBGB", "BGBBGBBGGGGBBGBBGGBBBBGBGBBGGBBBBBGGBGGBBGGGGB", "BGBGBGGGGGBGBBBGGBGGBGBBGGBGGGBBBBGGBBBBBGBGGBBGG", "BBGBBGBGGBGBBGGBGGGBBBBBBBBGBGGGGBBGGGGGBBGBG", "BGBGGBBGGGGGGGGGGBGGBGGGBBBGGGBGBGGGBGGBBGBBBBB", "BGGGGGBBGBBGGGBBGBBGBGBBGBGGGBGBGGGBGBBGBGGBBB", "BBBBBBBGBBBBGGGGBGGGBBGBGGBGGGGBBGGBBGBBBBGBGG", "BGGGBGGBGBBGBBBBBBBGGGBGBGBGBBBBBGBBGGGGBBGGGGGB"};
    int R = 2;
    int W = 4;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 1951;
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    vector<string> predictions = {"BGGGGBGBBGGGGGBBGGGBGBGGBGGBBGGGBBGGBGGGGGGGBGGBG", "GBGBBGBGGBBBGBBGBGBGGGBBBBGGGGGBGGBGGGBGBBBBGBB", "GBBGBBGBBBGBGBGGBGBGGGBBBBBGGBGGGGBBGBBGBBGGBB", "GGBBBBGBGBGBGBGBBGGGGGBBBBGGGBGBGBGGBGBGBGBBGB", "BBBGGGBBBBGBGBGGGGBGBGBBGGGBBGGGBBGBBGBBBBBGG", "BGGBGGBGBBGBBBGBBBGGBBBGBGBBBBGBGGGGBGBGGBGBG", "GGBBBBBGBGGGBBBBBGBBBBBGGGBGGBBBBGGGBBBBGGGGGGBB", "GGGGGGBGBGBBGBGGGGGBBBBGBGGGGGBGBBGBBBGBBGGBGBG", "GBGBGGGGBBGGBGGBGBGGBBGGGGBBGGBGBGBGBGBBGGGBBGGGB", "BGBGBGGGGBBGGGGGGBGBGGGGGGBBGGGGGGBGBGGGBBGBBBBBB", "BGBGBGBBGGGBGGBGBBGBBGBGGGBGGBGGGGBBGGBGBBBBBBGBG", "GGGBBBBBGGGBGGGBBGGBGGGBGBGGGGBBBBBGGGBBGBBGBGG", "BBBBBBBBBGGBBBGGGBBBGBGBGGGGGGBGBBGBBBGBGBGBGBG", "GGGGGGGGBBGGGBBGBGBBBBGGGGGGGBGBGBGGBBGGBGBGGB", "BBBGBGGGBBBGGGGBBGBBGBGBGBGBGBGGBBBGBGBBGBBGG", "BBGGGGBGGGBBBBGBGGBGBBBBBGGBBBBBGBBGBBGGBGGBGBBG", "BBGBGBGBBGBBBGGGGBGBGGBBBBBBBBBGBBGGGGBBBGBBBG", "GGBBGGGBGBGGBGGGGGBBGGBBBGGBBGBBBGGGGGGGBGBGB", "GGBGBBBBGBBGBGBBBBGGGGGGBGBGGGBGGGGGBBGGBBBBG", "GBGBBBBBGGGBGGGBGGGBGBGBGGBGBGGBBBGBBGBBGGGGG", "GBBBBGGGGBGGBGBGBBGGGBBBGGBBGGGGBGBBGGBGGGBGGBG", "BGBGBGBBBGBBBBBBBBBBBBBGBBBGBBGGBBBGGBGBGBGGGBB", "GBBBGBBGGGGGGGBGBBGBBBGBBBGBGGBBBGGBBBGBGGBBG", "GBBBGGBGGBGGBBBGBBGGBGGGGGGBGGBBBBGGBBGGGBGGGBB", "BBGGGBBBBBBGGGGGGGGGBGBBBBGBGGBBGBBGBGBBBBGBGGG", "BBGGGBGBBBGGBBBGBBGGGGBBGGBGBBBGGBBGGGGGGGGBBGBGB", "GBGGGGBBGBBBGBGBGGGGGGBBBGGBGGBGBBGBGGGBBBGGGBBGG", "BBGBBGGBGBBBBGBBGBBBBBGBBGGBGGBGBGGGGGBGGBBBBB", "GBGBGGGBGBGBGBBGBGBGGGBGGBBBGBGBBBGGGGBGBGGGBG", "BGBBBGGBBBGGGBGBBBGGBGGBBGGBBGBBGBBBGGBGGGGGGBBGG", "GGGGBGGGBBGGGGGGGBGBBGBGBGGGBBBBGGGBGBGGBGBBGGBG", "GGGBBBGGGBBBGBBGGGGBGGGBBGGBBGBBGBBGGGGBBBBBB", "GBBBGBBGBGGBGGGBGBGBBGGBBGGGGBGGBGBGBBBBGGGBB", "GBBGGGGBGBGBGBBBGBBBBGBBGBBGGBGGBBBBBGBBBGGBBGGB", "BGGBBGGGBGGGGBBGBGBBBGBGGGBBBGBGBBBBBBBBBBBGGBG", "BGBBBGGGBGBBGGGGGBBBBBBGBBGBBGBBGBBBBGGGBBGGGBBBB", "GGGBGGBGGGBBGGBBGGBBGGBBGGBBBGBBGGGBBBBBBGBGGB", "BBGGGBGBGBGBGGGBGBGBBGBBGGGBBBBGBBGGGGGBGGGGGG", "GGGBBGGBBGBBGGGBBGGGBGBBBBBGGGBGBGGGBBGBBGBBBG", "GBGGGGBGGGBGBGGBGGBBBBBBBBGGGGBBGBGBBBBGBGBGG", "BBBBGGBGBGBBBBGBBBGBBGBBGBBBGGGBBGBBBBBGBGBBGBBG", "BBBGBGGGGGGBGGGGBGBBGBGGGGBBGGBGBBGBGBGBBGBBBG", "BBBGBBGGBBGBGGGBBBGGBGBBBBBGBGBBBBBBGBGBGGGGB", "BBBGBGBBGGBGBGBGGBGGGBBBGBBBGBGGBGBBGGBBGGGBG", "BBBBGGBGGBBGBGBGGBBGGGBGBBBGGGGBBBBGGBBBBGGBBGGB"};
    int R = 4;
    int W = 1;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 1718;
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    vector<string> predictions = {"GBGBBGBGBGGBBBBBBBBBBBGGGGGGGBGGGBBGGBBBGBGGG", "BGGGGGGGBBGGBBGBBBGBGGBBGGGBBGGGGGBGBBGBGGBGBGBGG", "GBGGGGGBBBBGBBBGBGGGGBGGBGGGGBBBGGGGBBBBGBGBGG", "BBGBGGBBBBBBBGBBBBGGGGGBBBGGBGBBBBBBBBGBBBBBBBBG", "GBGGBGBGBBGGBBGBBBBBGGBBGGGBBBBBBBGBGGGGBBBBGB", "BBGBGGBGGGBGBBBGGGGBGBGBBGBBBBBBBGBBGBBBGGBBBBBG", "BBGGBGBGBGBBGBGGBBBBGBGBGGBGBGBBBGGGGGGBBGBGBG", "GGGGGGGBGGGGBBBBBGGGGGGBGBGBBGGGGBBGBBGGBBGGB", "GGGGGBBGBBBGBGGBGGGGGGBBGGGGBGGBBBGBBGGBGGBGBGB", "GBGBGBGBGBBGGGGBBBBGBGGGGGBBBGGGGGBGBBGGBGBGGG", "GBBGBGBGBGGGBBGBGBGGGBGBBBGGBGBBBBGGGGBBBGBBGGGG", "GBGBGGGBBBGGBGGGGBGBBGGGBGGBGGGBBGGGBGBGBGBGGB", "BGGBGBBGBGBGGBBBBGBBBBGGBBBGBGBGBBBGGBBGBGBGBB", "BGBBGBBGGGGBBBGBBGGGBBBBBGBBBBBBBGBGGBBBGBGBGGB", "BGBBGGBBGBGBBGBGBBGGBGGBGBBBBBBGGGBBBBGGBBBGBBBBB", "GGBBBBBBGBGGGGGBGBGGGBGBGBBBBGBGBBBBBBBBGGBGBG", "BGBBGBBGBBGBBGBGBBBBGBGGBBBGBBGBGGGGBBGBBBBGGGBG", "BGGGGGGBGGBBGBBGBBGBGGGBBGGGBGGGGGGBGBBGBGBBGB", "GBGGGGBBGBGGGGBGBBGGGBBGGGBBBGBGGGBBGBBBGGGGGGBGB", "BBBBBBBBBBBBBGBBGGGGGBBBBGGBBBGBBGBGBBBGBBBGGBGB", "GBBGGBBGGBGBGGGBGGGBGBGBBGGBGBGBGGBBGBBGBGGBB", "GGGGGBGGGBBGGGGGGBGBBBBGGGGGBBBBBBGGBBBGGGGGB", "BGBBGGGGBGGBGBGBGGGGBBGBGGBBGGGBBBGGBBGGBBBBG", "GGGGGGBBBGGBBGGGGGBGBGBGGBGBGGBGGGGGGBGGBGBGGGGB", "BBGBBGBBGBBBGBGGBBGGBGGGGBBGBBGGBBBGGGBBBBBBB", "GBBBGGBBBBBBGGGGBGBBGGGBGGGGGGBBBGGGGBGBGGGGGGGB", "BBBGGGBBBGGBGBGGGGBGGBGBBGGBBGGBBBBGGBGBBGGGGG", "GGGBGGBGBGBBGGGGGGBBGBGGBBBGGBGGGGGBGBBBGGBBGGG", "GBBGBBBGGBBGBGBBGGBGGBBGBBBGBGGBGBGGGBGBBGGBBG", "GBGGGGBGBBBGBGGBGBGGBBGGGBBBGGBGGBGBBBBGGGGBG", "BGGBGBBGGGGGBBBBGBGBGBBBGBBBGGGGGBBBBGGBGGGGBGBB", "GBBGGGGBBGGBGGBBBGGBGGGBBBGGGGBGBBGGGGGBGBBGBB", "GGBBGGBBBBGBBGBBGBGGGGBBGGBGBGBGBGBBGBGBGGBGBBBB", "GGGBGBBBBGBGGGGGBGBGBBBGBBBBGGGBBBBGGGGBGBBBGG", "GBBGBGBBBBBGGBBBGBBGGGGBBBBBBGGGBGGBGGBBBBBGBGG", "GGGBGBBBGBBGGBGGGGGGGGGBBBGBGGBGGBBGBBGGGGBGB", "BBBGGBGGGGGGBBBGGGBBBBBBGBBGGBBBGGBGBBGBGGBGBBBBG", "GBBBGGBGBGGBBBBBBBGBBGBGGBGBBBGGGGGBBBBBBBGGBBBG", "BBGGGGGBBGBGGGBGBGGBBGBGGGBGBBGGBGGBBGGGBBBBGB", "BBBBGBGGBGBBBBGBGBBGBGBBGBGBGBGGBBGGGBBBBGBGBB", "GBGBGBGBGBBBBBGBBBGBBBBGGBGGGGBGBBGGBGGGGBBGBGB", "BGGBBGBBBGBGGGGBGGGGGBBGBBBGBBBBGBGBBGBBBBGBGB", "BGBBBBGBBBBGGGBBGGGGGBBGBBGBGGGGGGBBBGGGBGGBGBGB", "GGGGGGGBBGBGBGGGGBGBGBGBGBBBGGBGBGBBGGGBBBGBB", "GBBGBBGBBBBGBGGBGBBBBBGBGGGBBBGBBGBGBGGBBBBGBBGB"};
    int R = 1;
    int W = 3;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 1684;
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    vector<string> predictions = {"GBBGBBGGBGBBGGGBGGGBGGGGBGBBGBGBGBGBBBGBGGGGGGB", "GBBBBGGGBGBBGGBGGGBBGBGGBGBBGGGGGGBBBBGGGGGGBBGBG", "BBBGBBBGBGGGBBBGGBBGBBBBGGGBBGGGGBGGGBBBGBGGGGGB", "GGGBGGBBBBGBBBGGGBGGGBBGGGGGBGBGBGBGBBGGGGBBGGBG", "BBBGBBBGGGGBBBGGGGGBGBGGGGGGBBGGGGGGGGGBGGBGGGGGB", "BBGBBBBGGGGGGBGGGBBBBBGBGGGBGBBGGBGGGGBGGGGBBB", "GGBGBBGBBBBGGBGBGGGGBGBBGBBGGGGGBBBBBBBBGBBBGBBB", "BGBGBBGGGBGBBGBBGGGGGBGBBGBBGGBBBBGGGBBGGBBGBBGGB", "GBGGBGGGGBBBBBGGGBGBGGGBBGGGBGGBBBBGGBBGBGBGBB", "GGBGGGGGBGBGGGBGGGGGGGBGGBGGBBBGBBBGBBGGBGGBBBBBB", "BGGGGBGGGBBBGGGGGBBBGGBGBGGBGGGBGBGBGGGGBBGGBG", "GBGBBBGBGGBGGGBGGBGGBBBBBGBGGGBGGBBBGBBBGGBBGBB", "BBGBGGBGGBBGGBBGBGBBBGBGGGBGGGBGBBGGBBGGBBGBGBG", "BBGGGBBGBGGGGBGBBGGGBBGGBGGGBGBBGGGBBBBGGBGBGG", "GBBGGBBBBGGGBBGBBBBGBBGBGBBGBGBBGGBBBGGBGGBBB", "BBBGBBGGGBGBGGGBBGBGBGBGBGGBGBBBBBGGBBGBBBGBBGGG", "BBBGGGBGBGGBGBBBBGGGGBGBBGGGBBBBGGGBGGGBBGGGBBB", "GBGGBBBGBGGGBBBGGBGGGGGGBGGBGGGBGGGBGBBGGGGGG", "BBBGBGBBBGBBBBBBGBBGGBBGGBBBGGBGBGGGBBGBGBGGBBGBB", "BGBBBBGGGGBBBBGGBBGGGGBGBBBBBGBBGBGGBGBGBGGBBBB", "BGBGGGBBBBGBGBBGGBGBBGBBBBGBBBBGBGBBBGGBBGBBBG", "BGGBGGBBGBGBGBGGGBBBBGGGGBBBGBGGGBBBBGGBBBGGGBB", "BBGBBGBGGBGBBGBGGBBBGBGBGGBGBBGGGBGGGBGBBGBGGBGGG", "BGGGGBBGBGGBBBBGGBBGGGBBGBGBGGGBBBGBGGGBGGBGBGBGG", "GBGGBGBGBGGGGBGBBBGGGBBGBBGGGGBGBBBBBBBGGBBGG", "BBGGGBBGBBBGGBBGBBGBGBGBBGBBBGGBBGBGBBBBBGBBGG", "BGGBBGGBGGGBGGBBGBBGGGGBBBGGGBGBGGGGGGGBBBGBGBBBB", "GBGBGBGBBGGBBGGBGGGBBBGBGGGBBGGGGBBBBBBGGGBGBBBBG", "BBGBGBBBBGGGBBBGGBGGBBGGBGBGBBBGBGBGGBBGGBBBGBGBG", "BBGGGGGGBGGBBGGGBBBGGGBGBBGGGBBGGBBGBBGBGBGBGGGG", "GBGBGGGBGBGBBBBGBBBGGGGGGGGBGGGGBGBBBGBGBBBBGGGGG", "GBBGGGGBBGGGGGGBGGGGBBBBGBBGGBBGBBBBBGBGBBGGBGGG", "GBGGGBGGBBBBBBBGGGBGBGGBBGBBBBBBBBBGGBGBGBBBG", "GGGGBBGBGBBGGGGBBBGGBBGGGGBBBBGGGBBBGBBBGBBGGBBB", "BGBBBBBBGGGGBBBBGGBBBGBBBGBGBGBGGBBBBGGBGGBGGBB", "GBGBGBGGBBGBGGGBBGBBGGBGGBBBGBBBGGBBGBBBGGBBGB", "BBGGBGGBBGBBGGGBBGBGBBGGGGBGGBGGBGGBGGGGGBGBBGGB", "GBGBBBGBGBGBBGBGGGGBBBBBGBBBBBGGGBGBGGGBGBGBGGG", "GGGGGBGBBGBGBGGBGBGBBGBBBBGBBBBBGGBBBGBGGGGBGBGGB", "BGBGBBBBBGGGGBBGGBGGBGBGBBGGGGBGBBGBGGBGGGBGB", "GBBGGBGBGBGGBGBGBBBGGBBGGGBGBBGBBBGBGGBBBGBBGGBB", "BGGGBGGBBGBBBBBGGBBGGGGBGBGGGGGGBBBGBBBGBBBBGGBB", "BBBBGGBGBGBGBGGGBGGGGBGBBBBBBGGGGGBGGGGBGBBBBB", "GGGGGBGGBGGGBBGGGBGBGGBBBGBBBGBBBBGBGBBGBBGBGGBGG", "GGBGGGGBGGBBBGBGBBBBBBGBBGGBBBBGGGGBGGGBBGBGBBG", "BBBGBGBGBGBGGBBGBBGGGGBGGBGBGGGGGBBGGBBGGGBGBBGG"};
    int R = 4;
    int W = 5;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2139;
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    vector<string> predictions = {"BGBBGGGBBGBGGGBBGBBBBBBBBGGBGBGBBBGGGGBGBGBGGG", "BBGGBBBGGGGGBBGBGBGGBBGGGGGBBBGBGGBGBBBGGGGGBG", "BBBBBBGGGGBGGGBBGBBGBBGBBBGBBGGBGGGBBGBGGBBGBG", "BBGGGBGBBGGBBBBBGGBBGGGGBBGBGGBGGGGBBGBGGGGBB", "BGBGBBGGGBBBBGGBBGBGBGBGBGGBBGGBBBGGBGBGBGGGG", "GGBBGBGGGBGGBGGGBBBBBBBBBBGBGBBGBBBGGBBBGBBBGGGG", "BBBBBGBBGBBBBGBGBBBBBGBGBGGBBGBGGGGBBGGBGGGBGBBBG", "BBBBGGBGGBBBGBGBGBGBBGBBBGGGGBGBBBBBGGBBBBGBBBGGB", "GBGGGGGBBBGBBBGGBBBBBGBGBGGGGBBGGGBGBBGGBBGGB", "BGGGBGGGGBGGBBBGGBBBBBBGBGGBGBGBBGBGBBGBGGBGGGBG", "BBBGBBGGBGBBBBBGBGBBBBBBBBBBGGBBBBGGBBBBGGGBBBGGG", "GGGBGGGBBGGGGBBBGGGGGBGGGBGGGBGGBGBGBBBBGBGBGB", "GGGBBBBBBGGGBGBGGGGBGBBGBBGGBGGGBGGGBBGBBGBBBGGG", "GBBGGGGBBBBGBBGBGBGGGBGGBBBGBGGBGGGBBGGGGBBGG", "GBGBGBGBGBBBGGGGBGBBGBGGBBGGBGBGGGBGBBGBBBBBBBBGG", "BGBBGGGBBGGBGBGBGGBBBBBGGGBBBGBBBBGGBGGBBGGBGGG", "GGGGGBBBGBGGBBGGGGBBBBBBBGGBGGGGGGGBBBGBBBBGGGBBB", "BBBBGGGGGGGGBBGGBGGBGGBGGGBGGBBGBBBBGBGBBGGGGGB", "GGBGBBBBGBBBGGBBGBGGGBBGBBGGGBBBBBGGBGBBGGBBBB", "BGBBGGBBGGGBBBGBBBBGGGBBGBBGGBGBBBBGBGGBGBBGG", "GGBGBGGBGGGBGBGBGGGGGGGBGGGGGGGBGGBBGBBBGGGBGB", "BGBBBGGGBBGBBBBGGBBGBGBGGBBGBBBBBGGBGBGGGGGGG", "GBGBGBBGGBGGBGBGGBBBGGGGBBGGGBBBGGGBGGGBGBGBG", "GBBGGGBBGBBGGGGBBGGBBGGGGGBBGGGBGBGGBGBGGGGBGBGGG", "BBBGBBBBGBBBGBGGGGBBBBBGBBGBGGBGBBGBGGGBBBBBBGGBB", "BBBBBBBBGGGGGBBBBBGBGGBBGGGBBGGBGGBBGBGBGBBGG", "BGBGBGBGGBGGBGGBBGBBBBBGGBGBBGBGBBGBBGBBBBBBB", "BBBBBBBBBGGBGGGGBBBGBGBBBGGBBGGGGGBBBBBGGGGBBBGB", "GGGGGBBBBBGGBBBGGGBGBBGBGBGBBBGBBBBBBBGGGGBBBGGG", "BGBGGBGGBBGGBBBBBGGBGGBGBBGGGBBGGGBGGGBGGBGGGGG", "GBBGGBGGBBBBBBGGBGGGBBGGBGBGGGGBBGBGGGGBBBGBBBGG", "GGBGBGGBGBBGBBBBGGGGGBBGGBGGGBBGGGBBBGBBBBBGGB", "GGGBGBGBGGBGGGGBBGGBGBBBGGBBGBBBBBBBBBGBGBBGGGG", "BGGBBBGBBGBGGBGGBBBGBGGGBBBGBGBBGBGGBBBGBGBBGBBB", "GBBBGGBBGGBBBBBBBBGBGGBBBGGBGGBGGBBBBBGBBBGBGGB", "GBGBBGBBGBGGBBBBGBGGGGGBGGGGGBBGGGGGBBBGGBBBBBG", "BGBBGBGGGGGBBGGGBGGGGGBGGGGBGBGGGBBGBBBBGBGGBGB", "GGBBGBGGBBBGGGGBGBGGGGBGGGGGBGGGGGBGGBGBBBBGB", "BGBGBGGBBGBBGBBBBGBBBBBGBBGGGBGGGGGBBBGGBGBGGBG", "BBGGGGGGBBBBGBBBBGBGGGGBBGGBGGGGBBGGBBBBGGGGGBBB", "BGGGGBBGGGGBBBGGGGBGGGBGBBGBGGGGBGBBBGBGBGBGB", "GGBGGGBGGGBBGGGBBGGBBGGBGBGBBGGBGBGBGBBGGBGBG", "GBGGBBBBGGBBBGGGBGBGBGGGGGBGBGBBBBBGBBGBGBBGGB", "GGBGBGGGBGGGGGGGGBBBGBBGGGBGBGGBGBBGGGGBBGGBGG", "BGGBGGBBBGGBGBGBBBGBBGGGBBBGBGGGGBGGBGBBBGGGBGG", "BBBGGGBGBBGGGBGGBBGGGBGGBGGBGBBBBBBGBGGGGBGBGGG", "GGGGBBBBBBBGGGBGGGBGBBGGBBBGGBGBBGGGGBGBBGBBGGGGG"};
    int R = 7;
    int W = 3;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2121;
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    vector<string> predictions = {"GGBBGGBGBGGGGGGGGGGGGGBBGBGGGBGGBBBGGGBGGGGBB", "GBGBBBGBBGBBGGGBGGGGGBGGGBBBGGGGGBBGBGGBBGBBB", "BGGGBBBBGBBBGBBBGBGBBBGBBBBBBBBGBGGBBGGBGBGBGBBGB", "GBGBGGBBBBGGBGGBBGBBGBBGBGGBGGBBBBGGBBGBBGBBBBG", "GBGBGGGBBBBBGBGGBBBBBGBBGGGGBBGGGGGGBBGGBBGGGBGGB", "BGBGBGGGBGGBGBBBGGGBGGGGGGGBGGGBGGGGBBBGBGGGGBGGG", "BBBBBBGGGBBGGGGGBGGGGGGBBBGGGGBGGGBBBBGGGGGGBB", "GGBBGBGGGGGBBGGBBGBBBBGGBGGBBGBGBGBGBGGGBGBBBBG", "BGGBBGBBGBBBGBGGGBBGGGGBBGGBBGBGBBBBBGGBGGGBGGGGB", "GGGBGGBBGBBGBGGGGGGGBBGGBGBBBGGBBBGBGBGGBGGGB", "BGBGGGGGGGBBGBBBGGGBBGBGGGGGGGGGBBBGBGBGGBBBGGBG", "GGGBBGBBBGBGGGBGBBGBBBBGGGBGBGGGGBGBGGGBGGGBBGBBG", "BGGGGGBBGGBBGGGGGBGBGGBGGBGBBBBBGBGBGBBGBGBBG", "GGBGGGGGGBGBBGBGGBGBBGGGGBBGBGBGBBGBGGBBGBGGBB", "GBBGGGGGGBBGBBBBBBGBBBBGGBGBBBGGGGBGBBGGGBBBGG", "BGBBGGBGGGGBBBGBBBGBBBGBGBBGBBGBGGGGGBBGGGBGGBBBB", "GGGBGBGGBGGGBGGGBGBBBBGBBBGGGGGBBGGGGBGGGGBBG", "BGBGBGBGGBBBBGBBBGGBBBBGBGBGGBGBGBBBBBBBGGGBBBGGB", "BBGGBGBGGGGBBBBBBGGBGBGBBBGGBGBBBBBBGGBGBBBGB", "BBGBGGBBBGGBBGGBGBGGGBBGGBGBBBGBBGBGBBBBBGGBBBBBG", "GBGGBBGBBGGGGBBGGBGGGBBGBBBBGGGBGGGBBBGBBBGGGGGBB", "BBBBBBBGBBGGBBBGGBBBBBBGGGBGGBBBBBBBBBBBBBGBB", "BBBGGGGGBGBBGBBBGBBBGBBBBBBGGBGBBGBBGBBBBGGGB", "BGGGBBGBGBBBGGGGGBGBBGBGGBGGBBBGGBBGBGGGGGBGBGB", "BGBBBBGBGGGGBGGBBBGGBBBGBGBBBBBBGBGBBGBBGGBGGBBG", "BBGGBGGBGGGGGBGGBBBBGBGGBGGGBBBGGBBBGGGBGBBBBGB", "BBBBBGGGBBGGGBGBGBGBGGGGBBGGBGGGBBBGBBBGGGBBGB", "BBBBGGBGBGGGGGGGGGGGGGBBGGGGGGBBBBGGBBBBBGBBBG", "GGBBGBBBBBBBGGBGBBBGBBBGGBBGBGGBBBBBBBGBBGBBGBGB", "GBBGBGGGGBBGBGGGBGGBGGBBGGBGBGBGGGBGGBGGBBGGG", "GBGBBGGBGGGBBGBBBGGBBBGBGBBGBGGGGGGBBGGBGBBGB", "BGGBBBBGBGGGBGBGGBGBGGGBGGBBBBBBBGGBGGBGGGBBBBBGB", "BGBGGGGBGGBBGGGGBGGBGBGGGGBBBGBBGBBBGBGGBGGBBBB", "GBGBGGBGGGBBBGBBBBGBBGBBBGBGBBGGGGGBGGBBGBGBBBBG", "BGBBGGBBGGBGGGBGBBGGGGGBBGGBBBBGGBGGBGGGBBGBGGBG", "BBBGBBGBGGGBGBGBGGBGGBGGGBBGGBGGBGBBBGGBBGBGBB", "GGGGBGGBBBGGGGBGGBBGBGGGGGBGBGGGGGGGBBGBBGGGGBBBG", "BGGBBBBGGGBBGBGGGGGBGGGGGBGBGGGGGBBBGGGBGGGGGGBGG", "BGGGBBBBGBGGBGBBBGBBGBBGBGBBBBGBGBGGGBGGBGBBGBB", "GBGGGGGBGGGGBBBGGBBBGGGGBBGBGGGGBBBBBBBBGBBGGGB", "BBGBBGBGGGGGGBGGGBGGBBBGGBBGGGBGGGBGGGBBBBBBBGGB", "GBBBGGGGGBBGGBGGBGGBBGBBGGGGBGBBGBGGGBBBGGBGB", "BGBGBBGBGGBBBGBBGBBBBGGGBBGBGGGGGGBGGBGGBBBBBBGBB", "GBGBBGBGGGGGBGBBGBGGBGBGGBGGBGBGGGGGBGBGBBGBGG", "BBBBGGGGGGGGGGBBBBBBBGGGBGBBGBBGBGGBGBGBBBBBBB", "BGBGBBGGBBBGBGBGBGGBGGBGBGGGGBGGBBGGBBBGGGBGGB", "BBBBBBBGGGGBBGGBGGGBGGGBBGBGGGGBGGGGGGGGBBGBGBBB", "GGGGBBGGGGGBGBBGGGGGGBGBBGBBBGBGBGBBBBGBBGBGGB"};
    int R = 5;
    int W = 1;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 1866;
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    vector<string> predictions = {"BBBBGBBGGBGBGBGBBBBGBGBBBBBBGGBBBGGGGBBBGGGGBB", "BBBBBBGGGGGGBGBGBGGGGBBGGBGBGGBBGBBGBGBBGBGBGGBBG", "GGBGGBGGBBBGGBBGGBBBGBBBGBBGBGBBBGBBGGGGGGGBGBGBB", "BBGBGGGBBGGBGBBBBBBGGGGGBGBGGBGGGGBBGGGBGBGBG", "BBGBGBBGGGGGGGGGGBBGGGGBBGBBGGGGGBBBBBBGBBBBG", "GGBGGGGBBBBGGGGGBGGGGGBGGGBGBGBBBBBGGBGBBGGGG", "GBGBBGBBBBBBBGBBBGGGGBBGGGGGBBGBGGBBGBGGGBGGGGB", "GBGBBGBBBBGGGBBGBBBBBGGBGBGBGGBBBBGBGGBGGGGBBBG", "BBBGGGGBGBBBGBGBBGGBBBBGBGBGGGBGGGGBGBGBGGGGBBG", "BBBBGBBBGGGGBBBGGBBBBGBBGBBGGGGGGBBBBGBGBGGGGB", "BBBBBBBBBGBGBGBBBBGGGGBBBGGBGBGGGBGBBBGGGGBGBBBBB", "GGGGGGBGBGBBBBBGBGBBBBBBBBGBGBGBGGBBBGBBBBGBGG", "GGBGGBBBBBBGBGBBBGGBGGGGGBBBBGBGGBGGGBBBGGBGBB", "BGGGBBBBBBBGBGBGGGBGBBBGGGGGBGGGGBGBGGGGGBBBBGG", "BBBGGBBBGBBBGGBGBGGGBGBBBGBBGGBBBGGGGGGBBGGBBBGB", "GBGBGBBBBBBBGGBBBBBGBBGBGGGGBBBGGGGGGBGBGGBGBGGGB", "GBGBGGGBGGGBBBGGBBBGBGGBGBBBGGGBGBGBGGGGGBBBGB", "GGGGGGGGGBBGGGGBBBGBBGGGGGGGBBBBGGBBBGGGGGGBGG", "GBBGBBBBBGGBBBGGGGBGBBBGBBGGGBGGBBBBBGBGGBBBGBG", "BGGBGBBGGGGGBGBBBBBBBGGBBGBBBGBBGGBBBGBGGBGGGBB", "BGBGGGGBGBBBBBGBBBGGGGBGGBBBGBBGGBGBGBBBGGBBBG", "BBBBGBBBBBGGBBBGGBGGBBBBGGGGBGGBBBGGGBGBBBGGBBB", "GBBBGGBGBGGBGGGGGBBGBBBBGGGBGGBBGGBGBBGGGGBBBBBGB", "GGBBBGBBGBGBGGGBGBGBGBGGGBGBBBBBBGBGBBBBGBBBBBGBB", "BGBGGBBBBGBBBGGGBGGBGGGBBBBBGGGBGGBGGGBGBGBGBB", "GBGGBGBBGGGBGGBGGBBBGBGGBBGBGBGGBBGGGGBGBBBGGGBGB", "GGGBBGGGBGBGBBGGBGGBGGGGBBGGGBGBBGBBBBBBBGBGBG", "GBBGGGGBGGBGGGBBGGGGBGBBBGBGBBGGBGBGGGBBBGGGBGGB", "BGGGGBGBBBGBBGGGBBGBGBBGBGGGBBBBBGGBBGGGBBGBBBBB", "BGBGBGBBGBGGBBBBGBBGGGGBGGBBBBGGGGGBBGBBBGGGGGBG", "GBBGBGBGBBGBBBBGGBBBGGGGBGGBBGGGGGGBGGGGGGGBBB", "BBGBGGGGBBBGGGBBBGBGBBGGBBGBBGBBBBGBBGBGBGGBBBBG", "GGGGGGGGBBGBGGGGGBGGBBBBGBBBGGGGGBBGBBGGGBGBGG", "GBBBBGBGGBBBBBBBGGBBGGGGBBGBBBBBGBBGBGBGGGBGGGG", "GBBGBBBBBGGBGGBBGGBBBBBGGBBGGBBGBBBGBGBGBBGGGB", "GGGGBBGGGBBGBGGBGGBBBGGGGBGGGGGBBGBBGBGBBBGGGBGGB", "GBBGBBGGBGBBGBBBGGGGGGGGGGGGBBBGBGGBGBBBBGBGBBBBB", "BGGBGBGBBBGBGBGGGBBBGBBBGBBGBGBBBBGGBGBBBGGBB", "BGBGGBGBGBGBGBBBGBGBBBBBGBBBGBGGBBBBGBGBGGGGBBG", "GGBGGGBGBGBBGBGGBGGGBGGBBBBBGBBBBGGBGGGGGBBGGGG", "GBBBBGGBBGBBBGBGBGGBGBBGGBBBGGBGGGBBBGGBGGBBGGG", "GBBBBBBBBBGGBBGBGBGGBGBGBBBGGGGGGBGGBGBBBBBBBG", "GBBBGBGGGBGBGGBBBBGBBGBBGBBGBBBGBBGBGBGGGGGGGGG", "GBBBGBBGBBGGGGGBGGGBBBGGBGBBGGBGGGGGBGGBGBGGGBBGB", "BGGGGBGGGBGBBBGGGBBGGGGGBGBGGBBBGBBBGBBGGBGBBBBB", "BBGBBGGBGGGBBGBGGBGGBBGGGBBBGBBGGBBGBGBGBBBGGGBBB", "GBGBGBGGGGBBGGGGBBBGGBBBBBGBGBBGBGBGBBGBBGBBGB", "GGBBGBGGBGBGGBGBGGGGGBGGBBGBGBGGBGBGBBBGBGGGBG"};
    int R = 12;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2079;
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    vector<string> predictions = {"BGGGGGGBBBGBGBGGGGGBBGGBBGGGGBBBGBBGGBGBGBGGGGG", "BBGBGBGBBGGBGGBBBGBBGBBBBGGGBGGBGGBGBBBGGBBBGG", "BBBBGBGGBBGBBBBGBGGBGBBBGGBBGGBGGGGGGGGBBGGGGG", "BBGBGBBBGGGBGGGGBBBBBGBGGBGGBGGGBBBBBGGGBBGGB", "GBBGBBBGBGGBBGBGBGGGBBBGBBGBGBBBGGBGGBBGGGGBBBB", "BBGBGBBGBBGGGGBGGGBBGBBGGBBBBGGGBGBBGBGGBGBBGG", "BGBBBGGGGBBBBGBBGBGGBGGGGGBGGBGGGBGGGBGGGGBBGBBG", "BBBGBGBGGGGGGGGGBGBBBBBBGGGBBBBGGGBBGBGGBGGBGGB", "BGGBBBGBGBBBBBBGBGGGBGBBBBGBBBGGGBBGBBGGBBGGG", "GGBBGGBGGBBBGBGBBBBGGBGGGBBGBBGBGGBGBBBGBBGBBGGBG", "BGGGGGBBBGGBBGBBGGGGGBBBGGBGBGBBBBGBBGGBGGBGB", "BBGBBBGGBGBBGGGBBBGGGGGGGGBGGBGBBBBGBGGBBBGBGGBBG", "GBBGBGBBBGBBGBBBGGGBGGBGBBBGBGBBGBGGGBGBGGGGGGBB", "GGGGGGGGBGGBGGGGBBBBBGBBGGGBBGGBBGGGGGGGBBGGGB", "BGBGBBGGGBBBBGGBBGGGGGBGGBGBGBGGBBBBGBGGGGBBGBBG", "GBBGBGGBGGGGBBGGBBGGGGBGGGGBBBBBGGBBGBBGGGBGB", "GBGGGGGGGBGGGBBBBGGBBBBBBGGBBGBBGGGBGGBBBBGGGBBGG", "BGGGGBBBBBBGBBGGGBGGGGBBGBBGGGGGBGGGGGGGBBBGB", "GBGBBBBGBBBGGBBGBGGGGBBBGGGGBGBBBGBBBBBGGBGBBBGGB", "BGGBGBGGGGGBBBBBGBBBGGGGGBBGBGGBBGBGGBGBBBGGBBB", "GBBBBGBGGBGBGBGGGBGGGGBBBBBBBGGGBBBBBBGBBBGBBBBB", "GBGGBGBBBBBGGGGBBGGBGGBBGGBGBBGBBBBGBGBGGBBGGG", "GBGBBBBBBGBBGBBBBGBBGBGBGBBBGGBBBBGGGGBGBBBBG", "GGGBBGBGGGBBGGGGBBBBBBBGBGBBGBGGGGBBBGBGGBGBGBG", "BGGGGGGBGGGGGBGGBGBGGBGGGBBGGGGGGBGBBBGBGBGBBGBG", "BBBGGGGGBBBGGGGGGGBBGGGGBBBBGGGBBGGGGGBGBGBBGGG", "BBGGBBGGGGGBBGGGGGGGGGBGBGGBGGGBBGGGGBBGBBGGG", "GBBBGGGBBGBGBBGBBBBGBGGGGBGBGGBBGBBGGBBGGGBGGG", "BBBBBGBGGBGGGBGGBGGGBBGBBGBGBGBGBBBGBGBGGBBBBG", "BGBBBGGGGGGGBGGBBBBGGBBBBGBGBBBGBBBGGGBBBBGGG", "BGGGGBGGGBGGGBGBBBGBBGGBGBGBGGGGGBGGGGBGGGBBGB", "GBGGGBBGBBGGGGBGGGBBGGBGGGGBBGGBGBBBBGBGBGBGGBG", "BGGBGBGGGBBBBGBBBGGBBGGBGGGGGBBGBGBBBGGBGGBGGBGB", "BBGBGGGBGGGBGGBBBGGGBGGGGBGBBGGGBBBBBGBBBGGGBBB", "BGBBGBGGGBBBGGGGGGBGGGGGBGBBGBGBBBBGGBGGBBBBG", "GGBGGGGBBGGBGBGGGBGGBGBBBGBBGBBBBBGGBGGGBGGGGBGB", "BGGGBBBBBBBGGBGGGBGBBBGBBBGGBBBBBGBGBBBGGBBBB", "BGGGGGBBBGBBGBBBGGBBGBBGBGBGGBBGBGGGBBBBGGBGB", "BGGGBGGBGGGGBBBGBGGBBGGGGBBBBBGBBBGGGGBGBGBGGGB", "GGGGGBBGGGBGGBBGBGGGGGGBGBGBGGGBGGBGGGBGBGBGBB", "BGGBBGBGGGBBGBBBGGBBBBBGGBBGGGBBGGBBGBBBGGBBGGGBG", "BGBBBGBGGBGBGBBGBGGBGGGGGGBGBBGBGBGGBBGBBBBBB", "BBGGGGGBBGGGBBBBGBGGBBGGBBBBBBGBGGGBGGBBBBGGGGGB", "GGGBBBGGBBBBGGBBGGGBGGBGGBGBGGBBGGGGBBBBBGBGBBBGG", "BGGBBBGGBBGGGGBGGGBGGBGBBGGBGBBGGBGGBGGGGGBBB", "GGGGBBBGBGBBGGBGBBBBGBGGGBBBGGGBGBGBGGGBBBBBGB"};
    int R = 1;
    int W = 3;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 1693;
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    vector<string> predictions = {"BGBBBGGBGGGBBGGBBGBGGGGGGGGBGBBGBBBBBGGGBGBBBGG", "BBGGGBBBGGGBBGBBGGBGGGBBGBGBBBBGBGGGBGBGGBGGBBBGG", "BBGBBGBGBBBBBGBBGGBGGBBBGGGGGBBBBGGGBGBGGBGBB", "BGGGGGBGGBGGBBBGBBGGBBGGBBGGGGGBGGGGBBGGBBBGB", "BGGBBBBBGGGGBBBBGBBGBGGBBGGGBGGGGGGGGGGBBGGBGG", "BGBGGBGGBBBBGBGBBGBBGBBBGBBGBBGBBBGBBGGBBGBGB", "GBGGGBBBGGBGGGBBGBGBBBBBGGBBGGGBGBGBBBGGBBGGG", "GBGGBGBBGGBBBGBBGBBGBGBGGGBGGGBBBBGGGBGBGBBGB", "GBBBBGBBGGBGGBBGGBBGGBGGBBGGBGBBBGBGBGGBBBBGGGG", "BBBBBBGBBBGBGGBBBGGGBBBGGGBBGBBBBGGBGGBBGBBGB", "BBGBGGBBBGBBBGGBBGGBGBGGGBGBBBBBGBBGBBBGBGBGBBBB", "GGBGBBGGBBGGGGGBGGGGBBBGGBBGGGBGGGBBGBBBBBGBGBBGB", "GGGBGBBGBBBGBBBBGBBGBBGGBBGGBBBGBBBBGBGBBGGGBBB", "GGBGBBGBBBBGGBGBGBGGBGGGBBBGGGGBBBBBBBBGBGGGG", "BBGBBGBGGGBBBGBBBGGBBBBGBGBGBGGBBGGGGGGBGBGGBBBBG", "BBGGGBGBGGBGGGBBGBBBBGBBBBBBBBBGBGGBGBGBBBBBBBG", "BBGGGBGGGGGBGGBGGBGBGBBGGGGGBGBBBBGGGBBBBBBGGG", "GGGGGBBGBGBGGBBBGGBBBBBBGBGBBGGGBGGGBGGBGBBBGG", "BGBBGGBGGGGGGBGBGGBGGBGGGGGGGBGGGGGGGBBGBGBBBGG", "GGGBGBGGGBGGGGGBGBBBBBGBGBBBBGGGBGBBGBGBGGGGGGGG", "GGGGGBBBGBBBBGBBBGGGBGGGBBGGGBGGGGGBGBGBBBGBGG", "GGBBGBGBBGBBGBBBBGGGBBGGBGGBBBGGBBGGBBBGGBBGBBG", "GGBGGBBGGGBBBGBGBBGGGBBBGGGBBBGBBBBGBGBGGBGBGBGG", "GGBGGGBGGBGBGBGGBBBGBBBGGBBGGGBGGGBBGGGBBBBGGGBGB", "GBBBBGBBBGBBGGBGGGBGGGBGGGBGBBBGBBGGGGBGBBBGGGGB", "GBBGGBBGGGBGBBBBGBGBBBBGBGBGGGBBGGBGGBGBGGGBGBGG", "GGBBBBGBBGGBBBGGGGGBBBBBBBGGBBBGGBGBBGGGGGBGB", "BGGGGGGBGBBBBBBGBBGBBGGBBBGGGGBGBGBBBGGBBBBGGGB", "BGBBGGBGGBGBGGBBBGBBGGGBGBBGBBBBBGBGGBBGGBBBBBGGB", "BBGGBGGBGGBBBGGGGBBGBGGGBGGBBBBBGGBBGBGGGGBGGBBG", "BBGBBGGBBGGGBBGBGBGBBGGGBGGBBGBGBBBBGBBBGBBBGGBBB", "BGGGGBGBBBBBBGGBGBGGBBGGBBGGGGGGBBGGBGBGBBBBBG", "BBBBGGBGBGGGGGGBGBBGGGBGBGBGGBBGGBGGBBGGGBGBGB", "GBBGBGBGGGGBGGBBGBBBGBBGBGGBBGBBBGBGGGBBBBBBB", "GGGGBBGBGGBGGBBBBGBBGBGGBBBGBGGGBGBGBGBGGGBBGGB", "BBBBBBBBGBBBBBGGGGGBBBBBGBBBBBBGGGGGGGBBGGBBBB", "BGBGGGBBBGBBGBBBBGGGGGBBGGGBGGGBGBGGBBGBBBBBG", "GGBGBGGBBGBGBGGBBGGBBBGGBBBGBBGBBBBBBGBGGBBBGBBB", "GBBGBGGBGGGBGBBGBGBBGGGGGGBGGGBBBBGBBGBGGGBBGBG", "BGGGBGBBBBBBBGGGBGGGGGGBBBBBGBBBGGGBGBBBGGBGBBBBG", "BBBGBBGGGBBGBGGGGGBBBGGGBGBGBGGGGBBBGBBBBBBBGB", "BBBBBGBGGGGBBBGBGGGGBBGBGGBGGGGBGBGGGBGBGGBBB", "BGBBBBBGGGGBGBBGBGBBGGGGGGGGGBBGGBGBGBBBBBBBBBGBB", "BGBGBBGGGGGBBBBGBGBGGBBBGBGGGGBBGBBGGGBGGGGGBB", "BBBBBBBGGGGBGBBBGGGGGGGBGGBBBGBGGBBBBBBGGBGBB", "GGGGGBGBGGGGGGBBBBGBGGBBBGBGBBGGBBGGGBBBBBBGG"};
    int R = 5;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 1963;
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    vector<string> predictions = {"GBBGBBGGBBGBBBBBGGGGBGBGBBBBBBGBGGGBGGBBGBGGBG", "GGGBBGBGBBBBGBBBGGGGGBBBGBGBGBBGBBGBBBGBGGBBG", "BGBBGBGGBBBBGBBBGGGGGBBBGGBBGBGGBGBBBBGGGGBBGB", "BGBGGGBBBGGBGBBBBGGBBGGGBBGGBBBGBBGBBGGBBBGGGBBGG", "GGBGGBGBGGGGBGGGGBGGGGGGBGBGGBBGGGGGGBBGBGBBB", "BGBGBGGGGBGGGGGGBGBGGGGGBGBGBGGBBGGGBBBBBBGBGGG", "BBBBBGGBGBBBBGGBGGBGGBGGBGGGBBGGGBBBBGGGGBBBBGB", "GBGGGGBGBBGGBBGBGGGGBGBGGBGBBBGBBGGBBBBBBBBBGGB", "GBGBGBGGGGGBBBGBGGBGGGBBGBBBBBGBBGGBBGGBBBBBBBGBG", "GBBGGGGGGGGBBBBBBBGBBGGGGGBBGGBGBGGBGBBGGGBGB", "BBBBGGGGBBBGGBGBGGGBGGBGGBBBBGBGGBGGBGGBGGGBBB", "BBGBGBGBGBBBBGGGGBGGGGBGBGBBBBBGGGBBBBGGGGGBB", "GBGBBBGGGBBGBGBBGBGGBBBBBGBGBBGGGBGBGGBGBGGBBBGG", "BBGGBBGBBGGBGBBBBBBGGGBBBBGBGBGGGGGBBGGBBBBGGB", "GBGGGGGGBBBGBBBBGBGBGGGBGBGGBGBBGGGGGGGGGGBGGBGGB", "GBBGGBBGBBBBGBBGGGGBBBGGGBBGBBGBGBBGGGBGGBBBBBB", "BBGGBBBBGGBGBGBBGBGGBGBBGBBGGBBBGBBBGBBGBBGBGBBG", "GBBGGGBBGGGBBGGBBGBGBBGBGBBBGBBGBBBBGBBGGBBBGB", "GBBGBBBGGGGBBGBBBBBGBBGBGGGGGGGGGBGGBGGGGBBBBG", "GGBGBGGBGGBGGGGGBBGBGBGBGGGBGBBBGBBBGBGBBGBBGGGGG", "GGBGBGBGBGBGGBGGBGGBBBGBBBGBBBBBGBGGBBBGGGBBGB", "BBBBGBGGBBGGGBGGGGBGBBGBGGGGGBBGGGBBGBGGBGGGBBBBG", "GBBBBBBBGBBGBGGGGBGGBBBBBGBBGBGGGGGBGGGGGGBBBGB", "BBGBGGGBBBBGBGBGBGGGGGBBBGGBGBGBBGBGBBGGBBBGGGGBG", "BBBGBBGBGBBGGGBBBBGGBBGGGGBBBBGBBBGBGGGGGBBBB", "GBBGGBBGBGGGBBBGGGGBGBGGBGBBGBGGGGGGBGGGGGGGBGB", "BBGGGBBBGGGBGGBGBGGBBGGBGGBBGGBGGBGGBBGGGBBGBBBB", "GGBBGBGGBBBBGBBBBBBBBBGBBGBGBGBBGBGBBGBBBBBBGG", "GBBGGBGBGGGGGBGGBGGBGGBGGBBGGGBGGBGBBBBBGGGGBGBGB", "GGBGBBGGGGBGBBGBGBBBBBBGBGBBBBGGGGGBBGGGBGBGB", "GGGBBGBBBBBBGGBBBBBBGGGBGBBBGBGBBGBGBGBBGGGBB", "GBBBBBBGBBGBBBGGBGBBGGGGGGBBBBBGBBGGGGGGBBBGBBGBB", "GBGGBGBBGGBGGGGBGBGBGBBBGGGBGBGBGBBBBGGBBBGBBB", "GGGBBBBGBBGGGGGBBGGGGGGBGBBGBBGGBGGBBGBBGBBGBGGG", "GGBBGGBBGBBBGGBGGBBGGGGGBGBGGGGBGBGBBBGGGBBBGBBGB", "GBBGBGBBGGBGBGBGGBGGBBGBGBGBBGGGGGGBBGBBBBBGBGG", "GGBGGGGBBBGGGBBGBBGBGGGGBGGBBBGGBBGGGGBBGGGGB", "BGGGGGBBGBGGBGGBGBGBBBBBBGBBGBGBBBGBBBGBGBBGBBB", "GBGGBGBBBBGGBBBBBBBGGBBBBBGGBBGBBGGBBGBBGGGGGGBG", "BBGBBGGBGGBGBBGGGBBGBBBBGGGBGGBBBBBGGBBGBBBBBG", "GBBBGGGBGGGBGGBBBBGBBBGBBGBGBBGBBGGGGBGBBGGGBG", "BBGBGBBBGBBBGBGGGGGGGBGGGBGBBBBBBGGGGGGBBGGBGG", "BBBGBBGBGGGBGGBBGGBGBGBGGBBBBBBGBGBBBBBBBBGGGGGB", "BGBBGGGBGBBBGGBBBBBBBBBBGGGGBBBBBBBBBBBGGBBGGBB", "GGGGBBBGGBGBGBBBGGBBBGBGGBGGGGGBBGBBGGGGBGBBG", "BBBGBBBBGGBGGGGGBBGBGGBBGGBGGGGBGBBBGBBGBGBGB", "GBGGBBGGGBBBGBBGBBGGBGBGBGGGGBGGGGBGBGBBGBGGG"};
    int R = 2;
    int W = 5;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2029;
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    vector<string> predictions = {"GBBGGBGBGGBGGBBGBBBGBBBGGBGBGBGGBGGGGBBGBGBBG", "BGGBGGGBBGBBGBBGGGBBGGBGGGBBGGGBBBBGBGGGBGBBG", "GGGGGBGBBBGBGGGGBGBGBGBGBGBBGGBBGGBBBBGGGGGGGGBGG", "GGBGBBGBBGBGGGBBGBBGGBGBGBGGGBBGBBGBGGBGGGBBGGB", "BBGGGBGBGGGBGGGGBGBBBGBGBBBBGGGBGGGBGGGBBBBBGGG", "GBBGGBBBGGBGGBGBGGGGBGGBGGBBGBBBGBGBBBGGBGBGBGG", "GBGBBGGGGGGGBBBGBBBGGBBGGBBGBBGGGBBGBBBGGBGGGG", "GBBGBGGGGGBGGBBGBGGGGBGBBGGBGGBBGBBBBBGGBBGBGB", "GGGBGGBBGGBBBGGBGGBBBGBBGGGGBBBBGGGGGBBBBBGBGGB", "GGGGBBBBBBBGGBBGGGGGGBGBGBGBGGBGBBGGGGGBGBBGBGBBG", "GBGGGGGGBBBGGGGGGBGGGGGBGBGBBGGGBGGGBGBBGGGGGBBGG", "BGBGGBBGGBBGGGBBBGGGBBBBGBGBGBBGBGBGBBBGBGBBGGB", "GGGBGGGGBBBGBBBBBBGBBGBBGGGBGGGBBBGGBBBBGBGBGBGG", "BBBGBBBBGBGGBGBGGBGGBGGGBGGBBBGGBGGGGGGBGGBGG", "GGBBBBGBGGGGGGBGGGGGBGBGBBGBBBBGGBGGGBBBBBBBGGGG", "BGGBGGBGBGGGBBGGGGGGGBBGBGGGGBBBBGGBGBBBBBBBG", "BGBBBGBGBBGBGBGBBBGGGBBBGGBGGBBBBBGGGGGGGBBBBGBBG", "BBBBBBBBGGBGBBBGGBGBGGGBBBGBBBGBBBBBGGGGBGGGGGG", "BGGBGBBBGBBBGBBGBBBBGGBGGGGBBGGGBGGGGGGBBBGBBBBGG", "BBBGBGGBGGGBBBGGGGBGBGGGBGGBBGGGGBGBGBGBBGBBGBGB", "GGBGBBGGBGGBBBGBBGGGGBGBGBGBGGGBBBGGBGGBBBGGBGBGB", "GBBGGBBGBBBGGBGGBBBGBGGGGBBBBBGGBGBGGGGGGGGBBBBBB", "GBGBGBBGBBGGBBGGGGGGGGGBGBGBGBGGGGBGBGBGBBBBGBBBG", "BBGGGBBGBBBGGBGGGBGGGBBBGBBGBBGBGBGGBBGBGGBGGGG", "GGGBGBGGBGBBBGBGBGBGBGGGBBGBGGGGGBGBBGGBBBBBGBBBB", "BGGBGBGGGGBGGGBBBBGGGGBBBGBGBBBBGGGGBBGGGBGGGGBBG", "BBGBGBGGGBGGBBBBGGGBGGGBBBGGBBBGBGGGGGBBBBGGGGGB", "GGGGGGBGBBBGBBGBGBBBBBGBBGGGGBBGBGGBGBBGBGGGGBBBG", "GBBGBBBBGGBGGGBBBBBBBGBGGGGGGBBBGBGBGBBBBBBGG", "GBBGBGBBGBGGGGGBGGGBBGBBBGBBBGBBGBGBGBGBGBGBGB", "BBBGGBBBBBBBGGGBGGGBBBBGBGGBGGGBGGBBBGBGBGBGGBGGG", "GBBGBGGGGBGGGGGBBBBBBGGBGBGGBGBBGGGBBBGGBGBBBGGG", "BBGGBGGBBGGGBBBGGBGGGBGGGGBGGBGBGGBGBGBBGBGGBBGB", "GBGGGGBBGGBGBBBGGBBBGBGBGGGGGBBBBGBGBBGGGGBGBBG", "BBBGBGBBBBGGBGGBGBGBGGGBGGGBGGBBGBGBBGGBGBGBBBBB", "GBBGBBGBGGGGGBGBBBGGGGBGGBBBBGBBGGGGBBBGGGGGGBGB", "GBGGGGGBBGGBGBBGBBGBGGGBGBBBGBGBGBGGGBGBBGGBBGBBB", "BGBGGGBGBBBBGGBGBGBBGBGGGBBGGBGGGBGBGBBGGBGBGBG", "BBBGBGBBBGBBBBGBGGBBGBBGBGBBBBGBGBBBGGBBBGGBBBG", "BBGGGBBBGBBBGBBBGBGBBBGBGBBBBBBGBBGGGBBBGBGGB", "BGBGBBGGGGBBGGGGGGBGBGGBBGBBGGGGBBGBGBBBBGBGBBGG", "GGGGGGBGBBGBGBGBGBGBGGGGBBBBBBGBBGBBGBBGGGGGGBGB", "BGGGGBGGGGBBBBBGGBGBGGBBBBBBGBBBGGGGBGGGBBGBBGB", "GGBBGGGGBBBGBBBGBGGBGBBGGBGBGGBBGBGGGGGBGGGGBB", "GGBGBGGBGGGGGBBGGGBBBGGGGGBGGGGGBBGBBBBGGBGBBB", "GGBGBBGBGGGGBBBBGGGGBGGGGGGBGGBBBBGGGGBGBGGBBBGB", "GBGBBBGGBBGGGGGBGBGGGGBGGGGGBBBBGBBBGBBGBBBBG", "GGGBGGBGBGGBBGGBGGBBGBBGGBBBBBGBGBBGBGGGGGBGGG", "GBGBBGBBBGGGBBGGBGGGBBBBGGBBBGGBBGGBGGGBGGGBB"};
    int R = 3;
    int W = 7;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2222;
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    vector<string> predictions = {"GBBGGGGBBGBBBGGGBGBBBGBGGBGGBGGGBBGGBGBGGGGBBBGGBB", "GGBBGBBBBBGBGGGGGGGBBBBBBBGGGGBGGGBGBBGBBBBBGBBGGB", "GBBGGGGGBBBGBBGGGBBBBBGGBBGGGGGGBBBGBGGGGBBBBGGBGG", "GBBBGGGGBBBGBGBBGBBBGGBGGGGGBBBGBGGBBGBBBBGBBGGGGG", "BGBBBGGBGBGGBGGGGBGBGGGGGBBGBGGGBBBGGGBGBBGGBGBBGB", "BBGGBGBBGGBGGGBGBBBGBGBGGBGBGBGGGBBBBBGBGBGBBBBBGB", "BGGGGGGGBBBBGGGGGBGBBBBBGGBGBBGGBBBBGBBGBBGBGBBBGB", "GBBGGGBGBGGGBGGBGBBBBGBGGBGBBBGBBGGGGGBBBBGBBGGBBB", "GGGBGGBGGBBBGGGBGBBBGBBGBBBGBGGGBBGBGGBGBGGBBBBBGB", "BGGBBGBBGGBBBGGBBBGGGBBGBGBGGBBBBBBGGBBGGBBBGGGGGB", "BBBBBGBBGGGGGBBBGGBBBBBBGBGBGGBBGBBGBBBBGBGGGGGGBG", "BGBGBBGGGGGBBBBGBGBBGGBBBBBGBGGBGGGGBGGGGGBGBBGBGB", "GBBBBBGGGGGBBGBGBGBBBBBBBGGGBGGBGGGBBBBBGGBGBBGBGB", "BBGGGGGGBBGGBGBGGGGBBGGGBGGGGGGGBBBGGBGBGGGBGGBBGG", "GBGBBBGGGBGGGGBGBBBGGGBBGBGBGBBGGBGGGBBGGBBGGGBBBG", "BGBGGGBGBGGBGGBBBGBBGGBBGGGBGBBGGBGBBGGGBBGGBBGBGG", "GGBGGGGBBGBBBBGGGGGBGGGBBGGBBBGGBBGBGGGGGBBGBGGBBG", "GGGGGBBBBBBBGGBBBGBBGGBBGBBBBBGGBGBBBGGGBGGGBGBBBG", "BGGGGBBBBGBBGGBBBGBBGBBBBGGBBGBBGBGGBBGBGBGGGBBGBG", "GBGGBBGBGBBGGGGBBGGBGGGGBGBGBGBGGBGGGBGGGBBBBBGBGB", "GBBBBBGGGGBBGBGBGBBGGBBGBGBBGGGBGBBBGGGGBBGBGBBBBG", "BGGBBGBGBGBBGGGBGGGBGBGBBGGGGBGGGGGGBGGBBBGBGBBGBG", "BGBGGGGBGGBGBGBGGGGGBBGBGBBBGBBBGGBBBBBBBBGGGBGGBG", "BGGGBGGBBBBBGBGGGBGGBBBBBBBGBGBGGBGGGGGBGGBGGBBBBG", "BGGBBGGBGGBBBBBBBBGBGGGGBGGBGGBGGBGGBBGBGBGBGBBBGB", "BBBBBGGBGBBGGGGBGGGBBGGGBBBBBGBBGBBBGGGGGBGBBGBBBG", "GBGGBGGGGGBGGBGGBBBBBBGBBBGGGBBGGBBGBBGBBBGBBBBGGG", "GGGGGBGGGBBBBBGBBGGBGBGBBGBGBBBGGGBBGGBGGBBBBBGBBB", "BGGBBGBGBGBGGBGBGGBGGGBGGGBBBBGGGGBBBGBGGGBBBBGGBB", "GBGGBBGBGGBBGBGBGGBBBGBBGBGBBBGGGGGGBGGBBBBBBBBBBB", "BGGGGBGGGGGGBBBGBGBBGBGGGGBGGBGGGBGGBBGGBBBGGBBBGB", "BGBBGBBBGGGBGGBBBGBBBGBGGGBBGBGBBBGBBBGBBGBBGGGGGB", "GGGBGGBBBBBGBBGBGBGBBGGGGGBGGBGBGGBBGGGGGBGGBGGGBB", "BBBGGBBBGGGBGGGBBGBBBGBGGGGBBBGBGBGGGBGGBBBBBBBGGG", "BGGBGBBBBGBBGGBGGGGGBBGBGBGGBBGGGBGBGBGGGBGGGGBGBG", "BGGBGGGBGGBGBGGBGBGBGGGBGGGBGGBBBGGBGBBBGGBGGGGBGB", "GBBGGBGGBGBGBGBBBGBGBBBGGGGBGGGBBGGGBBBGGBGBBBBBBG", "GGGGGGGGBGGBGBBBBBBGBBGGBBBGBBBBGBBBGGBBBGGGBBBBGG", "BBGGGGGGGBGGBBGBGBBBGBBGBBBGGGBGBGGBGGGBBBBGGBBBGB", "GGGGBGGBBGBBGGGGBBBBBGBGGBBGGGBBGBBGGGGBBGBBBBGGGG", "GBGBBGBGGBGGBBGBGBGGBBGGBGBBBBGGBBBGBBGGBGBGBBGBBG", "BBGGBBBGBGGGBBGGBGGBBBGBGBGBGGGBGGGBBBBGGBBGGBBBGG", "BBBBGBBGGBGBBBBGGBBBBBGGGGBBGBBBBGGBGBBGGBBBBGGBBB", "GGBBGGBBBGBBBGBGGGBGGGBGBGGBBBBGGGGGBBGBBGGBBGGGBG", "GGGBBGBGGGGBBBGGBGGGBGGBBGGGGGGGGGGBGBBGBBGBGGGBGG", "BBBGBGGGBGBGGBGBBGBGGGBGBBGBGGGBGGBBGGBGGBGBBBGGGB", "GBGBBBGBGBBBBGGGGGBGBGBBBGGGGGBBGGBBBGBGBBBGGBGBGG", "GBGGGGGGGBBBBBBBBGGGBGGBBGGBGBBGGBBGGBBGGBGGBBBGGG", "BGBGBBGBGGGBGBGGBBGGGBGBBGBBGGGBGGGBBGBBGBBBGGBBBB", "GGGGGGGGGBGGGGBBGBGGBGBGBGGGGBGGBGBGGGGBBGBBBGGBGG"};
    int R = 9;
    int W = 3;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2426;
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    vector<string> predictions = {"GBBGBGGGGBBBBGGGGGGBBGBBGBGGGGBBBGGBBBGBGBBBGBGGGB", "BBBGBGBGGBBBGBBBGBBBBGBGGBBBBGGGGGGBGGGGGBGBBGBGBG", "BBBBBBGGGBGGGGBBBBGBBGBGBBBBBGGBGGGBGGBBGGBBBGGGGG", "GBBBBBBBBBBBBGBBGBGBGGGBGBGBBBBGGGBBGGBGBBBBGGBGGG", "GBGGGBGBGGBGGBBGBGGBGGBBBBBBBBBBBGBBBGGBBBBGBGGGBB", "BBGGBBGBGBBBGGBGBGBGGBGBGGGBGGGBBGBGGBGGGBGBGBBBBG", "BGGBGGGGGBBBBBGBBBBBBBBGGGBBBBBGBBGGGGBGBGBBGGBGBB", "GBGGBBGBGGBBGGBGGBGBGGBGBBGBBBGBGGBBGGBBGBBGBBBGBB", "BBGBBBGBBGBGBBGBBGBBGGGGBGGBGBBGBGBBGGGGBBBGGGBBBB", "GBGBGGBGGBGBBGBGBGBBGGBGGGBBGGBBGBBGGGBGGBBBGGBGGG", "GGBBGGBBBGGGBGGBBBBGGBGGBGGBBBGGGGBGBGBBGBGGGGGGBB", "GBBGGGGBBGBGBBGBBGGBBGBBGBBGBBGBBGBGGGGGBGBGBBBBGB", "BBBGGGGGBBBGGBGGBBBBBBBGBBBBBBBBGGGGGGGGGGGBBGGGGB", "GBBGGGGGBBGBBBGGBBGBBBBGBBBGGBGBGGGGGBBGGBBBBGGGBB", "GBGBGBBBGGBBGBGBBBBGBBBGBBBBBGGGBGBBBGGBGBGGBGGGGG", "GBBBGBGBBBGBBBGGGGGGGGBGBBBGBBBGGGGBBBGBBGGBGGBGBG", "GBBGBBGBBBGGBGGBBGBGGBBBGGBBGBGGBGBBBBBBBBBGGBBGGG", "BBGBBBBGGBGGBBBBGBGGBGGGGBGGGBGGGGGGBGGGBGBGBGGGGB", "GGBBBBBBGGBGGGBBGBBGGBBGBGGBBGBGBGBBBBBGBGBGBGBGGB", "BBBBBGBGGBGGGBGGBGGBGGGGBBBBGGBGBBGBGGBBGBGGGGGGBG", "GBGGGBGGBGBBBGBGBBBBGBGGGGBGBGGGBGBBGBBBBGGGBBBGBB", "BBGBGGGBGBBGBGGBGGGBGBGGBGBGBBGGGBGGBBGGBBBBBGBGBB", "BBBGGBGGBGBBBGBGBGGBBBBBGBBBBBGBBGGBGGBBGGBGBBBGBG", "BBGBGBBBGGGBBBGGGGGBGBGBGGGBBBGGGGBBGGBGBBGBGBBBGG", "GGGGGBBGGGBBBGGGGBGGBBBGGGGBBBBBGBGBBGBGGBBBGBGBBG", "GBGGBBGGGBGGGGBBGBGBGGGGGGBBGBGBGBGGGGGBGBGBBBGBBB", "GBBBBGGBBBGGGGGBGGGGBGBBBGGBBGGGGBGBBGGGBBGGGBGBBB", "BBBGGBBGGGGGGBBBGGBBBGBBBGBBBGGGBGBBBBGBGGGGBGBGBG", "GBGGBGBBGGGBBGBGBBGGGGGBGBBGBBBGBBGBBBGGGBBBGBGBGB", "GGBBBBGBBBBBGGGBBBBBBBBGGGGBGBBGBBGBBGGGBBGGGGGBBG", "GBGGBBBBGBGBGGGBGGGGGGBBBBBGBBGGGBGGGGBBBGBBGBGBBB", "GBGBBBBGBBBBGBBGBBGBGGGGGGBGGGBGBBGGBBBGBGBBBGBGBG", "GBBGBBGBGGGGGGGGBBBBGGBGGGBGBGBGBGBGGGBGGGBGBGBGGB", "GGGGBBGBBGGGBGBBBBGBGGBBGGGBBGGGBBGGGBGGGBBBBGGBBG", "BGBGGBGBGGBBBGGBBBBBBGBBGBBGBBGGBGBGBGGGBGGGGBBBGB", "GBBBGGGGBGGGGBBGGGGBBBBGBGGGGBGGGGBBBBBGBGGBGGBGBG", "BGGBGBBGGGGBGGGGBBBGGBBGBBBBBBBGBGGBBBBGGBGGBBGBBG", "BGGBGGBBBGGGGBBBBGGGGBBGGGGGGBGBGGGBGGGBGGBBBBGGBG", "GGBGGGGGBBGGBBBBGBBGGBGGGGBGBBGGGBGBGBGGGBGBGGGBBB", "GBBGBBGGBGBGGGGGGGBGBGBGBBGBGGGGGGGBGGBGGGBGGGGBGB", "BGBBBGGGGGBBGBBGBBBBBBBGGBGBBGGBBGBBBBGGBBBGGBBGBB", "BBBGBGBGBGGGGGBGGBGGBBBGBBBBBBBBBBBBGGGGGBGGBBGGBG", "BGBGGGGBGBGGBGBGGBGBBGBGBGGBBGBBGBGGBBGGBGBGBBGGGB", "GBGGBGBBGBBBGBGBBBGGBBGGGGBGBBGGBBGGBBGGGGGBBGGGBB", "GBGBBGBGBGGGGGGBGBBGGGBGGBBGBBBGBGGBBBGGGGGGBGBBBG", "GGBGGBBBGBBGGGGGBGGGGBGBBGGGBGBGGGBGBBBBBBBBBGBBBG", "GGBGBBBGBBBBBGBGGGGGGBBGGGBGGGBBGBGBBGGBBBGBBGBGGB", "BBGGGBGBBGBBGGBGBBBGBBBBBBGBGBBGGGBGGGBGGGGBGGBBGB", "BGBBBBGBGGBBGGBBBBGGBGBGBGBGGGGBGGGGBGGGGGBGBBBBGG", "GBGGGGGBBBGBBBGGGBGBGBGGBBBBGGGGGGBBGGBGGBGBGGGBGB"};
    int R = 7;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2321;
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    vector<string> predictions = {"GBGGGBBGGGBGGGBGGGGBGBBGBBBGGGBBBBBBBBGGGBGGBBGBBG", "GGGGBBBGGGGGGGGBGBBGGBGBBGGBGGBBBBGGGBBGBGBBGBGBGB", "BGGBGBGBBGGBBGBGGBBBBGGBBGGBGGGBBBBBBGBBBGBGGBGBGB", "BBBBBBGBGBBGBGBGGGGBGBGGGBGGGBBGBGBGBGBGGGBGGGBBBG", "BBGGGBGGBGGBBBGBGBGBGBBBBBGGBBGBBGGGBGBGGGGBBBBGBB", "GGBBBGGGBGBGGBGGBBBBGGBBGGGGBGBBGBGGGGGGBGBBBGBGBG", "GGGGGBGGBBGBGBBBBBGBGGBBBGBBBGBGBGGGGGGGGBBGBBBGBB", "BBBBGBBGBGBBGBBGBBGBGBGGBBBBBBBGBGBGGBBGGBGGGGGGBB", "BGBGBGBGBBGBBGBBGBBBBGBBGGBGGBBBBBGBBGBGBGBBGGBBGB", "GGBGBBGBGGBBGBBBGGGGGBBBBGGGBBBBGBBBBGGGGBGGBGBBBB", "GGBGBGGGGGGBBGGBGGBGGGBBGBBBBBGBGGBBBGBBBBBGBGGGBG", "BGGBGGGBGGBGBGGGGBGBBBGBBGGBGBBGBGBBBBBBBBBBBGGGBG", "BGGGBBBGGGGGGBGBBGGGGGGBGGGGBGBGGGGBBBGBBGBGBBGGGG", "GGBBBBGGGBBBBBGBGGGBGGGGBBGGGBGGGBBBGGGGGBBGGBBGBB", "GBGGBGBGGGGBBBGBGBBGBBBGBGBGGGGGBGGBBGGGGGBGGGGBBB", "BBGGBGGBBBBGBGGBBBBBBGBGBGBBGGBGGBGGBGBGGBBBBBGGGG", "BGBBBBGBGBBBGBGGBGGBGGGGBGBBGBBBBBGBGGGGGBGBGGGBGB", "BGGGGGGBGBGBGBGBGBBBBGBBGBBBGBBBGGGGBGGBGGGBGGGGBG", "GBBBGGBBBBGBBGBBGBGGBBGGBBBBGGGGGGGBGGGGGBBGGGBBBB", "GGBBGGGBGGGBGBGBBGBBGBGGBBBBBGGBBBGGBGBGGBBBBBBBGB", "GBBGGBBBGGBGBGGBBBGGGGGBGGBGBGBGBGBGGGGBBBGGBBBGGG", "BGGGBBGGGGBGGGGBBBGBBGGBBBBGGBBGGBBGBGGGBBBGGBBBGG", "BBGGBBGGGGBBGBBGBBGBGGBGGGGGGGGBGGGGGGBGGGGBGBBGGG", "GGGBBGGBBGGGGBGBBGGBGBGBGGGGGGGBBGGGBBGBGGBGGBBBGG", "BGGGBGGGBGBGBGBBGGGBBGGBBBGBGBBBGGGBBGGBGBGBGBGBBB", "GGGGGBBGBBGGBBGGGBGGBBGGGBGGBBBGGGGGBBGGGBGBBGGBBB", "BBBBBBBGBBGGBGBBGBGBBGBGGBBBBGGGBBGBGBBGBBGBGBBBGG", "BBGGBGBBBGGGGGGBBGBBGGBBGGBBBBGBGBGGGGGGBGBBBGBBBB", "GBGBGGGBBGGGBGBBBBBGGBGBGBBBBGBGBGBGBGGGGGGBGGGGGG", "BBGGGGBBGBBBBBGBGGBGGGBGGBGGBGGGBGGBGGBBGGBBGBGBBG", "GGBBGGGGGGGGGBBGGBBGBBGGBGBBBBGGBBBBGBGBBBGGGGGGGG", "GGBBBBBGGGBBBBBBBBGGBGGGGBBGGGBBBBBGGBBBBBGGBBBGBB", "BGBGBBGBGBGBBGGGBGGGGGBGBBBGGGBGGBGGGBBGBGBBGGBGBG", "GGGGGBGGBBGGBGGGGGBBGBBBBBGGBGBBBGGBGBGBBBGBBGBGGG", "GBBGBGGBBGBBGGGBGBBBBGGGBBBBBBBBBBGBGGBBBBBGGBBBBG", "GBGBBBBGGGBBGGBBGGBBGGBGGBBBBGGBGGBBGGGGBGBGGBBGBG", "BGGBBBBBBBBBGGGBBGGGGGBGBGGBGGGBBBGGGBGGBBBGBGBGGB", "GBGGBBGBGBGBBBGGBGBBGBGGGGGBGBBBGGBBBGBGGBBGBBBBGB", "GGBBGBBBGGGGGGBGBGGBGGBBBBBBGGGGGBGGBGGGGBBGBBGBBG", "BBGGGBBGBBGBBBGGBGGGGBGBGBGBBGGBGBBGBBBGGBBBGBGGGG", "GGBBGBGBGBBBGBBGGBBBBGBBGGBBGBBGGGBBGGGGGBGBGBGGGB", "GBBGBGGBGGBBGBBBGGBBGBGBBGBGGBGGGGGGGGGBBGGBBBGGBB", "BGBGGGGGBGGGBBBBGGGBBBBGBBGBBGGGBGBBBGGGBBGGBBBGBG", "BBGGGBGGBBGBGGGBBGBGBBGBGGBGGGGGBGBBGGGGBGBGBGBGBG", "BBBBBGGGGBGGBGBBGGGGBBBBGGGBBBGGBBGBBGBGBBBGGGBGBG", "GBGBGBGGBGGGGGGBBGBBGBBGBGGBGBBBGBBGBBGBGGBBGBBBGB", "BGGGGBGBBBGGBBBGBGBBBGBBBBGGBGBGGBGBGGBGGBGGGGGGGB", "BBBBBBBGBGGBGBBBBGBBBBBBGGGGGBBGGBGBGBBGGBBBGGGBBB", "GBGGGBGBGBBGGGBBBGGBGGGBGBBBGGGGGGBGBBBGBBGGBBBBGB", "GGBGGGBBGGGGBGBBBGGGBBGGGBGGBGBBGBBBBGGBGBBBGGBGBB"};
    int R = 2;
    int W = 1;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 1891;
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    vector<string> predictions = {"BGBBBGBBBGGGBGGBBBGBGGBBGBBGGBBGGGGBBGBGBBGGGGGGGB", "BGGBBBBBGGGGGGGGGBBBGBBBGBGGBGBGGGBGBBGGGBGBBBGGGB", "GGGBGGBBGGGBGGGBBBBBGGGBBGBBBGGGGBBBGBBBBGGBGGBGGB", "BBBBGBGBBGGGBBGBGBGBBGGGBGBBGBBBGBGGBGBBGBBGBGGGGB", "BBBBBGGBBGBBBGBBBGGGBGGGGGGGGGGBGBGGGBBBGGBGBBBBGG", "BGBBGBGBBGGBBGGGBBBGBBBBBGGBBGBGGBGBGBBBGGGBBGBGBB", "GGBGGBGBGGBGGBBBBBGGBBBGGGBBBGGBGGBGGBBBBGGGGGBBGG", "GGGGGGGBBBBGBBBGBBBGGBBGBGBBBGGBGGBBGGGGGGBGBBGGGB", "GGBBGGGBGBBGBBBBBBBBGBGGGBGBGGBGBGGBGBGBBGBBBBGBGB", "GGBBGGBBGGGBBGGGBGGBBGBBBBGBGBBBBBGGGGBGBBBGGBGGBB", "BBBGGBBGGGBBBGGBGGGBGGBBBBGGBBBBGBGBBBGBBGGGGBGBGB", "GBBGBBBGGGGBBGGBGGBBBBGGBBBBBGGGBGGGGBBBGGGBGGGGGB", "BBBBBGGGBBBGGGGBGBGGBGGGGBGBBBBGGGBBBBBGBBBBBBGBGG", "GBBBBGGBGBGBGGBGGBBGBGGBBGGGGGBGGGGBGBGBGBBBGGGGGG", "BGGGBBGBBGBBGBGBBGGGGBGGBBBBGGBBBGGGGBGBBBGBGGBGBG", "GGBBBGBBGGGBGGGBGGBBGBBGBGGBGBGGGGGGGBBGBGBGGBBGGG", "BGBBBBBBGGBBBGGGGBBBBBBGGBBBBGGGBBBGBBBGBBGGBBBGGB", "GGBGGBGBGBGBGGGBBGGGBBGGGGBGGBGGGGBBGGBGGGGGGBGBGG", "GGGGGBGBBGBGBBBGBGBBGGBGGGBBBBGGGGBGGBGGBBGGBBGBBG", "GBBBBBBGBBGGBBBBBBGGBGBGBGBBGGBBBGGGBGBBBBBBGBGBBG", "GBGGBGGGGBGBBGGBBGBGGGGBBGGGBBGBGGBGBGBBBBGGGGGGGB", "BGGGGGBBGGGBBGBBBGGGGBGGBBBBGBGGBBGGBBBBBBGBGBBBGB", "GBGBBBBBGBBGGBGBBGGGBGBBGGGBGBBGBGBBBGGGGGGBBGBGBB", "BBGBBGGBGBGBGBBGGGGGBBGBBBBGGBBBBGGBGGGBGBBGGGBBBG", "GBGGGBBBBGBBBGGBGGGBBGGBGBGGBBBGGGGBBBBBBBGBGGGGBG", "BGGGGBBGBBGGBBBGGBGGGBGGGBGGGBGGBGBBBGGBGBGBBBBGBG", "GBGGGGBBBBBBBBBGBGBBGGBBGGBBBGBGBGBGGGGBGGGGBGGBBB", "BBGBBBBBBGGGBGBGBBBBGBGGGGGBGBBBGGGGBBBBBBBBGBGBGG", "BGBBGGGGGGGBBBGBGGGBGBBGGBBBBGBGGGGGGGGGBGBGBBBBBB", "BGBGBBGGGGGGGGBGGGGBGGGGGGBBGBBBGGGBBBBBBBBBBBGGBB", "BBGGBBGGBGGGGBBGBBBGGGGGBBGBBBBGBGBBGGGBBBBGGBBGBB", "BBBGGGGBGGBGGBBGGGBGGGBBBGBBGGBGGBGBGGGBGBBGGBGBGG", "BBGGBGGGBGGGBGBBBBGGGGGGBBGGGBBBGGGBBGBGGBGGBBBGBG", "GBGGBBBBGGGGBGBGGGBGBGBGBGBBBBGGGGBBGBBBGGBBBGBBGB", "GBGBBBGBBBGBBBBGBGGGGGGGGGGBBBBGGBGBGGBGGGBBGBBGBG", "BGGBGBBGBGBGGBBBGBGGGBGBBGBGBGBGBBGBBBBGBBGGGBBGBG", "GGGBGBGBGBBGBGGGGGBGBBBGGGBBBGBGBBGBBBBBGGBGGGGGGB", "BBGBGBGGGBGBGBBGGBBGGGGGGBBGBBBBGBGBBGGGBGGGGGGBBG", "GBBBBGGBGBBBBGBBGBGGGBBBBGGGBGBBGGGBGGBBGBGBGBBGGB", "GBBGBGBGBBGGBBGGBBBGBGGBBGGBGGGGBGGBBGGBBBBGGGGGBG", "BGBBGGBBGGBBBGBBBBBBGBBBGBBBGBGGGGGGBGBGBGGBGBBGBG", "BGGBGGBGBBBGGBGBGGBBBGGGBBGGBBGBGBGBBGBBGBGGBGGGGG", "BBGBGBBGBGBGGGGGGBGGBBGBGGBGBBBGGBBGBGBGGBGBGBBGGB", "BBGBBBBBBGBGGBGBGGBBGBGGGGBGBBBGGGGGGBGBBGGBBBBBGG", "BGBBGGBGGGGBGGGBBBGGBGBGBBGGGGGGGBGBBBGGBBBGGBGBGG", "BBGGGBGBGGGGBBGGBGGGGBBGGBBBBGBGBGGGGGBGBGBBBBBBBG", "BBGGBBBBGGGGBBGBBBBGGGBGBGBGBGGBGGGGGGBBBBGBBGGBGG", "BBGBGGBGBBGBBGBBGBBGGGBGGBGBGGGGGBBGGBGGBGGBBGBGBB", "BBGGGGBGBBBGBBGBBGBGBGGBGBGGBGGBGGGBBGBBBBGBBGGGBG", "BGBGGBBGBGGBBGBGGGGGGGGBGBBGGGGBBBGBBBBBBGBBGGBBBG"};
    int R = 4;
    int W = 6;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2453;
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    vector<string> predictions = {"BBGBBGBBBGBGBGBGGGGBGGGGGGBGGBGGBBGGBBGBBGGGBBGGBG", "GBGGGGGBBBGGGGBBBBGBBGGBGGGGBGBBBGBBGGBGGBGGBGBBBG", "BGGGBBBBBBBBGGGGGBBGGBGBGGBGGGBBGBBBBBGGGGBGGBGBGB", "GGBBBGBBBGBGGGGBBGBGBGGBBGGGGGGBGBBBGGGGGGGGBBGGBG", "GBBBGBBBGBGBBGGBGBBGBGBGBBGGBBGGBGBGBGGBBGGGBBGBGG", "BGBGBBBBGGGGBGBGBBBGBBBBBBBGBGBBBBGGBBBBGBBGGGGGBB", "BGBGBBBGBBBBGBGGBBBGBBBGBGGGBGBBGBBGGGBGGBBBBGGBBG", "GGBBGGGGBGGGGGGBGBGGGBGBBGBGBGGGGGGGBGBGBGGGGGBBGB", "BBBGGBGGBBBBGGGGGBGBBBBBGBGBGBBGGGBGBGBBBGGBGGBBGB", "GGGBGBBBGBBGBGGBBBGBBBBBBGGBGBBGBGGGGGGGBBBGGGGBGB", "BBGBBBGBGGGGGGGGBBBBGBBGBBBGGBGGBGGBBGBGBBGBGBBGGB", "BGGBBBBBGGGBGBBGBBGBGGGBGBGGBBGBBGBBGBBBGGGBBGGGBG", "BBGBGBBBGGGGGGBGBGGGGBBBGGBBBGGBBGGBGBGBGBGBGGGBBB", "BGGGGGBGBGBBBBBBBBBGBGBGGGBBBGBGGBBGGGBBBGBGBBGBBB", "GBBGBBGBBGGGGBGGBGBGBBBGBBBBBBBGGBGGBBGBBGGGGBGGBG", "BBGBBBBBGGBBBGGGGBBGGBBBGGBGBBGBBBBGBGGGGGGBGGBGGG", "GBGBGGGGBBGGBGBBBGGBGBBGBBBGGBBGBBBGBBGGGBBGBGBGBG", "GGBBBGGGBBGGBBGBBGGGGBBBGBBGGGGGBGBGBBBGBGGBGGGBGG", "GBBBGGBBGBBGGBGGBBGBGGBGBGBBGGBGGBGBGBBGGBGBBGBGGG", "GGGGGGBGBBGGGGBBGBGGBGGGGBGGBGBGBGGGBBBGBGGBBBGBBG", "GGGBBGGGBGBGGBGGBGBBBGBGGGBGGGBGGGGGBGGGBBBBGBGBBG", "BGBBBBGBBBGBBGGGGBBGBGGBBBGGBGBGBBGBBGGGGGBGGBBGBB", "GBGGBGGGGGBBBBGGBGBBGGBGGGBGBGBBBGGBBGBGGGBBGBGBGB", "GGGBBBGGGGBGBBGGGBBGBBBGGBBGGGGBGGGGBGBBBGBBGGGBBG", "BBGGGGGBBBGGGBBBBBGGGBBBGGBGBBGBBBBGBBBGBBGBBBBBBG", "BGBBBGBGGBGGGBGBBBBBBBBBBBGGGBGBGGBGBBBGBBBGBGBBGG", "GBBGBBBGGBBGGBGGGBGBBGBBBBBGGBGGGBGGBGBBBBGBBGGBGB", "GBGGGBGGGGGBBGGGBBGGGBBBGGGBBBGBGGBGGBBGBBGBBBGGGG", "BBBBGBGBBGBBBGBBBGGGBGBGBGBGGBGGGGBGBGBGBGBBGGBBGB", "BGGGGGGBGGGGGBBGGGGGBBBGGGGBBBBBBBBBBBBGBGBBBGBGBG", "GBBGGBBBGBGBGGGBBBGBGGBGGGBBBBGGGBGBGGGGGBGBGBBBBG", "GBGGBBGGBGGGGGBGBBBGBBGBBGBBBBBGBGGGBBBBGGGGGGBBGB", "GGGGGBGGGGGBBGBGBGBGBGGGGGBBGBBGGGBGGGGGGBGGBGGGGB", "BBGGBBGGBBBGGBBGGBGGBGGGBGBBBGBGBGGBGBGGBGGGGBGBBG", "GGGGGBGBGBBBBGGBBBGBBBBGGGBBBGGGBBGGGBBBGGGGBGGBBB", "GGGBGGGGGBBBBBGBBBGBGBBGBGBBBGBBGGBGBBBBBBBBGBBGGG", "BBGBGGBGGGGBBGBBBGBBGGGBBBGBBBBGGGBBGBBBGBGBBBBBGB", "GGGGBGBBGGBGGBGGGBGBGBGGBGBGBBBBBGGGGBGGGBBBBBGBGB", "GGBGGBBBBBBGBBBBGGBGBBBGBBGBGBGGGBGBGBGBBGGGGBGBBB", "GBBBBGGGBBBBGBGGGGGBBBBGBBBBGGGBGBGBBGGGBGGBBBBGBB", "BGBBBGBBGGBBGGBBGGGBGBBGGGGBGBGBGGGBGBGGBGBBBGBBBB", "GBBGGGGGGBBBBGGGGGGBBGBBGBBGGGGBGGGGGBBBBGGGGGBGBB", "BGGGGBGBGGGBBBBGGBBGGBGGBBBGGGBGBBGGGGBBGGBGBGGBGG", "BGGBBGGBBGBGGBBBBBGGGBBGGBBBBBGGBBGGGBBGGGBGBBBGGG", "GBGBBGGBBGBBGGBBBBGBBGBBBGBBGBBGGGGGBGGBBBBBBBBBGG", "BGGBBBGGGGBGBBGGGGBBBBGBBBBBGBBBBBGGBGBBBGBBBGGGBB", "BGGBBBGBGGGGBBGBBBBGGBGBBBGBGBGBBBGBBGGGBGBGBBBGBG", "GBGGBGBBBGGGBGGGBBBBGGGGGBBBBGGBGGBBGBGGBBGGGBGBBB", "GGBBBBBGGBBBGBBGBGGBBGBGBBBGBGBBGGBBGGGGBBGGGGBBGB", "GBBBGBBBGBBBGGGGBGGBGBBBBBGGGGGBBBBGGBGBGBGBGBGGGG"};
    int R = 3;
    int W = 12;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2411;
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    vector<string> predictions = {"GBBGGBBBGBGGBBGGBBBBBGBBGGBBGBGBBGBGBGGGGGGGBGBGBG", "GGBBBBGBBGBGGGGBBBGGBBBBGGGGBBGBGGBBGBBGBBGBBGGBBG", "BBGBBBBBGGBBBBBGGGBBGGBGGGBBGBBGBGBBGGBGGBGBBGGBGG", "BGBBGBBGBBGGBGBBBBGGGBGBGGGGGBGBBBGBBBGGGGBGBGGGGB", "GBBBGGGBGBBBGBBBBBBBGGGGBGGBGBBBGGGBGGBBGGGGBGBBBB", "GGBGBGBGBGBGGBGBGBBBGBBGBGBGGBGGBBBBGBGBGGGBBBBBGB", "BGGBGBBGBBGGBGBBBBGGBGBGGBGGBGBBBGBGBBGGBGGGBBBBGG", "GGGBGBGBBBBBBBBBBGGGBBBGGBBBBBBGGGBBGGGGBGBBBBBBGB", "GGGBBGBBBBBGBBBBGBBBGBGBBBGGGGGBGGGBGGBGGGGGBBGGGB", "BBBGBBBGGGBBBBBBBGBBBBBGGGBBGGBBGBBGGGBGGGGBBBGBGG", "GGBBBGGGBGGBBGGGGBBBGBGGGBGBGGBBBBGGGBGBGBGBGBBGGB", "BBBGBGGGGGGGBBBGBBBGBBBBGGGGBGGGGGGBGBBBBBBBGBGBGG", "GBBGGGBGGGGBGBBGBGGGGBGBBBBGBGBBBBGBGGBBGBGGGBGGGG", "GGBGBGGGGGGGBBBGGBBBGGBBGGGGBBBGGGGBBGGBGGGGGBGBGB", "BGBGGBGBBGGGBBGGBBGBBGGGGBBGBBBBBGBGGBBBBBBBBGBBBG", "BBBGGBGBGGBBBGGGGGGGGBBGGGBGBBGGGGGBGGBBBGBGBBBBGB", "BGBGGGGBGGGGGBGBBGBBGBBGGGBGBBGGBGBBGBBGBBGBBBGGGB", "GBBGBGBGGBBGBGBGGGBGGGGGBGBGGBBBGGBGGGBBBBBBBBBBGB", "BGBBBBBBBGGGGGGGBGBBGBGBGGGGGBGGGBGBBGGGGGBBBGBGBG", "BGBBGBGBBBGGGGGGBGBGGGGGBBBGGGBBGGGGBGGBBGBBGGBBGG", "BGBBBBGBGGGGGGGBGBGBGGBBGBGGBBGGBBBGGGGBGBBGBGGGBB", "GBGGBGGBGBBGBBGGGGGGGBGBGGBGBBGBGGGGBBGBGBBGBBBGGB", "BGBBGBGBGBGBGBBBGBGBBBBGGBGGBGBBGGGBGGGGGBBBGGGBBB", "GGGGGBBGBBGBBBBBBGBGBBGGGBGBGBBBGBGBBBBGGBGGBGGBGB", "GBGBBBBGGGBBBGGBBGGGGBBGBGGBGBGGBBGBGBGBBBGBGBBGGB", "BGBBGBGGGGGBGGGGGBBGGBBGBBGGBGGGBGBBGGBGGGBBBGBGGG", "GBBGGBGGBGBBGGBBGBGGGGGGGBBBGBGGBGGGGGGBBBBGGGGGGB", "BBBBGBGGGBBBGBBGBBGGGGBBGBGBGBBGBBBBGGGGBGGBGGGBBB", "BBGGBBBBBGGGBBGGGGBGGGGGGGBGBBBGGGGBBBGGGBGBBGBBBB", "BBBBBBBBGGGGBBBGGGBBBBBGBBBBBGGGGBBBGGBBGGGBGBBGBG", "GBGGBGBBBBBGGBGBBGBGBBGBGGBBBBGBBGBGGBBBGGGBBGGGBB", "BBBGBBGBGGBBBBBGBBBBGBGGGBGGBGGBBBBBGBBBGGGBBGGBGG", "BGGBGBGGGBGBGGBBGBBBBGBBGBBGGBBGGGGGBBGGGBBBGBBGBB", "GBBGBGGBGBGBGBBBGGGGGGGBGBBBGBBGGGGGBBBBBGBGBBGGGG", "BGBBGBBBBGBBGBBGGGGBBGGBGGBGGBGGGBBBGBBBGBBBGGBGGG", "BBGGBGGGBGBGGBBBBGBGGGBBBBGGGBBBGBBBBGGBGGGGBGGBGB", "BGBGBBBGBBGGGGBGGGBGBBBGBBGGGBGGBBBGGGGGBBBBBGGBBB", "GGGBGBBGGBGGBGGGBGBBGBBBGGBGBGGBBBGBBBBGGBBGBBBGGG", "BGGGBGGGGGBGBBBBGGGBGBBBBGGBBBGBGBBGGBBGBGBGBBBBGG", "BBBGBBGBBBGBGBGBGGBBGGBGGBGBGBGBBBGBGGBBBBBBBBBGBB", "BBBGGGBBBGBBGBBBBGBGGBGBGGGBGGGBGGGBBGGGGGGBGGBBGB", "GBGGGGGGBBGGGGGBGGGGGGGBGBBBGBGGBGGGGBBGBBGBBGBGBG", "GBGBGBGBBBBBGBBGGGGBGBGGGGBBGBGBBGBBBGBBBGBBGBBGGB", "GGBGBGBGBBGBBBGGBBGGBGGGBBBGGBBBGBGGGBGBBBBBGGBBGG", "GBGBGGGBGGBGGGBGGBBBGGBBGBGBBGGGGBGBGBGBBBGGBBGGBB", "BGGBGBGGGBGBBBGGGGBBBGGGBBGGBGGGGGBGBBGBGBBBGGGBGB", "GBBGGBGBBBGBBBGGBGBBBGGBBGGBGBBGGBBBBBGGBGBBGGBBGB", "BGGBBBBBGGBBGGGGGGGGBBGGBGGBGBGBBGGGBGGBBGGBGGGGBB", "GGBBGGBBBBBBGBGGGBGGBBBBBGBGGBGGBBBBGGGGBBBGBGGBBB", "BGBBBBGBGBGBBGGBGGGBBBGGBGGGBGBGGBBBBGBGBBGGGBBBGG"};
    int R = 1;
    int W = 3;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2009;
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    vector<string> predictions = {"GBGBBBGBBGGBBBBGBBBBBBGBGGBBGBGBGBBGGGGBBGBGGBBBGG", "GGBBBBGGBGGGBGGBGGGBBBGGBBGGBGGGBGGGGBBBGBGBBBGBGG", "GGBBGGBGBGGGBBBGBGGBGGBGBGGGGGGBBBBBGBBBGBGBBGBBGG", "GBGGGGGGGBBBBBBGGBGGGGGGBBGGGGBGBBGGGGBBBGBGBGBGGG", "BGBGBGBGGBGBBGGBBBBBBGGGGBGGBBGGBGBBBGGGBGBGBGBGBG", "BBGGBBGBGBGGBBBGBBGGBGGGBBBGBBGGBGBBGBBBGBBGBBGGGG", "BBBGBGGGBGGGGGBGBGGBBBGBGBGGBBBGBGGGGBBBGBBBGBBBBB", "GBGGGBGBBGGGBBBGGGGBGGBGBGBGBBGGGBBBGGBGBBBBGBBBGG", "GGBBGGGBGGGGBBGGGBBBBGGBBBBBBBBGGGBBBBGBGGGGBBGGBG", "GBBGGGGGGGGBGGBBGGGGGGBBBBGGGGBBGBBGGGGGBBGBBGGGGG", "GGGBGBBBGBBGBBBGBGBGBGGGGBGBBGBGBBGBBGBBBGGGBBBGGG", "BGBGGBBGBBBGBGGGGGBBBBGGBGBBBBGBGGBGGGBBGGGGGBBBGB", "GBBBBBBGBGBGBBBGGGBBGBBGBGBBBBGGBGBBGGBGBGBBGBGGBG", "GGGBBGGBGGGGGGGBBGBBBBGGBBBBGBGBBGBGBBBGGGBBGGBGGB", "BGBGGGGBBGGBBBBGBGBBBBBBGBGGBBBBGGGGBGBBBBBGBBBGGB", "GGBGGGBBGBBGGGBBBBBGBGBGGGBBBBGBBGGGBBBBBGGBBGGGGB", "BGBGBBBBGBGBBBGBBBBGGBGBBGBBGBGBGGGBBBBBBGBBGGGBGB", "GBGGGGBBBBBBBBGGBGGBBBGBGBBBBGGGGGBBGBGBBBGGGBGGBG", "GBBGBBGBGGGGBGBBBGBBGGGBGGBGGBGGBBBBBBGBBGGBGGGBBG", "BBBGBBGGBBGBBBBBGGGGGBGGGBBGGGGBBGGGBGBGBBGGBBBGGG", "BGGBBGBBGBBBGGBBBBGGBBGGGBBGBBBGGGBBGGGGBBGBBBBBGB", "BBGGBBBBGBGGGBBGGGBBGGGBBBGGBBBGBGGBGBBBBGBBGGBBGB", "GGBGGBGBGBGGBBGGBBGBBGGGGBBGBBGGGBGGGGGGBGGBGGGGBB", "GBGGGGBBBBBBGBBBGGBGGBBGBGGBGGBGGBBGGGBGBGBBGBBBGG", "GBGBGGBBBBGBGGGGBGBBBBGGBGBGGBBGBBBGGBBBGBGGGGBBGB", "BGGGGGGBGGBBBBGBGGBGBBBGBBBBGBGGBGBBGBGBBBGGBGGGGG", "GGGBGGGBBGGGBGBBBGBGBBGBBBGBGGBBGBBGGGGBGGBGGGGGGG", "GGBBBBGBBBBGBBGGBBGGGBBBGBBGGGBGBGGGGGGGGBGGGGBGBB", "GGGBBBBGBGGGBGBGGBGBBGBBGBBBBBBGGGBBBBBBBGGBGBGGBG", "GGBBBBGGGBBGGBGBBGBBGBGBBGGBBGGGBGBBBGGGBBBGBBGGGB", "BBGBBGGGBBBGBGBGGGBGBGGBGBBGGBBGGBGGGGBGGBBGBGGBGB", "GBBBBGGBGBGBBBGBGBBGBBBBBBGBBBBGGGBBGBBBBGBBBGBBGB", "GBBGBBGGBBBBGBBBGGBBBBBBBGGGBBBGBGBBBBGBGBGBBBGGBB", "BGBBGBGBGBGBBBGGBGGBGGBGGGBGBGBBBBGGGBBGBBGBBGGBGB", "BGBBGBGGGGGGGGBBBBBGBGBBBBBBGBGBGBGBBGGBBBBGGGBBGG", "BBBBBBGGBBGGBGGBBBBGGBGGBGGBBGBGGBBGGBBBGGGBBBBGGB", "GBGGBGGGBBGBGGBGGGBGGBGGGGGGGBGGBGGGGBBBGBBGGBBGGB", "BGBBGBBBBBGBGGBBBBBBGGBGBGBBGBGGBBGGGBBGBBGBBGGBBB", "BBGBBGGGGBGGGGBBBGGBGGBGGBGBBGBBBGGBBGBBBBGGBBGBGB", "GGGGBGBGGBBGBGBBBBBGBGGBBGBBBBGGGBBBGGBGGBBBGBGBGB", "GGBGBGGBBGBBGGBGGBBBGGBBBBBBBGBBGBGBGBBGBGBBBGBBGG", "BBGBGBBBBBBBBGGGBBGBGGBBBGGGBGGBBGBBBGBBGGBBGGGBBB", "GGGBBGBGGBGGBGBGBBGGBGBBBBGBBBBBGGGGBGBBGBBGGGGBBB", "GGBBBBGGGGGGGGGBGGBBBGBGBGBGBGBGBGGGGGBGGBBGBGBBGG", "BGGGBGBGGGBBBGGBBBGBBBBGGBBGBGGBBBGBGGBGGGBBGGBBGG", "BBBGBBBGGGGGGGGGGGGBBGBGGBBGGBGGBGBGGBBGBGGBGBGGBB", "GBGGBBBBBBGBBBGBGBGBGBGBBGGGBBGBBBBGBBGBBBGBBBBGGG", "BGBGGBBBGBGBGBGBGBGBGGGGBGBBBGBGGBGBBGBGBGBGBBGGBG", "GBBGBGGGBBBGGGBGGBBGGBGGGGBGBBBBGGBBBGBGGGGGBGGBBG", "GBGBBGGBGGGBGBBBBGGBGGBBBBGBBGBGBBBGBBBGGBBGGGBBGG"};
    int R = 1;
    int W = 4;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2066;
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    vector<string> predictions = {"GGGBGGBBBBBGGGGBBGBGGBBBGGBBGGGGGGGBGBGGBBBBBBBBGG", "BGGBBGGGGGBBGGGGGBGBBGBGGGGGBBGGGBBGBGGGBBBBBGGGBB", "GGGBBGBBGBBGBBGBGGBBGGGBGGBBBGBGGBBGBBBGGGGBGGBBGG", "GBBBBBBBBGBBBBGGGGGBBBGBBGGBBGGGBGBGGGBBBBBBBGGGGB", "GGGGBGGGGBGBBBGGGBGGBGGBBBGBGBBGGGBGBBBGBGGGBGGBBB", "GGGGGBGGBGGGGGBGBBGGBGGGBBBGGBBGGBBGGBBBGGBBGBGGGG", "BGGGGBGBGBBGBGBGGGGGBGBGGGGGGGGBBGBBGBBGGGGBGGGGGB", "GBBGGBGBGGGGGBBGBGBBGGBBGGBBBBBGGGGGGBBGBGBBBBBGGG", "BBGBGGGBBGBGBGBBGGBBBGBGBGGBGGGBGBBGGGBBGBBGBBBGBG", "GGBGBBBGBBBBGGBBBBBBGGGGBGBGBBBGGBGBGGBBGGBBBGBBGB", "GGBBGGBGBBGBGBBBGBBBBGGGGBBGBGBBGGBGBBGGGBBBGGGBBG", "GGGBBBGBBGBGGGGBGGGGGBBBBGBBGBBGBGGBGGGBBBGBBBBGGB", "GGGGGBGGGBGBGBBBBBGBGGBGBBGGBBBBGGBBGBBBBBBBGBGGBG", "BGBGGBGGBBBGBBGBGBGGGBGBGGBBGBGBGGBBBGGBGGBGBBGGBG", "GBBGBGGBBGGBGBGGGGGBGBBBBBBBBBBBBBGBGBBBGBBBGGBGGG", "BBGBBBGGBGBBGGBBBBGGGGGBBGBBGBGBBBBBBGGGBBBGGGGBGG", "BBBGBGGGBBGBGGGGBGGBGBBBGBGBGGGGBBBGBGGBGGBGBBBBBB", "GBGGBBGBBGGBBGGGGGBBBBGGBGBGBGGBBBBGBBBBBGBGBBBBBG", "GGGGGGBGBGGBGBBBGGBGGBGBBGGGGGGBGBBBGGBGGGBBBBBGGB", "GBBGBGGGGGGBBBGBGGGBGGGBBGGGBBGBGGGGBBBBBBBBBBGGGB", "BGGGGGBBBGBGGBGGGGBBBGGBBGBBGGBGBGGGGGBBGBBGBGGBBG", "BBGBBGBBGBBGGGGGBGGGGGBGGGBBBGGBBGGGBGGGGBGBBGGGBB", "BGGBGGGBBBGGGGGBBBGGBGGGGGGGBGGGGBBGGBBBGGBBBBGGGB", "BGGBBGBBBGGGBBBBGBBBBGGBGGGBGBBGBGBGGGBBBBBBGGGGBG", "BGGGGGBGGBGBBGGBGBGBGGGBGGGBBGBGGGBGBBGGGBBBGGGBGG", "BBGGGBGGGGBGGGBGGBBBBBBBBGBGBBGBGGGBBBGGBBGBBGBBBB", "BBBGGGGBGBGBGGBBGGBBBBBBGGGBBGGBBGGBGGBGGBBBBGBBBG", "GBGGBBGBBBBBGBBGGBBBGBGGGGGGGBGBGBBGBBBBGGGGGBBBGB", "GBGBGGGGGGGGGBGGGGGBBGBBGBBGBBBBGGGGGGBGGGBGBGBBBB", "BBGGGGGBGGBGBGBGGBBGBBBGGBBBGBGBGGBBBGGBBBBGGGGBGG", "BGBBGGGBGBGBBBBGGBBBBBBBBGGBGBGGGGBGBGGBBGGBGBGBGB", "BGGBGGGGBBBGGGBGGBBBGGGGGBBGGBGBBBBGBGGBGGBBBBGGBG", "BBGGGBBBGGGBBGGBGBGBGBBGGBGBBGBGGBGBGBGGBBGGBGBBGB", "GGGGBGGGBGBBBBGGBGBGGGGBGGBGBBGBBBGGBBGBBGGGBGGGGG", "BGGGGBBBGBGGGGGBGBGGGGGGGBBGGBGGGBGGBGGBBGBBBGGGGG", "GBGBBGGBBGGGGBBBGGBGBBGGGBGBGGBBGBBGGBBGBGBGGGBGBG", "GGBBGGBBGBGBGGBGBBGBGBBBGBBGGGGBGBBGBGGBGGBBGBBBBG", "BBBGBGGBBGBGBGBBGGBGGGBGBGBGBGGGBGBBGBGBBBGBBGBBGG", "GGGBBBBBBGBBGBGGBBGGGBGGGBBGBBGBBBGBBBBBGBGBGBGGGB", "GGGGGGBBGGGGGGBGGBBBGBBGGBGBGGGGGBBGGGBGBGBBGBGBBG", "GBGBGGBBBGGBBGGBGBBBGBGBGBBGBGBGBGGBGBGGBBBGGGBGBG", "GGGBBBBGGBGGBBGGGBGGBBBBBGBBBBBGBBBGBBBBGBBBBGGBBG", "BGBGGGBBBBBGGGGGGBGBGBBBGBGGBGGGGBGBGBGGGGBBBGGGBB", "BGBGGGGGBBGGGGBGGBGBBBGGBBBBBBGBGGGGGGGGBBGBGBGBBB", "GGBGGGGGBBGBGGBBBGBGGBGBBGBBBBGBBBGGGGGBBGGGGGBGGB", "GGBBGGGGBGGBBBBBGGBBGBBGGGGGBBGGGGBGGGGGGGGBGBBGGB", "GGBGGGBBBBGGGGBGGGGBBBBBGBBGBBGBGBGBGBBBGBBBBBBBGG", "GGGGGBBGGGGBGBGGGBBGGBGGBGGGGGBBGGGBBGBGGGBBBBBBGB", "BGGGGGBGBGGGBGBBGBBGBBGBBBGGBGGGGGGBBGGBBGBGBGGGGG", "GBBBGBBGBBGBGBGGBBGBBBGBGBGBGGGBBGGGGBGBGGGBGBGGGG"};
    int R = 3;
    int W = 5;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2380;
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    vector<string> predictions = {"BGBBGBGGBBGBGGGGGGBGBBBBGGBBBGGGBBBGGGGBBBGBGBGBBB", "GBBGGBBGBGGGBBGGGGBBGGBBGBBGBGBBBBBBBBGBGBBBBBBGBB", "GGBBBGBBBGGGBBGBBGBGGGBGGGGBGBBGGGGGGBBGGGGGBBGBGB", "GBBBGBBGGGGGBBGGGBBGGBGGGGGGBBGGBBBBGGGBGGBBBGGGGG", "GBGGBGGGBGGGGBGGGBBGGGGGBBGBBBBGGBBBBGGGGGBGGGGBBG", "BGGGBGGBGBBBGGBBGGGGBBGBBBBGGGBGGGGGBGGBBBGGBGGGBB", "BGBBBBBBGBBGGGBBBGGGGBBGBGBBGGBGGGBGGBGGBBBBBGBGGG", "BGBGGBBGBBBGBGGGGBGBBGGGBGBGBBGBGBGGBBGGBGGGGGBBGG", "BBBGGGBGBBGBBGBBGGBGBGBBGGBBGBGBBBGBGBGGGBGBGGBGGB", "GBBBBGBBGBGBBBBGGBBGBGGBGBGBGGBGBBBBGGGGBGBGGGGGBB", "BBGBGBBBGBBBGBGGBBBGBGGGBBGBGGGGBGBGGGBGBGGBGGGGBG", "GBGBGBGBBBGGBBBGBGBGBGBGGGGGGGGBGBGBGBGBBGGGBBBBGG", "GGGBGBBGBGBBBGBBGBGBGBBGGGGGGGBBBGBGGBBBBBBBBBGGBB", "GGBBBBBGGGGBGBBGBBBBGBBGGBBGGGBBBGBGGBBBBBBBGBBBGG", "BGBGGGBGGGGGGBBGGGGBGGGGBBBGBGGBBGGBBBBBBGBGBBGBGB", "GBBBGBGBGGGGBBGGBBGBGBBBGBGGGGGBGGGBBBGGGGGGBBGGBB", "GBBGGBBGBGGGGBBGGBGBBGGBBBGGBBBBBGGBGBBGBBBBGBBGGB", "BBBBBBBGGBBBGBGGGBGBGGGBBBGBBBBGBGBBGBGBGGGBGGGBBG", "GBBBBGBGGGBGGBGGGBGGBBGBBBBBBBBGGBBBGBGBGGGGBGBGBG", "GBGGGGGBBGBGGBBBGBGGBBGBBBBBGGBGBGGBBBBGBBBBGGGBGB", "GBBBBGGGGBGGGBBBBGGBGBBGBGGGGBBBBGBBGBGBGGGGBBGBGG", "BGGBBGBBGBBGGBBBGGGGBGBGBBGBGBGGBBGGBGBBBGGBBBBBBB", "GGGBBGBGBBGGBGGBGGGGBBBGGGGGGGBBBGGBGGBBBGGBBGBBBB", "BGGGBBBBGGBGBGBGBGBGBGGGBGGBBBGBGGGGBBBBGGBBBGGGBG", "BBBBGBBBGBBGBBGBGGGGBGGBBGGGBGGBGGBBGGGGBGGBBGGBGB", "GGBGGGBBBGGGBGGGGGBGBBGBBBBBBBBGGGGBGGBGGBGBBGGBBG", "GGBBBBBGGBGGGBGGBGBBBBBBGGBGGGGBGGBBBGBBBBBGBGGBBG", "BGBBBGGGBBBBGGBBBGBGGGBBGBBBGBGBBBGGBGGBBBGGBGGGGG", "BGGGBBGBBBGBGGBGGGGBBBBGGGGGGGBBGGBBBGGBGBBBGGBBBG", "GGBBBGBGBBGGBBGBBGGBBBBBGBBBGBBBGBBBBBBBBBBBBBGGGG", "GBGGGBBGGBGGGGBGBGGBGBBBGGGBGGBGGBGBGBGBBGGGGBBBGB", "GBBBGBGBGBGGGBBGBGBBGGGBGGGBGBGGBBBBBGGBBGBGGBBGGB", "BGBGBBGGGBBBBBGBBBGGBBGBGGBBBGBGBGGBBGGBBBBBGBBBGB", "BBGBGGBBGGGBGBGBBGBGGGBBGBBBBGBBBGGBGGBGGGBBGBBGBB", "BBBGGGBBBGBGBBGGGBBGBGGBGGBBBGGGBGGBGGGBGBGBBGGBBG", "GGGBGGGBBBGBBBGBGGBGBBBBBGBBGBGBGBBGBGBGGGGGBBBGGB", "BBGGGGGBGGGGBBGBGBGGGGBGGGGBGBGBGGBBBGBGBBBBGGGGBG", "GBBBGBBGGGBBBGGGBGGBGGGGBGGBGGBBBGBGBGGBGBGGGBGBBB", "BGBBGGGGGGBBGBBGBBGBGGGBBGGBBGBGGGBBBBBGGBGGBGGBBG", "BBGGBBBBBBBGBBGBGGBGBGGGGGBBBBBGBBBGGGBGGBBBBBBBBG", "BBBBGGBBGGGGBGBGBBBGBGGGBBGGBGGGBBGGBBGBGGBGGBGBGG", "BGBGGGBGBGGGGBBGGBBGGBBGGBBBGBGGGGGBGBBGBBBBGGGBBB", "GGBBGGBGBGBGBGGBBGGBBBGBBGBBGBGBBGBBBGGBGGGGGBBGGG", "BBGGGGBGGGBGGGBGBGBGBGBBGGGGGGBGGBGBGBBGBGBGBGBBGG", "GBGBBGBBGBBGBGBGGGBGGBGGBBBBGBGGGBBBGGBGGGGBGBBGBG", "BBGGBGBGGGBBBBGBBGBBBGGGBBGGBGGGBBGBGBGGBGBBGBBGGG", "GBGGGGGBBBGGGBGBBBGGBGBBBBGGBGGGBBGGBGBBBGGBGBGGGG", "BGGGBBGGBBGBGGBGGGBGBGBGGGBBGGGGGBBBBBBGGGBBBGBBBB", "GBBGBGBGGBBBBBBGBBBBGGGGGBBGBGBGGGBBGGGBBBGBBBBGBB", "GBGBBBBBGBGGGGBBBBBBGBGGGGGGBGBBGBBGGBBGGBBGBBBGGG"};
    int R = 4;
    int W = 7;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2459;
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    vector<string> predictions = {"GGGGBBGBGBBBGGBBGGBBGGBBBGBBGBGGBBBBGGGGGGGGGGBGBG", "GGGBBBBBGGBGBBGBGBBBBGGBGBBBGBBBGGGGGGBGBGBGBBBBBG", "BGGGGGGGBBGGBGGBGGBGGGBBGBBGBGGGBBGBBBBGBGGGBBBGGG", "BBGGGBBBBBBBBBGBBGBGGGGGGBBBGGGBBGGBBGGGGBGBGGBGBB", "BBGBBBGBBBGBGGGGBGBGGGGBBGBBGBGBGBGGBBBGBBGGBBBGGB", "BBBBBBGBGBBBGGGBBBBBBGBGGBGBGBBGBBGBBBGGGBGBGGGBGB", "GGBGGBBGBGGBGBBGBGBBBGGGBGGGBGBBGBBGGGGGGBGBBGGBBB", "BBGGGGGGBBBBBBGBGGGBGBBBGGGBBGGGGBGBBGGBBBGBGBGGGG", "BGBGBBBGBGGGGGGBBBGGBGGBBBGBGBBGBBGGGGBGBGGBGBGBGG", "BBBGGGGGGBGGBGGGBGGGGGBBBGGGBBBGBBBGGBGBGBGBGBBGGB", "BBGGBGBGBGBBBBBBBGGGBGGGGGBGBGGGGGBBGGBBGBGGBBBBBB", "GGGBBGBBGGGGBGGBBBBBBBBBBBBGGBGBGGBGBGBBGBGBBGBBGB", "GBBGBGBGBGBBGBGGGGBGBGBBBBGGBGBBGGBGGBBBGBGBBBGGGB", "BBBGGBGBBBGGGBBBBBGGBBBBBGBGBGGBGGGGGGBBGGGGBGGBBG", "BGGGGGGBBBBBBBBGBBBGBGGBGBBBBBBBGBGGBGGGBBBBGGBBBG", "GBBBBBBGGBGBBGGBGGBBGGBGBGGGGGGBBBBBBBBBGGGBGBGGGG", "BGGGBBBGGGBGGBGBBBGBGGBBBBGGBBGGBGBGGBBGBGBGGBBBGB", "BBGGGGGGBBBBBBGGGGBGBBBBGBBBGBGGGBGBGGGBGBGGGGBBGB", "GBGGGGGBBBBGGGGBGBGBBGGBGGGBGBGGGGBBGBBGBBGBGBGGBB", "BBGBGGGBBBBBBGBGBBBBGBBBGGGGGBBBBBGGBBGGGGBBBGGBBG", "GGBBBBBBBBBGGGBGGGBGGBBGBGGBBBGGBGBBGGGBGBBBGBGGGG", "BBBGGGBBBGBGGGGBGGGGGGBGBBGBBGBBBGGGBBBBBGBGGBBBGG", "GBBGBGBBGBGBGGGBGGGGBGBGGGGBBGBGBBBGBGBGBGBBBBBGGG", "GBGBBBGBGBBGBBBBBGBBGBGBBGBGGBBBGBBGGGBGBBGBBGGBBB", "GGBBBGGGBGGBBBBGBGBGGGBGGGGBBGBBGGBGGGGGGBBGBBBGGB", "GGGGBBBGGBGBBGGBBGGGBGBGGBGGBBBGBBGGBBGBBBGGGBGBGG", "BGBBBBBGGBGGGGGGGGGBGGBBBGBBBGGBBBBBGBBGGBGGBBGGGG", "GBGBBBBGBGGBGGGBGGBBGGBGBGGBBGGGGGBGGGBBGBGGGGGGGG", "GGGGBBBGBBBGGGGGBGBGGBBGGBBBGGGGGGGGGGGGGGGBBGBBGG", "BBGBGGBBBGGGGBBGGBGBBBGGBGBBBBBGGBBBBBBGGGGGBGGBBB", "BBGBBGBGBBBBBBBGGBGGGGBBBBGBGBGGGBBGBBBBGBBBBGBBBB", "GGBBBGBBBGGGBBGGGGGBBGGBBBGBBBGGBGGGBBBBGBBBGBBGGB", "GGBGBBBBBBBBBGBGGGGBBBBGBBBBBGBGBBGBGGBGGBBBGBGBBB", "GBGGGBGGGBGGBBGGGBGGBGGBGBBGGGBBGBGBBBGBBGBBBBBBBB", "BBBBBBGBGBGGBGGBGGBGGBBBBBGBBBBGGBBGGBBBGGBGGGBBGG", "BGBBBBGGBBBBBBGBGGGGGBGBGBBBBGGBGGBGGBGBBGGBBGGBGB", "BBGGBGBBBBGBBBGBGBGBGBGBBBGBGGBBBBGBBBBGGBBGGBBGBG", "BGGGGBGBBBGGGBBGGGBGGBGGBBGBBGGBGGGBGBBBBGGBGGGGGG", "BBBGGBBBBBGGBBBBBBBBGGGGGBBBBGGBGGGGBGBBBBBGBGGGGB", "GGGGGBGBGBBGBGGBBBBGGBBBBBBGGBGGBBGBBBBGGGBBBGBGGB", "BGBGBBBGBGGBBGBBBBGBBGGGBBGBGGGBBGGGGBBGGBGGBGBBGG", "GGBBBBBBGBBBGBBBGGBBGGGGBBBBBBGBBGBBGGGGGBBBGBGBBB", "BGBBGBGGBBGGGBBBBGGGBBBGGGBGGBBBBBBBGBBBBGGBGGBBBG", "BBBBBGBBGBGBGBBGGGGGBGGGGBGBBBGGBGBGBGBGBGGBBGBGGG", "BGGBBBGBGBBGBBGGBGBGGBGGGBGBGBGGBBGBBGBGBBBBBBGBGB", "BGGGBGGGGBGBGGGBBGBBGGGBBGBGGGBGGBBGGGGBGGBBBGGBBB", "BGGBGBGGGBGGGGGBGGGGBBGGBGBGGGGGGBBBBBGBBGGGGBBBGB", "GBBGGBBGGGBBGBGGBBGBBBBBGGGBGBGGBGBBGGGGBGGGGBGGGG", "BBGBGGGBGBGBGBGBBGBBBBBBGBGBGBBGBBGGGGBGBGBGBBBGBG", "BBGBBGGGBBBBGBGBGBBBBBGBGGGGBBGBGBGBGGBGGGGBBGBBBG"};
    int R = 2;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2124;
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    vector<string> predictions = {"GBGGGGGGBGGBBBGBGBGBGGGGGGGGGGBBGBGGGGBBBGBGGGGBBB", "BGBBGBBBGBBBBBGGBBGBBGBBBBBBBGGGGBGBBBGBBBGBBBGBBB", "GBGGBGGBGBBBBBBGBGBBBGBBGBBGGGGBBBGGBGGGBBGBGGBBGB", "GGBBBBGGGBBBBGGGBGGGGGGBBBBGGGGGGGGGGBGGGBGGBBGBGB", "GGGGGGBBBGGBGBGBGGGGGBBBGGBBGGGGGBGBGBGBBGGBBGBBGB", "GBGGGBGGBBGBBGGBBGGBGBGBBBGBGGBBGBBGBGBBGBBGGBBGBB", "BGBGGBGBBBBBGGBGBGBBGGGGGGGGGBBBBGBGBBBBBBBBGBGGBB", "GBBGBBGGBBGGBBBGGGBBBGGBGBBBGBBGBGGGBBBGBGGGGGGGBB", "BGBGGGGBBBBBBGBGGGBGBBBGBBBBBGBGGBBGBBBGBBBGBGBBGB", "BBBBBGGBBGGBGBGBGBGGGBGBGBBBGGGBGGBBBGGGBBGGGBGBGG", "GGBGGGGGGBGGBBBBBBBBBGGGBBGBBBBBGBBBGBGBBGGGGBBBBB", "BBBBGGGGGBGGBGGBGGBGBGGGBBBBBGBBBBBGGGBBGGBBBGBGGG", "GGGGGGGGBBGGBGBBGBGBGGGGBGBGBBBBGBGGGBBGGBGBGBBBGB", "GGGGBBBGBBGBGBGGGBBBBGGBGBBGBBBGGBGGGGGBGBBBBGGBBG", "GBBBGGBGBBBGBBGBBBGBBBGBBBBGBGBGGBGBBBBBBGBGGGBBGB", "GBBGBGBBGBBBGGGBBBBGGBGGGBBGBBBBGGGBBBGGGGBBGGBBBG", "BGBGGGBBGBGGBGBGGBBGBBGGBBBBGGBGGGGGBBBGGBBGGGBGGB", "BBBGGGGBGBGBGBGBGBGGBBGBGGGGGBBGGBBBGBGGGBGBBGBGBG", "GBGBGBBBGGGBGGBBBGBBGBBBGBBGBBGGBGBBGGGGBGGGBGGGBB", "GGGBBGGBBGBBBGBBGBBBGBGGBGBBGBGBBBBBGGBBGBGGBGBGBG", "BBGGBBGGBGBBBGBBBBGBBGBGGBGBGGBGBGGBGGBBBGGGGBBGBB", "GBBBBBBBGGBBBGGBBGBGGGGGGBBGGBBGBBGBBGBBBBGBGGBGBG", "BGBBBGGGGBGBGBBGBGGBGBGBGBBBBBBGGBGBBBGGGGGBGGGBGB", "BGBGGBGBGGBGBGGBGGGBBBGGGGBBBGGGGBBGBGBBBBGBGGGBBG", "GBBGBBBBGGBBBGGBGBBGBGBGBGBBBGBBGGBGGBGGGGGGBGBGBG", "BGBBGGBBGBBGBBGGBGBBBGGBGGBBBBBBBBGBBBGBGGBGBBBBGG", "GGGBBGBBBBGGBBBBGGGBBGGGGGBGBBGBGGGGGGBBGBGBGBBGBG", "GGBGGGBBBGBBGGBBBGGBBGGBGBGGGGGGGGGGBBBBBGBBGGGGBG", "GGGGBBBBBBBGBGBGBGBGGGBGGBGGBBBBGBGBBGGGBGBGGBBBGB", "BGBGGBGGGGGBBGGBBBBGBGBBGGGGGBBGBBGGGBGBGBBBBGBGBG", "BGBGBGGBBGBGGBBBBBBBBBBBBBGBGGGGGGBGGBBBBBBBBBGBGG", "GBBGGBBBBGBGGGGBGBGGBGBGBGBBGBBGBBBBBGGGGGBBGBGGGB", "GBGGBBGGGBBGBBGBBBGBBGBBGGBBGGGBGGGBBBBBBGGGBGBBGG", "BGBBBGBBBBBBGGBGGGBGGGBBBBGBBGBBBBBBGBBGBGGBBBGBGG", "BBGBGGBGGGGGGGBGBBBGGBGGGBBGGGGBBBBGBBGGBBBBBBBBBG", "GBBGGBGGGGBBBBGGBBGBGGGGBGGBBGBBBBGGGBBGBGGBGBBBGG", "BGBBBBGBGBGGBBGGGBBBGBGGGGBBBGBGBBGGGGGBBBGGBGBGBG", "BBBBGBGBGGGBGBBGGGGGGGBBBBGGGGGGGGGBBBGBGBBBBGGGGB", "GGGBBGGBBGBBGGBGGGBGBBBGBGGBGGBBGGBGGBGGGBBBBBGBGB", "GGGGBGBGBBBBGGGGBGGGBBBGGGGGGBBBBGBGBGBBBGGBBBGBBB", "GGBGGGGBBBGBGBBBBBBGBBGGBBBBBBGBBBBBBBBBGGGBBBGGGB", "BGBGBBBBBBGGGBBGBBGGGBGBBGBGGGBBBGGBGBGGGGBBGBGBBB", "BGBBGBGBBBGGBBBGGBBBGBBBGBBGGGBGBGBGBGBGGBBGBGBBGG", "GBBBGBGBGBGBGGGGGBBBGBGGBGGBBGBBGGGBGGGGBBGBBGBGBB", "BBBBGBGGBGBGBBBGGGBBBBGBBBBGBGBGBGBGBGGGBBBGGBGBBG", "BGBGGBBGGGGGGBGBGBGBGBGGGGBGGGGGGGGGBBGBGGGGBGBBBB", "BBBGBGGGGBBGGBBGBBGBBGGGBBBGBGBGBGGGGBBBBBGBGGBBGG", "GGGBBGBBGBGGGGGBGGGBGBGGBGGBBBGBGBBGBGGGGGGGGGGGBG", "BBBGGGGBGBGGGGGGBGGBGBBBBBBBGBBBGBGGGBGGBBBBGBGGBB", "GBGBGBBGBGBGGBBBBBGGGGGBGGGBBBBBBGBBBBGBBGGBBGGGGB"};
    int R = 9;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2300;
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    vector<string> predictions = {"GBGGGBGBBBBBBBGGBBBGBGBBBBGGGBGGGBGGBBBGBBBGGGBBBG", "GGGBBGBBGGGBGBGGBGGBGGGBBGBBBGGGGGBBBGGGBGBGGBGGBB", "GGGGBGGBBBBBBBBGGBBGGGBBGBBBGGGGBBBGGBBGGGGBBBGBBG", "BBBBBBBBBGGGGBGBBBBBGGGGBBGGBGGBBBGGBBBGGBBGBBGBBB", "GBBBBGBGBGBGGBGGBBBGGBBGGGBBGBGBBBGGGGBBBBGGGGGGGB", "GGBGGBGBBBGGBGGBGBBBBBBBGGGBBBBGGGBBGGBBBBBBGBGGBB", "BBBBBGGBGBGGGGGGGGGBGGBBGGBBGBBBGGGGGBGBBGBBBGBGGB", "BBGGBBBGGBGGBGGGBBGBGGBBBGBBBBGGGBBBGGGBBGBBBGGBBB", "BGBBGBBGBGBBGBGGGGGGGBBBGBBGBBGGBBBBGGGGBBGGGGBGGB", "GBGGGGBBGBBGBGGBGBBGGGGGBBBBGGBBGBBBGBBBBBBGBBBGGG", "BGBGGBGGGBGBBGBGBGGBGBGGGGGBBGBBGBGBBBBBBGBBBGBGBG", "BGGGGBBBBGBBGGGBGGBGBGGGGBBGBGGBBBGBBBBGBBGGGGBBBB", "GBBBBGBBBBGGGBGBGBBBGGGGGBGBGGBBGBGGBGBGGBGGBGBGBG", "BGBGGBGGGBBGBBBBGBBGBBGBGGBGBGGGGBGGBGGGBBBGGBBGGG", "GBGBBBGGBGBBGGBBBBGGBBBGBBGBBBBGBBGBGGGGGGBGBGBGBB", "BGBGGBGBGGBGGBGGBGGGGBGBBGBBBGGBBGGGGBGGBGBGBGBGBG", "GGGGGBBBBGGBBGGBGBGGGBBBBGBGGBBGGBGGBBGGBBGGGGBBBG", "GBGGBGGBGGGGBBGGBBGBGGBBGBGBBBGGBGBBGGBGGBGGGBBBGG", "GGGBBBGBBBBGGGBBBBGGGBGBBGBGGGBBGGGBBBBBGGBGBGBBGG", "BGGGGGGGGBGGGBBBBBBBBGGBGBBBBGGGBGBGBBBGBBGBBGBBBG", "BBBGGBGBBBBBGGGBGBBGGBBGBGGBGBBGBGBBGGBBGBGBGGGBBG", "BGBBGBBGGBBBGBGGBGBBGGBBBBBGBBBGBBGBGGBBGBBGBGBGBB", "BGBGGBBGBGGGGBBGGBGBBGGBGBBGGBGGBGGBBBGGGBBGBBGGBG", "GGGGBGBGBBBGBGGBGGBGBBBBBGGBGGGGBGBGBBGGGBBGGGBBGB", "GBGGGGGBBGGBBGBGBGGGBGBGGGBGGGGBBGGBBGBGGBGBGGGBBG", "BGGGBBBGGBGBGBGGGGBBGGBGBBBBBGGBGGBBGBBBBGGGGGBBBB", "BGBBBBGBGBGBGGGBGGBBGBGBGBGGGBGGGGGBBBBBGGGGBBGBBB", "GGBBBGBBGBBGGGBGGBBBGGGGGBGBBGGGBBBGGBGGBGGBGBGGGB", "GBGBGGGGGBBGGBBGGGGBBGBBBGBGGGBGGGGBGBBGBGBBBBGBBB", "GBGGGBBGGGBGGGBBGBGBGGGBBGBGBGGGGGBBBBBGBBGBBGBBGB", "GGGBBBGBGBGBGGBBBGBGGGGGGBGBGGBBBGGGBBBBBBBGGGBGGB", "GGGBBGBGBGGGBGGGGBGBGBGBBBBGBGGBGBBGBGGBGBBBGGGBBG", "BGGBBBGGGBBGGBBBBBBGBBBBBBGBGGGBBBBBGBBGGBGGGGGGBB", "BBBBGBBBGGBBGGBBBGGBGGBGBBBBGGBBGGGGBBGGBGGGBBGGBG", "BGGGGGGGBBGGBGGBGGBBBBBBBGGBBBGGGGGBBGBGBGGBGGBBBG", "GGBBBBBBBGBBBGGGBBBBGGGBGGBGGBGBBGBBBGGBBBGBBGGBBG", "GBGBBGBGGGGBGBGBBBGGGGGBGGBBBGBBGGBGGGGBBBGGGBBBBG", "BBGBGGGBBBBGBGBGBBGGBBBGBGBBBBBBGGGBBBGGBBBBBGBGGG", "GGBGGGBBGGBBBBBGBGGGGBBBGBGGGBGBGBGGGGGGGBBBGBGBGB", "GGBGBGGBGGGBGBGBGBBGGBGBGBGBGBBGBBBBGGGGBBBGGBGGBG", "GGBBBGBBGBBBBBBBGGBGBBGBGBGGGGGGBBBBGBBBGBBBGBBBBB", "BGBGBBGBBGBBBBGGBBBGBBBBGBGGGBGBBGBGBGGBGBGGBBBGGB", "BGGBBGGGGBGBGBBGBBGGGGGGBBBBGBGGGBGBGGGBGBBGGBGBGB", "BBGGBGBBGBGBGGBBBGGBGGBGBBGBBGGBBGGBGBBBBBBBGBBBBB", "GGBGGBBGBGBGGGBGBGBGBBBGGBBGBGGGBBBBBGBGGGBGGBGBGG", "BGGBGGBGBGBGGBBGGBBBBGGBBBGGGBGBGGGBGBGGGGBGBGGGBB", "GBGBGGGGBGGGBGBBGGGBGGGBGGGBGBGBGGGBBBBBBGBGGGGBGB", "BBGBGGBBBGGBGGGGBGBBBGGBGGGBGBBBBGGBBGBBGGBGGBBGGG", "BGGBGGBGBGGBBGBBGGBGBBBBGGGBBGBGGGBGBGGGGGBBGBBGBG", "GBBGGGBBBGGGBGBGGBGGGGGGGGBBGGBGBBGBGGBGGGGGGGGGGG"};
    int R = 2;
    int W = 3;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2256;
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test67() {
    vector<string> predictions = {"GGBBGBBGBBGGBBBBGBGGGBBGBBGGBGBBBGGBBBGBBGGBGBGGBG", "BBBBGBBGGBGBGGBBGBGGBBBGBGBGBBGBGBBGGBBGBGGGBGGBBB", "GGGGGBGGGBGBGBGGGBGGBGBGBBBBGBGGBBGBBGGBGGBBGGBGGB", "BGGGBGGBGGBBBBGBBBBBGGGGBBGBBGGGGGBGBBGGGBBBBBBBBG", "BGGGGGBGBBBBGGGBBGBGGGGGBGBBGBBBGGBGBBBGGBGGGBBBGB", "GBBGBBGBBGBGGBBBBGBGBGBGGGGBBBBGGBBBBBGBBBGGBGBGBB", "GGBBGBBGBBBBGBGBBBBGGBBGBGBGGBGBBBBGGGGBGBBBBGBBBG", "GBGBBBBGGGBBBBBGGBBGBBGGBBBBBBGGGBBGBGBGGGBGGBGBBG", "GBBGBGBBBBBGGGBGBBBGGGBBGGGBBBBGBBBGBBGGGGBGBGBBBB", "BBGGBBBGGGGBGBBGBGGBGGGGBBGBGGBGGGBBBGBGBBBBBGBGGG", "GBBGGBGGGGBGGGGGGBBGGGGBGGBGBBBBGGGGBBGGGGBBBBBBGB", "BBGBBGBGGBBGGGBGBGBBBGGBGBBBBGGBGGBGBBBGGBBBBBGGBB", "BGGGBGGBGBGBGGGBBBGBBBBBGGGBBGBGGGBBGBGGGGBBGGGGGB", "GBGBBBGGBBBBGBGGGBBBGBGBGGGBGGGBBGBGGGBGBBGGBBGBBG", "BBBGBGGGBGBGBBBGBBBGBBBBGBBGBBGBBGBBBGGBGGGGGBBBBB", "BBBBGBGGGGBGBBGBGGGGGGBGBBGGGGGBBBBBBGBGGGBGGBGGBB", "GBGBGGBGGGBGBGGGGBGGGBGBBGGGBBGGBGGBGBBGGBBGGBBBBB", "GGBBGGBBBBBGGGBGGGGBGGGGGBGGGBGBGBGGBGBBGBBBBGGBGG", "GBGBBGBGBGBGGBBBBGGGGBBGBGGBGGGGBBBBBBBGGBGGGGBGGB", "GGBGGBGGGGGBBGGGBGBGBGGGGGBBGBBGBGGGGGBBBGGGBGGGGB", "BBGBGGGBGGBBBBBBGGGGGGGBGBGGGBBGBBBBGBBBGBGGBBGGGG", "BGGGBGBBGBGBBBGGBGBGGBGGBBBBGBGBGGBBBGGBBGGBBBGBBG", "GGGBGGGBBBGGGGGBBBGBGGGGGBBBGBGGBGBGBGBGGGGGGGGGGG", "GBBBGGBBGGBGBBBBBBGGBBBBBBBBBBBGBBGBGBBGGGBGGBGGGB", "BBGBGBBGGGBGGBBBBGBGBBBGGBGGGGGBBBBBBBGGGBBBBBBBGG", "BGGGBGGBBBBBGGGBBGBGBBBBGGGBBBBGGGGGGBBGBBBBBGGGGB", "BGBGGBGBGGGGBGGGBGBGGBBBGGBGBBGGBGBBGBBBBGGGGGBBBB", "BBBBBGBGBGBBBGBBGGGBGGBBGBBGBGBGBBGGBBBBBBBGBBGBBG", "GGBGGGBBBBBGBBGBGGBGBGGBBBBGGBGBBGBBBBGBGBGGGGGBGG", "GGBGGGBGGBBGBBBBGGBBGBBGBBGGBGGGBBBBGBGBGGGGGGGGBB", "GGGGGGGGBBBBBGGBGBGBBBGBGBBGBGGBGGBBBBGBBBBBGGBGGG", "BBBBGBGGBGBBGGGBBBGGBBGGBBBBGGBBGBBGGGGBBGBBBGGBBB", "GGBGBBGBBBBBGBGBBGGBGBBGGGBBBGBGBGGGBGBBBGBBGBGBBB", "BGGGGBBBGBGGGBGBGBBGGBBBBGBBBBGGBBGGGBGBGBBGBGGGGG", "BBBGGBBBGGBGBGBBGBGBGGBBBGBGBBGBBGGGBBBBBBBBGBGGBG", "BGGBBGBBBGGBGBBGBBGGBGBBGBBGBBBBBGGGGGGBGGGBBBBBGG", "BGBGGGBGBBBBBGBGBGBGBBBBBBGGGGBBBGBBGBBBGBBBGGGBGG", "GBBGBGBGBGGGGGGGBBBGGBBGBGGGBGBGBBBBBGBBGGBBBBBBGB", "BGBGGGBBBBBBGGGBGBGGGBGBGGGBGBGBBBGGGGGBBBBGGGBGGG", "GBGBBGGBGGBGBGBBGGGBGBGGBBGBBBGBGGBBBBBGGBBBGBGGGG", "GBGBGBBBGGBBGGGGGGGGGGGBBGBGGBBGGBGBBGBBBGBBBBBBGG", "GGGBGGGGBBBGGGGBBBBBGGGGBBBBGBBGBGGBGBGGBGGGGBBGGB", "BGGGGBBBGBGBGBGBGBGGBGGGBGGBGGGGGBBBGBGBBBBGBBGBBB", "GGGBGGBGBBGBGGGGBGBBBGGGBGGGBGBBBGGBGGBBBGGBBGBGGG", "GGBBBGBGGBGBGBGGBGBBBBBBBGBBBGBGBGBBBGBBBBBGBBBGBG", "BGBGGBGGBGGGGGGBGBGBGGGGBGGGBGBBBBBBBBBGBGGBBGGBBB", "GBGGBBGBGGBGBBGBGBGBBBBGBGGGGBBGBGBBGBGBBGGGGBGGGG", "BBBGGBGBGBGBBBBBBBBBBGGBBBBBGBBBGGBGBGGGBBBBGGBBGG", "GBGBBBGGBBGBBGGBBGBGGBBBGGGGBGGBGBGBGGBBGGBGGBGGGG", "GBBBGGGBBBGBBBGBBGGBBGGGBBBGBGBGBGGBBBGGBGGGBGGGGG"};
    int R = 5;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2297;
    if(result == expected) {
        cout << "Test Case 67: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 67: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test68() {
    vector<string> predictions = {"BGBGGBGGGGBBGBGBBBGBGGGGGGBBBBGGBBBBGGBGBGGGBGGBGB", "GGGGBBGBBGBGBGGGGBGBGGBBGGBGBBBBGBGGBBGBBGGGBGGBGB", "GBBGBGGBBBGGBBBGGGGBGBGGBBBGBGGBGBGBGGBGGGBBGBBGBB", "BBBBBGBBGBBGGBBGBBGBBGGBBBGBBBGBBGGBBBBGGBBGBGBGGG", "GBGBGGBBGBBBGGBGGGGBGBGGGBBGGBBBGGBGGGGGGBBGBBBBGB", "GBBBGBGGBBGGBGBGGGBGGBGBBGGBBGGGBGBGBBGBGGBBBBGBBB", "BBGBGBBGBBGGGBBGBBBGBBBBGGGBBBBGGBGGGGGGBBGBBBBGGG", "GBGGBGBBBGBGGGBBBBGBBBBBBGGGGGGBBBGBBGGGGBBGGBGGBG", "GGGBBGBGGBGGBGBGGGGBBBGBGBGGGGBGGGGGGGGBGBGBGGGGGG", "GGBBGGGBGGGGBGGGGBBBBGGGBBBBBBBGGGBBGBGBGBBGGGGBBG", "BGBBBGBGBBBGGGGGBGGGBBBGBGGBGBBGGGBBBBGBGGBGBGBBGB", "GGGGBGBBBBBGGGGBGBGGBBGBGGBBBBBGBGBGBBBBBBGBGBBBBG", "BBGBGBBGGBBBGBGGGBGBGBGBGGBGGGGGGBGGBBBBGGBBBBBGGB", "GBBGGGGBGGBBBGBBBGBBGGBBBBBGGBBBBGGGGGBBGGGGGBGBGB", "BGBBGGGBBBGBBGGGGGGGGGGBBBGGGBGGBBGBBGBBBGGBBBGGBB", "BGBGBBGGGGBBBBBBBGGBBGGGGBGGGGBGBBBGGGBBBGBGBGBGBB", "BBGGGGGBBGBGGBGGGBGBGGBBBGGGGBGBGBBBBGBBGBGGBGBBBB", "GBGGBBBBGBBBGGGBBBGBGBGGBGBBGGBBBGBGGGBBGBBGBBBBGB", "BBGBGBBGBGBBBBBGBGBGBGBBGBGBGBBGGBGBBGBBBGBBBBGGGB", "BBBBBGBBGGGBGGBBBBBGGGGGBGGGGBGGBBBBGGBBGGGBBBGBGG", "BBBBGGBBBGGGBBGGGBBBBBGBGBBGBBBGBGBGGGBGBBGGBGBBGG", "BGGGBGGGBGGBBBGGBGBBBGGBBGBGBBGBBGBBBBGGBBGGBGBGBB", "BGGGGGGGGGGBGBGGGGGGGGGGGBBBBGGGGGGBBGGBGGBBGBBBBB", "GBGGBGGBGBBGBGGGBGGBBGBBBGBGBGBGBGBGGBGGBBBBBBGGGB", "GBGGGBBBGBBBBBBBGGBBGBGGBGGGGBBBGGBGGBBGBGGBGBBBGB", "GBBGBGGBBBGGGGBGBGBBGBGBGGBBGGGBBGGBGBGBGGBGBGGBBG", "GGBBBGGBGBGGGBGBBBBGGGGGBGBBGGBGGBGGBBBGBGBGBBBGBG", "BGGBGBBBGGGGBBBBGGBBGGBBGGGBBBBGBBGBBGBGGBGBBBBGGG", "BBBBGGGGBGGBGBBBGBGBBBBGGBBGBGGBBBGBBGGBBBGGBGBGBG", "GGBGBBGBBGBBBGBBGGGGBBBGGGGGGGGBGBGBGGBBBBBGBGBGBB", "BBBGBGBBGBBBBGGGBBGBBBBGBBGBGGBBGBGGBBGBGBBGBBBGGG", "GGBGBBBGBBGGBBGGBGBBBGBGGGGBGGBGGBGGBBGBGBBGGGGBGG", "GBBBBBGGGBBGGGGBBGGBGGBBGGGGGBBGBGBGGGBGGBGGGGBGBB", "GBGBGGGBBGGGGGBGGBBGBGBGBBBBGGBBGGBBGGBBGBBBGGGBGG", "BBBGBBGGBBBGGBBGGGGGGBBBBGBBBBGBBGBBGGGGBGGBGGBBBG", "BGGGGBBBBGBGBGGGGBGBBBBGGBGGBBBGGGGGBBGBGGGBGGBGBG", "BBGBGGBGBBGBBBBGGGBBBBGBBGGGBBGGGGGGBGBGBGGBBGGBGG", "GBBBBGBGGGGBGBBBBBGBBBBGGGGGBGGGBGGGBBBBBGBBGBGGGG", "BBBGGGBBBGGGGBBGBBBBBBBBBBBGBGBBBGBGGGBBBGBGBGBGGB", "BBBBGBGGGBGGBGBGBGBBBGBBGGGBBGGGBGBGGGGBGBBBBGBGGG", "BGGGBGBBBBBBGGGGGGBBGGBBBBGGGGGBBBBGGGGGGGGGGGGBBB", "GGBGBGGGBGBGBBGBGBGBGGGGBBBBBBBGBGGBBGBGBGBGBGBBBB", "BBGGGBGBGBGGBGBBBBBGGGGBBBBBBBBBGBGBBGBGBGGBGBBGBG", "GBBGGGBGBBBGGBGGBGBBGBBBBGGGBBGGGBBBBGBGGBBBBBGBBB", "GBBBBBGGGGGGBGBGGGBBGBGBBGBBBBGBGGGGGBGGBBGGBBGBGG", "GBBGGGGBBBBBBBBGBGGGGBGBGGBGGGGGBBGGBGGGBBBBGBBBBB", "BBBGGBBGBBGBBGGGGGGGGBBGBBGGGGBGGGBBGBGBBBBBBBGBBB", "GGBBBGGBGGGGGGGBGGBGBBBBGGGBBGBGGBBBGBGGGBGBGGBGBG", "BBGBBBBBGBBGGBBBGBBGGGGGGBGBGGGGGGBBBGBBGBBBBGBGBG", "GBGBBBBGGBGBBGBBGBGBBBGGGBBGBGBGBGGGBBBBGGBGGBBBBG"};
    int R = 10;
    int W = 1;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2074;
    if(result == expected) {
        cout << "Test Case 68: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 68: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test69() {
    vector<string> predictions = {"BGBGGBBGBGBGBGBBBBBBGGBGBBBGBBBGBBGBBBBGGGBBGGGGGB", "GGBGBBBBGBBBGGGGBBGGBBBGBGBGGBGGBBGBGGGGGBBBBGGBBB", "GGBGGGBGGGGBBBGGBBGGGBGGGGGGBGGBBBBBBGGGGBGGBBBBGG", "GGBBGGGBGGBBBBBGBBBBGBBBGBBBBBGGBGGGGBGGGGGGBBGBGG", "BBBGBBBBGBGGGGBBBGGGGGBBGGGGBBBGBBGBBBBGBGGGBBGGGG", "GBGBGGGGGBGBGBBGGGGGGBBBGBGBGBBBBGBBBBGBGBBGBBBBBG", "GBGBBBBGGGGGBBBGBGBBBBGGBGBBBBGBGBBGGBGGGGBBGBBGGG", "GBGBGGGBGBGGGGBGBBGBBBGGGBGBGGGBBGBGGBGGGBBBBGBGGG", "GBBGGBGBBGBGGGGGGGGBGBGGBBGBGGBGGBBBGBBGBGBBBGGGBG", "BBGBBGBGBBGBGBBBGGBBBBBBBGGBGBBGGGBGGBBBBGBBBGGBGB", "BBBGGBBBGBBGBGBGGGBBBBBBGGBGGBBGGBGBBBGBGBGGGGGBBB", "GBGBBBBBGBBGBBBBGGBGBBGBBBBBBGGBGGBBBGBGGBGBBBBGBG", "GGBGGBGBBBGBBGGGBBBBGGGGGBBGBGGBBGBBGBGGGGGGBBGBGG", "GBGGGGBBGBGBGGGBGBBGBGGGGBGGGGGGGGBBBGGGBBBGBBBGGG", "BBGGGBGGGBBBGBBGBGGBBGBGBGGBBGBBBBGGBBBBGBGGBBGGGG", "GBBBBGGBBGBBGGBGBGGGBGGBBGGBBBGBBGGGGBGBBGBBGGBGBB", "GBBBBBGGGGGBBBGBBBBGBBBBGGBGBBBBGGGBBBBBGBBBBBBGGG", "BBGGGBBGGBBGGBBGBGGBGBBBGBGGBGBGBBBBBGBBGBBBGBGBBG", "BBGGGBGGBGGGGGGGGGBGGGBBGBBBBGGBGGBGGGGBGGGBGBGGGB", "GBGBBGGGBBBBBGBBBGGBGGBGGBGGBBGGGBBGGBBBBGGBBBGGGB", "BBGGBBGBGGGBGBGGBBGBGBGBGBBGBGGBGGBGBGBGBBBBGGBGBG", "GBBBGGGGBGGGBBGGBBBGBBGBGBBGBBGBGBBGGGBGGGGBBBBBBG", "GBGGGGBBGBBGBBGBBBBGBGGGGGBGBBBBBGBGGGGBBGBBBBGBGB", "GBGBBBBGBBBBBGGBBBGBBGBGBGGBGGBBGGBGGBBBBGBBBGGBGB", "BBGBBBBGBGGGGBBBBGGBGBBBGBBBGGBGGGGGGGGBBBGBGGGGBG", "GBGGGGGBGBGGGGBGGGBBGGBBBGGBGBBBBGBGBBBGBBGGGBBGBB", "BGBGBBBGBBGGBBGGGGGGBGBGBGBBGBGBGBGGBBBBBGBBGBGGGB", "BGBGGGGGGBGBGGBBGBBGBBGBBBBGGBGBGBBBBBGGBGBBBGGBGB", "BGGBBBBBGGGGGGBBGGBGGBBGBBGGGGBGBBGGGGGGGBGGBGBBGG", "BBBGGGGGBGGGBGGGBGBGGGGGGBBGGGBBGGGBBBBBBGBBBGGBBB", "BGGGGGBBBBGBGBBBGBBBBGGBBBGGBBGGGGGBBBGBBGGBBGGGGG", "BBBBBBBGGGBBBGBBGBBGBBGGBGBGBGGBGBGBGBGGBGBGGGGBGB", "BGBBBBGGBGGBGBGBBBGGBGBBGGBGBGBGGBBBBBBBGGBGGBGGGG", "GBBGGBGBGGBBGBGGGBBBBGGBGGGGGGGBBGGGBBBBBGGBGBGGBG", "GBBGBBBBGBGBBBBBBGBGGBGGGBGGGBGBBGGGGGBGGGGBBGBBBG", "GGGBGGBBGGGBGGGBGBGGGBGBBBBBBBBBBBGGGBGGBGGGBBBBBG", "GGGGGBBBBGGBBGGBBGBGBGGBGBBBBGBGBGBGBGGGBBBBBGBBBG", "BGBGBBGGGBBGBBBBGBBBBBBBBBGGBBGGGBGBBBBBGGGGBBBBBB", "BGGGGBGBBGBBBGGGGGBBGGGGBBBGGGBGGBGGBGBBGBBBBGGGBB", "GBGGGBGBBGBBBBBBBGGBGBGGBGBGBGBGBBGBGGBBBBBGGBBBGG", "GGGGGBBGBBGGBBGGGBBBBBBGGGGGGBGBGGGBGGGBGGBBBBGGBB", "BGBGBBGGGBGGGBBGGGGGGBBBBGBGGBGBBBGBBBBGGBGGBGGGBB", "GGGGBBBGGGBBGBGGGGGGGGBBGGBBBGBBGBGGBBBBBGGBGGBGGB", "BBBGGBBBGBBGGBGGGGGGBBGBBGBBBBBGGBBBBGBBGGBBBBGGBB", "BBBGGGBGBGBBBGGGGGGBGBBGBBGBBGBGBGBGGGGGBBGGGGGGGB", "GBGGGGBBGBBGGBGBGGBGGBBGGBBBGBBBGBGGGGBGGBBGGBBBBB", "BBGGBBGGGBBGBBBGGBGGBGBBGBBGGBBBGGGBGBBGGGBGBBGBGG", "GBGBBBGGBGBGGBGGGBGGBGGBGGBGGBBGGGBBGGBGGBBGGGGGGB", "GBBBBGGBGGBBBGGGBGGGBGBGBBBGGBBBBGBGBGGGGGBGGBBBBG", "BGGBBBGBGBGGGBBBBBGGBBBBBGGGGGBBGGBBGGBGBBBGBBBBBG"};
    int R = 4;
    int W = 3;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2358;
    if(result == expected) {
        cout << "Test Case 69: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 69: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test70() {
    vector<string> predictions = {"GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBB", "BBBBBBBBBBBBBBBBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBB"};
    int R = 50;
    int W = 50;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2477;
    if(result == expected) {
        cout << "Test Case 70: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 70: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test71() {
    vector<string> predictions = {"GGBB"};
    int R = 1;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 71: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 71: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test72() {
    vector<string> predictions = {"GGGBBGGBBGGBB", "BBGGBGGGGGBBBBBBBGBGBGGBGGBGGBBGBGBGBBBGBBGBBGBBBG", "BGGBBBBBBGGBGGGGGGGGGBGBGGGBBGBBGGGGGGBGGBGBBGGGBB", "BBBGGGBGBGBBGGGBBBBGGGBGBBBGBGGGBGGGBBBBBBBBBBBGBG", "GGGGBGGBGBGBGBGBBBGGBGGGGBGBGGBGBBGGGGBBGBGBBBGBBG", "BGBBGBBGGBGGGBBGBBBBBBGBGGGGGGGBBGBBGGGGGBGBGBBGGB", "GGGBGGGGBBBGGGBGGBBBBGGBBGGGBBBGBBBBGBGBGGBBGGBGBB", "GBGGBBGBBGBGGBBBBGBBBBGBBBBGGBGGBGGBGBGBBBBBGGGBBG", "BGGGBGGGBBBGBGGBGBBGGGBBGBGGGGBBGBGBBGGGGGGBBGBBGB", "BGBGGBGGBBGBBBBGBGBBBGBBBBGGGGGGBGBGGGBBBGGBBGGGBG", "BBGGGGBGGBBGGGBGGBGGGBGBGBBGGBGGBBBGBBBGBGGGBGBBBB", "GGGGGGBBBBBGGGGBGBGBGBGGBBBGGBBGBGBGBBBGGGBGBGBGBG", "GGBBGGGBGBBBBBGGBGBGBBBBBBBGGBBGGGGGBBGBBBBBBGBGBG", "GBBBBBBGGGBBGGBBBGBGGBGBGGBGBBBBGGBBGGGBGBGBBGGGBG", "GBBBGGBGBBGBBGBGGGBBGBGBBBBGGBBGBBBBBGBGBBBBBGGBGB", "GGBGBGGGBBGBBBGBGBBGGGBBBGGGGBBBBGGBGGBGBBBGGGBGBB", "BGBGBGGGBBGGGBGBBBBBGBBBGBBGBBBBBBGGGGBGGGGGBBGGGB", "GBBGBGBBGGBBBGGBGGBBBBBGGBGGBBGGGGGGBBGBGGBBBGGBGG", "GGGGGBBBGBBBBGGGGGBBGGGGBGBGBGGGBBBGGGGGGBBGBGBBGB", "BGGBGGGBBBGBGBBBBBGGBBGBGGBGBGGBBBBBBBGGBGBBBBGBGG", "GGBGGGGBBBBBGGBGBGGBBGBGBBGGGGBBGBBBBBGBGBGGBBGGGB", "BGBGBBGGGGGBBGGGBGBGBBGBGBBGBBGGGGBBBGGGGBGGGBGGGB", "GGBGBGBGGGBGBBGBGGBGGGGBGGGGBBBGGBGGGGGBGGGGBBGBGB", "GBGBGGBBGBGGGBGBBGBGGGGGGBGBBBBBBGGGBGBGBGBBGBGBBG", "BGBGBGGGBBBBBGBBGGGGBBGBGGGGGGBGGBBBBBBBBBGGBBGGBG", "BGBBBBGGGBGGGGGBGGGBBGGGGBGGGBGBBBBBGGBGBGGBGGGBGB", "GBBGGGBGBGGGBGBGGGBBBGBGBGBGGGGBGGGBGGBBBGBGGBGBGB", "GBBGBBGBGBGBBBBGGBGBGGBBBBBBGGGGBGBBGGGBGBBBBBBBGG", "GGGBGGBGBGBGGGGGGBGBBBGBBGGGGBBGBGBBBBGGBGGGGGBGGB", "GBBGGGGBGGGGBGBGGBBBBBBGGGBBGBBGGGBBGGBGGBBBBGGBGB", "GGGBBBGBBGGBGBBBBBGBGGGGGBGBBBGGGGBGBBGBGGGBBBGGBB", "GGGBGBGGGBGBGGGGBGGBGGBGBBGBBBGGGGBGBGBBBBGGBBGBBG", "GBBGGBBBGGBGGGBBBGGBBGGBBBBBGGGBBGGBBGGBBBBBGGGGBB", "BGBBGBBBGGBGGBGGGBBBBBBGBBGGGBBGGGBGGGBBGBBBGBBGGB", "GBBBBGGBGGBGGBGBBGBGBGGGGBBBBBGBBBBGGBBBBGBBGBBGGB", "BGBBGGBGBBGBGGGGBGGBGGBGBGBGBBGGGGGBGGBBGBGGBBBBGG", "BBBGGBGBGBGBGBBBBGBGGGBGGBGGBBBBBGBBBBBGBBBGGBBBGB", "GGGBBGGGBBGBGBGGBBBBBBGBBGGBGGBBBGBGGGBGBGBGGGBGGG", "GGGBGGGBBGBGGBBGBGBGBGBBGGBGBGBGGGGGBGGGBBBBBGBBBB", "BBGBBBBGBBGGGGBBGGBGBBGBGGBGBGGGBBBGBBBGBGGBBGBGBB", "BGGBBBBBBGBBGBBGGGGBGGBBGGBBBGBBBBBBBBGBBGGBBBBGBG", "GGGBBGGGBGGBBGGBGBBGGGBBBGGBGBBBBGGGBGGGBBGBGGGBGB", "BGGBBBBGBGBGBBBBGBGBBGGGBBGGBGGBBBGGGBBBGBBBBBBBGB", "BBGGBBBBBGGGGBBGBBBGBBGBGBBGBBBGGGGBGGBGGBBGBGBGGG", "GBBBBBBGBBGBBBGBGBGGGBGBBGBBGBBGBBGBGBGBBBBGBGGGBB", "BBGBGBGBBGGBGBGGBGBGGGGBBGBGGBGGGBBBBBGBGGBBBGGBGB", "GBGGBGGGBGBBGBGBBBBGGBGBBBGGBGGGGBGBGBGGGGBGGBBBBG", "GGGGGBBGGBBGGBBBBGBBBGGBBGGGGBBGBGGBBGBBGBBBGGBGBB", "GGBBBBGBGBGBBBBGBBBGBBBGGBBBBBBBGBGGGBGBGGBGGGGBBG", "BBGBGGGGGBBBGGGBBBGBGBBGBGBBBBGBGGBGBGBBBBBBGBGBBB"};
    int R = 2;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2120;
    if(result == expected) {
        cout << "Test Case 72: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 72: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test73() {
    vector<string> predictions = {"GGBGGB"};
    int R = 1;
    int W = 1;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 73: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 73: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test74() {
    vector<string> predictions = {};
    int R = 50;
    int W = 50;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2500;
    if(result == expected) {
        cout << "Test Case 74: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 74: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test75() {
    vector<string> predictions = {"BBGBGB"};
    int R = 1;
    int W = 1;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 75: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 75: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test76() {
    vector<string> predictions = {};
    int R = 24;
    int W = 50;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2500;
    if(result == expected) {
        cout << "Test Case 76: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 76: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test77() {
    vector<string> predictions = {};
    int R = 50;
    int W = 50;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2500;
    if(result == expected) {
        cout << "Test Case 77: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 77: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test78() {
    vector<string> predictions = {};
    int R = 50;
    int W = 50;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2451;
    if(result == expected) {
        cout << "Test Case 78: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 78: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test79() {
    vector<string> predictions = {"GGGG"};
    int R = 2;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 79: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 79: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test80() {
    vector<string> predictions = {"GBGGGGBBGGBGBGGBBBBBGBGGBBBGGGGBBBGGGBGBGGGGBGBBGB", "GBGBBGBBBGGGBGBGBGGGBGBGBGBBGBGBBBBBGGBGBBBBGBBBBG", "GBBBGGGBGBBBGBBGGGBGBGGGGGGGGGGBGGBGBGGBBGBGGGBBBG", "BGBGBGBGGGGBBBGBGBBBBBGBGGGGGBBGGBGGBGBGGGGGBBGGBG", "BBGGGBBBBBBBGGGBBGBGBGBGBBGGBBGBBBGGGBBGBBGGBBBBGB", "GGGBBGBBBBBGBBBBBGBBBBBGGBBGGGGBGBBGGGGBGGGBBGBBBB", "BBBBBGGBGBGBBBGGBBBGBGGBGGGGGBGGBGGBGBBBBBBGBGBBBB", "BBGGBGBBBGBBBBGGGBBGBBGGGBBGBBGBGGGGBGGBBGBBBBBGBB", "BGBBBBBBGBGGGBBBGBBGBBBGGBGGGGGBBGBBGBGGBBBGBBBGBB", "BBBGGGGBBGBGGBGGGBGBGGBGGBGGGGGBBGGGGBBGGBGBBBGGBB", "GBBGGGGGBGBGGBBBBGBBGBBBBBBBBBBGBBGBGBGGGGBBBGBBBG", "BGGBGGBGGBBBBBBGBBGGGGGBGGGBGGGGGBGBGGBGBBGBBGGGGB", "BGGGGGBBGGGBBBBGGGGGBGGGGGGBBBBGGBBBGGBBBBBGBBBGGG", "BBBGGGGBGGGBBBBGGGBGGBGGGBGBGBGBBBGBGBBGBGGBBGGGBG", "BGBBBGBGGGGGGBGGBBGBGGBBBBGGGGGGBGGBBGGBGGGBGBGGBG", "GBBGBBGBBBGGBBBGBBGBBBGGBBGBGBGBBGBBBGBBBBGBBGGBGB", "BBBGGGGGGBGBGGGGGGBBGBBBBBGBBGBGGGBBBBGGBBGGGBBGBG", "GGGGBBGGBGBBBGGGBGGGBGBGGGBGBBBGGBBGBGGBGGBGGBBGGG", "BBGBGBBGGBGBBGBBBBBGBGGBBBBGGBBGBGBGGBGGBBGBGGGBGG", "GGBBGBBBGGBBGBGGGGGBBGGGBBBGBGBBBBBGBGGBBGBGGGBGBG", "GBGBGGGGBGBBGBBBBBGGBGGBGBBGGBGGGBGBGBBGBBGGGGGGGB", "BBBGBGBBBGGGBBGBBBBBGBGBBBGGGGBGGBGGGGBGBGGGGBGGGG", "BBBGGBGBGBGGGBGBBBGBBBGGGBGBGBGGGGBBGGBGGBBGBBGBBG", "BBGGGBGGBGGGBBGGBBBGGBGBGGBBBBGBGBBBBGGBBGBGGGBBGB", "GGBBGGGGBGGGBBBBGBGBGBGGGGBGGGGBBBBGGGBGGBGGBGGGGB", "BBBGGGBGBGGBGGBGGGGGGBGBGBGBGBBGGGGBBGBGGGGBBGBGBG", "GGGBGBBBBBGBGBGBBBBBGGGBGBGGGGBBGGGBGGGGGBBGBGGBGG", "GBBBBBBGGBGBBBGGBGGGBBGBGGBGBGBGBGGBGBBBBGBBGBBGGG", "GGGBBGBBBBGBGGGBBBBBGBGGGBGGGBBBBGGBBGBBGGGBGBBGGG", "GBGBGBBGGGGGBGGGGGBGBGGGGBGGGBBBBBBBBBGBGBGGBBBGBB", "GBGBGBBBBGGBGGBGGGGBGBGBBGGBBGGGGBGBGGBGBGGGGBBBGG", "GBBBBBGGBGBGGGBBGGBBBBGGBBGBGBBBBBBGBGBBBGBGBBBBGB", "BGBGBBBBGGBGGGGGBGBBGBGGBBGBBBBBGBGBGGBBBBGGGBBGGB", "BBGGBGGGGGBGGGGGGBBGBGBGBGGGGBGGGBBGGBBBGBGGBGBGGB", "GBGGGBBGGGGBBBGGGBGBGBBBGBGGBGBGGGBBGBGBBGGBGBGGBB", "GGGGBBBGBBBBGGGGBGGGGGBBBBBGGGBBBGGBGGBGGBGBBGGBBG", "GGBBBBBBBGGBGBGBBBBBBGGGBGBGGBBBBGBBGBBGGBGBBBGBGG", "GGBBBBGGBBGBBGGGGGGBBGBBGBBBBGGGBBGGBBBBBGGGGBBBGG", "BBBBBBBBBGBBBBBBGBBGGGGBBBBBBBGGBBGBBBBBGBBGGBGBGB", "BBGGBGGBGGBBBBBBBBBGGGGGBBBBGGBGGGBGBGGGBBGGBBGGBG", "BGBGGBBGBGBBBGGBBGGGBGGBBBBGGBBGBBBGGBBGGBBGGGGGGB", "BGBBGBBGBGBBBBGBGBGGGBGGBBGGGBBGGBGGBGBBBBGBBBGGBB", "BGBGGBGBBBBBBGBGBBGGGGGBBBBGGBGBGGGBBGBBGBBGBBGBBB", "GGGGGGGGBBGGBGGBGGGBGBBGBBGGGGGBGBGBBBBBGGBGBGGBBB", "BGGBBGGGBBBGBGGBBGBBBGGBGBGBBGGBBBBBGGGGGGBBGGBGGB", "GGBBGGBBGBGBBGBGGGBBBBGBBBBBGGBBBBGGGGGGBBGBGBGBGB", "BBBGBBBBBGGBBGGGBBBGGBGGGBGBBBBBBBBGBBGBGGGGBBBGBG", "BBGBGBBBGGBGGGBGBBGGGGBBBGBGBBBBBGBGBGGGBBBGGBGGGB", "BBGGBBBBGBBGBGBGBBBBGBBBGGBBBGGBGBGGBGGGGBBBGGGGGG", "GGGGGBBGGBGBGBBBBGBGBGGGGBBBBGGGBBGGGGGBBBBGBBGBGG"};
    int R = 2;
    int W = 3;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2228;
    if(result == expected) {
        cout << "Test Case 80: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 80: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test81() {
    vector<string> predictions = {"GGB"};
    int R = 1;
    int W = 1;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 81: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 81: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test82() {
    vector<string> predictions = {"GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB"};
    int R = 47;
    int W = 48;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2351;
    if(result == expected) {
        cout << "Test Case 82: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 82: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test83() {
    vector<string> predictions = {"GGBBBBBBBGBGGGGGGBBBBGBBGBGGBG", "GBBBBGBGGGBGGBGBBGBGBBBGBGB", "GGGGBGGGGGGB", "GBGGBB", "GBGBBBBGGGGGGGBBBGGBBGGGBGGBGBBBBGGBBGGGGB"};
    int R = 1;
    int W = 4;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 93;
    if(result == expected) {
        cout << "Test Case 83: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 83: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test84() {
    vector<string> predictions = {};
    int R = 50;
    int W = 50;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 677;
    if(result == expected) {
        cout << "Test Case 84: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 84: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test85() {
    vector<string> predictions = {};
    int R = 10;
    int W = 10;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 1730;
    if(result == expected) {
        cout << "Test Case 85: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 85: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test86() {
    vector<string> predictions = {"GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGBBBGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB"};
    int R = 50;
    int W = 50;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2496;
    if(result == expected) {
        cout << "Test Case 86: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 86: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test87() {
    vector<string> predictions = {"BGGB"};
    int R = 1;
    int W = 1;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2;
    if(result == expected) {
        cout << "Test Case 87: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 87: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test88() {
    vector<string> predictions = {"GGBBGGGGBBBB"};
    int R = 4;
    int W = 1;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 88: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 88: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test89() {
    vector<string> predictions = {"BBGGBB"};
    int R = 1;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 89: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 89: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test90() {
    vector<string> predictions = {"BBBGGGGBBBGGBBBBGGG"};
    int R = 3;
    int W = 3;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 17;
    if(result == expected) {
        cout << "Test Case 90: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 90: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test91() {
    vector<string> predictions = {"GGGGGGBBBBGBGGGGGBBGBBBGBBBGGGBBGBBBBGBBGGBBBBG", "BBBGBBGBGGGBGGBGBBBGBBGGGGGBBBGBGBGGGGG", "GGGGBBBGBGGBBBBBBGBBGGGBGBGBBGGGBGB", "GGGGGGGBBBBGGBBBBBGGBBGBBGGBGGGBGGBBBGGB", "BBGGGBGGBBGGBBBGGBGBGGBBGBGBGGBGBGGBGGBGBGGBGB", "BBGGBBBBGGGBGBGBGB", "BGGBGGGBBBGGGBBBBBGGGBBBGGBBGGGBBBGBGB"};
    int R = 2;
    int W = 4;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 240;
    if(result == expected) {
        cout << "Test Case 91: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 91: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test92() {
    vector<string> predictions = {"GG", "GG", "GG", "GG"};
    int R = 2;
    int W = 10;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 92: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 92: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test93() {
    vector<string> predictions = {"GGGGBBBGG"};
    int R = 3;
    int W = 3;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 93: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 93: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test94() {
    vector<string> predictions = {"GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG"};
    int R = 4;
    int W = 5;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2000;
    if(result == expected) {
        cout << "Test Case 94: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 94: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test95() {
    vector<string> predictions = {"GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGBBBBB", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGBBBBB", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG", "GBBGBGBGBGBGGBGBGBBBGBGBGBGBGBGGGGGBBBBGBGBGBBGBG"};
    int R = 50;
    int W = 50;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2432;
    if(result == expected) {
        cout << "Test Case 95: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 95: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test96() {
    vector<string> predictions = {"GGGGGGGGGGGGGGGGGGG"};
    int R = 2;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 13;
    if(result == expected) {
        cout << "Test Case 96: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 96: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test97() {
    vector<string> predictions = {"GGGGGGBBGGG"};
    int R = 5;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 10;
    if(result == expected) {
        cout << "Test Case 97: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 97: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test98() {
    vector<string> predictions = {"GGBBBGGBBBGGBB"};
    int R = 1;
    int W = 1;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 7;
    if(result == expected) {
        cout << "Test Case 98: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 98: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test99() {
    vector<string> predictions = {"GGGBBBB"};
    int R = 2;
    int W = 4;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 99: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 99: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test100() {
    vector<string> predictions = {"GGB", "GBGGGBBBGGBGBGGBGBBGGGBGBBBGBGBG"};
    int R = 1;
    int W = 1;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 20;
    if(result == expected) {
        cout << "Test Case 100: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 100: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test101() {
    vector<string> predictions = {"B", "BBBBBBBBBBGGGGGGGGGGBBBBBBBBBBGGGGGGGGGG", "BBBBBBBBBBGGGGGGGGGGBBBBBBBBBBGGGGGGGGGG", "BBBBBBBBBBGGGGGGGGGGBBBBBBBBBBGGGGGGGGGG", "BBBBBBBBBBGGGGGGGGGGBBBBBBBBBBGGGGGGGGGG", "BBBBBBBBBBGGGGGGGGGGBBBBBBBBBBGGGGGGGGGG"};
    int R = 10;
    int W = 10;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 200;
    if(result == expected) {
        cout << "Test Case 101: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 101: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test102() {
    vector<string> predictions = {"BBBG"};
    int R = 1;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 102: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 102: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test103() {
    vector<string> predictions = {"BBBGBGBGBGBG"};
    int R = 1;
    int W = 2;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 11;
    if(result == expected) {
        cout << "Test Case 103: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 103: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test104() {
    vector<string> predictions = {"GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG", "GGBBGGBBGGBBGGGBBGBBGBBGGGGBBGGBBBBGBGGGBBGGBBGG"};
    int R = 50;
    int W = 50;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 2400;
    if(result == expected) {
        cout << "Test Case 104: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 104: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test105() {
    vector<string> predictions = {"GBGGBBBGBBBGGGBBGGBGBBGGGGGGBBBBBBBBBGGGB", "BGGBBGGGGGGGGGGGBGBGBGGBBGGBBBBBGGBBGGG"};
    int R = 3;
    int W = 1;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 62;
    if(result == expected) {
        cout << "Test Case 105: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 105: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test106() {
    vector<string> predictions = {"GGGGGGBGGGGGGGGGGGGGGGGGGGGGGG", "BGBGBGBGGGGGGGGGBBBBBBBBBBBGGGGGBG", "GBGBGBGBGBGBGBGBBBBBB"};
    int R = 2;
    int W = 3;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 69;
    if(result == expected) {
        cout << "Test Case 106: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 106: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test107() {
    vector<string> predictions = {"GGGBGG"};
    int R = 2;
    int W = 1;
    Horoscope* pObj = new Horoscope();
    clock_t start = clock();
    int result = pObj->maxGoodDays(predictions, R, W);
    clock_t end = clock();
    delete pObj;
    int expected = 5;
    if(result == expected) {
        cout << "Test Case 107: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 107: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    test67() == 0 ? ++passed : ++failed;
    test68() == 0 ? ++passed : ++failed;
    test69() == 0 ? ++passed : ++failed;
    test70() == 0 ? ++passed : ++failed;
    test71() == 0 ? ++passed : ++failed;
    test72() == 0 ? ++passed : ++failed;
    test73() == 0 ? ++passed : ++failed;
    test74() == 0 ? ++passed : ++failed;
    test75() == 0 ? ++passed : ++failed;
    test76() == 0 ? ++passed : ++failed;
    test77() == 0 ? ++passed : ++failed;
    test78() == 0 ? ++passed : ++failed;
    test79() == 0 ? ++passed : ++failed;
    test80() == 0 ? ++passed : ++failed;
    test81() == 0 ? ++passed : ++failed;
    test82() == 0 ? ++passed : ++failed;
    test83() == 0 ? ++passed : ++failed;
    test84() == 0 ? ++passed : ++failed;
    test85() == 0 ? ++passed : ++failed;
    test86() == 0 ? ++passed : ++failed;
    test87() == 0 ? ++passed : ++failed;
    test88() == 0 ? ++passed : ++failed;
    test89() == 0 ? ++passed : ++failed;
    test90() == 0 ? ++passed : ++failed;
    test91() == 0 ? ++passed : ++failed;
    test92() == 0 ? ++passed : ++failed;
    test93() == 0 ? ++passed : ++failed;
    test94() == 0 ? ++passed : ++failed;
    test95() == 0 ? ++passed : ++failed;
    test96() == 0 ? ++passed : ++failed;
    test97() == 0 ? ++passed : ++failed;
    test98() == 0 ? ++passed : ++failed;
    test99() == 0 ? ++passed : ++failed;
    test100() == 0 ? ++passed : ++failed;
    test101() == 0 ? ++passed : ++failed;
    test102() == 0 ? ++passed : ++failed;
    test103() == 0 ? ++passed : ++failed;
    test104() == 0 ? ++passed : ++failed;
    test105() == 0 ? ++passed : ++failed;
    test106() == 0 ? ++passed : ++failed;
    test107() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=9906197&rd=8072&pm=5909
********************************************************************************
#include <algorithm> 
#include <iostream> 
#include <sstream> 
#include <string> 
#include <vector> 
#include <queue> 
#include <set> 
#include <map> 
#include <cstdio> 
#include <cstdlib> 
#include <cctype> 
#include <cmath> 
#include <list> 
#include <regex.h>  
using namespace std; 
 
// LIB CODE 
#define VAR(a,b) __typeof(b) a=b 
#define FORIT(it,v) for(VAR(it,(v).begin());it!=(v).end();++(it)) 
#define SZ(v) ((int)(v).size()) 
#define FOR(i,a,b) for(int i=(a);i<int(b);++i) 
#define REP(i,n) FOR(i,0,n) 
// REAL CODE 
 
int n,m[2]; 
string s; 
 
int mem[2500][51][2]; 
 
int val(int pos,int ok) { 
  return (s[pos]=='G')^(ok)?0:1; 
} 
 
int go(int pos,int row,int type) { 
  if(pos>=n) return 0; 
  int &ret=mem[pos][row][type]; 
  if(ret==-1) { 
    ret=0; 
    if(m[type]>row) ret>?=val(pos,type)+go(pos+1,row+1,type); 
    ret>?=val(pos,1-type)+go(pos+1,1,1-type); 
  } 
  return ret; 
} 
 
 
class Horoscope { 
public: 
  int maxGoodDays(vector <string> S, int R, int W) { 
    s=""; FORIT(i,S) s+=*i; n=SZ(s),m[0]=W,m[1]=R; 
     
    REP(i,2500) REP(j,51) REP(k,2) mem[i][j][k]=-1; 
     
    return go(0,0,0); 
     
  } 
   
}; 
 
 
// Powered by FileEdit
// Powered by CodeProcessor

********************************************************************************
*******************************************************************************/