/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=11117
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class TimeTravellingGogo {
public:
    long determineTime(int N, vector<int> sunnyStart, vector<int> sunnyEnd, vector<string> roads, int machineStartTime);
};

long TimeTravellingGogo::determineTime(int N, vector<int> sunnyStart, vector<int> sunnyEnd, vector<string> roads, int machineStartTime) {
    long ret;
    return ret;
}


int test0() {
    int N = 3;
    vector<int> sunnyStart = {0, 8};
    vector<int> sunnyEnd = {4, 12};
    vector<string> roads = {"0,1,3 1,2,3"};
    int machineStartTime = 1;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 9;
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    int N = 3;
    vector<int> sunnyStart = {0, 8};
    vector<int> sunnyEnd = {4, 12};
    vector<string> roads = {"0,1,3 1,2,4"};
    int machineStartTime = 18;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 12;
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    int N = 2;
    vector<int> sunnyStart = {1, 3};
    vector<int> sunnyEnd = {2, 4};
    vector<string> roads = {"0,1,2"};
    int machineStartTime = 1;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = -1;
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    int N = 3;
    vector<int> sunnyStart = {0, 17};
    vector<int> sunnyEnd = {15, 37};
    vector<string> roads = {"0,1,1", "5", " 1,2,12 2,0,17"};
    int machineStartTime = 10;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 29;
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    int N = 20;
    vector<int> sunnyStart = {0, 5000000, 10000000, 15000000, 20000000, 25000000, 30000000, 35000000, 40000000, 45000000, 100000000, 250000000, 500000000, 500000005, 500000010, 500000200, 501000000, 550000000, 570000000, 600000000};
    vector<int> sunnyEnd = {4000000, 9000000, 13000000, 16000000, 21000000, 29000000, 34000000, 38000000, 43000000, 45050000, 160000000, 450000000, 500000001, 500000009, 500000110, 500500200, 507000000, 560000000, 590000000, 1000000000};
    vector<string> roads = {"0,1,200000000 1,2,200000000 2,3,200000000 ", "3,4,200000000 4,5,200000000 5,6,200000000 ", "6,7,200000000 7,8,200000000 8,9,200000000 ", "9,10,200000000 10,11,200000000 11,12,200000000 ", "12,13,200000000 13,14,200000000 14,15,200000000 ", "15,16,200000000 16,17,200000000 17,18,200000000 ", "18,19,200000000"};
    int machineStartTime = 100000000;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 8200000000;
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    int N = 4;
    vector<int> sunnyStart = {4, 11};
    vector<int> sunnyEnd = {7, 15};
    vector<string> roads = {"0,1,4 0,2,4 1,2,2 1,3,3 2,3,1"};
    int machineStartTime = 7;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 24;
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    int N = 20;
    vector<int> sunnyStart = {10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200};
    vector<int> sunnyEnd = {18, 22, 35, 46, 59, 61, 72, 83, 94, 105, 111, 129, 139, 148, 157, 166, 176, 183, 194, 204};
    vector<string> roads = {"11,14,1 3,17,8 0,4,2 2,4,2 3,", "9,2 4,9,6 3,13,6 10,11,4 3,16,4 7,1", "4,5 12,15,1 6,10,1 4,6,3 0,2,1 4,1", "1,4 11,16,7 1,12,3 0,14,9 6,14,4", " 3,19,7 7,18,4 9,16,8 2,16,9 1,14,5 8,18,", "3 7,17,7 1,4,7 3,10,4 12,14,1 0,13,6 15,17,1 ", "0,1,4 8,11,3 14,18,7 6,11,6 8,19,2", " 6,7,2 4,16,5 3,11,8 1,10,3 14,15", ",6 10,14,7 14,19,1 5,15,3 5,6,2 9,14,5 3", ",15,3 2,6,5 1,6,3 0,12,5 4,19,2", " 5,17,1 11,18,7 11,12,2 9,19,2 ", "2,18,3 18,19,1 1,18,8 8,9,3 7,13,", "9 12,19,2 0,3,7 9,13,7 16,18,9 3,", "4,6 10,16,7 5,19,1 4,7,1 0,17,7 0", ",15,1 7,8,1 1,13,3 3,14,1 8,16,", "9 8,14,1 6,8,6 1,11,1 0,5,7 2,12,9 8", ",17,6 5,12,4 0,6,3 3,8,6 15,18,3 0,7", ",2 2,13,4 5,10,8 0,18,7 6,12,1 11,19,5", " 10,13,8 4,13,5 2,8,5 13,14,5 1,3,1 7,1", "2,9 4,8,3 3,5,4 5,16,4 0,8,1 2,5,8 9,18,8", " 9,17,6 0,11,2 7,11,9 1,2,1 5,8,7 14,", "17,6 6,16,2 1,19,2 15,16,3 5,", "13,6 0,19,3 16,17,5 10,18,8 6,13,7 4,1", "4,7 5,7,1 6,17,4 10,17,5 7,15,4 6,1", "8,9 2,19,4 0,10,1 15,19,3", " 3,18,1 8,10,4 1,5,4 9,15,8 4,5,1", " 2,7,3 13,17,5 2,15,1 1,7,1 0,9,8 12,1", "6,4 7,9,3 12,13,1 17,19,8 0,16,", "1 2,17,1 5,18,6 2,10,1 9,10,3"};
    int machineStartTime = 3;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 13;
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    int N = 20;
    vector<int> sunnyStart = {976851, 24638452, 89805320, 153885005, 239749595, 335034706, 375936738, 439094817, 464228258, 495696296, 607982612, 673144711, 721627705, 726695681, 770329137, 790302779, 797472558, 812481523, 855208433, 912271914};
    vector<int> sunnyEnd = {10639708, 82649708, 111253063, 234479130, 266196715, 365234970, 394647152, 453588549, 467723570, 582716999, 672522319, 689636329, 726627264, 757178137, 775797586, 797198279, 803599638, 847405628, 876041331, 918346284};
    vector<string> roads = {"0,18,1 0,17,1 ", "7,0,1 1,0,1 19,0,1 4,0", ",1 0,2,1 0,12,1 ", "0,9,1 15,0,1 0,5,1 10,0,", "1 0,16,1 11,0,1 14,0,", "1 3,0,1 13,0,1 0,8", ",1 0,6,1"};
    int machineStartTime = 71235298;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 976852;
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    int N = 20;
    vector<int> sunnyStart = {750322, 61015019, 114707690, 128340490, 243841583, 257770016, 306458874, 409166068, 468266097, 523265068, 606747171, 707816967, 740715956, 768962880, 778368247, 810518972, 876751425, 901124274, 955481086, 995883002};
    vector<int> sunnyEnd = {37345336, 61029626, 124004399, 159725547, 251450954, 304949236, 384248438, 437293050, 471697213, 559465606, 632811382, 707933255, 756059957, 778241254, 806193894, 867542513, 892967279, 916480261, 963107043, 996087596};
    vector<string> roads = {"19,0,1 18,9,1 1,17,1 10,6,1 4,10,1 19,12,1 9,19,1 ", "14,1,1 14,11,1 18,4,1 9,0,1 9,4,1 16,4,1 19,13,1 8", ",4,1 15,2,1 16,6,1 3,7,1 2,12,1 5,14,1 7,12,1 6,1", ",1 13,18,1 17,5,1 10,2,1 15,9,1 13,2,1 3,", "6,1 13,16,1 11,16,1 19,10,1 6,13,1 11,17,1 3,0,1 1", "3,5,1 6,4,1 1,3,1 6,15,1 8,3,1 4,11,1 4,15", ",1 8,6,1 2,8,1 17,7,1 5,2,1 0,1", "0,1 4,3,1 16,1,1 6,12,1 7,5,1 19,4", ",1 2,1,1 7,14,1 6,11,1 12,18,1 18,", "19,1 9,8,1 9,3,1 1,18,1 6,9,1 1,15,1 1", "0,12,1 14,19,1 14,6,1 5,9,1 11", ",5,1 17,4,1 7,8,1 12,1,1 10,18,1 11", ",19,1 7,16,1 14,8,1 14,10,1 8,5,1", " 17,13,1 12,4,1 16,14,1 12,11,1 14,4,1 14,1", "3,1 18,14,1 13,11,1 15,19,1 16,2,1 16", ",10,1 3,13,1 17,9,1 12,3,1 18,16,1 3,1", "0,1 7,13,1 0,17,1 13,8,1 10,15,1 12,13,1 12,0,1 14", ",12,1 0,2,1 15,3,1 11,15,1 7,19,1 11,1,1 1", ",8,1 17,12,1 0,5,1 10,13,1 15,14,1 8,17,1 10,7,1 1", "8,2,1 18,11,1 14,0,1 5,10,1 17,10,1 8,10,1 1", "7,2,1 0,6,1 10,1,1 9,10,1 16,9,1 14,2,1 8,11,1 ", "18,5,1 18,7,1 0,16,1 6,7,1 17,6,1 5,15,1 9,13,1 ", "1,13,1 3,2,1 3,16,1 15,8,1 6,19,1 2,19,1 2,9,", "1 18,0,1 15,13,1 8,0,1 16,17,1 19,17,1 19,16,1 1", "1,9,1 7,4,1 0,1,1 9,1,1 1,7,1 3,19,1 5,1,1 9,", "12,1 5,16,1 19,8,1 8,16,1 18,8,1 0,13", ",1 15,7,1 18,17,1 17,14,1 18,6,1 4,1", ",1 0,15,1 19,5,1 14,3,1 15,16,1 5,6,1 16,", "12,1 11,3,1 7,9,1 12,8,1 18,3,1 5,4,1 7,", "0,1 2,7,1 2,11,1 5,3,1 18,15,1 2,4,1 19,1,", "1 2,6,1 4,0,1 11,7,1 4,13,1 0,11,1 14", ",9,1 17,15,1 3,17,1 5,12,1 10,11,1 15,12,1"};
    int machineStartTime = 467797319;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 750323;
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    int N = 20;
    vector<int> sunnyStart = {40423136, 143126415, 185047608, 195072886, 209364140, 260519849, 320569956, 336274021, 373991155, 419115009, 470696237, 502877886, 528566799, 645202088, 704260826, 763759179, 833629389, 879128155, 914883774, 961519699};
    vector<int> sunnyEnd = {75754172, 168254597, 186114501, 198297461, 223006628, 266930645, 336247393, 343519191, 398344058, 462022269, 491300454, 526144045, 554805547, 685028897, 757668286, 768882836, 876319253, 900625617, 918002040, 996257233};
    vector<string> roads = {"19,4,1 19,16,1 19,11,1 19,0,", "1 7,19,1 18,19,1 19,8", ",1 19,12,1 19,17,1 19,9,1 10,19,1", " 19,1,1 19,5,1 15,19,1 3,19,1 19,1", "3,1 19,2,1 6,19,1 19,14,1"};
    int machineStartTime = 650335210;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 40423137;
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    int N = 20;
    vector<int> sunnyStart = {52737516, 92564863, 118295692, 124207040, 158339344, 185596750, 221435174, 239357133, 261881265, 311942965, 389954740, 460792306, 596325119, 635383751, 651482496, 714153599, 734929439, 770003405, 829042837, 964413192};
    vector<int> sunnyEnd = {65116269, 105918881, 123061407, 128927540, 161361711, 189323308, 236381531, 250904206, 275962974, 341603829, 458907649, 591092193, 609642837, 637517123, 709811854, 731082866, 735358286, 818876791, 875515310, 995139839};
    vector<string> roads = {"10,6,1 9,2,1 13,1,1 4,0,1 12,10,1", " 7,2,1 15,19,1 13,2,1 2,8,1 4,1,1 7", ",17,1 11,19,1 13,16,1 11,17,1 11,4", ",1 10,15,1 19,4,1 5,6,1 17,2,1 5,8,", "1 18,5,1 15,13,1 7,1,1 14,9,1 ", "2,1,1 5,11,1 7,12,1 3,13,1 19,17,1 4,16,1 9,18,1 1", ",5,1 17,10,1 17,9,1 14,8,1 9,15,1 ", "8,12,1 8,1,1 18,8,1 6,16,1 0,16,1 0,19", ",1 13,19,1 18,7,1 2,16,1 14,13,1 5,4,1 4,", "9,1 3,11,1 10,7,1 10,0,1 0,7,1 9,19,1 19,3,1", " 9,13,1 15,14,1 7,3,1 10,18,1 17,6", ",1 18,1,1 14,7,1 0,1,1 6,0,1 3,1,1 1", "8,2,1 12,17,1 3,2,1 7,4,1 18,4,1 7,8,1 9,", "1,1 11,6,1 7,19,1 4,17,1 2,10,1 2,19,1 14,0,1 14", ",11,1 0,12,1 0,8,1 16,18,1 1", "6,11,1 15,0,1 1,6,1 2,5,1 2,14,1 9,8", ",1 8,11,1 17,13,1 19,8,1 10,13,1 5,1", "3,1 4,3,1 4,8,1 1,11,1 0,5,1 1,10,1 3", ",12,1 19,5,1 9,0,1 4,13,1 11,15,1 6,8,1 16,19,1 15", ",4,1 19,14,1 0,3,1 15,16,1 15,12,1 16,1,", "1 18,3,1 9,11,1 4,2,1 14,10,1 10,11,1 6", ",7,1 11,2,1 0,13,1 8,17,1 3,15,1 18,6,1", " 15,17,1 12,14,1 17,3,1 15,5,1 6,19,1 ", "10,19,1 7,9,1 14,5,1 5,16,1 10,3,1 6,3,1", " 3,16,1 0,11,1 13,18,1 9,16,1 5,7,1 15,18,1 6", ",9,1 1,12,1 17,5,1 0,2,1 17,1,1 6,2,1 ", "15,7,1 8,16,1 13,11,1 8,10,1 10,", "4,1 17,14,1 5,12,1 14,4,1 11,18,1 15,1,1 14,", "16,1 8,3,1 11,12,1 3,9,1 ", "5,3,1 12,4,1 19,1,1 13,8,1 13,7,1 1", "2,18,1 18,17,1 16,17,1 12,19,1 12,", "16,1 7,16,1 14,6,1 9,10,1 18,14,1 13,", "6,1 1,14,1 6,15,1 6,12,1 3,14,1 ", "4,6,1 0,17,1 11,7,1 16,10,1 1", "2,2,1 2,15,1 8,15,1 9,5,1", " 19,18,1 10,5,1 0,18,1 12,13,1 9,12,1"};
    int machineStartTime = 393124174;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 52737517;
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    int N = 20;
    vector<int> sunnyStart = {8931833, 46922763, 77514685, 151938623, 224313426, 284086845, 358812331, 360492274, 418706146, 448466258, 511308951, 607524319, 642843085, 695894699, 806292186, 815694385, 829845640, 872328635, 899814600, 944744393};
    vector<int> sunnyEnd = {39231523, 55668223, 132148222, 158793476, 243193367, 340633706, 358950813, 386660415, 444963631, 450739036, 536547105, 624560887, 686962865, 739563277, 810401279, 822609338, 860542641, 883415034, 939522370, 956947369};
    vector<string> roads = {"10,13,1 10,3,1 9,10,1 1", "0,5,1 12,10", ",1 19,10,1 10,", "18,1 4,10,1 10", ",8,1 10,17,1 0,10,1 15,1", "0,1 10,11,1", " 10,2,1 10,6,1 10,7,", "1 10,1,1 10,16,1 14,10,1"};
    int machineStartTime = 355553151;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 8931835;
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    int N = 20;
    vector<int> sunnyStart = {46239075, 146763659, 179018684, 237368115, 263522604, 301951470, 348493904, 439496486, 488794814, 547146235, 591262626, 651663217, 693909894, 713722434, 732241952, 800542440, 836523198, 879186890, 923188320, 978008429};
    vector<int> sunnyEnd = {79991022, 177900453, 200747741, 241000676, 283607190, 320870457, 418184572, 474591224, 537019836, 573496257, 606004571, 691203763, 709214492, 725966958, 768745694, 815557955, 872852267, 892741117, 948416348, 992821681};
    vector<string> roads = {"0,10,1 13,6,1 6,14,1 2,16,1 15,9,1 14", ",0,1 1,12,1 1,13,1 14,2,1 4,2,1 18,10,1 12,13,1 13", ",16,1 3,19,1 19,0,1 9,19,1 17,14,1 10,15", ",1 7,19,1 18,19,1 15,0,1 14,12,1 12,9,1 7,15,1 11,", "17,1 7,1,1 9,2,1 4,17,1 9,13,1 14,5,1 17,6,1 3,", "17,1 15,6,1 9,5,1 4,14,1 7,13,1 17,10,1 12,3,1 11,", "0,1 16,4,1 4,7,1 3,6,1 15,18,1 2,18,1 15,12", ",1 12,11,1 18,5,1 0,6,1 15,11,1 19,17,1 8,14,", "1 19,10,1 1,2,1 1,14,1 9,18,1 6,19,1 13,19,1", " 0,5,1 9,6,1 8,12,1 17,7,1 8,2,1 5,6,1 5,4,1 15,1,", "1 1,8,1 19,15,1 4,19,1 18,16,1 3,4,1", " 11,10,1 16,1,1 12,0,1 7,16,1 3,1,1", " 18,1,1 9,7,1 0,17,1 6,7,1 5,8,1 3,8,1 12,5,1 10,1", "6,1 4,0,1 0,13,1 2,19,1 5,2,1 4,10,", "1 3,14,1 8,13,1 11,19,1 2,11,1 12,4,1 7,3,1 15,1", "7,1 9,17,1 3,0,1 13,17,1 17,18,1 2,7,1 8,6,1 6,16,", "1 12,17,1 4,18,1 15,5,1 17,8,1 13,11,1 6,11,1", " 5,13,1 16,19,1 18,7,1 18,11,1 15,3,1 16,0,1 1", "5,14,1 1,6,1 8,18,1 18,3,1 10,2,1 8,7,1 ", "0,1,1 12,10,1 16,8,1 16,14,1 14,18,1 7,5,1 1,4,1", " 1,19,1 6,10,1 11,5,1 16,12,1 11,9,1 4,", "6,1 14,7,1 1,5,1 11,4,1 11,7,1 1,11,1 12", ",7,1 16,17,1 9,0,1 9,4,1 4,15,1 5,16,1 5,1", "7,1 14,10,1 6,12,1 10,7,1 8,9,1 13,2,1 10,1,", "1 14,13,1 13,4,1 5,19,1 4,8,1 16,3,1 14,1", "9,1 0,7,1 8,15,1 10,8,1 19,8,1 5,3,1 18,6,1 10,5,", "1 19,12,1 0,18,1 2,12,1 15,2,1 2,0,1 2,17,1 8,11,", "1 3,11,1 9,1,1 12,18,1 1,17,1 10,3,1 3,13,1 16,9,", "1 16,15,1 9,3,1 14,9,1 11,14,1 10,9,1 1", "3,18,1 13,10,1 2,3,1 2,6,1 13,15,1 0,8,1 11,16,1"};
    int machineStartTime = 18918988;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 46239076;
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    int N = 20;
    vector<int> sunnyStart = {41788517, 67277282, 127213933, 196521503, 235662449, 293919728, 336683946, 347158401, 429984193, 541534038, 591590605, 657205711, 669795883, 699404789, 722003476, 732125187, 745706992, 808879842, 864989321, 906777839};
    vector<int> sunnyEnd = {53487370, 90932775, 135784793, 230880071, 272013814, 301067952, 339811254, 415636636, 483415203, 542552748, 605983336, 657528188, 672642632, 714310165, 728669168, 741587909, 786650416, 820025814, 899903065, 980431372};
    vector<string> roads = {"0,5,1 1", "6,0,3 8,0,3 10,0", ",9 2,0,8 13,0,9", " 17,0,4 4,0,6", " 0,11,6 3,0,7 ", "18,0,9 19,0,", "4 6,0,1 0", ",12,9 0,14,7", " 0,9,2 0,1", "5,2 1,0,2 7,0,2"};
    int machineStartTime = 350470601;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 41788521;
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    int N = 20;
    vector<int> sunnyStart = {14937584, 41653338, 150606813, 205825022, 265994732, 291507223, 359306515, 422513109, 470056972, 498322850, 511127152, 552938037, 616880544, 667446903, 691829619, 728480722, 759734854, 850801945, 881442307, 954254313};
    vector<int> sunnyEnd = {40925692, 89545411, 172278104, 236097692, 269475600, 320663403, 407142905, 431102503, 478357495, 501446014, 552052843, 586937238, 665109534, 670563927, 708929189, 738078517, 797860975, 875455675, 919490336, 961791238};
    vector<string> roads = {"11,0,6 10,0,9 9,14,8 9,4,2 16,9,1 12,9,6 4,17,1", " 12,17,2 13,5,4 16,12,4 13,8,4 9,18,8 ", "18,3,8 13,15,8 4,19,2 5,4,2 15,8,4 9,8,9 3,2,1", " 9,10,7 15,16,7 18,17,3 0,4,", "6 10,18,2 4,1,7 15,5,8 3,17,3 1,14,8 13", ",0,9 8,16,9 13,7,5 4,6,1 16,7,5 19,6,6 7,11,6 0,18", ",9 0,17,4 8,0,3 16,1,5 6,10,6 3,13,3 ", "1,0,2 7,9,9 15,17,2 0,15,2 5,19,2 12,13,6 7,4,1", " 14,4,5 15,7,2 12,5,1 1,7,3 16,10,8 15,6,1 18,5,2", " 11,8,9 11,5,1 12,6,5 10,17,4 5,2,6 11,9,7 19,11,8", " 15,18,8 9,1,1 12,15,8 0,3,7 7,0,2 6,11,8 7,2,1", " 6,13,1 4,18,2 19,18,2 19,10,9 14,11,1 3,1", "5,5 17,6,7 14,17,9 2,10,1 17,9,9 7,18,5 12,0,", "9 2,16,4 2,11,5 6,16,2 16,4,1 15,", "10,5 8,10,9 9,15,9 1,10,5 6,14", ",2 10,12,7 11,17,5 5,16,7 18,1,9 17,19,1 4,", "15,1 5,8,7 18,13,3 16,14,9 7,12,9", " 10,7,4 8,12,3 14,19,9 10,11,1 6,7,9 15,1", ",3 3,8,3 19,1,3 4,12,5 4,3,3 14,13,7 2,13,6 ", "13,19,5 12,19,2 16,17,1 7,17,6 6,0,1 16,3,2 15,19,", "9 12,18,6 0,9,2 18,8,5 18,2,7 9,2,1 12,14,8 0,5,1 ", "6,18,6 7,8,8 5,1,9 2,4,1 15,11,3 11,16,9 1,8,1 3", ",19,8 8,4,3 19,9,4 10,3,6 2,8,8 7,", "19,1 0,2,8 14,10,6 17,8,9 11,1,2 19,16,2 1,6,7 14", ",2,2 3,5,5 14,5,7 2,6,8 5,6,4 13,9,6 5,7,1 18,11,6", " 19,2,1 15,14,2 17,2,1 1,2,5 1", "1,3,9 5,9,1 4,13,6 16,0,3 19,0,4 3,7,3 13,1,3 8,", "6,2 5,10,4 18,14,7 11,12,1 10,13,6 14,7,3 13,16,5 ", "1,12,5 1,3,4 16,18,1 14,8,9 4,11,2 9,3,5 4,10,6 13", ",17,4 12,3,8 9,6,7 8,19,2 12,2,7 13,11,1 1", "4,3,2 1,17,6 3,6,1 14,0,7 17,5,4 2,15,7"};
    int machineStartTime = 344873579;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 14937587;
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    int N = 20;
    vector<int> sunnyStart = {3243200, 30951295, 53804419, 134380357, 170944913, 219075972, 262714912, 327583819, 388806165, 404458641, 467796713, 472657205, 498456692, 553481076, 646957209, 681018415, 764424144, 794049051, 799848208, 855275363};
    vector<int> sunnyEnd = {23663280, 37802667, 89315846, 156915166, 211051468, 248854136, 266635581, 384032915, 394370224, 465507959, 468751159, 495849129, 523987704, 632887051, 675158336, 717649892, 776386941, 797884423, 848567462, 911515359};
    vector<string> roads = {"19,2", ",6 ", "4,", "1", "9,7 1", "9,17,", "3 1", "8,19", ",1 1", "9,", "12,9 19", ",7,8", " 1,19,", "5 ", "0,19", ",1 19", ",10", ",5 ", "19,1", "6,1 5", ",19", ",2", " 19", ",9,", "8 1", "9,", "11,2", " 19,8", ",6 ", "1", "9,3,4", " 19,", "6,", "6", " 14,1", "9,7", " 13,1", "9,", "1", " 15,1", "9,4"};
    int machineStartTime = 995219904;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 3243201;
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    int N = 20;
    vector<int> sunnyStart = {49475535, 103378186, 153597923, 179921741, 201130063, 299127363, 309150478, 371917526, 425282511, 461140539, 518215850, 624528331, 636625622, 670856778, 708218388, 746213226, 818888023, 850536977, 885091654, 963984705};
    vector<int> sunnyEnd = {53872591, 152056148, 157454504, 188257669, 270462705, 301947832, 355292909, 395551677, 450532155, 485446776, 556162240, 630224794, 644623060, 683369214, 731348735, 814187185, 840823717, 856692215, 934470895, 998458226};
    vector<string> roads = {"17,15,4 15,1,2 10,8,7", " 9,10,9 19,0,1 2,1", "0,3 3,14,5 7,9,6 9,8,8 18,", "12,9 3,6,6 8,13,7 10,5,2 13,2,", "7 15,18,3 16,0,5 3,19,4 0,2,5 8,2", ",6 10,3,5 12,10,2 16,5,2 11,3,5 ", "7,8,6 6,0,3 13,18,5 11,9", ",7 18,3,4 5,12,4 13,0,", "3 17,0,2 5,8,6 3,0,8 2,18,", "3 10,0,1 8,14,5 10,1,9 10,6,7", " 11,14,3 7,17,5 17,9,5 8,1,4", " 1,9,4 16,3,2 4,18,2 17,12,9", " 11,0,3 13,19,1 2,14,8 18,", "5,7 6,9,4 7,19,8 12,0,6 17,14,1 14,1", "6,3 14,6,6 19,11,2", " 4,0,5 11,6,1 3,17,5 3,8,8 2,11,8", " 1,17,3 5,1,9 14,18,6 1,19,5 15,0", ",7 4,15,2 12,13,7 4,10,8 6,1,6 2,3", ",1 7,13,1 14,13,4 9,13,4 1", ",3,4 8,16,4 5,3,4 3,9,9 19", ",12,9 11,7,5 6,12,1 13,16,1 14", ",9,8 16,2,1 4,16,2 11,13,8 5,15", ",7 14,5,1 10,13,2 0,9,3 16,7,5", " 16,19,1 19,8,6 5,9,6 1,", "11,4 8,12,2 9,19,8 6,5,7 17,4,5 1", "7,19,3 4,5,8 16,1,5 19,18", ",1 4,14,8 0,14,1 15,6,4 1,0", ",4 11,12,2 15,2,2 13,6,9 1,7,9 4,1", "9,7 17,5,9 11,17,5 14,1,3 10", ",16,8 7,10,3 8,11,6 11,16,2 16,18", ",1 1,18,1 11,15,8", " 2,7,9 2,19,6 5,19,2 7,0,8 7,1", "2,2 6,19,6 6,4,2 17,18,5 18,6,4 12,3,3 1", "4,15,7 11,4,6 10,18,8 8,17,2 ", "17,2,6 3,13,6 4,2,4 13,1,5 5,0,3", " 7,18,9 14,19,7 4,1,7 2,9", ",2 17,10,2 10,14,2 12,16,5 0,1", "8,9 12,2,6 9,18,9 8,", "4,9 10,11,2 16,17,8 7,5,", "8 10,15,7 16,9,3 15,19,4 0,8,5 12,9,9 ", "6,7,5 15,13,5 13,5,5 15,8,9 15,16,6", " 6,2,4 7,15,1 12,15,7 ", "11,18,2 15,9,1 6,17,5 1,2,3 1,1", "2,7 12,4,4 15,3,3 6,16,1 3,4,9", " 12,14,3 4,7,7 8,18,5 8,6", ",4 9,4,4 5,11,3 13,17,1 ", "13,4,7 19,10,5 14,7,6 2,5,6 7,3,8"};
    int machineStartTime = 107978970;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 49475536;
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    int N = 20;
    vector<int> sunnyStart = {15910192, 78214554, 119284793, 173519019, 223958568, 238018141, 274227274, 335940703, 428187186, 472938596, 496050018, 543768158, 558584135, 596263874, 652199421, 687435500, 714087808, 850295518, 871983016, 947835901};
    vector<int> sunnyEnd = {59747201, 109523094, 123970873, 210017762, 235731746, 268267527, 310639500, 399044419, 463508486, 487787754, 508432166, 548117172, 562108275, 648108327, 677868928, 705301988, 772075740, 860323840, 911256666, 987589189};
    vector<string> roads = {"10,6,3 ", "10,12", ",4 7,10,7", " 10", ",", "1,3 3,10,", "6 ", "14", ",10,9 1", "0,16", ",9 10", ",0,", "9 5,", "10,3", " 10,", "2,3 11,1", "0,1 10,", "4,7 ", "10,", "1", "9,", "7 1", "0,17,", "8 10,15,", "5 10,", "9,3 8,10,", "9 10,", "13,7 ", "10,18,5"};
    int machineStartTime = 532206981;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 15910208;
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    int N = 20;
    vector<int> sunnyStart = {2304486, 32218507, 90132503, 96536713, 129731762, 178117067, 290539912, 334699058, 402805781, 421485033, 475206676, 537322063, 582805055, 595099304, 628859420, 695961012, 793751803, 819907936, 887965981, 941097505};
    vector<int> sunnyEnd = {2428357, 87984564, 94625286, 112153918, 164282014, 195963702, 323388120, 386253682, 407275994, 470198235, 534234135, 567955481, 587498798, 611746675, 658889464, 791260011, 811982305, 824524549, 921870783, 977066605};
    vector<string> roads = {"5,17,4 8,14,4 3,11,3 13,3,9 1,4,2 17,18,4 10,6,3 0", ",9,3 7,9,1 9,12,8 11,2,5 17,16,4 3,15,3 10,18,5 17", ",13,6 4,6,7 18,14,1 12,7,1 17,14,2 10,19,7 0,17,9 ", "11,5,1 16,4,7 11,13,1 2,15,2 19,14,6 17,8,2 8,18,4", " 12,19,7 11,18,3 0,2,6 13,18,8 16,0,9 16,15,9 3,5,", "1 9,4,7 1,7,8 12,1,8 15,0,4 15,4,3 1,3,5 13,9,7 2,", "6,7 10,14,9 17,1,1 14,11,1 13,12,6 3,14,4 4,19,7 1", "4,2,7 7,18,6 10,2,3 14,0,8 1,19,2 6,11,4 9,5,7 ", "6,13,9 3,10,6 8,0,6 11,15,6 8,1,3 8,7,1 7,3,5 10,1", "5,5 4,3,1 19,0,5 1,5,7 14,7,3 0,7,2 12,5,6 18,1", ",7 10,16,9 12,10,4 15,8,4 4,12,1 10,0,9 0,18,4 8,4", ",2 15,1,5 19,8,1 12,2,8 13,10,7 6,3,1 19,5,5 12,11", ",4 3,2,2 9,16,1 6,7,4 4,2,1 17,3,7 1,16,6 6,16,3 1", "3,1,1 8,9,2 8,3,2 13,7,4 4,10,7 1,2,9 13,19,7 18,6", ",9 2,7,4 1,9,1 0,5,5 7,16,7 4,11,8 13,16,4 16,14,7", " 11,10,1 5,16,2 9,19,5 17,15,8 1,11,9 6,8,7 6,17,6", " 11,16,5 19,18,4 12,17,8 10,5,3 2,5,8 12,14,8 5,18", ",2 6,1,9 12,16,1 8,5,8 15,14,7 17,4,1 3,0,", "9 13,15,3 1,0,6 19,15,9 7,17,5 9,6,5 15,5,2 19,16,", "9 9,10,3 6,14,3 2,18,1 10,7,7 14,1,7 14,13,2 18,15", ",7 3,18,7 11,7,5 0,13,6 9,11,8 5,7,6 9,15,3 13,4,9", " 15,12,3 2,8,6 10,17,8 18,4,3 15,6,7 11,0,6 0,6,8 ", "19,6,7 9,17,6 10,8,9 9,14,7 16,18,9 0,4,4 17,1", "9,1 3,19,1 2,16,9 5,14,6 12,3,6 16,3,5 5,6,2 16,8,", "1 11,8,4 18,12,6 5,13,9 17,2,8 6,12,7 18,9,9 7,19,", "6 4,14,2 10,1,3 5,4,8 13,8,2 19,11,5 2,9,9 8,12,9 ", "13,2,6 9,3,4 11,17,7 12,0,8 7,15,8 4,7,7 2,19,2"};
    int machineStartTime = 447950832;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 2304490;
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    int N = 20;
    vector<int> sunnyStart = {758664, 40747745, 106217550, 119562995, 151053132, 342509659, 367751160, 430672911, 455259051, 494806348, 539000544, 701203709, 731310336, 755549859, 773012824, 787727386, 813760569, 823010211, 893663444, 985581625};
    vector<int> sunnyEnd = {24586140, 40906789, 110419829, 126304849, 340985361, 360037752, 395793598, 444142907, 484443501, 537249768, 546443221, 720846278, 734879822, 772240294, 774100449, 792437794, 822581266, 886286454, 967345898, 989152704};
    vector<string> roads = {"0,13,617758", "178", " 0,7,1766341", "63 19,0,", "181790", "630 0,9,5", "91466842 0,8", ",26359", "1926 16,0", ",447104501 ", "14,0,97", "439908 ", "6,0,6", "53860774 ", "5,0,15022", "6934 1,0,", "494989436 18,0", ",7144", "19252 10", ",0,790", "49342", "9 0,15,265", "08870", "0 0,4,1", "41384163 0", ",11,8961", "36224 ", "0,12,8", "50314016 17,", "0,1221695", "75 2,0,9", "0087826", "4 3,0,", "226049508"};
    int machineStartTime = 315543344;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 332843762;
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    int N = 20;
    vector<int> sunnyStart = {1660959, 57226992, 146082168, 156222206, 185454415, 219836611, 243847184, 285116755, 304012584, 339279451, 402439492, 431171790, 466193343, 604749723, 652558005, 686216196, 775764745, 900698055, 922608048, 957417972};
    vector<int> sunnyEnd = {55174329, 144821175, 147790378, 159915363, 203232530, 221497570, 283776704, 286350614, 335400275, 355307267, 420793836, 460512375, 585997133, 614755319, 671982311, 749881487, 813744331, 906053648, 933219634, 991074820};
    vector<string> roads = {"19,12,277326308 ", "5,19,4551", "10251 18,19,545", "848477 19,15,4", "29523070 3,19", ",1952923", "60 19,7,617312", "991 13,19,523490501 10", ",19,498985824 1", "7,19,388530967", " 9,19,3103745", "37 11,19,64711518 ", "0,19,34621708 19,4,45904", "3304 6,19,6449", "44044 1,19,743470805", " 19,8,69844320", "3 16,19,75495705", "1 19,2,16119259", " 19,14,751771803"};
    int machineStartTime = 948398586;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 36282667;
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    int N = 20;
    vector<int> sunnyStart = {25270318, 71151266, 140266411, 170755823, 231128435, 268247337, 308588048, 386246900, 400702838, 477903487, 532484008, 540160497, 565719527, 678474418, 703787767, 827036921, 853914365, 895913460, 942802326, 971504793};
    vector<int> sunnyEnd = {65903015, 98203534, 157470919, 176050418, 231572450, 283183341, 349636478, 397064457, 464898840, 522475925, 534692769, 550183650, 627817877, 692163687, 803796733, 828253819, 876317036, 933176847, 955318090, 977795887};
    vector<string> roads = {"19,0,34621708 4,15,156783808 10,12,636636764 18,4,", "384289862 2,0,392500691 18,12,144257920 14,5,39037", "0045 15,18,676814216 9,12,414460539 11,14,62572633", "1 5,8,442101695 16,12,168939519 9,10,930891892 10", ",2,104703914 4,3,957116938 1,5,646610901 7,12,1352", "90052 11,9,431402359 15,16,933451437 10,5,81555551", "0 5,17,68861884 7,6,337917159 19,9,310374537 9,13,", "892874471 11,2,334791157 12,4,806896678 2,8,619691", "859 12,1,700149064 16,4,759313110 12,11,660575911 ", "14,18,602388468 0,7,885144100 6,1,956203271 18,0,3", "92589781 17,14,886443021 0,14,850412398 13,8,62916", "1055 3,18,960563268 17,4,373195994 17,19,388530967", " 9,3,892984875 15,6,6640721 15,1,636261860 16,0,80", "6025237 19,15,429523070 8,18,131866105 17,2,199249", "531 3,13,302613691 2,7,361860176 11,17,688816248 8", ",9,873850191 1,8,503090960 1,13,852153786 4,7,6952", "72351 12,17,433283934 13,4,635157408 2,1,778260773", " 3,6,385353601 10,7,779573410 15,3,7845399", "20 5,9,875767481 3,2,432234013 0,6,288595441 0,3,8", "71445572 7,8,500819704 13,17,490396016 7,15,902560", "250 7,19,617312991 13,19,523490501 2,16,521678002 ", "6,10,652251396 8,16,510032488 16,10,455678869 16,1", "9,754957051 14,15,568788094 13,5,561626540 11,1,78", "0842319 11,8,820775393 6,2,161668433 11,3,90651370", "1 2,4,368898119 15,8,37832033 17,16,646252300 18,7", ",72543449 6,8,480420955 10,11,464010208 8,4,307776", "628 2,5,257638763 9,17,822892044 19,5,455110251 13", ",15,285843676 1,19,743470805 6,14,286472736 14,2,5", "42488639 6,18,701233887 12,15,71788180 3,16,762741", "420 3,8,581864529 0,13,42452285 3,14,885585115 12,", "2,609696096 0,12,172456955 10,3,50542612 1,17,2112", "99731 11,7,136977920 11,19,64711518 17,3,802340129", " 3,1,619643396 13,10,931794496 18,11,247370088 19,", "10,498985824 15,17,267301106 17,7,746943454 17,18,", "971370578 18,16,461259953 18,9,682157442 17,10,147", "01862 4,9,962816746 7,14,870873296 15,2,563190887 ", "7,3,410906860 16,6,417599448 3,19,195292360 14,8,3", "60641094 9,14,51136848 6,17,175658383 7,16,4557", "64209 11,15,12132140 13,11,750023060 1,7,324905517", " 5,6,626418005 1,10,468087843 4,10,153023628 0,15,", "413290012 14,1,861571810 9,0,391371542 12,14,63164", "8888 17,8,37713261 18,13,12924815 18,19,545848477 ", "0,8,260670455 13,2,457635860 9,6,407354343 6,19,64", "4944044 5,18,135842589 2,19,16119259 5,11,38007428", "4 6,12,140920811 12,5,385454190 13,6,191792861 16,", "5,989771640 7,13,711848351 16,11,894236899 19,4,45", "9043304 3,5,729148939 15,10,455333833 4,6,11169959", "2 0,4,42379655 12,3,464982427 4,1,679785591 14,10", ",259553889 0,10,77713422 14,19,751771803 4,14,1176", "4530 8,19,698443203 12,19,277326308 6,11,729390061"};
    int machineStartTime = 117590429;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 59892026;
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    int N = 20;
    vector<int> sunnyStart = {58237315, 124034497, 171943031, 186081004, 233050574, 264241842, 321177329, 354045324, 507527609, 513147814, 540513969, 584227658, 686263696, 696577353, 758474310, 769933765, 794570660, 829290324, 912388431, 951922588};
    vector<int> sunnyEnd = {83451529, 165423860, 173115882, 189049743, 257893024, 280730492, 338967807, 461507022, 510796728, 517035123, 574828844, 587611902, 693820330, 736371871, 760807947, 779788717, 804951618, 909757847, 924683048, 990492487};
    vector<string> roads = {"11,10,7610", "74006 10,2,55", "5201159 10", ",3,411", "024528", " 6,10,751", "824077 10", ",16,63", "6998218 10,8", ",87271143", "2 10,9,881", "39116", "3 4,10,", "6786869", "98 10,5", ",2317135", "02 10,19,923", "57284 1", "4,10,2614", "78791 ", "10,13,4", "11466", "885 10", ",12,70", "3451402 ", "18,10,5895", "49301 1,10,", "240351200", " 10,7,", "50", "4900845", " 15,", "10,61704", "1738 10,0,2", "7587727", " 10,17,863", "438337"};
    int machineStartTime = 869948110;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 446402608;
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    int N = 20;
    vector<int> sunnyStart = {26804789, 89448964, 103528891, 170787394, 278891030, 292926252, 372315096, 405441191, 579154314, 606477674, 626296184, 628524088, 698152734, 713919879, 774470544, 792452941, 867375483, 884440244, 899899539, 985954482};
    vector<int> sunnyEnd = {33979785, 100831813, 159124651, 258811232, 292618484, 366572296, 397405642, 533878899, 605959102, 619791373, 627808427, 695408065, 710355424, 717370231, 781302655, 837027213, 881001581, 893284753, 969166655, 992739311};
    vector<string> roads = {"1,12,406649351 4,17,902340947 9,3,863633271 17,18,", "868371456 4,14,327312844 5,17,687124215 4,5,557553", "142 2,18,95733350 12,19,424537578 8,16,520522237", " 18,4,218232632 6,5,378938143 6,16,699207560 9,2,7", "33112975 10,7,504900845 3,5,619498787 11,16,178229", "190 17,2,485068494 5,11,174057213 6,19,857842175 1", "4,13,743474866 12,0,503952897 9,18,147346355 18,7,", "129185067 9,12,119565488 4,15,389821444 7,3,459565", "301 11,14,395303841 3,0,743346572 16,12,29510969 2", ",0,252410464 13,9,297488749 8,6,815076941 15,16,30", "0355391 9,7,511790358 0,5,905609010 0,9,898177960 ", "10,6,751824077 1,17,896643618 3,17,128661770 3,18,", "86768592 17,7,549020989 15,8,750755736 5,12,633112", "561 7,13,808578323 9,16,263757727 17,14,810237856 ", "6,13,853646586 8,4,53077684 14,7,983562001 15,3,81", "2586807 3,4,453811766 9,4,776379556 12,17,64949991", "0 7,12,737614222 1,0,359593212 17,15,937181654 13,", "16,75324762 2,14,867163643 16,10,636998218 1,10,24", "0351200 6,11,116809541 15,18,98879751 1,5,7307", "87170 17,10,863438337 11,9,182317052 12,3,94263913", "5 2,6,123272152 7,15,486687306 8,10,872711432 2,12", ",485988797 10,4,678686998 4,19,327044748 19,9,3084", "81017 1,7,52884137 15,2,129611039 17,9,358580306 4", ",13,194587057 14,6,303881296 14,15,528553799 18,14", ",261726363 8,7,693485508 6,0,461514520 15,5,178939", "465 10,2,555201159 7,2,236549199 11,3,101985811 13", ",19,205856054 0,16,795837165 17,16,886167206 16,3,", "516343244 3,2,208822604 15,1,614211437 18,0,380151", "509 13,10,411466885 13,5,387254037 8,5,886988682 1", "8,5,772355446 15,0,561018746 10,0,27587727 11,18,6", "91915350 13,18,417727602 19,16,560791031 7,11,8077", "57920 1,3,81058227 10,19,92357284 8,0,643821045 11", ",10,761074006 1,8,561027171 1,16,308491020 2,5,502", "085571 1,11,21453203 4,7,984550385 5,16,970391158 ", "13,17,366186023 7,5,953162409 17,8,708583456 2,4,3", "527632 19,0,29570876 2,11,654057078 12,10,70345140", "2 19,11,651476751 13,0,196351407 18,12,848876786 6", ",1,63146072 4,0,590642082 8,13,819338281 1,18,3759", "56004 19,8,23493082 10,14,261478791 19,5,540625181", " 5,9,349636621 18,10,589549301 8,18,108771126 17,6", ",696207421 4,6,805311060 13,11,612332107 9,8,40758", "3747 11,17,89983365 12,11,866222074 2,1,529647682 ", "9,14,799600123 6,18,200492145 14,0,45491373 9,6,45", "5341908 6,15,729313608 2,16,790999612 10,3,4110245", "28 10,9,881391163 10,15,617041738 9,1,117827694 19", ",1,750014919 13,12,676699387 7,16,9594864 12,6,1", "37649315 14,1,408197333 9,15,763510322 17,19,87564", "8202 2,19,582067318 10,5,231713502 12,4,14208198 3", ",19,403882481 11,4,24050542 14,5,52961133 13,1,254", "062132 19,14,992550172 4,1,653871744 6,7,539496250"};
    int machineStartTime = 272091112;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 133099767;
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    int N = 20;
    vector<int> sunnyStart = {0};
    vector<int> sunnyEnd = {1000000000};
    vector<string> roads = {"6,0,9999999", "99 0,1", "0,9999", "99999 ", "0,16,9999999", "99 0,13,99", "9999999 0,1", ",999999", "999 0,4,", "999999999 ", "0", ",8,9999999", "99 5,0,9", "9999", "99", "99 18,0,99", "999999", "9 0,1", "2,99", "9999999", " 19,0,999", "999999 1", "5,0,9", "99999999 0", ",3,999999999", " 0,17,9", "99999999 0", ",9,999999", "999 0,1", "4,999999999", " 0,2,99", "9999999 0", ",11,9", "99999999 0,", "7,999999999"};
    int machineStartTime = 447740985;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 999999999;
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    int N = 20;
    vector<int> sunnyStart = {0};
    vector<int> sunnyEnd = {1000000000};
    vector<string> roads = {"19,12,999999999 3,8,999999999 8,11,999999999 0,4,9", "99999999 17,11,999999999 6,19,999999999 13,19,9999", "99999 16,3,999999999 12,4,999999999 2,17,999999999", " 3,13,999999999 9,7,999999999 6,13,999999999 18,7,", "999999999 8,6,999999999 16,1,999999999 17,6,999999", "999 10,1,999999999 7,13,999999999 10,14,999999999 ", "14,2,999999999 9,11,999999999 2,8,999999999 10,16,", "999999999 9,18,999999999 2,7,999999999 5,19,999999", "999 8,18,999999999 11,18,999999999 3,9,999999999 1", "8,5,999999999 19,9,999999999 0,3,999999999 13,2,99", "9999999 18,1,999999999 14,18,999999999 1,11,999999", "999 5,15,999999999 1,7,999999999 16,14,999999999 1", "4,13,999999999 14,19,999999999 9,4,999999999 13,5,", "999999999 6,18,999999999 16,17,999999999 16,11,999", "999999 3,18,999999999 17,1,999999999 5,12,99999999", "9 11,19,999999999 11,15,999999999 18,15,999999999 ", "17,7,999999999 14,17,999999999 9,8,999999999 5,2,9", "99999999 3,6,999999999 4,16,999999999 11,3,9999999", "99 0,5,999999999 15,19,999999999 14,15,999999999 1", "3,9,999999999 13,12,999999999 8,0,999999999 1,14,9", "99999999 6,7,999999999 4,2,999999999 2,15,99999999", "9 18,0,999999999 14,0,999999999 11,14,999999999 13", ",4,999999999 1,12,999999999 10,13,999999999 1,4,99", "9999999 3,19,999999999 4,3,999999999 18,13,9999999", "99 15,7,999999999 14,7,999999999 0,13,999999999 0,", "17,999999999 3,7,999999999 2,11,999999999 9,16,999", "999999 0,1,999999999 8,19,999999999 4,14,999999999", " 3,14,999999999 5,9,999999999 10,0,999999999 14,12", ",999999999 8,17,999999999 12,17,999999999 18,16,99", "9999999 6,10,999999999 17,18,999999999 4,15,999999", "999 9,2,999999999 7,12,999999999 19,17,999999999 1", "0,19,999999999 12,18,999999999 0,7,999999999 1,9,9", "99999999 11,10,999999999 6,12,999999999 19,1,99999", "9999 2,1,999999999 13,17,999999999 15,13,999999999", " 2,10,999999999 5,1,999999999 12,8,999999999 15,16", ",999999999 8,10,999999999 16,8,999999999 4,10,9999", "99999 13,8,999999999 6,14,999999999 4,8,999999999 ", "5,6,999999999 2,0,999999999 5,16,999999999 17,3,99", "9999999 5,11,999999999 0,6,999999999 10,5,99999999", "9 0,15,999999999 0,19,999999999 3,12,999999999 4,", "5,999999999 9,6,999999999 8,7,999999999 16,0,99999", "9999 17,15,999999999 17,10,999999999 4,7,999999999", " 15,1,999999999 2,18,999999999 19,18,999999999 16,", "2,999999999 10,9,999999999 6,4,999999999 0,11,9999", "99999 5,3,999999999 5,7,999999999 11,4,999999999 3", ",1,999999999 15,3,999999999 9,14,999999999 7,19,99", "9999999 9,12,999999999 10,7,999999999 5,8,99999999", "9 3,2,999999999 9,0,999999999 13,11,999999999 6,11", ",999999999 0,12,999999999 10,15,999999999 8,14,999", "999999 7,16,999999999 6,2,999999999 12,2,999999999"};
    int machineStartTime = 582369193;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 999999999;
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    int N = 20;
    vector<int> sunnyStart = {0};
    vector<int> sunnyEnd = {1000000000};
    vector<string> roads = {"9,19,999999", "999 19,2,999999999 10", ",19,999999999 1,19", ",999999999 1", "9,18,999999999 19", ",0,999999999 7,19,", "999999999 19,16,99999", "9999 19,8,999999999 19,14", ",999999999 19,", "5,999999999 19,3,99", "9999999 19,11", ",999999999 19,4,999", "999999 12,19,9", "99999999 19,15,9999", "99999 19,17,999999", "999 6,19,999999999 1", "9,13,999999999"};
    int machineStartTime = 85478239;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 999999999;
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    int N = 20;
    vector<int> sunnyStart = {0};
    vector<int> sunnyEnd = {1000000000};
    vector<string> roads = {"13,5,999999999 8,0,999999999 7,1,999999999 18,1,99", "9999999 1,8,999999999 0,1,999999999 10,15,99999999", "9 2,11,999999999 19,12,999999999 0,9,999999999 3,1", "4,999999999 19,3,999999999 2,3,999999999 19,", "7,999999999 19,0,999999999 5,6,999999999 3,11,9999", "99999 5,3,999999999 18,16,999999999 9,15,999999999", " 6,15,999999999 5,18,999999999 0,17,999999999 11,1", "5,999999999 8,17,999999999 13,17,999999999 5,15,99", "9999999 18,15,999999999 19,11,999999999 19,8,99999", "9999 12,11,999999999 16,10,999999999 9,11,99999999", "9 17,10,999999999 5,10,999999999 0,10,999999999 5,", "12,999999999 11,14,999999999 19,6,999999999 17,4,9", "99999999 10,11,999999999 6,11,999999999 1,19,99999", "9999 0,14,999999999 4,18,999999999 9,14,999999999 ", "2,15,999999999 8,18,999999999 13,4,999999999 16,6,", "999999999 15,1,999999999 10,4,999999999 18,2,99999", "9999 14,10,999999999 19,14,999999999 1,9,999999999", " 12,0,999999999 14,4,999999999 12,10,999999999 2,1", "9,999999999 12,16,999999999 0,5,999999999 4,15,999", "999999 9,8,999999999 6,18,999999999 18,19,9999999", "99 3,7,999999999 15,0,999999999 5,1,999999999 8,6,", "999999999 16,0,999999999 5,2,999999999 12,8,999999", "999 6,14,999999999 14,16,999999999 17,1,999999999 ", "18,11,999999999 4,3,999999999 13,9,999999999 0,18,", "999999999 19,5,999999999 7,17,999999999 9,18,99999", "9999 12,18,999999999 15,14,999999999 6,7,999999999", " 17,19,999999999 7,15,999999999 8,4,999999999 13,1", "9,999999999 3,9,999999999 13,3,999999999 10,19,999", "999999 6,0,999999999 12,3,999999999 5,11,999999999", " 10,2,999999999 2,1,999999999 2,9,999999999 14,18,", "999999999 9,6,999999999 9,5,999999999 14,13,9999", "99999 13,0,999999999 5,8,999999999 15,8,999999999 ", "10,8,999999999 13,2,999999999 1,6,999999999 8,13,9", "99999999 3,16,999999999 13,15,999999999 12,14,9999", "99999 4,0,999999999 11,7,999999999 16,17,9999999", "99 2,0,999999999 2,8,999999999 4,1,999999999 2,1", "4,999999999 6,3,999999999 12,17,999999999 1,12,999", "999999 11,0,999999999 16,7,999999999 8,14,99999999", "9 0,7,999999999 14,7,999999999 3,1,999999999 3,18,", "999999999 7,2,999999999 11,13,999999999 7,9,999999", "999 19,9,999999999 4,9,999999999 17,15,999999999 1", "6,9,999999999 3,8,999999999 4,5,999999999 3,0,9999", "99999 8,11,999999999 6,13,999999999 6,10,99999999", "9 17,5,999999999 5,16,999999999 16,11,999999999 7,", "10,999999999 15,19,999999999 4,7,999999999 5,7,999", "999999 11,1,999999999 18,17,999999999 19,16,999999", "999 11,17,999999999 18,7,999999999 16,8,999999999 ", "9,17,999999999 4,19,999999999 6,12,999999999 10,1,", "999999999 6,2,999999999 16,13,999999999 9,10,99999", "9999 2,16,999999999 3,17,999999999 18,10,999999999"};
    int machineStartTime = 535597482;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 999999999;
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    int N = 20;
    vector<int> sunnyStart = {0};
    vector<int> sunnyEnd = {1000000000};
    vector<string> roads = {"10,8,999999999 10,", "1,999999999 10", ",16,999999999 17,1", "0,999999999 19,10", ",999999999 10,14,99999", "9999 9,10,99999", "9999 13,10,99999", "9999 7,10,999999999 10,", "15,9999999", "99 10,4,999999999 ", "10,6,9999999", "99 10,2,999999999 12,", "10,999999999", " 10,18,999999999", " 10,11,999999999 ", "10,0,99999", "9999 3,10,999999", "999 5,10,999999999"};
    int machineStartTime = 680853112;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 3680853108;
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    int N = 20;
    vector<int> sunnyStart = {0};
    vector<int> sunnyEnd = {1000000000};
    vector<string> roads = {"1,16,999999999 16,7,999999999 5,13,999999999 2,5,9", "99999999 16,5,999999999 8,17,999999999 2,19,999999", "999 9,5,999999999 14,19,999999999 15,3,999999999 1", "4,2,999999999 13,11,999999999 4,2,999999999 5,14,9", "99999999 9,4,999999999 10,6,999999999 15,13,999999", "999 2,1,999999999 18,5,999999999 18,3,999999999 4,", "11,999999999 18,0,999999999 1,8,999999999 17,3,999", "999999 16,14,999999999 10,17,999999999 18,1,999999", "999 17,11,999999999 6,19,999999999 12,5,999999999 ", "10,1,999999999 13,17,999999999 17,7,999999999 9", ",17,999999999 3,16,999999999 6,0,999999999 19,0,99", "9999999 6,18,999999999 5,4,999999999 9,7,999999999", " 8,3,999999999 0,12,999999999 2,3,999999999 1,6,99", "9999999 10,16,999999999 17,12,999999999 15,8,99999", "9999 17,14,999999999 4,12,999999999 10,5,9999", "99999 18,16,999999999 17,16,999999999 14,4,9999999", "99 14,18,999999999 11,7,999999999 19,5,999999999 1", "8,2,999999999 13,3,999999999 4,18,999999999 15,14,", "999999999 8,11,999999999 0,13,999999999 0,2,999999", "999 9,1,999999999 10,12,999999999 8,19,999999999 1", "7,6,999999999 11,0,999999999 3,4,999999999 3,14,99", "9999999 10,4,999999999 18,11,999999999 18,10,99999", "9999 1,4,999999999 19,12,999999999 6,7,999999999 1", "6,15,999999999 10,8,999999999 16,6,999999999 6,11,", "999999999 11,2,999999999 17,1,999999999 16,8,99999", "9999 9,8,999999999 9,10,999999999 16,19,999999999 ", "7,15,999999999 7,10,999999999 15,4,999999999 13,8,", "999999999 16,0,999999999 15,12,999999999 9,2,99999", "9999 4,17,999999999 10,3,999999999 10,15,999999999", " 8,0,999999999 4,0,999999999 5,0,999999999 7,0,999", "999999 16,2,999999999 2,15,999999999 15,17,9999999", "99 15,9,999999999 9,11,999999999 6,13,999999999 4,", "13,999999999 7,12,999999999 13,1,999999999 2,10,99", "9999999 12,18,999999999 0,3,999999999 10,14,999999", "999 14,1,999999999 19,17,999999999 3,12,999999999 ", "4,7,999999999 3,5,999999999 11,19,999999999 2,17,9", "99999999 3,9,999999999 7,5,999999999 10,19,9999999", "99 11,15,999999999 13,14,999999999 12,13,999999999", " 13,2,999999999 19,18,999999999 11,1,999999999 12,", "8,999999999 0,17,999999999 5,1,999999999 4,19,9999", "99999 4,8,999999999 6,15,999999999 16,12,999999999", " 7,2,999999999 9,16,999999999 14,8,999999999 18,9,", "999999999 13,19,999999999 6,9,999999999 16,11,9999", "99999 8,5,999999999 10,11,999999999 14,0,999999999", " 19,3,999999999 16,13,999999999 15,18,999999999 5,", "11,999999999 13,9,999999999 2,8,999999999 10,13,99", "9999999 6,12,999999999 10,0,999999999 16,4,9999999", "99 8,6,999999999 18,17,999999999 18,13,999999999 0", ",1,999999999 12,1,999999999 2,6,999999999 17,5,999", "999999 15,1,999999999 12,2,999999999 3,6,999999999"};
    int machineStartTime = 610412827;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 999999999;
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    int N = 20;
    vector<int> sunnyStart = {0};
    vector<int> sunnyEnd = {1000000000};
    vector<string> roads = {"5,0,1000000", "000 0,3,10", "00000000 0,19", ",1000000000", " 0,15,1000", "000000 0,1,100000", "0000 18,", "0,1000000000", " 4,0,10000000", "00 0,", "8,100", "0000000 ", "7,0,10000000", "00 9,0,100", "0000000 0", ",6,10000000", "00 0,13,1000", "000000 14,0,100", "0000000", " 0,10,100", "0000000 0,12", ",1000000000 0,", "11,1000000", "000 2,0,100", "0000000 17,0,100", "0000000 16", ",0,1000000000"};
    int machineStartTime = 481692930;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 1000000000;
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    int N = 20;
    vector<int> sunnyStart = {0};
    vector<int> sunnyEnd = {1000000000};
    vector<string> roads = {"14,15,1000000000 2,1,1000000000 1,7,1000000000 18,", "19,1000000000 11,3,1000000000 15,0,1000000000 8,4,", "1000000000 4,11,1000000000 3,8,1000000000 17,1,100", "0000000 5,3,1000000000 15,10,1000000000 6,2,100000", "0000 10,12,1000000000 0,11,1000000000 16,10,100000", "0000 15,2,1000000000 8,6,1000000000 1,18,1000", "000000 1,19,1000000000 16,8,1000000000 4,15,100000", "0000 6,17,1000000000 5,14,1000000000 1,11,10000000", "00 0,10,1000000000 3,0,1000000000 14,9,1000000000 ", "10,18,1000000000 12,18,1000000000 10,17,1000000000", " 13,0,1000000000 9,0,1000000000 6,18,1000000000 2,", "9,1000000000 8,17,1000000000 17,15,1000000000 11,1", "8,1000000000 7,0,1000000000 18,14,1000000000 5,9,1", "000000000 5,19,1000000000 0,4,1000000000 15,11,100", "0000000 10,13,1000000000 1,10,1000000000 12,7,1000", "000000 1,13,1000000000 12,3,1000000000 3,9,1000000", "000 15,16,1000000000 10,3,1000000000 16,12,100000", "0000 8,19,1000000000 16,5,1000000000 1,4,100000000", "0 11,12,1000000000 3,4,1000000000 6,1,1000000000 9", ",7,1000000000 4,17,1000000000 12,9,1000000000 17,3", ",1000000000 14,11,1000000000 6,5,1000000000 5,2,10", "00000000 17,13,1000000000 1,14,1000000000 17,2,100", "0000000 11,10,1000000000 16,6,1000000000 13,2,1000", "000000 7,16,1000000000 19,14,1000000000 10,5,1000", "000000 3,14,1000000000 0,6,1000000000 11,16,100000", "0000 4,10,1000000000 13,8,1000000000 15,13,1000000", "000 17,12,1000000000 3,18,1000000000 18,7,10000000", "00 15,1,1000000000 16,1,1000000000 19,16,100000000", "0 5,13,1000000000 11,19,1000000000 8,9,1000000000 ", "17,7,1000000000 12,5,1000000000 19,4,1000000000 5,", "15,1000000000 18,16,1000000000 5,7,1000000000 0,8,", "1000000000 8,12,1000000000 11,2,1000000000 11,17,1", "000000000 11,5,1000000000 14,10,1000000000 15,7,1", "000000000 14,12,1000000000 12,15,1000000000 5,1,10", "00000000 0,19,1000000000 19,6,1000000000 9,19,1000", "000000 1,3,1000000000 18,0,1000000000 4,5,10000000", "00 5,0,1000000000 11,8,1000000000 19,12,1000000000", " 2,16,1000000000 15,9,1000000000 17,0,1000000000 0", ",14,1000000000 7,3,1000000000 10,9,1000000000 9,11", ",1000000000 6,7,1000000000 14,7,1000000000 0,2,100", "0000000 6,10,1000000000 1,9,1000000000 4,14,100000", "0000 17,16,1000000000 12,0,1000000000 2,3,10000000", "00 14,16,1000000000 17,18,1000000000 14,2,10000000", "00 8,1,1000000000 5,8,1000000000 8,15,1000000000 4", ",7,1000000000 14,17,1000000000 0,16,1000000000 10,", "19,1000000000 15,19,1000000000 0,1,1000000000 9,16", ",1000000000 5,18,1000000000 9,17,1000000000 12,6,1", "000000000 9,6,1000000000 4,6,1000000000 13,9,10000", "00000 4,16,1000000000 19,7,1000000000 9,18,1000000", "000 8,7,1000000000 3,15,1000000000 12,1,1000000000"};
    int machineStartTime = 242297759;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 1000000000;
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    int N = 20;
    vector<int> sunnyStart = {0};
    vector<int> sunnyEnd = {1000000000};
    vector<string> roads = {"19,16,1000", "000000 1", "9,15,100000", "0000 1", "9,2,10000", "00000 19", ",11,1000", "000000 ", "19,9,1", "000000000 1", "9,0,10000", "00000 19,13", ",10000000", "00 19,1", ",1000000000 ", "5,19,1000000", "000 12,19,100000", "0000 10", ",19,1000000", "000 14,", "19,100000", "0000 7,", "19,100", "0000000", " 8,19,10", "00000000 19,3,1", "0000000", "00 4,19,", "100000", "0000 19,17", ",100000", "0000 18,19,10", "00000000", " 6,19,10000", "00000"};
    int machineStartTime = 908267926;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 1000000000;
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    int N = 20;
    vector<int> sunnyStart = {0};
    vector<int> sunnyEnd = {1000000000};
    vector<string> roads = {"14,13,1000000000 3,2,1000000000 11,13,1000000000 7", ",10,1000000000 8,17,1000000000 16,17,1000000000 4,", "8,1000000000 16,14,1000000000 6,1,1000000000 7,13,", "1000000000 14,10,1000000000 2,17,1000000000 4,5,10", "00000000 19,16,1000000000 12,19,1000000000 17,7,10", "00000000 15,8,1000000000 3,16,1000000000 10,11,100", "0000000 5,9,1000000000 7,5,1000000000 2,0,10000000", "00 18,5,1000000000 8,11,1000000000 6,14,1000000000", " 8,18,1000000000 15,7,1000000000 13,4,1000000000 5", ",15,1000000000 16,2,1000000000 0,5,1000000000 10,1", "5,1000000000 7,8,1000000000 3,7,1000000000 9,12,10", "00000000 19,15,1000000000 14,0,1000000000 17,3,100", "0000000 19,13,1000000000 18,3,1000000000 17,0,1000", "000000 9,6,1000000000 3,12,1000000000 14,9,1000000", "000 10,2,1000000000 17,5,1000000000 4,9,1000000000", " 2,11,1000000000 6,15,1000000000 7,4,1000000000 11", ",3,1000000000 3,10,1000000000 13,6,1000000000 7,9,", "1000000000 19,10,1000000000 11,19,1000000000 1,8,1", "000000000 3,13,1000000000 1,13,1000000000 0,19,100", "0000000 19,18,1000000000 13,10,1000000000 17,10,10", "00000000 11,4,1000000000 4,10,1000000000 19,17,100", "0000000 6,12,1000000000 7,14,1000000000 6,10,10000", "00000 7,18,1000000000 16,11,1000000000 6,5,1000000", "000 0,12,1000000000 4,18,1000000000 0,18,100000000", "0 17,18,1000000000 1,19,1000000000 4,12,1000000000", " 12,13,1000000000 1,18,1000000000 12,2,1000000000 ", "9,16,1000000000 19,14,1000000000 17,14,1000000000 ", "15,12,1000000000 19,9,1000000000 13,9,1000000000 1", "0,1,1000000000 3,6,1000000000 10,12,1000000000 1,1", "5,1000000000 0,1,1000000000 12,1,1000000000 5,8,10", "00000000 1,5,1000000000 4,1,1000000000 8,0,100", "0000000 9,17,1000000000 16,7,1000000000 18,2,10000", "00000 7,2,1000000000 19,3,1000000000 8,19,10000000", "00 5,10,1000000000 5,14,1000000000 12,14,100000000", "0 9,18,1000000000 6,11,1000000000 14,2,1000000000 ", "10,8,1000000000 19,5,1000000000 4,3,1000000000 19,", "7,1000000000 18,11,1000000000 7,11,1000000000 1,11", ",1000000000 0,7,1000000000 0,10,1000000000 16,1,10", "00000000 15,4,1000000000 8,12,1000000000 13,2,1000", "000000 0,9,1000000000 16,4,1000000000 16,8,1000000", "000 16,0,1000000000 1,17,1000000000 5,3,1000000000", " 15,11,1000000000 5,13,1000000000 8,2,1000000000 1", "9,4,1000000000 18,15,1000000000 13,18,1000000000 1", "6,5,1000000000 6,4,1000000000 12,17,1000000000 0,6", ",1000000000 12,7,1000000000 10,18,1000000000 12,16", ",1000000000 8,3,1000000000 6,17,1000000000 1,14,10", "00000000 11,12,1000000000 11,0,1000000000 3,1,1000", "000000 13,15,1000000000 5,2,1000000000 9,3,1000000", "000 19,6,1000000000 19,2,1000000000 14,18,10000000", "00 9,1,1000000000 11,5,1000000000 14,15,1000000000"};
    int machineStartTime = 729603008;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 1000000000;
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    int N = 20;
    vector<int> sunnyStart = {0};
    vector<int> sunnyEnd = {1000000000};
    vector<string> roads = {"10", ",13,100", "0000000 ", "10,12,1000", "00000", "0 15,10", ",1000000", "000 5,1", "0,1000000000", " 10,9", ",1000", "0000", "00 10", ",7,10", "000000", "00 10,", "19,1000000", "000 10,0,", "100000", "0000 ", "11,10,1", "000000000", " 2,10,100", "0000000 4,1", "0,1000", "000000 17,1", "0,1000000", "000 6,", "10,100", "000", "0000 1", "0,3", ",10000000", "00 1", ",10,1000000", "000 16", ",10,1000", "000000", " 10,18", ",100000", "0000 ", "10,", "14,100", "0000000 10,", "8,10000", "00000"};
    int machineStartTime = 577541513;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 3577541513;
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    int N = 20;
    vector<int> sunnyStart = {0};
    vector<int> sunnyEnd = {1000000000};
    vector<string> roads = {"12,6,1000000000 15,19,1000000000 6,4,1000000000 5,", "10,1000000000 10,2,1000000000 18,13,1000000000 0,9", ",1000000000 7,5,1000000000 16,6,1000000000 14,12,1", "000000000 14,6,1000000000 18,8,1000000000 9,15,100", "0000000 15,2,1000000000 6,17,1000000000 11,10,1000", "000000 19,17,1000000000 8,4,1000000000 17,4,100000", "0000 0,17,1000000000 8,9,1000000000 10,16,10000000", "00 1,0,1000000000 13,9,1000000000 6,5,1000000000 1", "1,9,1000000000 4,2,1000000000 7,0,1000000000 10,14", ",1000000000 10,3,1000000000 1,7,1000000000 6,3,10", "00000000 7,9,1000000000 7,17,1000000000 19,5,10000", "00000 13,3,1000000000 11,16,1000000000 11,15,10000", "00000 10,19,1000000000 13,17,1000000000 2,6,100000", "0000 14,2,1000000000 13,12,1000000000 4,15,1000000", "000 2,12,1000000000 15,0,1000000000 1,14,100000000", "0 2,3,1000000000 3,11,1000000000 2,9,1000000000 8,", "14,1000000000 17,12,1000000000 4,14,1000000000 0,1", "3,1000000000 4,10,1000000000 18,4,1000000000 7,4,1", "000000000 18,2,1000000000 2,17,1000000000 19,6,100", "0000000 7,11,1000000000 5,8,1000000000 8,1,1000000", "000 17,15,1000000000 13,5,1000000000 3,8,100000000", "0 18,5,1000000000 0,18,1000000000 19,0,1000000000 ", "13,16,1000000000 14,3,1000000000 15,6,1000000000 1", "1,8,1000000000 1,16,1000000000 7,18,1000000000 10,", "12,1000000000 15,14,1000000000 6,13,1000000000 15,", "8,1000000000 4,13,1000000000 13,15,1000000000 15,5", ",1000000000 13,7,1000000000 2,8,1000000000 19,9,10", "00000000 13,1,1000000000 7,2,1000000000 8,19,10000", "00000 7,14,1000000000 1,18,1000000000 12,0,10000", "00000 5,1,1000000000 1,2,1000000000 1,10,100000000", "0 3,4,1000000000 18,11,1000000000 13,10,1000000000", " 3,0,1000000000 6,18,1000000000 3,9,1000000000 11,", "6,1000000000 12,7,1000000000 9,5,1000000000 15,18,", "1000000000 19,16,1000000000 14,5,1000000000 10,6,1", "000000000 11,0,1000000000 19,3,1000000000 0,10,100", "0000000 12,9,1000000000 8,16,1000000000 14,16,1000", "000000 14,18,1000000000 1,4,1000000000 5,17,100000", "0000 0,16,1000000000 3,17,1000000000 19,7,10000000", "00 16,2,1000000000 16,18,1000000000 3,12,100000000", "0 6,7,1000000000 17,14,1000000000 15,16,1000000000", " 19,14,1000000000 17,8,1000000000 9,16,1000000000 ", "7,8,1000000000 0,5,1000000000 0,6,1000000000 16,3,", "1000000000 8,6,1000000000 11,1,1000000000 18,17,10", "00000000 16,12,1000000000 10,7,1000000000 13,8,100", "0000000 14,11,1000000000 19,13,1000000000 3,15,100", "0000000 18,3,1000000000 19,2,1000000000 10,9,10000", "00000 15,10,1000000000 4,11,1000000000 1,9,1000000", "000 17,10,1000000000 7,3,1000000000 18,10,10000000", "00 9,14,1000000000 12,15,1000000000 12,18,10000000", "00 12,8,1000000000 10,8,1000000000 9,18,1000000000"};
    int machineStartTime = 791101740;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 1000000000;
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    int N = 20;
    vector<int> sunnyStart = {0};
    vector<int> sunnyEnd = {1000000000};
    vector<string> roads = {"1,14,1000000000 4,2,1000000000 12,13,10", "00000000 3,9,1000000000 1,8,1000000000 11", ",13,1000000000 4,6,1000000000 16,15,1000000000 1", "8,10,1000000000 16,5,1000000000 9,15,1000000000 17", ",2,1000000000 14,6,1000000000 7,19,1", "000000000 8,0,1000000000 11,5,1000000000 17,12,1", "000000000 7,18,1000000000 3,10,1000000000"};
    int machineStartTime = 1000000000;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 55000000000;
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    int N = 20;
    vector<int> sunnyStart = {0};
    vector<int> sunnyEnd = {1000000000};
    vector<string> roads = {"0", ",", "1", "9,", "1"};
    int machineStartTime = 1;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 1;
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    int N = 20;
    vector<int> sunnyStart = {0};
    vector<int> sunnyEnd = {1000000000};
    vector<string> roads = {"9,5,1 18,14,1 15,5,1 12,14,1 9,1", ",1 9,13,1 12,6,1 15,8,", "1 4,6,1 8,14,1 9,7,1 9,4,", "1 14,16,1 11,1,1 17,7,1 2", ",11,1 15,4,1 2,3,1 16,7,1 7", ",15,1 17,10,1 17,8,1", " 7,6,1 12,3,1 5,", "14,1 12,5,1 3,9,1 6,18,1", " 15,10,1 10,6,1 ", "8,2,1 15,1,1 12,2,1 1", "8,8,1 11,14,1 14,1", "7,1 11,12,1 18,7,1 14,7,1 ", "3,18,1 16,12,1 1", "4,9,1 9,6,1 8,9,1 ", "18,10,1 2,4,1 17,4,1 5,4,1 1,4", ",1 17,3,1 6,8,1 13,5,1 11,4,1 ", "6,15,1 9,18,1 1,1", "7,1 2,9,1 10,14,1 ", "0,19,1 13,7,1 2,14,1 5,2", ",1 4,18,1 11,6,1 10,9,1 16,", "4,1 15,11,1 13", ",17,1 5,3,1 14,1,", "1 11,8,1 6,13,1 3,", "1,1 11,7,1 7,8,1 16,5,1 17,12", ",1 11,5,1 5,18,1 9,12,", "1 1,6,1 18,1,1 18,15,1 10", ",3,1 16,11,1 1,10,1", " 17,16,1 6,17,1 12,15,1 ", "12,13,1 13,10,1 14,3,1", " 11,10,1 15,9,1 5,", "6,1 13,11,1 16,3,1", " 4,3,1 13,8,1 16,9,1 8,1", "2,1 18,17,1 4,14,1 1", "4,15,1 11,3,1 2,10,1", " 17,15,1 6,3,1 16,6,1 10,", "5,1 16,8,1 3,15,1 12,1,1 8,1", ",1 8,10,1 7,1,1 13,2,", "1 4,10,1 17,2,1 2,6,", "1 15,16,1 10,7,1 5,7,1 ", "7,12,1 13,14,1 5,8,1 7,4,1 ", "18,16,1 16,1,1 16,2,1 1", "4,6,1 7,2,1 7,3,1 2,1,", "1 13,15,1 18,13,1 11,1", "7,1 11,9,1 12,4,1 15,2", ",1 5,1,1 8,4,1 13,1,1 11", ",18,1 13,4,1 5,1", "7,1 16,10,1 3,8,", "1 3,13,1 16,13,1 2,18,", "1 9,17,1 12,18,1 10,12,1"};
    int machineStartTime = 991613753;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 1;
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    int N = 20;
    vector<int> sunnyStart = {7, 24, 26, 32, 37, 40, 61, 72, 78, 86, 95, 108, 111, 123, 144, 149, 156, 158, 160, 163};
    vector<int> sunnyEnd = {17, 25, 30, 34, 38, 49, 63, 75, 80, 87, 98, 110, 112, 132, 148, 154, 157, 159, 161, 165};
    vector<string> roads = {"12,10,3 0,11,3 7,12,5 7,0,5 4,17,2", " 7,14,9 1,18,6 14,5,7 ", "0,12,2 2,19,4 6,12,2 14,11,5 3", ",13,8 17,3,3 14,12,6 1,5,8", " 16,19,8 13,2,1 4,7,9 5,4", ",5 11,17,8 9,11,4 2,8,3 1,10,2 14,9,4 7,8,7 0,", "18,2 18,13,3 17,2,", "8 7,11,6 0,2,7 12,17,2 4,1,9 ", "4,0,3 5,10,8 12,11,9 0,19,1 7,1", ",1 16,1,4 7,17,3 2,1,5 9,3,6", " 18,6,8 12,15,3 18,12,4 3,0,3 18,8,9 ", "18,17,6 7,15,3 2,9,3 10,16,", "3 9,18,8 8,0,2 6,0,1 19,14,8", " 6,8,5 15,11,6 18,11,4 7,19,4 0", ",14,6 16,7,7 16,8,3 13,", "0,4 4,16,1 17,19,1 ", "2,7,1 6,3,2 2,3,9 11,10,9 5,", "11,4 4,19,8 16,15,3 8,14,1 8,1", "9,7 3,19,5 10,8,5 19,15,2 17", ",9,6 6,15,4 18,7,6 2,16,7 9,7,9 ", "15,4,6 2,4,6 3,12,8 9,19,", "8 12,8,6 4,6,2 13,8,8 18,19,3 ", "0,17,4 16,0,8 15,5,7 16,13,2 19", ",13,2 3,5,5 1,8,7 4,9,1 9,1,5", " 4,3,8 5,18,8 5,19,8 12", ",1,2 4,13,5 1,19,7 7,5,3 18,2,9 7,6,7 13", ",6,1 9,0,4 12,19,4 10,13,5 ", "9,12,4 11,2,1 9,15,6 3,16,9", " 18,16,4 15,10,8 8,5,2 1", "6,17,2 9,5,9 12,16,4 14,10", ",2 2,15,5 9,16,9 8,15,3 15,17,2 1", "0,6,5 14,1,3 13,15,4 15,1", "8,6 11,3,5 15,3,7", " 2,5,1 9,6,7 14,2,7 8,3,9 8,11,2", " 14,13,8 2,10,6 1,13,3 1,11,7 16,5,2 1", "2,5,2 13,11,4 10,0,3 1,3,4 6,5,6 10,", "19,6 7,10,9 1,17,1 1,6", ",6 10,17,7 1,15,9 3,7,8 19,", "11,3 4,11,2 8,4,8 14,18,6 6", ",17,8 17,13,2 11,16,9 9,8,4 1", "2,2,5 9,10,1 14,17,8 13,5,6 ", "18,3,9 11,6,1 6,2,1 3,", "14,3 18,10,9 15,14,9 6,", "16,2 12,4,9 14,16,5 14,4,", "7 15,0,1 5,17,1 8,17,7 0,5,9 6,1", "4,8 13,12,1 3,10,8 13,7,2 ", "13,9,7 1,0,5 6,19,8 10,4,9 4,18,9"};
    int machineStartTime = 8;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 8;
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    int N = 20;
    vector<int> sunnyStart = {1, 12, 16, 28, 37, 56, 61, 67, 72, 83, 86, 99, 102, 113, 115, 125, 132, 134, 149, 156};
    vector<int> sunnyEnd = {5, 15, 20, 31, 44, 58, 64, 70, 76, 84, 93, 101, 105, 114, 119, 131, 133, 143, 155, 162};
    vector<string> roads = {"15,11", ",9 10,", "0,9 6", ",1,7 ", "10,2,9 ", "15,7,6 17,", "8,7 8", ",5,5 1", "7,15,6 ", "12,7,6 2,", "14,4 5,13", ",9 5,7", ",1 9", ",14,6", " 6,13,6"};
    int machineStartTime = 8;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = -1;
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    int N = 20;
    vector<int> sunnyStart = {7, 82, 237, 386, 441, 512, 560, 610, 755, 767, 871, 917, 1034, 1167, 1196, 1354, 1466, 1569, 1591, 1755};
    vector<int> sunnyEnd = {10, 129, 309, 395, 487, 542, 596, 677, 758, 784, 900, 987, 1041, 1176, 1255, 1391, 1562, 1571, 1617, 1792};
    vector<string> roads = {"19,16,92 7,15,83 2,3,91 19,17,20 18,14,", "97 8,7,99 15,1,79 10,0,3", "7 14,1,32 3,4,71 11,19,51 3,18,67 12,18,6", "2 14,10,82 17,15,65 10,1,86 9,10,56 2,14,6", "6 7,14,56 4,11,77 18,9,36 5,0,66 6", ",9,81 12,13,39 18,7,13 9,1,76 ", "13,5,88 14,3,73 5,11,55 4,13,39 6,2,4", "0 13,18,15 12,5,25 12,16,96 15,18,54 13,7,6", "3 16,1,25 5,19,29 12,2,92 7,17,54 ", "5,6,45 10,11,34 2,17,16 1,17,25 8,3,2", "0 10,6,27 14,8,84 19,0,40 8,12,79 10,13", ",40 3,12,43 17,13,67 0,15,91 18,17,48 7,", "3,34 7,0,79 9,17,50 11,12,22 4,0,16 5,1", "4,77 15,14,32 8,19,15 1,0,74 13", ",2,71 19,12,27 7,19,62 7,10,", "22 1,19,79 5,7,55 12,9,58 1,8,15 6,15", ",53 1,12,33 16,13,92 1,4,69 9,4,", "42 19,4,17 5,18,58 3,11,71 2,16,84", " 5,3,28 3,15,79 7,12,30 19,6,7", "3 1,6,22 4,15,65 14,11,23 11,0,4", "2 2,10,54 12,0,80 16,3,24 17,14", ",40 1,3,72 15,2,22 11,1,80 7,9,", "52 9,5,53 9,13,94 15,19,93 13,15,43", " 16,17,82 15,11,97 12,4,53 4,8,73 10,1", "6,91 8,10,62 9,3,46 10,15,87 2,0,80", " 4,14,50 11,8,65 2,1,69 8,0", ",54 8,2,43 6,13,26 11,9,73 9,15,38 14,", "19,53 19,13,52 0,9,23 6,3,30 11,13,92 12,14,2", "7 19,2,54 16,11,18 6,12,28 10,3,43 4", ",2,66 9,2,50 17,0,22 15,16,58 10,17", ",10 19,10,57 11,17,49 1,18,62 16,9,96 16,", "18,35 17,8,36 11,2,13 15,12,61 8,9,96 0,6,50 16,5,", "56 0,18,87 8,5,24 11,7,54 10,18,64 15", ",5,90 12,17,26 4,6,55 6,18,54 0,13,", "52 17,6,19 16,6,70 8,18,41 13,1,1", "4 18,19,56 1,7,39 1,5,32 13,8,29 7,6,93 ", "2,7,64 5,17,32 8,16,94 6,11,93 0,", "16,92 10,12,52 17,3,74 5,4,31 14,", "6,81 3,13,34 3,19,74 7,16,81 10,5,93 0,3", ",90 19,9,94 4,16,10 14,0,28 16,14,40 18,2,5", "9 13,14,11 18,4,77 9,14,89 4,17,88 10,4,", "91 2,5,58 7,4,81 8,6,39 11,18,50 15,8,18"};
    int machineStartTime = 38;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 115;
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    int N = 20;
    vector<int> sunnyStart = {42, 62, 164, 187, 364, 440, 604, 773, 949, 995, 1177, 1308, 1375, 1469, 1510, 1623, 1694, 1740, 1883, 1962};
    vector<int> sunnyEnd = {57, 124, 179, 252, 378, 539, 693, 790, 977, 1071, 1243, 1319, 1431, 1476, 1571, 1676, 1714, 1756, 1885, 1963};
    vector<string> roads = {"6,8,", "5", "2 7,", "1", "2", ",40", " ", "15", ",", "4,73 ", "14,0,9", "0 ", "9,14,", "4", "8 ", "13", ",1", "2,52", " 10", ",6", ",9", "7 1", "4", ",1", ",59", " 2", ",10,9", "6 6,", "7,9", "7 ", "14,1", "5", ",", "94", " ", "9,11", ",51"};
    int machineStartTime = 99;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = -1;
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    int N = 20;
    vector<int> sunnyStart = {334, 522, 1807, 3604, 4703, 5611, 6033, 7136, 10486, 12007, 12732, 12871, 13393, 13761, 15642, 16519, 17139, 17365, 18583, 19728};
    vector<int> sunnyEnd = {408, 1280, 2775, 3711, 5138, 5644, 6583, 7840, 10962, 12103, 12744, 13107, 13661, 14615, 15787, 16704, 17297, 18279, 18902, 19745};
    vector<string> roads = {"17,1,884 2,9,658 8,2,995 3,13,834", " 16,13,746 10,12,263 1,15,976 12,2", ",988 16,10,931 4,12,522 16,17,436 ", "11,7,738 6,14,680 6,16,779 15,2,99", "8 4,3,123 1,12,316 14,16,933 0,8,791 4,16,468", " 13,9,618 19,4,547 0,6,912 2,5,", "442 2,1,447 1,14,586 19,2,742 ", "16,0,150 4,11,338 4,7,154 14,3,950 14,13,36", "4 1,9,381 15,8,706 16,1,554 14,9,313", " 9,11,176 1,7,259 15,4,358 5,10", ",154 12,5,326 11,12,591 4,18,354", " 16,9,502 5,8,612 11,0,736 3,0,675", " 8,18,988 8,13,970 5,1,852 1,19,965 13,4,1", "59 13,15,329 17,9,173 18,3,7", "78 6,19,403 2,4,490 19,17,228 3,8,179", " 15,7,648 19,15,349 4,0,641 1,18", ",828 7,2,178 16,7,814 7,10,527 5,16", ",313 18,12,656 14,7,319 11,19,442 9,15,563 1", "9,12,569 15,0,989 16,18,514 17,5,448 11", ",8,960 2,18,189 6,7,246 4,6,586 19,0,190 15,1", "1,146 7,9,181 8,4,768 2,14,382 1", "1,16,247 0,14,811 15,17,149 19,5,297 9,12,166 ", "12,6,953 12,0,902 4,10,605 15,18,383 15", ",14,303 9,6,588 18,14,297 16,12,66", "3 14,11,777 18,17,702 19,13,", "223 11,1,697 7,13,573 11,10,134 0", ",2,975 6,5,399 15,5,514 12,8,1", "46 5,7,580 6,13,920 1,0,833 10", ",0,663 7,18,661 13,2,818 3,16,114 14", ",12,115 0,5,153 8,19,863 13,11,9", "35 8,6,740 17,14,478 10,3", ",112 0,9,838 2,10,876 8,7,137 13,0", ",283 12,17,336 14,5,761 6,18,184 4,5,346 1", "6,8,266 10,17,541 17,3,565 19,7,6", "82 18,9,953 10,18,963 9,8,983 4,17,749", " 6,2,374 7,0,418 12,13,446 8,10,146 4", ",1,997 3,15,541 11,18,880 15,6,272", " 19,18,329 5,18,761 7,3,435 11,6", ",331 3,11,106 10,6,515 14,8,292 14,", "10,351 19,3,793 17,0,766 5,13,414 19,14,27", "2 3,6,864 18,0,389 9,3,237 11,5,43", "1 19,10,756 19,9,275 15,10,503 12,3,804 16,15,", "229 5,9,606 8,1,838 17,2,497 ", "10,9,744 3,1,923 3,5,231 18,13,947", " 8,17,431 1,13,572 12,7,760 ", "9,4,375 13,17,109 10,13,979 12,15,902 17", ",11,300 10,1,119 11,2,331", " 6,1,185 7,17,434 17,6,77", "1 2,16,367 4,14,632 16,19,246 2,3,308"};
    int machineStartTime = 644;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 712;
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    int N = 20;
    vector<int> sunnyStart = {386, 886, 1457, 2411, 3328, 4323, 6174, 7594, 8171, 10350, 12679, 13203, 14889, 15521, 16621, 17319, 18366, 18586, 18825, 19230};
    vector<int> sunnyEnd = {666, 1383, 1660, 3021, 3708, 5262, 7153, 7689, 8708, 11027, 12695, 13689, 14955, 15556, 16833, 18123, 18407, 18649, 18971, 19756};
    vector<string> roads = {"16,1", "1,921 2,", "10,", "621 14", ",9,32", "8", " 2,6,142", " 1", "3,12,", "928 ", "11,17,1", "64 ", "13,", "4,868", " 16", ",2", ",552", " 5,17", ",1", "01", " 6,17,839", " 7,1", ",878"};
    int machineStartTime = 415;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = -1;
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    int N = 20;
    vector<int> sunnyStart = {9653, 41227, 47009, 61293, 73069, 84643, 90007, 102679, 108498, 112624, 122653, 129728, 140378, 151040, 166645, 170114, 177604, 185694, 194982, 198410};
    vector<int> sunnyEnd = {17741, 45972, 55289, 68348, 74768, 89318, 95802, 102991, 112130, 118225, 123761, 130296, 142166, 152794, 169371, 173535, 181570, 191345, 195347, 199044};
    vector<string> roads = {"0,16,5989 15,2,7481 18,1,1873 12,3,4531 13,9,8", "760 8,13,6860 8,16,2372 5,9,7570 10,15,7443", " 19,5,9816 13,12,8852 12,14,8713 11,6,9233 5", ",1,3883 10,9,8862 6,1,6489 10,6,1775 0,6,1360", " 19,12,2877 2,6,1533 10,4,3924 9,2,7557 6", ",12,1723 0,5,9061 7,3,8601 17,1,4508 16,10,8199 ", "15,18,5982 12,15,3634 11,18,8429 6,18,703", "5 0,8,4569 15,0,4188 12,8,1421 6,14,3896 13,0,46", "39 16,18,1495 13,11,2848 17,11,9140 2,12,267", "1 7,18,5709 3,9,1968 0,12,2249 0,7,8951 3,", "2,5561 12,1,6922 3,5,3267 1,8,2955 9,6,6637 ", "13,3,4581 4,0,5653 11,0,4362 15,13,8249 15,4", ",7128 18,10,3285 17,15,3354 17,12,3643 2,17,2033", " 16,5,8370 19,8,1708 9,7,3696 4,8,8964 7,6,2998 ", "2,10,8227 15,7,5439 19,0,8890 17,10,7744 12,10,", "1890 1,3,5016 14,15,2947 15,16,5203 14,11,8653 16,", "7,9294 7,12,6401 8,10,4269 17,6,5189 9,15,4094 2", ",18,1583 5,13,9699 2,1,5627 18,5,4045 2,16,8666 10", ",11,6387 4,2,9532 15,1,3788 6,16,5111 10,1,7197 4,", "6,6594 8,11,6518 19,6,5332 19,15,8267 4,19,9315 18", ",9,2422 17,13,7135 2,13,3646 3,15,5356 13,4,", "6375 2,7,6674 13,6,8286 10,14,4625 18,4,", "8451 2,5,4565 11,1,5793 3,19,9629 14,18,9453 16,19", ",1150 6,5,9526 19,10,6487 11,7,5699 18,0,3012 1", "2,16,1408 15,8,8879 0,2,9518 17,5,366", "8 9,4,2609 10,5,3218 14,13,1550 9,1,65", "28 19,14,7013 0,10,8133 13,16,2090 14,5,7229", " 5,15,6612 17,7,4571 0,17,2563 16,3,2748 8,14,", "6451 4,11,8160 3,0,7257 14,17,4291 2,8,3582", " 1,7,5054 19,9,8204 11,2,4014 18,13,9380 9,0,59", "61 12,5,3851 6,8,6490 11,16,9484 12,9,21", "11 3,18,4801 17,9,9798 7,4,4150 13,", "1,1725 16,4,4587 8,9,6518 1,16,2825 5,", "11,8989 8,7,3176 9,14,7567 19,11,2685 ", "19,7,2614 6,3,8109 16,17,7943 17,4,4406 ", "11,12,1051 8,5,8697 17,18,4547 3,4,7075 12,4,2000 ", "14,3,1828 1,19,6388 1,0,8570 10,13,9819 19,2,", "2931 11,15,4748 1,4,9465 8,18,1398", " 1,14,5481 14,7,9794 4,5,9044 6,15,5046 7,5", ",3178 3,10,2295 18,12,1315 17,8,3414 7,10,85", "01 4,14,3530 7,13,9913 11,3,8811 16,14,7057 17,", "19,8496 19,13,4682 2,14,1314 9,16,7114 ", "3,17,2159 8,3,7907 11,9,6022 19,18,3601 14,0,8254"};
    int machineStartTime = 3926;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 14460;
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    int N = 20;
    vector<int> sunnyStart = {20344, 23631, 37380, 59651, 64305, 77551, 89568, 93533, 95040, 102646, 113319, 121411, 130417, 137541, 155678, 156286, 159473, 166086, 186078, 193370};
    vector<int> sunnyEnd = {20884, 24721, 44657, 60851, 67749, 87097, 91040, 93789, 100527, 102905, 115352, 128295, 133614, 138928, 155935, 158706, 160604, 170535, 191888, 197246};
    vector<string> roads = {"0,", "1", "4,26", "56", " 7,", "5", ",3", "20", "2 ", "18,", "1", "2", ",56", "54 1", "6", ",", "4,", "773", "8", " 1", "6,", "18,", "73", "0", "4 ", "1", "7", ",", "12,", "1", "3", "1", "4 ", "1", "1,", "9", ",87", "25 ", "1", "3,", "3,", "16", "34", " 0", ",9,", "152", "2"};
    int machineStartTime = 9896;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = -1;
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    int N = 20;
    vector<int> sunnyStart = {44718, 100705, 168277, 312993, 603969, 687430, 759174, 778152, 830362, 1068465, 1204890, 1266547, 1313341, 1532856, 1569094, 1649855, 1717261, 1728624, 1749420, 1794660};
    vector<int> sunnyEnd = {58221, 106580, 265843, 396503, 637677, 722553, 777840, 815487, 927802, 1096803, 1237725, 1280422, 1355529, 1536597, 1589130, 1683977, 1723252, 1732219, 1772047, 1875619};
    vector<string> roads = {"18,16,10546 11,19,71181 1,0,69125 7,13,78053 19,15", ",25401 13,8,17852 1,10,23350 5,11,18077 13,11,1108", "4 16,4,39371 15,3,30608 7,18,63788 19,12,71566 9,7", ",19615 11,9,21551 3,4,69695 2,0,40263 6,4,40866 17", ",10,57355 7,0,81369 8,16,41676 19,8,56520 2,11,929", "39 16,6,55360 11,7,50865 10,18,80227 1,11,", "46118 19,0,92243 19,3,30321 10,16,57974 8,14,71910", " 11,10,15782 9,17,76287 2,19,80674 18,3,41035 9,2,", "24405 4,15,59481 19,17,76136 12,1,55361 16,17,4703", "0 0,8,36218 12,13,12707 11,12,51751 6,0,26177 12,1", "0,28510 1,18,43581 14,10,94526 3,11,79353 10,2,552", "39 13,10,10748 1,3,20873 19,9,14805 16,13,259", "52 6,14,87357 9,10,65169 15,8,12743 3,10,31250 18,", "8,49707 2,18,23694 0,14,53884 14,13,32896 14,1,356", "94 8,12,33497 8,1,58554 18,6,55911 17,15,8", "0742 9,0,61344 1,15,40342 16,19,98624 2,16,87463 4", ",9,50417 4,18,45898 5,18,61686 15,16,85324 15", ",5,50457 15,14,74624 16,7,58794 7,2,14641 12,0,298", "10 4,0,20171 4,1,91151 5,2,97213 19,18,94540 15,18", ",94525 3,9,51141 6,17,17253 2,17,37262 8,4,665", "76 8,7,98993 17,18,86314 0,17,87169 12,18,48122 10", ",0,46789 19,14,62082 5,19,15121 8,9,60383 13,18,42", "078 1,7,73304 13,4,15427 1,2,30107 7,12,69854 5,8,", "77163 17,11,38250 5,16,55659 3,6,90873 6,10,37540 ", "2,4,66129 11,15,93514 4,5,21782 10,8,48833 ", "9,13,63771 3,17,63825 19,13,75292 15,12,42408 9,12", ",53314 8,6,12311 4,7,89604 8,2,82410 17,1,28456 10", ",4,38584 4,14,60417 4,19,40182 19,6,70053 13,1,9", "3104 11,4,74512 9,1,77463 7,6,81414 2,13,34785 ", "11,8,52920 14,17,36025 1,6,40815 16,11,79512 2,15,", "95142 13,17,71645 0,11,50429 12,17,92866 10,5,3737", "2 17,5,16291 3,5,80614 8,3,25698 7,3,28282 12,14,6", "8410 2,3,57692 9,15,54599 16,9,41089 10,15,32433 1", "5,7,68339 12,5,96427 12,4,51772 8,17,80526 16,12,3", "4795 5,13,71650 3,16,66257 6,5,88045 13,0,61221 10", ",7,92876 0,3,57261 14,16,78059 12,6,12153 18,9,953", "77 19,7,27008 14,2,11467 5,9,93079 18,0,23175 0,16", ",80599 11,18,56627 5,7,86427 6,2,92072 9,14,28633 ", "18,14,48185 11,14,54971 1,19,62298 10,1", "9,25809 4,17,58423 6,9,14242 5,14,46103 0,5,75495 ", "15,0,40745 1,5,86202 3,14,99596 13,15,57572 14,7,4", "6496 3,12,82037 6,15,96207 11,6,10014 3,13,10118 7", ",17,71946 6,13,81174 16,1,60843 12,2,75241"};
    int machineStartTime = 87055;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 223501;
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    int N = 20;
    vector<int> sunnyStart = {139697, 254753, 409606, 449418, 616487, 694360, 731332, 812099, 855643, 953272, 1067432, 1330386, 1470978, 1596435, 1626908, 1657257, 1757436, 1834842, 1878113, 1964055};
    vector<int> sunnyEnd = {143100, 272369, 413322, 497475, 674675, 719830, 787257, 813575, 898375, 972259, 1144543, 1394395, 1492461, 1608009, 1627947, 1691225, 1774784, 1872332, 1931164, 1986456};
    vector<string> roads = {"14,8,97435 15,11,7386", "4 16,2,40828 ", "16,3,11182 19,1,32", "190 17,9,57146 ", "1,12,91670 1", "3,5,96296 1,6", ",37960"};
    int machineStartTime = 82484;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = -1;
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    int N = 20;
    vector<int> sunnyStart = {118069, 210971, 1271745, 2721257, 3111766, 3936836, 3980248, 4183678, 4443914, 8535183, 9148828, 9307305, 9397791, 11124738, 12165036, 12843948, 15011972, 15192528, 16033908, 18601127};
    vector<int> sunnyEnd = {167394, 528094, 1516923, 3101047, 3417330, 3968705, 4133467, 4231815, 5071851, 8791632, 9267030, 9312638, 9417790, 11180800, 12216466, 13706413, 15064454, 15231848, 16488363, 19223487};
    vector<string> roads = {"10,17,575259 10,18,417780 11,12,200260 15,10,", "491232 9,15,959802 14,1,299074 14,16,109695 12,9,5", "42030 19,4,656530 0,11,676441 18,0,172531 18,12,73", "2597 0,12,432101 15,17,836218 13,6,630246 8,13,532", "818 18,4,131066 8,18,213940 8,4,556695 10,", "19,662929 7,9,168068 5,1,767238 9,14,592276 8,2,75", "1488 1,15,958887 8,11,612688 7,6,918938 1", "0,1,252097 16,13,212033 13,10,18", "7453 7,5,325109 4,11,316319 3,0,901762 0,4,82", "1137 5,13,357003 16,19,319292 9,10,46509", "6 6,16,678724 4,14,582904 0,5,222222 13,4,481395 1", "7,1,669193 2,14,109818 13,18,170539 9", ",0,296044 8,19,598708 2,15,291563 9,2,", "602390 13,3,604912 7,10,967688 5,17,308477 7,2,836", "482 10,2,641978 11,13,283118 5,18,221490 2,18,7710", "07 13,0,591603 7,1,301660 3,1,709740 9,3,417096 4,", "3,442919 1,18,638712 15,4,133022 12,17,911477 3,", "12,565454 7,19,549163 8,16,746557 15,12,8728", "07 8,3,704887 9,13,182781 11,3,526381 1,4,635885 ", "0,15,425185 16,12,322095 7,8,370389 5,11,559267 5,", "12,250335 14,18,401922 17,9,323539 0,1,615462 2", ",4,728326 6,0,924712 5,19,160220 2,0,165516 9,16", ",531225 5,6,888969 15,7,602238 5,2,217634 8,5,8", "28155 5,10,829006 11,1,186796 14,7,513138 7,16,194", "451 11,16,848117 1,8,834491 9,5,438074 2", ",6,550357 4,16,753678 4,6,739821 7,0,30057", "1 19,11,788318 9,1,979062 3,19,830960 7,", "4,736551 12,6,339722 7,18,273469 7,3,810153 10,4", ",388170 9,19,709630 15,6,949669 19,12,695458 13,12", ",331151 17,3,692164 6,3,525801 18,17,294102 7,11,7", "03313 19,14,199352 11,14,162117 4,17,644326 17,0,5", "15977 19,13,453404 2,12,585951 8,10,872499 6,18,92", "1386 4,9,580796 17,7,688294 10,16,193928 0,8,69578", "3 15,14,427730 4,5,408477 19,2,761165 6,9,483833 1", "4,17,737129 11,15,328000 8,14,693674 15,8,938015 1", ",2,136163 14,3,203909 18,19,768363 17,16,566613 8,", "12,210703 11,10,507482 1,13,163318 4,12,3849", "82 1,12,174426 16,15,413985 12,14,120178 18,15,279", "166 15,19,306874 6,11,358685 6,17,732469 0,14,", "452342 9,8,659980 3,5,700244 10,6,637273 5,15,7662", "40 3,15,509972 2,16,710560 7,13,905172 2,", "17,175931 16,0,654633 3,18,534322 15,13,723801 5,1", "4,943844 10,3,544261 0,19,160011 10,12,95844", "0 2,3,563043 14,10,345533 19,1,221334 9,11,397895 ", "2,13,866691 11,17,756401 13,14,116918 9,18,8", "82469 7,12,466724 17,8,282636 11,2,75118", "1 16,5,641493 3,16,931293 17,19,614791 10,0,216", "697 1,16,579176 14,6,590173 13,17,746023 16,18,236", "102 18,11,327562 19,6,860371 6,8,109600 6,1,366176"};
    int machineStartTime = 936807;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 370982;
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    int N = 20;
    vector<int> sunnyStart = {113921, 594546, 995332, 1645225, 2982446, 3807603, 4267443, 5628474, 6860608, 7393599, 7966306, 9280913, 9869907, 10525122, 11995405, 12249807, 13766083, 14838742, 16347542, 18201067};
    vector<int> sunnyEnd = {135586, 598220, 1612013, 2145147, 3307980, 3883483, 4718062, 6090050, 6880386, 7472479, 8307583, 9363715, 9935919, 11081973, 12193311, 12863432, 14733966, 15785000, 16647676, 19004161};
    vector<string> roads = {"1", "7", ",1", "5,", "278", "45", "8 ", "6,", "17", ",", "82", "4315", " ", "5,1", "5,", "75", "2", "3", "77 1", "4,1", "5", ",59", "289", "3 8", ",15,", "4", "01", "91", "0 ", "13,", "1", "0,", "54", "46", "70", " 9,", "19", ",1", "66", "038 1", "6", ",", "17", ",", "79", "69", "97"};
    int machineStartTime = 648721;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = -1;
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    int N = 20;
    vector<int> sunnyStart = {1369700, 11113081, 14334074, 17624308, 33714081, 35344636, 44763393, 52490888, 73545317, 85420236, 92715967, 104546309, 107645536, 111573120, 116046084, 147938719, 154114866, 163565066, 171076081, 185034355};
    vector<int> sunnyEnd = {1792588, 12217036, 16254608, 17723056, 33999686, 37696091, 47869719, 59995934, 75612943, 91863871, 96784300, 104933003, 109327024, 114893904, 125735738, 149738182, 160061146, 166699748, 177543654, 185299142};
    vector<string> roads = {"6,14,1258724 0,9,6930491 6,10,4793636 12,11,716176", "2 4,18,1957547 16,12,4531056 18,14,3949316 1,10,47", "08169 0,13,8255938 5,3,5642844 16,9,1071764 0,18,6", "094634 1,19,2859008 3,1,3657430 17,15,5464363 3,13", ",4895702 8,3,3667259 8,14,8278965 11,6,5527450 11,", "3,4704206 12,18,2930724 12,19,1848120 6,3,300168", "9 5,10,4750923 3,9,9262493 2,16,1257795 0,15,92545", "78 7,8,2269744 4,15,7716150 1,11,5360916 9,19,2928", "080 13,4,9954400 11,13,4673851 14,12,9680437 14,3,", "9609487 1,12,2138235 8,0,6304019 4,17,8389014 8,11", ",7432065 15,19,2074657 14,17,8138188 1,16,9702707 ", "12,7,5356782 1,15,4896468 17,7,4036309 18,19,98323", "68 2,7,4932263 5,0,8705169 4,19,4439784 5,9,997662", "8 0,11,1803456 5,12,8299947 12,4,4927464 2,18,6995", "045 6,18,6182888 1,17,9339824 1,14,1082135 11,19,8", "614290 2,13,7871171 8,13,7650269 0,10,557072", "2 16,3,8591933 14,4,8907708 7,10,1764192 5,8,29461", "16 2,15,7907479 18,8,8957938 10,15,8822823 19,8", ",1586654 12,2,6604025 1,9,7326146 14,13,3926351 2,", "14,6230799 9,13,7357325 1,5,8270186 0,17,6911747 1", "1,17,1459049 9,14,9301131 13,17,7860191 18,13,7", "170092 13,10,3527311 3,15,4779808 19,2,1348601 1,0", ",2276876 7,16,5227468 14,15,4204889 9,8,6083400 5,", "15,9520532 17,2,9942317 8,4,9197056 12,13,5267154 ", "19,0,3192911 15,8,6510230 4,5,7896085 14,19,572686", "7 6,13,6159927 19,10,5425902 17,6,4956639 2,5,9675", "706 6,8,7660540 18,1,1884607 4,9,3456154 16,14,795", "0167 0,3,1229759 9,7,1476906 18,11,4575639 16,0,", "8605088 19,6,2662874 6,7,7979413 2,9,9994353 16,11", ",6385883 1,8,6093176 3,18,6803903 2,3,8869905 18,7", ",3623285 5,17,1680990 5,14,8230498 4,3,3148612 12,", "10,2740146 19,7,1611906 5,19,3999501 18,16,7139462", " 17,19,6687358 7,4,8618336 0,7,4921096 2,11,93", "61026 15,16,2186288 9,15,4064344 11,9,7491524 10,", "4,1873240 19,3,9550652 8,16,3081726 9,18,7552464 9", ",17,7445381 12,0,9418103 3,12,2135857 12,8,5017061", " 1,7,3447526 1,2,8333516 15,18,4726406 15,7,140157", "3 8,17,9936922 7,5,3980024 6,9,3193226 1,4,5003207", " 14,10,6502264 15,11,4358542 12,17,5144631 11,14,7", "243120 0,6,4860934 2,4,4034034 3,10,8085126 13,16,", "9891615 0,2,8908175 12,9,1955492 1,6,7051871 16,4", ",7560432 15,12,9486224 11,4,9249118 12,6,7822695 5", ",11,3377453 0,14,7440006 11,7,3969710 13,7,985457", "9 17,18,1278653 10,11,6986932 14,7,2260095 5,6,844", "6563 2,6,3084074 8,2,5793718 16,17,6716660 18,10,7", "341896 15,6,3062824 18,5,1751642 13,5,1817825 5,", "16,2800654 0,4,3331559 10,16,8147120 2,10,6620780 ", "3,7,4660685 16,6,3263649 1,13,9502074 10,9,7", "815105 13,19,7925728 17,10,7858847 15,13,4506371 4", ",6,2020615 16,19,6122798 17,3,4777832 10,8,2109871"};
    int machineStartTime = 4280227;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 45241362;
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    int N = 20;
    vector<int> sunnyStart = {12353188, 15699023, 19773680, 22272154, 37759611, 44924859, 54434368, 66268971, 82014867, 84369308, 99359227, 106627836, 112543986, 119239846, 138771403, 153722768, 164345198, 168063333, 173711255, 181390116};
    vector<int> sunnyEnd = {13265068, 15745895, 20898251, 32234695, 42595332, 54163735, 59144769, 74497010, 83265513, 94127613, 105200429, 110393830, 117181754, 127843205, 147128813, 158256794, 165306364, 170861860, 174042826, 187122999};
    vector<string> roads = {"5,7,7891580 19,7,83667", "09 17,11,5033220", " 5,4,3082426 1", "5,18,4222704 7,18", ",3827086 5,8,4736402"};
    int machineStartTime = 5766836;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = -1;
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    int N = 20;
    vector<int> sunnyStart = {14933818, 103830045, 131059926, 134679585, 184558026, 238092253, 389376290, 446655274, 486873817, 500950313, 550061932, 574332237, 607410509, 658664673, 705144467, 727163018, 818887445, 880660025, 894123439, 973854423};
    vector<int> sunnyEnd = {33740668, 123398928, 131993057, 154343266, 216083952, 253457962, 444720038, 471473160, 494392247, 527420536, 556296785, 602803492, 637142430, 688360717, 709565413, 810120765, 835311142, 890358490, 960100601, 980523225};
    vector<string> roads = {"8,19,34861373 3,9,92447537 19,10,35016218 7,19,169", "20704 9,15,16801176 9,10,73171953 3,2,40581374 9,1", "2,74941872 17,19,52770167 3,7,70507833 6,16,635851", "09 18,3,97529901 5,11,99000508 11,2,63349224 12,17", ",63124252 11,4,64001843 15,1,84497070 9,0,56902232", " 4,2,58864322 9,2,99106993 2,5,24877018 9,11,68004", "336 2,18,64385869 14,10,40238852 18,11,62498366 8,", "13,25517069 1,6,29438015 0,13,95173962 17,6,291554", "89 8,5,55528009 2,12,85744180 14,18,94014697 4,13,", "32026964 1,9,22630740 0,18,24191351 5,7,78500806 1", "9,15,90561873 4,1,66681316 0,5,55583589 12,10,6268", "0240 6,8,69337475 3,14,24275783 5,19,71439218", " 8,2,72137602 16,0,31755193 0,12,58004187 10,2,959", "08664 18,13,20164730 1,2,50534026 15,7,89229625 11", ",1,84676015 13,1,17652410 19,11,34953686 4,9,50858", "124 8,1,44184803 7,11,61672691 18,9,62919307 6,2,1", "8039875 14,9,36996765 3,11,95256347 15,6,47884208 ", "15,4,97547503 8,14,51044442 7,9,54485442 16,7,1364", "3344 3,4,94628604 0,2,99735063 4,6,54548581 16,3,3", "6683185 16,18,25151777 18,5,73459328 16,1,95292310", " 17,18,80933153 15,10,49571510 16,13,12602753 18,6", ",77424418 0,3,82531962 5,10,96816497 9,16,73122163", " 12,16,85773069 15,18,76651523 10,17,71832232 0,8,", "52070929 4,16,95290993 5,12,21099057 4,17,52265270", " 10,1,12337438 3,5,80096188 1,5,45359955 13,3,1668", "9734 2,13,53232755 15,5,17980013 17,5,22563690 17,", "2,67044511 19,12,53624849 14,11,75045158 14,12,444", "22077 7,12,19380904 6,13,46471115 15,11,69239156 1", "0,3,24444055 5,13,85220582 11,8,20742593 17,7,1886", "1996 5,9,75035496 0,11,57036820 16,14,13102898 18,", "8,81361653 17,8,34559772 12,8,63618700 9,6,1827999", "9 8,3,23284165 12,3,17213546 8,4,95026959 6,19,634", "68240 11,6,33875059 1,7,77416554 10,8,67237348 14,", "5,19531999 15,16,71542043 14,6,37660300 4,12,10560", "036 14,2,96262464 15,0,56868857 12,18,63731489 15,", "14,51377160 18,19,40476717 0,7,97245467 1,12,50982", "755 14,19,57532542 19,2,20737092 17,0,58816683 8,9", ",24446805 16,8,33972634 1,0,27888421 15,12,4940147", "1 4,18,60223398 1,3,26767324 3,17,87745431 16,5,32", "464326 7,4,18847014 4,5,24276519 10,11,94645440 17", ",14,22662916 15,8,48712055 13,7,74297349 9,13,4761", "6325 2,15,54951406 12,13,51690075 4,19,31004461 10", ",13,11061536 1,19,85133314 17,16,35982303 5,6,4529", "0231 16,2,69973157 3,6,37226120 10,7,58654670 0,19", ",20241947 3,19,60441183 14,0,75861860 14,7,3114068", "1 12,11,15653524 10,6,42021770 19,16,83991223 10,1", "8,34587814 6,12,66992580 3,15,59854849 19,13,31865", "780 14,13,45170370 0,4,99984819 19,9,20318861 7,2,", "15299525 14,4,17139086 7,6,24577792 17,15,52028374", " 13,15,47427232 1,17,30385367 13,17,29728808"};
    int machineStartTime = 78083454;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 204799973;
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    int N = 20;
    vector<int> sunnyStart = {13019576, 55488172, 161167346, 204469091, 383056254, 455250569, 485197651, 489952299, 518771698, 542718265, 579615809, 708993078, 730635323, 769366113, 798715246, 833368103, 851019082, 935991465, 943534882, 955938706};
    vector<int> sunnyEnd = {35864168, 95119246, 198039976, 244010229, 452276065, 468270146, 489616319, 512902302, 535545571, 546425441, 668456703, 712787548, 737970382, 771976406, 808909967, 840083972, 910014970, 939476367, 953467797, 994994330};
    vector<string> roads = {"17", ",16,", "85", "04", "0", "776 ", "7,1", "8,3", "71", "417", "46 ", "1", "1", ",3,", "9", "0", "65698", "1 ", "10,8,6", "61", "6", "2", "19", "7", " 9,1", "2,8933", "8152 1", "8", ",9,8", "59", "8", "72", "71 4,", "11,", "7", "3", "33", "9386"};
    int machineStartTime = 84771360;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = -1;
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    int N = 20;
    vector<int> sunnyStart = {23585063, 81601963, 113353171, 149133024, 194262059, 265668427, 331953641, 334965303, 365251333, 509094257, 596483178, 619362844, 688191299, 761658912, 808212748, 850692706, 876802868, 916829656, 946953127, 969713971};
    vector<int> sunnyEnd = {80426483, 104989166, 120021448, 170496108, 228549892, 316888335, 334148728, 353071069, 494218319, 576907095, 607764816, 648256896, 713424637, 782994242, 836244979, 874839061, 890620783, 928704238, 953511573, 987414056};
    vector<string> roads = {"12,19,500567179 0,10,947907765 9,19,780243746 2", ",1,913335974 2,7,897479601 5,8,506775894 11,6,5373", "91173 10,12,737424045 1,19,792911562 2,15,83402363", "4 9,5,289723515 8,17,753276004 12,17,175384798 13,", "5,517884865 4,15,897166641 5,11,698890776 5,12,802", "402196 4,19,567861149 7,0,754279695 8,15,726806833", " 14,6,957149059 8,4,782250395 7,10,319220690 19,16", ",746710752 1,5,739774029 19,10,858857672 2,3,14134", "4519 10,16,390766042 2,9,114080822 17,14,705594269", " 8,9,829889271 18,14,626144307 3,8,977224848 16,8,", "244416932 16,18,405474598 16,0,152054136 13,17,984", "394520 8,18,727628968 18,13,906768962 17,3,7068270", "58 9,16,119824186 19,13,958605353 14,11,58820", "6535 0,14,967702399 15,16,355632614 8,7,850217701 ", "15,13,272482155 17,7,609075067 16,1,698765838 2,13", ",699557946 7,16,535679571 1,6,430591179 14,7,23978", "8930 0,6,867589917 0,13,110288513 9,1,232881960 3,", "14,615587365 1,11,584777469 8,12,976645511 0,19,18", "8369641 2,12,208776516 16,5,331320132 7,1,87767926", "7 4,18,450726445 8,14,736647857 8,13,608892124 7,1", "2,169237082 15,17,612692236 4,13,305554166 16,12,3", "98301750 1,14,707699699 17,9,427425490 14,5,673658", "793 5,17,396023781 12,4,166489612 1,12,934222839 4", ",9,383300934 10,8,208352922 3,9,646126488 9,7,3142", "93828 6,8,647045893 11,8,500643180 15,18,979100368", " 14,4,730156967 5,6,982990984 12,18,929206885 19,2", ",526350640 19,11,128643366 2,16,707468973 6,17,921", "886992 9,12,446749254 1,3,688057244 8,1,578733207 ", "0,4,406394773 14,15,663093543 18,19,197962959 14,1", "9,519177267 13,12,199362448 15,12,196171866 4,3,72", "6178044 1,15,272915360 11,16,850088235 18,0,874833", "164 2,10,807547186 18,3,580799496 11,7,898240251 1", "3,1,930325664 0,12,316740523 8,19,413363944 13,16,", "626540019 0,11,119688893 5,15,248320849 2,18,36754", "6875 7,4,914753270 0,8,694989795 18,1,701086791 14", ",9,569972113 11,15,775838163 4,2,267827225 3,12,38", "0270735 16,14,732404779 17,10,311718326 5,10,91307", "9177 15,0,673591971 3,7,363072146 18,17,716758924 ", "10,4,836209123 3,11,451965476 0,1,587442685 7,18,5", "11447641 17,0,926938526 5,7,791476499 16,6,9330218", "19 3,10,977152234 7,13,249113916 14,2,728137454 3,", "16,973679012 3,0,607769720 2,11,886830859 18,10,35", "7079996 17,2,971063520 2,5,990163583 15,10,5530215", "08 19,17,741999236 5,18,622572700 13,6,921310395 9", ",11,189997108 10,13,254984801 19,5,761252534 12,14", ",339078135 19,7,989614811 6,19,264651216 2,8,7", "53898283 18,11,202376891 2,6,455350271 6,9,2784382", "33 11,10,948245872 4,16,489084505 0,5,321654335 10", ",14,856155386 9,15,270878198 7,15,130852878 4,6,91", "5517319 3,5,349195428 6,3,165571767 13,9,809628877"};
    int machineStartTime = 371469106;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 1104417971;
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    int N = 20;
    vector<int> sunnyStart = {21228076, 163368551, 168315275, 185678239, 249487458, 278949176, 339025698, 398781647, 425405476, 555002626, 561278075, 614422139, 618310410, 657067548, 729541239, 768924335, 871430197, 879943253, 907384724, 982637037};
    vector<int> sunnyEnd = {102505861, 168193132, 178369718, 218506406, 272203026, 327394446, 363279132, 420009723, 502352256, 558064380, 603620647, 617974874, 629542019, 683667683, 755049622, 775881252, 872767033, 901897586, 958754744, 998458919};
    vector<string> roads = {"17", ",2,22", "69", "21", "8", "35", " 1", "7,3", ",", "4808", "68283", " ", "7,1,", "17", "785", "1", "3", "12", " 1", "2,1", "1", ",38", "75", "31", "963 ", "3,11", ",55", "00", "8", "61", "5", "7 18,", "0", ",8", "6389", "6", "075"};
    int machineStartTime = 766321826;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = -1;
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    int N = 2;
    vector<int> sunnyStart = {91113129, 159006231};
    vector<int> sunnyEnd = {142755224, 191385904};
    vector<string> roads = {"0", ",", "1", ",", "3", "2", "2", "3", "2", "2", "5", "6"};
    int machineStartTime = 62304446;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 123345385;
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    int N = 2;
    vector<int> sunnyStart = {57226867, 66839371, 77976358, 81357995, 103911969, 129164348, 133179900, 186371570, 188259731, 203158504, 206185591, 219514150, 253993085, 255315391, 264372321, 292981982, 296496269, 307272205, 321078366};
    vector<int> sunnyEnd = {62507692, 75853302, 79569642, 94592599, 125202533, 132572727, 177563894, 188100892, 197693978, 204533069, 211618355, 240943003, 254544023, 259530945, 287741430, 293670577, 297056924, 314463728, 326115087};
    vector<string> roads = {"1", ",", "0", ",2", "86", "6", "5101"};
    int machineStartTime = 14104668;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 161845001;
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    int N = 13;
    vector<int> sunnyStart = {120045197};
    vector<int> sunnyEnd = {668155547};
    vector<string> roads = {"4,7,500067975 3,10,346028369 11,3,414", "083530 12,0,559515663 3,6,35", "4894241 11,8,462301079 11,7,320", "103621 7,1,594375835 10,9,45253320", "5 12,2,470666667 3,0,434626688 2,", "5,587181689 11,4,594927656 5,6,46032242", "4 4,3,336034746 3,12,466129898 1,2,31421", "1159 6,4,604011753 5,4,597932976 12,5,370739977", " 10,0,396185174 10,2,43054", "2783 8,7,507638338 8,3,376484956 ", "11,0,344280251 9,2,546", "973150 5,9,579253683 2,0,59201873", "0 6,2,536602757 8,2,312453249 1,", "10,528912976 1,3,432731705 3,", "2,501415270 9,3,352536946 8,1,54174", "2278 0,6,575397328 4,10,297929634 6,12", ",605797869 5,11,310243388 4,8,38394960", "4 8,6,450397192 10,8,387662150", " 12,9,555205802 1,6,4566", "59069 8,5,498600851 12,4,438457672 0,1,366529", "990 9,1,381198183 4,0,530", "060643 11,9,350048942 1,12,4071427", "89 9,8,372626156 0,7,389171048", " 8,12,403771638 11,1,432761385 5,3,558597", "319 0,9,578549401 12,10,582584", "110 7,10,558161410 5,1,386", "801139 1,4,605998419 7,3,52454", "7316 6,9,333969656 4,2,5169257", "52 12,7,515641142 6,10,4", "72550620 10,5,420015832 12,11,5074", "62435 7,9,387493770 5,0,5738823", "27 7,6,412566875 8,0,606845825 2", ",11,330687497 11,6,417339", "641 4,9,416313047 7,2,54990342", "1 5,7,302579058 10,11,298322565"};
    int machineStartTime = 396142626;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 1515423031;
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    int N = 5;
    vector<int> sunnyStart = {125281742};
    vector<int> sunnyEnd = {396161710};
    vector<string> roads = {"3,4,82351061 2,3,181138548 2,1,374542451", " 0,4,186125934 2,0,35378638", "1 4,2,471022585 1,3,202409055 3,0,456249867", " 1,0,49907439 4,1,30269337"};
    int machineStartTime = 335237716;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 205458518;
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    int N = 3;
    vector<int> sunnyStart = {610162071};
    vector<int> sunnyEnd = {763183484};
    vector<string> roads = {"2,0,", "5", "4", "6", "2", "6", "91", "7 ", "2,", "1", ",", "57", "2963", "214", " ", "1,0", ",1", "442", "4", "87", "71"};
    int machineStartTime = 156974701;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 664788988;
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    int N = 3;
    vector<int> sunnyStart = {606332950, 702455947, 752978693, 823297679, 941302400, 973040857};
    vector<int> sunnyEnd = {699141791, 720633647, 817195936, 926188397, 954418840, 980229907};
    vector<string> roads = {"2", ",", "0", ",", "77", "4", "91", "2", "6", "2", " ", "1", ",", "0,", "1", "06", "4", "9", "7", "0", "2", "9", " 2", ",", "1", ",9", "42", "05", "2", "6", "6"};
    int machineStartTime = 22576549;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 683824212;
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    int N = 19;
    vector<int> sunnyStart = {165957311, 220925156};
    vector<int> sunnyEnd = {179881963, 380641935};
    vector<string> roads = {"10,9,18540927 4,8", ",121436975 6,10,", "181013392 18,8,6707", "3904 4,11,23393217 8,1", "1,162528783 7,10", ",128876173 14,5,175709994 ", "0,14,37464606 15,8", ",105711102 4,0,", "144939903 0,5,12678", "2270 14,4,19800937 1", "1,0,156122953 6,1", "8,158858976 1", "2,14,75591589 ", "6,0,46829951 17,9,1729", "01644 3,4,152496020", " 14,1,64128163 8,", "2,176023774 7,4,33658", "298 14,15,171848468 8", ",1,123829", "053 18,1,10829854", "9 7,16,133450588 15", ",11,77430735 13,0,133179921", " 9,7,1275177", "21 6,12,13", "7201834 3,17,23952", "578 10,12,20", "106568 7,14,53636473 ", "12,1,57175884 9,1", "5,66323369 15,13,74008549 5", ",4,80574139 14,16", ",176378315 4,6,12191", "0160 12,9,121300833", " 17,18,1768", "73260 8,16,274311", "62 3,9,10803", "5085 8,3,62670011 5,10,", "84995213 11,18,163756619 10,8", ",177383264 6,2,69455262"};
    int machineStartTime = 24549164;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 497135395;
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    int N = 6;
    vector<int> sunnyStart = {133312931, 419987217};
    vector<int> sunnyEnd = {149277160, 738079750};
    vector<string> roads = {"4,2,149814437", " 0,4,", "334", "794757 5", ",1,347396", "779 3,", "1,2633", "8753", "0 4,1,", "464730", "62 3", ",4,63", "858223", " 1,0,2732063", "02 ", "5,4,31397", "8174", " 2,1,2", "5593017", "0 2,5", ",108", "32574", "7 5,", "3,1882", "7027", "6 2", ",3,202", "544352", " 0,5,31", "447995", "5 0,3,", "15719", "8502 2,0", ",16", "2415491"};
    int machineStartTime = 30019109;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 690728455;
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    int N = 4;
    vector<int> sunnyStart = {223780575, 280581372, 445478927};
    vector<int> sunnyEnd = {253711693, 404841163, 472646919};
    vector<string> roads = {"1,2,43278", "331 0,", "1,757576", "69 2,3,13", "9108696 0,", "2,23919", "290 1,3,16", "4158238 0", ",3,7", "7294600"};
    int machineStartTime = 657461;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 357875972;
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    int N = 4;
    vector<int> sunnyStart = {264404364, 319459560, 405979776, 678169958, 764354868, 833803646};
    vector<int> sunnyEnd = {280125172, 347420832, 494573902, 719072380, 809861694, 879883241};
    vector<string> roads = {"2,", "1,", "43", "935", "18", "2 ", "1,0", ",58", "268", "209", " 0", ",3,", "260", "654", "25", " 2,0", ",44", "4755", "01 1", ",3", ",5767", "542", "1 3,2", ",1", "83", "8413", "2"};
    int machineStartTime = 30440679;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 345524985;
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test67() {
    int N = 5;
    vector<int> sunnyStart = {777922087, 837979613, 858081583};
    vector<int> sunnyEnd = {780544375, 847670533, 956327728};
    vector<string> roads = {"0,2", ",309", "73", "2210", " 1,4,", "27687", "3361", " ", "1,2,26", "525", "253", "4 ", "2,", "4,268", "417", "837 ", "2,3,", "183", "389", "825 ", "4,3", ",7", "569", "67", "44 0", ",4,", "309", "18369", " 1", ",", "3,10", "747", "97", "04 ", "1,0,1", "1994", "7991", " 0,", "3,22", "28", "76512"};
    int machineStartTime = 306029590;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 888999952;
    if(result == expected) {
        cout << "Test Case 67: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 67: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test68() {
    int N = 19;
    vector<int> sunnyStart = {233419232, 435147745, 457705040};
    vector<int> sunnyEnd = {395923210, 441531861, 459596995};
    vector<string> roads = {"2,16,252263347 0,13,439337600 1,16,405600", "116 12,9,323982509 14,7,280685337 5,15,3", "17940217 7,17,456668943 0,2,185632759 14", ",16,321524207 9,3,481212227 ", "7,0,262527865 6,11,408500104 16,3,303735", "393 5,16,393960261 18,3,297519117 12", ",4,352298183 7,13,209510924 11,1,182983174 17,3", ",300384375 9,13,276609568 4,11,", "128331129 14,9,471327049 16,6,46911095", "0 7,1,367704702 1,9,385810247 16,8,197982626 0,5,", "214746223 14,6,117150121 0,18,358190342 13,3,1", "20572418 10,5,370731329 17,6,287", "738711 8,13,158190413 15,12,20545823", "8 15,1,156282413 1,10,501623228 2,3,1193", "26314 16,7,256457718 4,7,432552982 1,2,50645", "6455 6,15,448584617 13,6,345492136 16,10,1", "35331199 18,12,168503713 4,14,404087455", " 8,10,141378896 9,0,381213907 11,16,197905", "140 18,16,373905694 11,10,481990019 14,11", ",199518079 8,0,501397390 12,0,450113398 ", "4,2,126281945 14,12,468786101 8,4,240990580 4", ",18,359058292 6,18,13", "7669223 15,17,129293178 0,1,125956330 12,13,1", "46463317 1,12,500713826 6,7,172096115 2,13,17", "1122345 10,7,390984469 12,7,2810079", "38 2,8,408357718 16,9,130383451 6,2,3843706", "47 12,5,218069246 0,14,134793279 18,5,2", "93810000 0,17,466205232 10,9,", "179650763 15,7,270993985 5,8,255508157 0,11,259545", "395 3,12,444430311 3,10,223684164 15,9,3676", "42159 2,5,378033424 17,9,433099609", " 1,13,326522098 4,6,281965997 15,16,14023", "0659 1,8,180981601 2,18,333354709 0,10,310574", "473 11,8,343316663 17,16,170521715 17,", "18,330478021 13,16,209831035 5,1,1336", "50750 0,15,475088107 16,12,260203772 1,1", "4,424900698 4,1,251895316 6,0,474282861 16,", "0,437914385 18,10,237511448 7,8,2", "51058783 15,14,137993842 3,14,359933", "888 13,15,174070128 13,4,461820288 ", "18,15,359338758 7,9,3593", "40711 6,12,408196997 13,5,158006169 10,12,29919371", "2 18,7,373550811 6,8,285185041 7,11,279841417 15,4", ",284470496 0,4,297982498 1,3,3545483", "90 14,18,179716563 8,14,2294", "52417 10,17,308993551 0,3,4004", "63663 11,9,315038243 9,4,198644793 15,8,45", "4965521 17,4,511971734 15,3,499914368 18,13,2", "92265492 17,14,445364168 17,2,413369645"};
    int machineStartTime = 63982433;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 978105366;
    if(result == expected) {
        cout << "Test Case 68: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 68: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test69() {
    int N = 5;
    vector<int> sunnyStart = {146687294, 223549145, 623486257};
    vector<int> sunnyEnd = {152250494, 555438071, 770421759};
    vector<string> roads = {"0,4,1", "3383", "3370 ", "4", ",3,1", "8", "53", "67", "92", "4", " ", "1,", "2,180", "103", "731", " 4,", "1,25", "3004", "93", "2 ", "2", ",", "0,", "152313", "175 4,2", ",6379", "9", "24", "1 ", "1,", "0,1", "0279", "556", "1 1,", "3,82", "8376", "89 ", "2,3,9", "01", "2854", "9 ", "0,3", ",90", "95", "7359"};
    int machineStartTime = 61072035;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 357382515;
    if(result == expected) {
        cout << "Test Case 69: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 69: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test70() {
    int N = 5;
    vector<int> sunnyStart = {248973941};
    vector<int> sunnyEnd = {896695834};
    vector<string> roads = {"4,3,2100", "7931", "4 1,2", ",2584", "8", "2181", " 3,0,", "4399", "05141", " 1,4,", "582430839", " 3,1", ",57352271", "6 2,0", ",417141640", " 2,3,8237", "6419", "8 4,2,7", "60601884 ", "0,4,5", "5205", "086", "3 1,0", ",1135", "04", "918"};
    int machineStartTime = 237921324;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 801024804;
    if(result == expected) {
        cout << "Test Case 70: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 70: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test71() {
    int N = 12;
    vector<int> sunnyStart = {85539495, 177599542, 288202072, 472178369, 849354036};
    vector<int> sunnyEnd = {107250711, 249303288, 346995279, 553492633, 979650465};
    vector<string> roads = {"6,1,119694443 9,1,", "83694177 11,5,92281", "201 9,3,87077773 9,5,16017", "8877 8,6,115703113 7,0,112808", "797 7,1,201376544 4,11,19", "1333886 2,1,110778", "865 9,4,204596413 9,0,", "101564287 1,5,1038", "05911 1,8,224423269 0,3,", "143536907 1,4,183159216 6,2,1", "73183063 0,8,9648", "5744 11,1,128889148 ", "7,11,157979649 8,3,109270868", " 0,10,149369682 ", "10,2,143560466 4,5", ",204690948 3,11,185791460", " 5,0,225421639 8,5,9248987", "7 11,9,235030911 3,10", ",169535122 6,5,92468", "472 4,3,80147331 2,0,2", "16684169 4,7,212715665 7,2,181", "067254 10,9,23220", "3040 6,4,99884438 2,4,1000402", "06 9,7,204720113 4,8,17803", "8890 10,5,138", "039611 0,11,113396683 9,6,", "166644990 1,0,150755772 6", ",10,173424284 7,6,130296", "023 10,7,172272469 9,2,89469", "592 8,7,188334678 3,6", ",160513540 6,11,98624502 10", ",8,136790280 0,6,144382", "275 10,4,88237540 1,3,85506441 ", "10,1,164836370 8,9,", "145669255 11,10,187111668 11,2,", "94099759 4,0,12380", "4121 8,2,184116636 2,3,17399717", "0 3,7,138022171 3,5,119702100 ", "5,2,144493849 8,11,", "214480505 5,7,192505924"};
    int machineStartTime = 44345689;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 962750719;
    if(result == expected) {
        cout << "Test Case 71: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 71: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test72() {
    int N = 2;
    vector<int> sunnyStart = {382831514, 445085526, 561386320, 634011570, 673178544};
    vector<int> sunnyEnd = {425963236, 518454600, 577713723, 666707655, 771131611};
    vector<string> roads = {"0", ",1", ",", "6", "9", "5", "6", "3", "4", "3", "5"};
    int machineStartTime = 20953704;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 514648961;
    if(result == expected) {
        cout << "Test Case 72: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 72: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test73() {
    int N = 10;
    vector<int> sunnyStart = {81965123, 115642196, 237680550, 321348362, 394041823, 495023626};
    vector<int> sunnyEnd = {82477275, 216132920, 269355960, 372888998, 464179812, 504708702};
    vector<string> roads = {"7,6,124633498 3,5,71956", "0250 0,7,61758807 6,9,46", "0718739 3,9,110698727 7,5,", "414612402 5,2,126", "781542 3,6,363287702 6,2,340", "095142 1,2,442950322 8,7,1", "59135975 6,1,612939235 4,5", ",597101539 0,9,", "613005522 1,3,468959", "504 4,0,341880885 4,", "2,537443825 7,4,62162", "110 3,8,544624862 1,4,3", "77705026 0,1,174538515 8,", "2,193937944 1,5,249314909 1,8", ",433652349 0,8,624654828 9", ",4,519625986 7,9,5838435", "1 8,4,154501450 7,1,206025947", " 5,6,432037940 3,2,5", "32075561 4,6,57884228", "0 5,0,424457695 0,6,39105501", "9 2,9,168718263 3,7,499922345", " 6,8,430718641 3,0,6245237", "90 3,4,197839354 9,8,33647", "3800 5,9,681066770 9,1,3361", "11175 2,0,649615406 2,7", ",170659077 5,8,186299184"};
    int machineStartTime = 29796079;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 285233867;
    if(result == expected) {
        cout << "Test Case 73: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 73: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test74() {
    int N = 10;
    vector<int> sunnyStart = {392871004, 492890365, 506065226, 526112885, 543089147, 573421194, 587134506, 613941108, 644346284, 667476658, 691616953, 722211767, 771906464, 807156455, 814593933, 845734601, 868475447, 923868555};
    vector<int> sunnyEnd = {459269813, 503432536, 519995861, 531093874, 555154604, 584723536, 592267710, 629034734, 646617615, 685024286, 696286016, 766721267, 792681417, 809984578, 831767767, 859481083, 889616211, 963339057};
    vector<string> roads = {"7,6,38236755 3", ",4,3121699 9,6,42", "285269 9,4,105765", "41 1,0,3475765", "3 8,3,3447", "9261 9,0,397915", "59 7,4,192", "61976 7,8,", "20884193 8,2,31522", "498 5,7,417811", "50 0,8,31063725", " 9,8,43049403 6", ",4,4265", "2913 4,2,3275", "9918 3,2,943131", "0 2,1,2", "7987971 8,5,38", "805853 5,3,44692", "891 1,3,2754", "3486 2,7,2564833", "0 5,2,3393", "6898 4,1,", "36557047 9,5,9", "870178 9", ",1,45136025", " 0,4,1", "3393212 3,0,38", "141067 1,", "6,32990184 3,", "7,43066605 ", "4,5,3226375 ", "4,8,31025253 2,0,2", "4827743 6,3,3991360 0", ",7,401547", "9 0,5,6033704", " 2,6,35251492 3,9", ",42207369 2,9,2823", "5801 6,5,44896124 7,1", ",37835301 1,8,38", "175734 7,9,18885774 5,", "1,39524433 0,6,144936", "12 6,8,20593517"};
    int machineStartTime = 2784244;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 408774886;
    if(result == expected) {
        cout << "Test Case 74: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 74: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test75() {
    int N = 5;
    vector<int> sunnyStart = {301819335, 318195242, 351460086, 382439023, 581421601, 598654763, 735019977, 778889883, 837712364, 863189541};
    vector<int> sunnyEnd = {311937858, 318685580, 373033741, 514076029, 586609180, 675607965, 740113078, 817613662, 851035037, 907311207};
    vector<string> roads = {"3,", "1,7", "945", "12", "97 3,", "0,", "120", "048", "02", "4 ", "1,", "4,12", "155", "4448", " 2", ",1,1", "17", "62", "446", "2 ", "4,2", ",9", "705", "147", "7", " 0", ",4,", "76", "298915 3,", "2,", "9465", "640", "7 4,", "3,697", "47", "5", "10", " 2,0,8", "56", "940", "43 ", "1,0", ",8704", "9297"};
    int machineStartTime = 14394508;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 458737938;
    if(result == expected) {
        cout << "Test Case 75: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 75: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test76() {
    int N = 18;
    vector<int> sunnyStart = {459237779, 469635724, 480759461, 534671288, 579087254, 687329260, 711738110, 764058460, 774080312, 848767281};
    vector<int> sunnyEnd = {460818391, 480123690, 500152445, 537102010, 624957642, 703611346, 759243914, 769722248, 833071430, 877659325};
    vector<string> roads = {"1,4,68314980 3,6,150703615 10,9,129041663 1,8,1255", "08657 5,10,84718821 7,3,161207740 14,3,158", "478935 10,16,130494562 9,1,116739027 2,14,1347", "87181 13,2,121775676 5,11,96596195 3", ",0,55838458 12,10,118461864 12,4,36000525 7,16,773", "16183 11,4,48910211 3,1,1043743", "44 0,1,49943304 14,9,52391649 12,14,7730177", "2 11,3,161472245 4,9,40835671 12,11,86059885 9,17,", "56089825 9,0,121500083 6,1,124655732 6,16,15", "7554052 11,13,45593648 15,2,152641543 4,17,120", "533826 14,5,141035649 3,17,48662654 16,12,104", "546832 4,3,104176089 6,12,159490139 2,0,67486383 9", ",6,50262397 10,14,44611721 17,7,1090", "01635 12,17,62998706 8,11,36349541 3,2,15321", "5602 7,12,87685400 0,7,115473401 1", "0,2,127524340 17,13,140134915 7,10,35", "659207 5,12,145047025 3,9,91017506 8,2,399", "05683 8,0,158315657 2,7,42892480 4,5,442", "03863 4,14,94057465 5,7,102268053 10,15,91", "457065 4,15,77412234 10,1,134602798 16,11,97297959", " 0,10,39755615 13,4,87505432 1,11,123748412 10", ",13,41540068 5,6,63580182 1,5,744963", "29 13,7,58724662 9,13,155375181 16,3,95141843 7,8,", "86348193 2,12,49443911 4,8,129399782 16,4,3", "9716305 15,8,154583586 15,14,60136142 1,7,596", "00087 15,7,152542280 8,10,99262647 1,", "14,51031213 5,9,52482042 9,12,113554823 15,5,1", "60296031 3,8,118928656 16,0,72165934 7,6,153", "278134 6,10,83289164 16,17,130115099 9,7,156045444"};
    int machineStartTime = 71227167;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 995318585;
    if(result == expected) {
        cout << "Test Case 76: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 76: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test77() {
    int N = 15;
    vector<int> sunnyStart = {165768299, 176834634, 251915508, 292147278, 335496894, 348989527, 396059722, 441083516, 472606546};
    vector<int> sunnyEnd = {167507857, 241359546, 274149312, 326967073, 343200617, 373910546, 440815032, 450729825, 498995913};
    vector<string> roads = {"6,14,31814114 5,14,54414315 1,2,63831496 5,8,401", "26253 11,1,66968160 3,0,136954980 10,13,508", "24722 12,10,62953058 13,1,81194137 4,6,59467993 1,", "5,39277600 11,0,21818136 10,14,21294384 1,14,76455", "773 11,4,93229117 14,13,53463763 9,2,59458", "173 12,6,102228487 6,8,135893983 12,4,4775291", "7 10,0,83213076 9,8,85389562 5,10,67094664 7,6,639", "07433 7,4,83746080 4,3,50138666 0,2,1230152", "73 7,8,67898659 2,6,108810124 7,2,62283961 12,0,41", "206647 1,3,85538453 0,5,108084453 7,3,81019986 11,", "2,53260787 2,8,54244344 7,14,13126747", "1 0,7,109304600 14,3,126973666 9,0,36287682 4,1", "3,60835144 5,11,77859958 0,1,29354472 4,", "0,100159558 1,12,108580596 12,5,", "59823261 11,6,129691803 7,12,68623627 6,3,8054", "7762 13,12,24096023 9,10,115536788 3,12,78255971 1", "4,11,74779663 5,6,102644888 5,9,26860099 6,9,11980", "2400 8,0,24617113 5,4,24646385 3,13,53077367 11,7,", "53240509 13,6,135072677 2,5,76951300 14,9,67828754", " 12,9,138660556 8,4,133851774 2,13,102265597 4,1,8", "0068153 11,8,33971498 5,3,138999482 7,9,29360859 1", "3,0,119045498 3,9,80513314 4,9,35732004 14,4,33967", "936 10,4,19797314 13,9,102694240 12,11,22525380 10", ",2,53350879 4,2,65704133 8,3,72374317 10,1,9952599", "6 3,11,61087675 8,13,78345187 1,8,134380497 7,1,68", "474230 10,7,56322577 10,11,70430437 13,7,85364634"};
    int machineStartTime = 17868665;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 345662733;
    if(result == expected) {
        cout << "Test Case 77: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 77: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test78() {
    int N = 15;
    vector<int> sunnyStart = {179070631, 211302155, 226686327, 352327820, 394819371, 410060772, 490833695};
    vector<int> sunnyEnd = {204374485, 223010838, 241386867, 374066248, 409663052, 455394306, 495145775};
    vector<string> roads = {"12,9,178540541 1,3,183142887 11,6,49525292 13,6,76", "775079 3,7,47959232 5,13,122223974 7,9,184211", "092 0,9,26608331 8,6,72345608 10,14,188320749 8,12", ",112962460 13,14,193754889 11,7,40410674 2,14,1602", "74285 7,2,122277687 10,2,105692185 13,4,107064658 ", "13,12,92689195 2,1,115270597 11,4,129728427 6,5,30", "119706 13,3,126086415 11,9,118386614 12,0,47765975", " 9,1,181558096 2,11,116752993 3,6,166304811 9,6,13", "2344255 8,11,66227143 2,4,31481552 1,5,188793381 1", "0,12,138945011 14,11,107834716 11,3,72096564 4,10,", "92473426 7,5,104936071 12,14,48567265 7,0,71201849", " 12,5,109664542 1,8,146005802 14,4,39089571 9,10,", "163571371 1,4,67570825 12,6,33781962 4,3,54612357 ", "2,13,88425906 6,14,88473308 7,1,79314932 5,2,17063", "3290 5,8,28050664 9,5,76327691 6,10,185705209 0,14", ",158014384 0,4,42990560 5,0,38419437 0,11,16842025", "1 7,13,122675381 7,14,17337487 14,3,48841721 9,4,1", "8099297 5,14,167702336 12,3,119490975 7,12,521362", "09 1,14,115030465 11,5,166192079 11,12,18214293 13", ",1,132971918 10,5,120756927 7,10,105092135 0,10,12", "8201864 1,0,118377335 13,11,66946664 0,2,130100579", " 7,8,74324706 10,11,114148321 4,7,53337744 4,5,892", "26155 4,8,138419179 9,8,141524770 11,1,166162355 1", "4,8,61718711 1,12,29557127 10,3,143553271 5,3,974", "42072 0,8,50293756 9,3,161552695 9,14,20439674 3,8", ",189804011 6,7,158588441 2,6,148943413 6,0,8953332", "8 3,0,143592517 13,8,139119999 13,0,41982411 12,2", ",43883302 13,10,90363576 10,8,42061331 8,2,1804843", "48 4,6,168439794 1,6,84007913 9,2,45772092 4,12,16", "6063852 2,3,162898938 9,13,35923741 1,10,146448338"};
    int machineStartTime = 243363;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 459066611;
    if(result == expected) {
        cout << "Test Case 78: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 78: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test79() {
    int N = 17;
    vector<int> sunnyStart = {221476983, 240553462, 260018143, 274266602, 345055617, 418112650, 424223113, 455888345, 480802268, 531669214, 631609584, 641891648, 681606399, 704652364, 776671157};
    vector<int> sunnyEnd = {221779054, 252934255, 271411701, 275503204, 372011041, 423281886, 455069614, 475881196, 525797214, 541890311, 635868335, 651379741, 691892576, 705872560, 836368582};
    vector<string> roads = {"5,6,50691909 14,8,23553394 1,14,44829731 11,12,4", "0533345 7,3,12805132 7,8,47049902 11,15,34", "217553 12,2,33992375 10,9,39088903 12,5,5427898", "8 2,11,52117929 12,15,27500006 1,6,3361", "3002 6,16,47814495 9,2,53079612 12,8,2133", "8506 8,15,34527901 16,12,49683129 3,14,53", "980629 16,10,31098953 8,2,35434802 0,7,34267674 7,", "14,31688231 3,13,35876035 1,11,25064", "501 14,9,58264562 16,13,24400892 6,14,58704653 1", "2,4,58340473 7,5,48521496 2,16,14774418 9,15", ",31957678 3,15,15214590 13,12,47625465 0,12,350", "65340 13,8,21705417 11,7,25163560 3,10,3129", "0163 3,4,12744019 5,8,36756996 5,2,39479749 16,4,4", "3156544 13,14,21690710 8,1,33333908 4,8,4", "9473355 15,14,13976694 2,15,39020832 8,3,", "25503416 6,2,18725353 3,1,53988481 3,5,48635129 13", ",9,40503231 0,4,29497870 6,12,52315592 11,4,40", "265354 1,2,37669010 11,9,54547515 6,9,284", "52448 13,7,19305751 13,15,33502085 5,10,47309592 1", "3,1,24842831 14,5,37470861 15,7,15837982 4,15,1632", "8578 4,14,44469524 4,2,36860048 5,4,48164934 ", "11,6,24516575 9,7,33800589 15,10,45000838 5,13,", "30870171 0,14,22378794 3,11,2070083", "7 6,13,57141335 11,8,26087433 6,3,3271", "3465 9,8,24444145 12,1,40173473 8,6,27776482 13,1", "0,55866328 1,9,48801010 6,10,15621654 10,", "0,23899767 0,16,19395888 8,16,37600135 2,7,460", "78771 9,5,40566026 15,6,25630666 0,15,38651512 3,1", "2,14966214 3,0,19182709 2,13,50610305 1,10,175", "36820 4,7,29335027 12,7,13777833 3,9,50", "885188 13,0,33088456 12,9,12893255 12,10,466761", "71 14,12,14552487 11,16,14692439 11,", "14,24531222 6,0,33780029 8,10,21605", "708 4,1,13267905 14,10,43218395 5,0,5", "2460400 13,11,23530298 5,1,23052223 13,4,55027877 ", "4,6,57278250 5,16,19794220 2,10,48041370 9,4,469", "96622 16,9,26732469 11,10,28392002 0,8,37635790 0,", "1,48318609 6,7,37074791 2,14,20175630 9,0", ",41668857 15,16,31550921 5,11,18061756 15,1,274510", "93 16,7,33320596 15,5,25395588 0,2,5", "1824849 16,14,28286689 1,7,26323319 7,10,49", "981083 1,16,56361466 16,3,54868895 0,1", "1,51818863 3,2,19941658 10,4,45487949"};
    int machineStartTime = 33355126;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 364451505;
    if(result == expected) {
        cout << "Test Case 79: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 79: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test80() {
    int N = 4;
    vector<int> sunnyStart = {467359655, 490206338, 509175272, 529427204, 543574237, 565648443, 584211911, 608452962, 628476193, 647027526, 671452480, 755901130, 764958403, 790853321, 810331834};
    vector<int> sunnyEnd = {484177242, 493173559, 509966948, 536304282, 561396324, 566038941, 607196328, 614032024, 645241871, 647586659, 750445720, 758560366, 770071247, 801790166, 830420593};
    vector<string> roads = {"2,1", ",301", "1261", "56 3,2,3", "15385", "344 ", "0,1,26", "7195282 1", ",3,", "34", "69660", "71 0", ",2,2", "55220", "789 0,3,", "24154724"};
    int machineStartTime = 31628296;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 695607204;
    if(result == expected) {
        cout << "Test Case 80: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 80: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test81() {
    int N = 18;
    vector<int> sunnyStart = {271602324, 276033194, 293456099, 351031818, 382146796, 418369550, 534486721, 565271155, 579547546, 625715648, 632906040, 660368250, 733463650, 777454615, 822986373, 845422749, 854257804, 869871532, 877163024, 879907015};
    vector<int> sunnyEnd = {275269749, 286685310, 299740658, 378133527, 415705646, 506490428, 536561819, 576940287, 584259511, 627172025, 634184405, 703529012, 768074557, 806100810, 840584018, 851090514, 868430210, 871953178, 879633545, 917359988};
    vector<string> roads = {"17,16,148554153 6,13,64584148", " 0,9,117322572 8,4,68927494 1", "6,12,130744652 16,9,107758775 11,15,163525062 3,", "11,81311189 13,2,122542867 0,6,116029661", " 13,15,168285690 5,10,14162784", "9 15,16,153406366 11,2,730", "28032 5,8,107628198 5,2,113", "590500 0,16,89330038 11,1,84283459 17,8,15", "3319906 1,7,95134018 1,2,9027329", "4 8,7,129668946 5,16,118761404 15,3,1091", "10157 6,16,107460651 5,14,124302527 14,", "2,85803721 7,13,136869869 17,5,127104461", " 3,0,94671924 16,11,114722296 3,6", ",120186665 1,3,121743166 7,15,1584", "40314 2,6,102235907 10,3,121907940 1,8,", "161513284 14,1,77139542 15,12,147594688 ", "10,1,105327034 7,12,77961812 4,15,114", "485363 14,16,66862633 12,4,109428488 17,2,168253", "456 5,12,151478646 14,3,15299485", "2 10,17,124482747 12,0,120647045 1", "1,17,139677581 10,14,158356815 16,4,1251", "96819 12,6,109218007 14,6,167", "516017 11,12,163476882 17,3,116939124 1,15,", "124342860 13,16,79530644 1", "0,11,129591796 10,7,153960086 ", "14,17,152173704 1,5,102595045 9,7", ",72773306 1,6,127360896 9,4,10", "8525308 11,4,119844408 9,10,147792663 2,", "12,134191245 0,5,95570179 0,1,126288", "047 9,8,144787373 6,8,115055046 8,2,7380", "1903 8,12,106119650 3,9,119941856 ", "14,11,146546283 6,17,160190161 6,1", "1,97341932 2,7,78601558 0,8,931822", "96 4,5,112247383 10,13,69646999 12", ",10,87704315 9,12,147692247 11,5,86897124", " 2,4,76372422 15,10,86703404 0,7,15947", "3355 13,11,67741504 17,7,15681338", "6 11,0,115237496 4,14,163962835 9,17,1585", "78712 16,3,144823193 14,15,10338859", "7 7,11,134311604 1,16,166372261 ", "15,0,100665953 14,12,145782911 2,16,138", "070211 16,7,86282061 1,9,131317179 0,17", ",72917697 8,11,72230590 17,15,135366287 14,0,1", "45002604 3,2,77001762 5,6", ",78526589 4,10,10011141", "8 1,4,166775243 15,6,85980711 3,5,136704807"};
    int machineStartTime = 23564174;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 491287247;
    if(result == expected) {
        cout << "Test Case 81: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 81: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test82() {
    int N = 18;
    vector<int> sunnyStart = {33631741, 57596978, 110327686, 261358303, 288367508, 330448289, 441886398, 528220677, 652865807, 696208050};
    vector<int> sunnyEnd = {41780169, 62800823, 221520297, 264096080, 293057000, 436737393, 473514972, 583441183, 694269841, 743091828};
    vector<string> roads = {"0,4,89412932 11,2,337178548 15,13,301456643 2,", "6,161152039 14,8,160820756 10,3,118945286 1", "0,2,252359595 6,4,398980303 13,14,137292738 9", ",13,245352540 14,9,301605597 5,11,30024", "3037 0,16,234367497 1,8,371807393 14,11,333893864 ", "2,4,246957783 0,11,87740803 2,17,255441726 13,17,1", "73281712 10,17,300634916 12,6,75920205 ", "11,13,371364808 13,16,100748631 13,3,1", "54232078 12,13,77230565 16,12,61832216 7,15,", "277333140 14,15,167435365 3,1,138462239 17,15,197", "558253 15,6,366757071 5,2,315140113 10,9,1", "08991060 13,7,334147619 11,3,63671302 10,11,37", "8077399 17,9,270565877 2,0,260754815 15,10,1867", "74965 5,9,368993143 4,5,365372413 8,13,3", "62864678 3,7,173042755 3,15,142097675 4,8,36067176", "0 3,17,107492141 17,1,261480446 10,12,106971869 3", ",0,188696767 16,6,280984495 13,5,1645", "05808 2,8,83016611 6,11,306493067 15,11,1405988", "02 1,12,276606567 16,8,313156479 14,5,73079324 17", ",7,75495042 9,8,218248469 14,6,391528998 8,3", ",201859802 13,0,247923976 7,2,218961312 16,5,10330", "7521 13,1,249691578 16,10,283572254 1", "5,2,73948582 3,4,259917777 14,4,390927905 15,8,3", "26092088 16,4,389196692 1,9,238533037 0,7,27638646", "1 4,13,129337055 11,1,201300076 12,7,32", "3199204 0,15,114228167 11,12,317490212 14,12,3", "86661517 14,10,311999755 9,4,245881634 17,", "11,101651549 6,10,343439703 0,10,8888", "9970 1,6,265969483 12,15,153421634 3,5,377192499 8", ",7,82540729 5,8,379399406 12,3,3731554", "83 13,2,231067165 5,0,342796330 5,15,38", "5220672 14,16,149400309 9,11,109116942 10,8,", "209271484 17,5,246147253 6,0,61933387 16,", "7,261996290 1,10,371595731 3,16,247211093 14", ",2,393624135 17,8,164812051 2,16,1", "52764009 13,6,310515900 16,17,275576299 17,6,", "397856035 14,3,59836193 14,7,230293562 1,7,269", "123568 9,2,354770330 17,4,87632", "807 10,13,87760379 11,16,60296298 1,0,1568", "36225 16,1,128245186 6,7,385524493 15,4,593771", "42 5,1,327660940 17,0,117918526 1,2,293813", "003 12,8,203028988 5,12,289150257 0,9,80126229 9,", "3,269939790 9,15,285312029 7", ",4,314794354 14,0,276657954 17,14,261709692 ", "15,16,218641569 8,11,380141813 14,1,241096810"};
    int machineStartTime = 232574535;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 418081096;
    if(result == expected) {
        cout << "Test Case 82: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 82: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test83() {
    int N = 19;
    vector<int> sunnyStart = {102306614, 115679597, 142042958, 179035132, 218112637, 248906269, 272985026, 302100761, 319932055, 337118507, 379779145, 463911903, 469684598, 500213350, 513953596, 588585332, 657374539, 711095528};
    vector<int> sunnyEnd = {103701280, 139308850, 162116345, 216208027, 235067757, 269936124, 288221748, 313405240, 334641163, 363418032, 451314939, 467836856, 485774809, 504308504, 541018951, 644483871, 678354025, 711097179};
    vector<string> roads = {"12,8,190663055 5,8,31871002 13,9,159744529 16,9,12", "0329758 14,15,152224100 5,12,110547034 5,0,2502629", "2 9,4,162817569 1,7,202560169 14,1,70372656 12,15,", "128347355 4,11,117365596 5,13,47489581 9,8,103154", "202 18,10,209330966 15,18,31667310 17,3,51174611 ", "10,17,212431488 8,10,139782987 3,7,156221170 13,1,", "183590105 1,15,27934818 18,2,159657306 12,17,4632", "8870 2,0,70946527 4,5,161134782 11,14,96854548 10,", "6,104683228 3,15,173208046 5,18,147582318 1", "7,15,168661723 18,9,180129645 11,3,211426844 15", ",8,211282662 15,13,67551938 5,7,168181456 4,1,15", "2209734 13,14,40059735 13,2,61952834 9,1,168239", "760 14,0,116642430 15,2,85752099 2,10,95501977 10,", "11,71301408 5,10,148208706 16,7,139412668 7,15", ",182391221 11,1,206702334 10,0,79374422 16,3,187", "676709 16,18,157251911 8,1,59127753 3,12,21147", "0678 9,17,220117384 17,7,53370642 1,18,85595502 17", ",18,133546260 13,16,118711664 17,14,129368926", " 15,10,96752876 4,15,48936579 0,18,2716", "0372 18,4,185844939 2,7,76288465 14,2,", "191502744 7,12,73619098 3,1,67434723 6,14,18833", "5645 11,7,127518813 2,17,77047652 1,16,73372413 7,", "14,149992750 3,18,207804776 7,4,189382167 11,12,", "71902125 4,14,187325387 2,16,28761675 9,15,18", "6539556 14,8,161497489 4,3,177028404 ", "17,1,37714949 4,6,99668913 0,13,29128063 3,13,1790", "98648 12,10,123489206 8,3,172324284 6,15,96097103 ", "11,6,24079523 1,0,42430113 13,18,146054962 0,4,1", "89969500 7,6,188562264 17,6,4429386", "4 18,6,96818705 2,4,83377539 16,15,1365", "60006 12,18,103047633 9,7,79416365 14,9,70161133 8", ",18,192753172 13,17,134497195 16,11,35440559"};
    int machineStartTime = 24677142;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 206195504;
    if(result == expected) {
        cout << "Test Case 83: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 83: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test84() {
    int N = 7;
    vector<int> sunnyStart = {64652927, 109143455, 138368366, 175003342, 221403560, 252174749, 304432907, 307743829, 341338439, 368018377, 426358098, 442306239, 491011025, 558812058, 667246535, 692146799, 744824070, 759726210};
    vector<int> sunnyEnd = {87349310, 120974825, 171677545, 213495088, 225629589, 267016371, 306690401, 334561512, 356252288, 374594973, 429419353, 477649291, 541720023, 636704492, 690476429, 700782301, 746620170, 782621146};
    vector<string> roads = {"0,4,406736", "67 5,", "2,49042", "185 6,2,5498", "1782 4", ",3,609", "35149", " 4,2,3", "8650929", " 3,1,5857", "3629 0,2,", "6070", "8891 3", ",2,504992", "64 0,5,4669", "1371 1", ",0,399", "70607 5,1,4", "4955852 4,", "1,50741", "896 0,6,", "56147686", " 6,4", ",560912", "48 3,0,", "57622103", " 1,6,4553", "0300 2,1,49", "998597 3", ",5,3696014", "1 3,6,", "4922604", "1 6,5,496", "29801 4,", "5,40963604"};
    int machineStartTime = 15951772;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 604342358;
    if(result == expected) {
        cout << "Test Case 84: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 84: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test85() {
    int N = 19;
    vector<int> sunnyStart = {501902151};
    vector<int> sunnyEnd = {605583771};
    vector<string> roads = {"0,18,62826584 5,6,206337283 16,8,80", "436129 17,5,144338816 10,14,146351987 18,14,103719", "298 4,11,239737574 12,2,184211691 5,1,", "224747029 15,17,188049615 15,12,170731807 ", "0,12,17307370 18,15,158582001 13,18,24456785", "2 10,0,184503081 1,4,155704607 4,1", "5,213063902 7,10,184079055 0,16,170999327 1", ",18,210077749 16,18,56087924 2,8,16454152", " 2,16,213551606 14,1,249700803 16", ",10,159447569 14,7,14306629 14,4,", "106545383 1,3,144137688 7,2,59269177 16,11,2", "6263288 15,1,197415838 7,1,31059489 13,", "0,228536211 6,18,61409340 9,1,23721001", "8 3,17,30794520 5,18,14124784 7,5,190648223 8,5", ",32828511 5,16,137374347 12,7,121287", "513 8,4,39198452 18,7,147571279 8,0,1132", "39313 14,3,195156693 18,9,118152552 6,2,179", "333521 10,12,34104121 11,12,112406736 12,8,1887504", "59 15,16,55844929 18,12,174664409 ", "16,12,138269732 4,3,180755181 3,13,21201583", "0 7,13,119257001 1,13,186391262 14,0,40661452 ", "3,7,157827710 15,11,73469942 9,7,228875631 ", "2,18,152274385 7,11,204693764 2,10", ",210155433 14,5,246281335 12,6,84600773", " 11,8,184162413 13,17,148202489 3,15,18", "4803496 17,2,77966333 18,4,51698632 14,15,", "109622752 0,2,149800970 10,18,217685351 13,11,195", "056682 17,6,132758416 15,2,227147609 7,8,20929", "1575 9,16,227950724 6,0,68075908 9,8,241107507", " 14,12,222842701 16,4,22907474 1,12,18239129 9,6,", "13998099 7,4,109651402 18,17,108360558 0,11", ",214728440 9,2,185525878 8,15,35474", "625 14,9,182783973 8,1,227184251 3,18,", "17688768 11,9,238847577 6,4,1704213", "94 5,13,192042722 18,8,61603656 1,6,2216986", "90 8,14,96317164 6,13,69601858 11,14", ",46528952 7,16,165650103 11,17,3365275", "2 10,4,97951332 17,7,71351882 17,8,2018", "38821 10,9,56038607 2,14,116864257", " 3,0,156315231 3,16,147124269 ", "10,5,108858659 2,1,40738055 2,4,9109693", "6 12,3,239333106 5,0,132317227 9,5,8521", "7215 5,4,188592269 11,18,186749436 6,3,184949", "122 4,13,207023200 12,9,158501939 0,1,17859", "0351 5,11,65226111 5,3,204493370 10,13,65493572"};
    int machineStartTime = 102236681;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 564728735;
    if(result == expected) {
        cout << "Test Case 85: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 85: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test86() {
    int N = 19;
    vector<int> sunnyStart = {408488263, 431019149, 449427300, 462824610, 476246339, 488073547, 519743669, 526704408, 596245902, 619566998, 687873594, 706696248, 747704537, 781370261, 800409225, 839572832, 877807395, 922641417, 938342700, 943644738};
    vector<int> sunnyEnd = {425827505, 436997586, 450239066, 473440171, 484410573, 490985728, 519893910, 556320025, 611137614, 669203003, 702189792, 747442097, 776724284, 795704000, 800632721, 873281180, 879909362, 934812430, 942965519, 957727273};
    vector<string> roads = {"16,6,48083875 0,9,88208714 7,8,32900511 15,10,1913", "23875 16,1,158755784 15,5,213886208 2,1,33009069", " 14,10,221794554 3,17,19015847 7,5,179108986 3,8,7", "3885999 15,9,20265063 7,10,28012986 0,12,1694", "32947 5,11,171500916 2,12,167160514 0,6,14890455 7", ",12,43874164 17,5,35652116 15,3,205018710 16,17,21", "8286324 8,14,13714656 2,16,125990058 0,1,203932283", " 4,9,21105288 11,17,121683486 18,5,49280577 8,13,1", "58433465 7,15,218220183 10,13,139459362 6,10,55975", "328 14,13,77930155 8,17,90252111 16,0,169695478 13", ",7,183348533 18,6,61707191 4,18,14913824 13,12", ",12553677 7,2,146344080 9,2,13451515 15,13,2184255", "80 6,17,68686641 0,13,15885569 10,1,195069444 ", "10,17,185308688 6,7,162446714 11,12,200181715 4,14", ",118180259 12,3,101834604 1,17,57796957 11,10,1068", "8749 4,7,118795235 2,11,154490480 10,0,1444684", "97 4,6,131327469 14,7,117874899 5,12,123996082 3,2", ",107641188 14,6,198438141 5,3,177430217 1,13,9", "5282266 0,5,209764482 15,6,163495896 6,5,89", "191203 0,18,122796658 12,14,1257", "63549 1,4,171562006 8,11,48061679 10,16,70422", "116 9,5,139482389 6,9,141797229 0,11,103171569 14,", "1,210648375 12,6,43926463 11,16,190462757 18,9,150", "292779 0,17,93015038 1,9,59745787 10,5,61313194 3,", "0,109062678 13,2,70198246 12,8,68075462 5,4,209189", "561 4,8,43335695 0,15,192831473 10,8,128222220 18", ",16,119650079 0,7,195953825 2,15,181267349 8,18,", "48334535 3,16,32205363 0,8,162944924 5,1,24568150 ", "1,6,90296761 11,13,196016885 5,16,167124973 2,8,10", "9774522 4,16,132728579 9,11,8659415 15,1,194726629", " 13,9,142225739 9,10,57897539 11,7,46730341 6,3,1", "91872781 16,7,222655897 17,15,63090137 13,18,17518", "8131 15,8,225693772 12,9,17296478 13,16,169664001 ", "7,17,126013035 1,11,19300709 7,18,11012591 10,12,1", "43900754 15,16,134702781 18,11,102259109 3,13,1", "33569288 2,5,60766749 18,3,67631982 17,12,84740778"};
    int machineStartTime = 13027499;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 665002476;
    if(result == expected) {
        cout << "Test Case 86: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 86: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test87() {
    int N = 20;
    vector<int> sunnyStart = {96336638, 124993965, 137099995, 151278665, 229137729, 239763383, 258121440, 265814143, 288750542, 323276810, 358667526, 372400903, 424604234, 442590011, 607055142, 657337607, 728562154, 777521211, 824316279};
    vector<int> sunnyEnd = {112495293, 127927118, 139066722, 180576612, 237837109, 249569095, 260921980, 279386529, 295639384, 328632706, 359023857, 376552857, 431414439, 474347809, 641195256, 696128838, 747995177, 799620176, 873189549};
    vector<string> roads = {"0,10,22183312 9,17,25501", "279 3,7,50864894 13,1", "9,68704113 13,18,1947692", "0 8,18,54832894 10,13,67793", "312 18,7,25137508 14,16", ",63716564 9,10,67341", "522 19,2,6701004", "7 17,16,23234363 5,14,59081555 16", ",0,45672866 19,0,38", "087319 0,4,30712527", " 17,14,63192321 8,11,49", "294832 17,12,21584", "093 1,4,35389998 7,", "0,66874997 6,4,57", "414339 10,4,4277", "6756 14,8,56364738 4,", "11,37695807 4,9,174634", "52 16,18,26659712 1,", "13,19824447 14,7,611626", "12 0,3,16266387 17,0,", "65086197 10,5,31709488", " 10,14,19714892 18,9,436791", "04 6,1,49714401", " 19,14,67335177 8,19,1", "5339425 13,12,26596718 11", ",6,24023721 4,13,42459", "890 9,8,40225516 8,1,2174", "4440 4,18,66830690 15", ",18,33262250 15,8,311535", "34 7,11,18856067 8,16", ",64692405 2,17,1946", "6183 15,12,18788189 1,", "9,53185766 18,17,42834305", " 12,11,16137764 16,13,346405", "33 0,9,26338934 12,3", ",34356672 2,13,49646535 3,", "4,52821038 8,3,22602486"};
    int machineStartTime = 293633;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 230984580;
    if(result == expected) {
        cout << "Test Case 87: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 87: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test88() {
    int N = 18;
    vector<int> sunnyStart = {272701727, 282935309, 333268919, 348573067, 367287437, 407650007, 432443558, 443975235, 464360120, 494347544, 526396591, 557006294, 615987640, 620438111, 632439570, 658286734, 678433833, 778077973, 828951340};
    vector<int> sunnyEnd = {278013757, 330812316, 342005356, 352776572, 390497449, 416231131, 436895696, 457630489, 465153781, 511138335, 527984507, 601560806, 619218846, 627148018, 657792844, 660793919, 707854554, 788741975, 834822625};
    vector<string> roads = {"0,5,54210007 15,11,70388", "523 5,6,43994179 0,15,34243948 0,1,359096", "84 17,12,72002575 13,11,43269051 13,", "0,23294544 10,8,70454879 7,8,268712", "20 9,2,73345592 6,9,32824093 9,16,32", "192686 11,16,47341130 11,10", ",22727204 5,10,43501628 11,17,2840208", "3 2,15,65215024 5,17,59046416 ", "2,13,47043632 11,0,43540150 0,", "2,36540340 13,14,22330405 14,16", ",26149352 0,14,42247401 12,0,199", "36245 5,4,37633478 15,5,21952281 2,8,45939182", " 17,7,44948329 3,8,33101135 8,", "11,40306697 4,3,44151023 17,2,233719", "95 0,9,61277360 5,14,74549501 11,14,319666", "08 12,11,60296337 6,8,70842847 1", "2,3,71720603 7,4,63060934 13,", "8,56847065 15,14,49837678", " 7,0,69428480 9,3,30003300 17,13,54", "179131 12,6,34012303 14", ",17,22294237 12,15,47191417 10,17", ",60529905 1,15,24080642 2,10,40663913 14", ",3,25276692 16,7,62974242 9,1", "4,74459192 2,11,24011260 1,12,", "69775422 15,7,27022811 12,8,49", "530285 1,3,66606630 12,2,41446", "055 16,12,59481471 13,12,664326", "14 17,9,69611288 5,7,33413973 1,8,2", "3233307 10,15,51855322 6,1", "3,16928747 10,7,19883364 7,2,55", "713615 17,16,19419619 5,11,42270572 1", "6,8,76495558 5,12,34955072 12,14,742", "74589 10,14,20908887 15,16,58968735 ", "3,16,63134123 14,1,68208431 2,5,338", "11282 6,1,62701786 2,16", ",25086049 1,11,70007675 8,0,19781699"};
    int machineStartTime = 53513280;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 389581674;
    if(result == expected) {
        cout << "Test Case 88: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 88: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test89() {
    int N = 20;
    vector<int> sunnyStart = {128431832, 238557926, 275213010, 371498480, 439455830, 486879975};
    vector<int> sunnyEnd = {209632074, 251271454, 370086577, 396078829, 469532766, 491941254};
    vector<string> roads = {"0,3,527569854 5,16,359612374 14,1,321245368 14,18,", "455994036 18,10,48220703 19,0,40921976 2,3,521", "729730 9,0,457751324 15,10,45109464 12,14,2", "78499078 19,15,61011646 9,11,352320179 17,13,31128", "3339 14,6,95819046 6,7,331285362 1,5,16530", "9396 2,15,95636953 7,4,52463421 16,0,439", "887388 11,12,115976273 2,17,526960078", " 3,13,46418453 6,2,458345960 9,10,20765838", "0 17,5,122145281 1,15,457733629 16,17,172534947", " 15,11,584034568 2,14,410275588 ", "6,19,54676379 18,11,340926389 12,5,72495680 8,4,41", "1271004 17,19,382253002 6,9,560606544 1,7,239", "547408 6,8,304997871 11,14,171849890", " 19,14,490578708 3,15,516224250 2,4,34", "2916835 10,5,355605679 1,18,81553154 8,18,55", "3015530 12,6,364771608 4,6,204720470 10,1", "7,198235025 5,11,214055443 0,13,268923962 13,", "11,482091982 11,4,57042638 13,7,484", "492504 0,4,95273150 6,10,373041817 7,11,19947", "1543 2,9,165509988 17,4,283538573 1", "6,2,121082117 14,13,381671835 0,6,168589399 1", "8,5,48439066 13,5,187400156 16,3,76896777 7,18", ",70447295 17,3,253163865 7,15,379362915 4,3", ",145281039 3,7,330370486 15,0,6580645", "5 8,15,480548261 4,19,268154522 ", "7,16,542351807 17,18,434451939 15,", "5,570826198 1,8,34730524 10,2,500768575 12,0,10320", "9487 14,0,469183806 15,6,49940485 14,4,1730", "72763 8,0,228479364 19,10,380451138 4,9,305534327 ", "17,8,534335588 12,4,164767279 14,7,1657925", "67 3,14,345967656 8,7,378207528 9,16,551511", "330 10,16,254441135 10,14,193742726 19,9,4848", "32221 12,9,318071354 2,0,150758330 18,6,", "42886502 9,7,74383294 1,10,146985747 12,19,32029", "9219 6,1,284883061 11,19,2498426", "56 6,17,28021110 12,2,250980356 18,4,266463590 10", ",4,232061367 19,13,278245216 3,12,80824", "800 1,16,374693363 1,9,62984213 10,", "3,45126792 14,15,438666694 15,18,439750940 1", "2,16,344072572 1,2,169577639 1,19,85128347", " 16,13,384711159 1,0,91033771", " 17,11,305159778 7,12,194487811 16,15,", "355274321 8,19,369721278 4,16,330383467"};
    int machineStartTime = 522951828;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 169353808;
    if(result == expected) {
        cout << "Test Case 89: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 89: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test90() {
    int N = 20;
    vector<int> sunnyStart = {212015783, 331930196, 416178301, 728756874};
    vector<int> sunnyEnd = {262339478, 362014003, 649035214, 831829859};
    vector<string> roads = {"0,19,39251082", "6 14,5,325139763 12,4,", "126437104 18,10,287", "528184 3,13,1832967", "44 1,10", ",215886858 11,16,", "316716291 7,5,4", "14263978 3,10,41482361", "0 5,12,393876213", " 1,0,393042213", " 2,12,284548", "995 4,16,128356659 1,7", ",254565344 19,3,222677", "256 12,16,1", "66209968 7,17", ",165594533 4,2,222", "001807 2,18,", "204859565 0", ",5,245139889 2,", "8,418443599 10,13,13607", "6968 14,17,166", "285556 4,3,1", "52639775 10,5,34", "4568767 9,0,168", "746076 18,1", "7,399666890 15,10,14", "3712537 9,13", ",407209574 14,11", ",189585752 18,9", ",306751312 2,6,32029", "2448 5,15,368741949", " 15,4,402085226", " 5,17,212555657 1", "1,15,324120825 6,5,36947", "3642 13,0,188075", "633 9,17,425501583"};
    int machineStartTime = 279302359;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 1930025372;
    if(result == expected) {
        cout << "Test Case 90: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 90: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test91() {
    int N = 7;
    vector<int> sunnyStart = {446072566, 450558799, 468282050, 561238689, 593328265, 595538125, 621449386, 636385429, 643739596, 653084658, 727894723, 757671603, 782674607, 794184828, 825467801, 848926045, 909177574, 924193899, 924774878, 963685590};
    vector<int> sunnyEnd = {448769431, 464893272, 543801498, 584781869, 594085469, 596882959, 631408055, 639386525, 649538051, 665135437, 746566888, 760714005, 788013219, 805436871, 844030758, 875454975, 920124753, 924699790, 936565111, 965012030};
    vector<string> roads = {"2,0,259255614 6,1,213380458 2,1,239228394 5,3,2583", "89840 6,4,35475478 2,5,37306691 5,6,135876994 3,6,", "132586946 5,0,77571847 5,4,257922071 1,4,1", "30801584 2,6,298945039 1,0,22718660 4,3,237009978 ", "4,0,58081290 1,5,116501287 0,6,64944206 1,3,", "197701731 0,3,35340544 2,3,147063619 2,4,101053888"};
    int machineStartTime = 48051257;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 533226256;
    if(result == expected) {
        cout << "Test Case 91: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 91: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test92() {
    int N = 16;
    vector<int> sunnyStart = {301006172, 322438174, 354060039, 356851462, 393432288, 429066496, 479602337, 480010432, 529744796, 576567590, 601995824, 608542809, 666342871, 692774341, 710726957, 738583219, 760568478, 792234588, 822498060, 860832786};
    vector<int> sunnyEnd = {317734626, 322720418, 355455848, 392677229, 421755212, 461242834, 479961556, 516118127, 553136592, 584035015, 604591793, 621176215, 690576462, 698572120, 727491269, 755921543, 769304155, 801367951, 833227267, 864686725};
    vector<string> roads = {"13,8,122284562 10,15,124667500 1,10,120414", "275 9,4,181218021 3,5,174260488 1,4,53", "668408 10,5,179228226 12,5,69170551 14,1", "1,149119746 8,7,145328154 7,15,79992007 ", "10,8,69405672 0,9,79909283 3,15,18259374", "3 9,15,152003430 4,0,92952644 11,15,157999167 15,5", ",51277921 13,1,160807029 13,15,31673455 3,8", ",174179726 15,14,142865507 1,8,103586", "213 5,4,122628797 2,8,193103515 9,1,5594952", "2 12,8,92998871 10,13,68075004 8,11,183285957 ", "13,2,174505775 0,7,45653564 14,5,508889", "32 0,11,169118587 4,3,60427871 14,2,135528215 5,", "7,66728079 12,11,186868203 5,11,187218892 1,2,1110", "75361 3,7,205335112 3,11,142557723 6,10,7980090", "4 13,0,92686492 1,7,146965724 3,14,202122590 0,", "12,171001071 5,13,114673305 9,2,196125269 7,2,1306", "77602 9,6,75105048 0,1,31852998 9,3,42648662 15,12", ",199345670 3,6,140937507 0,8,11694", "4480 5,2,201528905 0,2,202200709 0,", "5,53259433 2,6,43628589 7,4,191626904 13,6,1961487", "4 3,12,94190304 7,13,205048621 12,1", "0,160477392 11,13,55480353 12,2,112855644 0,3,", "158390903 7,6,46860489 11,4,97252660", " 5,9,148691290 12,1,31654863 15,1,55", "661034 8,14,172979115 2,10,184823460 12,9,24114", "707 15,2,63404948 9,7,62881420 8,9,142319996 11,1,", "68564640 4,6,80225894 10,14,168350826 6,8,1412", "39095 2,11,57144816 12,14,110390841 7,10,9598", "1263 9,11,97320743 6,1,15987282 9,10,13049730", "0 1,5,56412374 14,13,145931801 14,6,7296", "3428 7,14,153291113 4,12,79377991 3,1,140011650 ", "15,0,48083542 14,0,161609163 9,14,71", "863921 4,8,41138028 0,10,218298", "68 7,11,27728743 12,7,92619459 11,10,113229192 4,1", "0,181726317 8,15,17269264 13,3,101542668 6,11,1267", "39422 13,4,34928521 6,12,100532953 15,4,23525262 3", ",10,94698623 13,12,126122696 13,9,86930384 1", "4,4,182769418 2,4,207120473 2,3,146742470", " 6,0,154055823 14,1,170163370 6,1", "5,107889912 8,5,84806773 5,6,156717197"};
    int machineStartTime = 18757803;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 494056218;
    if(result == expected) {
        cout << "Test Case 92: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 92: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test93() {
    int N = 20;
    vector<int> sunnyStart = {0, 8, 10, 19, 39, 50, 65, 79, 97, 102, 999999895, 999999906, 999999919, 999999932, 999999936, 999999953, 999999958, 999999973, 999999986, 999999993};
    vector<int> sunnyEnd = {3, 9, 16, 37, 48, 53, 68, 91, 99, 999999890, 999999896, 999999907, 999999920, 999999933, 999999937, 999999954, 999999959, 999999974, 999999987, 999999994};
    vector<string> roads = {"0,1,1930", "04201 ", "4,7,1", "78549032", " 11,6,5", "975", "52937 ", "7,5,71", "8637951", " 12,13,4126", "81229 17,", "14,396836", "08", "2 1,1", "4,207", "09221", "3 19", ",8,9", "54239688 14", ",15,3", "49556138 17", ",18,9329230", "81 ", "5,8,8471647", "38 ", "10,7,26872442", "1 12,3,", "4388013", "71 2,", "1,919418927", " 6,0,8", "87738579", " 7,12,889", "3", "04247 10,11", ",7648292", "94"};
    int machineStartTime = 376372440;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 10959637730;
    if(result == expected) {
        cout << "Test Case 93: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 93: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test94() {
    int N = 20;
    vector<int> sunnyStart = {11, 18, 32, 45, 54, 70, 77, 89, 95, 102, 999999898, 999999908, 999999918, 999999933, 999999942, 999999959, 999999961, 999999970, 999999979, 999999985};
    vector<int> sunnyEnd = {15, 21, 38, 52, 67, 73, 84, 94, 96, 999999890, 999999899, 999999909, 999999919, 999999934, 999999943, 999999960, 999999962, 999999971, 999999980, 999999986};
    vector<string> roads = {"10,4,437474263 16,19,282368526 ", "4,19,840377061 6,14,424", "342858 0,12,547957117 2,19,", "484149162 10,12,814608363", " 0,10,222976892 15,17,78506", "2647 10,9,294408110 1,19", ",105858599 5,9,812223244 9,7,2", "04462979 15,1,556495772 9,18,126096548 2,1,1", "30891131 11,10,933553490 7,0,193934008 1", "5,10,818554450 16,17,40233826", "1 18,6,700791001 11,13,8292", "86773 9,2,482917926 1,13,739729100 18,1,", "561179119 8,2,981663289 18,15,227897480 ", "1,9,720664523 4,2,702400092 9,8,88412014", "8 12,14,652820152 6,8,956495542 5,2,78205987", "5 5,16,220211799 6,4,473565640 14,4,", "708736261 3,18,976190875 2,17,2379346", "51 2,0,797445241 1,4,717564441 10", ",5,795970003 14,19,309830273 18", ",17,146778383 13,5,428251818 6,1", "5,354534473 13,8,48255113 11,16,35", "226390 3,1,319022833 4,13,8380444", "21 18,4,704210382 12,2,406688", "18 18,8,543050886 5,11,532451305 19", ",3,599955709 6,10,876823504 7,15,2675", "24070 4,15,751378598 5,19,827515", "906 3,15,678220696 19,6,956197301 16,9", ",151393547 0,1,983551530 7,3,", "656174879 8,10,506656605 17,13,69417", "176 2,15,201104228 14,1,659708", "311 7,17,912453129 17,8", ",989286017 18,10,904301729 4,8,404194752 1", "5,16,222882048 19,17,36", "054395 3,13,31563113 5,12,566646780 17", ",12,932635101 13,16,238699917 7", ",6,851727575 0,4,968238874 3,17,8393", "23470 3,2,822712360 13,0,35009", "9035 13,14,452653096 11", ",14,761018541 3,0,1911393 13,12,9408", "41057 16,14,505958394 13,10,301350954 ", "9,17,283311509 5,18,241980651 2,18", ",444335871 14,15,603168159 11,3,890600829 11,15,", "220631787 11,9,568883986 1,11", ",635055867 7,8,298142347 14,8,860954169 12", ",11,222771290 4,17,23901375 19,0,406730992 8,12,", "875104090 15,0,492483486 13,7,", "261044847 11,0,325887090 12,6,57140789", "9 16,18,357397401 17,11,29047659 ", "8,16,95502806 19,7,130829915 8,0,90857788", "6 14,5,991486418 15,5,41785556"};
    int machineStartTime = 804680460;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 138946179;
    if(result == expected) {
        cout << "Test Case 94: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 94: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test95() {
    int N = 20;
    vector<int> sunnyStart = {19524678, 86912772, 130114148, 196009385, 234761830, 256396050, 350263508, 363564964, 386968604, 430077951, 453876999, 480958777, 565830945, 628067955, 700036198, 736867519, 793860665, 806184985, 890068416, 921486342};
    vector<int> sunnyEnd = {19524679, 86912773, 130114149, 196009386, 234761831, 256396051, 350263509, 363564965, 386968605, 430077952, 453877000, 480958778, 565830946, 628067956, 700036199, 736867520, 793860666, 806184986, 890068417, 921486343};
    vector<string> roads = {"16,6,1 14,", "8,1 17", ",2,1 2,0,", "1 7,1", "8,1 10,9,1", " 19,3,", "1 14,7,1 ", "9,4,1 ", "15,11", ",1 4,5", ",1 15,1", "3,1 1,5,1 12,1", "3,1 1", "0,17,1 1", "6,11", ",1 8,1,1", " 6,18,", "1 12,3,1"};
    int machineStartTime = 249190062;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 890068417;
    if(result == expected) {
        cout << "Test Case 95: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 95: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test96() {
    int N = 20;
    vector<int> sunnyStart = {999999999};
    vector<int> sunnyEnd = {1000000000};
    vector<string> roads = {"19,0,1"};
    int machineStartTime = 1;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 1000000000;
    if(result == expected) {
        cout << "Test Case 96: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 96: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test97() {
    int N = 20;
    vector<int> sunnyStart = {999999999};
    vector<int> sunnyEnd = {1000000000};
    vector<string> roads = {"1", "9", ",", "0", ",1"};
    int machineStartTime = 1000000000;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 1000000000;
    if(result == expected) {
        cout << "Test Case 97: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 97: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test98() {
    int N = 20;
    vector<int> sunnyStart = {0, 999999999};
    vector<int> sunnyEnd = {1, 1000000000};
    vector<string> roads = {"1", "9,10", ",1 1", "0", ",0,1"};
    int machineStartTime = 1;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 4;
    if(result == expected) {
        cout << "Test Case 98: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 98: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test99() {
    int N = 20;
    vector<int> sunnyStart = {0, 999999999};
    vector<int> sunnyEnd = {1, 1000000000};
    vector<string> roads = {"1", "0,", "0", ",", "1", " 19", ",", "10", ",1"};
    int machineStartTime = 1000000000;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 1000000000;
    if(result == expected) {
        cout << "Test Case 99: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 99: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test100() {
    int N = 20;
    vector<int> sunnyStart = {999999999};
    vector<int> sunnyEnd = {1000000000};
    vector<string> roads = {"7,", "13,", "1 ", "12,", "10", ",1 5,1", "1", ",1", " 13,8", ",", "1 3", ",12", ",", "1 0", ",14", ",1 ", "15,6", ",1 1", ",16", ",1", " 11,4", ",1 ", "5,", "17,1 7", ",18", ",", "1 ", "17", ",1", ",1 ", "3,4", ",1 ", "14", ",", "8,1", " 15,16", ",", "1 2,1", "0,1", " ", "18", ",", "9,", "1 ", "6,1", "9", ",1 ", "9", ",2,", "1"};
    int machineStartTime = 1000000000;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 19000000036;
    if(result == expected) {
        cout << "Test Case 100: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 100: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test101() {
    int N = 20;
    vector<int> sunnyStart = {0, 999999999};
    vector<int> sunnyEnd = {1, 1000000000};
    vector<string> roads = {"19,", "6,1", " 9,1", "8,1 ", "13", ",7,", "1", " ", "1", "7,5", ",1", " 12", ",10,1", " 15", ",16,1", " 4,", "11,1 ", "5,11,", "1 1,16,", "1 3,", "4,", "1 ", "18,7,", "1 2,9", ",1 15", ",6,1 ", "14,8,1", " 8,13", ",1 1,", "17", ",1", " ", "10,", "2", ",1 0", ",", "14,1 3", ",12", ",1"};
    int machineStartTime = 1000000000;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 18000000034;
    if(result == expected) {
        cout << "Test Case 101: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 101: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test102() {
    int N = 20;
    vector<int> sunnyStart = {34919714, 108535968, 187103018, 206069371, 242729478, 341440555, 394877971, 456095977, 465005062, 610095389, 649243554, 686025890, 694417086, 721202884, 734100455, 794649278, 813088756, 826656198, 875226568, 915320150};
    vector<int> sunnyEnd = {105278060, 129669509, 195545120, 222787136, 293684553, 359556641, 404778212, 459500394, 538206866, 613201669, 663595413, 688693661, 706984502, 726492267, 793264921, 802315890, 814989380, 875029560, 902529622, 921218092};
    vector<string> roads = {"16,1,2357245 15,5,9235060 0,15,38", "71986 7,19,8303670 14,16,7647097", " 8,6,3226461 13,4,4114287 12,3,6248", "270 2,11,3918873 9,5,5941472 10,18,32", "61270 14,2,6276030 10,1,85", "37427 17,18,2982374 4,8,773972", "1 9,6,7265846 3,17,6275951 7,13", ",6358897 4,11,148606 13,12,5956524"};
    int machineStartTime = 32945794;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 90977114;
    if(result == expected) {
        cout << "Test Case 102: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 102: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test103() {
    int N = 20;
    vector<int> sunnyStart = {3, 9, 12, 22, 30, 57, 64, 69, 85, 102, 999999892, 999999910, 999999914, 999999927, 999999937, 999999955, 999999968, 999999978, 999999981, 999999999};
    vector<int> sunnyEnd = {4, 10, 18, 27, 34, 62, 65, 70, 86, 999999890, 999999893, 999999911, 999999915, 999999928, 999999938, 999999956, 999999969, 999999979, 999999982, 1000000000};
    vector<string> roads = {"1,10", ",85", "37427 ", "3,12", ",6248270 7", ",13,63", "58897 18", ",17", ",2982374 4,8", ",773972", "1 12,13,59", "56524 ", "16,14,7", "6470", "97 6,8,322646", "1 0", ",15,3871", "986 13,4", ",4114287", " 9,6,726", "5846 ", "11,2,39", "18873 ", "3,17,6", "275951 18,", "10,", "3261270 ", "4,11,1486", "06 15,5,", "92350", "60 16,1", ",2357245 9", ",5,59", "41472 ", "14,2", ",627603", "0 7,19", ",8303670"};
    int machineStartTime = 811570307;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 56057502;
    if(result == expected) {
        cout << "Test Case 103: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 103: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test104() {
    int N = 20;
    vector<int> sunnyStart = {13298961, 62188401, 74962323, 110221936, 313853811, 360308793, 418321708, 443854706, 486467652, 495039028, 581126748, 630206695, 630702354, 643191488, 658442861, 674397644, 686667895, 717513467, 831967099, 885229534};
    vector<int> sunnyEnd = {46454982, 73389136, 79769055, 171568833, 349446000, 408874586, 426790060, 486440589, 490012370, 506297161, 622781722, 630647621, 636080683, 643315148, 663628277, 674949459, 715171329, 768664796, 859402717, 908916679};
    vector<string> roads = {"16,13,5259867 5,4,8019259 10,0,8919912 15,", "2,9608000 12,11,8492582 17,8,6052", "110 8,18,2846982 14,17,20335917 6,4,5373433 6", ",9,8880206 3,12,4970338 6,1,22025965 ", "14,7,7120664 18,11,1812621 2,10,760", "838 14,1,9616399 1,16,7507932 3,19,2381922 ", "9,15,9319346 17,13,6828720 5,7,5275551"};
    int machineStartTime = 38857408;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 224090525;
    if(result == expected) {
        cout << "Test Case 104: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 104: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test105() {
    int N = 20;
    vector<int> sunnyStart = {0, 4, 8, 52, 60, 68, 84, 90, 96, 102, 999999898, 999999914, 999999921, 999999925, 999999942, 999999957, 999999967, 999999972, 999999988, 999999992};
    vector<int> sunnyEnd = {1, 7, 51, 54, 62, 70, 85, 91, 97, 999999890, 999999899, 999999915, 999999922, 999999926, 999999943, 999999958, 999999968, 999999973, 999999989, 999999993};
    vector<string> roads = {"17,14,20335917 9,6,8880206 15,9,9319346 17,8,60", "52110 14,1,9616399 2,15,9608000 18,11,181", "2621 14,7,7120664 16,13,5259867 2,10,760838 6,", "1,22025965 7,5,5275551 4,6,5373433 3,19,2381922 17", ",13,6828720 12,11,8492582 5,4,8019259 0,10,", "8919912 12,3,4970338 18,8,2846982 16,1,7507932"};
    int machineStartTime = 341265787;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 105667443;
    if(result == expected) {
        cout << "Test Case 105: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 105: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test106() {
    int N = 20;
    vector<int> sunnyStart = {86012387, 117891480, 137640455, 194268748, 201573401, 205597323, 213072498, 272988031, 290629787, 330738900, 364283004, 396203612, 480408444, 496781170, 531729450, 551050749, 567847675, 601942494, 641298214, 756758660};
    vector<int> sunnyEnd = {87439232, 125141578, 184667765, 196707209, 201934864, 210645803, 250560566, 283545209, 322308219, 362784974, 379233888, 401436688, 487336995, 519539427, 543892363, 564264621, 596451617, 601942495, 728909591, 758988585};
    vector<string> roads = {"8,6,112", "66534 0,1", ",3219155 18,14,5248", "107 12,", "2,75266570", " 8,1", "5,17571", "44 11,5", ",3289", "542 16,6", ",9106771", " 7,5,334731", "0 4,6,81", "96422 18,13,4", "374798 18,9,4845107", "7 2,9,357836", "9 12,17,2", "67157", "1 10,7,9864", "289 17,", "11,392579", "1 3,4,42288", "20 12,", "16,95504", "53 13,", "3,2084258 8,", "11,2942829 10,8", ",5630837", " 0,16,8", "36160 9,", "1,183", "6598 2,15,", "2814456 19", ",14,6292503"};
    int machineStartTime = 76370130;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 177172134;
    if(result == expected) {
        cout << "Test Case 106: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 106: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test107() {
    int N = 20;
    vector<int> sunnyStart = {11, 42, 48, 50, 61, 69, 71, 83, 98, 102, 999999904, 999999911, 999999914, 999999921, 999999940, 999999943, 999999952, 999999963, 999999980, 999999988};
    vector<int> sunnyEnd = {26, 43, 49, 52, 65, 70, 80, 86, 101, 999999890, 999999905, 999999912, 999999915, 999999922, 999999941, 999999944, 999999953, 999999964, 999999981, 999999989};
    vector<string> roads = {"4,6,8196422 17,11,3925791 18,13,4", "374798 2,9,3578369 10,8,5630837 2,1", "2,75266570 12,17,2671571 1,9,1", "836598 11,8,2942829 0,16,836160 8,15,", "1757144 5,11,3289542 3,4,4228820 7,5,3347310 6,1", "6,9106771 12,16,9550453 13,3,20", "84258 9,18,48451077 1,0,32", "19155 18,14,5248107 2,15,2814456 7,10,98", "64289 6,8,11266534 19,14,6292503"};
    int machineStartTime = 622106274;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 40367941;
    if(result == expected) {
        cout << "Test Case 107: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 107: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test108() {
    int N = 20;
    vector<int> sunnyStart = {6443362, 13482382, 27479850, 28274591, 46817677, 55370575, 64429758, 73109713, 88846339, 97196165, 113022844, 132184358, 144101103, 155262209, 182546695, 218376790, 221585441, 232318947, 257064863, 286319813};
    vector<int> sunnyEnd = {8552899, 13551001, 27585383, 38445593, 53604303, 61830489, 68921575, 84994969, 95816195, 111869270, 124406865, 136408615, 146673589, 157108931, 200245432, 218733629, 222704584, 246852043, 267402569, 310403828};
    vector<string> roads = {"14,9,54892", "02 15,6,23", "393430 5,1", "4,33270345", " 17,10,59", "19243 1", "8,0,917825", "6 12,19,487", "9555 5", ",8,755673", "4 10,7,50", "73276 14", ",16,16521948 9,", "8,", "87950", "30 1,2", ",593847", "5 2,4,901", "6712 18", ",16,", "4306808 8", ",13,7607", "494 7", ",15,48", "90591 9,", "10,101039", "8 16,5,75", "98191 11,", "9,785400 6,", "1,", "9615486 1", "1,3,2939673", "6 19,8,42", "74182 10,15", ",6229360", " 19,14,219929", "55 14,13", ",7510105 1", "9,18,", "5178", "951 ", "4,11,4155", "518 6,", "3,27749 15,3", ",7450944 12,1", "7,622608"};
    int machineStartTime = 80193988;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 51996628;
    if(result == expected) {
        cout << "Test Case 108: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 108: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test109() {
    int N = 20;
    vector<int> sunnyStart = {9, 18, 23, 37, 46, 63, 73, 80, 86, 102, 999999891, 999999908, 999999931, 999999937, 999999944, 999999964, 999999971, 999999978, 999999985, 999999992};
    vector<int> sunnyEnd = {15, 20, 31, 40, 51, 71, 76, 84, 94, 999999890, 999999892, 999999909, 999999932, 999999938, 999999945, 999999965, 999999972, 999999979, 999999986, 999999993};
    vector<string> roads = {"14,16,165219", "48 9,10,10", "10398 ", "10,7,5073276 6", ",1,961548", "6 7,1", "5,4890", "591 4,2,901", "6712 14", ",9,548920", "2 17,12,6", "22608 10,17", ",5919243", " 4,11,41", "55518 18,", "16,4306", "808 8,", "9,8795030 5,", "14,33270345 5", ",8,7556", "734 ", "1,2,593", "8475 3,6,2", "7749 1", "5,3,7450", "944 8,13,760", "7494 19", ",12,487955", "5 6,15,23", "39343", "0 16,5,75981", "91 0,18,917", "8256 1", "9,14,", "219929", "55 11,9,7", "85400 10,15,", "6229360 3,", "11,2939673", "6 18,19", ",5178951 8,", "19,42741", "82 14,1", "3,7510", "105"};
    int machineStartTime = 767641146;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 14357309;
    if(result == expected) {
        cout << "Test Case 109: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 109: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test110() {
    int N = 20;
    vector<int> sunnyStart = {6347045, 38283421, 67205024, 140277167, 155833533, 183123594, 188361135, 232771194, 241021489, 327357064, 340237211, 360966416, 380845449, 403612850, 411999005, 436573818, 463118003, 473270668, 499195228, 502595028};
    vector<int> sunnyEnd = {34607342, 57969007, 110817179, 143807340, 159487615, 188080216, 203963795, 234806172, 284685274, 332043028, 358787689, 361210719, 381605641, 408944248, 436433818, 447033908, 463131591, 482032192, 501243583, 512804805};
    vector<string> roads = {"16,5,2967515 3,12", ",23859180 7,6,38", "26203 12,16,828234", "1 5,8,166178", "85 9,19,770650 1,", "15,103650092 9,3,", "1881774 18,5,4350", "2277 1,13,7581033 6", ",2,8793223 2,18,990", "1750 5,1,2973", "317 7,17,60", "247910 2,0,4793", "434 12,7,176621", "50 6,1,28722", "180 14,9,43106", "070 17,13,19", "70461 1,9,54918560 17", ",3,3462321 10,0,392744", "2 11,17,54862968 8,4,2", "726560 16,1,148153530 14", ",1,107788330 18,11,", "9989356 12,14,98", "96124 2,12,92", "909120 11,16,34532925", " 7,9,5989584 11,10", ",8897085 15,13,119", "56228 15,4,678", "9104 15,7,157226", "2 15,18,26620590 8,", "14,5751151 13,8", ",47174635 1", "5,9,7213206"};
    int machineStartTime = 91823094;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 30520139;
    if(result == expected) {
        cout << "Test Case 110: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 110: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test111() {
    int N = 20;
    vector<int> sunnyStart = {2, 4, 8, 15, 24, 43, 55, 67, 88, 102, 999999894, 999999905, 999999920, 999999922, 999999936, 999999954, 999999965, 999999972, 999999976, 999999985};
    vector<int> sunnyEnd = {3, 5, 11, 16, 30, 44, 60, 86, 92, 999999890, 999999895, 999999906, 999999921, 999999923, 999999937, 999999955, 999999966, 999999973, 999999977, 999999986};
    vector<string> roads = {"10,11,889708", "5 8,14,5751151", " 17,7,60247910 15,", "18,26620590", " 5,18,43502277 ", "9,1,5491856", "0 16,5,29", "67515 9", ",7,59895", "84 16", ",12,8282", "341 6,7,382620", "3 5,8,16", "617885 1,6,2", "872218", "0 3,12,238", "59180 9,15,7", "213206 6", ",2,8793223 1,15,10", "3650092 1,13,7", "581033 7,15,15", "72262 14,1,107788330", " 12,2,92909", "120 11,18", ",9989356 8,13,", "47174635 4,8,2", "726560 18,2,9", "901750 2,0,", "4793434 12,", "7,176", "62150 17,13,1970", "461 9,19,7706", "50 16,11,", "34532925 3,", "9,1881774 11,", "17,5486296", "8 12,14,98961", "24 9,14,43106", "070 0,10,392", "7442 13,15,1195622", "8 16,1,1481535", "30 1,5,297", "3317 3,17,", "3462321 4", ",15,6789104"};
    int machineStartTime = 940121541;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 24173196;
    if(result == expected) {
        cout << "Test Case 111: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 111: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test112() {
    int N = 20;
    vector<int> sunnyStart = {3930983, 29442474, 36203435, 42679636, 57389278, 73162371, 85601624, 90925116, 97593493, 97880106, 98987499, 115344402, 116966649, 119547781, 124829624, 125151554, 128004749, 131299157, 140386278, 148239042};
    vector<int> sunnyEnd = {4633129, 34240043, 39287902, 55015596, 71225082, 82503468, 87289950, 92782129, 97706642, 98424045, 100134989, 115703029, 118306694, 123658879, 124862374, 127074719, 130164394, 138361796, 144258595, 149252645};
    vector<string> roads = {"5,4,516355 2,17,146091345 5,19,2517093", "6 13,5,20297096 8,3,28388845", " 4,16,31238388 5,8,241112", "52 1,15,60226096 1,11,76834010", " 4,14,49020060 0,15,1110920", "25 4,17,61836515 10,1,2380059 1", "0,11,7387277 10,12,7661000 11,16,343139", "35 3,7,36326020 9,2,19530112 13,11,3", "870366 5,10,37829165 17,7,181", "55980 7,4,3990101 9,16,1639666 1,7,701231 2", ",18,7027139 13,1,88382556 0,", "4,29633284 19,3,6345864 2,4,6753", "527 5,18,98600190 16,5,109034", "937 1,8,67667936 8,13,22650260", " 13,19,32133186 9,19,4", "5879390 3,15,5429833 17,6,4846771 6,5,6", "080425 4,18,41327076 16,0,1342436", "00 17,16,3381932 12,4,19331360 ", "7,12,4832770 17,1,91011120 9,5,1", "953311 19,11,5600840 17,15,1694366", "6 18,0,132637032 13,6,17660902 8,", "12,31036452 3,14,58626172 15,12,", "8128986 1,5,6610661 6,8,28032", "57 6,19,43222634 16,18,13608", "82 15,8,4752930 5,3,9569524 12,2,292", "13290 8,14,8249412 15,1", "1,4169346 9,0,7308317 13,18,", "1911440 19,12,31806110 4,", "3,7531983 16,10,413084 11,6,38374", "685 14,13,4053486 12,18,7148110"};
    int machineStartTime = 7860166;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 66860484;
    if(result == expected) {
        cout << "Test Case 112: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 112: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test113() {
    int N = 20;
    vector<int> sunnyStart = {4, 21, 30, 42, 61, 75, 83, 88, 92, 102, 999999892, 999999906, 999999912, 999999919, 999999929, 999999952, 999999960, 999999969, 999999985, 999999990};
    vector<int> sunnyEnd = {17, 25, 41, 46, 71, 80, 86, 91, 97, 999999890, 999999893, 999999907, 999999913, 999999920, 999999930, 999999953, 999999961, 999999970, 999999986, 999999991};
    vector<string> roads = {"1,11,76834010 15,0,111092025 5,3,9", "569524 8,14,8249412 6,5,608042", "5 6,11,38374685 15,8,4752930 ", "16,4,31238388 12,10,7661000 11,16,3431", "3935 7,3,36326020 17,7,18155980 ", "5,4,516355 2,18,7027139 4,3,7531983 ", "2,9,19530112 7,12,4832770 15,12,812", "8986 4,17,61836515 10,16,4130", "84 9,0,7308317 10,5,37829165 13,19,32133", "186 0,4,29633284 12,8,31036452", " 19,12,31806110 8,13,22650260 19,", "6,43222634 18,4,41327076 19,3,6", "345864 12,2,29213290 16,18,1360882 6,", "8,2803257 4,2,6753527 11,15,4169346 12,", "4,19331360 4,7,3990101 11,19,5600840 1", "9,9,45879390 9,5,1953311 11,13,3870", "366 1,10,2380059 13,5,20297096 4,14,", "49020060 16,17,3381932 0,18,13263", "7032 17,6,4846771 5,19,25170936 8", ",3,28388845 1,7,701231 14,3,5862", "6172 5,8,24111252 0,16,134243600 9,", "16,1639666 1,8,67667936 18,5,98600190 13,6,176", "60902 5,1,6610661 12,18,7148110 15,1,6022609", "6 10,11,7387277 15,3,5429833 13,1,88382556 17,1", ",91011120 13,18,1911440 16,5,109034937 2,17", ",146091345 17,15,16943666 13,14,4053486"};
    int machineStartTime = 995870475;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 21691613;
    if(result == expected) {
        cout << "Test Case 113: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 113: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test114() {
    int N = 20;
    vector<int> sunnyStart = {16841528, 37838197, 85563827, 144626154, 163806320, 173633082, 225652886, 250982828, 272073622, 309571694, 326565781, 345900428, 395998015, 426047358, 443104976, 504285648, 525260828, 647745045, 682587567, 770560179};
    vector<int> sunnyEnd = {31361152, 44259254, 127447469, 153485038, 171767853, 188344987, 249312695, 255034069, 284496588, 314436054, 329058900, 357541149, 413509620, 440257268, 446694850, 524439539, 527467947, 665521159, 708203522, 770560180};
    vector<string> roads = {"15,7,76865776 4,14,22127270 0,12,82973808 3,12,", "11438037 12,4,66155192 4,19,603", "39240 12,14,16444750 9,5,2224", "7504 7,11,10947372 2,4,10775220 ", "16,19,21425544 5,18,4057302 18,14,1", "9385864 2,13,52682168 14,0,69", "04265 10,1,83393532 1,16,3216", "9 10,17,46503919 16,12,32453880 6,15,870311", "9 16,11,12942540 19,9,53120150 12,11,4577963", " 13,9,36394636 7,17,5044393 19,15", ",25672032 5,17,21978936", " 18,0,58080780 15,13,645308 19,3", ",53132608 9,15,39489630 17,4,2249", "246 2,10,36523544 12,19,6986097 18,15", ",20772780 13,18,8993145 11,19,50", "25904 9,6,25108899 9,17,45695592 4,", "16,57825996 19,13,7925610 14,15,2349281 1", "3,11,8214024 4,13,65839851 14", ",1,111593677 1,8,5383021 3,9,616", "0644 9,10,1419315 19,17,916864 8,", "15,39534005 18,4,23665894 11,15,37141", "460 3,5,914370 0,4,7075560 4,10,5", "3506026 11,14,8352987 0,16,7", "2575616 16,15,6591512 17,13,35221908 10,8", ",9425979 19,18,7617410 4,6,6728816 3,2", ",2280712 1,5,29676192 18,8,8", "2862680 12,15,21687186 1,17,279", "40320 13,0,25995944 7,13", ",22205040 14,8,42648198 6,17,512", "95453 6,0,6663498 11,10,2662033 4,11,", "3500281 6,10,8493752 19,6,103278071 4,1,1655", "5584 8,0,32282008 13,8", ",15291780 4,5,5416845 17,3,2261532 2", ",15,6937246 5,16,75059853 1,11,29350760", " 2,6,22513308 3,15,63200988 4,15,63", "730392 4,9,40311655 3,10,57263864", " 1,0,9213191 10,7,22854801 19,", "1,60531678 14,5,71652087 14,3,", "16107663 9,18,9737870 14,17,1534", "7295 8,2,51732426 16,6,9566273 17,12", ",41445870 13,5,8707092 13,14,743", "9236 6,18,108698004 8,5,29072658 ", "11,5,55028724 7,8,4734456 1,2,", "4239334 0,3,2270214 1,12,8400180 3,7", ",4149487 3,1,2927196 9,2,12673003 ", "0,11,45648900 14,2,56815608 10,0", ",73946900 19,2,61388649 2,", "0,15164840 16,10,54485310 ", "11,8,5766335 16,14,18525322"};
    int machineStartTime = 42130902;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 22290138;
    if(result == expected) {
        cout << "Test Case 114: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 114: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test115() {
    int N = 20;
    vector<int> sunnyStart = {0, 8, 19, 28, 48, 57, 80, 93, 96, 102, 999999893, 999999902, 999999915, 999999925, 999999935, 999999937, 999999951, 999999956, 999999975, 999999992};
    vector<int> sunnyEnd = {5, 11, 23, 45, 52, 75, 91, 94, 100, 999999890, 999999894, 999999903, 999999916, 999999926, 999999936, 999999938, 999999952, 999999957, 999999976, 999999993};
    vector<string> roads = {"5,13,8707092 8,2,51732426 14,1,111", "593677 2,15,6937246 6,4,6728816 5", ",4,5416845 19,9,53120150 10,11,266", "2033 17,12,41445870 8,15,39534005 8,13,1", "5291780 10,16,54485310 11,16,12942540", " 17,3,2261532 16,15,6591512 17,1,27940320", " 9,2,12673003 2,10,36523544 5,18,405730", "2 8,5,29072658 9,18,9737870 15,", "9,39489630 10,4,53506026 13,9,36394636 ", "18,14,19385864 4,13,65839851 16,12,32453880", " 6,10,8493752 19,1,60531678 4,9,4031165", "5 6,19,103278071 0,13,2599", "5944 0,11,45648900 18,0,58080780 11,13,8", "214024 4,1,16555584 13,14,7439236 7,3,", "4149487 0,1,9213191 11,5,55028724 13", ",19,7925610 16,1,32169 16,0", ",72575616 10,9,1419315 6,2,", "22513308 4,15,63730392 14,8,4", "2648198 12,19,6986097 0,10,7394690", "0 1,8,5383021 0,6,6663498 15,3,632", "00988 11,12,4577963 11,4,3500281 3,2,2", "280712 17,9,45695592 4,16,5782599", "6 15,13,645308 8,18,828626", "80 17,5,21978936 5,9,22247504 4,12,661", "55192 14,12,16444750 7,8,47", "34456 12,0,82973808 14,4,22127270 14,16,1", "8525322 10,3,57263864 11,19,5025904 ", "15,19,25672032 10,17,", "46503919 15,7,76865776 19,3", ",53132608 8,0,32282008 11,8,5766335 1", "4,17,15347295 4,0,7075560 ", "7,10,22854801 15,18,20772780 13,1", "7,35221908 5,1,29676192 0,14,6", "904265 16,6,9566273 1,3,2927196 16,", "19,21425544 18,4,23665894 14,2,56815608 ", "5,14,71652087 12,15,21687186 ", "18,6,108698004 15,6,8703119 ", "0,3,2270214 5,3,914370 19,4,60339240 15,", "14,2349281 2,4,10775220 3,12,11438037 4,17,22492", "46 17,7,5044393 1,12,8400180 17,6,5129", "5453 9,6,25108899 13,2,52682168 11,", "1,29350760 11,14,8352987 7,13,22205040 5,", "16,75059853 11,7,10947372 14,3,1610766", "3 11,15,37141460 1,10,8339", "3532 18,13,8993145 19,17,916864 19,", "2,61388649 10,8,9425979 2,0,15164840", " 9,3,6160644 1,2,4239334 19,18,7617410"};
    int machineStartTime = 233533279;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = 5448712;
    if(result == expected) {
        cout << "Test Case 115: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 115: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test116() {
    int N = 20;
    vector<int> sunnyStart = {52565178, 71571972, 141102059, 169230784, 226982143, 297286497, 336939128, 378607454, 472656458, 538918220, 547838238, 596798456, 613676929, 686641689, 703037502, 741012668, 782659799, 795780765, 865120552, 972657833};
    vector<int> sunnyEnd = {52565179, 71571973, 141102060, 169230785, 226982144, 297286498, 336939129, 378607455, 472656459, 538918221, 547838239, 596798457, 613676930, 686641690, 703037503, 741012669, 782659800, 795780766, 865120553, 972657834};
    vector<string> roads = {"8,4,60945695", "5 5,1,84260197", " 0,12,152992", "052 11,14", ",5755", "77181 11,8,", "380710346 2,", "5,8079861", "19 18,14,541", "805487 8", ",6,8524341", "30 19,3,1013850", "28 11,19,", "772608007 1", "3,3,621166", "374 15,19,4", "36309927 4", ",0,459048484 ", "10,1,702337886", " 5,0,562228", "440 17,9,41", "6170750 16,17,318", "870724 17,14,2", "91252953 ", "7,4,383196957"};
    int machineStartTime = 404238794;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = -1;
    if(result == expected) {
        cout << "Test Case 116: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 116: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test117() {
    int N = 20;
    vector<int> sunnyStart = {6714801, 150329608, 243630229, 301171192, 365098048, 382636313, 425055569, 500792626, 519678062, 564219691, 646687780, 677246886, 693534951, 719622652, 727418666, 786811905, 823996934, 893748315, 911611928, 940736914};
    vector<int> sunnyEnd = {6714879, 150329678, 243630327, 301171226, 365098119, 382636397, 425055662, 500792637, 519678079, 564219753, 646687864, 677246961, 693535050, 719622751, 727418740, 786811957, 823997012, 893748377, 911611957, 940736995};
    vector<string> roads = {"13,0,100", " 0,", "17,", "100", " 0,14,1", "00 4,0,10", "0 18,0,1", "00 8,0,10", "0 0,3,", "100 0,2,", "100 ", "0,9,100 10", ",0,1", "00 11,", "0,", "100 0,", "19,100", " 0,1", ",100 ", "6,0,10", "0 0,15", ",100 ", "0,12", ",100 0", ",7,1", "00 ", "0,", "16", ",100 5,0", ",100"};
    int machineStartTime = 1;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = -1;
    if(result == expected) {
        cout << "Test Case 117: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 117: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test118() {
    int N = 20;
    vector<int> sunnyStart = {29648763, 44039723, 68127800, 164656311, 227680702, 241060885, 358446460, 369008586, 535529778, 577525724, 598928697, 621466508, 621795154, 656565077, 687982598, 731411974, 762972780, 818394654, 826609399, 896230944};
    vector<int> sunnyEnd = {29648858, 44039785, 68127896, 164656407, 227680777, 241060983, 358446555, 369008597, 535529861, 577525786, 598928790, 621466574, 621795246, 656565168, 687982670, 731412073, 762972878, 818394696, 826609465, 896230972};
    vector<string> roads = {"16,4,100 ", "14,5,100", " 13,17", ",100 ", "1,1", "8,", "100 11,6,10", "0 2,18", ",10", "0 16,8,1", "00 15", ",6,1", "00 0,", "12,100 9,4,", "100 7", ",11,100", " 15", ",10,100 ", "1,19,100 ", "3,7,100 ", "17,8", ",100", " 5,12,10", "0 13,2,", "100 3,9,1", "00 14,1", "0,100"};
    int machineStartTime = 1;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = -1;
    if(result == expected) {
        cout << "Test Case 118: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 118: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test119() {
    int N = 20;
    vector<int> sunnyStart = {11572860, 69311491, 96436790, 113466876, 164707901, 209436897, 231311548, 258302496, 323624904, 339136317, 389864706, 409549612, 467506321, 592888144, 668199285, 705775925, 749367062, 865041605, 931805353, 963726395};
    vector<int> sunnyEnd = {11572943, 69311577, 96436890, 113466971, 164707971, 209436952, 231311627, 258302548, 323624999, 339136392, 389864793, 409549674, 467506360, 592888229, 668199324, 705776015, 749367119, 865041642, 931805445, 963726466};
    vector<string> roads = {"16,14,5 3,9,6 15,1,2", " 7,2,4 17,12,6 4,11", ",9 5,11,9 14,9,1 18,", "13,5 13,7,6 8,3,2 6,7,3 ", "1,0,8 5,14,9 9,11,3", " 5,4,4 18,10,", "5 15,12,8 8,9,9 ", "10,13,2 18,12,2 2,1,9 2,", "15,7 18,2,2 7,0,8 3,4,3", " 14,19,7 10,1,1 17,0,", "3 6,10,6 19,11,1 19,3,", "2 6,15,6 12,7,4 17,7", ",5 16,11,9 13,0,6 9,", "19,1 10,15,6 15,", "17,8 9,5,1 4,14,1 17,", "2,7 0,6,9 7,18,3 14,8,4 19,", "8,6 6,18,6 0,18,6 1", "3,6,2 0,12,3 7,10,8 5,16", ",1 4,9,9 12,13,4 1,7,1 13,", "2,3 15,0,4 15,13,1 12,1", ",5 0,10,6 3,16", ",5 6,2,4 12,10,2 ", "12,6,2 19,4,5 5,3,", "4 19,5,9 3,11,9 13,1,9 ", "18,15,4 6,17,", "7 2,10,4 12,2,7 16,9,1 4,8,8 4", ",16,1 17,10,6 6,1,", "6 0,2,3 11,8,6 14,3,6 ", "11,14,6 18,17,9", " 16,19,3 7,15,5", " 16,8,6 17,1,4 17,1", "3,4 8,5,4 18,1,9"};
    int machineStartTime = 1;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = -1;
    if(result == expected) {
        cout << "Test Case 119: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 119: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test120() {
    int N = 20;
    vector<int> sunnyStart = {122047735, 143767846, 167508890, 190486478, 259805444, 286708909, 384393954, 473115129, 546625285, 636747400, 675523684, 697332899, 785431589, 803452795, 836696055, 891498917, 933311509, 946710042, 963905046, 971161608};
    vector<int> sunnyEnd = {122047806, 143767934, 167508927, 190486521, 259805527, 286708998, 384394018, 473115203, 546625290, 636747480, 675523784, 697332964, 785431673, 803452856, 836696155, 891499016, 933311589, 946710115, 963905116, 971161675};
    vector<string> roads = {"18,1,2 3,", "19,7 15,7,2", " 17,18,3 ", "16,3,1 ", "11,3,4 4,", "16,2 7,6,", "7 11,4,5 4,19,", "2 11,16,2", " 15,14,3 15,1", "0,1 17,12,", "4 9,10,3 9,", "6,4 13,14,8 7,1", "3,4 6", ",13,6 12,16,1 1,", "17,7 1,12,6 2,5,", "3 5,8,9 12", ",18,4 18,4,3 16,", "1,5 3,18,6 12,3", ",5 6,14,9 15,", "9,3 6", ",10,3 13,", "10,5 17,1", "9,9 3,4,3 14,7,9 ", "4,12,9 14,1", "0,8 16,17", ",6 14,9,", "2 9,7,3 19,1", ",4 11,17", ",9 8,0", ",2 3,1,8 3,17,", "6 4,17,3 0,5,5", " 1,4,4 2,0,9 1", "1,12,2 1,1", "1,3 6,15,5", " 2,8,7 1", "8,19,2 10,7,5", " 15,13,8 1", "9,12,9 11", ",18,2 13,9,3 16", ",19,7 11,19,", "3 16,18,3"};
    int machineStartTime = 1;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = -1;
    if(result == expected) {
        cout << "Test Case 120: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 120: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test121() {
    int N = 20;
    vector<int> sunnyStart = {8832876, 116128691, 154514553, 174934033, 188601296, 232391901, 290716954, 374123956, 410213255, 423515263, 436973592, 478042662, 496692853, 650444653, 718202477, 793067663, 800746472, 902159185, 947926849, 975180849};
    vector<int> sunnyEnd = {8832956, 116128783, 154514643, 174934092, 188601338, 232391987, 290717016, 374124041, 410213305, 423515310, 436973680, 478042724, 496692934, 650444699, 718202550, 793067759, 800746566, 902159278, 947926927, 975180902};
    vector<string> roads = {"3,14,9 ", "19,12,2 6", ",18,9 13,19,3 9,8", ",9 9,18,3 18,", "3,1 14,6,", "7 8,14,3 9,6", ",6 4,13,1 8,", "6,9 4,5,2 5,13,5", " 2,5,9 0,16", ",3 8,18,7 4,1", "2,2 6,3,5 ", "19,7,7 ", "17,0,7 16,1,", "2 12,2,7 11,10,5 4", ",7,6 17,1,6 12,", "7,2 0,1,2 13", ",12,5 5,12,1 4,19,3 ", "9,14,5 2,4,4 ", "13,7,7 13,2,1 ", "5,7,9 3,9,7 3,8,2", " 19,5,6 18,14,5", " 16,17,3 2", ",7,7 2,19,7"};
    int machineStartTime = 1;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = -1;
    if(result == expected) {
        cout << "Test Case 121: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 121: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test122() {
    int N = 20;
    vector<int> sunnyStart = {3111662, 54040193, 64956487, 246934458, 290421133, 317321021, 341658086, 352254337, 378619164, 397060171, 479612595, 551816007, 557846548, 634836280, 710527786, 717714172, 732898002, 783486724, 815216087, 905299610};
    vector<int> sunnyEnd = {3111757, 54040291, 64956519, 246934557, 290421206, 317321081, 341658166, 352254420, 378619253, 397060232, 479612686, 551816107, 557846633, 634836320, 710527861, 717714258, 732898075, 783486795, 815216186, 905299682};
    vector<string> roads = {"12,5,5 8,1,6 4,12,5 18,6,2 8,18,8 16", ",8,1 2,19,9 6,16,1 1,6,2 11,10,2 1,18,6 7", ",11,7 10,7,4 18,16,6 9,15,3 6,8,6 1,16,4 4,5,4"};
    int machineStartTime = 1;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = -1;
    if(result == expected) {
        cout << "Test Case 122: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 122: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test123() {
    int N = 20;
    vector<int> sunnyStart = {36113085, 45722017, 138198850, 163966188, 303715544, 372804763, 431434168, 456040832, 616494450, 628665824, 684218631, 710844319, 758010326, 790696790, 810310452, 833415650, 851005212, 876077884, 886710143, 943255485};
    vector<int> sunnyEnd = {36113183, 45722108, 138198932, 163966285, 303715588, 372804845, 431434263, 456040920, 616494521, 628665896, 684218701, 710844416, 758010376, 790696820, 810310542, 833415739, 851005305, 876077943, 886710236, 943255548};
    vector<string> roads = {"1", "4", ",", "8", ",", "5", " ", "1", "5", ",", "1", "7", ",", "6", " ", "1", "0", ",", "1", "3", ",", "3 ", "4", ",", "1", "1", ",", "4", " ", "5,", "1", "6", ",", "7"};
    int machineStartTime = 1;
    TimeTravellingGogo* pObj = new TimeTravellingGogo();
    clock_t start = clock();
    long result = pObj->determineTime(N, sunnyStart, sunnyEnd, roads, machineStartTime);
    clock_t end = clock();
    delete pObj;
    long expected = -1;
    if(result == expected) {
        cout << "Test Case 123: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 123: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    test67() == 0 ? ++passed : ++failed;
    test68() == 0 ? ++passed : ++failed;
    test69() == 0 ? ++passed : ++failed;
    test70() == 0 ? ++passed : ++failed;
    test71() == 0 ? ++passed : ++failed;
    test72() == 0 ? ++passed : ++failed;
    test73() == 0 ? ++passed : ++failed;
    test74() == 0 ? ++passed : ++failed;
    test75() == 0 ? ++passed : ++failed;
    test76() == 0 ? ++passed : ++failed;
    test77() == 0 ? ++passed : ++failed;
    test78() == 0 ? ++passed : ++failed;
    test79() == 0 ? ++passed : ++failed;
    test80() == 0 ? ++passed : ++failed;
    test81() == 0 ? ++passed : ++failed;
    test82() == 0 ? ++passed : ++failed;
    test83() == 0 ? ++passed : ++failed;
    test84() == 0 ? ++passed : ++failed;
    test85() == 0 ? ++passed : ++failed;
    test86() == 0 ? ++passed : ++failed;
    test87() == 0 ? ++passed : ++failed;
    test88() == 0 ? ++passed : ++failed;
    test89() == 0 ? ++passed : ++failed;
    test90() == 0 ? ++passed : ++failed;
    test91() == 0 ? ++passed : ++failed;
    test92() == 0 ? ++passed : ++failed;
    test93() == 0 ? ++passed : ++failed;
    test94() == 0 ? ++passed : ++failed;
    test95() == 0 ? ++passed : ++failed;
    test96() == 0 ? ++passed : ++failed;
    test97() == 0 ? ++passed : ++failed;
    test98() == 0 ? ++passed : ++failed;
    test99() == 0 ? ++passed : ++failed;
    test100() == 0 ? ++passed : ++failed;
    test101() == 0 ? ++passed : ++failed;
    test102() == 0 ? ++passed : ++failed;
    test103() == 0 ? ++passed : ++failed;
    test104() == 0 ? ++passed : ++failed;
    test105() == 0 ? ++passed : ++failed;
    test106() == 0 ? ++passed : ++failed;
    test107() == 0 ? ++passed : ++failed;
    test108() == 0 ? ++passed : ++failed;
    test109() == 0 ? ++passed : ++failed;
    test110() == 0 ? ++passed : ++failed;
    test111() == 0 ? ++passed : ++failed;
    test112() == 0 ? ++passed : ++failed;
    test113() == 0 ? ++passed : ++failed;
    test114() == 0 ? ++passed : ++failed;
    test115() == 0 ? ++passed : ++failed;
    test116() == 0 ? ++passed : ++failed;
    test117() == 0 ? ++passed : ++failed;
    test118() == 0 ? ++passed : ++failed;
    test119() == 0 ? ++passed : ++failed;
    test120() == 0 ? ++passed : ++failed;
    test121() == 0 ? ++passed : ++failed;
    test122() == 0 ? ++passed : ++failed;
    test123() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=22714443&rd=14245&pm=11117
********************************************************************************
//  SRM 492 (C) 
 
#include <cstdio> 
#include <cstdlib> 
#include <cstring> 
#include <cmath> 
#include <cassert> 
#include <iostream> 
#include <sstream> 
#include <string> 
#include <vector> 
#include <queue> 
#include <set> 
#include <map> 
#include <utility> 
#include <numeric> 
#include <algorithm> 
#include <bitset> 
#include <complex> 
 
using namespace std; 
 
typedef unsigned uint; 
typedef long long Int; 
typedef vector<int> vint; 
typedef vector<string> vstr; 
typedef pair<int,int> pint; 
#define mp make_pair 
 
template<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) cout << *i << " "; cout << endl; } 
template<class T> void pvp(T a, T b) { for (T i = a; i != b; ++i) cout << "(" << i->first << ", " << i->second << ") "; cout << endl; } 
 
const Int INF = 3001001001001001001LL; 
 
int N; 
vint A, B; 
Int MST; 
 
Int D[110][110]; 
int L; 
bool is[30][30][30]; 
Int dist[30][30][30][2]; 
 
struct TimeTravellingGogo { 
   
  Int calc(int l, Int dl, int s, int m, Int dm, int t) { 
    Int pass = (t ? (B[m] - dm) : A[m]) - (s ? B[l] : (A[l] + dl)); 
    return (pass < 0) ? (MST - pass) : pass; 
  } 
   
  long long determineTime(int N_, vector <int> sunnyStart, vector <int> sunnyEnd,  
  vector <string> roads, int machineStartTime) { 
    int l, m; 
    int u, v, w; 
    int s, t; 
    Int c, cc; 
     
    N = N_; 
    A = sunnyStart; 
    B = sunnyEnd; 
    MST = machineStartTime; 
     
    for (u = 0; u < N; ++u) for (v = 0; v < N; ++v) { 
      D[u][v] = (u != v) ? INF : 0; 
    } 
    string road = accumulate(roads.begin(), roads.end(), string()); 
    for (uint rr = 0; rr < road.size(); ++rr) if (road[rr] == ',') road[rr] = ' '; 
    for (istringstream iss(road); iss >> u >> v >> c; ) { 
      if (D[u][v] > c) D[u][v] = c; 
      if (D[v][u] > c) D[v][u] = c; 
    } 
    for (w = 0; w < N; ++w) for (u = 0; u < N; ++u) for (v = 0; v < N; ++v) { 
      if (D[u][v] > D[u][w] + D[w][v]) { 
        D[u][v] = D[u][w] + D[w][v]; 
      } 
    } 
     
    L = A.size(); 
    for (l = 0; l < L; ++l) for (u = 0; u < N; ++u) for (v = 0; v < N; ++v) { 
      if (D[u][v] <= B[l] - A[l]) { 
        is[l][u][v] = 1; 
      } 
    } 
    typedef pair< Int,pair<pint,pint> > node; 
    #define mp5(c,l,u,v,s) mp(c,mp(mp(l,u),mp(v,s))) 
    priority_queue< node,vector<node>,greater<node> > q; 
    for (l = 0; l < L; ++l) for (u = 0; u < N; ++u) for (v = 0; v < N; ++v) { 
      for (s = 0; s < 2; ++s) { 
        dist[l][u][v][s] = INF; 
      } 
    } 
    for (v = 0; v < N; ++v) if (is[0][0][v]) { 
      c = A[0] + D[0][v]; 
      dist[0][0][v][0] = c; 
      q.push(mp5(c, 0, 0, v, 0)); 
    } 
    for (; !q.empty(); ) { 
      c = q.top().first; 
      l = q.top().second.first.first; 
      u = q.top().second.first.second; 
      v = q.top().second.second.first; 
      s = q.top().second.second.second; 
//cout<<c<<": "<<l<<" ("<<u<<", "<<v<<") "<<s<<endl; 
      q.pop(); 
      if (v == N - 1) return c; 
      if (dist[l][u][v][s] > c) continue; 
      for (m = 0; m < L; ++m) for (w = 0; w < N; ++w) if (is[m][v][w]) { 
        for (t = 0; t < 2; ++t) { 
          cc = c + D[v][w] + calc(l, D[u][v], s, m, D[v][w], t); 
//cout<<" (to) "<<cc<<": "<<m<<" ("<<v<<", "<<w<<") "<<t<<endl; 
          if (dist[m][v][w][t] > cc) { 
            dist[m][v][w][t] = cc; 
            q.push(mp5(cc, m, v, w, t)); 
          } 
        } 
      } 
    } 
    return -1; 
     
  } 
   
};

********************************************************************************
*******************************************************************************/