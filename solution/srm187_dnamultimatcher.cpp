/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=2224
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class DNAMultiMatcher {
public:
    int longestMatch(vector<string> sequence1, vector<string> sequence2, vector<string> sequence3);
};

int DNAMultiMatcher::longestMatch(vector<string> sequence1, vector<string> sequence2, vector<string> sequence3) {
    int ret;
    return ret;
}


int test0() {
    vector<string> sequence1 = {"AAAAAAAAAAAAAAAAAAAAACCCGGGGGGGGGGGGG"};
    vector<string> sequence2 = {"AAAACCCGGGGGGGGGGGGGGGGGGGGGGGGGGGG"};
    vector<string> sequence3 = {"AAAAAAAAAAAAAAAAAAAAACCCGGGGGGGGTTTT"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 15;
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<string> sequence1 = {};
    vector<string> sequence2 = {};
    vector<string> sequence3 = {};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 1251;
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<string> sequence1 = {"AAAAGAAA", "AAGGGGGGAAAAAAAAAA", "AAAAAAAAAAGGG"};
    vector<string> sequence2 = {"CCCCC", "CCCCCCCCC", "CCCCCCCC", "CCCCCCC", "CCC"};
    vector<string> sequence3 = {"TTTTTTTTTTTTTTTTT", "TTTTTTTTTTTTTTTTTT"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<string> sequence1 = {"ACTACTACTACTACTACTACTACTACT", "TCATCATCATCATCATCATCATCATCA"};
    vector<string> sequence2 = {"GACTGACTGACTGACTGACTGACTGACT", "TCAGTCAGTCAGTCAGTCAGTCAGTCAG"};
    vector<string> sequence3 = {"TATCGTACGCAGACTTCAGGACTTACG", "GCTACTGACTGTCAACTAGACTGACTG"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 6;
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<string> sequence1 = {"AAAAAAAAAATTTCCCCCCCCCC"};
    vector<string> sequence2 = {"CCCCCCCCCCTTTGGGGGGGGGG"};
    vector<string> sequence3 = {"GGGGGGGGGGTTTAAAAAAAAAA"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 3;
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<string> sequence1 = {"CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC"};
    vector<string> sequence2 = {};
    vector<string> sequence3 = {};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 2500;
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<string> sequence1 = {"A", "CC", "GGG", "TTTT"};
    vector<string> sequence2 = {"AAAA", "CCC", "GG", "T", "ACGT"};
    vector<string> sequence3 = {"AACCGGTTAAACCCTTTGGG"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 4;
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<string> sequence1 = {};
    vector<string> sequence2 = {};
    vector<string> sequence3 = {};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 1262;
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<string> sequence1 = {"CAT"};
    vector<string> sequence2 = {"GAG"};
    vector<string> sequence3 = {"TAG"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<string> sequence1 = {"ATTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTC", "TCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTC", "TCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTC", "TCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTC"};
    vector<string> sequence2 = {"TCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTC", "TCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTC", "TCGCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTC", "TCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTC"};
    vector<string> sequence3 = {"TCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTC", "TCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCGC", "TCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTC", "TCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTCTC"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 101;
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<string> sequence1 = {};
    vector<string> sequence2 = {};
    vector<string> sequence3 = {"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCACC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 1252;
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<string> sequence1 = {"C"};
    vector<string> sequence2 = {"C"};
    vector<string> sequence3 = {"C"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<string> sequence1 = {"C"};
    vector<string> sequence2 = {"C"};
    vector<string> sequence3 = {"AGATAGTATGATGGTAGTAATTGGTATGATTGTTTAGGGTTAAA"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<string> sequence1 = {"A"};
    vector<string> sequence2 = {"C"};
    vector<string> sequence3 = {"T"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 0;
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<string> sequence1 = {"CAT"};
    vector<string> sequence2 = {"TAG"};
    vector<string> sequence3 = {"AT"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 1;
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<string> sequence1 = {};
    vector<string> sequence2 = {};
    vector<string> sequence3 = {};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 1129;
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<string> sequence1 = {"AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC", "AACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACCAACC"};
    vector<string> sequence2 = {};
    vector<string> sequence3 = {};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 1202;
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<string> sequence1 = {};
    vector<string> sequence2 = {};
    vector<string> sequence3 = {};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 1252;
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<string> sequence1 = {};
    vector<string> sequence2 = {};
    vector<string> sequence3 = {"GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GTGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 1251;
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<string> sequence1 = {"CGGTGTCGGGTGGAGGCACCTATTCAGTCGCCCTATTGGTAAACCGTCGT", "CTAACGACTGCTCCCGCTTTCGACGAACCTTAGTCGATGGCATCGCGAAG", "GGTAACAGCTACTCACGCCGGGTAACTCCGGCCTACCACAGATGAGAAGA", "CTGAGTTTGCTTCCCGCCTCACACGGACTATCCTTATTGGCGAGGATTGC", "TGAACTGTGGTTTTCTCGATGTGTTATAAACATTGCCATAGTTCTTCTTC", "ACTCAAAGGCTTATTCTGCGCGACGTAAGTCCTGTAGTGGGCAGAGGTCC", "AATTCTCACTGGTCGCGGCGGCTGACTGGTCCAGACTAGGAAAACAGACA", "AACTTATTTACAAGGGGTTTGAAAACCTCTGATAAGGGGGAGGACGCAGC", "TGGGTTCATTTACGAAAAGCCCAACTTGCACGCGGGTGCGTATGTCGAGC", "GGGAGACGCGATCCATGTTCCCAATATAGTTACGACTTATACCGGATCAA", "TTCAAATAAAGCGATCGCTTTGTCCTGAGAATTTATACATTTTGACTCGG", "TTTCTATATTGCGGGACGAACTGCCGGCCGCTCGCGGTATGACAAGCCAA", "CCCGGCACACCCCCATATGCGCCATTAAGAAGGTCAACCCGCGTGTGCGG", "AACAAAATTACGGACTGAGTGAAAACATCGGTGACTGCGACGCTGTCGAA", "GCGACTTTAAGTGAGCGCTTGTATCGCTGGATTTCACCAACGTCTTGCAC", "TACTCTAGGTCTGTGTTATTATATCTGGACTCGAGAGCTTCGGTTACTAC", "ATCATTGGAAGCGGGCCAAGACTCCTCTAGAAGCGCAGGGGTATTACATG", "CGGCGTCCGGTAGCGCCTCATGTTCATTTATTGTAAAAAAAGCAGCTAGG", "AACCCATTACCGTTTGAGGTCTTTGTCCGGAGCCGACGACAGGATGGTGG", "AACATGCCACTATTACGGCCTATAGTTCGGCAACAAACGATAAATGCCCG", "ATGCCGTGCTTAGATCCTTTAATGGAGACCCCCGATGTGCCAGAATCGCA", "TCTCCGCACTCAACAGCCCACTGGGTGTTTTGCCAAGAACAAACCGGCAA", "GTGTGAAGCTGCATCTGAAGGTGAGAAGCGTGGGCTTCATTAACACGTAT", "GTTTCTGGGATTCTGAGCGATCGGGAGACGCGCCCGGGGTCTACATCAAG", "CTGGTTTCAAGAATACAGGGTTACCACTTCCCGGCTTGACTCTCTATTTT", "TATGTGGTGGCCTCATCTTTTGAACCACTCACCCTGTACGTGTTTGAGCG", "TCACGATGCTACCCCCGGCTATCCAATACCCGTCGGTAGGGAGCCGCAGT", "TCTTTCGCTTGGGGGACCATAAGCGATGCTGTCTTCGAATGGATGCCTTG", "GGGGCCGGCGGTGCATTTTTTCCGATAGCTGCGGAGCCCCAACATCAACG", "AGAGAGCCGTTGTGACCTAAATGTCTACTGCCTTCGGGTGAGCTAGACTA", "CGAAGGATAAGGGAATTATTCTCAATAAATGAATCTGCCAGGAACCGTCG", "CACTTAGTCAAGGCCATATTCTAGTGGGATCTTCATATGACTAATTTCGG", "CCGTCCCTGTGTGACATTTTAAACTTTTGGAGAGTTCCTGAGGGATGCGA", "CGTTGGAGTCCGGATGAGGCGGAGGTTTGCATTACTACTTTGGACCCCAG", "ACAGCTGTGCACAAACTGCTCTGGAATGCCCCTAGCAGTTTCTGTCGGAG", "CTACGAGAGTGAGGCTGCCGCCAAAAGCTACACGTTTAACATGGATAGCC", "TACCACATGCAGCAAAATAAATTCCGGAGACTGTAGGTAGCATCAGGAAG", "TTCAAGCGCCGGAAGCCATAGCGTAATCGTGTGTACGTCTGAGGAGGCCA", "TCGAGAGGTCACCTGCTCTCTGCCCAGTTCATGCGGTTCCGGCTACACAC", "CCACACTAATATACCGATTCCAACGGTAATAGGTAATCTCTGTGACCATT", "CCCTCTCCATAACGATGCTACCTAGCCGGGATTAGAAGGCACGTGGTCGT", "CGGGGAGCATTTCCGTCAGCTCTAAAAATCGCTAGCGCGAGGATGCATTT", "CCTTCGACCATCGGCCTCGGCATGGCTAGTTTATGGTGCGGTCCACGCTG", "TCGAACCGATAAACAATGAAAGCCTCATTCGTCGTGTATAGTCGACCCCA", "ACCCCGCCTGCTTGAGGTAATTAATGGGGTCGAGAGTAATCCGGGGATGT", "CACGAATACGTGTATTTCTAGTTGCTTGTGATCCCAGGCAGTATCACCTG", "GTTTTCGTCTCTGTTCCCTCCATTTAGGACTAATACGCATGTGAATGTGC", "CGCTCGGGACTGAAGCAAGGTACTGTGAAGCATAGTAGCCTTGGGGCGCA", "GTTTTGCGGATCAAATGCTCTTCCCAGAATAGACTTTTCATAGGAACCCA", "GGTTTTGGGCGATGCAGTATAGCCGCGCGGATAGAGATGGCATGATTTAG"};
    vector<string> sequence2 = {"TGAGCTCAGGCCAACGCGTGCAGGTGTATAAATAGCTGCTTGACTGGAGC", "TCACACTAAGCCAGCAGAGTGGCAGCACCCCCCACTTGGCAGCTTTAGCG", "TTCTCCAAGTGTGGTAATATCTAAGTGGGGGTCAGCATGTGAAACAAAAG", "TTAGTAAAGAGCTATGACTTATTTGCCTTGCAACTACACCGCATCGTAAT", "CGTTATGCCCTAAGTTTCTGTAATAGACGATCGCGCTACTCATCTCCTGT", "AACTGCATCACGGTTGGCCGAACCCCTCCTTAACGCTGAGATTGGATCCA", "TGTTCTGAGTACCCTCAGACTTATCAATGGCATGCGGATACAACACACCT", "CGACGACGTGCGATACTTCACAAGATGCCGTTGCCCCGGGGAAACGAATT", "ATTAACCCCAGAACTAGGTTAGCATTGATAACAAGGTCGTTGGCGCAGCG", "GGTAATTAGCGCATTTAACCGTAGTACTCACCTGGAAAATTACCATGTGG", "GGCACATGCTAACTTTCTTTCAATAATCATCCCCCATATTCCCGTTTAAC", "CACATTCTCATAATAATAAATATTTTCTTAGAATACATCGATATTAATAC", "GACGGATTTGGCTTTAGTCCCGATTCGATCCCGTTACTCTACATTCGTGT", "AGACGTAGGTAATGGACCAAACTACACACATACGCCGCTAGTGAAATAAT", "GTCGACATTGTATCTGCCGCACTTACGCTTGACTGTAAGGTGAAATCAAG", "ATGTCACCAACCGGCCTTTCGAACCATCATGGGCGGACAGTGATAGGGAA", "ACCGGGGCGGCTTGACCGGAGGGTCGCGTCCCTTGGCTTTAGACATCGCC", "CAGACGACTCTGAAAGTGCTGGCGCATTTATCCCGCCTAACGCTATGAGT", "TTCTACTTAAAGTGCTAGTCGTCAGGTTTGAGTCGTTATGATATTCAGCC", "TGCGGAGCCATCCATGCTCGGGTAAATTCTTAGTTGAACGTCGCTCGTTC", "TCGAGTCCTCACCCGCCGTGAGTCCTGTGCTTTTCGCAGGTCCTGACACA", "TAGCATAGGCTCAGACGTAGGGCCGGCACCATTTACCTGTATCCGGGTGC", "GTAGTTGCCCCCGTCCCATCCTCATTAGTCCGGGTGCAGACAAATTGTGA", "CTATCGAATATGTCGCGAGGGTCCCGGAGGCCAGTTGCTCGTACCCCCAA", "TAGCTAGCCCCCTGCCAGGCCATCTTAATCAGTCTAATATGCCGGGATAA", "AGGACAACACCTTTTTTCAATCGCAAACATATAACCTCGGGGTCACAAGG", "TATGCTCGCCATCATGGTGCTCTCATAAACTTACCGGCACTCTCGGTACT", "ACGCACTACTCTTGGAACTTTCTTTAGGTCGATCTGGACATACAAAGTGC", "CCATCCTCGGTGGGACGAAGTTGAATCTCTCTGTGCGCTCCCCATCTTCA", "ATTAAGATGATCGCCACGTGAGACATTATCAAGGCTGCGTCCAGATCTCC", "AGAAATGTGATATCCACGAATAGGGGTGAACTAGTATCTCAGTCGCCTGG", "ATATCCTAGACATCTGACGTGACGAAAGACGAACAACTTAGATGACGCCC", "TCTGCCGAAATCCCTCCTGATTATCGCAAAGACGTGCAGTGTGCAAATCG", "CGTTTTCGCGAAACGCAGACGGATTTTAATATTGGCCAAAATGGGAAGCC", "GGCTATAGGGACTTTAAGGCGTACAGCTCAGTATTTTACTAATTACTTGG", "GACATCGAAAGTACACGACTGTCTAGACCCAATCGCTGACTAAGGTCCCA", "CTCAGCCGAGGTCAGGCGTGAGCGGGGACTCATCGGGCGCTCTGTCAAAT", "ACGGGGTGTGTTTGTTTTGATAGCATATCGAATTAGACATGACAGGCTAA", "GGCCGATAGTCATATCTCCAATTTCGGTCCGTCGTAGAACAAGGACTTGT", "TGATCCCAACAATGCATCATTTCGCTACTTCACAGCGTATAGTCCGGCAC", "ATCATTTGCCCGCCTTATAATGGGATGCGGTGCAACCTATAAGAAGTGAG", "GTGTTCACATCAACGGCCGACAACGCGAGCGCAAGTGGGTAATTGCCCCT", "TTTTCAATGAGGGTCAACTCACGAATCGGCATTCTAGCGAGATGTGCACC", "GTACCGGCTTACACCTATGTCGGAGTAGACTACGCTAATTGAAAAAATTA", "CGCGTTTGCGTCCCAGCTAATGCCCCCTTTCAATCGTGACATATGTACTT", "ACTTGGATTGCTGTTGTCCTTATACGGCTTCAATAGTGCCCCAGGTAACT", "TACACGAAAATTATCCGACAGGCCGTGTTAAGATCGCCACAAATGGACCC", "CATGGAAAAACAGTGATGGAAGTCAGCTATCCCAAAACGCTTTAAAAACT", "CATTGTACTAATCGCCGAGGCCGAGGCTGCTTAACTGTTTTTTTAATGAC", "GTTGAATCCTATATGCCGTGGATTGTTTCATTGCCGTGTCGTTGTGGCCC"};
    vector<string> sequence3 = {"ACACTACTACCGCAACAGGTTGCCACCTCTAGCCACCCTCCGTATGGCAT", "AAGCAGCGGTGGCCGTTTGCGTGGAATGGGACTCCAAGCGATCGGTTAGT", "CCAACAGAGCTGATGGCGACGTGTAGGCTAATCATTCCGAATGGTCCCAA", "GCACGGTACAGTCCTAACACGACAGTAAATGTATGGCCTAGAGCGTGGGG", "CAACTCACATACGAGCAATAGTGTGACCACAGCACCCTTGCCTTTATTAC", "GATATGACTCTGTTCTCGATCAATTCCTATGCAGTCGGATACGTGGCAAT", "TTATTAGCCGCCTAGACACAGTTGATCGGGAGAAAAGGAACCGCCATCGA", "CAAAGGAAGGGGACCGTGAGGACAAGGGTCCGAGAATTGTGTGAAGATCT", "TATAATGCCTGCGCAGGGCGACGTCACGCCGCTTATGAGCCGTCATATCC", "TGATTGGTATCGGCGGTCCGTACGACAATTCAGATGACTATTAAATCACG", "GCCCAGAAGGGTTGATGAGTCCACAATACGAGTGTTAGGTGTTCACTAAG", "ACACTCCGATTTCGTGCACTATGGTTTAAAAGAGACGATCAGTGATTCCA", "AGCCGTTGTGAGTCCGAGGAATCGTGGGCGTTTACAAAACCCCTAGAAGG", "ATAAACAGGGTCGGCCCGATGCAGCGTTTAACATCATACAACCGGGATGA", "GTATCCGCCTGCGCCTCTCTCCAAAAGTCCCCGACGGACGTCCTCTGCTA", "GCAATCGCTCTTAGCGACCGAGCAACATCTGAGGACGCGCAGTCAAATTA", "TTGAGGGCTTTGCGCGTCAAAAATACCGGAAACAGTCGTGGTATAATCCG", "AGACAGAGCTGTTAGCGTTTTCGGTCCTACAATCGATGTTCTTGACGCGG", "CCGAGCAGTAATAGATCACGGAAGACCTTGACAAAGAGTGGTTACTGTTC", "AAACCAAAGGATCCGCCTTAATCTTCAGCGGAAGGTAATTCTAAGAGTAA", "TGGTAGCACACGGCGAGAGCCTTGGCCTTGACTGTATGGGAGGAGACTTA", "GATGTGCAAGAGACGTCCGAGAAGTCGGCCAAAGCCAGACGCTCCGCAGG", "AACTGTTCATTTATCAGTAGTCATAGCGGATCACGCTTTAACATCCAGAA", "CCTCGTTCTCCACCCTAGAGTGAATGGAGCCCGGTGGGTTGCCTAACATA", "ATCATCTTAGTCATCCTCGGATTATTGGGAATACCAGTGAACGCCTCGGA", "CTCATCGTATAACGTTGAATTGCAGGCTATCGACCTCCAGCATAATCAAG", "ACGTCAAGTGTTGAGTTCCGAGCGAAGTCCAATCGCCTTGCGGTGCGACG", "CTGACGGAGCTGACACGGGTTAGTTGCGAAGCGTCGGATAAGAGTTCAAC", "ATCTCCATTCACTACGACACCACCCTTACAGCTCATTCAGTTCTCGAGGT", "GGTACGTGTTAGCGCCGGAGTGTTGAAAATCTCTTTGTATGTGTTGCAGG", "AAGGATTATTAAACGGCTTCACAACGGTGATTAGCCCTGGAGAGTTGCTA", "TTATGTTCTACCCCAGAAGAGAGCACGCTTACCAAAGTAGTAGTTCGACA", "GAGGCATATCCCTTTCAACAATTTTGATATTATCCAACTGTTACCGAACG", "CTTTACAACCTCGCCAAGGACGGCCCTAGGGCGCAATCGAACAAGACAAA", "AATGGTTGAAACATTCAGTCGTTCTATTCCTACGGTATCCAGCCCTAGGT", "TCCCTTGGTAACGCAGGTTGGATATGAAGTGGTACACTATAGATGCCGAG", "CCATCTTCAATTTTGCTTATGTGTGAAGCGCTTGGTCTATTGCTCACTTG", "TACCCGTAACCTTGTTATGGTCAGACTTTGCCAACAGAGCGCCAGACCCG", "GATGATCATGAGGCTCGACAGCCAAAAATAGGATCCCGCGTCGTGTTGCC", "ATTTGACCCCAGTTTGAGAGAGATAGGGCATAAAGCTTCCTGGGCAGGGT", "AGTAGCGCTGATGGTTATAATCTCGGGCCGTTGGTTCTATTCCAACCGGG", "TGTTGTCGCCGGGGATTACGCATTGATTGTTCTTCTAAGCCTGCAATCAC", "GGATCGACTTCATCGACGGGCCCTTTCCATACCCCGCCGAGACCCTGGCT", "GCTATCAACGCAGCAACTGTTTTAATCCGACATCTAAGAACTAAGCATGA", "ATACATGGCTCTCACCATCCAACGTCGCCTTAACAACTTTCCACATAACT", "GATAAGGTGTCGAATTACGCTAGGATATCGTCAACGGGCTGTGATCGCTC", "TGTTAAGTCTAACACGGAGTTAGTTTCCTAGGGGAGTCACCCCATGCGAG", "TGCCATAGGTCCTGAGAATTATGCTCAAACCACTCACGGACCTCTCCAGA", "CACACCAGGGGAAGGCGGTTCCCCCTCCCGAGGGAGCTCCTCTTATGTCA", "TTTCGTCGTAAAAGAACTCCATGATACGGCTTAAACTAATTCCCGTTCAA"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<string> sequence1 = {"ATCGAGATTTCCATACAATGCGAAAAACTGGTGCATCATTTGTATGACGC", "GATGTTCAAAGCCTACTAAGGCAATACTTTGCCCCAGGTTAACGCACTCT", "AAGCCGGTGGCTTTAAACGGACAACGGCGGGCAAATTCCCTGTTTTGAGT", "ATTACAGCTCAGGATATATGTAGTGATTTAAGCTAGGCGACAGCCCCAGC", "CAGAGCTGCCACATGTCTACTCCAGCCGTGCGGCGTACCTCATCTAAGAA", "ACTACTCCTCGCTTTACGAAGGTAGGATGCATCCGAGCTTTGGACCTGCA", "GTAAGCAGGAATACGAAATTACCAAATCCAAGTGGGATTCCAAGGTAGTT", "CGGACACCCGGGGGACTGAGCTGTTCAGACACATAATAGGGATGAGCACC", "CACTTTCCAGTTACACACGTTACTAACCAGTCGCTAAATTGGGCGGGCGT", "AGCAGGCTCGAACCGTTGCTAATTTGAGCGGAATCCTGCAGTCTTTCCGA", "TGGTGCGAACTCGCGTCGTCGGAGCTTTTGTGGACCGAGCCGCTAAACGA", "GGTTGGATCGCCCAGTCGGTGGATAGAATGTCTCTGATGTGTATTCAGTT", "TAGGCGAATGATTTCCGGGTGTGTGTGTGGAACGTTTTGCGAGGATAGGC", "GGACCGGGCCAGCCACAACTCGGTACGAAGCGAGAGAATCGGCGCATGAA", "TTACCATTAAATAGTTCGGTAGGAGCGGATAACAGTCCGGAGCTGAAAAC", "CCGTTAAGTAGCACGCAACCAATTAGGCCCTAGAATGTACCACGGTATCT", "CGGTAGGACCCAGATACCTATCTCGCAAATCGGCACAATGTTCTAATTTT", "TACGTTCAAGTGACCTTATTCAATCACTCCGACCCGACAGTCTGATTCAA", "AGCGCCTATGGCTGCATTGGAGGACGCGTGAACCTTTGTTACTGGAATAC", "GGTTGTTTGTCTAGGGGAATCCAATCAACGTGGGCTGGTCCCGGTATCAG", "CTTATATGTGGGCTGATCTATTGCGTATGGTTCGGACTCGGCTACATCCC", "AACCACTCGTAGTCGTATGGGGGCATTCCATACCCACAGGGCCAGAACCC", "TTGACACCGACTTGTGGAAGATCTCTGGAAACGTTATCTCCTCCAGGGAA", "GAACCGTGTCTTGGATCATTTGAACTGGACAACGATGACGAGTATGCTTT", "GAAAGTTCCAGTTATAGTCGCTTATTATAAAATCGCGGCGCCGGAATGAA", "CTCTGCTTAAGATACCTCGCATTAATCTAATCCCTCTGACATTTCGCGAT", "ACAGCGTGGTAGGATCTCTGACTAGATTTCGGTATGAAGCCTTAGGAATT", "TATTAATCCCTGGAGCGTCTGAGCCCGCCTAATAGGGGATCAGGCAGAAA", "AGGTTTGGATCGCGGCCCCACGCAGCCTACCCCGGTGCAGGCAGTGGCTG", "CAACTCCCCGACAACCATACGGTACTTGTGTACACTGAGGGCAAGGATTA", "GGTCGTAAGTCATAAGGTCAAAGCTGCCGCTTGGTCGCGCGATCTTCTTC", "ATCGCAAGAAACCGTTGATTGGTAAACCAAAAATACATGGTGACAATTAC", "AACTTCAGAAACACACCGGTCCCTTTCCGTGTGTGTGTTGCTGGGATCTA", "AGAGCATAATTAGCCCGACCAAGCACGGGACGTCAGTTATAATAGTCTAG", "TTACCGAATGAACAGAACTAACCTTGTTAATCGGAATACACGCATCCCGG", "GACTACGTCGCGAATTCTCATCAGGTCGAAAGCCATAGGGTCCGTGGACG", "TCATCCCTTGTGGGGTAATTCCCTAAGTTGCAGCGCTATGCTGATGACTC", "TCTGGGACGACACGACATCACGGTACACATGCTCTAAGTTGCAAGAATCT", "GCCACCTATTGTAAGCCAGTATATCAGTTACTAATGCTTCCATGTAGCCC", "CACGTGCCATTGTTCGCTATGGGCGGTACAGCGCATTGGGTCCTCCGAAA", "CATATCTTCTGTCGGCCGTTTGTAATATTCATTGAATGGTGATTTGGTAA", "CGAGATGCACAGCGGAGCCCATAGAGGGGGACATGCCATCGTAGCCCGTT", "TTTACACATCCGTCTGCTCTCATCTCTTCGGAGTCAGAGCTTAAACTACA", "GTTGCACCAAAGGCTAAACAGGCACAGTTTGGTCTCGCTATAGCTGATGA", "TTACCGGACCGAAGTAATATGATCGCTCAGCGAATAGCCTAGCGATGGAT", "GGCGATGCGAGGTCGGTCAAAACCACGGTCGGGCTGCAAAACCTGTCTAG", "CGTCTCTCGGGTCCTCCATAGACAAAATAAAGGTTTAGTAGTCAGAAGCC", "ACTACTCTGGACACGTTCCAAATGGTTCACCTACAACATATGTGATAATA", "GACCGGAACGCGTTCGTGAGGGGGGCCCCTCCGACAAATACCCTAACACT", "TTCTGGTCACTATACGTAGGATTACACAGCGGCATAATATTCAAAGTCCC"};
    vector<string> sequence2 = {"TTGTACGTGGATTTACTGAGGATCCTAAGGGAATCTTCGACGCTTGACAG", "CGGGTGTACCAGGGACCTTGGGCACTGCGGGTAAAGACGCCTGGACGGAC", "ACGATAAAGGACAGCAAGAGGGAGCGGATATTCCCAAAGTAAATAGACCC", "ATGTGTGGATGAGGAGTTGACCTCTGGGCACGTGGACGTGAACACGAACC", "AAGACTAGGAACTAGGGCACTATGGCGTACTCTTCGGCGTAGCCCATTGG", "ACCCACGTCCGACAGTGTCCTACATGTATAATACTCCATCGCACCTATAA", "ATGTCATGCGTTGCACGGGTTGGAAACGCGCTCTACCACTCTCTACACTC", "CTCACGTAATGGAGGTCCGAGCGGAATCAAAGCATGCCAAATATTGCCAA", "GTGTGGAGAGATGCTAGCTGTCGGGGCGGCCTACAAACTGTAGAACACTG", "CATCCCCTTCGATTCATCCGACCGTAGAATGGTCCTTCTAACTCTGCTTC", "CCAGGACGAACACCATTGCATTCGAAGTGAATGGACGGGCATTGGATGAA", "ATTAAGTTTTCATGTATGGTCGCACCAAACAACTTCAACACCAGTAGACC", "TCGCATAGTCCAGAATGTATGGATGGGCTGGAGGAACAGTCGGTGCGTTA", "CTGCCGGGAACGGTGTCGCCGAAGTTCATTATTCCAAGGATGCTTGACGC", "CATGACCTCTGTTACAACGCGCAGCGCGACCCCCGAGGGGGAGCTCTCAA", "GGAGAAGGCGTGCAAAAGCGAGGTAAGCCTTTATGTTTTGTTTATCGAGG", "TGCCAAGTGCGACAATCGGACATTCTGCCAATATGTGGCGTGTTTATGGA", "GGTGTTTCCCCGGTGCTGGTTCGTGCTATCATTCGTGTGTAGCTGGTGCC", "ACGGCGAGCGTCTGCCTTGTGTAGCAGGCCCTATGGACCTGGGCACCGCT", "GACCGGTTGGTTAGCCCGGGCATTTCGAGCCACCGCTAACACTCCTCACC", "TTCCGCCGGCTGTGGAGGTGCAAACGTCCTGGTATGGGGAAATCCACGTC", "TCCGTACTCCCTGATCGGAAACAACAGACGTACATCAAGGAACCAACTAC", "CACAGCTTGCTCTTAATGGAACAAATTTACGCGCAGATTCTTCTGATTTG", "CAAGACCCCAATCCCGTCGCTCCTCCATAGGGTGGATTGGACCGCCCCGG", "AGCTCTACGGCGCTAAGTATCTCCAATCAAGTCGGTGACAGTGGTTCGCT", "ACCAGCTACGACTCAGGGGCAGGCTGCAACACGAGTTTCAATGGGCGTGA", "GATGACTGTTTTACTTCACGCCAACTTTAAGGTACTTGCGCTTATAATGA", "ATGCTGCTCAATTGTTTGTCCGGTCCGACTAACAATCTGAAATCCTGACG", "CAGGTCAACTTCCCGGCCGGCATGTAAGTTCCACAACAGAACTAGACTTC", "AACGCGCATTACAGATGATGATATATTGGGGTCAGTGCCGCGACCTCACA", "GCATAGCCGTGGAGTGACATGTCCTATACTCTCCTTGCGCGATCAGAGGG", "ATTTCGATGACCGCGTTGAGAGAAGCGCCCTGCAAAAACTCGGTCCCCAC", "GCATGAGACCCTATCGACTCCTCAGCCTGGATACCTCAGACGACCCACTG", "CATATCAAAGCGGTCCGAGATGCTTGAGTTCCTAGCGTAAGGTACACCTA", "TCTCTTGTCGTGGCGACTTACTTGCGACGAATATCAATTAGACTTCCAAG", "TCTCGGGTCTTGCATGGTGATTGGACTCTATATTGGAACGCGTACGGAAG", "CTGGTGTTTGTTCAGAGAATGGCACAGAATTTCTCTTCTTAGTGGTTCTA", "TCTTGCTTAGGACTACAAGGCCCCGGCTAGGGACCGGAATAAAAGAGTAG", "CTGCAATCCTTGCCAGGGATCGGATTTCTTGCGGTCTCTTTACCAGATCT", "ATAGTTGAACTGGTACGAAATTTCCTTCATGTGATTCTTAAACCCTTATA", "ATCCGACGAGCGTTGGAAGGAATGGTGCCAACTTTTATCCCGATCTGTGG", "GATCACCTCAGAGTCTGCCGCGTCAGCGCACTGCTGGTAGGTGCACTCCT", "TAGTATCAAGCCGAATCCGTGGGGGAGCAGTGTATCCGATTAGTATCCGC", "GCTTAGGGTTTAGATGACAAGTAGATCTTGCCATCACCCTAATCGGCGGT", "ACATTTGGTAGGAACGGCAGCCGCACGCGGCAAAATCGGGCTCCCCCCAA", "ATCATGTTCGCCAACGCCTATCCTTGTGGTGTATTTACTGCTAGGCTACA", "AATAACCAAACAGACCGTTTGAAATCTTAAGGCGTGATCTCGCCATAACC", "AGAGCGAAATCCTATCTGGAATGGAAAATGCAAGGGCTTAGACTGAGACG", "CACCTGTTTCTGGGTCTATAACTACCAGTTAGGTTCAGAACCTAATAATC", "GGAGGCAAGCACCGCGACAAGCACTATGTCGAGAGTTTCAACGTATAAAG"};
    vector<string> sequence3 = {"ACGCGAACGATGGGTACTGATTAGCGCCCTCAGGATTAAGCTTGCGAATG", "GGAGCGGTAATTGTCTGCGTGCATCTGGGGCTCGAATCGAGCGATTTGGC", "ATGCATATTCGCTATTCCATTCCTATAGTTAGCAAAGGCCGCGTTCACGG", "GACCCTCAGTCAGAGAGTCACGTGGAGGGATACGGGTGGACAGCCGCGTT", "ACCCCCTCTTAACGAATCTCTCGGGGGATACGCATTAATCCTGGCCGGTA", "TGTGCCAAGTCTGCGGACGAATGTGGCCTGCGCATGTCATTCCACGTGTT", "ACCCCATGCTGAATATTACGTTAGCCGGCGATGAACGTGGTGGAGCTGAG", "AAAAACTAACCCAGCAGGGGCGAGACGAGTCAGTAGTTTGCCTGAGGAAG", "CTTGCTCTGTGAGCCGTAAGACACCCTGCGAAGGTTATCCAAATTGACTT", "AGTGAGTAAGTAGCTTCCCACTCTTAACGTCCTAAGAGGCTGGGGAACGG", "AGCCTGTCGGGTTCGTCCAAACCGACATGATGTCTACACGCTCAGCAGGA", "CCATGTCTTCTTTGGTCCAGCTCTGGGGCTTCATGTTGACTGATAAAAAT", "AATGGAGATCCTAGCCTCAGCGGATGTTCTCCATAGGCAAGTGCCTGGCC", "TCAGTTCAGTTGCAGAATTCTGTCCCACAAAAGGTCGTGTCCTAAGGAAG", "CATGACCACAGTCGGGTTACATGAGCTGTAATGGGTGAAGATGCAAGATC", "AAGGGCTGAACCACAATACATCCTAAAATAAATGTGAACTAGGAAATAAA", "ATTAATTTCCAATCGTTTGATAGGCTAATTCATTAGTATATAGCTTGTGG", "CTGATTGCTGTTGTCTTAAAATTCTCCCAGAGACTGTCCTTATAGTAGGC", "GTAGTCGCACGAACGGTTCATGAGTCAAGGCGGGGAAACCCTAGTTCCAC", "GCATGCTCGGTCGAACCATGTTATCCGCTTGGCCTGCTAAATTGGAGGGC", "GTCGACGCCCCCTTGCAATGTACTGTTGAGCTTTAAAGAACCCGACATGC", "AATTGTCCATTCCAAGCAATCGCGGCCTACCTCGCGAATATATTTCCGAG", "CCGGCGGCCTCCCCTGTGATGTCGTCCATGCTTGGAGTTCCTCACGTTCC", "ACGGTAGGTACGGCACATGGAATATTGGACCGGGTTTCTAGGTTGATGGA", "TCGGCTACCGTTGTAGAGTGAACGTATTCTGTTGAAGCCTTACATAAACA", "AGGGAAGAAGAAATACAGCTCACATGTGTCACTTTGACGTTGAGGACACT", "GTAGTTGCGACAAATATTGGAACCTTGTTTGCCCTCTAATTACGTCCGAG", "CAGAATGTGATTCATCCCACGCTTCCTTCAGCAACTGTCTTGATTTCCCA", "GAGGGTATCGACAATTTTTCTGGAAGTGATAGGAGAAGTATTGGGATAGT", "CGCCCTAACTCTAGTGTACATATGAGACACGGTCGGTGGATCACATAGGC", "GCGTGGAGCAGTACAACGCGTAAAGCTGTTCGAATGGAGTAACGGACTTC", "AAATCCGGATTCCCCCGTCCAGTCTTACCTGCTATAGAGGTAGATCATTA", "GTAGCACACAGGCCTCTGATTGACCCGATCTATGAAAAATCAGTTTTGAG", "AAACCTGTCATTGCTTCTTCCAAGCCGAAACCTCGTTCTTCCAGTACTAG", "GCGATGAACATTCTCCAAATATGTGCTGTCACTCTGAATTTGGTACTTTG", "AGAGCCGTCGGCTAATACACCGCCACTCCGGACTAGCAACCTACTAATCA", "CTAAGGTTGTACATGCATAGGCACCTTTTATCCCTATCCGAAGAGCCGCA", "ACAAGAAGTTAATCGTTGATCCGCTATATACATCCTACATCTGTTCGAGG", "TTACCTTTGGGTCTGATACACCACGACTATAACCCCCCTATTGGCTAAAT", "ACACCCAGCAGACCAAGTACAGCCGTTAACTGGGTAATTATCAACCTGTA", "GCATTGTGCGAACGCAAGGGTCTAGCCAAGCAATAGAGCTCAAAGCCAGG", "TTCCCTAGTCGCTAGCCCACTATTGTTAGCTCCCATAGGTATCCGTCAAC", "CACTAATAGCCTGGATCATTAGTAAGCCCGCCTTAGAGCTTTTCCCGACA", "CATACCGCCTGGCCGGACTCTTGAGTATATAAATGTGAATCCTCGAGATT", "TGTCTCCCGATAGGCGAAACCTGGACAGGCCTATCTCTAAATACATGGGG", "CACGGAATTTTATCAACGAGAGCTGCCATAAACACTAGATATGGCTCATG", "TCGCAAACGTAAAGTCAGATCCTGCTGTGTTGGCGAAGTCCGAAGCAAAA", "CGAGACTGGCCCCTGGAGTCTCTGAACGCGCCTCCCACACTATGTCTTTA", "ACATGCGTGCGTTCACCGGCGTTGTTGAGAAACCCTAGTGTGCAAAAGCG", "GAGATCTGAGTAAATCTACACTCATCAGTTTAAATGCTAAGGATTAGAGG"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<string> sequence1 = {"CTACACCACCGGGGCGAGGCGCGACAAATTAGCCAAAGGCTCGTACCTTT", "GAATGCACCTAGGCCTAGCGAAAAACCTGCACGAACGTACGTCATGTCAT", "TAGTCCTACCAGGGGGCTATACGTTCCGTCGATCAAAGTCTGATCCTAAT", "GGCGCCCGCTGCCACACGACCAGGTCACAACGCATTCACGAATTTGGGAA", "TTGTACTCTTGGAATACACTTGTCGCTGAAGTGATCTCCAGGCAATAGTC", "TCACTTAAGACCCACTCGTCCAACGGTGGTGTCCCCGTCCAAATGGATAA", "CCATTCTCAATGGCCTGGTATTGGGCGTGTGCGCGCCGTTATCACAACAA", "CGGCTGGAAGTATCAGGAGTTGGGTGGAATTCTCAATCTTTTTAATTGGT", "ATTTGTACTGCGCCTTCCGAATTGATCTGTTGTGATAGGTTTTTAGAGTT", "TGTGCGCGCCCAAAAGAAATGCAACTAAGACAAATCTATTTGAAGCACTG", "GCGCATTGTCCTAACGGCGGCGGGCCCAGAGACAATCTACTGGCACCGGG", "TCAGACTGTGCCGGAGGGGTACCTGTGAAGAGGGTATGTCGAACACATGA", "CCCGGATAGGCTCGTCGGTCCCTCTGATGGTCCTAGATTTGTGAGGCGAC", "CTTATTGGCGGATGGTGACCAGAAGCAGGGTATGTCTATGTTGTGGTTTT", "AGGATCGGGGCACAACCAACATATAAACTGACCCCAATGCCCCAATGGAT", "GATTCTTAGTCGACATGCACATAATAAACGTCCCTCATAATGGCATAATC", "GGTAATTCTCTACGTCGGGTGAGGCCTAATATAAGGCTTGGCGACATTCT", "CTAAAGGGTCATACATCATTCAAAACCCATTTGCATACAAAGCAATTCGA", "ATATCTATAGCGGGGTTAGCCTTTGCTGGATGCTAACAAGTCGTAGTGTG", "TTATAGTGAAGAATCCGAACTGAGCCCTAATGCTGGGCCAGCTCTATGGC", "GGGCGAGGTATGCTGTACGTGTTCCTTGGAAACATGCGTGTTTCGCTGAA", "AATGCTTCAGACACAAGCATCGTGCTCAGGCTGCCTGGTTAGCTGCGTTG", "TGTTTTCGCACGTTCTGGCAGTAATACGCTGCAGCGGATACCCGCTTTAA", "GAATATACGCGGTATTTGCACTGCTTTAAGCCCATTCAATGTAATGGCAA", "TAAGGTCTGGAAGATCAGCCTATGAACAGTGCCTCGCGTTGTGGCGTTAG", "AGTAGGGGATGGGCGGCCCGGTGAACATGCAGCTCCATCTCGCAATGCCA", "AATCCGGCCCTTTGTGAAACAACCTTTGTGCACGACGTGTGAGGGTTGGT", "CAGAGGTGGCCCTAAAATCGATCACCCTTACTTTTCTTCGGCCGCTCCGA", "GCCATATCTCGCCTATTAGGACACCGGTATGATGGACAATACTGAGGATA", "AATAGCGCAAAAGGTTGCAACCAACGTACGAATTCACGACGGGGATGACA", "CCTCAAGCAGAGCTTAAGGACGGCTTCCGAATCCACTGGAAGAACGTACA", "ACCTTATTTGACTAGGAACACTCTTCCTAAGGAGCCGATGAAGCCAGCTT", "GTGTCTCTACCCAACACGTAGTCCTGAGATGTTGGTCCCCCCAGTCGCCC", "CAACCCCATCAGACGCTTTCCTACCTGGTTTAGATAGGCCCCAATTTCGT", "TCTGGGTAGCATAGCGTCTGGGTTGAGATTGATCCAGTGGTCTTGGACCC", "CGTCGTCAACCCACCTGAATTAGCACGTGTTGTGGTTGGGACTGACCGTA", "GGTGGCCCGGCCGGAGGTAAAGTTAGCTCCTGTATTATTGGTGCTTCAAA", "TCGATGCGGAACGTTCCTAATTACCCAAGGTTGGTGAGAGATGACAACTG", "CAAGTGAAATAACAGATCTACGGTCACAGCAGATCACCGACTGCCATCTA", "TATCTCTATGGCATCCATAATGATGACCGTGGGCCTGTCGAAAGCAGAAA", "TAACCAGCATTCACCAAAGCCCTATCCCACTCATGTCTGCAGTGAATGTT", "AGTAACGAGAGTCATGTCCTGCGTAGATAATCCACGAGCTTTGTTAAGCC", "GACTAGGTCGTCATCGCCTCTAAGTCGGAGTCAGGTCCACATCACTCAGT", "GTTCCCGTTTTATCGCTAGGTCCGACCTGGTCCCTGCGGTAATACGGCGT", "AGTCCGAACAGAGCGCGTAAGTTCTGCAGTCTGCGAATACTGACTCCCTA", "AGATAATCGCACTTTGAAGTCGTCAAGTGGGGGACCCCCTTAATGGCAAA", "TCATTTCGGACGGTACTCGAGTGTAGTGCCTGTCTTCAAAATAAATGCCG", "AGCCTAGGAAGCTCTACCTGACAAATACAACCAATTATAGCTGGTCATGT", "CGGACTGTTCCAAGAGGATGGACTACACCTTGCCTGTAGACAGATACATC", "CAACCTAATTAATTCGCGTTCGTGCGGTCTGACCATCCGGATCTCTATTC"};
    vector<string> sequence2 = {"TGTTATGAGCACGGTCAGTCACTAACATTTCCGAGGGTTGGTGCGTCTCC", "CTTTCTACCGGATGAATTGAGGAACATGAATGAGTAGCCCGCTTCTGATC", "AAAAGGACGCCCCATGCCTTTTCTAAGCTCGACTCGGAACATCGTGAATC", "CGGCCTTGACGTACGAAGGGAGGCACTAAGGAGATGTAAGCAACTGGAGT", "CCTCCGTATTTGGTTGACAGTACAGAATATGCGCAAAGTTCGAATAGATA", "GCCTCCCGCCAAGCGCGACGATTCCAATATGACCTGAGGGTTCTCACAAC", "GGAAATATCCGCTGACGAACCGCTATGACTTTAAAATACTTCCTCCCGGG", "ACCACGGTGCACGTGCCATATTAGGCATCGAGAGTCATCTAAGGGAGTAG", "AGCTAAATTTGCTATGCACGTTCCATCATAATCATTTGGACCCAAGCTGC", "GATCATTGCAGGTACCAACTGGACGTCTATGGGTCGGGCAATTCATCTGT", "GGGAGCTTAGCAAACATCGGCGGCGTGCATCTAAGGGAAGCATTCGGAGG", "TGCGTGTTGGATTGTAGAGCTGTCAAATAAAACGAAACGTGTATCGGGGG", "TAAGCAAGTGCGTTACAGCCTACGTAATCCAGGTGGCCTCTGGTAGCATA", "AGGGATCCTTACCTTATATAATGGACAATAATGTGACCTTATGTGTTGTA", "TGTCTGCGCAGCAATCTATGGTCGTTTTAGACGAGCATTGAGGCCGCAGG", "AACGTTGAATGATGAAGCATTCACGGGGTGATGTCTACTCTGTGGTGTAA", "CATAGAACACTATAATCATGCAGCCACGTGTAGAAGGCTTCTACTCTCTC", "GATTGAGCCATCCCTACCGTATTTGAGCGTTGAATCAATCTCCAACCGCC", "AGCGCGATTACCTGTGAACGTCTACGATGTCTTATGCATGGGATGTAGAG", "TAAGGGAAAATTTTTATATGGTCCGTTTGGAGCGCTGTCTCATGTTGCCG", "ACGTAATAAAGACTCTTGCCAATTCTCATGTCAAACGTGCGAACTGAGCC", "CGCCACATAATACTAGCCCGCGCACATTCTTTTGCTAGTCTTAGGGACCC", "GCCGCTTGCAGATTAGTGGCACAAATACTCCTCGTTCCATTCCGCGAGTA", "TACCAAGCGTTTTTGTTCCGTCATCCCAGCTTGGACATTGGGATAGGTGA", "AAGGGGCCGTTACTACCTCTGTAGGGCTGATGATCCGCGACGGTATGCTA", "CCGTAGGTCCCAGCCTTGCCCCCGCCGAGAACTACACAAGCTATGAGATG", "TAACAACTCGCACAAGACTCGCAGGGTTCAAACAGGTCGGTATTGGCGGT", "GGAGGGGGATACCAATTTACATCCACTGTGCTTTGGTAAGCGTAGGGTGT", "TCAACCCACATAGTGCGGCATGGCTTTGACGCCATGGGTCTACGTACTAG", "TGGGCAAGTTGATATGATTGTTGCCAGGGGCCCACTGACTGAACGGAGAG", "ATTCTAGTGCTAAGCTGCCGGTGGGAACCCTGTATAGCGGTTCCACGCCC", "GGGCGTGCGGACACAACCCTAGCTACTTGAATAACTCAGGACACTAGTGT", "CCCAAACGTCGACGGGGGCCGTTCGAGACGACATGAGTTAAGGTTCCATT", "GCAAGGTCGCGTTAGTAATTCTCCAACACAGCCCCGATGGCCGTTGGCCG", "ACCTCGTCGACCCGATCGCTGGGCGCAATACGGCCTACTCAGATTTAGCT", "TCTTTACAGTTGGACTGCGTCAAATTACTTCTCGCGTAACCTACCACTGA", "TCACCACGCTGAATCTCTAAATGTACCTAAGGTGTTACGGTGTCTGCCAA", "GACGGACCGTTTAATGCTGTCTATCTGACCGCTGGTGAAGACAGAGGATC", "CCCCCTAAGGGAAAAAGCGCACCAATTTTGGTTTCAAGGCCCGACCTAGG", "GCTAACCCCACGGTGCCATTTTTCCTCATCTGGTGTGACTGTGCGTTATA", "CGAGGGCAAGGCACGTGGGTTACACGCACGGTAAGTTGTTCGATGCGTGT", "GGCTTAAATTTCACATTTTCACAGTAAGACATGAATGGGTCAGGGTGGCC", "TAGGTGACCTCAATTAGAAGTTAGAATACTCGTTTTGCGATCGGCCTTGC", "GAGTGATTAGACTTGGGTGTGTTGTGAGAGTCTCTAGCGAATAACGCATG", "CAGCTTAGACAATAATGGTCGCCTAGAGAAAGTAATAGCTGGCTCCGGTG", "GTTCAGCGCTCAACGCTGAGCATAGGCGCTGTAAGGCGCAATCATTTTGT", "GGAAAAATCCACCCCTCCCGACCTATTCGGGGAGGCCGTAGGCGACAAAG", "TGACACCGTTACCACATCCCTTCGGGCTCTAGTCTAATAAGGAATTGCTT", "GGTAGCGGAGCCGGCCCAGCCCGCTACCCATCCCAAAGTCATATCGTTCA", "TCGAGCCGTGGTATAGAGCGGGGTCAGAGTCCATTGAGGGCGTGTTGTCC"};
    vector<string> sequence3 = {"ACAGAGACTGCTGGATCGGTATGAGGCAGGTCACATATGGACCGCGATCT", "TTACTACGGTTGACCCAATCTCGCACGGCACTGCAGTCCACTGTCAAACC", "ACTGGACATAGATGCTGGTACCCGAGTAGGATTTATAGTAGGTTCGCAAG", "TTTTGTCTATCCAGCGTTCAGGATCAGTCACTAACGGCAAGACGTCACGT", "GTGCCGTTAACGATGATATTGACACAACGGCTATGACCACTAGCTCACTT", "GCATCGCGAGGGCCGTAACTGGAAGCGCCGAGGGCCTAACTTTGCCTGAT", "GTAACCAAGGCGAATCCTGCAGACGATAAACTTGGATCAACTCTTTCTAC", "GCCGATACGCGTCATTCCTAAACTTTGTAGGAAATGGGTCGGTTTACTTG", "TGTGACAACTGCTGCCCATGCCGCAGAATTTGTAATCCGTATTGCGGTGA", "AACTCGAACCGGATGTAACCAAGGAGGGGGCAAATTCCTAAAACACAGGG", "GTGGAACGTACGCTTTCTTAAGAACCATCTATCATTATATAATCAAACAT", "AACTGTGGAAAGAGTTCACACGGGCCTCACAGTTGTCCTCCGATGGCCCG", "CCACAGGTCGAAGATTCGGCCTCCCGCGGCGACCATTCAGACGTCACAGC", "TTTAAATTAAGGTTAAAATCAAGAAGCGACAGTTGTTTCGCATGATACGC", "GTGTATAGCGCATAAAGGTACGATTGCCAAGCACCGTACAGATACAAAGG", "GCATAAATATGAGCCGGCGGATCAAGAATCCCGAAAAAAACTGATTTGAT", "GTGCAACCCTGTAGCCTAGGGTTTCTGTGGGGCCAAGTGAGTTGTCCGTG", "CGAAGCTATTGGGCCAAGAAATACCAGCCTCCGTCACCTTAGCCGGGGAA", "GTCTTTCGTAGTACGATAATCACTGAGTGAGTCTAACAGTGTCAGTTGCG", "CTAGCTTGATCGCACCGCCGACGTGCGTTATACCTTGACCTTTGGAGCGG", "GTACGGGAGAGACTATCACTTGCGTAGGGCTCGACTTAAAGGGCTGAAAT", "GCGGCGACGTAAAGTAGGATATTCGGACCGTTACCGCACGTGGTGGCCTG", "AGTGCAGCTATCTGGGAGTGCGGTTGAAACGATCCCAAGGCCGACAAGCA", "CTAGTAGAAGTCCAATTCATAATTATGCGGCAGGCAAGGCGTAACGTAGA", "CTCCTTTGCACGAATCTGAATTAAGAGCGTCCCGCCAATTTACCCTACCC", "AATCCTTTGCTTAGTAGGTTCCGACTCGCCAAAAAGCTTAACACGACGAG", "AGAATAATGATACTGACAGCTTTTACGCTTCGCGCCGACGCGAAGTGTTG", "TGCGGAATGCCCCGTGTTGCGATAGCATACCTTCTGAGTTCCTGACCCGA", "AGCTACTGAGTGGAGCAAGGGTGCGATGCGGGGTTAATTTACGATTGTAG", "TGTCCTTCTGGGGCTGACGAGCATCTATTAGTCGACAGCCCATACTATTA", "ATTGGATGACCATGTGGCGCGTCAGTAACTTCCTTTTCCCGCGGTAGCAA", "AACGGCCTACTTACCGCTGTTCTACTAGACGAAAGGGAAGCGTGGAATGT", "GACCCGAGGAAGCTATTGCGACGAGTATAGCGCCGCATGACTTACAGTAA", "AGCTGCCGTGCCCGTTTGGTGCTGTCAATATACGACTACTGGTCTAGAAA", "CCATCGAATCCGGATACATCGAGCAACTTGGATGGTCCCGAGGGCCCAGA", "ATCGACTATTGTTAATTAGGGAATCCCTCGTCTTTCGCAACATCAATTTG", "CGCTCCTAGGCTGTTAAAAGTTCTAAGCCGACTGTGGTTGATTACTCAAA", "ACGACACCGCGTCATCCTCAGCTTTTAATAATATTTAGGGGTTGCATCGC", "CGGGCAGTGGTGTTTCGCCGCGGCATCGAAACCTCAATTTTATCCCGGGG", "GGTCGAACGATATCCTATTTATCACTGCTCAGGCAGGGCGTCCCTCCAGC", "AGTGAAAGGGGTGACATTTGATCGGGTGATGGTGCAAATTAGAGGCAGCT", "GGACGGGAGGACGTTCTGAATCGGACAGGCCACGGATCGGTGGAGGGTCA", "CGAGCAGGTCGTTAAGCGGACCACAAGTCAATCTCAACTTCCAACGACGA", "AACTAGATGTTTGTCACTCGAGTTCAGGTATACGGTCGTGTCAGTTTGCT", "ATTGGCTGATTTTGCCTCGCAAGAAACGCTGGGCCACTGCCGGTATCAAA", "AGATAACTGGTTTCGAAAGCTAAAAATCTGGGACTCCCCCAAGTAAGGGG", "TCTAAGAACACGGAGGCCACCGTATCACGGTTGGGCGCCTTAGGATGCTT", "AGTCGCAGATTGCCAACCTCTGTATCAATAGTTCAGAGCGCTCACAAAGA", "GCTGGGGTGGCGCAACCAATATTAGCTGCCCTGGGTGATGCTCATGGCAC", "CTACGAGTACGACCTAATCTGAGAGGCCGCCCATCATCCTCTTCACCAGG"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<string> sequence1 = {"GATATCGCACTGACCAGACCACCAAAACATCCCATTCTGACGACACGACG", "CAACGGTATAACTCGCATTACCTGGTGAGAGTTTTGATAGAATTCAATAC", "CAGGCACAGCCATTGATATAGCTGACTATCGTCCAGGGCTAGCATTCGTC", "GCATTGTATGCTGTTGGCCGTTATCCGACTATGCGGGGTTCCTATCCATG", "CTTGTGCTTTCTTAGCGAAGTTGTAAGGCTATCATAGCTAACGGGGTCCT", "GTCTATGCGACGTTATGATGGCGCCCACTAGAATGGAAAGGACCCTAGTT", "CGGTCGGGGCCGTCATCATCTCGTTCCTGACAGACCGTGCATACTACAAA", "CGGAACGGAGCACTATACAGAGTATGTGTACCATCTAGGCACCTTGTCCT", "ATTAAGGATCGTTTTAGTTCTGTGTATGGATGTGTAGGAGTAGTATGAGC", "AGTCTTCGATGGTATGCTTTCCTGATGGCGATCCCTTAGGTATTATCGCT", "GCGCCAAAATTCGATAATTGTTCTGTGACCCATCGCAACGTACATTTCCC", "GGATGTGTTGGACTCCTCGATGAGTTGTCCTAATGAAGACCCGATGCGAG", "AGGATGTGACTTGCCTACAGATCCTGAGCGATTGGAAGAACGCAGATTAG", "GCGCATATCAGGGGCGCGACATCATATAGGGAGTTACCAGATGCATGCTG", "CTGTGTAAATAACTCGGATTTATGGTTGTTCTCCCCTAAACCCCGAAGCT", "AAAGTCAAGACAAAGTTGCAAACACCGCGGGCATGTTAGGGATCCCGTCT", "AAGCGTTGAGCGTTGATCTGAGAAAAGCTTGGGTCGGATAGGCTGAACCG", "ATACCGGTCTCGAGAGCAGGCCCTCTACTGAGGGCTAAATAGTTTACAAG", "GCCCAGCGTTACGAAAGCAGAGGCGTGGATATATCAACATGCACGAGTGT", "CAGACGTAGTCCGTTTAGTAGGGGCCCTCTCCCGTATGTGAGAGTCTTGG", "TAATCCCGTTGGAATACCGGAACACCCTTGCGAACGGTAGTCCCAGAGCG", "CAGGCTATAAAAGGTCAGGCGTCCGCGATAAGTCCGGTCTAAGTCCTCCA", "AACAAGCGGATCGCCTACACCATCACTGTTGGAAGATGGTCGGCCGGCTA", "TCTATAGCCGCGTGGCTGGCCGCCGCGCACTAATAGAAAACCCTTTCCCT", "TCTTCGCGAACCGGCGTTAAGCCAGGAGCAAACTTGGAGGTAGCCAACCT", "TATAGCGCGCACATAATTACCAAGACGGATGTTTGGGATGAAAACACACA", "GAAGAGGTGCAGATCATATTCTCCTGGTTGAAGAATCCTGAATTCACCTC", "ACTCGGCTTCTCTATCGCTTCGTAAAGAGAAAATGTGTGTGACATCAAGT", "AGATAGATTGCGTACATAAAAGGCTGGCCTGCCTAGTTAACGTATTGCTT", "AGCTAATTCGGGGTTGCTAGGAGACCTAGTTTCGCCAGATAGACCCCTAA", "TACTCAAGGCCTTTCGGACATGAGCATTCCACCAGAATTAAAAACCTGAT", "GCGGTAAAGTCTGAGTATCCTAATACCCGTCTAAGTGGACGCTATACCTA", "GCCGATTGTTAAACCGATTTCGGGTGTAAGTCAGGTCGCTGCATCACGCC", "TGTAAATATTCATATTTACGGTGATTAGATGGCCTCAGTTCGCCTTGTCA", "CAATTTGTTTGCCCGTCGGTAAAGATACTCGCTGTAACCGATGGTGCAAA", "ACGTCATTAGATCCGAAATGCAATGTCTTAGAATTCTTTCACAGGCAGCT", "CGCAACGGTCATGTGCTTAGTGCTGAGGAGTCAGACTAGCGGGTCTAGCC", "ACACGTGCTACTATTAAATCGGCCCCGGCAAATCGTGTGTAACCATATAG", "TTTCGTGTCGGAAAGGTCTATCGATCGCGGAATGTCTGTGAGTGATGATG", "AAACTTCGCCTTGTGGCTTCCGTCCACCGTGAACTGGTGTCGAATCTCTT", "CGGTAATTAGTACCACTAGGACCCTACAGAGCAATATTCCAGTGATGAAG", "TCGAGTCCCGAGTCTTAGATAGCAGATTCGAACTGAATGATTACCCCTGC", "TGGCCCCACGGAAATGACGTTACGGCCCATGGAACTTACCCGATTTTCCT", "AGACCGTGAGCGCAACGACATTAAGATTCTAACGCTTACTCTTAAAGATG", "TCATGGTACTAGTTGATATCTAAGAACCCAGATTTTCCAAAGATTGAGTA", "ACGTGTTTATCTTAAGGGATTCGCGCTGCGGGAGTATCGCTCATTATATC", "GCTCTCTAACCCGCCTGGCTTGGGAAATATCCAGGTGTCATCTATTCGTG", "GCCGAGTGGAGTAAGTTTGGAGGTACATAATCATACTTGGGGATGCCTAT", "ACTTTACCATGCCGAGATTGCCGACCTCGGCGTGATTCCCGATTTCGCGG", "GAAGAGACGACCGAACGTTCACAGTTTCCAAGTTAACATAGATCCCTTGT"};
    vector<string> sequence2 = {"CTATCTAGACTTTCTGTTAAAGATGAACTACCGTCTAATAGGACATGGAC", "TTCTGCGGGTCTCTTATCTCCGTCACTGGCCCCGGACTTGAAGGAAAGGA", "TTCGTAAGGATTAATCATTCGCTAAGCTACGCGAATAGGCTGAAGTTTGT", "ACGTGCTCCTATTGATTGTCTGGCGGAAGCAGCCTTCGATGGCAGTAAGG", "AGCCTATACCTATCGCCTAAGCCTAATACCTGTGTAGTTGTCGATGTAAA", "GCAGCGATAGTTTCATTTTCTGAGGTTATTTAGAAGGAGTACGCCGTCAT", "ACCTCTGAATATAATTGGAAAAACCCGAGGTGCGGCGTTTTACAGCAGTC", "TAATTGTACTAGAAGGTGCGAGGAGACGGCCCGGGCGCGTTATTAGGCTA", "AGAGACATCCCCGTATAATCTTTACGGTGATCGTTGCTTCTCAATGACAG", "GACTCTATCGTGGACTCGCCGTCTAGGGCGGCGCGGTTTTCCCCTTCTGA", "TCAGCTGCTGGTTTTCGATAGTGTAGAATTGGGGCGTTGCAAAAAGTGAT", "AGTATGAAATGTGCTGAGACTGCTGAACTGGACATTGGCAGCCGCACACT", "GTTCTACACGAACGACTCAGATACGAGAGGCCATGAGGTTGCGCCGCGTT", "ACGTCCGATGAATAAGAATAGGTCACACTAGTCTTTAACTAACTGGTCCC", "AGAACAGTGATCCGGGATCAACATAGGCTCGATGCTTGAAAAAAGCCAGT", "GAGCGAACATCCCCTTAGGTATGGTACTTATTGTATCAGGATGCTCGCGC", "AACCTTCCACCGTGGCCGGACCAGGGGGGTACGGCGGCTTATGTGGGGCT", "AAGCGTCGAAGCTCTCCAACTACTGTAAATGCGTCAGTTGATAGTCTAGG", "GATACACGTGTTCGTGTATATGGCTGCCGACAACGCGATCGCGGAAATAA", "CGACGCTAGTCTTGCAGAGCCCTAACTATCAATCGATGAATCGTCTATGG", "TAGATTGGCAATGAACTCTCTAACGTCAATAATAATGCCCACCAGTGAAG", "TCCATACGTTTCTTTTAATCATGACACTCTAACTACCCGAGGAGACAATG", "CCCCGGCGATAGCGACGACGTTACGGGTACAACGCTCCACGATGCGCCGG", "CTGGACGTTTGATCGAACCGCCGTGCAGTGCGCGAACCACATCATGTACC", "ATGTATGACACGCCTTACCCTCGTACAAATCTCTCCCAGGTGCCATTACC", "CGGTTGGCATCAACAACTCGACGTTGATATAGAGCGCGAGGCCGTTGAGA", "TCGGTCACGCATAAACGACGCGACACACAATTGCAAGCCTTCGTTCCGGA", "GGGGTGCCTCGGCCCGCACATAAACCCGCCAAGCTCACCCCAGGTGTTAT", "TAGTGGGTTGGTTATAACAGACAGGCTCTTTCATTTACTACGGCCATCTT", "GTGTTACCTACTGTACATCCGCAGTGGAGCTGTTGTTCGCATTTAGGTTG", "TCTGTCCCTTTATAAGCAACTAAAGGCGTTCGCAGGACAACAAACGGGTC", "TTAAAAGTTCAATCCACTCGGCTGTTGGGATACGTGTAGTAGGCTTATCA", "AGGTGGTTGATTAGCTGAGAATTCCCGGAGCGTTCACAGGGGAAGAACAA", "ACGTCATACCACCGGCCCAGAAACTCCTTCGCTATATCGGTATTCTATTT", "AGACCGCGTGACTCATGCCCGATCCTAGGACGCCCTGCTGTGAAGTTTAC", "CCACCTAGCAGATAAGCCCTTCCCAGGTGCCCTACGCACGTTTTACGACG", "CAAGACCCAAGGGGTTTATTCTATGACATGGTGAGAAGCCGGACATCTAC", "TGCAGTCGCTGGGGAAACAGAGTTTCCTGAAGCCACAAAGCGCCTAGCCA", "TAAGGCGTCTGCGCCAGGTAATTTGCCCACAAAAGTTGTGTACCAGCATT", "TTAAACGCGCGAACGATTGATGGGCTATCATGAGCCATCTGCACACTCGT", "GTTGAAGTACGATGTTAAGTTTTGTTATGGGTGTCCTAAACAGTCAAAGG", "GTATGATCAGAGAGTCCGCCGATTATGACGAAGCCGAACACCTCGATCGT", "GCATTCGCTCATTGCAAATATATAGATCTCATACTCAAGTCATCCCCCTT", "TTAAGCTCTTATAGAATGAGTACAACTACACTCGAAAAGCTTCGCGCTAA", "ATCTTACTTGATTGGCACATAACTAGGATTTGACCTGTCTGGAGCCCCCG", "GCTCCTTGCCGTTGCAACCACACCCGCGTGCGGAGACGTTCAAGGAGTAT", "AGAATTTCTGGATTATTTCCCCCCATTCCGAATAACGCGAAATAATCGTG", "GTAAAGGGAACGGGATCTCCTCCTGGCTAGACGACCGCTATCTGGAAGTG", "ACACATGAGCAATTCTCTACACCGTGAGTATTACGTGTGAATGGGCGTAA", "ACCTTTACAATCGCTTGAAATTTAGCACCCGTGATGGTCCTATTGTTCAG"};
    vector<string> sequence3 = {"CTTCGGTGCGTGCCCCGCAGGGGAGCCGTTCTAATGGACAAGAACGCTGA", "TCGTTTCCAACTTTATTGACGCAGCCTCGATAGGAAAATGGGACCGACGA", "GGATCCCTGGGAACCCTATCACTGACTACGGTGATCGTAGAGAACGGGAT", "GCGGCGCATGAAAGTTAATGAATTGCACCATAATCTGATACGGGTGGAGG", "CCATTGACAACCGAGAGTCTTCTTCTCACACTCTTGCGCCACCGCGCTAG", "GTGTGCCGCCCCATGGTGCAGCGTCACCCGCACTTAGCCAACGGACCTAC", "AAGGAGCATATTGAGGGCACCATAACGCAGCACGGCGTTAGGCTGTCGTG", "CTATGTGGACTTCCGCTTCAGAATCCAGATCATGGCTTCCCTTGTCAAGT", "GTCACCATGCTGACGATCCCGGGCGGTGCTGGTCACAATGAACCCCTTGG", "GTGTGCGGGGAGTACAGAAACAAGATAGGGCTACTTCACGGCTGCCATGA", "ATGGTCGGTTGGTAAGGGGTTAGTTCCGCGGAGTTTCTCCTGGTTGATAG", "TTTAGGGTATCGTACGTCATAGTACGCTTCTTTGCGCCTAGTGTCGATAA", "CACTATAGAATTAGACCATATGTGCTTAAAGATCGGTCTATGCAAGGCGG", "TACGCCCTCCACCCGCGTTATCCTGAGTCTTCGGATACCTCTCGTACTTG", "AACGAGGGGTTGCGCACGACGGCGAGTGTCTCTAGAGAGCCAGCCACGGA", "CACCTAGTATTTCCGGTTCCAGTGACCGTGACCATATCTCAACCTGTTGC", "TCTTAAGCAGCTAACGCTCCATGGGAGTTAGGGAATAAGCAGTCGTGTTA", "CCTCGCGAACATTGGGTGTCAGGCAGTAGGCAAATATGTGATAGCACACT", "ATAACGTGAGAACTACAGAGACCGTAATAAGGCTACATTGATCTGAGATT", "ATATCTCATTAGATCTGGGCCTCCTGCAGCGTGATACACGATGGGCTCTA", "AGGCAGTATCTTAAATCATTATGCGGTGAATCCCCAAGATTCATTAAGAC", "CCGTAAAGGCCACTAGGTAGCCATGATTTGTGTAGAACCCATTCTTCGCT", "AACAGATTAGGGCCTCCTTCCGCGAAGCATGAAAATAGTCTCGCGCGCCG", "CGGTTAAGATGATTCTACTAACACTAAGCCTTGACTCCTACTTAGTGATT", "AAACACGCTAGGCGCACGGGGTTGCAACAACCTCCTCGGGACTATTCGAG", "CTCAATTCTTCAGATAAAAGTGACGCATAGAACGACCCCTTGAAGGTATA", "GCACGATGAGGCCCTTGTTCCTCTGCATGGGCCCGCGGCCGGTGCCGGAA", "ACTACGCGACCGTAACGCCAGGCAGTAGGTCGAAGAAAGTAGGTGGGGCC", "CTTAATGTTGCGTCACGTGTTTCCTACACTAGGTCCTCTTACTTTACAAG", "CGATGGATCCACAGGGACAATAGTCTTGGCCTCTCCAGATGGTACGGGTC", "GGACTACGGGGCCTTTGTCTACGGATCACCTAAGGGCCTGCCGCGTATCG", "GACTCCGGGGCCTCTGCTACACGGCCATTACGAAGCGCATGTCACCAGAA", "CCTGCTTGATTTGGCATCATACTCTTTAGCGTTCAGGATTTCTCAAGGAC", "AATCGACGGGCCGTCATGTGCAGGCGATATCATAGGCACAGGCCCCTGCA", "TTGTGTCGAGAGGATCAAACGAGAAAAATGGTGAAAGTATAACTCGCTTA", "AGGTATGTGTTGCCAACTATACTAGAATGTTGAGCTGCAAACCACTTCAC", "TCAAATCGAACGTGCGTAGACTGAAGTCTAAATGAACACGGCGAACACGG", "CGGCGTCAGGTGAGGTTTTGTTGCCATTGCACGTTGGGGGTAGTCCAGCG", "AGTGTATTTAACTAACAGACCTTCGTCTCGCGACTGGGTAATGGAAGCAA", "AAACAGTGTTTACTGCCCGCCTGGATGTACCTAGGGGCATCTCTGAACGA", "GCAACGACTTCTCCTATCGAAATTCGTCAACGCTTTGCGTTTTCCGTTGT", "ACCGCTGGGCCAAGAACTATATTGGATCGCATACCCGCGCGTTCGGCATT", "CATCTGGCACCGAACTATAGTACTACTTTTAAGAGACTTTAGTTGCCTGC", "TCATCTATGTTACGGGTGTTAAACCCTCCACACGCCCCAGTACACTTGCT", "AGTAATGGTGGCACCAGTAAAGCCTCAGACATCCGGTTCACGGCCACCAA", "CGTACAAGTTTCCTGTGTACCGCAAAGGTCCAGGTGTACGACCTGGACGC", "CACCTAAAGCTGTGCCAGCTTCCGCAAGCGTACGTCATGCCGGCGATGAA", "CGGCTCAGATAAGAAGTACTGGTACTGGCTCGCTATGACTGTATGCTTCG", "CGCCAGATACCAGCTATAGTTATATGCGGGACGCCACGATTGCTACGGTC", "ATAACAATATGAAAAGCTTCATCTTTAGCGTCATCCTTTAGGTAGTACGG"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<string> sequence1 = {"AGAGGCGGAGCTTTTATGCAGAATGGAACTCTCTGGTAGACACAGAAGGT", "CCAGTGCTCTTGTGTAAATCAGATAAGTCGAAGCCGCTCGTGGACGGGTA", "GTGATAGCAAACCCCCCATTCTTCCCCAGATCCGTGTAGCAGGCGTATTA", "TACAACAGCATGATTCTGATTACGAGACCGAGTCTTAAAGATGGACTTGC", "GCTAGTTGCGGGTTGGAACCGTATCGCAATAGGACTCCGGATGACCGGCT", "TGAGGATTGCCCTTGTTTTCGGACGTCAGGGAGACCTTAGGTCAGGACCG", "GACACCGCCAATCACGTGCGTATGGACGTTTACTGACCAGGACGTCGTTA", "CCACGTATCGGTGCGAATACCGTATCCTAGTCTGCTGACTTGTGCGTTAT", "CGTGGATAGTCAGGAGTGGACTACGGGCTGCTCTAGGCTGCAATCCCCAA", "GAATCTGCGGCCTACTGATTATTACGTACTGCTCGCTCTATCACATGACG", "GATACAAACAATGGTGGTTTTGTGCAAAAGTCGAGTGTTGTGCACACATA", "GCGTGAGAGCCACCGAAACTCAGTCTAGTAAAGCTGTCCTTAGTGCTTAA", "CTCCCGTGCCAGCATCACGGATGTGTCACAGCATATGGGGCGATCCCAGC", "ACAAACCGTCAAACGCCCTCCGGGCATTCAATTCCCCCATCCAGATTAGA", "TAACGATCAAGGCACGAGAAAAGGCCGAGCCCCCCGAAACAACTCGACAG", "TGCTATGCGTGACCCCATGTTATTGAAGATATACGCTAGAGGCCGGTGAT", "TAAATCTTAGCCTTACCGAGAGTCGGCGATACTGGAGCAACCAGGATATG", "AGCTGAGCCCGTACGCGTCGACGGCCAAATGCTTCATTTATACGTGCCGT", "TGAGGCTCACGACCCAGAGCGGAGACCCTATGTCAATCCTGGCTACGTTA", "TAGAGCTCCGTCTCATTCCGCGTGACACGTAGAGCCCATAACGCCGTACC", "TACAGGCCGCGAGACACTAAACGGGAGCCTCGACTCCTACTTCTATACAA", "GGTTAATGTTTGTCCCGAGCGGGACATTCGGCGGCGAATGGGGCAATTTC", "AAAGGCCTTTGGGTGGCTTAAATACCCCTAGAGCTTACCTGCTACCTGCT", "AGGTGCATAATTACAGTTGTTCTACGCACGTCCAACTTCTTATGGCCGAA", "CGTTTTGCCCTAAGCGATCTAGGCATGTTTAAAACCCACCATATATCTTA", "CGGGAGCATCATCGTAGTCGCTAAAACTGTTTTGGCTTTATGTTCCGGTC", "AAGGGGACGAGACACTGTGACGGCTGGGACCGGTCAATGGCTTAATAATC", "TTAACTGTATGCAGCTTTTACGGGCAAGTTCGTCACGTGTCAAACCTGCG", "TGGACAAGGACGACCGGTTTTGTGTACTGATAGTTGTTCATCTCGAAATA", "ACATGTAAACCTCGGCGATACTCTCGTCTGGAACCGAACTTCTGCGAGTA", "CAGTGCTTAACAGCTGAAAACCCTTAAAGTGCAATCTAGCGATCCAGTTC", "GGACTGGACAAGGGCTGATCACGTTGCGCCTCGATTTAATATTTATCTTT", "CCCGAATACAGTGCGTACATCCACAGTTGACCCCGCGAGCCAACTGTAGA", "GTGAAGAAACAACATATTGCATAGCTCGTAGCCTACAACTGACTGATAGA", "TATACAGGGGGCTAACTCTTCGGCTCTCATCATCTCGCCACAAAGAGGGG", "ATGGGGACCGGTTACAATTGTTCCTGCTGTATATCTGAAATGGATTCTAA", "AAGGATGCGCATTGATGTGAGGCGTATCAACACCGCGAACTCGGGTTATA", "ACTTTGTTCGTGGCAATTTCAAGATGGTGAGTCTGGCGGAACCTAAGACA", "CACACCCGGACCCTAAGCGATGTTGTTATAGATCGGCATGATGATGACAT", "GATCTCGTTACCGTCCCCTGCCCGGCAGAACGGCCTCGAGCTAAAATGTG", "CCGAAATCCTCCCGGTAGGCGCTACCCCATGGAAATGCGTGTGTCTGTGC", "CCGGAGGCGTGGGCCCAATTGGCGGTATATTTTTGAACGGTCAACACCAT", "AATAGGCGGAACTTGACCTCATAGACGTGCCACACCCCCCCGTTGAACTA", "AAGGCCAGCCGAAAGGTAACGGGACCCCCTGTCGCCCCTCGATAAATTAC", "CCGGCGAGTCTTGTTACAACTAACATGTGAATAGAGGTGCGCTTGTCTTC", "AGCAGGATGGTTCGATTAGCCAACCCCGCCCTCTTTTAATTATTGCTTAG", "CGAGTTCATTAAAACCATTCGAAACCCGTCAGGTAACTTAGAGTGCCTAG", "TGTGCACACAGAACGTCCTGGGCTTCTACCCTCAGCATCCGTTGTCGTCT", "CGTCATACGAAATATAGGGAACATTATGAGTAAGCTGGACCAGGGTACCA", "GTAAAGACACGATTATATACACTGCAGTCAAACAGTTACGGGCGCCTATC"};
    vector<string> sequence2 = {"CTTGCATCAGTCCTCTAGATGGTCACTACGTGGTTAGGATTGGCTATCCC", "AGGAACCAATCGACTAATTCTGGAGACCTCGTCTTGAAGGTTCACCACGG", "CGACGTCGGCGTCCTGTGCCAATAGTAGTAGTGAGTATAAAAGCGAACCG", "CCGTAAGACCAGCTGAATCTCTTGCGAATTGACTCCTACGTCCGTTGTCT", "AATGACCATAGACCCGTACCCCCCGTTGTACCTAGTGATCCTCGGGAACA", "GGTTAGAAACTCAACTTCTATGTGTGAAAATAGTCTAAAGCCTGTCTGGC", "GGTGACTCACGTTACAACTCAGAACTGAACACTCGGGCCCACCTGCCGCC", "CCCTTGCTCCCATTTGAAAGAGTTGTCGGCGGGATGGCTCTCCGCGAGAC", "CTTCCGGGCGCGTTGGCTACCCGGGACGCTGCTCCCTTTGGTCTGCACCC", "TAATTTAGGTTAGTAGGACTCCTGGCCTTTCAAAATGTTGTTCAAAAGGG", "CGCTCGATCGTTTTTACCCCCTAGTACCGCCGTTTGGATTAACGTTACAA", "ATATTTGTTCAATCGAATTGCCGGCACGCCCCTTGACGGGTTTGTTAGGA", "GTACGAGTTGGGGTTGAAAACGTCAGCAAACCTTGGGGTGTGTACAACGC", "TCCCACAGGATCTCCTGAAAACTACAGTTCGGGATGATGAGCTCTGACCC", "TTTGTCACGGCACTTTCGTGCATTCAGGCCAGTGGCTGCACCACATCACT", "GATTTCTTTCAATGTATAATTGTACTCGGCCGTCTCGTCGAAAATCTGGA", "TACCAGGGATCCCTGTGATAATTGCAGCCGCGACAAAGGCCATTCCTAGA", "GGTTGCTTGCTGTTGGACAAAACGGTACCTTACATCCATCTCTATGTGAC", "GGATCACCATCCTGTACCCTAAAGCCGGTGAGTATATTCGCTGATTTCTA", "TCTTCATCACCCAGGTTACACATTGCGCGCCAGGTGCAGGGCATCATGCA", "GGTACGTTATGCTATGGCTCTGCTCTTACACGTCTGTTACAGGTTGGTAA", "GCCACATAATGCTGGTTTATCACTTAGTAAACAAGTGCCAATTGGCGAGG", "TGGGTCTCGTTTTATATTGATACGTCACATGAATCCCGAGTAATTTAAGC", "TAAGACTTCTATCTTGAACTTGATTTAAGTAAAGGCTTGAAGGCAGTTCA", "GTGCCGCACATCCGCTCCTATTCCAGGCTGAAAGGAAGTATCTAAATTCC", "AAGCAAAATCGTACCGAATCTTTTCTCAGACAGGCGCCCAAAACGCTCAC", "TTCTCTTACTAGTGGAACCTTCACACGCAGCACTCTTGTGTTACAGGCCG", "TAATACAATATACTAGGTTTGCTTTGCTCACGTCCAGATCTGTACGGAAA", "GGGCGGGCACCTTCATATCTACATTGCGCTACTGGACGCTTTGCGTTGGA", "TCATATAGTCTGTTTGTGTGTATGAAAAGAATACTTTTACTGTAGTTCTC", "CCGTAGGGGGATCAAAGTAGGTTTCGGAATAGTCTCTAACGCGCCACATG", "CGGTGCCGTGTCCAGATAGCCGTAGCGTACGGTAGCTCCGTCTAGACGCA", "GTTTCTACGTTAGAGGTCCTGAAGTGCGGTTGACCACTCCACGCAGTAGA", "TATTATTCCTATGGGAGTGGCGACCAGTTTGCAATTCATGTTGAAGCACT", "TATAAACGTAATTGTGACACCTCCACAGGATGGCCATGTTAAATGCATCT", "GGAACACTGGTATAAGGGTGAAAAAAAATCCAACGGTATTCCAACGGGCA", "CATAGGCATTTTCGTTAGAGGATGATCCCCGTGCAGGACTCATAGGCAGG", "GTGGCCACCCGCTGTAGAATTATCGCGACCCTGGGGCGCTTTGCCGGTGC", "CTCTCTTTAGTGACTGTGTCGCGGAGAATCCCACGTGCAGGTCAGAGAAT", "GGGGGTGTCCCCACCTAAAAACTGTCGATCCATGCCGGATATATTATGCG", "ATATGCGCAGGTGTGCATCGCTGGTATGGCATGTCTGCACTAGGGGGCGA", "ACAACCAGTGATGTACATTAGTAACCAGAAAATAACCCAGTAGGTCACTC", "TATATATATCGCAGCGTCTGTGATCAACTTCCAACTGCGAGCGTGTGCTC", "CGTGCCGCCCCAGCCGCACGGTGTAAACCCGGACGGTCTACGCCAATTTC", "TGTCAACCCCGGTCCTGGGCAATATTGACAGCCTTAGCAGGTGATATTTA", "CTCACGCCGCGTGCCTAAAGGAGGCCTAGATGGCTGCTATCCGAATCTAG", "TTGGGCTCTTTCAGAAATGTCGGTAACTAGACTGAATCAGCTCCAATGTC", "GAATCTAAGATTAATTAACGTCCGCGTCTCCCGGCAGTGTCCACGTAAAA", "ACGTTAACTGGCGGCTCGTCTTTCTCTCTGTTGAGTGGAGAATTAACTAT", "ATCTGTCACAGCTGTGCACATAGAGATATTTGCCCGTGTCATAAGCCAAT"};
    vector<string> sequence3 = {"CTCATTTACTAGAGCGGGTTACTGGACCCAGTTCAGACCGGCATCGGACT", "CCTATGAAGTCCCCTCCAGGATCAAAAAGGAACATTAAAAACACTTACCC", "TATCCTTTATTCCGACCTACCCTAGCTAAGCATGAGCGGTGACAAGGGGT", "GAAAAGGCGGGCGACTCAGACCCCATACCGAACAATCGAGCGCAACCTAT", "ACGCATTGCGCCTCGCCCGCCCGGGACTAGCACCCACGCGCCAGGCTTCA", "GGTGAATCTCCATCGCACAATTTCAGCCAGACCCCTGATGTTATGCTCAC", "ACTCATCGTTATTGTCGGATCGCTAGGGTCTTAGTGTGTCCGACAAACAA", "TATGATGAAGTACGGCCAGTATATAGCAGCTATTCGTAGCTATGAGAAAC", "CCGTATAGTATCGCTCTTATGCGCACTATATGGGGACCCGCAGGAAGCGA", "CCGGCATATTTGGGTACCTTAGCATAAAATATTGACCTGGCCGAAAGCCG", "TGATCCGACCCCGAAGGGGCCATAGTATTGCGGTGAAGCGGCGGCGAGGG", "ACACCGAATGATGACGAGGTTGACATTGGTCTGTTGGTAGATGGATAAAG", "TAGGGAATGCGGGTCTACGGCATCCGAAACCCGCATAACATCATGTAGAG", "GATTGTGCAGTTCGTCTCTGCCAGGCGCTCGAGATAAGCCCTATAACCGT", "TGCTGATATGATCTGAAGATTGACCTCAATCGGTGGTTACGCCTAACTTC", "CGTGAAGCTTAGGTTAAATATGGGAGTTAAGATTTCTAAGCCGGTCCTAA", "ACGCCGCCTCGAAGTGGCCTTGACGAGGTCAGGTCTTTACTGCTCATCCG", "CGGCTAGGAGACCTCGGTTCGGGCTAGGTACGATCCCAGAGTAGTACTAA", "CCTGCTACGTTAATCGTAGACCAACCATATTGTTGATTACGTTGCCAACT", "AAGTCCATACGTAGCAGGAGCTTGTCCGCTCTGCCGGTCCACAAGGCTCG", "GATGGTTTCGATCAGTGGGGGTCCGATCATCATCGGCATGGAGTGTTCAA", "CGTACAGCTGGAGCGCTAATCAAGAAAGGGGCTACAAATGTCCTGGAGCT", "GAACATAACGTTCGGATCCAGTTTTTCATGGCAGCTTTAGGCGTATCAAG", "ACTACTATTATACGATATTTGGGGGCTAGGATTGGCGTATCCCGGTTGGA", "CGTTGATCCCCGATTCTGAAGATACTAGCGCTGTATGGAATTCCCGGGGC", "TTGCTTGTCCCCCGCTTAGCCCTTAGATTTCACACCGACAGACCCATATC", "GTTTTACATACTGTCAATTTGGGCAATCAAGCAGGAAGATATGGGACTTA", "ACTCGTGGCGCCTTTAAGCGTTCTCGCAAGGCAATCGGGCGGAAGTGCGA", "TAACCCGACGATTCGTGCTGTAACACGGCTGTAAGAAGCTTTGCACAATG", "GGATTCTCTGGACACGTCTTGTTCAACACATGGCGTATGTGCTGAGTATG", "GAGTACGGCTCTAGGACTCCGCAATTCACGAAAATTTGTAATCCTCGCAG", "GGTAACAAGTCCCCGCCAAACGGAGCAACACACTTAGTGACAGTTTGGCC", "CAATGCTGTTAGTGGATGTCTATGTAAACATCGATGATCGATAGCATCTG", "TCGCCCTCCCTGCGTCACCGGATCTTTTAGGCGGTCGCGCACTTAGGTTC", "ACAAAGAGGCCCGTCCACCTAGTATTCAATTATCCAAGCATTCGACCCCA", "AACGCCTACATATACTCGGTCGATAGGCGGAAACGTGATACTGATTGGAC", "AGGAGGGTTATAACCCCCGGTTCCAACGTCTACGGCATGCTCTATTTCAT", "GAGTTACCCGACAAGTCAACCAGGGTGATGGTTGAAGACCGCGCTGAGGC", "CAAGTAACTGCACGAATCCTTAAACGGTGTGAGTCCCCACTATAATTCGA", "TTAATTTCAATGTATAAGCGTACATCCAATAGTGTTATAAATTACGCGCC", "ACGGCGGAGTGCGGGTGGGTTGCGCCTCACTACCAACTGCTTACGGTGGA", "CCGGAGTTACCAAGTATCGAAAGCCCCACTACCGGTTTCGAGTCTAATAT", "AGTCACTATTCACACTCAATCCGAGATCCCTCCTTAATCAGAGGCATCCC", "TCTCGGCTGATTCCTGCTGGCTACTGGGTACACTGCGATTCACCACCACA", "CGGGTCTGATGGTAGGCTCCATATGTTGCCCGGGTTAGTTTATAGTTCGC", "TAGTAGGTTCCGCGACAGGTATAGCTTCGGAAAAGCGTTCCCGGGTATCT", "CGGAACAAATTGCCCCCTTCCTTGGGCCCGTTCGGCGGTCAAAACGTCCT", "TGAGAGCCAGTTCCTTCCTCTGTTGTCTGTTATAGCACCCGACGCTCTGG", "GTTCCGACTAGCAGAGACGCGGCCTCAGTAATGACTTCGGTCCCGACGAC", "AATCTGGAGTTGTGATACATCTCTTACGCTAAATAACCTTGAATTCCTCA"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<string> sequence1 = {"TCCGAGAGGACTGTATTACTTCACGTCCCCTAGCCTTCGCACAAATAGGG", "AATGGTTAACGTGTACCATTCATGTCATACGAAGATCTCCGACAACCGTG", "TTCTTCATTGGAGCTCTGGAGCTACCGCACTTGCCTGACCTTCATCATGT", "ATTCAGCGTGACTAATAGGTTTCGTACTGACCGGGCAACTCACGACTCCT", "GTACGGTTTGTCGTCGAAACCAATTCAGTACGTTTAACCTTCGACCAATC", "GACCGCCGTAGGCCATTCGAAGAGTACGGGTTAGCACTTGTCGGTTCTAG", "CCGCCAAAACACCTGTGGGGCATTCCAGAAGTGTGTCGTCATTTTAACTT", "AGTCACCGTCTGGCTAATAGGCCCGTCGTTCAACATCCTCTCGGCTCCTG", "TGGACGGGAATTTCGGGTAGTGTGGTTACCATCCCCATGTTTCGGTCCCC", "GCAAGATCGGCTGTTCTACAGAGCTCACATATGCTATTTTGTGGAATCAA", "ACCTTACGGGAGGGTAAGATCTGTAGCTAGTCGCTGGGTGCCCAAGAGTG", "GTCTTTATCCAGTCTACCGTGAGCCTGTAATCCTCCTCTTATTATTGGCA", "CACTATTCGTCCCCCAGACTGGCTGAAAGTTTGAGCTGAGATGCTAGAAA", "GCAGCAAGTGGTTGGCTAGGGCACCGTCTATGTGACGCTAGGGACCGCGT", "AGTTCGCCCTTTCCCGCGTTCAGTATTGTCGGGTTACCACGATAAAAGGG", "CGGGGAAGCGTACTTTCTCCTTTGTTTATCTGGAACCGTATCAAGGTGCG", "GGCGCCCGTATGTGGTCTGTACTGGGCCGAAGTCATGCCCCACTGGCACC", "GAGGAGTATTGTCACAAGAATAGAGCTTCTGTGACGGTTCTTTGTCGAGT", "GGAACGGAAGCGAATTTCTCATCCACCCGTGGGAACGCAAAGCAACAATA", "GCGCGAATCGTTCGTTTCGGCTATGTCTACTTAGTTCATGCCTGGTCGCA", "CATTCGGGTGGCATGTGCTATGTTAAACCATCGCTGGCGTGTGCGATACG", "TAGGCATCATGTTCGTGGTAGACCACGAGCACTACGAAAAACTGTCTAGG", "GAAGGCCATTGCGCTCGCGACAAAGGGGCACCGCGTCACGCGGATTCAGC", "AATCGGTGTGATGGTACCTGCGGGATGACGATTTCTACCTGGAGTGAGAT", "CTATGGGCCGACAATTCCACGTCTCGCGAAACGTCTCGCGGCATGGAATG", "GTCAGCTTAATCCCCAACGAGGTCACCCTTTTTGGACTTTCTAAGGTCCA", "TGTGTACCTGTCATTCGTTAGTCCCGGTACCGCCGCCAGGCGGTTCCCTG", "GACTACGTCTTGCACGACAACGGGTCCAAGATAGTCGTTTGTCCGCGGAT", "ATGCAGCCTTCCAGAATGCTGCCGATGCGTCGAAAATGACCGGCGAGTAC", "GGCATTTCTTTTTATAGCGCGGAAAGTGACTCGGAGAGGAGAGTGTAAGG", "ACTGCAACTAGAAAAGGACCTATCCTATGATTAGTGGGGACAGGCGAGCG", "CGAACTGCCCACAGTGTAGAACATTTTGCCAACGAGGCACCTAACCGGAA", "ACATCCCATTGATCTCCACACTCAACGAATTTCCCAGACCCGGTATGATC", "ATGCTCACGATATGTGGATTCGAACTTGCGCACTCGTAATGATAGCTTAC", "AAAAGCTCATAAGCCGCGATAACATATTGGCCACGAACCAATTCCCCGAG", "TATAACAGGCTTGCATGGGTAAGTCAATGCTTTGGCAAATTAGTCACGCA", "TGACTGATTGACGAAGTTCAGTCCAAGACAGAGTATAACCGATACATATC", "ACGTTAGGCAGTATGCCTCAGGGGTGACAAACACGGCTATCAATACCGTC", "TACCGTCCCGCCTTCGATCTTTGTGGAGGGGGTCTCCTCACGTAGGATTA", "TCCTCGTTTTCTCATCCGCTAAGACGGCGATAAGCGATGTGCGCTTGCTT", "TAGGGTTAATTTTACAAGTTGAAGGAACCATCCCAATCAGATGGAATCCA", "CGTCTTCCGGGAGGGACTTTTTAACGACGCAGCTTCTTGTCCCAATTAAC", "GGAACTACGCTGATGTCTACGGTCGCCGACTGGATCTGGAAAGGCCACTC", "ATCAACACCTATAGTATCTCGCTAAGTTAGATACTTCGAAGGCCGACATT", "TGTCAGCCTACGCAACGCAGGATATACGTTACTTCTGTCCGTGCGATGCA", "GAATTGAGTATCCTCATACAAGATGCAGATAGCAATCATATCTAGCCTTA", "AACAGATGAGTTAGTGCTGCAGGTGCCTAATCTACACACATCTAATAGCC", "CACTAACTAGGGAAGGATACCTGCGTCAGCACGAAATATTGTCGTCACAA", "GTCAATCGCACTGCAAGGGGTTCGAAATGTCGAACAGACGTCCGTGTTCC", "TGTGCCCGGGTCCAGAGACATTTGCAGCCTGGGAAAACCAGGGGCTTAAG"};
    vector<string> sequence2 = {"CACGCCTCAGGGCGGATGATAAGGTTTGAAGAACGGGGCTGGTGAGTGTA", "ATAATGAGAGGACAGAGCATATCATTCTGCTTGGAATTCCCGGCGAGGTC", "ACGGGATGAATCACGAACCCGTCATCTCCGATGTACACTATTCTGCTTAA", "CACTACGTATTCCCTTGCTGAAATACTGCTGTCCGATAGCATCGAGATTT", "GTGATTTTGACGGTCTAAATACGGGTAGGAACCGAGATATCACCCAGAAC", "ATCCTCAAAATTTCCGGCCAAAAGAGCCAGTCCTGTGCTCTCACCCTTGA", "AGGAGGCTTCGAAGAGGACTTAACCCCCTGGGGGCGATCGTTGTACGGTC", "CACCAATCACGTGGGATTAATCCATAAACGGTTTACTGGTATCAGGCTGA", "TCTTACCCTCTAACATAGTGTCCCCAACAGCAAGGGCGATCAGTAGATCA", "TTACTAGATCGGTATTAGCCTCTTAGCAAATTATCGAGGAACTAACAGCA", "CCTCGAACAAACTAGAAAAGTGTTTGCACTGGGTCGGCACCCCACCGAAA", "AGTCGGCCTAACCCAAGCTCGAGTCGTTCGATGTCCTAATTGAGAATAGC", "TAATTCAGGAGACGATTCCGTCTGTTGGCCAAGGTCACCGCTTCAAGGTT", "TTACCTACCGAAATCCTGAGGATCATTAAGCTGGGCTAACAAATTAATAC", "GCGCGAACAGCAGTAAGAAGGACCGCGACGAGATGTAGGCCATATGTAAC", "GCTGCGGGGCCTTCAAGTTTGTTCTAACTAAGGACGCCTACTAAGCGCTT", "AGGCCATCTTATACATGAGACAACGTTTAACGTGAATTCCAATCGCTTTA", "CGCAGGGATCGGTTCAGCGAACGAACTAAGCACTGCCCCACACTGCAAGC", "CTCTTCCTGTTATATAATACTTAGCATAACTACTGCCCCGCTACATTGGA", "TTCTCTTCAACTTTAGGCGATGGTCTCTACGGCGGCGCCACCTCAACGTG", "CCGGCTTTTATTGCAATATATCTACCGGCAGAAGCCTAGCATGAGTACTC", "CAGGGTCCGACGGCGAGACCCGTTTAGACGCCATACCGCTAGAACACTAG", "AGAATTGTCGCTGGTGATCCTCCTTTAAATATTTCCATCATCGGAGATGG", "GCGCCAATCTGCTAACTAAGCCGTACATCTGCCTCGATGTTGAGATGTCG", "TAAATGTTGGATAACGTTTTTCTCCTGCCCTACTGATCAGCCCGGTTTAG", "ATTTCCGCTCATCCAATGTATAACGACAAAAATTCACTATAGGAACAGCC", "CGAGCCGAATAGCTTCGTAAGGCTTGCCATAGTTGTACACGACTGGGTCT", "CGACTTTGTGGCTTCGTTTTTTACGCCAAACTAACGGGAAGAAGTAACGG", "TTACGCGTGCTCTCCTGCACTGGATTCTGTGACAAACATATACAGATAGC", "CAATTGTGAAGTTAACATAATTCCTGGGCTACTGAAGTGAGTTCTACCGG", "CTACGCCTCCGTAAAAGTAACACGGGGTCGTCCCCCACGATATGAGCCGG", "AGTTCGTCGTTCTGTTTTGTTGCTAATCCCTGATTCCCGAATAAATCTCG", "GACAAGAGAGTTATATAGTAGTCGAGTACGCCAAGGAAACACCAGCCATA", "GCCCAAATGGTAATAACGCGAAGTTACTATGTAACGCTCAAGCTAAGCGA", "GGCTAGTGCTCAACAGCGATCTTTGGGCTCAGTTCGGGGACGATCTCGAT", "ATTGGGATGCTTCTCGAGGATTCTATGCTCAAACTGACCTTAAACAATGA", "CAGACTCACTGGGTAAATGGCTGACCGCTAATATCGAATTTTCGGTCAGA", "CTCTCTGGCCACTCTAAATGTATAAACACAGACCGCTTTATACACACCAT", "GACGAACGGGCGTGACCTTCTCACTATGAGTGTGGTTGTAACGCCAACTT", "ATAGCAAGGTAAATCCTATGACTCATATGGTTCGTCACTTAAGCCTGTCC", "CGACATTGAGATATAACCCCCTAAATGTTTCAGCTTATCGCTCCAGCAGT", "AATGGAATATCATGGTGTAAAATAACCTGCCTAGTAAAAATTGATTCAGG", "TGTACATCCCAAATCCTCACTAACGTTCTCATACCGATATATAAGGCACG", "GCCGCCCTTAATTCGTGTGATTCGGGTCTCAGCCGGTACCTTCTTGGATC", "CTAAGGCGAACAGGTACATTGAGAGAAAGAATAAAGTGAGCTAATCAACT", "TGGGGAAGAGTAATGCAGGCTACGGTAGACGTGGGCGCGATTCCGACCAA", "CGTTCACTGGATTGGACGGGTAGACTCCGAACCTTGCGGTACCAGAGCGG", "TGTCAATCCCTGGTCAGGCTTTAGTCTAGTCTCCCCCTCGAAGCTAATAT", "CGTGAAGCACCACGTGTAATTAAGTACCCTGAGGTTGCGGCATCCTTAAC", "TAATCTACGAAGTTGTCTAGACACCCGGCTGTAATCATCATTTCGATTCG"};
    vector<string> sequence3 = {"TATAGATTGTGAATTATGGGTTGCTCTGTAATTTGAAATATTGCACTGGT", "GACGGCATTCATTGTTACATCTCGGCTATAAGGGGCGTAGTTGACCGGCA", "GGTCTTGAGTGATCTACGCGTGGGTAATTACTGTATGTTGGTGCGGGAAG", "AATACCTTCATTGAGCGGGTACCGGCGCCGGGGTTTGCTCTGTCGTACGC", "GAAAAATACCTCCTCACGCGGAGGTGAAAAGCTAAGATTCGAGGTCTAAG", "TTTGGAGGTGGACCGTAAACCTCGCGGAAATTTGTGTAGGGACATGCACC", "CTTCACCACACGCACGTGCTTCGGACTAACATGGTCGAGTTTGTGAGTCC", "CTTTCCAAGATACTGAAAGACTTTCCCGAGATGGTGAAAAACTTACGAGG", "TTATGGTGCGGCAATGAATGACTCTCCCCGCACTAGTGAATCGACAGATT", "GTTCAGAGTCACAAGATAAAATGAGACATATTTACACTGGTCGAACGACG", "ACTCTAATTGAGCCTAACATATACCACTGGAGCTGTATGAGTAATTCAAC", "GGCCAGTTTTAAACGGAGCCCTGCACGTTCATTCACCGGTGCATTACTGA", "GTCAGACGCCGAAACCACACTATTCGAAAACGGCGCCCGTTCGTGTTACG", "AGGGCCGGGGGGAACCGAAGTTGGTATATGACCCTGTTTACCCACTCGGA", "CCCAGTTGTACGGGAGCTCCCCCGCGCTGCGCGAGCGCCCCGGTAAGAGC", "CTCCCGTTGTATGATTAGCTGAAGTTTTACTCCCATCGTAGGGGACATAA", "TCTTCGTAATAGCTAATCCGCTGCACTAAGAGAACGGAATATGTTTACTT", "TGAAACAAAATCCACTGTTCCAATAAGTGTGAAGTTCTTATCACAGAGTT", "CCTGCTCTTGCGACATGAACTCAACGGGAACGCACGTGCATCAACCTGCA", "ATTCTGAAACTTGCTAGTCCCCACGCGTGCTCATTAACCATATAGAGCCC", "GCATCCACGAACTCGTACTGAATCGGTCGTCCGTTTTGCGGAGTGTGCCA", "TGCTGAGTTGGAGCGAGCTACTAAATGTAATTGAATTCTACGCAGCGCTT", "GGCTGGTTGCCATTCGTGCGGTATAGACTGATGTGATCCTTGCATCAGTC", "TGCGGCAGCGTGCTGGGCAAAGAGCTTGACGTATGGCCCCAAAATTTTCC", "TGGTAGCGATCCGCTAGCCACGCCGCCCCTCATCCGCTGGTCGACGTACG", "GCTTCAAACAGTTTGCGATGTGGGGTTTCTCAATTTCCGCAGTGTGACAC", "CGCGCCCAGGTGGTTATTGGGCTTGAGTGAGTAGAAGGGATCCTCGTGCT", "TAGGAATTAAAGTCTTATGACTCTAGGTAGATTCGTCGGGCGAGCTCATC", "CACTCGCAGATACCGAACATTATGTGAGTGAGCTGACTACCGACGACCTG", "TCTGACGTAAAACGGCCATGAGTAATATAAGCCCTTCTCGATCTGGTAGA", "ACATACAAATGGTGGGAGTGCAACCGGACTAGGTCCAGGCCTAATTGACC", "ACCCTACAACCGCTCAATGGCGGAGGACGCCGATTGCCAGACCGCCCTGC", "GCCGTCAAAGAACGAATGACCCAGGTACCGTGCGTCGCATTGGCACGCGT", "CTGAATAAGTGCGTCGAGAAACGTGTTGACGCTCTGTCCAGTGTAAGTCG", "TAGGTTTTTAACCAGGGACACTCGAACATACGAGTTTCTTCAGGACATCT", "AGCATGTGACAAATGTCTGCCCACCGGTGTCCGCACGAGTATTCATGTTG", "ACACCAGGACTGCAACGAATTACTATTGGCCTCCCAGAGGACATGGAGGG", "GTCATAAGTGGGCTTCAATAGACGACGTGGACACAAGTGCGAAAAGTCGG", "ACCAGCGGAGGACGGTTCTCCTTCGGCGCTCTGGCACACACAGAATGCAA", "ACTCGAACGCGACGCTCGGTTTGGCCTTCAGCCGGGTTTTTCCAATTTCA", "ATTCTAGCCAGAGTCTCTAAGGGTCAGTCGAGCATGGTTGGGTTAAGTCT", "GACTGATCAGTAGGGTAAATTGAGTTATGGACTACTTGTAAGCAGCTCCC", "ATTGGATGTGCGCATGATTGCCCGGGTTAGAATAGCGAGATTTGCATACT", "CGCTCTCGGCTTGCCGCGGAGATATATGGTCGCGATAGGGCACATGCTGA", "CAGCCATGAGGTTTAGCAGACTTAACCAAAAATCGTCGGAACTGCCTCTG", "AATACTTCGTAGTAACCATTTAGCGCTTACTTAGGAGCCGGATAAGAAAT", "AAAGTAGCTTGTCACGTACCCGTTTGTCTACCACCTTGTAGCACTGCCAC", "ATTTCCTGATTTCTGCGCCGAAGCCCTACGGAGCAATGTGGTGACCCGGA", "CTTCGATCTGTACCTTTAAGAAAGGGCGTCGCGTGAGAGATCCAGTATCG", "GTCCTACCTACTTCATGTAGCTGCACGTTCTTTCGTCGCCAGCATTCCCG"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<string> sequence1 = {"AAGAATGCTAAATCGACGTTTGAGCATTCCCTCAGCTTATGAGATGGCCG", "CCACGGGAGGTTGGGAAACTCGGTGGGTATAGTCTAGGATGGCAGCTCAG", "CGAGCAAAAAGTAGTTAGCGGGTCCAGAGCTTTGAAGGCAGCTAAAAGAC", "CAAAGGCTAACGGAACCGGGTGCGCGCACATGGTTACGCGTCTCATAAGC", "ACGCTCGCATGGCCCGGCCGTTCAAGACGTCTAGTCATCAGTACTCGGAC", "CATTGAAGTCGGCGTTATCCGATCACGCATACGAGCGGTCGATTATGAGC", "TACTGCCCATTAACGCAGCGGTTTCTCAGTTCGCAGGGAAAAGCTTGTCC", "CAGGCCAGTCTTGAAGGGTACAGAAGACAGTGTCCCTGTAATCCTTTGTC", "ACTTCTGCGCTAACCCTTCGTCCCACATCCTTTTTTGCCATCGGGTCCAT", "ATGCTGCCGACACATCCTCTACGTGATTCAGGCATCGGTCAATGCACCGA", "TGCATTCGGGCTACGGTACTCACCATGACGGTCGTCATTATTGTTCCGCA", "CCCTTCCACCGTTCTATAATACATAATTAGAGACCGTGACAGGTGTTCCA", "TCACCGTTGAGGCCATTCACCAGCTCATATCAAGAACTACTGTCGTTTCG", "CTACTGCGGGGAATTGGTAGAGAGGTGTCTGACCCTTCCTGTGGCACAAA", "CGCGATCTGGAAACGATTCTTCGCCTACATTCACCTCCCGCCAGGTCTAG", "TGTGCCCACATGTTGAGCAGGGGGTTCTGCAATTTGTCCTCGGTGTAATG", "GGTTTCCCTAGAATGGCGTATATGCACAGGTGAGTGTTAATCAGAGAAGA", "CAGACGCTGCCGAGGACAACGGACTCCTCACCTTGGAATTACGAACCCAG", "ACCCAGGGGAGTATGTCAGAGACGTTAATATCCATATAACCAGCACTCCA", "ATATCCCGATTATATCACGAGGCGCTAAGCTACTATGCGCACTTGATGTT", "GTCGTGAGGCGTTCGTTCCCCACTCTGAATCTTCTAACGTGCAAAGTGAG", "TATTGCACCTTTTCCACCATTGTCAATGGCATATATTCCTGTACAATAGT", "TAATCTAATCAAACAATTCGTCCAGTGGGTGGATAATACCATCAGTGGGT", "GCGTCGACACTAGCCCCAACCTCACATAGGAACCGTCTAGTAGGTAGTTA", "AACCCGTAGTATCGGGACGCTTGTCTCAGTATGTCTACCGCCGCCCGAGT", "TGCGAACCCGCTTAGCTCCGCAGTAGGTCCTCCGGTTGACCTATTAGGTC", "CCTTATCCGCCAAAAATCTTTTGGTCTCAGATTTGGTGGAGAACCTTATG", "TAGTTGGATTTGATACTCCTAATAGTATGGTAGCCTTCTTGGAATAAACC", "CAACTCGATCAATAATTTTATTAATAATAACATTCTTAGGCGATCCGCAC", "TCTTTCGAGCCGTGCCTGCGCCGCACCACGATAAGGTAGGATTGGGTCTG", "TGAGAGACCGGACATCAATCGCTGGGTTTAATAAAGAAACGGGCTCGCCG", "GGAAACCTCGGGGTTATCTTACGACAACGATTTAAATCGGAAGGTCTGCT", "GGTGCACTATCTCAATTCGCGCTAGACATAGGAGTCCGTGATGCTTAAGC", "GATATTCATTCGGGTAACGCCTGTGGGAGAAGCCCGCTGTATGTAGAAAG", "GTATTCCCGAGCGGCTCCAGCCGCGGGACGACTATGAAAACGATTCCGAG", "CGGGACCTTATACCCAAACGAGGATTATAACACAACAGACTACATGTCGA", "CTATGGTCCGGTGTTTGCGCAGGCGCTACTTCACGGGGGTACTGTATCCG", "CCTGCGTCCGATTTAACACACGGGGTGAAAACAATCGGACTGTCGGCTCA", "AACCACAGCCGCCTGCGCCCGTGCCTCTACTGCCCTTCCCAATAAGTCGT", "TCGGTCGGGCAGAGTCCAGTCAGTAAGACTTTCAGTGCCCTTCCCATTAC", "GTTTGCGCACTTGTATCGATGCGGGACACATCTCAAAGCTGGTCTCAGTG", "CGGAGCCACGTGCTTGCGGGAGGAGACGCGATGTCTAATTGGTGCCAAGC", "AGAGAAGGGACCCGGGGGGTCGTCACTCGTTATAACCGTTTGGACACGGG", "CCCGCATGGGGCCCTACCAGCCCTTTAGCGAAAGCCAAATTATTGGCCCT", "TACTTATTGTAGACTGTATGTTAAGCGCTGCATATCAAGCCGTCTCTGCC", "CACGCTACCAGTACCTGGTATGGGGTCCGAATACGCCACAGATTTCCGGA", "TGGCGTTGCACTGGATCCTGATCAACCATTATGTCGTGAACTCGGGTAAG", "ATTCATTACTCTTATGCGTGTAACGCTCTTGCAACGCGGGTCGGGAAAGA", "TCGTGATCCATTTTACTGCGGTGATAGAAGGATGAGAGGTCGATTTTAGT", "TGAGTATAACGACGTTCATGACTAAGAAAGACTAGAGATGGCTCCACGGA"};
    vector<string> sequence2 = {"GAGAATAAGCATTACTTTATCCCTCGTACGATAACCTGTGGCAACAGAAG", "GACCACCTTTTACCCCCTAACCCGGAAACAGTTTCGGCAGTGCGGTGAGC", "CTAAGGTAATCGGAGCGATCGCCTCGGAAAGACTTTAATTAAAACACACT", "CAAGGAATACGTGGCCAGCAGGAGCCCGCATCGAGCCAAGTGATGGTTTT", "CGGTTCAGGGAAGTGTATTGGCCTTTCTGTCCAGACTAGTGCCTTAACCT", "ACCCTCTTTACAGTAAAGAATACAACCCCATTGCTTACATTAGCACTCGG", "TCGGGAAGAGAGTGTCGGTACAAAAGTAAATTAGACGATATCCCGTCGAT", "TAGGCGCGACGCAGTGTTCATTGCGGCGGGAAACCTTACTGACTAAACGT", "GACTGCGGATGGCACCATCTTTCTAATCTCTATAGCTTGCCGTGATTTAG", "AAGAGCCGGTTCTACTGAGGAAAGTTCAGTTATCTCTCCACTTTATGCAT", "TGCGAGGTTGGCCCTGTCCTGCGAACCGCCAGGGGCTATCCGCCTACCCG", "TGCGTGTTGATAGGACTTCCCCCAGAATACAATTAACCAAACCCAGTCGG", "AAGTATACATAGCAGTGGCCTACAATTCATCTAGTACAAGATCCCGGGCA", "TATGTGTGATACCGCACACGGGGCACTGTCACAGTCCTTAACTCTATCTT", "CCCACCGATTTATCTACCATGAAGACGAACTGCGTTTTATTCTTCGTTTG", "TACCAGCGGTGTCGTGCTCAGACAAGGAACCTAATTGTGTGGCGGGACTG", "CAGGACAAGCCCATGCTAACAGTTTATGCTAGAGTAAGCACTTAATGTGA", "GTTGCTCAAATGAAGCCGACCCATTAAAGATGGGGAATTGTATAGTATCG", "TGCTTCCGATAAGGGAGCTTGAGCTCATCCATTGGGGTGACATTAAATAC", "ATTGTAGCTCCAGGGTTACAACGGTTTAGTTGGTGGAGGTGCCCAACTCC", "TAACAGGGATCAGCCGCTGAAATTGGAGTGAACTAGAATGTGGCTGAAGA", "CACATCGCGCCAACGGTAAAGATGGTGATGACTCCCATTTATTGGCTAGG", "CGACATGCAAAGACTCAATAAATATAGTGCGCAGCGGCCCACCTCCTTTA", "TAACCGCCTCACCTCGAAGCCCCACAGAGGAAGTAGGTGCCTCCCCAGTG", "CACGAACTGTGAGGGTGCAACCAAGAAGCTTTTAGGCCATATCGCGGAGG", "GTTCAAGCTATGATAATTTGCCTCCGCGACCTTCTAGATCGACACCGCTT", "CAGCGTTCCGTTGTTATTAGACCACTGCGTGAGATCGGTTTGAGAAATTA", "ACATACTCCTCAACTAACTGGTACGGTGGGGACTCCGCTTGTGTAGATGC", "CGCAATAGGTAGCGCCCAATCCCTACGCTAAGGGGATGGTCATATGCCCG", "TTACACCTACGCGCCGGGTAATTATCAACAAGCTAGGCCCTGTCGAAGTG", "CAACGCGTTAAGCGAAGCAGACTTGTGGACCTAGCGGTAGACTGGCCTTT", "ACAGTCTTATTCTAAGTAGCCCCACAGTCCTTGGGGCATGCTCGATCTCT", "AGATGGCATTTGTTGTGGTTCAAATCATATCTCCCTGTTAACCCAGACTT", "TCAGGAGTGGTGTTGAGTCCGGGTACGCATTAATCCCAACTTTAGGCGCC", "TCGGTTTTAGGGCCGCCTTCAAACCGGATGAGGGGATAGGGGGCAACCTG", "AACGTCCAATTGTCTAAAAGCTTTGCAGCCGTCGAATGGCCACCGCTGTA", "AGGTGGATGCAGCCTGCTAGGCGACAAATGGACTTTCCTACATATGTAAA", "TTTTCGCACTGCTTTGCATTCATCCACTGGTTCTCACATCCTTACTCTCA", "GCGGGAGTCTTTCGCATCGGTAAAGGCCCCTGTCAGGCTGCCAGCGAGAT", "TTGATGATTGATCGCTAGTATGATGGTGGATATGTGTCCTATGTATATGT", "AGGACGCGCTGACAAGACACTGCTAGTGTGACGGTTAGGCCAACCTAGTT", "AGGCCGAGTAGCACCAGTAATGAAAGCCAGTAAACGTCGGCTGCGGGAGG", "TGAACAGCCAATCGGTAGCTTTCAACGACAGACGAGGAGTATCCCTGCAT", "GATCCCGCGTCTAACTAACACTCTCCTGACTACAGATAATATACTGGGTT", "TACGCTGACACTCACGTCTATAGTTCAGAGTGTTTTGCAGGCGCTCCGCT", "GAAGACCATGGGGCGATACGCGCCAAGCATTCTGGGTCGGCCTAGCCAGA", "CTGGGTTGGTTTTCCACGCACTTGAAGTTCTATCCGGTGAGGCAACGGAA", "CAGGATAAAGGGGCCTCACCTACCTTAAGTAACGTTCACAGGGCAATGTG", "CGTTTACAGGAGCTCGATGATCCCTATATGATTGTTGTCTGCCGACGACT", "AGACGGAGATTTTATGGAGGGCCTCCTACCAATGAGGCTATGTTATGACC"};
    vector<string> sequence3 = {"GAACCGACCGGTAACTATGTGTTTATTTATGCGTTTTGTCCTTCAATCCC", "AATGCCACAATACTTTCCATAGCCGGTCTACGCAGCAGTAAACCTAGAAT", "AGCATCTGACGACTGGTTATCAGTCATCGGTTCGTTCGAACTAGGTGTCG", "TAACATAGCTACAGGTCGGAGCTCCTTGGGTTGACCCTGTACCTACAGAG", "AGGTACACGCTAGTGTCAAGTTTATATAAACAAAAACAACGAATTCAGGA", "AAACCGTCTCAGACGCGAGACACGTACATTATATCTTGTAGCAGAGTCTT", "ACCGCTCTTGATTGATGTCTGCTAGCGCAAGGCAACCGTTCGCTGAGGTA", "GCACGCTCATCAATCCTCAATCCATCTATCCATAAGGGTTCGGGAGGAAT", "GTGACTCATTTGAAAAAAAGAGATCCTTGCAGAGGCGTGGTGATCACACG", "CCAGGTCCGAAGGGTCGAGGCACCGCACTTGGCGGTGTTAATAATTCTGT", "CTTAAGCAAATATATTGTAGCGAGATGTTGGCCGAAACCTCGTGCTCGAA", "CAATCTGTCAATGAGATCAATTCGATTCTCGCGGCTCCTCACCCGATACT", "GGTGTGTCATCCAACTGTAGTAACTTAATGTAAAAAATGACTGCATAACT", "CTTATAGCCCTCACCGCGGGGGCACCTTATGCCTATTTAGTGTAACTACC", "TGGTAGATTACAGTAGGACGAGCATGCTATTGAGCTTGCTCGGAGTGGTG", "TGGTCTCGCTTATGACGGAGAAGATATGCTCTCAACACTCGACCCTAGAT", "CACATACGGGTGTAATGTTAGTGTGTAGCAGATACAACTTCCGAGTATTC", "TCTATGCTACTCTAGGTAGTACTCGGCGAGGACCTTATCGTCTACAACGA", "GGAACTGACCTTAAGCTACTGGGTACGAGACGGGCAGGGAACTACATGGA", "CAAACGAAGAAGTCATCGAGAACTGAGCAAGAGACCCCTTTTCTTACGAC", "AGGGGGAGAAACCGGACATCATACACCCTGGGCACTTCCGGGTCTGAAAA", "TGATTTGCCGCTCCCGCTATCGTCCTCCCGCGAAGACCCAGGAGTCGGCC", "CCGCGTGGAAGATCGGTTGCACTGACTATCATTTTGCAGTTGTTAGGCAG", "ATATAAGCTGGAGAACCATCAAACTTACTATGGACTGACCCCTCGTCCGA", "CTCACTTACGGTCATGAGACATGGTATGTAATGGCCGCGAGGCTGACATA", "AGACGCGGGTAATGGAGTAAAGCCGGAGTTAGGAGTTCCAGTCAAAAGGC", "CTAATTAATAAAGATGGGCAGAATCACGGCCCTCAGCCAAACGATATGGG", "GCGGTAAGACTACTTAGGATAGGCCCTTAAACGACGAAAACGACAAACTT", "TTGCCATAAATCAAGCGAATGGAGATATGAAGTAATCGCTCGGGAGTAAT", "GCAGACACTTATGATTCAGTGGACATCAAGAATGAGCATTAACACTGGCA", "GTTCGTGGCGTTCCTATGAATACACCGCCAAACTATCTCTAATGTATCGA", "ATGCCAGCATCTGCCACGATTTGTAAGGTACCCTCCGTCCTGATCACACA", "AGTCAAGGACAGAATGTTCCAGAATTAGGTCACAGGGCGGGTGAAGAAGG", "TGGCAGGTCAAATTATTCTCAATGATAATTTGGCTGAAGAGTATCTCTTG", "GATCTTTTTACACACAAACGCGGAATTGTCACGCCTAGGTCCAGCCTGAT", "TCAAAATGTAGCTTAACCAATCCTACTCCAACCAACCCTCCTCTTGGGAG", "TGTTCGGGGCGGAGGTCCGGAAGCTATCGACGATAAAACGGGGTAGACAC", "ATCATAGGAGCAAGATTGAAGCATCTAATCGCCGTGAGCCGTTCAGCATG", "TTCACGCGAATTACGACACCAACACTTCAGCGTCCGCGGTTTCTGATTCC", "ATATCATTATTCCGCCTGCGGCAGCTCAGTCCTATAACCAATTGCGGTCA", "AGTAGAGCGAATTATTGAGGTGGGGCAATCTCATAGAAGACATCCAAAGC", "ACGCCCCGCCTTGTTATCGCGACCCGAGCCCTACGTTAACGGCTATTATC", "AAGCCTAGCAAGGCGTGTCTGCACCATGCGAGACAGGCCGTTTGCGATTA", "AGGGCGTCCTTCACGCGTCCTAAGCCAATGAGGCATGATGGTTGCCCGCC", "CATGATACCCACCTGAGTAGACTTGCTTTGAAATGGATTCCATGGTTCCA", "GGCGGAGTCCGGTCTCCGGCGGCTACCCCCACCGCGACTGACGTTCCGGT", "TTTGATCTCTCACTTTACGTGAGCGGTGCGGTCACGGATGAGACGTAAGG", "AAAAAGTTTTAGCGCAAACCCCGCGAATGATTCGATTACATTTGGACACG", "CGGGCGTTTATGACGTACTCATGCGCGTCTACAGGCCGTGGGTTCGCCGT", "AAAACACGTAGACTCTGGAGGATCGACCGTCTTCTTAATTGTCTGGACGG"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<string> sequence1 = {"TAGGCACTCCCCACGTCTATCCGTATGAACTCAATCAGGTGTCTAGCCTA", "CATTGATCATCTACTGGGAAAGCCTAGACGACACCTCGTAAGGCAACTGG", "TGAGCGGGCGTTCGTGGCCTTATATTAGTCCCATTCAAAAGGATTAAATC", "CCCGATCGTCGGGCGACAGGGTTGAATGTACTCCTCAAACACGGAAGAAG", "TTGTAACCGAAACCCTGTTCCCCGCGAACCTAGGCTTTTCATCATTGAGG", "GTAACTCCACCACTTGCGCTTTGTCTTCGAATTATCATAACCGATCTCTT", "TCTAGGACCATACGCCTTTGTGCGTGCTTGCGACCATGGTGTTAAGGTGA", "AAACGGAGAAACTGGGAACAATCTGCGACATTTAACTTCAGCGAATCCAG", "ATTCTATGCAGGCCACATCTCGCGTGTTTATCAAAACCGGTGGTACTAAT", "AACTGATCCGTCGAGCCCGCACTCGACTAGGGTGTAGCGTAACCTACTTA", "CGGCAGAAAGTTGATTGCCGTAACATCCTACGCATACCATATGCGGTACA", "TGGTCTTCCGAGTGGCATGCCAAACGAGTCGTATCGCTTGTGTTCTGTAG", "CCCGCAGCGCGCAGCTTCATCAATCCTGTGAGCATGAGCTTAGCCCTGAA", "AGTGGGTGGGCTCCAAGATGGACTTGTGTGTCTTCTCTTCCTTCGAGCCA", "GATAAGGGATCTAGTAACGGCACAAGGCAGTGTTTGACTAATACGTCGGC", "CGTAGAGTAGGTTACCGTGCTAGTAAGCTCATGTTTCATTGGACTCACCC", "GCGGGATGCCTTAACGACCTCACTCGCAATGGGAGTAGGACCCTCCAATA", "GTGCCAATAAACCCGACTATCTGCTCCACCCAGAAGATACTTAAAATCTC", "GGCTGTGTTCTCTCTTTCTTCCCCATCGTCTGATTGCTCTGGCCCATAAG", "GGCAGTGCTTGACCGGGCATTCGCGAATGCGAATTAATGGCTGAGATTCT", "TAAAGTTCAGACAGTGCAGCGGGCACGGTGCTTATTGGTTACGTGGTGGT", "CGCAACTGTGATCCATCGATCTGAATCCATCGTCAGAAGTCCTTTGAGGG", "GCTTGACTGCACTCATTTATTTTTCGCTGTGCACCATGTGACTTTCTATG", "CGTGCTGCAGACGCTCAAAGTTCTCCACTACCGGAGTAGCTCTCTTCTGT", "CCGCCTCGTGTCGGTCCCTTATATTATTTTGCGGGCGAGCCAAAACGCGC", "TGACAGTGAGTCGACGATTATCATACAATTTAAACGTCGCCTGGAACCAC", "GACCCTATGATAGAAATGAGCCAGTTCGGAGATCTTAAGGCCGTCCCGGT", "GATCAATTGTTCACTATGCCGCAGTCTCGAGGTTCTTTGGTGATCAAGAC", "ACCGTCTCGGAAAAAGATCTCCATTTTCGCTTGGTTCAATAGTTTCCGCG", "GAGCATATTTAAATGAAACGGTCATTCACGCCCCGAGTTAGATCGTAGAG", "CTCCTCCAGAGGTTATAGATTTGTCAAAATAAAGGTCTCGTGACCAGCAG", "ATTCTATGGAATCGGTGCTGAGTAGGTGTCGCCCTGTAACCGTCTCAAGG", "AGTATGAAATGGGGAAATCTGACTTCTGGTAAGGTCCTTTGTGGCACGGT", "GCAAAGCACTTCTGAATCACAATCGATCATGGGGACACACCGGACAACAC", "TCCCCTGAGTGACCCGTCGGTAGCTCGGTGCTACAGGAATGTAGAACATA", "AAGCGTTACTATTAATCGGTCTATACCACAGTGGCTCCCGCAACTCTTTA", "CATGCCATACTAACGTCTTACTTATACGCCAACCCTCGTGACTGTAACGG", "AGTTTGGAGCTACAAAAGATTTTCCCGCGCTACCCCACTTGAGGTGATAT", "ATCCGCGCTCATCACGATCCTAACGCGCGATGTGGCCCATCCGACTTTGT", "TTTGGCTCTCGTAGGATAGTCAAGAGGGAGAGACCCATTGCCCGGCGAGA", "GTCCGCAGGGCGTATCTGCATATGCGCAGTAGGGTCGCTTATAAATGGGA", "TGCCGAGAGGATCGTGCTAGGTAAGTTACAGATACATTGGACTATTGCTT", "GATCAGCAAGCGTCGGATACTCTTTCCTGATGGCCGTTTGTGAATCAATA", "ATGGATGATCTCAGATGAAGCCGCTATTACGCTTGCTGGTACGCTCACAT", "GGTGGAACGCGGCGTGTAAAGTGGTATCGATTCAGATAGGCTGAATACGA", "TAGCACAGGTTCAGTCGCGCTTCAGGGACTTAAACTCACTGATGCTGAAT", "TCAAGTTTTCGCGCCGGTAACCTATCCGTCACACGAGCACGCCCCCAGCT", "CTTATTCGGGATCAAGTAAAGTTCATCAGCCCGAAACACGCGCTAAGTTC", "GTCTGATGTGTGGGGGTCGGGGTCTTGTACGGATGTATGTATGGTTTGGG", "CGTCCGAATTTTGCGAAGTTCCGTCGGAGGAAGTTACTGTATGTAGGAGC"};
    vector<string> sequence2 = {"GCCTAGGCCTCTTTGAAGCAGTTCCGAAGCGTAGCGTAGACGTCAAAGAG", "TAATAGTAAAGGAATGACTTGTGGGGAGTAGATTCTGCGCGCCGGAGTCC", "CAACGTGGCGACCTGTAGTCGTTTCAGATTGCAACGCCCCAGTCTGCACA", "CTGGTTATGTGTAAACAATAACTCTACGGCGGACAAGCGCCTACATGAAC", "TCGAGATAGAGGGAGGTCTACTCGGTGCGCGTGTTGCGGACTGTAATCGC", "TGCCGCGGATTGCCGCAAGAGAGGCTCTGGAACTCAGCTCTATCATGTCT", "AGCATCATTAACTCGTTCCTATTTTACCATCAATATTTTGGCTCGGCTCC", "AATATGGTAGCCCCACCCCTCCAATCCAAGTTATGGAAGCCAAAGGACAT", "GTGCAACCGGATGTTCCACGGATCCATTAGCTTAGTTTAAAAGATAGCCC", "CGTCAGAGGCAATGAACTCAATTGGGTCCGTCTGGCGCAGACTCGAGCAT", "CGGCCAAACTACATGGTTGCATTACTCCGAACTAATTAGCTTCGCAACGC", "CCCTCATCGTTCAAATTCTGCCACGTGACATTAGACTACTTCAAAAAGTC", "GTTCGAACTCTCGCTCCCGAAATTCCTTCGAAAAAAACTTGATACACGTA", "CCCTTCCAAGCTGGTTACCCGTGCCCCAACGGTGATCGACGAGGACTTAT", "CTATTGAGCGACTGCTCTGACGTTTTCAAATCCTAATCCGTAGAGTATAG", "CCGTGCACTGAGTGTAGCGTGCCACAATGTGTACCACCTAAGCATACCTA", "AGTGGGCGATACGATGAAGTGCGTGGCGAGAACGCAACTCAAATGGCCAG", "AGCATTCATACCACAGAGAACACACCCATGTCTTCGTCGTAAGAGCGCGT", "GTCCGGTCGGCGTAAACTGGTCCAACTTATGATGGATTTTGACTTTGGAG", "GGGCTTTTCTGGCTCAACCGGTTCGCCGAACCTAAGAGTACGACATTACG", "ACGCGATAGATATGGTACTAACCCTCCCTGACCGAACAGCCACGACGCTC", "ACATCGATACTCGGCGTTCCTAGAAGCAGGCAAATTCCCTTCCATCTAGG", "GATCGGCTTACCGTCTAGATTATTTAATGGGTACTATGGGACGGATCATC", "GGTGGTGTTTTAACATGCAAGTAAATCCTCGTGACTTCAGATGTCCCGTG", "ATTGTGCGAGGAGGAAGGGATGGTAAGGTAAGTACTGCGTACAAATGTCA", "TCGCTGAAATAGGAAGGAGATAGTGGTCCAACCTAACGTGACTTTGGAAA", "GCCCCCCGGTGTCATCCCGCACTGCTCATCGAAGTGGATGGCGGCAGAGC", "TCATTGAAACTCCAAATAAAATTATAGTCACACCTTACGGCTACGGGGGA", "CTGTTCGCGTCAGGCGTAGACACATAGTGTCCTGGATATCCTCGATTCTC", "TTCGCTAGACCTTTTAAAGAGTAATTGGTAATGATGGCCGGGTAACACCA", "CACAATGTCCCCCAACACCTAGCCTACACAGGTCGCTCTGCAATTTATTA", "CCCTACACCTTCTAACAATCCACCACAGAGAAAGATTGCATGTGCCGTTA", "CAGGCGAACGACTGAAGCGAAGCATCACTAGGCACTCCATTCGCGTCTTG", "CTCCATCGACTTGGCCGAATATAATGCACTAGGAACACCCACACAGGCAC", "GCATCTTGGACAGGAAGGCGATCACACATGCTGTCGACGGATCGGCGACG", "TCTTCCTGTTAACTTCAACTTGAATCACTTAGTTAGAGTGGCCCGCTTTA", "GAAGCTCGCATGTACTACAGACTCATTGACGTTAGTGGGAAGTTGCGGAC", "GCGACCCTAGCCAGCTGCGTAAACATTATTCGAGCTCTGGCCGTTTCGAC", "GCCCTCCTAGGGTACCTCCAGAGCGAGACCAACCTGATCAAAGTGTTCGG", "ACGACCTATGGGACTTTGGACCCGCATTAAAGCTACCAAGAGAGGGACTT", "CCGTAGAATCGGACTCAGGCATCTGTAAGTCGCCAAATTTACCGCAGGTT", "TTGTATTCAGTCGTGGAGTTTGGCAAATTGAGCGAGCGGGTAAGTTGTGC", "CAAGATCGCTACACCAAGTATTTACTTAATTGCCAAACACGGGGCTGTGC", "GGCATCCGAGGCATTGTGCATTAGAAAGGTTCCGGGTCCTAGCTATGTCT", "GAGTCGGGATGGGATGGACCGAACCCTGATAACCATAAGATTACAACTAG", "GTAACTGATTAACTGCTTCAACGGCAATTGATACCCGATAAATCGGAGCC", "AATTCCGTTACAGATCACAAGCTTGTGGTGCTTGCCACCCTTGTTTTATG", "CCCTTGGTGATGCTAAAGGTGTGGTAAACTCCCCTTGAAACGCCGGGGTC", "TTACTATTGCCTATACAGAGTTGGGAATCTTGAAATGCGCTACAGATAGT", "TCGACGTTAATATGACCACAGATTTAACTGGGTTCGAGAGCATTGGTTCA"};
    vector<string> sequence3 = {"CTTGCCGTACGTGGCATATGAACTTTTAACGCAGTGATTGATTTAATCTT", "GACCTATCAATTCTAGCCTGCAGAAACGTTTTCCGCCAATATCGCAGGTC", "GAAGTGCTAGACGTTACGCGGCGAGAACAAAGGGAACCTGTGGAATTCTT", "TGTTTTGGTGATGAGGGAACCATACATGTGAATAGGTCGAGCGCTATCCT", "GCCGTCGGGCCTGCGCCGACCGAACTTTCGCGTGCAGGAAGCCGGTTCTC", "CACTGTCCCAGCCAACCTCTGAAGCTAATTTTACCTGGGAGAATTTAAAG", "TTCTCTTAAGCAGTCAAGGTAACCGACGCATCTTCAGCGGCTGCGCGTAT", "TATAATCAGACCCGGAGGCAGTGATAGCGGATGACTTCGTAGCCAGAGAT", "TACCTCAGCCCCGATGTAGCCCCTGTACATCTTTACAAGCCTCCCACTTC", "TCTGGGGTCTTGGGGAAGTTGGCGAAACACCCATTAGCTCGACCATGTCA", "GCCAGAGCGGCGTGGCACGGGCGGCTTTTTCTTCCTACTACAAGTAAATG", "GAACCGTCGGGGATCTCGCCGCAACCCACCATCAATTTGAATAACCTGGT", "CCAGTCCTGAGGGGCTGCTCGTTATACCAATCGAACGGGAGTTTTCAGGA", "AGCGTACGGGGGCGCCAATAGTCGACTCCCTATTGATATTGCCAGAACAC", "ACGACGCCAGGCCAGCCATGTAATGGAGCGGGTTGTCCCAGCATTCATTC", "CGAGGCCCGCCGATGCGCCAGCGCGTAGAACGTATAGGCAAACATTGAGC", "CAGTTAGATCAAGTTTGTTGCCGTCGGTCAGTGTGACGAATTCGTGAGAC", "AGTGATCAGATGCGCGTTCCTCTGATTGACGCCCAATGGATTGCAGATAT", "AGTATTCACCGCCCTCACCCTCGGCTATGGTGCGCACACGTCACCTCTTA", "TTTGAACCACTGGCCAATGGAAGTCAGGTCCTCAACGTTCCCTTCCGAGG", "CTGAACTCTTTTCTCCATGGATAGGGATTCGTCATCCTGCGGGTAGTAAC", "GAGATGGGACAGGTCAGCCGAACCAAATCCTTGGGTCGGCGGTGACGTTT", "TCGCGATTACTTAGGTCGTGGGTCCCTTTCGAACGACCCTAAGCCTGGTG", "CTGTGAGTGGAATGACTACGATCCAACGTCGACATGACGCCCTGTATGTT", "CAGGCGCTAGTACGCAGCTGACTAGAGCGGTTGCGCAGGTCACCCTGGGC", "GACTCACTGTCAGTCATACCGCGTATTGCTCCCGCTTACGTATCCCATTA", "CGCAGACGCCGGTGTGTATCCGAAACGGAAAACGTAAAAGCTTTCACGGC", "GTGTTACATTCGCTGGGTCTTCAACGAGCGTTGTTGCCAGGCCTGGCGAA", "ACGTAGTAGGTACGAGATGAACCTCGCCGTGGCGCATTCGTAATCGGGGG", "GATAACGCTCGTCCGTCGCTCCTTACTATTGCACATCTTATTCGTACTCG", "TTCTTCAAGGGACACTGCGAGGCCGACAGTCTGCGATGTTTGCGATGTAA", "CACAACTTTCCAGTCTAAGCAAGATGGAAGAGGACCGGCTTAGAAATCTC", "AAGAAACCATAGGTACCGGAGGCTTCACTCTAGCAACTCTAGCGGTCCGA", "TACGGCCCACTACTCCGCAGCAACAAATCCAGTAGCCCTCCCGAAAGTCG", "TAGCCTCTCTTTTCGCACCGACTTTGCTTCCCCAAGTCGCCGTTCTAAAG", "CAGAGTTGAATCTGAACCCAACGAACCTGTGCAGTTCCGTGAGCCTCCGT", "TGCCGGGTTGGTGTTAAGTCGTGCACCCGTAGGCGCGACAATGTAGAGCG", "AGGGTAACACATCTCTCGACGGTTAGTAGGATGATATGTCTCCGTAGTTG", "GCTTTGGTCCAAGAGTGTTGTTGATCTGCGGCTCCGTACTCGGGCCTTAA", "TTTTTCCAGTACAAAGCTGAGCATCAACAATAAGATACTCATCCGTTGTG", "GGGACCGTGCGAAGAGAGCTTGACACCATACCTATTAGTTAGGCCGGTGG", "TAGGGCCGTACGAGGAGCCGTGTTCGATCACGTCCCTTGGTACGTGGTTA", "TCCTTTCGGCTCAAGCGAGTACCACTTATTTCTTTTCAGGATCCTACTCT", "GTGAAGTCTCAGATACACTGCGGTTCTTCGCGATCACGGTGTACGTTCAT", "AGGCGAGGTTCCGGCATAATACATGGAGACCCTCCGGGCACCGGCTCTCC", "TCCCGTCTGGGGTGCGTCATGTACACAGATTTGTCACGGATGCAATCCGC", "TTTCTAACCCCCATAGTGCGGTGTCTATAAGCTCCAAATCACCGTGTGAA", "TACCGAATCATCACACTCAAACCATAGTAGCAGTGTATCGTTTCATAGTG", "ACAAGTTCTGTAGAAATGGTCGCTAGCTAGCAGTGTCCGTGATAACCCCC", "CAAGGAGGGAGAGCCACAGGTACTGGCTCAGTGCAAATCGGCGTTCGCTC"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<string> sequence1 = {"AACCGTTTCCGTCTGGCGGGATGAGGGCTTGTAATTTCTAATCATGAGTG", "TTGATGAGTTGGAGAGTCGTCCAAGATTCATTTGGGGAAAGTGGACAAAG", "AGTTGTCCAGCCAACGTTGAACCCCAACATGCGCGCATCCTTATTTTAAC", "CGGTGGTAAATGAGCGAGGCATTGGTTGTACAACAGTAGGAAACGCGTCC", "AGCGAGCTACGCCGTGTACCCTCTCAGTCGAGGCAGGTCAGATCGTCGTC", "TAGATCACTCACCCCAACTCACAGGAAAGAATGTGTGGCTATACCCCATT", "GCACACCCGAGATTAAAACCGTCTCACAAGCGAGGGTACTCGCAGGATGG", "TGCTTTATTTCCAGGGCCCGAACTTACTCCCCGTCTTCACGTTTCGACCT", "TGTGAATAATTAATGCGGGAGGGGAGGACTAAAGCGAGAGCATCCTTTAC", "GATTCCTTTGCGGCGCCATGTAGGATCCGTTTTTACCGTTATTGCGCTTA", "ACTGATAGCTCCCAGCGCCACAGCCAGATAAAATGAGCCTCGAGATCTTG", "TGACCATTGATCCTCGGTGTCTCTTGAGGCCACAAGTAGACGAACTGCCG", "ATGGTGTTACCACTGCTGTGTTAACCACGTATTGTATAGGGATACTTCCG", "AATGTCGGGGTTGTAGAATGCCAAGGCGTTTTCATTCGAACCAAGTCGAA", "CCGCTGAAGTTAAGAGAACATCCCAGGAAGTATCGTAATATAGAGCTTCC", "GTCGATATGGCCAAATATCGTGTAGATAACCATCCTTCTGAGCACGAGCA", "GCCCGGCACTTAGGCCATTTTGATTTGGGAACATACGAGAACATATAAAA", "TTCCCAGCCAGTTGCATCCCCGTCACTCATTGAGGCCCCCCTAAACATAT", "TGATTTAAACTCGTTACCCGCAAAGGGGCGGATGCGACATCTGACAAAAC", "TGTTCAGGTTTGGCGTCTTTCGGGAACAGGCATAATTTATTAGTCCGCTT", "CGTGGCATCGGGAAACGTGAACTACCAATGTGCTGCTCGTTCGCCATGTT", "CTGCGCGCTTTTGTGAGTCAGGTCCTCCTCTCCAACGTTGGCCAGTGTAA", "AGGCCCATGTGTAGCGGGACTATCTTATAGCCAGGCCGTTACATCGATCG", "CAGGCCGATCTCAGTGGCTGCCGTCAGCTAACCGGTACGAGTCGAGAATT", "ACGCTACAGCACGGGCATGGCACGTAGTAGCGTCGAAGGGGGATATACTA", "CCCGCTTCTCATTATGCATTGCGCTGGACTCCCTATGCCGGCCAACTAGT", "CTTTCAGAAACTTACGGGTAGCCTCATTACCTGTATGCAGACTGAGCAGG", "TCATGAGCTATTTAGAAAGTTACTTCCGTTATCGGCTAGTTCTTAAGGTT", "CGTGTCTAGACAATCTAACGGCACACCATGCAAAGCTCTCGTGGTGGACA", "GAGTTGTAAGAGGACGGTTAAGGTCAACTCCCCCAAGGCTAGCCCCGTAA", "TAGCGTCACGGGTAGACGACGCCTAATGTTACAATAACCCGCAAGCAAGA", "GGGTAAACGGTAACCTACTGTGGCATGGGCCATTGAGGTCTGAAAGGATC", "GGAAGACGGCCGTATTGCGGTGACGCACAACCCAAATCATAAGCTCTACG", "GGGCTCACCTATACGATAAACGCGGCCCTAATGTGGTAACATATCATTGT", "GACTCGCTCAATTCAAGCATCCCAGGTAACCGGAGCTGGTCGCTGGTCCC", "ACTCTATGGCCTGCGGAAAGTTAGTTTCCACGTACTCCACTAATCCTGTT", "GGTGAGCCCGAAGCCCTTAATTTTTGGACTTGAGTAATTAGAGACGCGGC", "CCCTCTTGGAGCTGCTTGGTGAAATGTCACTTGAGGTTGGAACCAGACTG", "TTATCGCGACATGTTCTGACAATTACAGTACAACGCTGGTGTGTTTCCTC", "GGCGCAACCTAGGTGATAGAGGGGACGGACCGAGAAAGAGCACACCTATC", "GGGGCAAGACTTTGCCACTGGTCACTAGGGTTTTATCCTACCCATTTCAC", "TTCAACGAGCAGTGATACTAAATGAGAAATAGTACGCATGCATGAGAACT", "TCAACTGACCGGCGTTCGCTTCACTTTGATAGCATCGGTTCTATGGCGTT", "CTCTGTTTGTCGGACCGAAGGGTGTAGTCTACTCGATTGGTTTCAAATAA", "GTCTGGTTAGTCACTTAGACTCGCCCTACACCTGCTGCGTACAGGTTGCG", "ATCGTAGTATTGGTATGGACTGTGAATCCAGGCGAACTGCCCGCACTCAA", "AAGGTCGTTGGCTTGAATAGGGTCCTTCCACAATTGTTGACATGTGTATT", "TGTTCACTATGAGGTTCTAGCTTCGACCTATCGTTCGTGCTGTGCACTAA", "GACTAGACTGTATGTGCCAGCTGGTACGCTCACAAGTTGACCACCTGCCA", "GCATCATAACGACTCGAGACTATGTCTAGCCGTGCTACCGACTGAAAAGA"};
    vector<string> sequence2 = {"CCGTTACTCCACAAGCATAGGTCGGGTCGTTACATCAGCACTCGCATGCT", "ACTAACGATCACGAGCTAAAACCTGAGGCTACCAGATACGTGCGCCAGGG", "ATATGAGGTGATCGTTTCGGGCATATACCATTGGCCACCTGCTGACAACT", "TGGAGTCCCTGTGGGCCCTGGCAGGGCGCGATCTTGAGTGTTTGGATACC", "CTTCTCAGGTCTCCAAGGTTTCACCGAGTTGGAAACTGAGGAACTCAGAT", "CCCCGCACGTCGATTACTGGAGGTTAAATCGAACACCGAATGACTGCTTA", "GCCCAAAGATTCGCTCGCCCGGTAGACCACCAGAAGTGGGTGCCAGGAAG", "TCTAGCTCGGGGAAACTCCTGATAACGTGTCGTGTGCACCATCGTGGGTA", "GACACCAACGACTTACACTGGTTCTGTTGTACCTATCTCACTGAATGGGG", "CTTATAGGACGACGCGTGACTGGATTGAATATTTTAAGATCGGGTACGTA", "AGCCTCGACCAACGTATGGATCATAACCGTATAAGACCAAGGGCAGGAGT", "AACTATGAACCCAGTGGGACGCGCTTATATTCGGGAACCTCATAATATTA", "TATCCCTGCACATATGCTTACTTTGCTGTCTCCCTCTAAGACCTCAGGTC", "AACCCCGGACCGGTGAAAAGTACATCCGTAAGGCTCCCCAGGTCGCAGCC", "ACGCCCGGTGGCTCACACGGGAGTAAGCGACATTTATAGGCAACCGGCCG", "TGGCTTCGATGATCCTTATCGGGAGCGCTCTCGATCCTCCCAATATATAC", "GAAAAGGAAACAATGCGTCACGGCGTGCTTGGCTTCCTCCGTCAACCCGC", "CTCGAGTTCTATCTCGACAAAACAAAACCCTTGTGAGTGCGCTTGGCGTC", "CTATTTTATGCGTTGCAAATAACAAAGGGCTGGAGACCCGATGAAGTCAT", "TACCGACACTTTGAATTCGCACAACTGGAGACAGAGCTCTATTCCCGAGG", "ATGCTTTCTGTGACATCGCGTGAAAAGTGTCCCCTACCGTACTATCCCTG", "TAAGACACTTATGCAGGTTCGCGTTAAACGGCCCGTTTCAGCCGGTAATG", "CCCCAAAGGGATCCACCGGGGTAGAGGAGCCCGTAATAAGGCAAGTTTGA", "ATACCGAACCGGCAAAGTTTCGCAATCGCTCTGATAGGCGGGCGCACGAA", "CCGTACCTAGATAGCTTGAGTTAAATCAGAATAGCGTGGGTTTCGAGGGA", "CAGTTTCTTCCGAGAAAGGCCCACACTATTGCTGGCGGAAGGTTAGTTCG", "GTTTTGTAGAACAGGATATATGCGTCCGTCGGTTGCGTATGTCTCTAGCA", "GAAGGAGCAGCGAAATCCTAGTCACCTCAACCGGATTGCCGAGGGCGGGA", "CTCAAGTGGGTAAGGAAGAAGAGGATTAAAGTTTACTTGCGGCAGGAGCA", "CTTTAACGCCTTATCACTTGCGGATTGGGAATGGATTAGTAGTCGGGCAA", "GGTGACGTTAGCTAATAAGCTGGGCACCTAAGAGTAAACTATATTTCATC", "ATGGGAGATCAGGCGTACTGTGCTTGTAGTTATTGGCGAAAGACACAGGG", "ATGTAGCGCTACCCACTCCTGCTTTTGGACTCACATAGCATATAATCCAC", "CGAGAACTGTCTTTTGGGCTCAGTCTTACCGAGCCGAATGCAATAGTAGA", "TAGAGGGGAATAGGATCTCCCGCGGCTGGAGCGTCCCTATCCTTTCCGCC", "GCAGTGAGCAAGTAGTGTGGAGCAATAGACGTGCCGACCACTCGCTACGC", "AAGATATAGTTTTTCCGACTACCTAAAGATACGCGGTCTATCAATCAGGC", "TACACTTACGTATTCATGCTTCTCCATGCATCTTCCCCAGTTGTAATGCC", "TTTATCGGTCGTAGAAGGGGCTTAAGGGACCAGAGAGGAATTGCCGGTGG", "TTTTTCAGGGCCGGCACATCGCGATGCAAGCTAGCGCTTGCACATGCTAG", "CTGTATTACTAAGGCATGTAAATTTTTTGCTAACTATCTGGTCTCCCATT", "GCCTGTGACAACGCTGGCAGAGGTAGAGCTTCTGTCACCCACAGCATATT", "CCGTAGGTTTGAAATAGAGTACTTCAACTGGAACGCTAACGTTAGGTCCG", "TCCAAGAGTTGTTTCGCCGTGGTGGTCGTAATTTATTGCAAATCTTGCAA", "CGCATATAGGATTCGCCCATCAGGTCTTATAGGAAAACCGACAAAGACGG", "TTTGCTCGGATCGTCGGCGTATTGCCCTGGCCGTTTACTCGATCCCATAC", "TCGCCCATGACAGCGTCTGAAGGCCTTGATAATGTCGTCTGTTCGTAAGT", "GACGTATAATAAACGTTGCCATAAAATGGAGCGGACGACCAACTCCTTGA", "ACTCAGCTGACACATTTACAGATGGGCGTGTGATCAGCTGTCAAATGGTT", "ATGCGACGAAGATCCCTGTTTTACCGGATTACGTTATGACCAGTACTCTT"};
    vector<string> sequence3 = {"TCGTGGCCGTGCCCTGCTCCTGGTGTGAAAGTCAGCGAGGGTCGAACTAT", "AGCTCGGGTTTGGTACTTCGCACTTGCTACGACCCTATAAACGTAGCAGC", "CCTGGCGTGACACACGATCCCGCTAATAGGTTCGTTAGAACTTTCTGATA", "AAACCACCATGCCTGGAACAGATTAGGTCTCTTGTGGTACCCGCATAAAT", "GGCGCCGGTTTTTTAGACAACGCTACCGCGGACATCCGTTCCCCTCACGT", "ATTAGTATCCCGAAAAGTGGGCCGAGGCGGAATTTCTGTGCCTGTTCCGT", "GTTACAAACGGACAACGGTTCTTTATTGGAGAACGAAAAAATAATTATAA", "GTAGGTCCATGAGTAAGGCGTGCAGGATACGAGGCATTGAAATTGTCAAT", "TCTGCATGTATACTGTACCGGTGAACTCGGAGCGGAGCAAGTTTGCCTAA", "GAAGATAAGTGCCTGCACACATGCTGAATGTAGTGTGAATGCTCATTCTC", "AACCATGGGATTGAGGACCGTTTGACCAGTGTATCGCCGTGTGGTTCTTA", "TCACCTTTGACCCTGGCTCCACCTTCGCACGCCAATAGCCGTGAAACTTA", "TGTGCTATACTGAAAGTTAACTAGCAGCGTTGGCAGACACAGATCAAAAT", "ATGGTAGCCTACTCATGTTGTTCCACACTTAGACGCAGCGCTCACCAAAG", "GCTATTCTGCGGTATGGCCTCCGCGGTTCCCCCGCGGAAGGCGTCCTGCT", "TCTACGGCTTGCGCCCTAGGTCCCAGTAACACATACCATGTCCAGGTGAA", "GATAAGCTCTTAGTGTCGGCTCAATTGAAACGCTAGGTAGGGTCGACGTA", "CCAGTAAGGTTGGTGAATTTCGATCCGCGGCGTAACCGCTGGGGGCGTGC", "CAGTTGCTACATATTCGAATACCGGAGGATAAACATTTAAGTAATTAGGG", "ACCCTGACACATTCAGGCATGGGGTTGGCCTCGGTTGGCTTTACGAGACA", "GACGAGTTAAACATATGAAGTTTCCAGTTTAACAGCCTCGGACAACACTG", "ATGATTGGGGAATAAGGATAGCTGCCGTCATTTGGGACGTCGCAAAAGTA", "TACAGCCCGTCATCCGAGGCTGCGGCCCTTCGTGACGCGCAACGCACCGT", "TTAAGCCCTTCCTCCTGAGCGGAAGCTAGCGTGAGTGTCCCTTTACACAT", "TTGGATTACGAGACCAATGGACTGCTGAAACCCGGCGACAGAGGCTTACT", "AGGACGCATGCCTCATGTGCACTGGCAACTTCCGGTGCGAGGGGCCGCAT", "CCAGGCCAAGGACAGTATCTATTAAGAGCAGCGAACCTGACTCGGGTATT", "AATCGATCAGAGGTCTATAACGTACCGTTGCTTCCCGGTACCAGTATGAT", "TCATGTTACTATGGGTAACTTACTTGGGGAAAATATCATTGGACAAGTCC", "ATAAAATTCCCTACGACCAAAGCCGCATATAGCGTCGAATATTATGCGGA", "GATTGATATGAAGGAATTTACAGGTAGCCGCTGCCAAGAGGTCACTCAAT", "TCACAAGGACACTGATTTGCGGATCGACAGTACAATATCCTCGTCCCACT", "CTCTAGTAATCACCCCTTACGTAATGCTAAGGTTCAGCATGCAACGGTGG", "AACCTCTATTGCAAAGTATGGCACACACGAGTTGCATACCGTTCAGACGA", "GGCTTCCAAATTTGGTAGCGCACTCGTTAATCGCTGATTCAGTTCACTAG", "TTTTCTGCCTGATCCTAGACCTGCCGGTGCCCTGCAGGAGTTTTACGTGC", "CGCGATTCTTGTGGGATTCTAAGAAGCTGAAATCGTGGATTATCTATAGC", "GACCTAGTCATTGTACTTGCATCTCGATGGGAGCGTGTTTAGTTACTAGG", "GATACATCTCAGTAAAATCCAAGGGTCATCGAGGGGTTATGGACGGTGGG", "AGCACGGCTATATCATATTCCCGATGTGGCGCGGGAAACCTGCCAGGCCT", "TCTTGCAGTATCCCATTCACCTGTTGGATCTATGTTTGAACCAATGTTCC", "TGCTTGTAAGCCCGAGCTCTATTAGTATAACGCATGGGCCCATGAGCTTA", "GTTGATAATGGTTTAGCCTCGTTTATGTTTCGTGGCAGATTGGCTGGAGG", "TACGCCGGCCGCGGTCATATCGACATAAGTGACGGTCAACCCCTACTTAA", "TCGAGCCCTATATTTAGGAGTAGTACATTGAGCCTCTAAGAACAGAGTCC", "AATCTATGCATGTACCCATCTTTACACAGTGACTGGGCATCTTACACCGG", "CACCCTAGCCGCAATACGACGCGAGCCGCAATCCCACGCCAAAGACCGCG", "GCCCCACGATCGATAGCCTGTTCATCTCGCTGCCGCTTGATCGATGTACC", "TTCTCGGTCTCGTGCCCCCACATAAGGAGCAAACCTTTCTATCTCGCAGA", "GCTACTAGATGATATAGTGTTTCGAACCTAAGTGATTCTTACTAGGTAAA"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<string> sequence1 = {"TACGGGCCCATCCGCCGCTTATATCGCGAGGATTCGGTGCCGGCTCGATT", "GCGATGGCTGCCGCGTCTACGGGTAAGACGGAAGCGATAGAGGTCCTAAT", "ACCTCCATCGGGTATTGTCCGCGCGAACCGGAAAGAACGAAGTTCGCTCT", "CACAATGGTACATATTTAGTTGGTGTATAGCAGTTTCCGGTGTAGATCCC", "AAAATTGTCCAAAGGTTTGTGGTTGTGCTCTACCAACACTCGGGCTTCTT", "ATTGTCAAGCCGACCGATCCTCCGATTTGGCAACTGGGGCAAGATATACT", "TTACGACCGTTCTTTATGCTAGAATAGAAAATCGGGATCGGATTTGGCGC", "GGGCTGTAGTTCGGACAAAGAGTGGACCTGCACCTAGCGAGACTATACCA", "GAAGTGAGGGCCCTTTTCACACCACTGTGCTTTCCAGTAATGCCCCTCAA", "AAGGTGATGTTCCTAACTCGTAGCCCGCAATCATCGACAACAGGTCTCAT", "ATTACCGCCCCCCTAGCGCGTTCATACCAATCGTCCCGAATACGGAACCC", "GACACTCGGCTCCATATTAGTAGGGCCTTATATTCTCAAACGGTTTGTGC", "TTTACCACTTATGCAACACCCCATGGCTCTACAAAGTGAGACTGCATGAA", "AAATGATAGGTAAGCGCTTTTATGCCAACCCCTAAAATACACAGGAAACC", "GACTCTGGTGCGTATGCATGCGCCGGAGACTGTGCAAGCCCCCCAGTGGT", "CATCTTTACAATAGCCTAGAGAGTACTTAGTGCGGATGCTTTTCGTAATC", "GTGTACTTGAAAACGGGCTGTCTTCACGTAGCACCGAGTGGCGGTGGACT", "CGACAGGTGTTTCCAGAGGAACGCAGGCCCCGGAGGTGTCTGATCATGTT", "ACTGAAGTTCGTACCGGCAGCCAAGCCTACGCTTAACACTGCTGTGTTGA", "TCTCCTTGATTACAGGTTTCTGCTTGGACTGGAACATATACGCCGCTGTG", "GTCAAGATGCTATCTGCCGGTGGCACGACGAGTGCGTGAGACTCCGCATG", "TCTCCTCCCTTAAATCGCCGTCGCCTACTGCCGGCCTTATGAACGACGCG", "GAGTTATACACTTCGAAGACTCCCAGGAATTACGCACAGTCTTACGCACA", "CCGTTGCTAAGCCGGTAGGCCGTGCGAGTTCACTTTCGGCAGATGTTGGC", "TAATTTACGTGTTTTTAGGTCTTGGGCCAAGATACTATGCATCAGAGTTT", "TGTAACTCCCATGGTATCAGCCCGCCATCGGTTGGGAAGACTTTATTGGT", "CCCTTTATTATTGGACCACCGCCGACCTCGCGCCATAGTCTTGTGAGAAT", "AGAAACTCGCCTTGCACTTTCTAATCTGCTACTTAGGATTTACCCTCTCC", "GTACACCAGTGAGATCCTTCCATTTGCGCCCATGGCATCCGGCCGTCTAG", "TGGAGCCAGATCTGTACCATTATCTCTGCTTCCAGGAGGATCGTAAGCAC", "CGTGCCCGAATGGTTTTGTCTGACATCTAAAGTTGTCGTGGATCCTTTGG", "AGTAGGCCCGCACTGTCTCAGCATGCTTAGGGCATTGTCTGGCCCCTCCA", "AGAGCACAGCAACGACAAATCTCTACGTACTGTTATCGTGTAGATTTGAA", "TGCGGGCGCGCTTGGCATACGAGACAGTCTAAAGTGATTGAGTACCCTGG", "AAAAGGAAAACCCACGCGCCGAGGCACATAGGGAATCTGAAATCTGACCA", "AGTCTAAGTCAATTGTGCATCCGGAGAGCGCCTGTTCCAGTTCGTGTTCT", "CTCATTATACTAACACGAGGGGAAACCGGATTCGATAAGGCTAAGGAGGC", "GCACCTAGTACTACCCTCGTCCACCGCAACGTCTCTGCCATTGGAGGGTA", "CTAGATGCGTATCACAGGCTAATCGCAGTTGGGGAACTGGCTCGGACGCC", "GCTCCCTGGCGGGAGTCCAAGGATGCCCATCAGTTCACGAAGAACCACTT", "CCTTCCGCAAAAATTGTGTTCGTAGGCTGAAAAAAAGATGCCCCTCGAGC", "CGTTAGGGTTTAGTTCCAGTCCCAACCGCGGATAGTCGTAGGCGAGCTAC", "ATGTAGCGAAACGTTAGGTGCGAAACTTATATTCATATAGCAACGATGGC", "GAAGCGAATCCCTAAGGTATCCCACGGGTGGAACTGTCATAATTACTGCA", "ATCTACGCACTACCGGAGGGTCTGATTGAAAATTACAACGACAAATCCTT", "AAAGGTATAGCTGACTGGACCAAGAATCCCATTTTACGCCCGGTAAATTG", "ATCGAGGTCCACAAAGGATAAAACGAATGAGGACAACTATATGGACGAAA", "GCGCGAGAGCCGACGGGCTGTTAGGGTAACTGTTAATAGGCCATGCGTTA", "GTACCTGAACCTACCAGGCCACTATATACGGTGCAGCTCATTCTTGTGAC", "TAGAACTGAGTTTCCGTGTTCGAAGTGTCATCCGCCTGGGCGATTCATAC"};
    vector<string> sequence2 = {"CAACTTCGATTAAACCGACGCTCGGACCTTAGACTCTGGGTCCAATTGAG", "GTCGGTCAGTGTAGAAAGCTAAAGGGATTGCAGATCCTCATCACCTGCGG", "GTCGAACTGTCGTTGGGAGTCTTCATGACCGGGCGCTACATCTTAAATTA", "TACAGTTTTTATGTGCGTCAGGGACTGTCCATACCATTGAGTCAATAATT", "CACGTTCTCAGTTCTACCGGATGACCTATCTATGGGGCTGATTGATCGGC", "TAAGATACCCGGAGTCCACCGGAGCCAACAAAGGTTACAACCATACATAC", "GGTAGTGTATCGTAACTGGGTTCTTACGCTTAGTTCTAACGCTTCGTTAG", "TTACCGATGCACAGTGTTCTTCAAGTACTCCTTTTCAGTGGACGCCACTT", "GCGCTGCGCTGCTCACATTGTGTGCGAGGGAAGGTGGAGAATCAAGTTAA", "TAGGCACAGCCTTTCTTTGCGAGTATACGGTATACGTTTATTCGAGGGGA", "TCGCCTGATAAGAACTTATGAAGTTCCAGGAGGTCTATGCGTTTTCGTAA", "CCGTCTTAGATCCGGGGTTCCTAGGGAGACTTAGCTGATTTTATCCAACT", "GGCCCATGAACGTAGGTGCGTGTATAATACCGGTGCATTATCTGCAGCGC", "ACAAGTATGAATTATAAAAATCGGATGCGCCTAGAAAAAAGGATAGTGGT", "TGAGGTGACACACACCTTCGCAAATAACGCAACAATGAACTCAAGACATT", "CCGGGGAACGACTGTGACTACAGACAAGAGAAGTCCGGAGTGGTACAAGA", "TGGGCATGAATCCTCTTCAATGCCGCTATTTGCAGGTATGGGAGGAGACC", "TGAGACAAGATACTAACGGAACCCTGTGGAGACGGCAGCTTATTTTTGTC", "GAGCGAGGGCTCTAGCACGCACTTTGGATAGATGGCAAGTGCCACGGTAC", "GTTTCACATAATAGGCAGACTTGCTGAAATATGACTACGGGTAAGGTACC", "CACGAGGTGACTTTCGCCGATGTCCAATATCTTAGTCATGCACACGCGTA", "TTACTGCGACACTTGTACCTGGCTAAAAACCCCGCTGACCGTCGCGCACA", "AGGGAACGTTGGTCCGTTAGGGAAGCTTCCCCCAACCGGGGCTACCTGTA", "AACATGATCCAAGCTCTGGTTCACTGATGTTAGATTCCTTGGCCGTATCA", "GGGAATTGATCCCAGGCTTAGATCTGAACCCGCACACGTGTAGTATGTCC", "TCGACTCAGATCCCAAATTCGAATGACACTGAGGGGAGACCATGGAGAAC", "CCCCACATTGGTTGAAGAACAGTATTTTGCTCACCGCCAGGCATCTATCC", "CGTCTTTCCGGCAGGGATTATAGGCCAATGATCGTACGCCTTTGACCGTG", "ATTTTTTCAAGTAGAGTCGAGAGAACGGGGATAGTCCATACCGCCTCTTA", "GGTCCGTATACCGCCAACGGGATCTCTACATAAGCGATGTAAGACGTGAT", "CGCTGGGGCCGCGAAGAGCGCGACTGTGACCGCTCGATGGAGTGATCAGA", "TGCGTCCTGATTCTATCACTGTCAAGCACAGATACAATCAAATAACTTGC", "TGCTGAAACAGTCCCGATGCTTCACATCGCCCACCTTCACCTTTCTACAA", "AGAATCTAAATACCAACCATCAGGAGATCCTACCACAAATAACTGTATAA", "TGGCCCGCTGCTATAGTGAGAGTGTTGAACCACTAAGCACCAAGTTCTGC", "GTAACTACGAATGACCCAAAGCGAAAGGCGTGTAACTCATAGGCCACTGC", "CAGTTTATGCACGTACTCGTTTAAGGTATGAGGGCCAATGACGGTTCTGC", "TTGCCACTACGGCTGAATAGTCGTAACTACGACTGACGTAAAGCTCCGTA", "GGTTGATACAAGCTCGCCACTACCAGAGACTGCATGCGGCCGGAGTTTCC", "GCGAATGCTCTGCCACCAGGCTGTGAAAAATAGGAAAGCAGCTTGCAGAG", "ACGTCAGGGATCCGTGTGAACTATACACAGGATCCACCAGTGAAAATCGC", "TAGCTCGATACTCTGTGCACTGAATCACCTTCAGCAAGCTACTACCCGGC", "ATTGTCACTCTAAAAGCCCAAGGGGTCATAGCCAAATCAGTGCGTTCACC", "GGGATATATCGAACGGTCGCACTCTCCTTTACGCGTGGCGGTTTAGTTTC", "AGGCTGACACTGCCCTTACCTAGCCGTTGAACACCAAGACTACGCCGGAC", "GATAGTACGCGAGACTCGGTGGGCTCAATCTCGCGTTATGTGTACGATCC", "TCTTTAGATGGATTCAACTGCTAGACCACGAGACTGCCAGGCGATTTACA", "CGCACATGATGACAAAAAGCTTTATCTTTATAAAATTTAGCGTGTAACCT", "TACACGTGACAGAAAGGCAGGGCCCTCTAGCTGCATCGCAGTGCGATGCC", "CTTTATGGCTAATCGTGAGAGGCGAGTACAAGGCACCTCGTGCTTGCCAC"};
    vector<string> sequence3 = {"AACATTCGAATACCAAAATGCTTGCCTCCAACTCAGCCGCATCGATTATG", "ACGTTTCTTGATCAGCGTATGTTCGACCTAACAAAACCAAGTGGATCAAG", "GTTCATCTACTAGGGTACTACAGATCGGGGCCACACGCGTATCCCGCATA", "CTAATCGGGACAAAACGAGAAAAGGACCTCAGCCGAACTGTTAGAGCGCA", "CTAAAGAAGGCCGGAGCAACCGCTTGGCTTCGCGCGCATGAGGTCATTGC", "TCTGCTAGGTGATAGGGGAGGTGCCCATTGTGGCGAACAACAAGTACTCC", "GGGTAACCGAAAAGTCTCCGCCTGGATTAAACACTGACTGGCGATGGTTC", "CTGCTCTACTCCGCGATCAGTATAATTAATATCTTCATTGTTTGGGATGT", "CACCCCTCTAGAAAACAACCCTTTATATTAACGTCGAAACCCAGTGAGAT", "GTCGGACCTTCTAATGCTCGGCTAAATTGCATTACCACCGCCGATTGTTT", "CCTGAGAGGTATGGGTTTGGGATCGGTGTCGGGGAGACTGCTGTGCCGTT", "GCGAGTGACTCGAGCCGCCCGTGTTGTGCAACTCCTATGCGAAGTCCCGA", "AGACCAGACCGGAAACAATAACAGATGACGCTAGGGGGCAACCAAGAAAA", "CTGGCTCTTGGAAACGAACCTTAGGCCCAACCGAGAGCGTTTTGTAATAT", "AGACAACAAGGTACCTGCCCTACTGAAGAATGAAAGGCTTGTAAACGGTA", "GAGCACGGAAAAGTTGCAGTTCGAAAGCCGACTCTATTGGGCGAGGATCT", "GATCGTACACTAGATGGGTAGTGCCATTTTCTACAGCACAACGCGCACAT", "TGATGCTCCAGCTTCAGAGGGGTCCTGCGCGGTAAACCACCGGGAAAGAC", "ATCAGGAATCCAGAGAAGCCGATTCCGAGCCACTCACCCGGCACCCAAAG", "AGCAGTTGTGACCGCCTGTATGGCCACACTATCACCCGATGGAATTTAGT", "GAGTCTCCGCTTCACGTTGAGTCTGAACGGGTTAGAGTCGGGACATCTGC", "ATTCACACGGACGTTGAAGCACTAATAAGATAATTTGAGACAGACGTGAG", "CGATTGCACTGCCGGGTCATTGGCTAGTATATAAATTATAACTTACTTTA", "GAAACGAAAATAAATCCCTTGTGTGGTCTACGTACTAGCTCCGTGGTGCC", "ACAATTTACGCCTGCCAGGTCATCACATACGTGGGGATGCCATCCTGCGA", "ATATGAAAAAGGGCCGTAAAAGAGCAACGACACTTCCTACCGCTGGCGCA", "AATATAAGTGGTTTTAACTGCTGGCTCGTCTGGTAGGGTGGGGCTACCTG", "CAGCAAATGTTAAGATCGATTTCGTATTAAGTTCTCGGTTATAAGTACAA", "TCCTGAGGTCAACCGGAGACATGCTTAGCTCTTAAGTGGGCGATTCAGAC", "CTCTCGTGGTGCTGAATTGGAAACGTTGTGAATGCTATTTTTTCGACACA", "ACGATTGGCAAAGATACGAGATGAGCCCTAGACCAGCGCGTTGCCATGCG", "TTGTATATCGGGACTTTGGGTACTTCGACAACAACCAAGAATAAAACAAA", "CCTCTTAAGTTGGGAGTGACCAGTCGACGTACCAGGTAGATAATGTATTT", "TAAGGGAAGTTAAACGCCAAAGCACCGACGACGGGAAGTCTCATAGCCCA", "GTTGATGTGACTAATGGAAGATTGTAGCAAGTAACGTACCCGGGAATCTG", "CCAAAACATGCCAAGTAAGTATAACTACTGCAGTTGCGCAACCAACACAT", "AGGACACGTGAAAATTATCAAAAGAATTAAAGGTCGGCATATTGCGGCTG", "CTGCGACATGAGGAGAAACAAGAGTCGTGATAGTTTACGATCCACTGAAA", "TACTTAGCGGGCAATGCGGTCTCAATATTACTCTCCGCCTAATTGTGGTA", "TCCAGCCGGACTAATTGCACTACACCTCTTAATCGCGTCTCGCTCCTCTA", "CTTTGTTCAGTGCTCTAGGCTCAGACCCCAAGCACTCCTAGATCATACCC", "AACAAATTCAGATAGGAACAACAGGCACCGATCTTAAGAGATACAAGTTA", "TGGTGTGCCCAAAACGTGCTACTACTCTCAAAAGTATTAGCGCCGTACGT", "CCATAGGGTCTCCGTTAGCAGACCATCCTAGGCGACTACTTGGTCAATAC", "TGCTTGAAGTAACGAAATGGACGGCCAGACGTTTTCCGTGCATAGAGGGC", "CTTACCTGCAAGGAACTGCTCCCTCCTGGGCAGGGGCTCACCTCTGTCCA", "GCCAGGTACGATAATTCACGCTACCCGGTAATCGCTGCTGACATCTCCGG", "TGGCCCCGCTGGCGACCTCTTGACTAATTGGGTAAATAGGTGTCCAGGAG", "GGCCTCTTATTCTGCGTCGATTGCCCCGGTAGGCGGCAGCAGCGGTTGAA", "TCCGGGGGAGTCAGCAGTGATAAAGACTCTATCTGAAATCCAAGCGCTCA"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 9;
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<string> sequence1 = {"TAACCATAATCTAAGTCTAGCTGCGTGTCCTGGACGGACCATCGTCATGA", "ATCCGTGCGCGAGGTGTGGACTTACGTCGATTAGACGGAATTTATATTCG", "AAAGGTCAATGTCTAGACTTCCCGAAGTCGAATGATCTTCCTACGGTTGC", "GCGAATTTATGTCCAGGTTCTATCGCGGTTGTTCGGGGCGTAGTCGACGA", "TCCTTTTCAGGCGTTACATATAACGTCTGGCCGTTGCGGGGACAGAGGCA", "TCCAGGTTCGCATTGCTATGGACCTTAGCTAGCCCTTAGGTTCTATAACC", "CCGCACTGTGCTTATCGTCCAGTCAACGGACACTCAAAGAGTTAGATAGC", "CGGGTAAGGAACGGAGATACATCCACGGCGCGTTACGGACCGCGGGCAGC", "GCTGTGTAAGGCGAATCGAAGGAGGAATATGGTTATAAGGCCCGGCGCTA", "TCATGTGTTGAGGCACCCGAGTCGTATCACCTTCGAAGAGATTTTCATAT", "GCGCGAAGCCGTCAAGCCGACGGGGCGATAGGAGGCATAAGGGTATCTGG", "GTTAGCTAAGGACCATTTGACAGGTTTGTGGAACAGCACCATCATAGCGC", "AGCCACATACTATTGAGGGTGCTTCTCGGCCCGATCGCCTCTTAACAGTG", "TACGAGCTGGTATAAACAAAATTTGCCTGAGAAGTACGATGAATGGTCTA", "CCAGATGCCTGAAGGTCTTAGGAGCAAGAATCGTCAATTCTCAGAGAAAG", "ACCATGTAGAAATTCCGGTCACGTTCTCCTATCGTTGATTGATTGTCGTG", "CTCCATTGGACGTTTATCACAGCATCTGGTTGTTGCTAACAGGGCTCATG", "CTTCTCGCCTATTTATCGGGCGCACCTATAAGGTTGAGATGGGCGATTCG", "ATTTGAGCAGCTACAATTGCTCAACCGTCTAACCCCGCCGAATATGGTCA", "TTATTTTGTGTCCAAGGGCCCCGCTTGTTTGCACATCAACGAGAACACTC", "TAAACGCATGACTAGACTTCTGGTGGCTCCAAGGTTACCACGACCTAAGG", "ACCACTAGATTTTTCCTTGATTATGAACGATGCGTATAATCTCACAAGGA", "GCAATGTAGTCATAATCCATTGGGCGCAAAGACGAAAGATTAAGGCCAAA", "TTACTATTCGAACTAGGACTCCACAGTGTAGCCGTCTCGTGGAGCGCTAG", "TCCGGTGACGATATGAAGGTCAAGGGTGGGCGGGGCGGTATGGGACCGGT", "GCGCACAATCGATGAAGTGGTTTTTTGTGGTATAGGTGCGTCCGGGACGC", "GATACGCAGTCGCGCACTCTGTTATCATTACCAGCAATTACATATGACTA", "CACGACGTAAAAGGCATATATGGCGAAGGTACATACCCTTCGTATCTATG", "ATTGTAAACAGGAGTGACTTTTCCCAGGGCCGCATAAACACACCTACTAC", "AGGACCAAACAAGCATCATTTGAGCCAGCTTATAGACGTCGGACCGGACA", "TTTGTCAATCGGGACGTTCGCTCGGGTATGCCAGCAAGGCTTAGTGCATC", "GCAAGACTTTCGTTTATATATCAGTCATCACCTCCCTGTGTCACGCCAGT", "ATGCCGCACCCCCCGCTCGGAATAGAAATTGTAATAAGCCATATCTGTCT", "GCCGGGCATTAATATACACTTAAGGCCCTATCACCTGTGCGCAGTTGATC", "AGGTGGCTTTCTGGGAGGTAGATCGCCGAGTCGACGACCTGTGCCAACCG", "AACCGCTATCTCACTGGGCGAACAGACAGTTGCGACGGTCGTCCAACAAT", "CGCTCTCATATATCGGTGCGGGCGTACAGCCACTATCGGGAGCTACTTGG", "TGTACGCGGGCTGGCTGCGGGAACCGATGGCCCACCGGTACGGGGACCGA", "CTCGGCGCCAAGTCCTGATGTTGCCAAGGATTAGAGACCTACTCACATGG", "CGTGGTGTGAGCCATCCCCGTACCACCCTTATGCTCCATCTGAAGTTACC", "TAAGTAGGTATGAAGCGCTAGTCTTGAGGGGCGGGACCTCAGCCATGTGA", "ACCCGAACTAACCTGGACTAGCTGCGTTGGCCACACTCTCTCTTTAAGCT", "CATGAGCATCTGAGGACTGCCGGCCATGCCCTGAGTACTTAACCGACACG", "ATAAAGCTTGACAACTTAAGCATCAAAGCGATGAGATATGACCAAGTAGC", "TCAGCTCCAAGGAAAAGGCGTGCCACGGTAGGCAGACCCAAGGTGTAAGA", "GAATGTTCCGCGTTCACGTGGTCTAGGACTCGTTGGCAGTGAGATTGGTT", "AGAAACATCTACGGTCGTTCCGACTTGCTACGTCAAACGGAGGACGAGGT", "CATTGATAGGACCCCCCGGAGAAACGTCGGTCGTGTGTGCTACACTGTTA", "GCCCTCGCGTGGATGCAGATATTTCTTGGTCTGCCGCTTGGCTGGATCCC", "GACCGGATGGGGGTAAACTATCTCTGCGAGAGGCGCACCTGCTACTCTGT"};
    vector<string> sequence2 = {"CATCGAGATCGGGTTTTAGCATCTCTGAAAGAACAGTGGAAGATCGCAGC", "GATAGCATGCTTCTCAAGCTGATTCCTATGGCCTGTTCGATAGCCTCTGG", "CCTCCGTTCTCGTAATGCAGTGCGTGCTGTGATACTGGTGGTCGTCACCA", "GGCAACCGACGATGACTTGAAACGGCTGCAAGATAGGCAGTTTTTCATGT", "CCTGGGGTTACCCTTCCGTCTTCGGGGGTAATGATTGGGAAGGTAGGTTG", "CCACTCGCATCTGCTGGCCGTGCCCTCTGAACCGCTCATAATTTGTATTC", "CAGTAGACATCTCACATGGACTTGCTTCAACACGTACAAACTCAACCCCA", "CATCAGACGATCGAATCAGATGTCCTGGCTTATCTCCACGCACACTGTAC", "TATGGCAGTGTATAACCGACTCCCGCATACAGACCAATCAAAAATACCAG", "TTATACTCGATTGACGTCAAACGCCTGCTCCCCGCCTCCTGATTTACCGG", "TGCCTGGCTCAGTAACAATGTTATCTTATCGTCGCTGGTGTCAGTAGTAA", "CTGTAAAAGCACCACCATGGAAGGACGTATCTATGCAAATTCCTCTCGGC", "GAGTGAATTAGTGAGGCTTATGTCCTAACGTGCAGGGGTGTTGCCTGGCG", "ACGGCCACATCACGCGAGACTGAATTGCTACGACACTACATACACAGCGG", "GGAAGTTTCACCTCAAGGTGAAAGAGGACAGAGGTTTAGGCCCCTACCAA", "CGTAGGTATCGTTTATAAGGACTAACTCGTGTCGCACCGTTCACTATTTA", "TCTCGATTTTCAGCTTTTATTAGGGTGTCGCTCTACTTTCCAGAAATGTT", "GCTTTTCTAGTTGTCTCAATCACGTTTTCCCTTGGCCGTAGTAAGGAACA", "GGGCAACTACTCGATGGTGACTGTCTCGTCATTCTTATATACCGTCATGG", "ACACATCCCAATTCCAGACCACGTCGACTTAGGGCCTTCCCAGGGGTTTT", "TGAATTGATTCGAAACGGCGTTTCTTTTCCCTAAGGCTTCTGTAGGTGGC", "GTATTGTATCCCTGTATACGTCGTTACCTTGCATATAACCATTGTATCAC", "GCTTATTATTATCATGTAAAAAATGACTTCAAGTGATTGCCCCGCAGTAA", "TTAGTTTAATCTCTTTTTTAACTAGTCGGACTTTGCACGACCGATGGGCC", "CGCTGTCAGGCCCTCGCAACATCGCCCACTGTGTTCTTTGTTTCGCCGTC", "AATGGTCCTATTTTTAAAGAGGTCTCATTGTCATAGCAACTACCGACAAG", "TAACCCTGGTCTTTCGATTCATATACAAAGTCGGAAACATACCTTTGGCA", "CTGCAGACGGTCTGGATGGAGGGTCGATGTATTGCTGACACTAGCAACGA", "CGTGCATACACTCGGTAAACGTCATCTGGCAGCTACTGACCTGCATAGGT", "GGACCACGCTAAACACAGTTCAGATTAGCTGCGGTGCAGATCAGCTTTTC", "ACCCCTCCGAGGGAGAGAGCTTCACAGTGGCACTCCCATGCGTCTGGAGG", "AACGATGGTAGAGTCATGCCGTTAGTTCTATAAGCGTACGAAGGACATGT", "TGTTTAGCGGCAATGATCTGAATACCACTATTCTTTTCGACGTGTCTGCC", "TAGCGGCGGCTGTTGCGTCCATGGTCTAGGAACTATACTAGTGCCATGCA", "GTAACTTTAAAGGTGAGCGCGTAGAAGTGGCGCAGTCTGGCCACTATTTA", "GACGCTGTGCGTTAGAGGCCGAAGAGAATGCGTAGGTCACCATTGCAGGA", "CGGGATCCAAGTGCCGTTATAACTATTGTAGTTGTCATGAAGTTTTGCTA", "GAGCATGAAGCGATGTTGGACCTGCGGGTATGGTTCTGACTTTTACCTCC", "TGTATCGGGAATAAGGACAATCACGCCATCAGAATGTAGACGCATCGGAC", "CACATCAGTGCGCATTATGGGATTCGTGGCCACGCAGAGGCGTGTGTACT", "CTGCGGTCGAGCCTTGTCTACTGCGCGACCGACTCTAGTAGCACGGTTTG", "GGATATTTGCGCGTAATTGCGCAAACCATTCGAGAAAAGATAATGGCTGT", "TTAGAACAGCAAACTATAGCGAAGACATCCAGCTCAAGGCTGCTGAGAAT", "GTGAACTCGACAGGAATGTAGGTTGGAAATTTTAGTGATCCCAGTATTGC", "GTCTTGCACAGACATACAGCCCCTCATCGGCTAGTACTGTCCGCTTCCAT", "TCGATTGAGGCAATGCGTGCCATGACTGTATTGCTTTTGTCGTGGGAATA", "GTTGTTCTCTTGCCGTACGACGGTACCGTCACTGGAAACAGGCGTTTGGA", "TCTCGAATGTGAGATCAGTATTTGGTTGTAGGGGATACCCCGCAATCTCT", "TCATGGCGGCCGCTACCGTCGCACCGACGGAAGTCGCGCCTTTGAACAAG", "CCAATCCACACGATCTGCAAGGACTTGTGGACTAGTTGGGCGTCTTGAGC"};
    vector<string> sequence3 = {"TTACAGGTGCTTATTAGCCGGGCGGGTCCCCTGCGCGTTTTCCCAAACGG", "AGCTGCCCGGGCGTTAGTAGGGAATAAATATTAGCGCAAGTGTATTACAC", "ACCGGCTCGCTCCTTTACTCGAATATCCTGTTATATCTGGACTCGCCGTC", "ATTGCTCGCTCGGAGATAAAGCGCAGTGATGACGTGTTTGGCGACCAGTG", "GTTTCCAGAGTCGATATCCGACATAGTGCAGCGACCGACTGGAGGTCCCT", "TCACGAACTGTGGGTATAAGTGGAATTTATAACATTACTCCGCGAGTAGG", "GACCCGCGTCGCATAATAGCCTCTTGTGGCCCTCCGGACCGAGGCAGTGA", "GAGTTTGCATCATATTAGTCTACGCCACGACATCCCTCAGCTTTCGCTAG", "CCGCTTGTCATCACGGATTGCCGGGCGTCTGACACCCTAGCAAGAGTCAT", "CCCCCTCGTTTCATATGTGCACCTCCTGAAGAGTGTTAAAGTCATAACTA", "CAGGGATGGTCACAGATCAGCATAACACCACGGATGTTGATTGTGCTCTA", "CAGTGATCTTGGTTCGGGCGACTGATGGGTATGTTTGTCGCGAAGTGTAC", "TTCACCTACCAACTGAGAGTGCGCTATTCGAAAGGAAGCGATCAGATTAT", "GCCGCCTGGCGGCTCTTTGGCTTGAGCAGAATCCGCACGTCCCCACCGGT", "TTATACCAATGACGCGACCCCCGCGTCTCATGTACAGTCTTCTGTGAAGT", "CATGTAACAGTTTCCGGCGTGTTCAGACGAAAATACAAACCGGAATCAGC", "TAATGAACCACCCTCCGCCCTGTCGCGGTCGTGAGCAGCGTAGTGGGGGT", "CCCGTTTGCGGGTAAGAGCCGTGTGACCGTAGGAGACACACCTTGCCGGA", "AAGAACACTAGGATCGGGGCCCCATGGAGTCTTATCAACTTGGAGGCAGG", "CTAAAGGCGCGCCGTTTCGGGTATCAGGTCAAGAGAGCGTTAACAGTCCT", "ACCTAGACATAAGCTAGGTTGCCACGGACCGACCAAAGCGGCACGGCTCT", "TGTATTGGTCCGTACTTCTCACACTAGATGTCAAACACTAGGGTGTGCTA", "CTCTCGTAAGCTCGCTTGCGACCTGATAGAGACCGCACGTGTTTGTAGTT", "ATCGTCGTCAGCTAGGCACAGAACACCCTTTGAGACACCGCCCGCGGGGC", "CGGAGTGCCTGATACACATGGTACGCCGAATCTCTGAAGGATTTAGATAC", "ATATACGCCGAGAGACTGGTGTCGTGATAGCCTATACGTGTCTCCTCACC", "TTGTCGATTCCCCCCTCATTAGTGATAGCGTGGGTAGCTGTAAAGGTCTA", "ATTTGTGTGAAACTGCCTGGCGATTAACTGTAACCGTGGGATACGTAGCC", "TCGAGCGTGTTACGAAGTCAGTTTGCGAGGTGTAAGATGCCTCGCCTAGT", "GAGGGAACGCACCTGGCGCAAGTGGCACTTCACGAGGGAATGACAGCAGG", "TGTTATCCATTTGTTGATTGTGAGAATAGGAACTCTCACAGCACTACTCC", "CTCGTTCGACTGTAGTGGAGCGTAAGATGCTATGGGTATATTAGTTAAGA", "AAGTAGCGGACTAGCGTTCGTGCTCCATCCGACTGGATGTTTCAGGCCAC", "CCTTGTAGCCAAAACGATTTCTGTCGAGCCTGTTCCCTAAGAGGACAGTG", "GGTCGACCGGGTGTGTCGTGTAATAGATGTGAAGCTATCGCGAGGTTTCC", "CGGACTTTACCGTCCTCGATATATTAGCTGTGCAAGACACCCGGCATGAT", "CCTAAATACGGAGAGAAAATCTAACTAGTACAAACACTTCCTGTGTCCCC", "TAGAGTGGTGAGTGCCCAGTCACCACGGCGATACGGCGTCATTGACTGGA", "AACCGTAGTTCTAAAAGATTGGGTCGGGGGGTTGTGCTGACCACACCACC", "AGACGGCTCTTCTCTTTGCACTCAGGTTACATCCCTCGAGCTTTGTTTCA", "CGCGAGCACAACTAACTAAGCATCCAGAACGTGCTTCGCATACGAGCTCT", "GGGGATGGACAATTGGCGCGTACTCCACCCCCAACGTCTAACGGACTCTA", "GACACTCAGCGGATAATCAAAGCAATGCGGGGGCTGATGGTTTCCCAATT", "ATTAAGAATCACTATCTGAGCAGCCGAGTTTTCTACGGTTAACAGACCGC", "CATGACCTAGCCCTGATCCTGTCGCGACCGATTATCGTCATTCTAGACTA", "GTGGTCAGACCAATTGTTCACTCGTTATATCGCACCGGGAATCAAGCAAT", "GGTTTGAATCCGGAATTGGTGAGTCCATTAAGGAATCTTCAGTGCATAAT", "CTCCAGATTGCTGACTTTCAAAGAGTTACTTGGTTCGCGTAGCTATGTTA", "CGTGGGGCTCCAGCTTCCTGATGATAGCGCCAGTTACTAATTGTGCTAGC", "AGGATCCTGGTGAAAAACTAGAGTCGTATTTCAAATGCCCATTCGGCTGC"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 8;
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<string> sequence1 = {};
    vector<string> sequence2 = {};
    vector<string> sequence3 = {};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 1252;
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<string> sequence1 = {};
    vector<string> sequence2 = {"CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCTCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCTCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCGCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC"};
    vector<string> sequence3 = {};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 1065;
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    vector<string> sequence1 = {};
    vector<string> sequence2 = {};
    vector<string> sequence3 = {};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 2450;
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    vector<string> sequence1 = {"CCGGGTTCTTATCGCTAAGCACCGGGCGCGGATCGGGTCTTTCTAGACTG", "ACGATACTTGTCATGCACATGCTCATTTCACGGAGAGTCGCGCCGATGTG", "AGCCAGCACTGTCCCCTGATAAGATAGCCGATAATGTACTTCGATACCCG", "GACAGCCAATCGTCACGGTCGCACATGAAAAGGATGCATGGGGCCTATGC", "CAAACAGATCACGGCCTCTGCAGACGATAGTAGGGCACGCTGCTTAAACT", "CTTGCAAGAAACCACCATCCCTGGCACACATGGTACAGAAACATGGCTAG", "ATAGAGGTACTGGGGGCACGCGCCAACGAGGTATAGGCATGTGGTTTCAT", "GTGTTAATTCTTGCGATGTAGCTGGACAGGATGCTGGCACGAGCGAGACG", "GCCGCCTATCTTGAAGTCCCGGGTGGACTTTTATAGGTCCGTATGCTTGA", "GAGTGCCACTTGACTCATTAGATCCTCGTACATCGCTCGAGGACAACCAA", "ATCAAAGATAGCGTCCTAAGAAATATCTTTAAGATTCTCCAGTTGACATG", "TGGTACGCGCGACGCGGTCGAAAATGAACCCTGCTATCGTGTCGTCACGG", "AATGTGAACCCCATAAGCTCCTAAAAACTATGTAGGTCGAAGTAGTACAT", "CTCGGCATTAAGCGGTTGAAGCGGGCGTAAGCTAGGGTACCTTTGTGAGA", "ATCAGGCCTTGACATGTCCGTCATACCTTTGTTTCAACGACTCGGCATAC", "AGCTGTTATAGTTCCCCGGATTAGGTGTATAGAGCCGGAAGAATTAGCAT", "TACTGGAATGGGTATTCAGATAGCAACAGAGATCCCTACGATAACGTTGC", "AGAATATTGCAACTGACTACCACCATGAGCCACCTACCAAGTAGGACGCG", "GGCTCTGCTGCGCGGTGAAGAATACCGTAATTTAAGAGGAAACTCGCCCC", "TGGGGGCAAGGTGGATGATGTAGGTATCAGGTGCTTTTTCGAATCAGACA", "TGACACATAAGAAGGAGAATCCAATTGGCTTCTCATGCAGAATGTAATGC", "AGTGCCAATAAAGACGGACGTAACTCGCGATCGCCGCCAGCCTTGCTAGG", "AGCCCGTTAGTCACAGGTCACGAACCGGGAGGCCCTGGGCTACGCGGTTT", "GATAACGATGTGCGATGTTAAGGTTGCCCCTCGGATCTCGCCACCACCTT", "CTCAAAAAATTCCTACATCCGTGATGGCGTGCTCGACTCACGCTTCTAAG", "GGCCACTAAGACCAACTTTCCCTTTACTTTCAAGGCCACAATGTAGGGCG", "GGAGTCTTTCGAGATTCACCGGTTATCTTTATATGAATACAGTCTACAGA", "CGACTTTGAAGTAACCTTTGACCGTTTCACCAAGAGCGGGGTAGACTAAC", "TGACGCGGGAGATCGAGATCCCCAGCCCTACGTGCTACTACAGTACCGCA", "TGTTGCTATGGGTTACCATGGAACGGTTGATGATAAGGTCGAGGTTCGGT", "TACAAGATGGAGTCCTACCGGGCAAGTCCAACCTAAAGCACAAGAGATGA", "AATTATAGCCCAGCCGCGTGGCTCACTGCAGCCACTTGCAAGGGCCGTGT", "ACCAATGCTGCCCATACATGCATTATCTGATCAAGTCATTTTAACCTGTT", "CCCCGGAGAACGGGAATGTTACAAAGGCGTGTCTTTATGACGCCTCTTTT", "GATTTTAGGGCCTGTTTGAGAAATGCTGAACCATGATTCGCGAATCGCTA", "ACCGTTGGGAGATCCAGACTCCACCTGAATTCGCCTTGAGTCACTCTGGT", "GCAGTCAAACTTTGTGGGCAACTTCGGGGCTTAGCCTGATGGCATCATCA", "TTTTATGGCAAACGACAAGACGGTGCTGCGTATACCGGTGGGCGGTGCTA", "GGAAGTGCCCTTCGAAGTATTCCTTGCTCCTCAAACAGTACGGTGTAATC", "TTGAAGTTTATACGAGTCGTTCCTGACGGAATCCAAATGTGATTTCCCCC", "TCGCACTACACTGTTAGCGCATGTCGTGACTCTTAAAACCAACAAAAGGG", "GTATTCTAAGTTAAGACCGGGATGGGGAACGGACCTCTGAAGCTGATGGC", "GTACGCGTCTCGCACACTGCGTGATCATCACATTCAGGGTATACGTGCCG", "CCCACCCCGCCCACCCTATGAGCAATGCACCATGTTAGTATGCAGCCCTT", "AGACACCGGCGGTCGGGTGTCAACGAGAACCCCTGGCAAACGTATTGATT", "GTTGTGTCGTGCAGCAGTGCCAGTCATGTGACTTAATATAGTTTTTATGC", "AATATTCTTCCATGAGCAACTGACCTGTCTATGTTATGCATTAGTAAAAC", "GCAACTAGAATTCGGCTAGCCGTACGCATGACGTGTGTTACACCGATGAG", "CCTTCTGCGAGTGGCTTCCCCCCTAGAGTGATACAGCCGAATTCGGACTC", "AGAGATCAATCCCAAGCGCGGCGAATTCCCAGGGGAGGCCTCCTGTCTAT"};
    vector<string> sequence2 = {"CCGGGTTCTTATCGCTAAGCACCGGGCGCGGATCGGGTCTTTCTAGACTG", "ACGATACTTGTCATGCACATGCTCATTTCACGGAGAGTCGCGCCGATGTG", "AGCCAGCACTGTCCCCTGATAAGATAGCCGATAATGTACTTCGATACCCG", "GACAGCCAATCGTCACGGTCGCACATGAAAAGGATGCATGGGGCCTATGC", "CAAACAGATCACGGCCTCTGCAGACGATAGTAGGGCACGCTGCTTAAACT", "CTTGCAAGAAACCACCATCCCTGGCACACATGGTACAGAAACATGGCTAG", "ATAGAGGTACTGGGGGCACGCGCCAACGAGGTATAGGCATGTGGTTTCAT", "GTGTTAATTCTTGCGATGTAGCTGGACAGGATGCTGGCACGAGCGAGACG", "GCCGCCTATCTTGAAGTCCCGGGTGGACTTTTATAGGTCCGTATGCTTGA", "GAGTGCCACTTGACTCATTAGATCCTCGTACATCGCTCGAGGACAACCAA", "ATCAAAGATAGCGTCCTAAGAAATATCTTTAAGATTCTCCAGTTGACATG", "TGGTACGCGCGACGCGGTCGAAAATGAACCCTGCTATCGTGTCGTCACGG", "AATGTGAACCCCATAAGCTCCTAAAAACTATGTAGGTCGAAGTAGTACAT", "CTCGGCATTAAGCGGTTGAAGCGGGCGTAAGCTAGGGTACCTTTGTGAGA", "ATCAGGCCTTGACATGTCCGTCATACCTTTGTTTCAACGACTCGGCATAC", "AGCTGTTATAGTTCCCCGGATTAGGTGTATAGAGCCGGAAGAATTAGCAT", "TACTGGAATGGGTATTCAGATAGCAACAGAGATCCCTACGATAACGTTGC", "AGAATATTGCAACTGACTACCACCATGAGCCACCTACCAAGTAGGACGCG", "GGCTCTGCTGCGCGGTGAAGAATACCGTAATTTAAGAGGAAACTCGCCCC", "TGGGGGCAAGGTGGATGATGTAGGTATCAGGTGCTTTTTCGAATCAGACA", "TGACACATAAGAAGGAGAATCCAATTGGCTTCTCATGCAGAATGTAATGC", "AGTGCCAATAAAGACGGACGTAACTCGCGATCGCCGCCAGCCTTGCTAGG", "AGCCCGTTAGTCACAGGTCACGAACCGGGAGGCCCTGGGCTACGCGGTTT", "GATAACGATGTGCGATGTTAAGGTTGCCCCTCGGATCTCGCCACCACCTT", "CTCAAAAAATTCCTACATCCGTGATGGCGTGCTCGACTCACGCTTCTAAG", "GGCCACTAAGACCAACTTTCCCTTTACTTTCAAGGCCACAATGTAGGGCG", "GGAGTCTTTCGAGATTCACCGGTTATCTTTATATGAATACAGTCTACAGA", "CGACTTTGAAGTAACCTTTGACCGTTTCACCAAGAGCGGGGTAGACTAAC", "TGACGCGGGAGATCGAGATCCCCAGCCCTACGTGCTACTACAGTACCGCA", "TGTTGCTATGGGTTACCATGGAACGGTTGATGATAAGGTCGAGGTTCGGT", "TACAAGATGGAGTCCTACCGGGCAAGTCCAACCTAAAGCACAAGAGATGA", "AATTATAGCCCAGCCGCGTGGCTCACTGCAGCCACTTGCAAGGGCCGTGT", "ACCAATGCTGCCCATACATGCATTATCTGATCAAGTCATTTTAACCTGTT", "CCCCGGAGAACGGGAATGTTACAAAGGCGTGTCTTTATGACGCCTCTTTT", "GATTTTAGGGCCTGTTTGAGAAATGCTGAACCATGATTCGCGAATCGCTA", "ACCGTTGGGAGATCCAGACTCCACCTGAATTCGCCTTGAGTCACTCTGGT", "GCAGTCAAACTTTGTGGGCAACTTCGGGGCTTAGCCTGATGGCATCATCA", "TTTTATGGCAAACGACAAGACGGTGCTGCGTATACCGGTGGGCGGTGCTA", "GGAAGTGCCCTTCGAAGTATTCCTTGCTCCTCAAACAGTACGGTGTAATC", "TTGAAGTTTATACGAGTCGTTCCTGACGGAATCCAAATGTGATTTCCCCC", "TCGCACTACACTGTTAGCGCATGTCGTGACTCTTAAAACCAACAAAAGGG", "GTATTCTAAGTTAAGACCGGGATGGGGAACGGACCTCTGAAGCTGATGGC", "GTACGCGTCTCGCACACTGCGTGATCATCACATTCAGGGTATACGTGCCG", "CCCACCCCGCCCACCCTATGAGCAATGCACCATGTTAGTATGCAGCCCTT", "AGACACCGGCGGTCGGGTGTCAACGAGAACCCCTGGCAAACGTATTGATT", "GTTGTGTCGTGCAGCAGTGCCAGTCATGTGACTTAATATAGTTTTTATGC", "AATATTCTTCCATGAGCAACTGACCTGTCTATGTTATGCATTAGTAAAAC", "GCAACTAGAATTCGGCTAGCCGTACGCATGACGTGTGTTACACCGATGAG", "CCTTCTGCGAGTGGCTTCCCCCCTAGAGTGATACAGCCGAATTCGGACTC", "AGAGATCAATCCCAAGCGCGGCGAATTCCCAGGGGAGGCCTCCTGTCTAT"};
    vector<string> sequence3 = {"GCTGGCGCAAATTAAGTGCGTTCGGCGTAAATCTTTATGGCATCACTGCT", "TCCTGAGGAAGTGAGTTTACACTTCGCTGAGCCCGGTCAGTATACGATGG", "CGTGACAAGGAAAGGCTGTTTGAGATTCAAGCAGTCGCGGAAACCAGTGC", "ATACGCGAGATTTGCCATGTGCTCGAAATGTCGTAATCCTGAAGGCACGT", "AAGTGTTATAGCGGGTAACAGCGGAGTCCGGGTAATAACTGTGATACCTC", "CTCATGATACAACGCCCATTGTGACGGGCAAGTTAGCATAATCGAGCGGC", "GAAACCCATGTGGGGCTTGAGTGAAACGTTCAATCGGCACGGACAGAGAC", "ACAGATCGGTATGTCCCAACCTTAAGCCCATCCAGGGCAATCTATGTGCG", "GGCATGCCGCAGAATACTCAAAGGTGCGGTAGTCGGCCAGTCTCTACTTA", "TCGCTTTTCCGCTCATAGCCAATTCCGACTTTATGCTAAACTAAACATGG", "AGTCGCACCCGACGTGTGGTTTTCCACTGTAAAGACCCAGGCCGGGCTTA", "TGTCGATGTCTAATGCCCATCGATGAGTACCTTATTACTGTTGTGAGTGC", "GACTTGATGAAACGGCGATAGGTAGGGACATCAATCGAAGTCGCGTTCCG", "CGGGCATGGGTCGATAACCCACGTCTGGGCAGAAAGATATAAAACGATTC", "TTGAATCATTCCACGGAATTCCACATCTACCGAATTACGTTGACCGGTAC", "GGCTGGTCTAACAGCTACTGACAGCAGGGGATATAGACTGATCGGGTATC", "GCGCGAGGTAGGCGCTTGGAAGAAACGCGTGAACATCAGCTTACCAACGT", "CAGCCCGCGTAAGAGCCGCGAAGCTTCCGCGCTCCCAGGTACCGGTCAGC", "GGTTATATCGTTCTATCGAGAACGTCGCTTAATCTGGATCACACGGCAGA", "TATGTAGACTTAGGATAATGCTAGTTGGCGTGCACAAAAGACCACGACTC", "GGATACGCGTGTAATACTGTAGCTGATACTGTAAGAAGGTCCATGGAGTC", "CGCTTAAGACACAGGTATGTGATTGGAAGGACCGTTGAACCGTGGGTTAT", "GCTGGGAAAAATGTACTTGCTTCTCTATTGCAGACCTGATCTTATACTGT", "TCAGGCTATTGCTTTGGAATTCATTTGACTGTCTCTACCACCCAATCTAC", "CAGCCAGACCTAATGAACTTGGTAACTACCCGCCTCAATTGGACAGCCGG", "AATGCTATCTACTGATGTCTTGGTTCAATGACATGCACCCATGCTCTTGG", "AGGCGTAGACGTCCTCTTTTGCACTCCCGCTCCTTCAAGCATGAACTATC", "AATTATCCATGGGAAGGTGGTAAGTGTACACTACCCATATTCCCTACTAT", "TGTGACCAGCGCTTTTTACCGTATGCAAGAATTATAATATGGGGCGCGAC", "GGTGCAGCACAGACGTTAAACTTGCCCGCGTGAGCACAGATGGCGACTGT", "ATGAAGTAACGGTTTTACCTCTACGCTGATCAACGACCCAACTGTTCGGG", "ACGGGATGGTAAGAGGGCCGGAGGGTGAAACAGTGACATACAAGCTGTGA", "AAGCGACCTTAGATTCTACAATCTTGAAGCTATCTGCTCACTAATAGCCG", "ACCGGGCCGATAAGTAGCCGTGCGACCTAGTCCGGTCCCATTTGTTTGTC", "ATACTCCAGACGTTCCGGTTCGTACTGAACAAAGAGACTCTGCCCTGCCT", "GTGAGAATAGTTCCTGCAGCATATAAGTAACATGCGATGTACTTGTTAAC", "GGTCTCGCACGCGGGGATCAGTAGTCCAAAATATCGAATGGGATGCCTCG", "GATTGAAAATGTTGTTAGTGGGTAAACCATTACGCTCTCTTTCTCGAAGT", "ATACAATGAGCCAGAAAGGCCGGTCATGATGATTCCCAGTTAGAGGGCGG", "CGCGTTGCAGCTGCATCTAGTTTTGTGCTGTATTGTGATAGTTGAATTCC", "GCATGGAAAGTCACTGACGTACACCCCTATATATAAGTTTTGGCGGCCGG", "CAGATAAAGTCTTACTTTAGTACAAATAATTATACCTTACCTGGAAATGA", "AGACCTCTATGAAACAAAGATTGACACTTCGACAGTTCGTGACGCGGACT", "TTACTATCTTGTCAAAGGGTCCCTTACTGTATTGGCTAATTGGGCCCTCG", "TGAGAAGGGGCATAGAGTCTCGCTGAGTATAGTTGGTTAACATGCATCAC", "TTTAATCGCATAATTTTTCCGTCATTTTTTTATTATGACTAGCCTTGGTA", "GATTCGGTCGATCCAACACACATGCATCTTTACGCAGTAGTTGTCGCCTT", "TTACGGAAGACCGAGTGAAGTCCGACTTGAGAGCTCCACGCTCTACCCAC", "AAGGCTTCGGTTAGGTGAGCACCAGATTGCCGAAGTAGCATAAGCCGATG", "TACATTCGACCATATGCTCGTTTGAGTATCCCCGGTCGAGGGGATTGTCT"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 10;
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    vector<string> sequence1 = {"CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC"};
    vector<string> sequence2 = {};
    vector<string> sequence3 = {};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 1252;
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    vector<string> sequence1 = {};
    vector<string> sequence2 = {};
    vector<string> sequence3 = {};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 1065;
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    vector<string> sequence1 = {};
    vector<string> sequence2 = {};
    vector<string> sequence3 = {};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 2450;
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    vector<string> sequence1 = {"CCGGGTTCTTATCGCTAAGCACCGGGCGCGGATCGGGTCTTTCTAGACTG", "ACGATACTTGTCATGCACATGCTCATTTCACGGAGAGTCGCGCCGATGTG", "AGCCAGCACTGTCCCCTGATAAGATAGCCGATAATGTACTTCGATACCCG", "GACAGCCAATCGTCACGGTCGCACATGAAAAGGATGCATGGGGCCTATGC", "CAAACAGATCACGGCCTCTGCAGACGATAGTAGGGCACGCTGCTTAAACT", "CTTGCAAGAAACCACCATCCCTGGCACACATGGTACAGAAACATGGCTAG", "ATAGAGGTACTGGGGGCACGCGCCAACGAGGTATAGGCATGTGGTTTCAT", "GTGTTAATTCTTGCGATGTAGCTGGACAGGATGCTGGCACGAGCGAGACG", "GCCGCCTATCTTGAAGTCCCGGGTGGACTTTTATAGGTCCGTATGCTTGA", "GAGTGCCACTTGACTCATTAGATCCTCGTACATCGCTCGAGGACAACCAA", "ATCAAAGATAGCGTCCTAAGAAATATCTTTAAGATTCTCCAGTTGACATG", "TGGTACGCGCGACGCGGTCGAAAATGAACCCTGCTATCGTGTCGTCACGG", "AATGTGAACCCCATAAGCTCCTAAAAACTATGTAGGTCGAAGTAGTACAT", "CTCGGCATTAAGCGGTTGAAGCGGGCGTAAGCTAGGGTACCTTTGTGAGA", "ATCAGGCCTTGACATGTCCGTCATACCTTTGTTTCAACGACTCGGCATAC", "AGCTGTTATAGTTCCCCGGATTAGGTGTATAGAGCCGGAAGAATTAGCAT", "TACTGGAATGGGTATTCAGATAGCAACAGAGATCCCTACGATAACGTTGC", "AGAATATTGCAACTGACTACCACCATGAGCCACCTACCAAGTAGGACGCG", "GGCTCTGCTGCGCGGTGAAGAATACCGTAATTTAAGAGGAAACTCGCCCC", "TGGGGGCAAGGTGGATGATGTAGGTATCAGGTGCTTTTTCGAATCAGACA", "TGACACATAAGAAGGAGAATCCAATTGGCTTCTCATGCAGAATGTAATGC", "AGTGCCAATAAAGACGGACGTAACTCGCGATCGCCGCCAGCCTTGCTAGG", "AGCCCGTTAGTCACAGGTCACGAACCGGGAGGCCCTGGGCTACGCGGTTT", "GATAACGATGTGCGATGTTAAGGTTGCCCCTCGGATCTCGCCACCACCTT", "CTCAAAAAATTCCTACATCCGTGATGGCGTGCTCGACTCACGCTTCTAAG", "GGCCACTAAGACCAACTTTCCCTTTACTTTCAAGGCCACAATGTAGGGCG", "GGAGTCTTTCGAGATTCACCGGTTATCTTTATATGAATACAGTCTACAGA", "CGACTTTGAAGTAACCTTTGACCGTTTCACCAAGAGCGGGGTAGACTAAC", "TGACGCGGGAGATCGAGATCCCCAGCCCTACGTGCTACTACAGTACCGCA", "TGTTGCTATGGGTTACCATGGAACGGTTGATGATAAGGTCGAGGTTCGGT", "TACAAGATGGAGTCCTACCGGGCAAGTCCAACCTAAAGCACAAGAGATGA", "AATTATAGCCCAGCCGCGTGGCTCACTGCAGCCACTTGCAAGGGCCGTGT", "ACCAATGCTGCCCATACATGCATTATCTGATCAAGTCATTTTAACCTGTT", "CCCCGGAGAACGGGAATGTTACAAAGGCGTGTCTTTATGACGCCTCTTTT", "GATTTTAGGGCCTGTTTGAGAAATGCTGAACCATGATTCGCGAATCGCTA", "ACCGTTGGGAGATCCAGACTCCACCTGAATTCGCCTTGAGTCACTCTGGT", "GCAGTCAAACTTTGTGGGCAACTTCGGGGCTTAGCCTGATGGCATCATCA", "TTTTATGGCAAACGACAAGACGGTGCTGCGTATACCGGTGGGCGGTGCTA", "GGAAGTGCCCTTCGAAGTATTCCTTGCTCCTCAAACAGTACGGTGTAATC", "TTGAAGTTTATACGAGTCGTTCCTGACGGAATCCAAATGTGATTTCCCCC", "TCGCACTACACTGTTAGCGCATGTCGTGACTCTTAAAACCAACAAAAGGG", "GTATTCTAAGTTAAGACCGGGATGGGGAACGGACCTCTGAAGCTGATGGC", "GTACGCGTCTCGCACACTGCGTGATCATCACATTCAGGGTATACGTGCCG", "CCCACCCCGCCCACCCTATGAGCAATGCACCATGTTAGTATGCAGCCCTT", "AGACACCGGCGGTCGGGTGTCAACGAGAACCCCTGGCAAACGTATTGATT", "GTTGTGTCGTGCAGCAGTGCCAGTCATGTGACTTAATATAGTTTTTATGC", "AATATTCTTCCATGAGCAACTGACCTGTCTATGTTATGCATTAGTAAAAC", "GCAACTAGAATTCGGCTAGCCGTACGCATGACGTGTGTTACACCGATGAG", "CCTTCTGCGAGTGGCTTCCCCCCTAGAGTGATACAGCCGAATTCGGACTC", "AGAGATCAATCCCAAGCGCGGCGAATTCCCAGGGGAGGCCTCCTGTCTAT"};
    vector<string> sequence2 = {"CCGGGTTCTTATCGCTAAGCACCGGGCGCGGATCGGGTCTTTCTAGACTG", "ACGATACTTGTCATGCACATGCTCATTTCACGGAGAGTCGCGCCGATGTG", "AGCCAGCACTGTCCCCTGATAAGATAGCCGATAATGTACTTCGATACCCG", "GACAGCCAATCGTCACGGTCGCACATGAAAAGGATGCATGGGGCCTATGC", "CAAACAGATCACGGCCTCTGCAGACGATAGTAGGGCACGCTGCTTAAACT", "CTTGCAAGAAACCACCATCCCTGGCACACATGGTACAGAAACATGGCTAG", "ATAGAGGTACTGGGGGCACGCGCCAACGAGGTATAGGCATGTGGTTTCAT", "GTGTTAATTCTTGCGATGTAGCTGGACAGGATGCTGGCACGAGCGAGACG", "GCCGCCTATCTTGAAGTCCCGGGTGGACTTTTATAGGTCCGTATGCTTGA", "GAGTGCCACTTGACTCATTAGATCCTCGTACATCGCTCGAGGACAACCAA", "ATCAAAGATAGCGTCCTAAGAAATATCTTTAAGATTCTCCAGTTGACATG", "TGGTACGCGCGACGCGGTCGAAAATGAACCCTGCTATCGTGTCGTCACGG", "AATGTGAACCCCATAAGCTCCTAAAAACTATGTAGGTCGAAGTAGTACAT", "CTCGGCATTAAGCGGTTGAAGCGGGCGTAAGCTAGGGTACCTTTGTGAGA", "ATCAGGCCTTGACATGTCCGTCATACCTTTGTTTCAACGACTCGGCATAC", "AGCTGTTATAGTTCCCCGGATTAGGTGTATAGAGCCGGAAGAATTAGCAT", "TACTGGAATGGGTATTCAGATAGCAACAGAGATCCCTACGATAACGTTGC", "AGAATATTGCAACTGACTACCACCATGAGCCACCTACCAAGTAGGACGCG", "GGCTCTGCTGCGCGGTGAAGAATACCGTAATTTAAGAGGAAACTCGCCCC", "TGGGGGCAAGGTGGATGATGTAGGTATCAGGTGCTTTTTCGAATCAGACA", "TGACACATAAGAAGGAGAATCCAATTGGCTTCTCATGCAGAATGTAATGC", "AGTGCCAATAAAGACGGACGTAACTCGCGATCGCCGCCAGCCTTGCTAGG", "AGCCCGTTAGTCACAGGTCACGAACCGGGAGGCCCTGGGCTACGCGGTTT", "GATAACGATGTGCGATGTTAAGGTTGCCCCTCGGATCTCGCCACCACCTT", "CTCAAAAAATTCCTACATCCGTGATGGCGTGCTCGACTCACGCTTCTAAG", "GGCCACTAAGACCAACTTTCCCTTTACTTTCAAGGCCACAATGTAGGGCG", "GGAGTCTTTCGAGATTCACCGGTTATCTTTATATGAATACAGTCTACAGA", "CGACTTTGAAGTAACCTTTGACCGTTTCACCAAGAGCGGGGTAGACTAAC", "TGACGCGGGAGATCGAGATCCCCAGCCCTACGTGCTACTACAGTACCGCA", "TGTTGCTATGGGTTACCATGGAACGGTTGATGATAAGGTCGAGGTTCGGT", "TACAAGATGGAGTCCTACCGGGCAAGTCCAACCTAAAGCACAAGAGATGA", "AATTATAGCCCAGCCGCGTGGCTCACTGCAGCCACTTGCAAGGGCCGTGT", "ACCAATGCTGCCCATACATGCATTATCTGATCAAGTCATTTTAACCTGTT", "CCCCGGAGAACGGGAATGTTACAAAGGCGTGTCTTTATGACGCCTCTTTT", "GATTTTAGGGCCTGTTTGAGAAATGCTGAACCATGATTCGCGAATCGCTA", "ACCGTTGGGAGATCCAGACTCCACCTGAATTCGCCTTGAGTCACTCTGGT", "GCAGTCAAACTTTGTGGGCAACTTCGGGGCTTAGCCTGATGGCATCATCA", "TTTTATGGCAAACGACAAGACGGTGCTGCGTATACCGGTGGGCGGTGCTA", "GGAAGTGCCCTTCGAAGTATTCCTTGCTCCTCAAACAGTACGGTGTAATC", "TTGAAGTTTATACGAGTCGTTCCTGACGGAATCCAAATGTGATTTCCCCC", "TCGCACTACACTGTTAGCGCATGTCGTGACTCTTAAAACCAACAAAAGGG", "GTATTCTAAGTTAAGACCGGGATGGGGAACGGACCTCTGAAGCTGATGGC", "GTACGCGTCTCGCACACTGCGTGATCATCACATTCAGGGTATACGTGCCG", "CCCACCCCGCCCACCCTATGAGCAATGCACCATGTTAGTATGCAGCCCTT", "AGACACCGGCGGTCGGGTGTCAACGAGAACCCCTGGCAAACGTATTGATT", "GTTGTGTCGTGCAGCAGTGCCAGTCATGTGACTTAATATAGTTTTTATGC", "AATATTCTTCCATGAGCAACTGACCTGTCTATGTTATGCATTAGTAAAAC", "GCAACTAGAATTCGGCTAGCCGTACGCATGACGTGTGTTACACCGATGAG", "CCTTCTGCGAGTGGCTTCCCCCCTAGAGTGATACAGCCGAATTCGGACTC", "AGAGATCAATCCCAAGCGCGGCGAATTCCCAGGGGAGGCCTCCTGTCTAT"};
    vector<string> sequence3 = {"GCTGGCGCAAATTAAGTGCGTTCGGCGTAAATCTTTATGGCATCACTGCT", "TCCTGAGGAAGTGAGTTTACACTTCGCTGAGCCCGGTCAGTATACGATGG", "CGTGACAAGGAAAGGCTGTTTGAGATTCAAGCAGTCGCGGAAACCAGTGC", "ATACGCGAGATTTGCCATGTGCTCGAAATGTCGTAATCCTGAAGGCACGT", "AAGTGTTATAGCGGGTAACAGCGGAGTCCGGGTAATAACTGTGATACCTC", "CTCATGATACAACGCCCATTGTGACGGGCAAGTTAGCATAATCGAGCGGC", "GAAACCCATGTGGGGCTTGAGTGAAACGTTCAATCGGCACGGACAGAGAC", "ACAGATCGGTATGTCCCAACCTTAAGCCCATCCAGGGCAATCTATGTGCG", "GGCATGCCGCAGAATACTCAAAGGTGCGGTAGTCGGCCAGTCTCTACTTA", "TCGCTTTTCCGCTCATAGCCAATTCCGACTTTATGCTAAACTAAACATGG", "AGTCGCACCCGACGTGTGGTTTTCCACTGTAAAGACCCAGGCCGGGCTTA", "TGTCGATGTCTAATGCCCATCGATGAGTACCTTATTACTGTTGTGAGTGC", "GACTTGATGAAACGGCGATAGGTAGGGACATCAATCGAAGTCGCGTTCCG", "CGGGCATGGGTCGATAACCCACGTCTGGGCAGAAAGATATAAAACGATTC", "TTGAATCATTCCACGGAATTCCACATCTACCGAATTACGTTGACCGGTAC", "GGCTGGTCTAACAGCTACTGACAGCAGGGGATATAGACTGATCGGGTATC", "GCGCGAGGTAGGCGCTTGGAAGAAACGCGTGAACATCAGCTTACCAACGT", "CAGCCCGCGTAAGAGCCGCGAAGCTTCCGCGCTCCCAGGTACCGGTCAGC", "GGTTATATCGTTCTATCGAGAACGTCGCTTAATCTGGATCACACGGCAGA", "TATGTAGACTTAGGATAATGCTAGTTGGCGTGCACAAAAGACCACGACTC", "GGATACGCGTGTAATACTGTAGCTGATACTGTAAGAAGGTCCATGGAGTC", "CGCTTAAGACACAGGTATGTGATTGGAAGGACCGTTGAACCGTGGGTTAT", "GCTGGGAAAAATGTACTTGCTTCTCTATTGCAGACCTGATCTTATACTGT", "TCAGGCTATTGCTTTGGAATTCATTTGACTGTCTCTACCACCCAATCTAC", "CAGCCAGACCTAATGAACTTGGTAACTACCCGCCTCAATTGGACAGCCGG", "AATGCTATCTACTGATGTCTTGGTTCAATGACATGCACCCATGCTCTTGG", "AGGCGTAGACGTCCTCTTTTGCACTCCCGCTCCTTCAAGCATGAACTATC", "AATTATCCATGGGAAGGTGGTAAGTGTACACTACCCATATTCCCTACTAT", "TGTGACCAGCGCTTTTTACCGTATGCAAGAATTATAATATGGGGCGCGAC", "GGTGCAGCACAGACGTTAAACTTGCCCGCGTGAGCACAGATGGCGACTGT", "ATGAAGTAACGGTTTTACCTCTACGCTGATCAACGACCCAACTGTTCGGG", "ACGGGATGGTAAGAGGGCCGGAGGGTGAAACAGTGACATACAAGCTGTGA", "AAGCGACCTTAGATTCTACAATCTTGAAGCTATCTGCTCACTAATAGCCG", "ACCGGGCCGATAAGTAGCCGTGCGACCTAGTCCGGTCCCATTTGTTTGTC", "ATACTCCAGACGTTCCGGTTCGTACTGAACAAAGAGACTCTGCCCTGCCT", "GTGAGAATAGTTCCTGCAGCATATAAGTAACATGCGATGTACTTGTTAAC", "GGTCTCGCACGCGGGGATCAGTAGTCCAAAATATCGAATGGGATGCCTCG", "GATTGAAAATGTTGTTAGTGGGTAAACCATTACGCTCTCTTTCTCGAAGT", "ATACAATGAGCCAGAAAGGCCGGTCATGATGATTCCCAGTTAGAGGGCGG", "CGCGTTGCAGCTGCATCTAGTTTTGTGCTGTATTGTGATAGTTGAATTCC", "GCATGGAAAGTCACTGACGTACACCCCTATATATAAGTTTTGGCGGCCGG", "CAGATAAAGTCTTACTTTAGTACAAATAATTATACCTTACCTGGAAATGA", "AGACCTCTATGAAACAAAGATTGACACTTCGACAGTTCGTGACGCGGACT", "TTACTATCTTGTCAAAGGGTCCCTTACTGTATTGGCTAATTGGGCCCTCG", "TGAGAAGGGGCATAGAGTCTCGCTGAGTATAGTTGGTTAACATGCATCAC", "TTTAATCGCATAATTTTTCCGTCATTTTTTTATTATGACTAGCCTTGGTA", "GATTCGGTCGATCCAACACACATGCATCTTTACGCAGTAGTTGTCGCCTT", "TTACGGAAGACCGAGTGAAGTCCGACTTGAGAGCTCCACGCTCTACCCAC", "AAGGCTTCGGTTAGGTGAGCACCAGATTGCCGAAGTAGCATAAGCCGATG", "TACATTCGACCATATGCTCGTTTGAGTATCCCCGGTCGAGGGGATTGTCT"};
    DNAMultiMatcher* pObj = new DNAMultiMatcher();
    clock_t start = clock();
    int result = pObj->longestMatch(sequence1, sequence2, sequence3);
    clock_t end = clock();
    delete pObj;
    int expected = 10;
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=279471&rd=4755&pm=2224
********************************************************************************
// headers from WishingBone's parser
#include <vector>
#include <string>
 
//#define USE_MAP
#ifdef USE_MAP
#include <set>
#include <map>
#endif
 
#define USE_STREAM
#ifdef USE_STREAM
#include <iostream>
#include <iomanip>
#include <sstream>
#endif
 
#define USE_ALGORITHM
#ifdef USE_ALGORITHM
#include <algorithm>
#endif
 
//#include <functional>
//#include <numeric>
//#include <utility>
 
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cctype>
#include <cmath>
 
using namespace std;
 
typedef signed long long i64;
typedef unsigned long long u64;
 
#define abs(a) ((a)>0?(a):-(a))
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
 
int gcd(int a,int b){for(int c;b;c=a,a=b,b=c%b);return a;}
int lcm(int a,int b){return a/gcd(a,b)*b;}
 
#ifdef USE_ALGORITHM
#define ALL(a) (a).begin(),(a).end()
#define SORT(a) sort(a.begin(),a.end())
#define REVERSE(a) reverse(a.begin(),a.end())
#define UNIQUE(a) a.resize(unique(a.begin(),a.end())-a.begin())
#define REMOVE(a,b) a.resize(remove(a.begin(),a.end(),e)-a.begin())
#define FIND(a,b) find(a.begin(),a.end(),b)
 
template <class T> void remove(vector<T>& v,const T&e){
  v.resize(remove(v.begin(),v.end(),e)-v.begin());
}
template <class T> vector<T> remove_copy(vector<T>& v,const T&e){
  vector<T> result;
  remove_copy(v.begin(),v.end(),back_inserter(result),e);
  return result;
}
#endif
 
string upper(const string& a) {
  string r(a);
  for(int i=0;i<r.size();i++) r[i] = toupper(r[i]);    
  return r;
}
string lower(const string& a) {
  string r(a);
  for(int i=0;i<r.size();i++) r[i] = tolower(r[i]);    
  return r;
}
 
 
//parsing routine
template <class T>
vector<basic_string<T> > parse(const basic_string<T> &s,const basic_string<T> &delim){
  vector<basic_string<T> > ret(0);
  for (int b,e=0;;ret.push_back(s.substr(b,e-b)))
    if ((b=s.find_first_not_of(delim,e))==(e=s.find_first_of(delim,b)))
      return ret;
}
vector<string> parse(const string& s, const char* c) {
  return parse(s,string(c));
}
vector<int> intparse(const string &s,const string &delim=" \t\n"){
  vector<string> tmp=parse(s,delim);
  vector<int> ret(0);
  int t;
  for (vector<string>::iterator i=tmp.begin();i!=tmp.end();i++)
    sscanf(i->c_str(),"%d",&t),ret.push_back(t);
  return ret;
}
 
#ifdef USE_MAP
//name mapper
class mapper{
public:
  map<string,int> m;
  vector<string> v;
  void reset(){
    v.clear();
    m.clear();
  }
  int size(){
    return v.size();
  }
  int get(const string str){
    if (m.find(str)==m.end()){
      m[str]=v.size();
      v.push_back(str);
    }
    return m[str];
  }
  string get(int i){
    return v[i];
  }
  vector<int> get(const vector<string>& strs){
    vector<int> result;
    result.reserve(strs.size()+2);
    for(int i=0;i<strs.size();i++)
      result.push_back(get(strs[i]));
    return result;
  }
  vector<string> get(const vector<int>& is){
    vector<string> result;
    result.reserve(is.size()+2);
    for(int i=0;i<is.size();i++)
      result.push_back(get(is[i]));
    return result;
  }
};
#endif
 
//array index 
bool valid_index(int index, int size) {
    return index>=0 && index<size;
}
 
bool valid_index(int index, int size, int index2, int size2) {
    return index>=0 && index<size && index2>=0 && index2<size2;
}
 
bool valid_index(const pair<int,int>& index, const pair<int,int>& size) {
    return index.first>=0 && index.first<size.first && index.second>=0 && index.second<size.second;
}
 
pair<int, int> add(const pair<int,int> &a, const pair<int,int> &b) {
    return pair<int,int>(a.first+b.first, a.second+b.second);
}
 
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<vector<int> > VII;
typedef vector<vector<string> > VSS;
typedef pair<int,int> PII;
typedef pair<string,int> PSI;
typedef pair<int,string> PIS;
typedef pair<string,string> PSS;
typedef pair<int,pair<int,int> > PIII;
//==========================================================
//header ends, please begin challenging here :)
 
class DNAMultiMatcher {
  public:
  vector<int> getvector(const string& a, const string& b) {
    int as=a.size();
    int bs=b.size();
    vector<int> result(as,0);
    for(int d=-bs;d<as;d++) {
      int len=0;
      for(int i = max(0,d); i<min(as,bs+d);i++) {
        if(a[i]!=b[i-d]) len=0; 
        else {
          len++;
          result[i] = max(result[i], len);
        }
      }
    }
//    for(int i=0;i<result.size();i++) {
//      cout<<result[i]<<' ';
//    }
//    cout<<endl;
    return result;
  }
  int longestMatch(vector <string> sequence1, vector <string> sequence2, vector <string> sequence3) {
    string a,b,c;
    for(int i=0;i<sequence1.size();i++) {
      a+=sequence1[i];
    }
    for(int i=0;i<sequence2.size();i++) {
      b+=sequence2[i];
    }
    for(int i=0;i<sequence3.size();i++) {
      c+=sequence3[i];
    }
    vector<int> a1 = getvector(a,b);
    vector<int> a2 = getvector(a,c);
    int best = 0;
    for(int i=0;i<a.size();i++) best = max(best, min(a1[i],a2[i]));
    return best;
  }
};
 
// Powered by PopsEdit

********************************************************************************
*******************************************************************************/