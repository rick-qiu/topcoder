/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=8225
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class PlayerExtraction {
public:
    vector<string> extractPlayers(vector<string> photo, int k, int threshold);
};

vector<string> PlayerExtraction::extractPlayers(vector<string> photo, int k, int threshold) {
    vector<string> ret;
    return ret;
}


int test0() {
    vector<string> photo = {"33JUBU33", "3U3O4433", "O33P44NB", "PO3NSDP3", "VNDSD333", "OIVNFD33"};
    int k = 3;
    int threshold = 16;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"4 5", "13 9", "14 2"};
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<string> photo = {"6VS", "D66"};
    int k = 6;
    int threshold = 1;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1 1", "4 3"};
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<string> photo = {"44444H44S4", "K444K4L444", "4LJ44T44XH", "444O4VIF44", "44C4D4U444", "4V4Y4KB4M4", "G4W4HP4O4W", "4444ZDQ4S4", "4BR4Y4A444", "4G4V4T4444"};
    int k = 4;
    int threshold = 16;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"3 8", "4 16", "5 4", "16 3", "16 17", "17 9"};
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<string> photo = {"00000", "0XXX0", "0X0X0", "0XXX0", "00000"};
    int k = 0;
    int threshold = 1;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5 5", "5 5"};
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<string> photo = {"8D88888J8L8E888", "88NKMG8N8E8JI88", "888NS8EU88HN8EO", "LUQ888A8TH8OIH8", "888QJ88R8SG88TY", "88ZQV88B88OUZ8O", "FQ88WF8Q8GG88B8", "8S888HGSB8FT8S8", "8MX88D88888T8K8", "8S8A88MGVDG8XK8", "M88S8B8I8M88J8N", "8W88X88ZT8KA8I8", "88SQGB8I8J88W88", "U88H8NI8CZB88B8", "8PK8H8T8888TQR8"};
    int k = 8;
    int threshold = 9;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1 17", "3 3", "3 10", "3 25", "5 21", "8 17", "9 2", "10 9", "12 23", "17 16", "18 3", "18 11", "18 28", "22 20", "23 26", "24 15", "27 2", "28 26", "29 16"};
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<string> photo = {"0R0P0X0Y0C0D0L0B0V0L0Z0O0R0E0X0C0P0S0B0B0S0U0C0G0C", "W0Y0K0F0Y0D0C0W0M0V0I0O0F0J0K0C0G0L0A0D0F0M0U0K0W0", "0U0S0Q0J0Y0C0F0U0D0I0W0K0D0W0O0V0Z0N0H0M0H0W0D0F0L", "S0I0P0D0C0D0R0X0A0L0E0X0E0H0X0C0F0R0R0Y0Z0B0V0B0F0", "0M0F0F0Y0X0J0I0S0F0Y0C0Z0Y0P0F0X0R0V0S0M0U0Z0O0Y0F", "K0G0J0Q0S0S0S0B0E0I0H0U0J0P0J0K0H0N0P0I0N0M0X0V0N0", "0H0J0K0L0C0L0X0P0E0T0V0J0Q0H0B0U0Z0V0U0Y0O0E0D0I0M", "N0Y0K0P0M0Q0X0J0Z0P0X0J0K0N0Z0Q0Q0E0F0Q0P0H0T0O0D0", "0Z0A0J0Z0S0X0O0C0A0O0E0F0O0N0H0U0J0N0F0Z0O0B0P0V0F", "M0F0R0R0O0Z0Z0B0T0E0L0E0N0Z0O0H0T0G0D0Z0B0Y0V0Y0G0", "0P0C0D0K0J0J0Z0Q0X0V0K0Z0Q0E0E0D0Y0F0Z0O0O0E0Q0N0Y", "E0T0S0Z0U0Z0V0S0A0K0F0Z0A0V0U0O0Q0C0P0Q0C0E0U0S0E0", "0K0F0Y0Q0Z0F0D0A0V0E0G0K0F0A0A0U0N0Q0G0C0M0X0D0Q0B", "N0B0N0P0B0E0A0Y0Z0B0F0J0S0O0Z0S0O0B0E0H0T0Y0K0X0X0", "0U0G0X0E0B0M0W0P0U0W0I0S0M0V0D0L0K0T0V0S0W0X0O0M0G", "E0D0T0S0Q0W0T0M0B0Q0V0S0V0Q0D0Q0F0O0H0Z0J0O0E0E0X0", "0G0Q0V0I0Q0H0G0F0X0N0W0S0K0V0N0B0H0C0P0A0B0X0M0P0E", "U0Y0V0V0F0H0W0L0U0Q0T0K0E0T0S0K0N0K0B0K0S0Y0P0F0U0", "0G0W0L0W0C0H0U0B0R0A0L0Y0B0F0B0Q0X0Q0G0X0B0J0W0C0U", "G0J0L0X0Q0S0Z0H0A0V0I0Y0U0B0Q0I0S0B0L0K0G0J0M0M0R0", "0M0Q0C0S0S0C0H0V0Q0C0P0T0S0D0I0P0G0M0G0D0O0B0I0V0J", "F0F0M0S0S0Y0G0C0N0N0J0T0B0N0J0L0C0Q0V0A0M0N0C0I0M0", "0J0F0Z0Y0T0D0M0B0U0D0Y0T0Y0L0W0D0Y0V0C0I0Y0M0K0Y0P", "N0O0C0Z0T0C0D0L0R0A0U0V0E0C0O0F0U0J0C0Q0X0V0X0B0D0", "0H0B0C0E0R0B0X0C0I0A0M0R0O0Q0U0J0Q0W0B0R0J0V0G0D0V", "Y0S0W0G0R0O0Q0I0A0U0L0J0A0Z0Z0R0L0W0O0H0N0E0B0A0Z0", "0D0Z0U0J0D0F0Y0B0S0U0G0W0E0A0A0V0C0W0I0Z0L0E0T0N0I", "N0Y0J0Z0M0X0A0E0L0P0Q0C0I0A0H0G0O0A0P0S0B0U0R0T0G0", "0H0U0R0D0O0H0D0Q0A0P0M0T0G0V0P0O0Y0G0C0L0N0L0K0Q0L", "T0M0Z0Y0O0Z0R0J0U0D0R0O0E0D0G0K0D0E0W0A0M0V0T0N0N0", "0H0H0Q0X0M0Q0M0C0M0L0L0U0R0S0I0G0O0O0R0Z0J0F0U0T0D", "M0O0W0X0N0C0V0W0C0S0W0V0V0Z0H0T0V0F0W0T0S0E0E0W0K0", "0N0X0T0B0J0U0K0Y0N0W0A0H0U0E0O0A0X0B0E0V0J0F0Q0T0Y", "S0O0S0Y0H0L0B0D0D0Y0V0U0U0U0Q0I0T0B0P0W0I0U0E0E0Y0", "0K0F0G0I0R0L0B0A0E0E0I0O0D0T0C0E0T0D0D0C0W0B0D0L0L", "L0F0B0I0F0X0G0W0N0K0L0D0E0K0O0L0P0R0C0I0Q0H0P0S0K0", "0F0T0V0F0F0Q0Y0V0N0B0T0E0Y0C0F0G0T0B0G0V0F0C0F0V0E", "S0Z0J0E0T0H0S0D0I0R0M0F0D0O0A0N0F0D0Q0F0Z0J0D0K0E0", "0F0O0W0N0D0W0P0O0X0M0Q0X0C0M0P0S0Y0V0H0J0X0P0F0G0W", "I0K0P0H0Q0Q0J0W0Q0D0Q0F0V0M0C0I0Y0N0P0M0X0I0B0B0L0", "0C0G0T0V0Z0C0E0X0Q0M0H0J0K0O0P0J0Z0F0A0T0P0K0M0F0R", "F0A0K0A0V0X0F0A0X0K0Q0O0K0F0B0P0D0W0W0N0J0G0Y0J0S0", "0R0V0H0O0F0F0Y0J0M0A0M0J0D0R0H0C0V0L0K0K0M0E0Y0A0B", "T0K0E0E0M0H0E0W0Q0K0I0T0B0K0G0N0E0K0G0R0I0S0C0Y0X0", "0O0T0A0N0S0E0H0P0Z0E0C0L0U0S0E0B0U0V0U0Y0D0W0A0N0E", "R0U0I0C0Y0Y0R0G0P0S0C0X0M0N0K0J0Y0U0I0Q0D0Z0K0L0W0", "0H0N0T0T0C0T0T0B0R0P0F0Q0X0V0P0T0R0U0V0X0C0V0U0S0V", "P0H0B0S0R0Y0C0L0L0E0Y0X0S0P0Y0O0V0V0S0Z0S0E0M0Q0B0", "0K0G0Q0Q0I0A0B0R0L0K0K0I0V0C0J0I0L0A0P0R0G0S0A0V0G", "X0X0G0C0I0V0Z0K0U0L0L0W0Z0Q0L0O0A0T0A0N0Q0G0P0I0X0"};
    int k = 0;
    int threshold = 1;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1 1", "1 5", "1 9", "1 13", "1 17", "1 21", "1 25", "1 29", "1 33", "1 37", "1 41", "1 45", "1 49", "1 53", "1 57", "1 61", "1 65", "1 69", "1 73", "1 77", "1 81", "1 85", "1 89", "1 93", "1 97", "3 3", "3 7", "3 11", "3 15", "3 19", "3 23", "3 27", "3 31", "3 35", "3 39", "3 43", "3 47", "3 51", "3 55", "3 59", "3 63", "3 67", "3 71", "3 75", "3 79", "3 83", "3 87", "3 91", "3 95", "3 99", "5 1", "5 5", "5 9", "5 13", "5 17", "5 21", "5 25", "5 29", "5 33", "5 37", "5 41", "5 45", "5 49", "5 53", "5 57", "5 61", "5 65", "5 69", "5 73", "5 77", "5 81", "5 85", "5 89", "5 93", "5 97", "7 3", "7 7", "7 11", "7 15", "7 19", "7 23", "7 27", "7 31", "7 35", "7 39", "7 43", "7 47", "7 51", "7 55", "7 59", "7 63", "7 67", "7 71", "7 75", "7 79", "7 83", "7 87", "7 91", "7 95", "7 99", "9 1", "9 5", "9 9", "9 13", "9 17", "9 21", "9 25", "9 29", "9 33", "9 37", "9 41", "9 45", "9 49", "9 53", "9 57", "9 61", "9 65", "9 69", "9 73", "9 77", "9 81", "9 85", "9 89", "9 93", "9 97", "11 3", "11 7", "11 11", "11 15", "11 19", "11 23", "11 27", "11 31", "11 35", "11 39", "11 43", "11 47", "11 51", "11 55", "11 59", "11 63", "11 67", "11 71", "11 75", "11 79", "11 83", "11 87", "11 91", "11 95", "11 99", "13 1", "13 5", "13 9", "13 13", "13 17", "13 21", "13 25", "13 29", "13 33", "13 37", "13 41", "13 45", "13 49", "13 53", "13 57", "13 61", "13 65", "13 69", "13 73", "13 77", "13 81", "13 85", "13 89", "13 93", "13 97", "15 3", "15 7", "15 11", "15 15", "15 19", "15 23", "15 27", "15 31", "15 35", "15 39", "15 43", "15 47", "15 51", "15 55", "15 59", "15 63", "15 67", "15 71", "15 75", "15 79", "15 83", "15 87", "15 91", "15 95", "15 99", "17 1", "17 5", "17 9", "17 13", "17 17", "17 21", "17 25", "17 29", "17 33", "17 37", "17 41", "17 45", "17 49", "17 53", "17 57", "17 61", "17 65", "17 69", "17 73", "17 77", "17 81", "17 85", "17 89", "17 93", "17 97", "19 3", "19 7", "19 11", "19 15", "19 19", "19 23", "19 27", "19 31", "19 35", "19 39", "19 43", "19 47", "19 51", "19 55", "19 59", "19 63", "19 67", "19 71", "19 75", "19 79", "19 83", "19 87", "19 91", "19 95", "19 99", "21 1", "21 5", "21 9", "21 13", "21 17", "21 21", "21 25", "21 29", "21 33", "21 37", "21 41", "21 45", "21 49", "21 53", "21 57", "21 61", "21 65", "21 69", "21 73", "21 77", "21 81", "21 85", "21 89", "21 93", "21 97", "23 3", "23 7", "23 11", "23 15", "23 19", "23 23", "23 27", "23 31", "23 35", "23 39", "23 43", "23 47", "23 51", "23 55", "23 59", "23 63", "23 67", "23 71", "23 75", "23 79", "23 83", "23 87", "23 91", "23 95", "23 99", "25 1", "25 5", "25 9", "25 13", "25 17", "25 21", "25 25", "25 29", "25 33", "25 37", "25 41", "25 45", "25 49", "25 53", "25 57", "25 61", "25 65", "25 69", "25 73", "25 77", "25 81", "25 85", "25 89", "25 93", "25 97", "27 3", "27 7", "27 11", "27 15", "27 19", "27 23", "27 27", "27 31", "27 35", "27 39", "27 43", "27 47", "27 51", "27 55", "27 59", "27 63", "27 67", "27 71", "27 75", "27 79", "27 83", "27 87", "27 91", "27 95", "27 99", "29 1", "29 5", "29 9", "29 13", "29 17", "29 21", "29 25", "29 29", "29 33", "29 37", "29 41", "29 45", "29 49", "29 53", "29 57", "29 61", "29 65", "29 69", "29 73", "29 77", "29 81", "29 85", "29 89", "29 93", "29 97", "31 3", "31 7", "31 11", "31 15", "31 19", "31 23", "31 27", "31 31", "31 35", "31 39", "31 43", "31 47", "31 51", "31 55", "31 59", "31 63", "31 67", "31 71", "31 75", "31 79", "31 83", "31 87", "31 91", "31 95", "31 99", "33 1", "33 5", "33 9", "33 13", "33 17", "33 21", "33 25", "33 29", "33 33", "33 37", "33 41", "33 45", "33 49", "33 53", "33 57", "33 61", "33 65", "33 69", "33 73", "33 77", "33 81", "33 85", "33 89", "33 93", "33 97", "35 3", "35 7", "35 11", "35 15", "35 19", "35 23", "35 27", "35 31", "35 35", "35 39", "35 43", "35 47", "35 51", "35 55", "35 59", "35 63", "35 67", "35 71", "35 75", "35 79", "35 83", "35 87", "35 91", "35 95", "35 99", "37 1", "37 5", "37 9", "37 13", "37 17", "37 21", "37 25", "37 29", "37 33", "37 37", "37 41", "37 45", "37 49", "37 53", "37 57", "37 61", "37 65", "37 69", "37 73", "37 77", "37 81", "37 85", "37 89", "37 93", "37 97", "39 3", "39 7", "39 11", "39 15", "39 19", "39 23", "39 27", "39 31", "39 35", "39 39", "39 43", "39 47", "39 51", "39 55", "39 59", "39 63", "39 67", "39 71", "39 75", "39 79", "39 83", "39 87", "39 91", "39 95", "39 99", "41 1", "41 5", "41 9", "41 13", "41 17", "41 21", "41 25", "41 29", "41 33", "41 37", "41 41", "41 45", "41 49", "41 53", "41 57", "41 61", "41 65", "41 69", "41 73", "41 77", "41 81", "41 85", "41 89", "41 93", "41 97", "43 3", "43 7", "43 11", "43 15", "43 19", "43 23", "43 27", "43 31", "43 35", "43 39", "43 43", "43 47", "43 51", "43 55", "43 59", "43 63", "43 67", "43 71", "43 75", "43 79", "43 83", "43 87", "43 91", "43 95", "43 99", "45 1", "45 5", "45 9", "45 13", "45 17", "45 21", "45 25", "45 29", "45 33", "45 37", "45 41", "45 45", "45 49", "45 53", "45 57", "45 61", "45 65", "45 69", "45 73", "45 77", "45 81", "45 85", "45 89", "45 93", "45 97", "47 3", "47 7", "47 11", "47 15", "47 19", "47 23", "47 27", "47 31", "47 35", "47 39", "47 43", "47 47", "47 51", "47 55", "47 59", "47 63", "47 67", "47 71", "47 75", "47 79", "47 83", "47 87", "47 91", "47 95", "47 99", "49 1", "49 5", "49 9", "49 13", "49 17", "49 21", "49 25", "49 29", "49 33", "49 37", "49 41", "49 45", "49 49", "49 53", "49 57", "49 61", "49 65", "49 69", "49 73", "49 77", "49 81", "49 85", "49 89", "49 93", "49 97", "51 3", "51 7", "51 11", "51 15", "51 19", "51 23", "51 27", "51 31", "51 35", "51 39", "51 43", "51 47", "51 51", "51 55", "51 59", "51 63", "51 67", "51 71", "51 75", "51 79", "51 83", "51 87", "51 91", "51 95", "51 99", "53 1", "53 5", "53 9", "53 13", "53 17", "53 21", "53 25", "53 29", "53 33", "53 37", "53 41", "53 45", "53 49", "53 53", "53 57", "53 61", "53 65", "53 69", "53 73", "53 77", "53 81", "53 85", "53 89", "53 93", "53 97", "55 3", "55 7", "55 11", "55 15", "55 19", "55 23", "55 27", "55 31", "55 35", "55 39", "55 43", "55 47", "55 51", "55 55", "55 59", "55 63", "55 67", "55 71", "55 75", "55 79", "55 83", "55 87", "55 91", "55 95", "55 99", "57 1", "57 5", "57 9", "57 13", "57 17", "57 21", "57 25", "57 29", "57 33", "57 37", "57 41", "57 45", "57 49", "57 53", "57 57", "57 61", "57 65", "57 69", "57 73", "57 77", "57 81", "57 85", "57 89", "57 93", "57 97", "59 3", "59 7", "59 11", "59 15", "59 19", "59 23", "59 27", "59 31", "59 35", "59 39", "59 43", "59 47", "59 51", "59 55", "59 59", "59 63", "59 67", "59 71", "59 75", "59 79", "59 83", "59 87", "59 91", "59 95", "59 99", "61 1", "61 5", "61 9", "61 13", "61 17", "61 21", "61 25", "61 29", "61 33", "61 37", "61 41", "61 45", "61 49", "61 53", "61 57", "61 61", "61 65", "61 69", "61 73", "61 77", "61 81", "61 85", "61 89", "61 93", "61 97", "63 3", "63 7", "63 11", "63 15", "63 19", "63 23", "63 27", "63 31", "63 35", "63 39", "63 43", "63 47", "63 51", "63 55", "63 59", "63 63", "63 67", "63 71", "63 75", "63 79", "63 83", "63 87", "63 91", "63 95", "63 99", "65 1", "65 5", "65 9", "65 13", "65 17", "65 21", "65 25", "65 29", "65 33", "65 37", "65 41", "65 45", "65 49", "65 53", "65 57", "65 61", "65 65", "65 69", "65 73", "65 77", "65 81", "65 85", "65 89", "65 93", "65 97", "67 3", "67 7", "67 11", "67 15", "67 19", "67 23", "67 27", "67 31", "67 35", "67 39", "67 43", "67 47", "67 51", "67 55", "67 59", "67 63", "67 67", "67 71", "67 75", "67 79", "67 83", "67 87", "67 91", "67 95", "67 99", "69 1", "69 5", "69 9", "69 13", "69 17", "69 21", "69 25", "69 29", "69 33", "69 37", "69 41", "69 45", "69 49", "69 53", "69 57", "69 61", "69 65", "69 69", "69 73", "69 77", "69 81", "69 85", "69 89", "69 93", "69 97", "71 3", "71 7", "71 11", "71 15", "71 19", "71 23", "71 27", "71 31", "71 35", "71 39", "71 43", "71 47", "71 51", "71 55", "71 59", "71 63", "71 67", "71 71", "71 75", "71 79", "71 83", "71 87", "71 91", "71 95", "71 99", "73 1", "73 5", "73 9", "73 13", "73 17", "73 21", "73 25", "73 29", "73 33", "73 37", "73 41", "73 45", "73 49", "73 53", "73 57", "73 61", "73 65", "73 69", "73 73", "73 77", "73 81", "73 85", "73 89", "73 93", "73 97", "75 3", "75 7", "75 11", "75 15", "75 19", "75 23", "75 27", "75 31", "75 35", "75 39", "75 43", "75 47", "75 51", "75 55", "75 59", "75 63", "75 67", "75 71", "75 75", "75 79", "75 83", "75 87", "75 91", "75 95", "75 99", "77 1", "77 5", "77 9", "77 13", "77 17", "77 21", "77 25", "77 29", "77 33", "77 37", "77 41", "77 45", "77 49", "77 53", "77 57", "77 61", "77 65", "77 69", "77 73", "77 77", "77 81", "77 85", "77 89", "77 93", "77 97", "79 3", "79 7", "79 11", "79 15", "79 19", "79 23", "79 27", "79 31", "79 35", "79 39", "79 43", "79 47", "79 51", "79 55", "79 59", "79 63", "79 67", "79 71", "79 75", "79 79", "79 83", "79 87", "79 91", "79 95", "79 99", "81 1", "81 5", "81 9", "81 13", "81 17", "81 21", "81 25", "81 29", "81 33", "81 37", "81 41", "81 45", "81 49", "81 53", "81 57", "81 61", "81 65", "81 69", "81 73", "81 77", "81 81", "81 85", "81 89", "81 93", "81 97", "83 3", "83 7", "83 11", "83 15", "83 19", "83 23", "83 27", "83 31", "83 35", "83 39", "83 43", "83 47", "83 51", "83 55", "83 59", "83 63", "83 67", "83 71", "83 75", "83 79", "83 83", "83 87", "83 91", "83 95", "83 99", "85 1", "85 5", "85 9", "85 13", "85 17", "85 21", "85 25", "85 29", "85 33", "85 37", "85 41", "85 45", "85 49", "85 53", "85 57", "85 61", "85 65", "85 69", "85 73", "85 77", "85 81", "85 85", "85 89", "85 93", "85 97", "87 3", "87 7", "87 11", "87 15", "87 19", "87 23", "87 27", "87 31", "87 35", "87 39", "87 43", "87 47", "87 51", "87 55", "87 59", "87 63", "87 67", "87 71", "87 75", "87 79", "87 83", "87 87", "87 91", "87 95", "87 99", "89 1", "89 5", "89 9", "89 13", "89 17", "89 21", "89 25", "89 29", "89 33", "89 37", "89 41", "89 45", "89 49", "89 53", "89 57", "89 61", "89 65", "89 69", "89 73", "89 77", "89 81", "89 85", "89 89", "89 93", "89 97", "91 3", "91 7", "91 11", "91 15", "91 19", "91 23", "91 27", "91 31", "91 35", "91 39", "91 43", "91 47", "91 51", "91 55", "91 59", "91 63", "91 67", "91 71", "91 75", "91 79", "91 83", "91 87", "91 91", "91 95", "91 99", "93 1", "93 5", "93 9", "93 13", "93 17", "93 21", "93 25", "93 29", "93 33", "93 37", "93 41", "93 45", "93 49", "93 53", "93 57", "93 61", "93 65", "93 69", "93 73", "93 77", "93 81", "93 85", "93 89", "93 93", "93 97", "95 3", "95 7", "95 11", "95 15", "95 19", "95 23", "95 27", "95 31", "95 35", "95 39", "95 43", "95 47", "95 51", "95 55", "95 59", "95 63", "95 67", "95 71", "95 75", "95 79", "95 83", "95 87", "95 91", "95 95", "95 99", "97 1", "97 5", "97 9", "97 13", "97 17", "97 21", "97 25", "97 29", "97 33", "97 37", "97 41", "97 45", "97 49", "97 53", "97 57", "97 61", "97 65", "97 69", "97 73", "97 77", "97 81", "97 85", "97 89", "97 93", "97 97", "99 3", "99 7", "99 11", "99 15", "99 19", "99 23", "99 27", "99 31", "99 35", "99 39", "99 43", "99 47", "99 51", "99 55", "99 59", "99 63", "99 67", "99 71", "99 75", "99 79", "99 83", "99 87", "99 91", "99 95", "99 99"};
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<string> photo = {"2222YY2DTK222OCXSW2L2222P222R2222P2", "222R222MNOUHCREA2222EE222TSVBC222A2", "I2OFLWRENJ2XIQHH2222E22B2222T22222U", "2T222THR222222NH22222HGNZMWJ2SR22VB", "2T2AVFXTTD2DLS22BNA2S22HIMZN22HOJUP", "2222IM222222RCNDXGA2F2C2B22D2UBRTTE", "222222ZSZJW2IC22MNLSQGN2222NMSXKXAS", "XXP2AO2IDXPRTY2222UFF22222WQYWRVYGP", "222CCP2KGLKRS22222FYBAIS222WFFRY22K", "22JECTQTGO2KMP2J2X2OGUDD2JRJXSQWK2V", "2C2URU2IEQ2XLP22FS222RI2LGSHIOPXSYJ", "Z22FLH2DQJ22X2IJBVN2V2222LAPSD222NW", "2222222CE22GL22EUDG2O222222USVWX2Y2", "W222W22EU2OC22WG222UH22AKTW2UJA22H2", "GPVLUSWH22UBD222I2222PAEHJCM2B2222V", "2USEZ2AKKPKTQ2DZ222JBGX222222I2T222", "2ZQN222VE22SFN222GE22KU2222RCRM2A22", "222L22PV222RVVKT2S22S2RV2222NIL22CF", "22VUI2Y22YY22BM2L222M222G2FV2D22222", "222S22Y22I22L222NL2A22M22XY22X22222", "2EV2UM22K2222D22W2YOD2BUB22A22R222V", "G2222Q22N222O22222VVRT2E222Z22V2O2H", "QAZO2Q222T2VMWO22V222X22W222RTCSJCB", "LFGB2R22I2222M22VU2JT222WYF2K2YP2ZX", "M2WS2GIHT22KWB2C2TS2222F22VA22X2222", "22WZMGI22NQ22ZEH222E2IY222R22I22222", "2KUC222222C2222R2ECMH222ZC2IBJL22F2", "2E222U222EL2222ADUHZSH2U22GZZBYNC2S", "BQJEVR222LTBYP2UVTF2WZ2Y2222UF22222", "EJOO2FHQ2IL222F22SA2IZH2222BUDCST22", "VI222222LPYO222222F2JICOGYECVDR22N2", "UADR2VTALUX22K2VU2R22FDKXLGUBEY2J22", "22ZAN2ULRO22L2QTUGE22Y2LJ2F2CIQ2Q22", "222EL22EMHPO222SOFC22C222222DE22T2G", "IQ2ES222XHCVIFBYOGI2TR2T22O2HU222TW", "DCLS2222HILAJVIWDNIHF22V2P2JDS22H22", "CY22R222YZCOQOAGFH22C2V2Z22OEX2LB22", "22R22C2IJRYDIKUZMOE22C222222DYQB2X2", "22B222INBWLBLFEKBZ2222MW2222OHP2222", "22UASC2ACVBVZJIRE22S2222S22A22QDE22", "2Q222222XIFRSOKKB2S22TMTMOTM2S22B2H", "2H22222SVD22222S2G2CP2222V222Z2Z22V", "RLA22D2EDGFO222Y2222222222KGJ22Q2PY"};
    int k = 2;
    int threshold = 40;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"3 36", "6 11", "7 24", "10 82", "12 55", "12 70", "17 40", "20 9", "22 43", "26 54", "28 62", "31 17", "31 43", "35 31", "37 6", "40 63", "41 77", "42 84", "43 47", "47 53", "48 3", "48 15", "48 24", "49 69", "50 75", "51 57", "52 33", "63 4", "63 67", "65 28", "65 38", "65 50", "65 61", "66 78"};
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<string> photo = {"ALHZVBNWQORTMKGDCSURVNU1FEZQDPDSQKOPSWYDVJZZ", "DYJPMRGKBRHKTQODIOKGPXS11FQXMGZPNLAIGWRFQTNC", "HGVHEGWOPJGNZOVCXSOEHMI11RSVKQSAKHRJJGNHVSZI", "CKPSRCWWMVMOOEVLTAZDPIP11WRSBYGXNUFPFZOKPMIU", "MMQOEVWNIUYBYEVVJRKKXTQRBOADOKOVPBDEHLYNGABJ", "KIGCAMQYGLUUMEPWLFOMUKXXCATHJFUGENXXDPJUJHT1", "QFGJTGQTPBZFYLXTYCYBAC1111UJMUBQYSVPAWDNIB11", "KDKZYFGIQFARMTJGZQETKCV111UAHOCZSIKVDWZRI111", "OEEWSUSXUWKTQIYCAPTSNANXIXSWCZYCGPIMVOGNKUT1", "ONCLDELANFQVLTGVHERVMWWBPCGSAOZPHDMEFKMSONXL", "1UAVJPORVPASMRULNXBJ1DHUSMATDSBHTFGTVZBIFZPN", "RMMBEKOTLVDIZDKSJG1W1JKKDXRKIACVXHUREOJCOAXV", "OQUPPVBTZOJGLNGNZWHY11NWMUUIPSFAFIPDHHYULCPT", "NHDZITKGXVSV1EDIJZX111BOZPYVRNXUDWLXQBADDIMQ", "SMTEYSBTBRZ111YZQCG111KPPATBUJARKWEVPPPWMJII", "DMRMASVZMOZX111IGWVQ11RNXXOWCAWKHKMEULUMPGTO", "DFCDXGXZPRJLN1EJOZFEGBIGPMQJBFYKZUCIEHAJJKYW", "VVXKYDPGAWFDYLVHAAWIIOHEOFUHMIQVKEQYVIBAMOCM", "ZOQZIAGIIHWRSOJKKOHYSZQQWNAXKNGQCBIGJDGBKJJF", "PBRRRJHFBJXIDQJHOMKOJKPLRNENCIYMHFJTTYPXSKPM", "JIGXNNJBXJMAACJXPQEGTDJTSYSITKIZUHUHTJDHASYG", "DAMMUXCXWJFLMDVRYSUIJBQDOZQKJHZKVXRZMVUULPTW", "BFHLLSZCZUZUR1JCYZXZRMLEDRVJIHGLLIMUHTZAZIVV", "RHHBUNBLAJGJOFCLBQGTGFEIGPCQHIRKVEROAGAKJUPW", "GGCKZJERDADEVAIISSJOBBAQSFSKNN111XDOPEDWQFRB", "DJEQIVBHUQKCMRUFWHDHCFWZWGHJKIM1SWLZJGFGMPDG", "FGRPFKKLZSDOHUQPHFAVNDNSIMSXQIDEQGGXSDQAMJZF", "FDOXKBHQIUVPFSKXTMUXHZAFXIDEVBLPSITXSSASILEU", "IRUHVFOZKUGRCBUFRPAVKBSVWINNDBKDYBZFZSOZUYDZ", "NNAMCWKIHAEYUXFFYPAUWNZKOVGXRKEMN11NXYFDXJHX", "FCBRIWPRISMEZGPBLEPIUIOSDAIQDTNVXU1YRXGIIJXM", "ZQMWEXPRCZINNULMPZEIGZBLSWQFYPEJEM11UMPEYJJB", "KAHVWTORFIURMURDWFCIFIVEDDYPBACJB11MLXQNIMVW", "WBCLODTOWZSQIKEEPOROAWQAIMLPOSVGJVSUYRBYXSUU", "VZEXLUIBYBZQSYHPTEKTJASE1NYOUILFJMDIAGOHADJU", "XSPPOERCKKCKGLMTQHFFPXSG1GVMEOZKHLOBDVQQRJZL", "WSYTPUBMYCUVRULNNXRTLNQHQWBJCRTZKXLUWVUSZLBR", "DZXPYXIDGZHJYGQHTCJTJZFPEMSNHDMXCQPGHRMLVUSO", "YOFAYNUUHDISLRVPMFQFTXKWGLQZVVECWWUCZWLUVRIV"};
    int k = 1;
    int threshold = 19;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"26 30", "41 26", "48 4", "48 14", "69 62", "85 14"};
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<string> photo = {"FC5555555PM5S5555Y5E5D5H55N55555HBJ55E", "555555555NY5GDDDM5S5H555XVN55555F5U555", "DT55HJ5XS5555555R5555C55H55D5555O5B555", "55SK55D5EJM55555N5555L5555ZAUY5T55F555", "5555X555NP5555A5XRASL5BU5K555WKN555Z55", "55N5OE5555Q555N5T555555Q5F555555T55S55", "555L5555555UQH5V55555555Q5J555QU5N55J5", "5555OQ5555H5555IQYC5555A55O5555HO5B5NI", "55ZT5E55DTL5Z555555G5555V55DMHA5V55O55", "55H5Y555G55555E5M55HETZ5F55555TX5555C5", "H55Y5ZQTCKOKHW5PAWDC5P5C5H555N555555JN", "DTN5555W5Y5M55555TK55G555J5555DBG55555", "5E55555M5A55S5555LR5555555XQ555X5555T5", "5T55555R55P55J5W5H5I55555OQ5TS5NXHT5ZA", "55FNFZA55LA5V55JH555PZ5R5T55WR5R555E55", "5M555555555FIFZ555E5WQL5I555IPA5555555", "55RDW55ICXMI555L555K55555OD5555Z555555", "555M5N55JZNY55OF55I5K55555YTZQR5QS5555", "5555EV5SY55Q55L5C5M5V5TAON55555SO5R555", "RNCM5R5IL55V55KSGY5KR5H5A555N5U555FX5L", "55555GZJ555Y5IL55WU555L55P55555A555TT5", "5555Y55O5R55Y55D55U5IUK55R5IG5JY5555TO", "555555R5RCL5G555555ZV55C55A55E55555555", "C555PIR5O55ZU5XR55555B55IM555HSQJZD555", "555E55555T55QB5BG5I5HL55555PQKJ55O5HKR", "OXGG555555X55DB5YIEE5F5555S5555SM55555", "555B55555J55X5W55555D5E5N5I5555I555H5B", "QF55CZ5555E55W55555N55T5DJ555GN55555Y5", "55B555W5MC55VZT5555WM55L5N555DV555SM55", "555J555V55B555W55TZ55H5ADLGP555X5I55G5", "555X555F55N5PX555I55DAX5555M55A55F55Q5", "555NXZN55O55GI55OT5555VGH555ZOC5D555B5", "QE55G55555EYR5BY5AT5OB55M55555B5V55K55", "5N5H5P5555555J55N55555P5L55555ACC5X555"};
    int k = 5;
    int threshold = 72;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"4 14", "7 44", "9 3", "13 31", "14 51", "15 13", "18 63", "23 55", "25 6", "28 16", "34 45", "34 57", "40 14", "45 25", "50 50", "55 21", "57 56", "68 21", "68 42", "69 34", "69 57"};
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<string> photo = {"00L0D0000000E000E00000V00000U0", "000E0T000000J000L0000OE0R00W0F", "000ZC0000000I0000G00I00K00NF00", "0000FDQH000E00O000BTAN0CMH000E", "00JTI000DZO0OG0APHE0000000I000", "SL00E0000G0T000000TB000OPKL0SQ", "0000G00000A0UN00FS0000U000Y000", "0000J0OT00QNFA000ZIN000I000TIU", "0T00SJ00SN000RMF0Q0R0YV0WWVY00", "0C0G00X0000G0000S0S0A00C0000P0", "B0D0Q00B0O000KWGM0F000Z000000D", "000T00ZD0NFT0R00Y0S0000ZK0000K", "00G0I00ZT0F0LC0E000A0000EV0HIG", "00J0I0HDVJ0000O0000A0O000DG000", "SML00B00W0J000I00A0PGH00G00K00", "000V0000R00YTKM0000M00D0O00F00", "B0RB0SGSUEXN000O00EI00IT0J0C0B", "00E0VJUJ000000V000Q000E00ZV0M0", "0000G000000Q0I0R0Q0W0Y00RU0FQ0", "F00H0Y00R000A000Z00C0X00000P00", "0R0V0RKG0U000ERP0T0F0VV0000J00", "00Y0B0000VDIPZ00Q0N0V0D00OH00X", "0X000WP00WV000H0000L0U00W0UKI0", "000000M00D0DJH0000N00KDS0C0X00", "0OV0000X0M0000CGV00F0000ZC00R0", "M00VJ00VR000A0E00TB000000S000F", "000XW0A0000000G0000X000HO0000P", "0000SX0XZ00C0NLV0000F00E00GUH0", "000S00F000R0J0000000R00GWG0SR0", "00VYU00CKF000JU0000XA00Z00D00B", "0CA00X000W0000I0B0A00LXP0Z00YP", "QK0000HB0KF00HGD0C0PI0D0C00000", "T0000000Q0BKL00000L00000GW0000", "0GP0WNBSA0YE0S000Z0JI00SO0VO00", "Y0EL00JN00M00000O00KJ0WU0W00S0", "A00F000W000L0000WY000W0P0H00JO", "000US00Y0000J00Z000000D0000000", "000I0Y0N00000MY0UO000O00Z00000"};
    int k = 0;
    int threshold = 62;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"7 47", "17 4", "20 37", "21 52", "21 70", "22 20", "29 68", "33 56", "34 28", "44 11", "44 25", "44 52", "49 39", "52 72", "55 64"};
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<string> photo = {"00000Y00000U00000R00V000000K00000", "00DQPQ000000Y000J0000IT0X00DR0000", "0F0000K00C0K0000E000SG00YB000V000", "0U00000CQ0PS0X000P000OOFH000I0000", "00T00M0000U0I0U0H000O000R0T0PFG00", "00SVA0G000V000SEP0W00D00A0EO000K0", "0K00D0R0000C0FP0O00J0I00V0E00000M", "G00000R0KIX00000R0K0W0000PW00XZ0V", "0F00000T000KG00LTA0000YPHN0YZKLE0", "00I000G00000WH00D0000M00000000K00", "00J0R0M0000000VO0GU0RLAF00000R000", "000D0D00000R0Z0R00M00L0S0D0XF0000", "0WKWE0Y000Q0U0000MWMG000AZ000X0BE", "H0000MCA0Y0000ER0KGPM0UP00X00SV00", "K000E000B0000Q00MK0000HVO0JIEW000", "0000N000JCNT0V00ENR0UU0H00Y000000", "Y0000Q00F000XB0000YWN0C0G0Q0F0000", "F00TMK000000G00R0X0O0000000R00V00", "00Q000AX0JOZ0EI0O0O0UCQE000CCHHZI", "0PV00S0000Q0000YR0G00000CY0J0000D", "L0000FK00V0000BTL00AWK0000GK00J00", "0UKC000KC0000F0000FK00O00B00Q0000", "000L00B0000XB00000C000O00M000B000", "0KGR0SMS00F00F00N0S0GQWCUD00F000Q", "Q0000W00RM000D0E0G0000V00000M00A0", "0PGEE0000O0000OPP0000QV000R0Y00N0", "000S00000T00000UH0000GB0AD0T0MI00", "0000X0G000B000L0X0GVIPA0R000000YG", "000N0000NZUZ0DGPSO0UBF0UAT0000P00", "0000K00O00P0R000X000B0000GK0H0M00", "00000ET00YV00000K000G0DM0TRK0Q000", "FRX0P00000U000U0A00000RKS0RP00000", "0EQ0NXC0UWLP00ZJ00000SUFH00VR0000", "00AL00CK0U00KT0EVX0CLALJG000O0000", "000H000N0B0000000HL0HS0000000YD00", "W00M000M00I0X0EZUX00IBE0G000K00SK", "0000FC00B00TU0XLNA00JQ00C00YX0000", "0000O0000W000ME0SG0000GXVGNB0000R", "00A0C000AY00B0A0000L0Z000W00IRLQ0", "0R0I00DI00NG000EE00IE00000H000D00", "S000HDK00000E0H0O00B000PYL0BSQ0R0", "0000ZA0P0E0R00M0I0G000S000R0000A0", "00000D00E000QL000E0L0A000U00000VP", "00Y0K000F0XRH000000G00R000H0Q0000", "00YV00000F000H0N000Q0BM000O000000", "N0ES0B00000000D0000H000U00T0PY0G0"};
    int k = 0;
    int threshold = 65;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"4 72", "5 33", "5 58", "5 85", "8 16", "8 43", "13 10", "13 73", "14 54", "17 35", "18 87", "20 22", "22 42", "25 52", "27 26", "29 5", "32 43", "32 86", "37 76", "38 8", "39 49", "41 62", "42 16", "45 84", "47 33", "50 7", "51 68", "52 22", "52 49", "59 86", "60 31", "61 6", "61 45", "61 63"};
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<string> photo = {"HGSPBXJERQLHIPU000QQJUXMOSXWKBQUULGHXQIYWOK", "OKTAMIXYBVVHUVXK00TAFSLKIFVJABVM0U0OWCUMXOE", "AIEMWMJSFBAYPPP000IR0NXARXPAMDRS00000NHZJRE", "AMSKNVDQIYNMLTI0XW0D0SAXFLRVCXDD000SKIMOQIB", "GLHYHVEBENVQNZXR0000000JBNJFBMC000SPCRATYJB", "GRLCRVFENDGKKXXG00O000TRKMAZROL00FTFAJXWPOJ", "QOUBAMVBHXIIZMYUXTA0SZCQUGSRDZGT0WVCGHYZXMD", "ZCUZYORDXDKWSAARHUROTGFTCUPINXJNALPIQFTRWJP", "UEZOJUKWAQKQGALWTEZZVVECHJWSYGUFJIMSIIUPVJH", "TAFQNTGOYLQVPLRDKGEMXPVNGMVDSSFDQYYVVYFAXVM", "CAVLXWOOFRZSRXTFDKZSIBIIDHAUFPJJTPPQJSSYNKZ", "SRVRQOCTLSWVXMTFQYKSBWGICKHIOWHFCLZOMJPFDPB", "CYERWHIFZKHDLWPTECFYILSPSSRWHOBEDZJMRTPWHDF", "FESLFPLZHCFFVWMKMYYIAZSBGYZXXOANYCTEZAVLUZR", "UU0GZVRSBGXDWLL000VPDUYAJYKRLEKKYFPVWVGBGTN", "ZP000LJQMUYSGU000IQZAQPFWTTOWISYQWSQBPWDQEJ", "OO000CPGUZIHRHC00LFXWPLFROVFBBFFDHQPJLTBBJS", "DN0C0XWXNYTJMVFBORGYCYGBVDAJNYHSEWAJSNJIONU", "UH0YNJSSTTITCMKRQLLKIJSWWLCCNNQ0QBRAZYKHZBE", "PN0RNDLWBYEDMKUZAFESAURHXJBGJX00QD00SUIRPBC", "VLLGMMPWFDOZTLQLUOZKFIJUYNJGQ0000000BHLXRYU", "KQJPSQLJAVFJUWLJAURMMPHZGBZQHHX00000HIMQLKJ", "RWJVKSUBAIEQLJNSULCDTVTCBWETEPNKX00SZTDMQWF", "WFWGEWFOAMJVSCOLMCGFQOBCXDBVZMTYH0MJPSWLYBR", "VYABXAWLYXKLPFEOKSVKXATGXQSKSDAMYPCVCFPYSAK", "MNTMLDAZGBAVYNFWCKBIHXTZYVCHDXEIUVCHDIYLBPN", "VYTADRIPQYPJDCORGVDHKHYHGVXCWSZGLYZQDRAMODJ", "ZUUFOMNGPIUYNGNGJWHLRYIXKLKUZEJRDMWLKWZXJHJ", "UXLMQEONGDUAXCQAPRWWCQLLYYAKJEQVPTRDUPYJGYF", "OPMVBOLHBMGGTKTNDPVCBOOIHWON0E0URESHKWWNOPI", "QNHYKKLXRPQDEWUYTXFBQRBMCD000000VKOEVUHGJMO", "BQUOMBNFPWSVIYEAAUTWFSUWGGA0000DUVXQAIZIUVX", "EXUJCPBWNNKAJLKITGHSTOZMAQE0WWLDKLSJNSBSSXT", "RRRFCLXAGLRVHOHKFKQHYRRBADW0NBCEVBGGZZOVPDC", "IZKHBSWWMHCEUUZYYVVAUCMLPVHXPPXDNYNJJWRAHSA", "BOQUPYKVRHUDERMGMXAYHQQMQZVHSZRINYOZDFOAWWD", "JGWVSELJBMPEAILVOVSIVESBYMESBAQCFLWSJKSBBUY", "SOGIJUIIXWMGSPKXZKRZRVKDHUUZYBEGNAIOIAYFZXU", "MMCOCJOPUIVQHJFVAFGEPHGOYWGUWPWMYRHPTTLNHAI", "YBJKRWJEJSALRHSCESOZTEMJJAMGQESZHHWFQDWNZFV", "XQUCUEPRBBNGPSAUYROHTFKOTDPKLXPMWJBGNCGDZOB", "CSRXRDFCKGYETYUNIWAIRFUMKRMUEUDMGCZTFUTHZNV", "WQTIUAQDBXOFGMOKHFXLKKPDUSKTITYPLEISXDPZRLP"};
    int k = 0;
    int threshold = 53;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"39 9", "58 63", "65 42", "68 8"};
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<string> photo = {"IVRSHQDPSKQDJWLPMGWOATVKKLJXAXMXAB444LXTDXAUBZK", "TXDLZQYODLEHEGONMVRZIMLDHQZIRDJLUQ4444JBNDIOCNC", "PHYHNIOLJEDU4IBIUOFWAUPOGPZFXWGVEC444444YMMUAKK", "DUIUKRHFVGTS44BSX4Q44GYNZRGEAOAFZW4444FYSVAWSUB", "KSBMLSIDNYDTW4GYP44444STHORYMXIMX44ZK4LQVMGBIFY", "IJWSOFZXWTIT444DDH444PBQVCTXVNYKWUQXJ4NKXRDACFW", "UIIIKKCLPUWVIC4OTOPNFPOPBBJPXABJXYAJJDJXPFJIJRO", "VAXCWXLYKAXTRP44XQTYNWAICQYLFBDJVMKJPXLPIXKLBET", "KFSDAJCZEMVXCL44XTBXKTNRHWFBWIRKKWHPBJGMAIVRISU", "UAKZHOVCVJCMAEPNGZXZVVZHYSRN4DFKMCNVZSRQQBXDBSA", "GNFIAAWLBHEYNSVZXWPGGRCLQKLD4AGIA4UL4MJGJSOSVLK", "VHMTOAFKHIQLCLJSJYHRTTKJLWIJ4TMWC4D444CZUJQVKYW", "KFJ44WPAASXDGMEQYVOPPNLUK44444Z444444444QGLHHYS", "THZ44444ASPUJTHKMYKVEOKUH4444RTKV4MZ44WQASGAGZG", "HM444B4BUEKUVOKJUSYDVFUKU4G44PKTBMG44DVPNIBSNMO", "UVV44Z4TAABRIIMHRXTWBDZSEH444UG4SKECUVTSJVRPYTA", "UDDBOXOQRSFJNJLYNBDWJAFTF4444MU4WJNUHISFAJNJA4U", "YTAHEVFALLWNOXVOGGEBTNSBPT4ZVS44KLURNQTMTLSIB44", "HYMMUEPZBYLRZWTSSCPGTHIHWQMFN44OHPEVJPCBGFPRN44", "BXLJFXNCWLIWPFIMQDLNLHIRMLXT44YADPJYTFBTDXVZ44L", "YMQBAGEKOKJHRZXSXPXFZEAMMSYJ4SCLPPLBLYUFL444B4T", "HGASRXHNSVJSNMADAAEBEQVUDWEW4GAOKXAXDFDLS4KAOTC", "TDFGFGZGYAMJRGGNFRAPWGJECPIORHGETLVFAEYH4444SZJ", "FTYRJHKYKKZFMEIAZMHWPQZDEBXZIKYAEKLKGOBONA4KFRE", "FSVCPRXPSXYBVJKCXFCIBLOSEKJJERHFNVMSSUXDI44XJOH", "CXMBN44TWVQCQZOAJDRZJAVWUJKSZMKOAIELLNKGJP4VBH4", "ZC4W44UWSJZITNVEXQCEEMIRSUKYIDNMBFIQTZVKNZYGM44", "4L4JP4444ZTTDOVEDENSDVVEWJPRZKSKXCJYGYYSYFDR44N", "4444U4444IXFRIQKUEMCFUJFDHILFPHBDGMZDSGOUAE4444", "444XOV44444AFQJXRNHYSEAZMAUQHBCZLSZUPTYVFCG4444", "4444D4444AKXRYJXVLDDCRJTIVBADTOWCPYK4444CYYCA44", "444RCUVLYGTNZHSCVUATSLMQWXDXDDOCLJUO444444BQR44"};
    int k = 4;
    int threshold = 63;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"4 58", "15 56", "55 27", "71 25", "73 6", "90 57"};
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<string> photo = {"777777FGSXUGPHTMR7ZRE7IIMEGYZP777CMOHDEB7JCZ7RR", "JS7777XQ7CRMUIHLHPMIE7WFIZWGQR77QQ77QHU7OOHKUZD", "OO7J7ASJRTQRGOJI777U7777ILSBIGX7WDIHZXGMQOLUJKH", "IYDTKQCWJGSFSBFBM7ZRWD7OGNRICTVISEUVSTOM77FINVS", "FTAHMGVXWSNG7VL7G7Z7UHDKHYGRWOYWE7XXXAUC7777XAN", "KM7JUGJEXODNF777Y77CTD7W7O7777VX77CZWVCNZP7NGWF", "ADMKPU77BA77777UC777IC7F7777Y7BHJ77X7MV7RIJKASO", "ATHNSCI77DRC777R7ENVT77H7F7ITEW777L777JHXVXUY7O", "I77ZPAF77GKLYKTR7Y77O777EAYNOGL7777GLXUW7J77E77", "Z77UHPYBSCCFVW7X77JYD777RSLUWOEA7MCSQOCR7S77777", "H777QJPRXPKS7K7R7777I77ROMKBKTUFD77777IQ7G77R7J", "BN777TFONGS77777J7RW7L7OWHTVY77QFZT77S777LXXAEB", "O7URS7Q7DJT7QL77YY777RTSCLMEH777ULSEBJ77ZA77XKG", "BJYBCS777HQPSSRXPDB77GS777K77WAWLA777ANU7B777QA", "SNUVD7IU7WSXIOLRDSAEDEMPHDS7AFGPJNU77JEH77BYAEE", "ZM77M7ARBCZNZTDTPENEYNQZIMH77FKHHHKI7C777LALORC", "YPK777KINWB7ECJWFAV7OEPXCZK7RFL77CJ77J77J7EFBIJ", "77EI7LNMB77S7BFJGL7777FDNBJUIWZT777YQ77J777ATDJ", "DSYI7QJYM77HWYHFEEHUX7777UKJADHD777WU77J77777CW", "77U7QBXAEJVHISRWTT7L7A7R7NALNZ77Q7AMV7PTXS7777U", "XSWN7QP7EQHNH7JYVD77ZUA7X7XEPHM7C7SIETR7OH7VIWB", "OXGSTJO7BM77C77Y77A7NCH7R77BLHDIU77RLSU777U777U", "G77XTL777G7I77KE77EFF77MYRVUYYENL7TO777XO7LW7HT", "P777UOCB7FWXZDAO777YU7SVQ7N77IRCZY77Y7GE7X7CKNM", "7777RKMDVQJZBLLR77W77A7777POBARI777RBFYI77ESJHL", "777HCAYGVUGV7MUFRK77T7KN7CT7TQCMQP7IYWVF77YEGWW", "7CWJTJVNANCI777C777L777NMIRXO7N7MEXYZLLFQ7NKCO7", "DK7LFRLYIXG77Q7H7S7AL77A7IW7777BVZESSPSWNNLKK77", "VPPC777LIQOJDZKOTPE7HB7777SWX77K7PUUP7QAKNXBMEI", "MFVHI77E7ZIWO7EHWJI777A7RG77W77O77ZZCYXOELEWSBD", "HGWWPV7Z7F77GWEDQIL7777G777BQR77AQS7QDVL7BGG77L", "ZJRAGDLMNV77X7HQQWUMC77J7777GKG7T7777JVV7KXMO7V", "JBAN77ISMV77O7777NLBV7M7J77LIDLG77777GG77YAIPDT", "77LJX7F777G7P77777QKU7W77P7FYAMH7777NSF7PVDS7OY", "FQIDU7PH77G77L777I7HU7T777MZMSTBVEXITJFRSOALWFO"};
    int k = 7;
    int threshold = 23;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"4 49", "6 3", "6 20", "8 33", "11 59", "15 15", "15 44", "23 65", "26 12", "26 53", "27 22", "31 66", "35 46", "36 9", "36 19", "37 52", "39 25", "42 63", "43 36", "44 4", "45 17", "46 55", "48 49", "49 67", "52 63", "54 13", "56 30", "59 58", "63 3", "66 14", "66 39", "68 49", "69 64", "71 22", "71 30", "79 21", "79 33", "82 50", "84 9", "86 37", "89 18"};
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<string> photo = {};
    int k = 2;
    int threshold = 29;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"8 9", "35 65", "35 83", "38 40", "38 51", "54 31", "68 31", "68 46"};
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<string> photo = {"1111P1111111111U11111E1111W1111L111W1", "L1T1X1RZ1O11G1M1T11111A1WD1OWN1N11I11", "D111VS11G1YD1O11W111KG11L11111X1111N1", "A111W1N1111J11ZF1W1W1V11P11R1E111QK1D", "1WFI1X1111NF1I11KX1W1P11F11GF1111X1C1", "Z111XHQDHZYD11U11Y1A11F11XIR1JCD1C1G1", "11PAH111111MXO111I1TH1IBB11M111NX1F11", "1111EK1V11LY11111Q1D1R1Z11Z11DD1YPA11", "M1FI11X1M1VQPNV1TBE1111P111F111V111PA", "1FQ1F1R11FP1E1O1111O1FS111W1M11A1AN1Z", "1HX11D1L1111X11Q1EX11F1O111WK11D11U11", "1Q111PGR11R11K11T11VRNY1G1S11OGVXFT11", "11X1QH11Q111R11P11OPK1W11Y11V11PQ1Q1T", "U1QHTK111R1S1111VV111111LJ1S1XY111O11", "1C1V1P111RDCE111N1111111D1V11M1P111N1", "111D1111X111L1X1V1LTST11A111K11V111W1", "11ILT11U1B1X11X1VJD111ERR11KYYL1N1J11", "1R11P11Z1U1VC11P1O1VJ1111C1C1111D1L11", "1T111MN111O11JBB1E111REM1DSP11FFU1H11", "11WP111RT1VBOZW1111HIP11O1L1VU11AX1R1", "1P111QS11R11111TC11O111K111P11RG1111U", "A1XKO11Q11OO1111I1C1OYT111Y11R11C111S", "111U111W111TB111O1M1E1WK11S11N1RO1111", "11G1SJ1G1111RSVF1Q11S1UH1Q111M1IC111C", "E1XN11S1G11N1111B11WH1TOXWQY1W1BOXEA1", "11I11111W11R11Z1VVZ11111OM111E1X1RSA1", "XV1H11PA1KJ1I111G11J1111QX1XUO111111I", "111L1C1111WZ1F1W111XAWVK1IT1111QB1NL1", "1111A1BZ1CY1HK11A1Z1111111C1AFT1DL111", "E11I1111WRE1HI1PS1X11L111H1BZ1PP1DS11", "1O11QO11B1X111B1Z1N1OQK1T11Q1K11111WB", "11S11G1111P111C11O1111JN1R1B1ESZ1GIN1", "111IE111UTIA11L11CWZ1J111OTT11X1IN111", "11111EKI1111XM1B1Q1U1S11T11111J1DH111", "1E11J1111111B111W111C1111OR111EG11111", "CY1M11111111V1111111G111111B1J1J11C11"};
    int k = 1;
    int threshold = 49;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5 58", "5 66", "13 30", "14 61", "16 69", "19 46", "20 2", "20 22", "28 27", "28 54", "31 15", "33 69", "36 40", "38 8", "42 27", "44 61", "48 6", "48 67", "50 18", "55 66", "56 47", "58 16", "63 50", "64 6", "66 31", "69 43", "69 67", "72 29"};
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<string> photo = {"M22FO2JB222222D2LO22OGT222222J2222OY2X222V", "I22222Q2KS22Q2K2DM2C2Q22FW222D22TZ2222222X", "2222NYN2Z2UA2ZT2G22222J2N2222Y2W22222222QT", "TTENDK22G2ZK2222MP222LMW2T222A22QLYAA22QV2", "2222Q22222HBAK2UN2PLB22F22WK2L2222L2BJZ222", "222E22222AA222222W2222T2222CRL2222P22T2B22", "22D22222ML2D2L222TMVT22S22J2ZM22SZ222RTY2Y", "22W2C2PU2X22QS2HTOGT2222K2D222JV2V22G22222", "2UA22WT22JL222M2BV2222222F22222KZ2222RN222", "X2HZS2222Z222G2F2RV2D22CP22Y2222UXUVWW2222", "222XI22222TZQD2R222G2Y2AR2T2XG2H2IQ2JZ2222", "222ST2CQ2XJ2222222EQV2A2QS222YRA2222E2X2Q2", "22AUNV22W22YSI22U22N222222E22RBW2222Q2CY2L", "TS2F2BM2EKQ222E2IEBL222222Z2J22222JA22K2X2", "22VU2222222B2CV2Z22D2222S2K22N22PP22222J22", "2Z2UNN222222L2AOUY2I2222OU222LLP22S2222L22", "R22W22H222JF2222X2V2P2YV22222B222D222HJ222", "Q2222U222G22222Y2222XW22QEJCK2E22QT2EPW222", "2XCT2HGHZ2EGS22Y222222BW22T2U2J2E2HKT2222E", "222G22N22HLQP222W222Y2NJL2O2222PK2S22ZART2", "222CGI2222W2OE22SO2222OB222222YG222T2P2UM2", "2222JIS2SL222BFI2F2PERRACFM22K222OW2B2S222", "22EWML222S22JF2222S222N2ZN2YQV222V2TZ22KY2", "2Q2R2JW2N222S2SH222222T2G22222DPG22T222KG2", "E2222BC2O22A2OI222222T222222NK22222HY222I2", "222222YE22V22MPD2VNGE2BY2S2I222222D22222S2", "222UVNCI22S22222H2P2222C222AJ22222AE22222W", "22AV2222A2V22L222CKLO222SNJ2R2IWO2SR22PF2F", "OY22222TE22BC2R2LU2JM22222Z22Z222W2XIQ2NR2", "2K22D2RP222Q22M2YK2IR22222B22Q22222G222222", "2K2B2FG2FCQ2P2LIJW22VPQ2222A22M2222QI22222", "22E22QR2D22Z22RH2S222YV2FAC2KJ22222REEH222", "2222H222K22Y222E22222CWR222222E222C2222222", "2222A2222I2J222Q22222SDW222222I222LOY22JSG", "22222EZTS22U22J2F2222222B222222Q2F222BQ222"};
    int k = 2;
    int threshold = 65;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5 64", "6 51", "13 10", "16 30", "21 50", "26 36", "28 8", "30 24", "36 47", "38 38", "40 63", "43 15", "46 28", "46 57", "51 5", "52 49", "53 27", "55 39", "55 66", "57 17", "63 50", "64 7", "65 25", "65 63", "73 4", "73 29", "76 49", "77 62", "79 15"};
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<string> photo = {"ZT999DFVW99D9O999FBVYAPDP99999HJAL99HLZTTUXAUSGRF9", "F9G99K9999S99ZC999DRQLDMTB999UCEUJ999TZHE9ZZ9XPES9", "99X99R9999FR9ZH9ODAMGCLI99999RULYHI99Z9E99DD99RPF9", "999J99I999O9999GHMXRJTD9CY9A9AANWOXGEW99999O999CT9", "XGXTCWO999N99AZJRBZJBI99SIBL99YN99BIOD99QXQT9FLP9D", "XMJPOKBMLZ9PVPI99SJCK9999Y9XSNWK9IFGH999BARL99999I", "MDH99KB9999G9Y9999UOIM99O999TL999P99IJ999H9S999TMB", "EH99999K999W999999PHQKND9LEA9R9999H9TTCYNY9BW9MVXH", "YVVO99BX9LSJTWRI9OKYDKD999N999G99LG99999R9999XKA99", "A99UHP99Z99PVTGJ9TAY9P99999P9BITVDA9999H9K99F9FY99", "9999TMV999JJKAGI9DD99PV9S999BNP99GTQ99BX9K99X9Z999", "M999KX9S9MVK99JTB99999BY9V9F9H999WHBPPUN99ARF9999L", "999E9T9999UG99J9E9999O999VC999EN9NGAXZJVAUOIY99999", "99999OU999IY99999N9Q99TTEF99999Y9VBQFDOTGHYIMUMA9E", "99PMWTCOC99DITC99L99U99XIRR99G99I9VIBBXSHHHGQK99OR", "PXATVYRCBBTHKOR9MAMCZQ9DHHXB999K999QZYTSADTAZWR9AH", "ROKNYHXQRAVXVOLLIP9ZMYDYGVQRWMR999U9WQRTNIMOCJ99JV", "UGPKB99UXBFFXVAH999GQTLIUULVS999999999FIZONVUTH9RR", "IZ99U99BH9BSLESBS999ZDB9KHVKI99IJWHQWW9D9UI99PLADR", "AGY9999DF9WDSW9MS9EYJBS99RSDDTJQU9999C99999L99WFWX", "XF9EU999F99OW999ZZK99UL9WEZWBIYI9999X999999P9TJKGH", "XL99OZMSEM99V9GDQA999SI9MFCUDPJAZ9G9U99999YQMPIKKN", "TR99ZCZX9MMRJ99Z999S9CRBVCHXX9TREUJQXYHDNEP9YNJ9BI", "IPDBQVJI9T999CLBDD9VQDOUQVCT999CAFJKEWTTEB99Y999K9", "ZJC999PM9J999ELRRRKUWXXUNYA99RTBKCAYVHZFGUI9TJCX99", "UA999ZL99Q9PF9HGFKGNC99UTIS99XSNQCP9XLVXCAG99YW999", "Q99AIX999Q9999QXVOBVE999999PUPSRXVE9W99ULH99KPE999", "A99999RV9Q99999AWHYMU999D9UVURVOA99999AJT9H9OOTOTT", "X9L9SEAV9KI999YLCAIKCDJ9W99UTFR9CFU999999TV9FSX9WM", "UBI9EZCTH99DTOGQBIFGRQ99ZA9TFTH9D99O9999XPHDFSE9DL", "TNUB9GJ99999AVKDPT9O99XQI9LLEY999999SS9SA9XN9999R9", "FZK99WMX999GAVEQT99999I999LHETWZ99L9K9B999JX9NP999", "JT99999OUCQIISDRWRU999999DBPHBBQW9D9I9999999QXRR99"};
    int k = 9;
    int threshold = 45;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5 24", "7 54", "10 38", "17 5", "17 24", "25 52", "29 27", "30 16", "40 25", "43 63", "48 55", "50 19", "54 5", "58 27", "64 13", "66 61", "67 33", "74 17", "74 56", "80 8", "80 40", "81 63", "93 9", "94 61", "95 22"};
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<string> photo = {"BQ88NX88888E8S8GJ888G8888H88L8888888", "888WFS88888H88V8D888QQBIDYWG8IQ8R8YA", "J8B888EO88W888IVXL8U8888LY88BK8888GF", "Z8U88Z888C8F8D8888QV8KG8O888GKR8PUV8", "8P8T8UTOC88SJ8TC8E8VZE8R8HD8S8IJQ888", "88T8CP88L888N888V8I888C888G8B888W888", "8YH88F888L8S8E8P888G888Y88X8LB88E8JO", "Q8888K888S8G88X888LK8US8SD888LV88J88", "O8888NC88CM88YV888XMEEPLBRZ8TT888T88", "QBV8Q88888DWC88Y88SZSF8AM88E8T888G88", "FD88XVYEEB888888FJ88BC8O888888C8Y8V8", "X88V88V888P88N8A88OAI88ZFK8PU8QU8V8L", "8OY8888I88LVJ8U8N88E88WR88K8OZ8SX88I", "88M888LW8888S888P8H88TX888KQ8R88ZU88", "XH8H8P8Z888UWC8L8L8RVGI888WS888AX888", "8M8XAR88L8HTAXQGR888E8KCKCB888SL888H", "888888Y8TCQ88IICD88O88W8D8AUOYFQ8G88", "8UE88RT8U8I8888M8FO888I8X888888IIIO8", "Q88QCW8R888PD8B888BT8Z888LP8EPU88U8C", "888H8B8NI8BXHFD8888A8M8PR888GG8ZH888", "8888VD888Y888J8888KSL8D88A88N8O88888", "8888TJ8QU888ZKLC888Y8888LG88P8Y88Z88", "88QE8PV8Q8888D8V8XF8I8PS8M8VB8MO88O8", "8A8I8Y8VX8ERZ888M8NI8Z8D88EGT88ZBP8Z", "IF888Q8V8HS8888K88T88888Q88Y88B888O8", "8K888J888D88888K88PI888I8888S8T8FQ88", "8POSXH8H8RLBXMJF8J88VF88D88MQH888QX8", "8TP88WH8VG88P888P888D888EWZ8Q888P88X", "8U8888PV88P8R8888VG88NINO8888CRVT88I", "88I8888CU88LHUF888VS8A88X8888888I8O8", "88E88ZFUAYX8C8C8M8GG8B88H888N8GY8B88"};
    int k = 8;
    int threshold = 32;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"2 56", "4 42", "6 17", "6 32", "7 48", "9 58", "10 26", "15 15", "15 50", "17 4", "19 27", "21 11", "22 44", "26 21", "26 48", "31 58", "33 40", "34 15", "38 57", "41 35", "42 23", "43 51", "45 43", "49 27", "52 49", "54 11", "54 21", "56 39", "57 58", "59 28", "59 46", "62 15", "63 52", "65 4", "67 41", "68 29", "69 10"};
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<string> photo = {"OVIQKQSHOPVS2XQBYINMDUAWWRTUSDSOMQJXOKNKCDTGLIAZKP", "ELXTLSWTRWS222NMVBYZNEPWRATATKOWMEDXFPAXVJGKKAMEAT", "IYRRZEKWZJBV2ADFEWUZBAEAQALPPLUCMUBPULDRFBAKOIPQMA", "VAEYRNQELSENHBPVSJIMABFMLEGGTVYMSHJQSYATSFBWCNNBKL", "DSSDLUTDOZDFLBAMZEUHHBGRLLFGRQOGLNYYBZUDST2MOQAJYX", "FSAGLWNVWTS22XLAPPZAFAWTQRNTRLSQSELZDWMVR2222OH2DR", "VUZWQSXLRJEWNPLORAMKRFXXYHUXOHLINVWJ22YEVS22FGIXHJ", "GMIMY22MHTKIGKVRGDWRSHHNFCFBLTYEPROM22222KG2KLZGSD", "MRYDVL2TQJHZWXKSMISATZWTYQMIJCNJQWKIR222P22DAGENRT", "IVFFACLZJJCRSSUSDTOPAIMGGNUMJHRMSUNWPSCGJ22WUCSXWG", "VVVUTEWYHXBMBXVOAUXGSLHPJUBPCFVTOFOKXADLOEBPMUSKHR", "XXMHWDDKFIDUEIURAJIOQLVBDIUEZDMYFHZHSWGKZCJKSFLQNG", "DALHEJGJMBIICVP22GQVTGAGPEMBCSVRFNUKYFCKRNOZYAHLCJ", "JCHYAMOPRFSPJJP2VEVTWUBUGQC2VWEWCOZBHFMKLHHYMGAFCX", "NJKVVDVUTFDYBBDUTWUZNVFPNEJIILNXVAFZQFANZGAFWFRJYW", "MKLNXWJKPNKHEZWWGAEUXPJFTGRMMNBHRECIDYYWSBEBWUGHBX", "N2FPHQIQWY22N2XFWOPTDMPXJXRXDKDKYGCRTMKSHHZUIJEKIV", "P2QZRTCRIWVUKKOSRRYBQGGOEUUPWBXZGLNNXGOSVVGMKPZRGE", "222NNJVREPOCWBTEVFGZBIJWXOWISVECVSVHWZOATZHIJEZKOH", "22MZYURWUFBHGCAMSRMBNEAUDXONNKZQZWVYANVGLCAVWSMYJA", "CRYRRMOTOHAGEDJJTNWUXIS222BXIWLRQZFPTCYHKJKQK22222", "LFPYA2LILKROGDSBMQQJERW22222SXYVFROSBTUCSZBNXO22ZA", "FSAYLVSNSGDZPOLEDAMXPIZR2YZSDPBRALMYBQEQFLVVTL2PVJ", "MVQFILRSXDGYXKKSBFOYBOWDKFIYCVAJBIDOWZBJWOCFYUWZIV", "QZAXXDLHUXKQBVNWEMJOCVQCUSRORBNLPKSCESAUNYJY2RBSDC", "IANTPCYGEJPPMVEASQFEQUMAHGGLRMODPGPJJUBRBPLAENHTIC", "NQGPIKYZPODFDCQDAPCO22JGVTARSQRIXXOGUJYNPQTHSHYFIZ", "TGMCDORSZRA2EPGMZQPNEKYVDBTMFRAVPCLVJETYGFMBFGBLBS", "VPYZUEMPG2MMZGUOAMVUUATQDIQOADHZDVJHWCAQDTLFJLRZ2J", "ITEHYVUYXWPAJXFIMRVYWIDSCBZWZHKPYVLCXJCYBLBDNNWITB", "OTPXKHWLACWAVPHEYOCHPCFNUGHNJIDFFLGGLDRYMQEBJPUQZO", "KCLC2PZVYEOALEWDENYOBEWWPIJIYPPGNLVNCYTGORWEEDDKFC", "IBP2222WWZBRIWMVKCSAZJMRQEPLHPDUQRASLZRIMSXMOULKIK", "GW22I222NWUEFTNAXIIGHNIUSWHOPXOYJSVUWIMBEEMIKDECWS"};
    int k = 2;
    int threshold = 18;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"3 36", "10 65", "25 3", "51 43", "77 15", "86 12", "95 43"};
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<string> photo = {"T888888K88888888888YE88M888U8888RK8888N8888", "8K8888G88RMZQ88888F88C88Q88T8888N8X88J8888E", "WD888JHBO8888Q8XGL888Q8Y88LGP88JT8W88BL8888", "8G8DJ888888VQTY888E888E888NOA8Y888RFC8O8888", "8KAAB8888888Z8Y88B8888B8G8G8RRU8U888Y88VA8J", "88K888TS8888R888F888888D8H8888MSMSI8W88R8V8", "O88RGV8WSV8N88IT888TQK8DS8P8888888TW888P888", "88KY888888DP88HA888L88EBE8NAI8S888O8R888W88", "8F8YB888YPOM8D8ZUIKU888888V88Q8N8T888BFF888", "8Y888BI88888PM8888XM88P888GRV8WJUS888S88888", "TO8E8B8888JBC88888BYSQG88Y888888B8K88GMAP8I", "888ZJ888E88O8888OO88B88Q8PO8S8U8S88X88888S8", "888HFYPE8LJ8B888ZR8F888PO8HQR8HH888Q8UGD8G8", "888F8888U888Z8WP8888N8L88O8H8L8888TUY8AHH88", "8AAR88YV88888YC88N8YVE888888ZMT88X88888W888", "8L88S88G8888888E8888NJKL88OD8P8W8I8VX88G888", "YE888C8W8888K8D888888H88CU88888HB8RNS8A8888", "A8D88S8O888I8C8ZTRF8H88N88888R8N8888YYK8888", "M8X8HOM88ON88888888H8888LLK8888O888MFLJ88QJ", "G8CC8A8AJ8O88888888Z8DXC8N8C888FU888LC8KV88", "V8888A8888SU88E88UI8I88V888TA88Y8A88E888888", "R88888S8888CN8K8RV88B88888U88GYJ88P8G88TO8R", "K8H8N88V88888VI8U8LU8WMK88N88888I8U8OBP88KQ", "8YYE8Y88B88I8LOQH8I8N8W8VH888888N88HFQT8888", "8L8T88WY8888MX88W888HZ8AY88888TK8888VJ88888", "8Z8P8888EH8I88P8Q8888F8JK888DR8T88VR8BE8888", "LI8UQ8HK88JIFK888UW88T888ZEE888DYG888I88888", "88888F8J88L88A88888CB888A8J888888I8888Y88RA", "8888P88888888E888888M8R8N88I8L88Y8V888WNE88", "QL8C8RRU88888J88888U8ULV8888C88UOX888888888"};
    int k = 8;
    int threshold = 71;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"9 41", "16 9", "16 18", "18 56", "19 45", "22 31", "26 3", "30 22", "30 40", "34 54", "36 29", "39 9", "46 18", "55 36", "57 47", "77 55", "81 50", "82 30"};
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<string> photo = {"33333BVUSUD33YVVFBT33I33HJBK333OAK3H33", "33333TV3EX33333KZWD333333CF3333XQO333J", "3333S3H3UWK3L33ETVR3333PFIJT3E3I3Y3333", "333Q33333R333AFKEMT3333333RK33333TI33R", "3MO333I3GTR33FPFKZED33N3KJCN3333Q33333", "333ACLU3HY33CBPSQDGDKVR33QIYM3VY3TX3RI", "3AXAEUP33KUOAHXYXBJJTNPDHQSRLPO3333TRU", "JMBPQLUALPSPMUWESUGJV3CHXVAV3K333PEXOW", "GBMAYDOYVLZL333WVXAKZ3333AP3333333FZFS", "FTSRGBWSXTJV33333UWLW333ODII3333333HTK", "GDBNAZVHHNKHO333XKHQM333TMLLI33XXXDVHI", "GYYYNXCVHFUA33G33VEQTJ3FKVBWO3JKZWGP33", "3HQDDZOCMFW33333JLHKPRJQGKFBCZRFADDWQ3", "33WM3QJNOIH333DZUCGIBNKCGIXJLSZBTQMWW3", "33333QPCCG3NKJJRE3AZBASPYTOUZUFNOQKL33", "33333POAU333333YB333UNQYBHYLZKXSLLY333", "3333333I3K3333SFN333HHMYGXRLETOETO3333", "333JZFE33Y333KROM333QRFHZIQTURPYG33333", "DPQFKIEN3AJYWUSN333LBZEBYFZDRVLPM3V333", "HFJYGLPB33CXTIHFOQV3AYHXSBD33DVJ3Z3GC3", "RTMR333333APHVGV333333JIQAV333A33H333O", "KHFFHKK33MKGLGL3W3333EKBSNXB3U3333Z333", "XZHXNZC3TDZKH3H33FE3KJVNAIDK33MT333R3O", "QFAKUULEU3333333333YAHTMXDD3333U333Y3J", "TMANAJNCBJW33C3A3G3O33VCNGK333PW33Z333", "JUXYWIFQ333MI3N3G3VQ333CVXS333BFGYU333", "WUGVUYEG333333C3333333RHLVVQFXCDMYG33H", "UPSNCJSC3O333F33X333333CI3NN3D3ZYIBL33", "TTCMJUPT3F3333NSIT3O3GU3W3H33333IZIC33", "LLNEMPQP33333333NW3C3B33333333HJCFVWF3"};
    int k = 3;
    int threshold = 78;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5 7", "7 30", "24 55", "28 22", "37 54", "45 6", "60 6", "62 17", "71 31", "72 49"};
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<string> photo = {"UCLMD888S8888ZQVYRCZUM8888WHI888Q888", "888N888N8888X888FP88888888OJ8888W888", "88E88888M88FIB8888VCE888HM888888F88M", "888G88888CQ8888N8XJZ88ZH88R8888Q88OR", "88L8888EYTJE88888Q88ER888FNDN88N8USC", "J8D8K8QVA88G88YLU8M888O88888CVJ8UDQW", "QG8FGHGVJ88W888VK88888R88888QR888888", "CX8JG8Z8888JV8F8Y88R88O888CQCMIZ8888", "8888888A8DW8XP88M88Z88C88X888888Y88J", "88EJ8BOT88I8Y8888ZY8888DD888888VEPS8", "8XDTS888EW88A8888OE8OJCUY888JVCH8888", "T88A88888888JZ88888YDSIOIDJ88G8K8888", "888JD888GKU888Q888YHT88WZUAHPG888888", "88888B88P88FIYEL88E8R8FYSP88JVZAW888", "888LSL888X8U8BWCHDH88888L888VYMRGZ88", "888888FXUYHR8888G8I8888WP88PWPDUY8Y8", "8PT88OGKSD888COXP88DI888W888WFB888FV", "O88JNEGE8888GBAB8B888PR88M8B8FOGI888", "B8N88YXMN888F8YJ8N8888N8I88O8XT8888S", "X8888MDDBY88A8CL8P88888V888X88T88VK8", "HZVO888L888HG8888P88MPC888K888T88V8W", "88SC88OR888E8SS888UF888NO8J8888MD88M", "888I88PGOFQ8888L8UT8888ZKC88888M888A", "88N888CF8888888YP88LPE888ZK88BA8888U", "8Q8VHH8Z8M8888D8888UP888E88XD88JXL8D", "888UL888WY8K88E888N88888G88V8V8888EB", "88888G8888AFOQ88888T8H8A88888FV8LF8F", "8G88Q8TL88ZN8T888Q8SW8DMC888888J8I88", "CO8NG888ZE88C8BUX8V8R88E8V8888888B88", "88T888BXG88888E88888E8AA8Q88AO8DT888", "888G888B88888BWP8888DJ8888AA8QF88888", "888J88JHZ88MSVO8888M88Z888O88L8O8888", "8888O8IJ8MJY8DAMD8A8IQN888888R8Z888Y", "88888E888G8888888DW8Y88P88E8U88TBZR8", "88TOG8888NFT888IN888888TV8T8JN888888", "8F88J88888ED88BG8WOQ88LIY8LJEI8W88MX", "Q88U8N888F888WZY88BFQ8G8H8MGSKP8ML88", "W888B8PO88PKVSEF8888YX888IKDZV888888", "8T888888O8CBMM8U8888E88888SJB8K8P8W8", "88O888MLWFJGDQ8KX8888W888T8B88SO8F8A", "8P8888T888LKRW8USTV888XSWW88888E8888", "88GY8Z888H8H888YAYU8V8ASI88Y88AFD888", "8888P88UZ88Q888888PITQ8SGQA88888L888", "8K8888F8PHLLB88SIC8888888G8J88US8888", "S8EH8FK8888GZ8HLHT8888YN8G8I88WV8888", "8888G8888W8R8A8A8P888K88B88VNQDLY888", "88TJ888H888B888888O8XN88EZ8Z8WMQV88F", "88Y8KB8888H888OXIX8O88Z8888888DHM8TI", "8888O888I8W8888E888888I88888DQEBHECX"};
    int k = 8;
    int threshold = 76;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5 50", "5 65", "6 28", "8 41", "9 77", "10 83", "12 6", "15 71", "15 92", "18 23", "23 47", "24 36", "29 9", "32 21", "38 77", "40 15", "44 31", "44 48", "50 12", "51 35", "51 65", "52 92", "57 54", "57 83", "58 5", "66 25", "67 59", "68 87"};
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<string> photo = {"FHQLSSUCWDETKQWFMZNJDSHSLVSXDFFLHSYQJTAKTVQQGG", "SEUADCXLRGCIRTWOSNWHLQARMKHPTNQFOHXCDDFQVGZEVG", "LPQAKIMRJTPSKUPQJDZFZAXTBXIVWMCULMFIBZOTFQMYUK", "GYMUQMPHYVOIJBYRZLQXUVUMQMLXIGETOAUGGFICMCKSVU", "XNUJJANMSATHIMVMIAYLOGIFTDKKZCUGFUYJWOCCGSSPHG", "FWVCUUUZNKLCNERRHZMYUDKJIBFDEBPVQSAVORDKDILBKC", "CXSLSPARHTFDYVTIYWDOVLRFVRXJIVVMIQJIEHXPSJMRCP", "SQKYBNMKPQFWCWVIGTQXLPCHMDJRKREVRBIICKKNVCDZRD", "PBWCHDZKYVEKQGVRLXVNQXLBFCBAVEFCOJOLSGCSNMATDO", "PPTXVNBFGTREOBNQCFHVCQOWHFWTHCZPSEPCLJURXQTBBU", "JCEKJGAVPGAEMLVPEFLUKAIZEYVSRXWYXCEZJCFVXFPNJY", "YQSI1WCMYMIGGPKRNNOCLHNGVFLXCZKTHAOFALIJTZCUOI", "IIEC1SZWXRVIUNFMRFHLTHIQVKQUAJLOCUPODOKKGVKROH", "XAA11JEAQZIMIJGJAEZOWSTNHEIRCORYHUPTYZMHGRUNDQ", "SC111WMTECEYDDMCVICGFZRNOPEEBCZQHAVXRONEXVARXM", "PO111ARGLDVDOGUAJAKJSBLKCLWFVDIVKIRTZZLSZXZHAW", "XO1111FEDDOMIQLVUAFUSJEDUTXEUZDCQRIXSXZMRLMJRA", "SA111DEMETZLDSXSOWHWYQHNPHFWRTFXUEHBTFQUCRFIQR", "PLZ11JZXGAOMZHVBCERVVMGLUNCBEMSVJJULKNDMIDSETO", "TSTFLYJWYKDUXKFBLJVZVLMUHPRVPMRKXMFAXHITLXKJTT", "MMWSTIBRDUPEJCBWXCLMLJLZNWXXJNYYKEVBSVZCZCWQYP", "WVZOUSZJALZRQJIZLOQELIDGHYPQNECWKREALDWKJNXTNS", "QFIZSJPLRDJPWWVTVHNXJHTBQWXATYJPIQANQZRLGUQLSU", "QRYJXTJAFRUDAVPDUKTKAUHRBRQZDQHUIWRFZWBVGIDXML", "GSIMEGOPVGVEQDAFXQPDOZTGJWCRODWIMVPPTAMGHIPLYJ", "MBMKTRMYMJYTYMRQNUQWUUPTHICFPWXLVFEBYSEIDMXIUY", "CTFAVKNRSSPVKCZMYVOVQMNWAQYEGLOKVZRSYTKCKHRHYD", "KIIUFINHQVNQAKIDKRDGWXSVPISWOWGYXQXIKXAYVIIBHI", "MFITTHRGJHUJZYABHMCIGPCKRAERVFEFPTWPANUDCXKHJL", "OAWSBOQZSXPRNKUKZCXCPIGFDCVKMRRKIRJKMZLZLCASIO", "YGJLHAFRPYMMDNTIYRCDBMBFRCZEYZKPPFPDWQZBKEPZXT", "VETJACXSVRYBVZHXCDRFRPGZCHJRSVGCEJJZEHVJFVKRQP", "ARGDMHAFCTENDRRXVZIWJAYTMDXFKTQTJTYFXHVBYFWCZF", "YVNHLAIPGZGORYOOHWHOKAUIBYBXKJEOTUELXFAFRRLNLB", "GJGXVTYFYDFWAWEEDKTOUABKLSSVJRGHCWRXRRCPOAOKNR", "JQTORUILTOPILECBHSPNFEYADVEVOJJJTJVCTYEYYUTFXJ"};
    int k = 1;
    int threshold = 71;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"8 30"};
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<string> photo = {"QOEK4RPX444FQPOJ444RO44Q4444HR44LKNTQMGRKRMKSQ444", "BN4444MNQY44XK44APUXN444DJQ4D4444JWKIOZSIZHBYJ444", "E44444444YKMI444I44ZTPX4444MT4B44SZQGXMHT44FO4444", "NFL444DIGN4JH444MAZ4S44C4L4NGU444ALPRBJVT444WXM4D", "HTI4OHDDBBGO4Z4Y4LQ4P44G4NP444M4NDDILWEJ44WVTX4MB", "CDBBXJC4H44444O44Z4CP444FTK4444ZU4FYLNWOV4UBUAOFB", "AEUQ44G44C444ZY44F4444MWKZU4444S44BPKMXQOSMGRJBWP", "C4444A444T444THB4CH4W444LYDV4QU44ZWHZGSECUE444EFG", "CEW4MX44ZT4N444R4FCVGCSZAAPR44YQ4DKVBYVZLDJXP4EHK", "EHJ4J44X44IQ4NLKDUSBCO44GO4DAU44VDYUPC4HAVOLA44DG", "QKER444ZE444X4444KSK4UOXR44J4444FARQK44AJMMX444MD", "SBCEP4W44Z444AE4BUWI4I4BLD4I4D4L4CBVI4444RFY44NMS", "444BVU444UD444YAIUA4444IAO4OXIU44TMH4Z444VMN44PVV", "G44FBSU4LV4Y44FBEUV44444U44ZNAECXRQQ4V444YDMBQFAA", "FOGLIFV4S444CEYPTPNUWF44Y444TBF4UYVF44G444HAFQWYO", "SXEHOIJ44V44XAMPLZIPNSNEZ4O4C4444Z444C4RV4LTXWTJY", "VUAB4NK4BS44DAERUJ44AGWMPEBAE4444CX4CU4M4RPNHJRRD", "ORW4NNSNOQ4NELRLSU4JAJGJQQGY444HH44ZSQ444AWVOJ44E", "ZH444EWQF4WAGCEQLCKMY44444X4KIFWT444TH4444ROLEE4X", "O44444I444444BAXUKF4MWK4444TKCYNL444M444XHIJEYG4P", "4N444AKJ444EQRZQE4444SU4O4RWQMJRIIF4ZM44O44WQS4D4", "4G44NNIH44BKXAGKI444NYTQXG4JDGQVT4AXUW44M44XVO444", "44CDRADVMMW4QGD4HQ44NDVQ444KVNFRX4QJGSBLL44K4IVEE", "4WQUM4QZVYJQUGE4X44UVYSB4C444XJO44YJA4444Y444YVD4", "U4EJFRMRJHSOAEO44O44SBMQR4D44QXQX44MC4444W44J4H44", "KOS44TCLCJSEDQP4QD44IXHSU4F4JSGR444RLX4444HU44C44", "V444DBVWSKREE4444J4SVRAS4FFE44HA4N4K4V44QVOIHESD4", "4RO44NMFECP44A4QGTDAHCGE4BKIU4SOPM4L4YN44ZOMLP444", "44DDP4E44I4444Q4444DG4BVLFWLI4XBPBA4444YMH444W4Y4", "444444W4E4444K4444V444VFJMYZ44NYUMVYXR4L44V444CI4", "W4444X4AS4O44Y444AM44J4C44DGY4YNCD444QZH44M444SHD", "4W44BB4OIL4S4VKLG44DAV4444S44IN4Z4Q4MLHO44ZNIPNXW", "4D4AKS4G4C44WZC4444VOJBY4L44444JQ44U4JMEZFAFJOCRR", "4PN4RUA44M4444RK4A4JJPPTBRKMUX44U4E44HCBPEXIOUKR4", "4444I44444P4SW44XSYMTEZJ44AEYR44YRVF44F4PSDYV4GE4", "4LBDIZI4444F44444GVAWCZQW44RH4EZKMEZT4444B4444F44", "B4NVQBG444Y44U44Y444DDFQ44IR4W4K4QDX44444INA44J4C", "4444VCP44NKRST444R44WDARDZAG444444C4JP4QO4JB4PBPA", "UYT4DGMGC4MZDJ444ZC44D444MICZKB44A4444O444VME4SBW", "NJZJN4I4J44KOSDBC44VO4444CDIGDPF4C44444QMJ444444X", "KRDMU444Z44XG4L444G44B444NWNOEUQ4R444JFTBV44BJF44", "FFZMO444I4B4444444T44S4KQKZTHBKVTI44LLLBDH44MHIZF", "ABMPKG4G444DU4444O444Z4444MZKCLYYKB4SGSMJAUNSNWJ4"};
    int k = 4;
    int threshold = 34;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"4 67", "6 60", "7 39", "10 5", "13 17", "13 82", "15 28", "16 70", "19 81", "20 40", "21 31", "22 23", "23 59", "24 14", "28 73", "29 6", "30 50", "30 82", "33 59", "38 46", "42 11", "43 25", "47 81", "48 5", "48 39", "53 25", "53 47", "58 13", "58 66", "61 32", "62 5", "62 77", "67 49", "69 38", "73 80", "76 70", "79 25", "79 37", "79 51", "86 45", "88 59", "90 20", "91 80", "94 4", "95 53"};
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<string> photo = {"555Z5IVW55AAPQ5QJ55555PCTKQ5U55", "VS55MRHWM55KSVYCW5555CWTA5F5555", "WB55X5WJCHWSEBB55Q5W5GDF5HGC555", "W5K5BIQGGI5CGV5555TKH55YXSE5WC5", "55XZNAFHQPND5V5SG55U55555OL55K5", "5PY55JJG5L5555LNW5LI555TY5S555O", "TEK55G5N55NG5GJ5VFP5WWM555MVJ5T", "XE5R55Y55WZSFSAQCFZ55E555B5DOI5", "I5CS5H5555TXTFGPNNVLF555XXLLN55", "55NOQXPKEFXH555L5PJBLD5M5O5BK5M", "55ZNAKKRJBET5HSV5EVZAGSGV5N55C5", "5X5TWBFCVCP5W5M5555JUIQXJ55N5DM", "CYU5FVDY5P5XNR5LG5Z55T5WD5HXKDI", "WVE5EWSHCFDGW555N5C555RYBA55QHL", "EOM5AGT5VXW5Z5ITUZW5FYDZOSE55DY", "ZPW5G5D55XSSOHRP5UXE5XB5HRB55HH", "55S55X55YXRGA5OJIHI555A5NCTV555", "5B55JK5HZ555EXTFDM555K55W5HG5NK", "5PW55G5RM555J5GC5STH5BH555DUQ5T", "55ZKL55FN555KXXSQM55HA5V5A5B5Z5", "VXQ55Q5Z5UXP5AD5Q555QWS5AWYDS55", "555T5T5BLAFZ55AZXV55JZ55IL5JP55", "55O55S5YYZM55DZPOSY55T5TZ5CX5D5", "5P5G55YM55V5555Z555I5GC55U55NA5", "55K5H55JK55RF55L55CWLR55555YJTJ", "X5IQYTA555TYXMW55PGDH5QL55W55OQ", "NOFIL5KNFK5DGSWSSKMO5555P5H5555", "W55V5X5555K55DRWYBMWWY5LVX55CX5", "555GJPOP55NR5VHJ5RSZ5AWXMKPWM55", "555C55F55CTDE5555A5555HWYX5VJS5", "S555ZT5IC5I55IN555VE5BHMOC555GE"};
    int k = 5;
    int threshold = 16;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"2 9", "2 20", "2 36", "3 47", "4 4", "4 58", "7 31", "9 14", "10 45", "14 37", "16 14", "16 57", "18 49", "19 2", "21 37", "24 11", "26 45", "27 20", "29 27", "31 59", "33 8", "34 23", "34 49", "38 43", "39 3", "40 34", "40 59", "41 27", "44 53", "45 9", "46 43", "47 15", "48 35", "50 50", "52 23", "55 60", "57 10", "57 31", "57 55", "58 5", "60 17", "60 43"};
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<string> photo = {"ZHIQQP888UBKVTHNNEMHODHF8NGCQOSMY8KHAY", "DQ88V8W8888RCZQGLVWPACBAZBX8SCQMH8LXY8", "DG8888B8RPXLRTOZJYBEUUKBFHLVXL88YAVGW8", "W888888UAPIFMRGBJFUZFTJTVBA8V8888NIZX8", "FXWILIH8SQ8BCZKXRFFDVGDECWLHTW888KZ888", "KC88P888I888QUOARXLVUYPPAIHMJK888U88M8", "WE88D8G88CLVXSEPRSU88JFAHJCOZ8QDKEL8IC", "SV88ESHHLGBGZYPYM88888ETXVTHDIROEA88SX", "EA88RFDLHWAR8P88X888UDRAARAXB88EURJOAK", "SICYRSZAGTFKHF8IFJQ88ZCMZZKBES88ANLEWB", "YBYKV8MCFSIASU88SEAF8WDO88QUL8CCPSOZQF", "F88SHD8YVTQW888NONSYLPJWLAIEY88BR8888R", "C888XM8IPU8ZDPLFNYML8UXFQSRJ8HGZWLCYDM", "VNCLXY8VNC8B8QIKIPRSOUXLMYVM8JWLGDZVYD", "QKNPYT8JQ888EHZZP8LE88WGNZZA8OQESHRITS", "8J8N8EDOIJEFHTF888TJJINYJF8888SOSKTXDB", "Q8888Z88MJKTRSIDFGI888WRKVRI888CVIIEBD", "EMQ888I88GWE8KT888VO888Q88QKR8PD8DI88I", "YFT8A8HI88NLQTXCCM8VA8YNYXTFKLEC8TY888", "DZAGDSQ8XMFGP88888AISFNIY8888XTW8PA8B8", "UWFLA8888JMVF88888XIDWGENH8O8Q888QSHKS", "TTDY88888UOTFUCX8PC888TWYRYFEK8VSXRMFV", "G8L8QTI8NVRAWWNMYS8888AAT8NHELRP88E8IA", "NKB888HI8BEYICU8CSSADSWCSDCEDCQB88MTYZ", "WWCU88IAJANCWHCXHAAEIPIAQBKDBIZO8888DU", "G8J8888XEFMPJWKDST88WJYDWPNLMQIP8Z8QOD", "888ST8FKENVMMHINYDE88ZQINVFLDEWLK8VQIW", "888DHALDDKYMKKXX8BQ88WRTM8FN8MMYW88PRW", "8RBKPDLDL8VZYZ88R8VGRIVEVOHK88OQY888GR", "XRYHS8YV8QH8FXG888YVYINXAP888LQLM88RVX", "SMUWO8888NSVLDSV88WNWZ88AB8WZZFQGTLYXK", "8888EX8P8KZLEO8ZE8VLUBSHQRLNXFOQPPLLIC", "8HK8MRGY8WN8ZTHYHLBQOFFQBFTTJVYLIDMREW", "8CAKHLYSZZE888Y8ILT8BCZROOCBYMZXRGKJMW", "GKAIC8ILUN888R88KD8INHWKCBDZCNRFHBQPRP", "K88X88AVRL8YUJ8NMWTRIBPNSSSDV8QMMNKHFM", "N888B88KXPYHMWP88VHHICUZTNQPX88JQM88TU", "G88HU88XUD88W88888TFOZYCR88TK888AGD88A", "EZM8KJ8V888ERST88URBT8BGL888H8DXLD88YM", "YV8888FBDFVJN8D88EC88888NB8GZIRUHIIXPT", "ML8888SMWBVSCIP88XQ888JG88888JBKVQ888S", "VJQ88QPONPBFXKMVDDU888NAGU8SCY8IT8888D"};
    int k = 8;
    int threshold = 17;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"3 54", "4 65", "5 24", "5 73", "6 14", "7 34", "8 5", "8 80", "10 49", "11 73", "13 42", "14 11", "14 62", "16 35", "17 3", "20 76", "21 27", "24 68", "28 20", "31 41", "31 77", "32 60", "39 17", "39 53", "40 44", "42 35", "43 80", "53 79", "54 40", "56 58", "57 30", "61 74", "62 8", "63 39", "68 48", "69 56", "70 82", "71 75", "72 9", "73 37"};
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<string> photo = {"ZJKYRVH0000A000000PIIF00U000X00U0U000VBQ0000", "ZA000JJ0K00R0B0000IA000B000Z00A000YO0000G000", "GV0000KUQGYEML0JCNN000U0GT00DG00000T0000O000", "SSH00I000BB000F00R0Z0P0000IHB000CC0BF0000Z00", "NPN0PUF00T0000XE0I00Y0000CN00DTA00FG0V00L000", "FJEI0A0X00MJAEET0O000W0L0R000S0X000000E0O000", "0BUP0000HS0XXTW0JG00F0JZQG000Y0T000EKKXXM0YL", "00FB0Y00Y0I00I00PVBOG00I00M0R00L000HDIBMRU0K", "Y0NRGFP000CA000000RP000MS0LI0000B000ADMMK000", "X00P0BTYDM00DI00R0B0000DS00A0000PMN0EONEW00D", "00M00Z0PCGGLH000VMPT00O0000D0R0YM0YQENLSSJ00", "R0R0S000XW00JUD0IF0Q00ZF000O0XW000XPDKXI0O00", "000COSV0W000RGOIB000UU0P0000Q000O0DXRQ0C00V0", "00O000H00H0000CPR0000000Y00U00000GSUEC0N000J", "ZW000SMQV0S000VU0E00B00U0AZTJS0FRVCJ000000NH", "UGW0OG00000P00V00Z0W0V0W00DWLE00KT00CA0R00GL", "0G0ING00000XUG00Y0B00OQ000R0LPWUCDL0NYI0VZ00", "0H00PYGWD0JTD00T00Q0000000E0HKM0Z00JBUV0000V", "00I0VZO00L00KX00F00H000QXEA0I0Z0Z000FV000000", "0000TZ00YP0000DFR00TDXG000D000I0WF00RRT00BUN", "00K00XSP00H00C0T00H00ZKD0N00DBH0I0000LS000CK", "NPQDFUI00F000T0R0CO0KWZMZ0JNYHIQT0000VKE0YXX", "O00HTCCR0CNPI000IUWXHJI00ZSEVUGOS0QLUMDOUONE", "T000CUTZ0NDJ0000A000CIO00LKCWHLEYQVY0OEEKBOY", "WJ0YVEHLVZCEJ0Z00VY0JK000HZHBDDPLRWX000QYNXI", "N0000QRJ00QFTY00AT0FYP0WC000S0Y0JRAH000WXEUA", "X00LEO0Y0WQU0CEUJF00QKDJ000RL000BOBNHXZRQVBE", "HV0SKR0L00UP0QJ0Q000V000B00SDU000JZAETFGWMY0", "0FRS0000VZU000Y00000Y000R00F000PAYYOXFEW0000", "00J0AGM00ZIK000S000PQW000U00TJ0YAZIOS000ZY00", "UR0000D00V0H00TJ00D0TC00ZZ0D000A00WDKO000B0V", "0MB000X0UM000XO0CR00A00000EJX0QV0XJAAXKXAII0", "S0000NKRBNDJBVU0UHR00CFC0HKXM0NA0QISU0000Q00", "XN0Y00KLWA0Z0TC00J0L0BDL0HJNRTO000BV000000G0", "BG00KI0QH00000K00S0RAXWYHFB0OUVERSYAD00000U0", "KX0R00K0LW0ZV0X0G000ESKKTX00D000MTYTRH00TD00", "IGY000000C0R0NWC0000W0WHO0000O0000XVTO00O000", "00000000Z000OLC0000000VONTS0W000Y0JQOKDFYH00"};
    int k = 0;
    int threshold = 42;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"3 20", "5 37", "6 50", "7 65", "9 73", "13 58", "14 14", "17 32", "23 27", "23 71", "24 40", "25 58", "29 18", "29 46", "30 3", "35 56", "37 71", "41 27", "42 18", "45 33", "47 8", "47 61", "51 21", "52 56", "60 17", "61 58", "62 26", "63 73", "64 4", "70 14", "70 40", "75 6", "78 69", "79 27", "82 38", "84 7", "85 20", "85 69"};
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<string> photo = {"111TBUZLFAMXWDY1111111Q111W11M11G1H", "1BD11Y1FB1DY1I1W111Q111MU1X1Z111N11", "T111111N11X1111Z11H1UU1V11XPH11EF11", "FN11111O11XYUO1SEPM111A111111NG1111", "OG1E11R111R1111S11Q11BJ11VW1W1111TX", "GAJN1UAPO11VI1111JN11HIF1CI1T11R11L", "DGRYQ1RW1L11W111X11SBCSIUWY11BT1MK1", "AQ1VG1WR1S1Z1I1S111SI1111BURY111111", "1111111L11F111WZF111M111111WC111DHO", "DBA1111S11G111JBXSND111PH1FI1W1D111", "QEKV11O11I1O111ZGF1111BQZCV111J1TJ1", "MLU1T1K1D111TTNZO1MCE111WZB11R1SUE1", "11H1W1J1TX111111L11PFKKIV1B1111LI11", "L1111QS1JYJ11VEF111111VWD111K11H1SP", "L1111F1F1K1111OE1111Y1GFZK111CKM111", "LF111L1111C1K111G111UU11WTTY1N1R11X", "EW1R1X11111N11ODW1FPIAW111C1T1T1111", "WJGRV11111G1HQ11E11YTP11OS1111S1J1E", "QLEW1P111V1M1111H11ZKBS1E11F1V11SW1", "QEX11P11F11P1111XCJLH1YNS1M1N1UN111", "N11111GY1W11J1111IGRN1TQEE11E11Q111", "11111L1G111XOB11ZMRWX11TAC111CG1111", "1EHSZ111E1ZZ11J1JJIXT11XPNJI1P1RV1T", "11E11111NNT111OJZEOQ11OPEWUZAA1DERC", "11CG11FB1111111W1UOTSLXRJDUTP11111E", "11LY111OCS1111P11CQ1L1111I1VD111111", "1N1W1SPDW1CMYRPJ1K11111GD11C1111YLP", "1F11C1P11TVY111I11KBQHJ11111AX1E111", "B1YAT1111TNV1KT11111U111KSNXLSQ1111", "G1Z1I111111U11E11UFGD1LV1111QOUK111", "Y1111C11111A1VW111HC1S111111FH1DR11", "EX1THM11UHRDM1SD11S111EH11CHYE1A1KO", "1E1WL111R11E11Y1IVX11LAPES1ZSV111U1", "11SN1MOH111Q1111D11111ZR1B1111E1R11", "11111FAP111DR111Y11F1UF1111111SM111", "1111X11GF111J11AQHYEA1E111KUI1T1111", "YE11F11F11EGB1E1111TX11M1M1N1D11111", "11TJ11P111111A1111111K11JH1111CA111", "11111C1S1UAIZTWTZ11UO1111K1111UI111", "11111T11WHSGGKFOQF11L1111X111CMG11S"};
    int k = 1;
    int threshold = 57;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5 28", "5 69", "6 46", "7 19", "7 75", "8 7", "11 48", "16 34", "16 60", "20 71", "23 48", "25 27", "29 9", "29 40", "35 56", "35 76", "38 3", "38 30", "45 19", "52 7", "53 69", "56 25", "63 50", "64 6", "65 72"};
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<string> photo = {"77M77777Q77777SQFI7777H77TUR77", "7M777777J77WBM77YDLS7777I77T77", "77JP777A77L7T7F7L77C77L7J77777", "XW77M7I77E77T7S7777M7IA77R777F", "7777G7I7G77JIQ7CQ777JHD7R7NDS7", "HTW77Z77X77PN777K777F777R77777", "77H77Q777LWN77777U77KNDJ7COV77", "777P7I7UH7XDAQ777E77ZM7Y7777E7", "777F77K77C7ANEGP7W777T77D7GO77", "7777VR7777777Z77UM7IRP77S7Q777", "ZQ77M77777PYH77777UP77S77OFWM7", "U7FVOR77777C77777R7777N777U77E", "7777BY7QBSDR7GXWV77C7O77NS7777", "777YURA7Y7G7K777KM7CKKOE7RMO77", "77FWPD77C777777E77M7L7I77FWV77", "77S777SM7777BLA77J77777777F7H7", "U77K777AW777U77U7R777G7777P7R7", "O77Z7777GW7Q7777HU7HMJAKCLN77C", "UFFH7N777XNY7SA777B77IG7777G77", "77KUDVEFGBJ7K77XO7A7B777777N77", "S777ZC7UQS7XWL777ED77G7G777B77", "77E7777VI77EQ7EV7P7W7M777Q77M7", "H77777LRCT7Y77N7P77UKIJZTS7X7R", "OTUN77P7777W777777QC777X777Z7T", "INIQ7Q7RAH7V77V77V7MCC77XKF777", "VRVDM777O77BKQF7L7O7PJ777P777L", "KF7CW7777KRHEZEK77C7CV7EM77777", "DK77Y77777MU77E777R777ZL77S777", "B7Q7A7777N77777E77Q777WFEWA777", "I7777KT777K77QV777ZGKG77777K7A", "M7PV777MHE777WZ77T7YIW7777AB7P", "OI7O7E7K77B7CX777H777P7777C7S7", "7777JSJD7N7PHHFX7P777GW7PS7777", "V777VC7M77777R77LY7TU77X7P7TD7", "777A777777LYQ777Y777AC77V7J77O", "GG77GPF7777ATS7C7IWJV7SQI77777", "VJZ7L77MK77OZ7ZT7YOSI7L7GP777L", "ZG7U777QBZF7X7777YFW77G777V777", "J77E77I7EAR77H77PTKY77777YVM7R", "R77IWE77Q77J7T7VGBDE7X7777IJ7Y", "777777E777CYSTKKTVPRTG777PC7KI", "777777I7SYJ77YTG777T77U7P77YWZ", "KRXCEJYE77FO777777GZA77LT7777Q", "77F7QFY77777LL7T77Z77M77U7YDP7", "7F777ZA77777XQORY7Y777A7S7J777", "S777BG7777777U7EORU777VFQSI777", "77777SKM7CQNX777CF777C77UL7YI7", "F77D7L77Y7O777777DN7K77MOB777J", "KS7LR77777UQ777HR77GC77PR77777", "AOV777777M7777K777777C777AIL77"};
    int k = 7;
    int threshold = 59;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"4 29", "5 92", "6 79", "7 44", "8 58", "10 5", "15 54", "17 68", "18 21", "19 89", "20 8", "24 31", "27 95", "30 86", "31 47", "32 58", "35 11", "43 6", "44 31", "46 77", "49 42", "54 53", "55 15", "55 74"};
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<string> photo = {"33333U3333333ERIYARE3333333333WHQ333333", "333M3W333333GYGD333H33333Z333QZ33QN3333", "33333VA3333KLPFD333W3333D3WQYL3P3N3P333", "333333RZZS3TA3333333X33ET333H33S333LT33", "V3IT33R333AEI3H3HFR3G3O3333333R333V33OT", "3ZMW3DTN33EU3G33PKMZ3Z3N3C3333K333D3333", "3N33DZV3AT333BKU33333333P333U3VK33H33UT", "GJT3KIT33MY33C3NSP33W3SKW3DPZK3333X3333", "3TL3WHJS3C333Q3333S333H33C33A3R33D333IL", "333333X333AG3333QNXGKV333333Y3O333TSO3M", "333C3UN3O33P3333D33333F3333R333W3K3333S", "QZ333KWO333V3F3W33MHTM3GTFGDE3KYL3V333F", "V3BQP3AYIAM3MC3C33W3NE33333O333L3J33333", "3333333R33333AW33CO33ZA333N33B333JHG33L", "333333U3333TUVHHT333T333333DHMA3W33I3SE", "3333UF33333F3Q3333333UA3333Q33Q3YRR3M33", "333Y3333333V3E3IL3333K3H3SQQ3FADS333333", "333IBOF33LUC3N3F333IY333V33333VRZZ33333", "V3HMJM33R33333PB333P33333W3333OK3NI3333", "SI3333XUTWV3333DBJBL333333W33AY333ETOQS", "K3333O3333B3JIAONJ3KE33G333ICV3S33K333X", "33Y33F3333H3P3HV33333DL3Z333T33333L3333", "333333A333BRN33XDA3333J33R333D33333B333", "QZ33KI333T33333NZ3333CBY3CLDSUED33AP3V3", "3P3N3L33S33A3EZ33F33333F3333W333Y3N33D3", "33X33V333IR3O3T3H3IVNMP3T33S33333ZHVVM3", "3X33WWU3M333333W3333R333J33F3CB3333L3OG", "3333333P3V33333Y3333UBT33EL333333DI33C3", "B333RTE333E3333H3333333Y33INCFP3NB3J33S", "Y333N333333O333FTU33WWBVP33H3G3G3333333", "33ZR33333333I3U333XJ3CG3V33US333SM33D3P", "J3T3S333QC33WHKGJ33333M3E3J3333333S33KJ", "3M3J3HYD33XW33MENX3UKN333F33333S3Q33P3G", "333W333R3RB333WVLK333D333YKL3H3X3MOY33G", "3OLB3KZ33Y3333Y3XI33GK33K3Y3C3N3K33T333", "Q3333F33DO33DG333AJPY33Y333BDK33333A333", "333333J333GXC33333333SX3D33333Z33333UT3", "33333V33333B3333333333Z33Q3S3O33333333R"};
    int k = 3;
    int threshold = 70;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"6 6", "6 18", "6 44", "7 31", "7 56", "7 70", "16 47", "16 59", "17 31", "19 4", "24 56", "28 18", "33 7", "34 72", "35 31", "39 45", "39 55", "48 28", "49 39", "50 5", "54 10", "60 63", "62 53", "64 43", "65 12", "68 72", "71 59", "72 34"};
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<string> photo = {"NMOPHWQGOCK2XVLVKPACGTHMFLMLYQWHILEPGXHS22222222", "MJLSLQVJIB222BXBLSIPUDLRONXHEVWNITKYPPUQL22V222F", "OEQOZNFEDJ2DBCPLQFNASMYLICZYCBLILNAVJKTFA22Y22MP", "QS22JXPIBO2IHNKHPSZVJARHXWGRASLEHZBSMTORUGISAXGV", "ZJ22WHDXDCPHXWLABYZCUCFUQTASQMNHRLQOQZSZDTRCVZHQ", "22222ETFBGHXPDTCZQMHSTMSVHJYPVRDFFNEDTSGJFEACGTQ", "YE22TYXYNVOQLVVEABULQRDWQNBUTULRVPZYGKAEAFRFBAZF", "222VMJOGERMEDKOTGVOOCQQUDKHGROUICTJYHRFWHHBPBQVO", "T2222PHOMKQKJEEISOAKKJNCPPVRRXZBAUNGFPXUKNFSOQI2", "T2UCKBATGJBVJKOLIPZJLYIHKUSZYOSWCRLLFGDINNEKF222", "RVXIQVZVAF2PHVHSMKVHQOQMSHIHIXIGFONWIINHFPYRVC2Z", "MSUZLMBE2S22EKQYPCDLFBRMYQVWPRTAJIRKA2222DPXHQPY", "OHBTSSA2222DAEWFVIBGMEIPTEQFNCOYJJGC222222HYESJB", "GEAUOM22222OOCTNTCZZANKCQURPYRLFSODLWF222KOOUMDR", "MGGRYF222222ZUVKKIOXWYKXWDJEZCBNQLXWRTQ2HFPPRZSK", "SUCPLG2VLVYRYAGTOPCTQREMRVXEAKGSVQXFRSLQGALFZQKT", "RFTUMLIDXGOZRDQDNHQRDTATRTXSWLZVERITXUSKFCMCLQTR", "XGBTRFSACYBYUASNMVNZCUCTRWFPGNEVWRTHHVSMQTONZVDK", "M2HFTXBXXYOMVQVAMOXYXDXKTCWDBXYJUVPHGCI222YFYPFQ", "C2W22LPKWOEEXAXGYAIXEYDBZACLYOYSHGGZUAOJ2NSOYDLB", "P22222CXYTWM2ARPXFXCGYMZJZIGBCFIHSRACAZVDZAWPYWE", "J22222ZXKUFX22222GCLDMNPOZXPHQFPTDBLRQTQDYDLXWJV", "MMI2JEOLRYRQIWTBMUMTXGVWZZNNAQMGKSEJWZQVTEZDTPWD", "SBESIGWEQYLOJDZPGHXXKKQGFAKBBY222CNVPIFGRDPHJMY2", "THOHOUSMBZQAHBOQAELESLATVPRQPQI2222FGCYCRFXCXO22", "UUICVDKAYXCNCLZFZSWRGVTPFCHHQRNGF2222RVSATVYZC22", "TTRFXUWMLPRRBBZKFCMMYXWBIZFPPJGD2222HXWJSOCPO22Y", "ZEGJGZQPAZOREFCEYUWAMIIZUMPKSL2WQ22YIL2MBDBRKZUL", "ROTBQBFJBPPXYWBXLDB22BPBKMWGOY222EDNG22CSUURBNWI", "22AOWYDWJUMCKIKZFNNN222RGKQLJRUS2GFV22222RMOHFQE", "2IRPKFHNKWQIAENYUQT222DVLRNZWAYC2QVFB22ELQUYUWXL", "22GYKJHXPQXHBLYLWL222BIRDCCYHZDPVPZWRO2QTNFAJFFG", "222TQZCFNIHKIZDITT22222PKHNRAFKZZNMGZKYFFCBCWRQM", "222EOFCAANRMWUKUXX2SQM2AIKNZMWUMZIUVYYULOBFJE2XG", "22FZFVJFELPSXIGNB2OQNH2OEELOZVXALSYJJETHKTC2222O", "WCCVJOTZYEZQBRM222222VELKAJRLTRPPLLQKNMRETAEBKQR", "WXBKAZCBMUXOAGE222QQCWAXSFWUPRSKPMKMWZKMJMRGZR2X", "XB22FOUNLOHBXL22S2KVDINDVFPJIWEPJOMJBUVZEYWKS22P", "XP22WEHZPKVSKB2EE2QOLQUGVXRW22SZLCIGFLHMQDPZBX2J", "B222QUNPXUGPEOPZPCYVSSASJ22K2WRCTPCWCUSCVMTBWXQJ", "RYM2Y2AFY22IBXWHIBIXJTTSVL222PDWBQEAUMDZEBCTTQDA", "ZMB222UVM22CSEIDTKYSYDPKBQ2X2TNMVNJBQXHMBTVPYBDL", "Y222222HFN22VZQBERBUTSDCNSBMTZVLOBQVYAETSXSVWHVW", "C2SOGADKQT22HOXVSZDGILNWPEZNMCKQLZFFZYDVFTQUTPGY", "UUNFCWFXOYT2UXNRNWWZYRXEDWQLFRVQMLRKWYXOXTQDGXQR", "NCSWMKSDEEQNIAASARQLZGKBPNVJDSKRDSCHULHNXRIPVKFQ"};
    int k = 2;
    int threshold = 46;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"3 64", "5 13", "7 41", "8 81", "18 26", "35 73", "41 63", "67 51", "78 26", "88 3"};
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    vector<string> photo = {"D0000D0P00000FM000T0U0000Y00000XX00000000CZG", "0MW0S000W00JB0000UA0S00000TJAH000T0000000WOS", "000G00000BE0000000M00AW00000V0000UO000000ZMH", "00W00000O000000CWLC0000N00KZS000000U000ZS000", "0MI00000Q000CX0T00000000UUKW0K0000V00QP0000U", "000C0H000I0H0YA0W00000FCT000INB00I0VR0CV00NF", "0WUAQ0M00MLJ0EH00PUQF00R000MB00AB000S00X000N", "0XOJJ00QY0000P0P0H0EH0OL00A0000XEY0000OO00XJ", "0W0000HHV0000000UJ00KI0IM00EG00NIBZ00ZWLW00R", "00A00000C0NP0HGS000B000000000Q000V00000QLWBP", "00ZC00CIFP0D0LV00000F0W00R0F0UEDG0V000I0R00K", "NB00L0S00U0NSVIQ00000FQ0VEKG0W00P00LC0M0F00L", "0P00I0N00MY0BJOJBF0000EIM00JS00000MDB0L0V000", "X0000M00000000QMI0N0OX00000L0AV000QLUX0A00RG", "0G0000L000BP000ZD00LPFP00NB0000TSRO00000Y000", "G000000JIAYD00D0D00UNVN00H000OZL000HSX000ZJQ", "B00A0XJNX00KKE00B0000CM0V0000000C000K0000000", "0XO0ML000000I00KBO00U0ZFH000W0XY0000WX0IAD00", "00D000VP000Q0XV0000R00K0XIGE0YV0000000Q000L0", "00G0000S00000TL0000E0000W000000S00000R000Q00", "000F0000Z000000SZA0Y000IVC000000TMPS0J00KZ00", "000H000Q0N0MI000EKR000P0Z0E00LYC0C0G0PD000X0", "00Y000G000A0ONBO000ZNN00M00OI000000SZJX000N0", "00B000T00M00000RXT000AJ0R00P0M000000DYLSB0HP", "000RA0T00Y0000YC00N0000B000C0C0000H000WQ0T00", "000E0MW000P00V0G00Z000AW00O000S00DN0WHOL0000", "0WV000OZ0DF0P0Q0Q00L0SZ0K00HMRDWD00EGO00I000", "L00KSD000SQ0N0000000Y0000H0W0000T00L000V0000", "00N000IRW00D0XVAL000F0000G0M000H00M00000E000", "UR00I0P000000Z000Y0JT00000D0000B000CR00K000O", "0E000N000000P000Q0DMDO00000UDIFP0000T00P00Q0", "0C00J000XU00A0X0H0CPQ0AQ0K0RYPT0QEFA0000TE00", "00K0H00K00J0R00Y0V00J000D0Q0YY000000O00OYZB0", "00EUC0L00GLRV00T000LC00MW000WTZ00000H0P0TK00", "00000SA000E000J00PY00K0X00000XG00000H0H00000", "000N000U000TZG00000MR00L0Y0QB00B0000XZX0WVRF", "000U0XJ000000L0000000L00MWR00000R0HQKCRG0000"};
    int k = 0;
    int threshold = 74;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"3 44", "7 67", "8 28", "11 42", "12 7", "18 62", "21 27", "22 38", "27 6", "33 54", "35 69", "36 34", "37 21", "40 8", "48 58", "49 17", "57 31", "61 6", "66 68", "67 47", "69 37", "72 18", "74 5", "75 61", "79 36", "84 55"};
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    vector<string> photo = {"AIXAKULQKFDTXCRNWQZ5GWHGPSKJUXLHSHEVNPQ5MROV55", "NLJZTCAEHC5IJABLXHESHVLAJX5ZKMZVWJYYATW55AV555", "TPXA5STUZZSBCKFBHLC5FFEWCD5KGQQFAA5YW5555Y5555", "LOGH55ZDSJEPYDYFDMT5KSDYE55WPFWJIZ55VHE5WAPQI5", "WJWCNLNISCYWGDXCJ5555CFUQW555UHMPA555VX55FRBUO", "GS5I5E5RYFBNR55QD5555BGTJ5YZ5CFZXTNA5NPI5YNYVB", "PNOY555DOBKFIA55EH55GRNCPUGGICTW5555UWFGGXKWAJ", "LALN5555RQGPR5555IBWRGDLFAQJVVG5P5TUDZMYDRMJ5E", "55LFG55HOMIRETTAYRGFIOXYMMYAZC555FZSTJTWUAWLZW", "5ENPWIVUIUMYGXTVNUVND5DGRXB555XKZOXDIQOWGT5GMF", "55JPEUFFRYQXAYJZMLXUFDURVON55AGQH5UHSWNIPTRVXI", "55LYSJLSK55T5VDUVCNXPVUEXWUA55XHOBSPHNBZFYGWVR", "BHPBDYKPK555HMCOXHDWONAMJHS5SO55YVZNTOKGBWRDAA", "QM5MVLDDAY5ILA5PWTYLCAAJWZ555GN55YHNRDISAAOLYM", "AFWFJHGJYU5UTH5LPSFRKZKBDS5LG5555DNOAYTINRSPTA", "UCTJDVQDNQRPZU55UVECOQDKFMUPZ5L55YGPUCPGAGJPOO", "5RRWYNBUUDPXFB55QTFZRAPDKVTJ5ILAOGWVGZCFLV5HNG", "TYEMDMKJENYTAACUP5PLIJDZJZ55YQDTIDKAUCOQYW5RQY", "NJA5GIZAI5UQBOYZZQONI5JASS55GZJQJLVWFJDLPRXMMX", "UIBI5AQXPBHIOTRGQVMQBSAVX55EESCDSQVNRIJBKDKYHV", "UPA55555SXDQAYHXMKPYUVGTCB5HCZHXXFPET5FBBLSXRC", "5555O5DTDYSWABUAQWEQELYBEY55C5R555RIUMEKYXTCKV", "VBTN5N5U5MKNMUSPAFZDVG5IFL5OS5555KDQG55DBSEQOD", "QNZY55555EURHMDLALBQ5D5TMKWVKAM5AEGS55UTASSBAP", "NAOKCI5VLMYWBTVKGOEV555O55DYVGXANJEH555MKFRQFV", "T555CYUJEQGDSVKHBUU55D5W5TB55KHHZKQM55X5DUZBUA", "Q5555TDKEKRXJUDWBELD5I5Q555G5BJCOWGY5CXWFBLWAJ", "OJ5DURTZOCZPHDAMYEUFONWU5XRZYCNTEQMIRBYMBDVCDS", "MY5AAXBNXYNTGTD5JYWABETKH555IIYM5CVMXRYOWM5SWI", "CNA5Z5555KCMDYKWUEG5RRMLW555IZCGICRWNQCPJE5IBS", "D555Z5I55GH5VHILKBL5NTWUYKWPAAPIU555KVHC55MWUZ", "OYD5X55TS5555EWBKVR5SIJELTUHBOUCPFBT5R5555TLZZ", "SQ5D5N5F555IATXTST55DRVNELQPTB555YXB5E5W555PNU", "MXTK5K5WK5NTUSHESLRJRSVJUFVJSPKD5XXE5EBORCRIWV", "GRHM55KIOJYEKKTSYULRBZCRNXNKTVD555M555UT5HLSNO"};
    int k = 5;
    int threshold = 16;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"2 20", "5 61", "6 54", "8 41", "10 67", "12 14", "13 47", "14 63", "21 26", "21 64", "30 13", "30 30", "38 9", "38 62", "42 49", "51 52", "53 40", "53 58", "54 7", "55 27", "57 21", "62 28", "63 16", "63 45", "64 67", "68 14", "71 8", "73 66", "75 49", "78 6", "81 63", "88 4"};
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    vector<string> photo = {"E1X111111F1ST11S1111111T1111S111TE111111N1111A11", "11S111TDO11LZL11O11111V111111A1111OS111A11111L11", "M1O1ZK111111Z111V1111Q1W11111R111111W11E11111C11", "H11R1SNQ11HL1W111Y11QQ11QIMTR11B11D1P1L11E111X11", "11111GGF1E111R1K11AI1Q111111SY1CJ1QP111GC1BBF111", "111Q11S1J1PV11X1UARF1D11N111D1CRWZ111EQJYH111111", "RUIGPR111U111G11WJ111K111P11G11JYP11P111T1111111", "1111J11111VO1O1S1BG11Y1111BR11R1111OSZ111KI11GNL", "1111H1111G1FVV11W11111A1MO111PQILIQ1111111EKYAT1", "11111O111S111111W1OZ11RC11O1S11Q11BB11111KA11111", "11Y11X11F1LZTV111W111U111H1R1Y1L11I1WV1X111F1111", "P1DE1G11K1MC11B1L111X1111Q11111GG11L11TN11OZ111N", "11OH1V11G11111RQBKH1D1111P11E1F1111G111L1EQKL11H", "111GW11K11111111V1D1P1E1S11111LEGEC11111OA111R1T", "VWZE11K1O1XV1YREL11S1E1S1Z111J11111H111Y11Y111P1", "111EWQO11G11K11G1G111O1GOPX11HT11MTZABQO11D111TJ", "1111BTJ11VOOLFW11K11K1111Y1CAWB11SJD111B111N1111", "111L1D111111J11111GBT11IK111A11X1LL1111SX111W111", "11ROE1RKM111V11U11U11111X111F11ZT11111LOM1111V11", "G11L1H1Z1111T1111SSCI111W11Y1111KW1R1H1G1Q1UFP1X", "1UM1111G1111WFU11ZFSI1111S1H111X11X11Z11J1A11AP1", "111111UUF11K11ESD11PO11C11EU11E1K11RL11UQO11W111", "111V1CN1MG1J1W1OU1E11K1MFFRJ1X1E1E11BT11C1111W11", "11W1H111QGJ11V1J111O11T1F1IAR11111XZ1111NL1111D1", "11Z1Y1111J1MRZ111111E111Z1111111PWAH11GUBHA111KH", "1B11L111L11O111Q11C11Q11S1CZ1HLX1Y11O11LM1O11111", "D1W1F111J111D1FJQH1SZ1111T11HU1JA1Z1C11F11B1111C", "1111U1ESJ111TIVQ1U111K11L1111G1111Z11NX1111Z1O1T", "GE1O1RCVA11111WU1111BZ1WMS1XV1111S111KA11111FSLQ", "Q1S1E1JZ11GCKD111111W1Z1F111GL1111M1X11C11DK1EAJ", "M1111B1111HRB111111A11F1JO1P1YXZEG111A1111KY11ED", "BK11G1YKR1XIT1111QRXF111T1W11D111V1111DCCIIRH111", "T111C111I11NAJQ1N11U1G11FN11E1ZEH1E11G11111H1J11", "K11V11111REA1S1A111F1LU1B1V111Z1111G11Y1111D1H11", "R1A111NCOFHL11111O1FI1KSCY1P1X1111UK1LQ111ER11V1", "Y1RI1R1111P111H1A1AMA11111UA11H1RH11V1Q11111L1D1", "MTKY1C11111PH11S1111T11N1W1W11Y1PB11C1C11R11JH11", "1YFUMMPE1F11H11X111AFN1HE111XNTK11MI11U1XWHJ11U1", "1111Y1K1G1F1NHH11QQKF1Y1N1111P11111B111G1BT111R1", "1111111E11C1VX111VZ11111Z111B111111I1111111A111B", "S11111E1111Z1O11CB11111Y11111T11111V1111A1P11111"};
    int k = 1;
    int threshold = 72;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5 21", "7 45", "7 78", "14 20", "18 37", "20 57", "24 25", "30 70", "31 36", "33 48", "34 59", "39 4", "39 18", "45 37", "50 11", "56 25", "64 78", "65 5", "71 8", "72 60", "78 19", "79 76", "81 56", "82 70", "84 4", "89 8", "89 48", "90 33"};
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    vector<string> photo = {"8888AQNRI888I8V8888888888F8IGZM88U88888888", "88888WBZ8888O88TWYB88888N88GQTH8VR88CT8888", "8888CR88888V888X8BS88P88T88F88S888FS88A888", "88LD88VFG8L8CXC8O8SU8CD8FS888RA888O8C88M88", "88L888A888A8T888S8JVA8G8UTX88OKZK8P8K88W8J", "8YAJOUR888R88T888888K88T88CP8ZQQGKD8888L88", "Q88888AAU8Q88A8XCK8R888888LA8IMQKWM888G8QU", "KA888G888X888L88JIE8888888Q8P8N8I88N8T888D", "Z8XEB8FZ8J888MBI8IS88YWCG8I888E888AV8Q8888", "888888Z8BLQ8GJ88888OG8888J88WM88MC88M8888H", "AG88L888R8ETXD888TE888888S888M8P8888A88888", "8F8U8DPJP888QHP8M8MJ888TEGN88P8G888B88SE88", "88LI88PPY888R8C8L888Q88BPNVE8I8A8888AJH8YN", "88XTF8CF888888I8JF888D8UZHCSPGX8BUB88888IK", "88Q8888KFQU8888IN8888M8ZMDV88T88888I88I8OX", "88DKG8GHG8888NOLNC88DVWXHS888K888SMQ8VNL8O", "TSWL888RAOVTP8AY88TPNG8Q8R8U8L8G8Q88GIB88X", "88I88888M888U8888OKN88D888SW8YA8Y888888888", "888HQ88T888SBJ88UOZ8888888P8TNFZHBXB8G8QWU", "LW8N8D88PE88H8IYY88QPL8J8KC888K8YJ88ZPCSPX", "88V88HFR88LLH8888F8888G88E888RV88J88QBXPHI", "88888M8888KG8D8JMQR88JC8UO88Z8MD888888A8PS", "88888Z888L888N888N8U8K8BFYZB88XG888UBV8888", "ZAU88V888D8ECU8UBI88KI888V88J888XG8MB888H8", "888XL888J88L88G8LC88K888T888D88RXLU8DNW888", "8888V888C8N88888TW88R888P8OH8O8888L888B88J", "8888K8Y88U8XF8CM88C8Y88OLD8S8HATVG8888F88E", "8888PP8HFB888IQQL88O8QFCTJ88888VN8888AQZOP", "8888KB88L8I88X888X888888GW88EUT8N8888ZI888", "XUBH88Z8888Q88N888D88TQ8MBN888Z88F88YMC88I", "TQE888H888I888A88F888EAPSHH8A8T888R88VYO8F", "88SS88V8888T8F888YRGGYGMJDG88PGMS88XRZQV8G", "888G8OW888VGZ888EW8HXQ88PISCLPR88D888MHA8Y", "T88WURJ8A8ONXICUOJ888Z888DWQITJ88G88I8J8XG", "88V8GZPSB8EA8UVBPJ888888LLMR88ZE88X8T88888", "88D8ZEMABNZP888J88888888JQH88G888M888DW888", "LW888TWNIA88888MURP8PPMD8N888CQZ8CQ8Y8M88O", "888T888MKWV88888I88V8D888R88DA88888A8Z8TA8", "8V888N8XBPFI8888K88888X888888TX8RZO8888888", "88888SCSQJMWU888U888888V88888NMK888888888M"};
    int k = 8;
    int threshold = 64;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"4 53", "5 6", "5 43", "7 74", "11 31", "15 47", "17 62", "18 7", "23 26", "26 74", "33 11", "40 5", "40 57", "41 69", "44 24", "45 13", "45 38", "52 74", "57 57", "65 71", "68 65", "69 43", "71 55", "72 25", "74 11", "74 77", "75 34", "76 6", "78 18", "79 48"};
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    vector<string> photo = {"ZOFSOICPCXLESSEAFTNRO999999ZYUNYXQJDRIQLGGJ9N", "JFCEYCPYQMNCSPMKUITNQ9E99999CXRBQYJFXJFZ99T9K", "XTYEGZBZEEPJQTIAPCZGKMY9MHJ99SLITPFZVLWU99999", "IGUUFOILWIQIXFMGDQCVJDM99OR9OUXGSIASUDM9999L9", "NJSPZZXAJNWPBQLEWCCSYKZDTZBYZPXMTGNUJASP9J9CG", "JYQCQWBYMGUIVERVVEBYZKDLCZRXXBPVUQFRIIQQ9W9TE", "BRHHNXIMRGIJQCRVGRIBPWTEYLLPFWBTWADXZRPUC99DA", "DJOOONAQEQJYGWOTBAKSGGQJQASJQQWJACIMBDGUW9AIX", "TPZVEWOSSLOKZDSFGSVKXDVGAKWHGRGUTJUNNZTYMVEYZ", "KNYBSJIDGKAALCDATLIQAPXPMWGTTKLELAJLEMIXOAYAD", "OKFYCICZLCECOPBAQXJWZMLNTWEWGDI99QRAJMGGPFFKI", "TBBYBQSDFUXXKDMFCGLTYOYQOABDMXG99OVBDXVT9NDQY", "UAULGLWSDXEPMHUVAGMTVEJNKSJVLS999WGCFUC999GMS", "MRCQBYMXPRHVOCYKCXTTVFYQOUCEKHOF9IEXTT9999AFZ", "RPCVBKBRRXTCTVLVFSTZJAPOPJTLXBHW99WYDZG999JSB", "BFEIWUSGUGWVLXHRCVPXURBNWQLTXBCJ9BPS9999HDWCJ", "XZIKJUANNAZFFYYIRQIZROZRYRQBQSTPSHALO9999NIQO", "SRWOUXMIGSYYTBCGQVVWQQLFACFWNLJZKEJNPRJ99QQSI", "TNBHYQBZJAAMMPYLNYTQPNGYJKYWLYBWXIGGRQK99MOIG", "AUJXOGFQQGTFBRZXOUAHXZFMVYOXUBVVQPUQVGTVOJIFS", "OSB99PWRTGKSKVAHUBVJCIICDZLTTTGIPJXRHFWAARJTI", "FKW9TXNEWJZFDQXWZTRBCPAFGREBIUIJMLRBBONPSWGML", "KTT9N9GNIWCLWLVRTWGUXYQLMDVYGVGLEHYWZBKODVZWY", "UNY9999ZCXACDCTKACRRKVTJTBQLPDQMIADGCZXTPVJCU", "9C999YXHATBRQDIRCPESSJECPRWYOAVZKSUAPRMRSATGE", "9999MNOCTCTIOJWTOHYOJOUOMGPPYCCAPUNVTGGGOSOGL", "9E99TEOBQPQXKPEYZXPODZBYWYYBZZMMNKTMFFNZPXWSW", "9R99MRQZWTNJQBNRCDTUAOSGWKALBKMGERANBZLMVM9I9", "YCCERFDLUDFEIQWJELZGTHYMFBVSEKNERUXSLEMYB9999", "OSTQEPBLGPWFVXBGGAWLFYOPCZZDWSGEXISTIVISUERF9", "DYSWFDXWUKPNHADSDZQRJESPTDVLQUNUYCZQSANTQCVY9", "FEHYWKWTCBJRFSQBKQFUWMMCAPEHLOVRPXOAPIXJHQTC9", "ROGRTLZIBUBTBIPDGFNSCYVFWBBXAGOJGLCEPLHOVF999", "NDINBGENCKVPDSKIGEBLLZVGRZDVOHRKVNUAOMOCXH9M9", "PQALXLVVZYPHDQMDERNOZAQBUAWBBNUJRIRCZVRQUZGXM", "WSLNUUZYZDCZFDZKMCEWJKBRHVLKWFTTUNRNMXXECGHXD", "LINTOXRBPGATGHVIYJAVXKWCXIGPIQXDSGLXIVGMRDPUR", "XQTSXUAEFXQ9MILPXCSKWVLAFOJBJXUKLNATBJCGIOQIK", "NXLCPUJJMSQ999OJOMWCOBOEMCNUUHOKZPVBKMCRCXACF", "AMFJZODPTH99999WYGOCZLLVXWCOIAMTHRXLSEOJLHQBT", "JNDRYASVWQN99BMJCTAPOYAMHFIIQKQEEVFXVHEZGYKPH", "ZZPXABUNBML99JUZMBWTWSZUTBDXLMOGRBPDLINFKGBQD", "DPSQEVQIVDS9LUVEGDNQZJBIERPLXJFLILTEBVQEXHFOY", "YBSKCFUKXEKWIHZVZHRUIWUMOBURYDYLWLXOQTSBQWTIT", "QGMWGHHVKLGSNXLIOWAQOEKEPHHIYCJKLJSGXEROEUFJD", "MNCSLAUUIBHEOLGCHNPCDEQRROANIFQABWWNHPYOINJSI", "PJTAAKYOLLWWMZWTXFVFAZUNSFXOWPZRDGTZWYNWOUNZI"};
    int k = 9;
    int threshold = 68;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"7 48", "50 4", "78 30", "84 8"};
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    vector<string> photo = {"DMVNVEUGVDYDJZTHPKOBYCL88888TIRROVWMOQKSOS", "XEJFTHKKTIKHKUQNQGUM888888O8KVNVEEMUULOFXW", "BYJGFAURLWVFYEERC888UV88888Q88AUKINNNA888Q", "NIRMRBDOEVVAQUW888888Q888888M88LMCPM888888", "PZGCLBFYSQIC88TMZ88J8U8JXK8P88888BSV888888", "NVLDZHDKOGFG88B8I8URCZ8JRDP888N88YJID8888D", "OOKYBNUUGBIHR8888MWKS8BRDB8888JWANWOI88I8I", "BCNFNLLCJOHD88M8SUFE88PKMCCQ8EYVUIIW88MJGU", "SWVV888TZRLIMAKHDBKJS888UNHIMGYBWTLOVCBMLJ", "KGCY8888AUJQXNG8QCY888888888VZXYYXZZSZTFGW", "GX8888ZWPBKKG8P88T888L8ST88BJTJUHRXGEQGMTP", "ZMI8888CSERHA8T888TT8B8TB8HTDNKYKRIYPQBUPD", "HZJFL888SXAA88LY8888JJ8BUAN8888XVFUSNTE888", "RYLAYI8LJE888888W8R8EBOXNV8D88FEFIKYEWMJ88", "MIMMHOWBZM8D888X88U8YUJAF8888JVZHRSXTPPOF8", "VIYXNACTJARI888G88NJJABIAJF88NSJAIDQSOSKT8", "RLBHTJTULIUSFBKG8REVBAHBWSV88888VVETVNMXP8", "ENDAULGDPCZSJW8888UOIEAWQ88888GNUZUMXSLTG8", "OMYFLXDRRGQVIF8HGUEHUYXLKCYS8JHOKSRSAYWM88", "FXSNTKYZRYNSRFJEVUIHKIPDH888TEUKNBHNGSTBBV", "XXRYFYUUVGHOXQVAFXFAVGPFQ8888PGBEGTJXZLELG", "SALATXHRYFMNDJFZSFWFZARHX8888F88888UMQDXLP", "GGZFXZWTNVOVDOLBSOEKFCYGYT8CBNU8E888FMZTUN", "LJESJKXVSEJEDZLTNFLUBOKMGH8HLBXX888888EWDJ", "ETUVKZUDYGPUOJRTGOJZHDSLNODWMXQQY888888NZP", "PRXAXQZIGCCTUDOVBGMUROLROKEDFOVOCDE88BH8BJ", "SKZBBBDSRBNQTVQDNTPMDKWWKCWFAUFVBGL88UZ8RU", "YSGZURHZUXEKBSWNEQUIQVUQPZONJKIIOEUPSL8888", "DZWPDLOGWBWODKZGJXCYWMEMZZMQKRUCAFJYY8888L", "KORMNDTRSLBUYJWBZFNJLF8YGBBYQPNY8PWLAGZGFU", "EZGSJQVALMELXXNDNHYRNX88HJTQAVJZ88MZSQP8QJ", "YMVDMLIUIBLTPQKJGIYIG888X8OXCGXV8GYUXZ88EI", "QWJGDRYQTEAJXOVTGMYL8888J8YBVV8888DEJU88IA", "TKNMKMHNEKGQSFGDXVUXP8Z888PJCQC88888G888MH", "EWEKSWPIURWSICHOXFQWOYIZA8PHDVHN8888U88YW8", "SJBCXEELFHPKYYRIHQYLAUOBTASBWVT88NZ88J88Z8", "LYAPQGBIOJLVMHNPZIXQJERCKJCKCQUX8XECFD8888", "FASSZIAMZMCWBJWCKBWEMPLNZURD8L8NNABBWO8888", "KOZFUBMZKNYEJFUTUNKIXPRQUWJ88L8PHGOMODN8DA", "LQQVADSZHNGWOQQCIHRIWXHHGCJ8YT88KDLEWGBONH", "WVZUCBZATGWHGMPMMXDXSVBNJZD8888UBIXBHOPFAH", "UVHXUDGEKRZNEXPYPGVHZAGSQF88888VWAUUDVEJDR", "PJUQWYKVGIDYNIRNODNJSQJEZMED88FDIVBCTSFKJS", "KPTFBJMCPKNHWJCDREOHUNXFCMFKX8ODQBVUIAODTU"};
    int k = 8;
    int threshold = 69;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"10 22", "34 28", "46 19", "48 6", "57 31", "58 81", "59 10", "67 66", "69 48", "78 10", "79 69"};
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    vector<string> photo = {"KFMAVAAJAWSQUSQIYGRNMKTPTETIZOHQUBLIHMMWTHPGFATCM", "SMNVJFKEHEYZMXWFENNUPWOJ6NBGY66BFUWOPASFBNOZLEKEQ", "TQFTLJWEZAVMLTWRQBKSDOMFTLVNT6FCBFHZITWESIHJVXOKW", "DVZVGXOOWTVYMBIFAIEVFASNHXIEIAOYARIYTNGDMWTZTRVQP", "RMKMZECMVOCAIKXHXXWC6AFWELYHXJTWCNLOGIIFPSDYREYFB", "ZYYHZUNGKBKCMWZGUTJK66HYYHKGZVPRVYNCVPHLCRCPMHLQO", "WVKUSFBMEHZPDNLKQHDU66HLVDHEYKVLOLSRAEUEYAYEACJVQ", "GDKLCAWV6DTJRYLLUKCT666DEQYPWTCY6YDDOACZKBXNVCBWF", "WQEU6NYSQGTDWCUBNMWU6KYJAGRLQM666666HGJGYXXQHLISQ", "PIA66KIGBSEZOELPTGDEF666GML6SON66AHXFPCLCMWGXFDBY", "BMM6666KKMACLUVCAOORZ6S66666MKJL6PCWKI6EPQIMQSCNK", "XZGFC66X666MZKLGGZSNRT66Q6TKRFSHQUHHOY666KJERAKIK", "ZZXUEGSOA66YPYTNZGAFHRWZI6EZMRXLYAWHVHQVDHYEMNFQO", "WHDXINDUI6USRTGGMDNCQPSDUDXATGTVTNLONTWLUWWNBHYDR", "XTVCZKTNQQXRFPPBBUZAZRDEGTUYYFLBNZCRDTHQHEFDJNBUP", "IBZEXEIQDQVKBTIITBMUPEQCBGKXVQZYNHCLRBDUXCYRMIIZX", "TABURC6JVQTUKBANXTKEVDGILGBVZPMGWUAYZIJJPEKSWABGH", "GISGFCJ6BDPWYKOPOYNIZOHXZCYXTOPPATNLKFOJYMRRFOGQW", "WBCHFBQ6MSIFFFOYUGO6DQWSYNRXCPLERVKHGFWNWRMSVIRQF", "YIJCCS666OBEONTPMYZMOYZROZVYSXNTLFZTJMWMQQMUQQYFC", "FWOESF66PKNXFKJFVIZNLJBGRPVESWTL6KRAPTHFZTNLHEJIN", "TZQFW66BBYIKABTMZBSOCYDMTZMPMKF66VJIPUHUCSUZZNWKX", "ZCUOYZ6ZVGMTLTFVVOAMEK6VTSNQGGPN66DSUPAVELAFFM6OL", "ULLLESWGRSMCFMUPVBIZX66KFCKOVMB66YHCRSRMOKUGBJ66K", "CWFIJ6L6KOWOGUAJOMVQO6FDHHRUSTD6WANJEIWVQAGRQLK6T", "BZVRCMW6666OSQXVMBYX6666LWMMOMPF6OGZVCLKBU6QRDAIG", "GMDUZHU666A6JHVTVQHRL666MYVQKARLGAKTJJUNFZ66666UN", "JKRUQSO66KR666YVLKLPSN66SNZAIXPEOLDOTCINO6666YONZ", "XNFKW6DEKLW66GJKJHPBKPJFIFXKMEBYVVADZSLYUARLURYMP", "QDRNT6AOZM666JOJTLCYBNFIZGPXOFMEPZSBBGMRDSTENQMFF", "MGBR6666AK6ZDHSYRDYULTFSCMYOPKOTLCVRIKDRXIKICPKPN", "PANO666QUSHLLGPFZROAZ6OLTAUDBPBRCGEMKPPWMSWS6EHTA", "SJ666V66JIEMKTYPEEE666AUMAFKEMBMAMZBIJERIC666FHBS", "VZOZFFVVBARSDZQXHTA666IACLSZEHQFTSXITBVGXNNWFIDJG", "UJUFVGMOTGGJFXVFUDJ66OQOYQLWOGGLEQRTYFLZOUSMKIEFK", "TKKHYSMCNCMFINNJYTYN66DYTJVROCXPMPVDVDLQSBIZOZBHA", "XUTVVVIDONNCWKSVCRHD666JLOLSEBEMJUAEEZKGSWZZOVNHM", "CIUVQAPWSAFKXTSSCIXYCVHHYSXZYLQCPCYEQO666QHUBJIAC", "RBUO6QRNPQL6KNUFDRABMKTBBHW6VKIATLJIUMW6ELDHHGVFM", "GZW66DORDP66ZYLIIKVGOGXZTW66YCIZKZVKUECEPSDEVNT6R", "UIO66FBAZXHB6N666JOFMCZIUND66GRXJLLGYTTAPOQEWEZ6N", "LJK666EVPD66666ERFKCCZCPQHU66IGLJNTBFZRENVEZSSEYD", "DUOK6ZFNAGG6T66RWLNDPDPUIYXPLHXJRFQJNJBUWTIQPEMNK"};
    int k = 6;
    int threshold = 21;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"9 81", "10 20", "10 61", "14 40", "18 52", "19 25", "24 57", "27 83", "42 68", "43 13", "44 50", "49 22", "55 80", "65 45", "66 18", "88 53"};
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    vector<string> photo = {"HFRJ444MCFUCSDHM444444L4VNEJBR", "DS444KD4JPGHHVEGS4G44Z444QRQAD", "VLI44MNB4FLSFW4KH4COF4444KOKBJ", "RZDT4XSNRLTNQJTKQDDQI4444CHZJE", "QZCJPGKGVZZYGPTQRYYVJY4E4VZI44", "CJYAPMHKOZFYGMOE4EOZZVFHLHD444", "FSODAAIX4XDOPYYY4NQCF4444AHI44", "NBGEWKFI4MA4KXXSPETGCS44LC44XK", "GXSEJC444L4VFRALAMSOZKZVT444C4", "HV4XF4S444444OTWQXOSEOXUK44X44", "N44TY44R444YXFXDWMOTUIBZLX4H44", "O44NO4BCD4O4RRDCQFDOBGDM444SUV", "444Y44444TLLRVLP444NGSRVWXC444", "44A4YW4UUFLUWJBP44444ZMOZSOU44", "44MWBTCBIEIAICJEZ444BDFJ444444", "B4HC4444COVZZYFXWTQ4MRLRLTRB44", "RQFRF44HNFZVCMTZEAQ44EJUJE4DLO", "FJY4Y444GFNMFNKIREJLU44TC44JBX", "MTY4444ZQTLRBGCQROV444H444SYIY", "OOZLDNJPVFMHGAVZFLK44S4JO4RSIL", "WWWSJQYYUZDRDSIXND444H44T444KD", "UEUU4XCMYKDVISWTAH444VY4W4ACFV", "GPHK4HCRDBSHKIJOIG44O4444EMJDH", "SAWQ444KKCLFWQKE4TUI44WDMUJOFK", "UIXVB4ZSILMCRBLI44MO44OFLNROQN", "GVKSVYHYFOFO44L444NNIHBBTQMS4E", "N4OCZUNCOQXP4MR444DBF444WJR44M", "4444XKXZW4EP4L4US4LVP44L4CY444", "444FNSLD44G44Z4EC4WHNKX44PBB4T", "444OONM44HKCCC444SWAX4444HGDDY", "4AMPJSQ44ETIJJQ4BVKK444EAWRNHH", "QWNMNTZGR4YZSCGZZIZ4HJJ4XVIQJW", "RIWHCPEB44444ZOES444C444RGQPMS", "EZRXSWRNGU444PSXCCH4KHXEXBHJIE", "OZRBKP4B4I4SDGKTZUGULGYHK4SJ44", "44QQ444B44W44MMTGIB4444444N44E", "4FCZ444K4444E44T4CE44Q4444U444", "44MD44D44V44W44C444ZZCJ44QH444", "444N444LU4WX4444LMOUQJLB4I4BAN", "4H4A4SIQ44YZD44BI4INDUKCCH44W4", "JCA44VNEPW4W444Y444LEXXY44ZW44", "44A4LYSSS44I444L4M44AOOEI44GG4", "4O4YXZJII444DPB44QMZYHVL444QD4", "444BRIBIM44444SJ4ABAGJYQ4444SU", "44CZGRN4P4444UNSIL4U4OMAML4PHP", "4U4Y4FU4CNY4LSPLW4444O44UTLHGE", "4J4444X44ZHPFIPH44SQL4444ZADFV", "4I4FJOJ4GIGESUYDTJZD44444PZYQV"};
    int k = 4;
    int threshold = 33;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"3 25", "3 75", "3 89", "4 57", "9 4", "10 76", "11 34", "13 23", "19 18", "20 72", "21 66", "23 86", "28 78", "33 52", "35 83", "37 29", "38 3", "41 40", "45 44", "45 58", "45 73", "45 93", "46 5", "51 38", "52 19", "52 85", "54 28", "57 72"};
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    vector<string> photo = {"IM33T3VVMRV3QSSOQUWAWFQPJVZGLOKMYJ", "AZ33Z33WUA333WTORWKSOMCABBVCJSPQJT", "D333S333KA33RQDVFLOPBGLOMERTXAANZI", "UYP3BM33R3333QZC33FCUPYOZOEXOIRIDF", "IFLSI333CGC3PTYE3333ICHMSDFLESN3CY", "LBL3OQF33MXKYBPHO3ITTSJSFLXRIOK33T", "KJ33BDWB33UIEUZ333CDACOWTEBS33YH33", "F3333UCD33TGVLPQU3B3OTXWYCNQ3RJ33V", "IQCIVMSDZNCPL33DBTR333UQI3333HKUDV", "CQHOKQVFY3R3333DQ333JHQQZRR3333KSN", "UUHRUGZXX33OF3GHAIB33M3NZI3333N3PD", "YAOSOBN33333FKF3UYX3QX33JAF33LF33G", "VYTXSN3IG33O33M3333J3S333WTR3RS33R", "DYGL333UE333P3E3O3333O333IPC3CJB3U", "3GM3333ALGX33RGIIGBQLS333DISACMH3B", "3B3D3YYPBTNDPZHEE33DZF3333MMOMTHXG", "3N3VNOOLPERMKFMJKB3NTHGFITSKLPOUPS", "3E3XJ3GRMPFFUECK333JXDKEECMJFHHZPC", "3W3O333JPXKSYZHTR3EMTCDL3I33QSYVCD", "33NXI3ZAFQQHLPZFWGNEXMNH3333ORGSKH", "3BUYKLOQWXWTEEVGDBVTLIHY33KJ3BOCRP", "TCXTXDXDRGTNNMXYNESZEABV33A33HKYUS", "YQHDFDNDHHZWLQXFNOQOJBDCC3NK33WZDQ", "TXWNGJSWLDYEXNEWGTJUNPMAH3KVSNCWVB", "GYQBWYHVFRQBXNSFPLPZHBGSY3DONTMFIC", "VLQMZKAGAGFTZHCVSSVSMFYXAWPUSFYGKN", "Z3333JRRTWUEVCZAECTCFMGTYGOJ33IURT", "333333GVOOLYRDBVDSSOIODZCQM3333WLJ", "FY3333XBTRBTR3OTWVYXODSOIVWFK333IB", "NNK333AAGXEBR3TAUGN33MJCJDFO33AQUG", "GOQXCVGMCORZI33AQHDR3G33ZPNG333WNN", "OVHBCMJBLQJZV333TFGW333333XJX33DLN", "UIJQJUT333LMK3FGROSW333GA3SUS3Y33P", "XGXQFW33OWTHI3GFANQQNNKOXE33IG3333", "H3EKYQG333GUMP3BORRQLII3IO3A33333Z", "E3AZUEF3UBIFYA3333NSRH33333O333STT", "33QJITCCLPUHY33333ZWQMBD333Q33D333", "3PNBIDICWZKTQSG33TZMC33VV33J3Q3333", "WWPGWXJUKXWKAJWZIPBII333VUS33F333T"};
    int k = 3;
    int threshold = 42;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"6 56", "15 8", "20 24", "22 5", "31 72", "35 11", "36 25", "45 62", "48 26", "50 71", "52 43", "56 20", "59 59", "61 71"};
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    vector<string> photo = {"0J000000H00XG00NDTJT00000P00000L0KV", "00W0000P00I0000HU0YD000T0J0WC0P0U00", "00MX0MV000J000G000BOR00FLGA00C00000", "0V0000A00H00000GP00X0YO0DA000Q00000", "SY0000V0K000UT0L000M0000CONN00V00C0", "0ER00J000N0B00HO000X0000AOQ0000ALL0", "0SEA00B0C0E000VCU0KS0WCV000D00C0000", "00IGWR0K00000L0TVYONT000000C0Q0LQXC", "0P0F0000ZH00NE0LAMZI00000000S0JC000", "000VWQA0F000DR000RK0A000SV0Y0000RO0", "00S0000EIM0000X0000JLCRLWNK0000000U", "00J00P0M00X0HB00C00B0IA00ER00000PO0", "ML00000P00AEO000QST00H00000BQBP0O00", "00UTB0Z000H00G00S000J00000VD0P0R000", "0000ME0000QS0FZ0V0000M0QTJ000C00000", "000EW000RF000RUEL00000P0000000X00J0", "000F0XPF000000000E00000M0000000GO0S", "00X0000JI00000RR0T00DGKI0YH0I00H00C", "MVU0K0HL0KU000OWCXBH000ET0G0W0H00V0", "L0UZ000T000KDY00E00S00P0000N00H000D", "I000T0SG000W0E0000QNP0VH0000TL000U0", "S0000QMA00M0Y0N000G00000RMWH000AX00", "H000000G00Z00C00000B0000A00LRQY0000", "0NF0G0I00R0000KT0SOW000G00B0AP000PO", "KW0B0NOFCZN0000Z0J00P0P000B00BU00P0", "0H00000W0E000L0WM000E0C000000WYE0V0", "00000000QUK00TSDM0000LP0G000EBXC0N0", "A00000HPEE00E0000YO00DOLUOHS000K0R0", "000MIAQP00AD000R00C00N000D0000L0G00", "ZRYU00000000OA00000PFSTO0QK00000Z00", "000BFZR00S0000NGQGN00X000J0CN0HU000", "T000N0T00FC0C0D0T0IM0N0P0000UITZ000", "NE0000K00D0U0AE000T0LNK0R0000X00H00", "0H00000ET000000A0000SO0K00000I00K0E", "0C0P0BN0D0000OA0000000SWW0O0K000LW0", "00CH0PQX00K00T000GPURU0VGWH0P000D00", "000GU0I0VZ0RM000R00YQX00S00A000D0I0", "00K0000X0000F0S0WO00000YK00000T0000", "E00D0VO00000ROHOVQ0000T00N0000G000S", "0B0V000AG000LPEGRY00000Z00ZK0L000E0", "0US000000X0000WZZ0IVC0J00C00AC00C00", "00G0D00EA000000X00000E00G00000G0C00", "0Y00QA0D0KADY0ZG0000PM00GI000HIH000", "00V0T0E0U00F0B00QXBN00Y000Y00JO0000", "00P0A00Y000T00000V0Z000Q000WR00C000", "000X000D0G0OI000C000O00J0000R00B0HX", "000MT000DQ000G000W00000GZSFV000G0QL", "00000Z00B0000T0000J00000000N00H00ZN"};
    int k = 0;
    int threshold = 72;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5 87", "7 66", "8 53", "10 7", "11 81", "18 61", "22 17", "22 79", "24 6", "25 32", "25 49", "30 91", "32 22", "33 44", "35 69", "40 29", "41 76", "43 44", "44 91", "48 16", "50 84", "51 64", "52 49", "54 33", "57 72", "61 21", "65 8", "65 76", "66 87"};
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    vector<string> photo = {"YW0DHLNAQMYKPOAOBAEEQNJAJCFDYUQ", "000HHJKJXQRFHPHWILZVQKMGRCMKOMH", "0D0WFFDHCPQDIHSOLMDTRESJVCIRICI", "000ABJMTJSEWTBCIKUVYOLSSXLJIKIE", "00RBBCNEPMHAJIKWMFAHUOXKYBDCFDE", "C00MFVAFQOQDFUVIOOPYWHNHHQTBAHI", "S000OTYUOJLELESEWKCLFRGXHBQAJWB", "YO0VLBOVFRSMVOWWLGVSPKZYMEXIMJJ", "LKFFDKBCSREHZNMGKFBUCFYHZMR0YDK", "LUBYICKIWGAJWAOIISQLIHWTWB0000V", "UWPWVKEAW00FOLQXXTTQRLXANC00UYT", "VKXMYE0QT0000QEJWQMXRNIRLGSHQEB", "YKHFTX0B0000WTDWUFKOOTSUGKNMYEM", "FXYGW00XKDYOYTDKRXBXOCYGHRNIUCN", "JDCVRC00DEFYLNQBQDCYUPEAAIZPNXA", "USWWJGH00JGRDXRJVFGLILJCMQJIWUO", "GJVELHKZ0KJDVOONDKHDVQCMRCBRQRM", "QCH00QGSRHVSENZKSOQWEVEEYRQTMUO", "TJOU000PMDYTWCNHSUDMBSZYRCPIMRM", "CYQ000QIUMHYMGUDIWG0SWDADQZZPSX", "Q000000QLKMDUGI000H0MJKODMQBMMG", "JYV0Q00BMJOXDX000T00ZUQAGMXCJPW", "QMMBWFCKFOJBJATZP00000HQNYGGFCI", "FRBIPEQBXRRBBBKDQ0000CIFBD00XWD", "STXTRYLIZTAESCSEJ0000XA00000QYS", "JTIGXLFNUSPFOQJKETN0YFTGPQ00TZB", "MAWCWYKCGNPSXYZJUNQOTPSDNUB0IID", "CTAUEPNLTT0BQJBIJRHJTTHPHVRDUHW", "TGVTNSEMR00GOUVSCAIXNFHLHAYIDEX", "FNBMXQNAF0DNJTFLKRGSAKMGQM0BGAO", "CQCORC0000GIUYGTWLTNFQZTM00CQ0W", "FSTKHL0J00MYULJAXGFUQXDLSI00000", "DGSECU0LDDRGZJXOYGZVMDAVYKQ0Y00", "ZYUSPXPBPNGIREQRQKOZWERVTEAWI0G", "VBPMEGGCNIUECCTUYCLZZOXEFSOTI0O", "YGJJUDEPLERSBLCVCEQPOOFAJM000S0", "KHSGPFIZBTXVKYJSMGIGCAGFCRJT000", "YTNPUZQTBMITFESWOHJLXVNWIH00000", "PLMABICQJTPPNLBGXGTURNRIAUR0000", "EMBTPCUOCTYGURULKANYZBEXWEAB00P"};
    int k = 0;
    int threshold = 41;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"4 8", "8 39", "17 60", "39 45", "56 64", "57 75"};
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    vector<string> photo = {"44Q444W444444EY444IV4444444444Y444D4444AQY44444", "444E44MF4C44F4444444PBD44444444W4B444444P44B444", "4HZALG4G444GUR4ETY4444K4H4Q44O4B44ER444VMA4DX44", "44NV4444Q444XJ4M44S44BL4OE4M4B4L4444Z444IJNI444", "4D4DUX44QOTN44L4444BO44U4444AWT444V44D44KKWXK4K", "4A44O44C44444I444A44HB44L44YOG444T4Z4Q44J444W4X", "4L4VV44T4444UOU4444FT4444KS4K44G4H4P44MP44B44OA", "4X4D4C4FNQ444E4444E4L4444WV4P4E4AQ4URQDP444444F", "P44V4EUIOAHT44NK44Q44KKJ44C44DE44444WGDF4Y44PED", "44444HYEMVRHSGPPJJ444444GVZ44G4D4444PZF4FT44K44", "I444FDJNBLPPIBIROQ4TK44BCOG4444Y4444P44444L4F44", "4FSK4S4444U4WENCLXLK4SY44P4444SJT444HI44444PI44", "44444IC44444QHILMVJ444N444A44KZG44YB4444444C444", "4444C44Z444VRJUEZ4444K444P4QAPGGAKNROB444DA444R", "444X444B44XVYNNDSQ44T44444K44OO4444JSKEXO44GS44", "44M444N44TFHNAJBKBG4T4TW4E444S4444LWMSQI4444FLI", "GIT44KOJ444IFGPCJKNV44B4C4444L444BYH4OQS444444G", "444XCHHJ444GZTEQCCLPJGL44ZI44Z444Z44444UQL4UCUQ", "4C4444OQFROKOTRTPHP44444C4C4LD4444BI4444EJI444U", "444XY4IJJNGEZFKVEA444444Q4Q4S44U444W44444VOG44H", "44444HECFRNOCIM444LO444G444MHIEVFC4E44444VOUS4C", "4GY44444LRYWJOFDD444W4DZ4444QHNAFAMLLV44WXJO444", "4R4SHWMM44EPE444YS444T4444LX44IRGVS4DT4SGMPCS44", "L44FAW4444UOSK444I444RXS444V44NI4WP44QZQNGQRJ44", "FDM444SP44BPPD44Y444444SD4R4444I444444FAET44444", "4444444W44OOBV44QA4C4N4MG44O444H44V44GANJMOB4E4", "N4444444PFCWUP4444Z444C44XV44VYSU4CS44UDO44E44M", "H4444OKZ44BSWJDGADTR4YT44YLCL44PKVS44MUQV44BTZT", "HNX444OV444DU44444ZCB44444TADF44M4W444MNPF4YDAC", "ETI44AJR444GQ44444VZRFL44MRJA444J44OTVCN4444EP4", "DDVAY4P44ZRQ44444MT44444444N4444CO444MERC4L4UW4", "P4N4444DM444J4C4444KM4F44G4M4444L44VNS44Q444U44", "444B44FK4444JZLPBHI44EL4W4V4RU4FC4444D4LIRTM444", "44W44O44O44H44K4Z444444G44AZSROZZ444D44444D4444", "4J4F4H444AR444444X4444444G44PWPW4JECBDM444C4444", "444JS444444N44444Q4Y44UCCV4444SF444444N444V44VS", "4444D4SS4CK44444G4D4AV4444L4P4CZC44444H4ON44J44", "4444P444444D444S444444Z444A4Y4YM444444SO44JJ444", "444Q4444444J44J444P4YK44444ZN4UJE44444VHS444444"};
    int k = 4;
    int threshold = 69;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"4 70", "8 40", "8 54", "15 72", "18 29", "28 72", "31 60", "34 12", "35 4", "38 48", "43 38", "43 68", "46 59", "50 44", "51 4", "64 35", "67 8", "67 18", "70 51", "70 73", "74 6", "75 39", "79 23", "86 16", "88 6", "89 45", "89 66"};
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    vector<string> photo = {"X00AS0000000S0K000000I00000PBWA00DP000000C", "0P0FI0000000NX0I0M0000A0A0YZ00O000NO0G00Q0", "00000RDU00NF0F0DY0W00K00000I0000000G0N0L0B", "00000PK0TR0V0000B0NLJ000000ML000000X0TI000", "0000TT000Q0KX0RL00X00HTTE0T00LG00OI0E00000", "00G00F0J0C00F00FG0000DTH00R0T00KN0000Y0000", "0O0CUZ000000MI0A0P0WDH0ZCT000L0A00N0H0EV0T", "W000KPAOMU00T0W00K00JH0000000L0000000K00S0", "0Z00K0000V0G0000IK0MI000D000PH0R000I0IMN00", "00P000000XA000DP00WOV00I0S000ZD0MM00XI00F0", "00R0000000EM0A0000G00OEMS0EMH00E0NPX0U000P", "000C0F00ER00RS0W00T000000Y0000Y0000TFY00C0", "000ZFB0IY0000HD000F000000Z00YU000KK000P000", "00T000CWE00WNM0JTT00ZI000U0X00P00Q0UN00C00", "0J0000T000V000FB0ZJQI00L0OW0000000K0000TZH", "J0EI00N00W0KI000000H0VZ0L0G00000OW00X00K00", "00X0C00US00O000000Q0S00000F00ZLAZ0000000F0", "H0W0QUL0G000ZJME00000U00VHO0C00VQ0S00N0T0V", "H000000R0N00X0F0KMTXT00M00JY00L00G0UB0J000", "00000TF000JB00R00000F00T000E00A000MC000000", "0G000R0DC00L00S00000J0J000Q0S0B00000K00000", "BD0YAQ0000LY00UFOOTH00Y00000HUS00YBD00TB0R", "V0S00L00IH0SV00000E0CK00000R000000T0B0WR0J", "E00000GRKV00Q0000K00ZS000FG0CF000B000LE000", "O00000P00X00HU00J000X0A000C000FMT00XJI0LUW", "L0LZ00J00000I00WV000000DEV0000P00IE000D000", "0SI0YA0KA0NJNIF0H000RMZ00M0000Y0E0K00D0000", "GQD0FMP00L0A000Z000XN00S00UR0J0000M000RB00", "0000000A000Z000JP00IB0000000SK0000X000F0X0", "PEA0V00P0000TP0XC0O00X0EJ00T0Z000QV00RL0Q0", "00Q0HP0N0000R00W0M000F00BV0X00W0SD0FS0P00F", "00M0IZG00000V00V0000US00Q0S0000C000L0K00DW", "000E00YRT0000LX0TF0N0A00G00U000M0000S0A0J0", "00Q000W0A00WPJ0000JE0RCN00R0000N0000U00000", "00V00000DCR000000000000X0S00C0O0000N000000", "000EM00000PNNB0000000T0O00NJ0I0K0I0IFU00H0"};
    int k = 0;
    int threshold = 76;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5 7", "7 37", "11 19", "18 12", "20 61", "30 44", "32 32", "34 68", "39 52", "43 25", "48 6", "49 59", "50 14", "50 43", "62 28", "63 5", "64 42", "66 14", "73 30", "78 41", "78 64"};
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    vector<string> photo = {"XEYZEFFRUEP222222222TQJWYVUMATLPST22NKAEL", "SGL2GYJJSAXNKZK22YRJMHTYXERLKKCU2R22MUKKT", "EZI2MYNDTGIEYIJ222VDNMME22HCVLTS222CTTZDZ", "ZXX2OOYRWBWIIJDUNZ2UOQM2222NIHK22A2HZZEVO", "JCQ2NTAVZTJTUZ22JQ2VKCU22JUDGSM2222RBYAET", "MEE2AJUEU2LTDYX2S222AH22222MRV2222ROXGIQA", "RM222JRO2222A222YQ222CMYI22FDLI222SRAAGKL", "TZ22SKJSV22HY22L222TDKV222LJJJIMMZICTXCCN", "VB22UJ222222KAKCS22YCBJYWMZSAKKSUEQLUWSQT", "AMIEWAYY2GOOL2222QEYOIAOEZWXAJQDDCBDGZLAX", "LIDFJVUTIZRUNB2222222YDMUKSIWGMWZDRADWNBH", "VYFSEAGOBORPZRGDKD222BPABECIVSROGGFQTUPCQ", "RICAXEHXLPXZUKX22222ZSG2FHTXXNFTJJXOTWDGD", "OLYFLHXQHEJSEBRME22AJ2Q22SYUVLNPQMNXRPEQK", "22CFCZHEOYUTFVHA22KHS2222BZCRVSQGIBBEMCUR", "22RXXFOIYTNTAHHSQY2QJ222NGGJBPYMSSPCEVOHT", "2222YXOSRNPVTOKOVX2ZN2B2VEGDDCGGPFSYDLSQU", "2222XESOWGNBJHYQX222T2ZSYKRBIXARJZZWBQQQK", "2T2XRXANLNYHXCOLV222K2HNXYVEFP22FEHGDLZQL", "2NKOTUBOFHKXDSZN22222TKGUIVVB2222EUKVWGRP", "OURFTWDWBBGMDNALWH222SYDISABI22222FYPEQZD", "UVXYIJBREPTSXERARU22GOLBTCUUP222JBAQFUTVQ", "MJAWFCTKDPZGJEDAUBBMVRDVBXMGOBH2TJOJXKHOF", "YIQSUQCAGYGQMFVNRGMKIAWDOAHLXVWLMZWNQYXPU", "TSRGNPKPXRKIDIEVLHAPKEURYTTEQOONEMDEWTLTQ", "AEANFTNKDMZGNNUHEAVERJQSQNQAGMRNNSVCGRI22", "2TSHDKYSGLWHMQDXEJABSNMGYHEXCSUOLMVBUSFV2", "2Z2FUREDRRBMGJMXHUDTNQS2FZTCRQKBYIDFDA222", "2222DLXOUTVVKHKQBMJTWR2222WBQBAHNBQAWUH22", "2222WEZAWWNVZHEUNTMYBM22TMZTVFF2AHPBAZCQR", "ONULQRRDOCKETAFDBRHEVOUA22HA222222IFNZKAM", "AGH2JBHUKKWPUGIECUGBYWK2222M22222FGQHLSRD", "TL2222NVBQQOTTEWGAFCUAQ222X22SKV22THPXNXA", "I22Q2MOBXIQOLLZGAN2222NHT22FATUPYBISCIJFF", "VF22222PHQLMPJBKW2O2C2222V2KTSTFVMEVYYAXB", "WB2222ZV222JEA22T2W2222222CXWBEHGVACHWIIU", "SG2G2IWDB22YYV22222J2V222REALQV22SPLVXMWQ", "UFTSMBZD222OSL22222BLONYQXJCXU222AOGBQDKU", "PSCWXPAPCW2MU222222EFVOGXJFSRN2222SYBLOEA", "ITVEXGORQUDIRK2ZE22AAPACMGLQTKS222WGWRKQJ"};
    int k = 2;
    int threshold = 59;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"4 34", "8 68", "32 74", "34 24", "37 37", "44 70", "46 31", "49 10", "61 62", "63 41", "66 7"};
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    vector<string> photo = {"WCBQEBYCNKAWTKJLZBYGTDFQPFAEADAFYRISILVCHDUETESWT", "HVGCIUTZDRXMPXTKOECRVEQDRHOQTYAYLSFHXKFLYFVDGHEKO", "AONCOCMIMBYTHKJXCJDQBANGBARSJYXZNWUMAYPKDGDITYQKT", "TMWYPORIHELNNCTP4VERXYIPSVTKQRCXXPXDCAHTIGWZUASVT", "TWNGLZLXQESADEN44WPJZWCTJSMHESQAFBXYUKUFMGLGBJPLW", "URULZJPQVJGYJLPR44OEVMIGOZDFGPOJDKOECSIAYPTOFTIDG", "TPCLLZMDYCUBTM4J44VRKIRLCLKGNQASXASBKVOHKSXVIPXGC", "C44GMZSLQUEIMD4444GTBDXEODOEEWUWMLTSHZCQWROJIRLCP", "O44UYOGPHQHYA44SL44WLVIEBLOABMRZDRXGTZGUZXXCWRXMY", "XO4WMLUVYFZAOI4RJUA4YAMKDSJXAQVLPFZEBADZXTFWEBIOK", "4G44TQSMSLLLVA44TOU4TJEYGDHCUCUBUKKWYQLPICNRKKPWM", "4444444JASJOYFSVNM44444BEQIONFODBHNVLFDMNAJMHYUMK", "XUT4IXD44E4ZOPUUZSX44444EXOKFELHCFPKOWISJRFGLTYFP", "WYUXCQ4T4444PWPQO44444C4FIZK4RZFSLVAYPVOOKTWWLXER", "KUWSNG4444X444ISE4444VB4HHT44VWDRHFKSKEIFEIUEXYSK", "XADHCURU44J44DZIB4FURHIKLJIR4LZOWMVQPMEWGMGIFXACQ", "ANEJQZSYQFHZ44AVRRHZBUQAOHJ44444TGPYBCYOFKAMQLAAG", "ZIL4YMSCRVWSDLXQEDGEXSARNHHQR4444BCKDAEOFSFSCWARU", "AY44HGFGCWENKSHYKVNH4OBGRTR4444M4EURYPDRHTJAIHZWD", "F4444LPYNFCSGQDOWAFT4YSPMC4D4444XOMOOJPPNKCFXXEKM", "AC444GHQYILKUYTLXMC4444SCE44VI44AWMRTPGJP4URZGSIA", "4444S4MCHLNNDHFURQYRH44ZX4E4QJICGXKHYJ44444LTWVDN", "UB4TB4M4EODGPMJVAY4444MMW44444SJPCOAHKF4444TEQWOD", "P44NG4O4QFZHWYUMEQ44444Y44QY4HNLECQNRJT4YVGUTZHNE", "KTLBL444YGLVXUJEWGSB444WD444ZBEVAWPTBUCQWUTNGIXGU", "FWFQSS4VLRHGVVJAIBCUV4YUV4PICVJYKMLOWNKCCBXBLDMRZ", "YNKWCQENAZQUQJQIBROTKWLSCYTALCVLXHYJOJYZJKTARUESW", "XTLLBRGDPEAOHCMRVCYHBPALBAVXCZFZKKWCMZXKPOUTFECOF", "EPDXEIEPIBIBJGMKROKYDINIHYZYPHZETHXFGRRAHCG444M44", "SCQLAR4GCPEAMHCCHIBLGKWIFNLGWXIIQVVYEQGTAOL44444Z", "AFU44444QTORGRHDFVEJHCCUKSDNYMMYQZRKMARAAEO444444", "AVIC4444RHZZQHMOWQSDMSWXAWGNQVQFLURSMROYFDWIP4444", "HHEOAY444NSDLWQQWXWANTRYUMUMMDUWQRJIPOFHZCLP4444M", "LFJZUHQ4CYNNDIIHP44MCRZFYWXEBXIKQNVZDFXIWZECS4APB", "AOKNCIWSUTQCFVJJY444444TLEWXISYPEEIKXTQBCBMIJJHVE", "WZNXXXQREPKJKSUT4444BHERTHLCFGBFMTDWHAQKRMZDIOJZG", "GAXTOOSFZNIERWHZZ4WCITMQGRAKTQVOLMKSWNBFUUDKDHSFM", "DLFVNREFUXPRVAVEBGGHETTXINSWAFPPKFEGQOPEBGWMPONHB", "HLRNLKIMNALVGBFTHJDJKNFSQVSHIDGXKMLEMYZRLQJRUZXIW", "TMKAEKFKCWUVEUDNGJZQGMDBGPSZRTEOGVTQMSAHMIQJYMRRH", "AJEEMSUJRDHDTMGJYQLAKOPIORLG4SYHBLKWOEEFYAXXNVIII", "RIFAOUCPCKNRWCUKQPDYMQDNISQY4BYLHDRWEMCJBZECGQNFU", "CYVSZSBIGTLFEGTUDMWGIZFNV4Z444YGIUKKGRVPLQUZELVKM", "COWHMIRBLYXVWJQAJEM444QCA444QALAMIRUBN4A44NKMMUDO", "KMLKCGDHDVZXAQHZH4H4J44TSL444GMWKBXNP44444OSHIODU", "EVRKFNGKMSNXIWMCY4O44444QDC44AKVMDNMW4D444MRMBVZV", "PBYXBPJJBHNWFIHO444RY4444B444HOLNXNCDPD44OYYWISKK", "TUTABPVBBXDHBWAL444GC44VLSSZ4XRMLCOSWUTO44MSUVVVV", "DPSQRHFAYRQGHGYIZ4LSSBJVAJWDHMPUXHSKOOGEZMFEQDCXQ", "JCFPEVWYLNBXWQUFUBHMWIFAOHHQMHAXSNGEUVEZYAQNUJRUQ"};
    int k = 4;
    int threshold = 67;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5 41", "20 29", "32 14", "41 25", "41 44", "44 91", "54 45", "55 88", "60 34", "92 62"};
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    vector<string> photo = {"YK6666K66666Y6B666R666ZN6666666666Z6666", "X6X666A6666666X666666666K6A6T666YG66666", "N66A66WN666V66H66666NP6QXXQT6G6Y66CI666", "D666IOG66666XY6S66X6N6WOJE6666QQ666V666", "F6WT666W6BKMD66MYA6QN66666K666NR66F66MY", "Q6F6G666U666666B666XXGE6FJ66LC66666WCH6", "XJ66Q666Y666JLQ6666R6T666I6T66Y6V66HS6L", "I666K666N666O6K6666P6666T6KZ6U6666U666R", "666UA6666A6PM6R66LFSMVGC66T66SI66U66666", "66A6X6666VY666S666EQO666H66X666A6TSDAM6", "X6Z66E666I66666Q6CM6666E666C666CY666W66", "6U66QC6CC6LP666A6J6FB66PK666SP666Y66QN6", "666N66U66U66I666K6666TR6666DK66PQ6BC66P", "666Z66666O66N6O6G666NRLFL66CW66YK66666A", "66S6T6666O66JV666ZXV66VE6666Y6P6X66666E", "66X6IT66I66OF6MQF66666HP66RE6L666WCJB6Y", "6Z6666O66IX666666KFV6HUXY6ZG6666M666K6D", "W6M6Z66K66QA666IXTF666PS6I66LO6V6R66B6S", "M66HF6NI6G6T66X6666P66J6666666BI6RZ66L6", "666F66FYA66O66X666K666SRI66KQM6N6F6OW66", "W66RMZ66P66L66CZB66UYV6666G66AC6666O6D6", "6666X6666KMBVZXS666Z66G66ZV666N6666666G", "O66N666YR666O66Y6V6IRRFBELU666RYK6666C6", "6ISF66F66A66N666K6M666U6666X66T66DNFT66", "666QIH66Q666P66QP66666E6E66K6F6T6666Y66", "6666W66P6666D6666U66666N66BS6UD6666X6Q6", "6666V6C6666S6ELSS666L666M6M6IZM666IR6Q6", "666RX66K66F66L66WN6DS66IWC666LC6GM6666C", "66D6P66QKW6B66666POJLHGJCL66W6TS6Q66666", "B6Z66HJ66H66N66EQ6H6ABE666UK66666YJ6666", "6H66U6B6DBYHON6N66666J6666GJ666F6QEWFGI", "666NB6F66H6666L6ID6GMR666A66KE6ZQ666666", "A6X666C666UI666666VL66666F666O6SX666666", "6GX6M66JA66D66666H66X6NZ6N6666ZK6OQK6Y6", "666GR666C66H6M666U666Y6FL6666MXN6666K6L", "666QH66J6ZIPKH666DI6M666DQE6U666L666666", "66666GWJB66JDNYUDA6K6O66666H666CN6666TH", "6K6KB66W6YX66OGS666SPO6666F6666DZIBF6J6", "AH6C66FB66KO66O6666B666Q6V6SJ66Z666R6H6", "66AK6D66666A6DC66VNKQL666F666JQE6666BL6", "6C66EF666ATN6QE66V6W6ODH6O66Z6OS666666Q", "MJP6VS6E6Z66666V66D666N6S666Z666YGS6LS6", "66666WL66J6666FWZJ6666X6H66E6666O66SJ66", "TR66Z66J6W6N66K66PF6ES6D6Q66N6U6X6666I6", "O666W666VD6MGL6L666A6DG66BNHF66DA66S6H6", "6I666D666T6N666P666H666V6E666VF66X666B6", "66BB6V6666JE666R666E66S6666666J66G6J6C6", "6666O6666666T66F666Z66S6K666YG6666P66O6"};
    int k = 6;
    int threshold = 62;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"4 53", "5 26", "5 87", "13 16", "14 31", "17 81", "17 91", "19 50", "21 5", "24 12", "25 83", "27 22", "28 36", "28 67", "34 16", "39 4", "39 34", "41 51", "46 63", "47 75", "51 24", "52 39", "53 91", "58 3", "60 21", "65 12", "69 40", "70 90", "71 30", "71 72", "73 5"};
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    vector<string> photo = {"222CQOWD22I22XXNMSNPRMHEQYV2222MMUBRVPZ2BB", "22222WP22SD222NIHWEGSFGSEZXK2B2H2DEFKCSCJZ", "222MKXN22B22222AAGYURF22QBZM222D22LYDPEOWV", "22W2NZ2Z2ZZRC2YFQGHMJNFSXJ22N222X22RYXXSPS", "XP22GJKPQJXODB2WZHWPUI2AIT22M222IIMQBEYBWE", "22222X222LGKYLVQQYXY222GOUF22UTN222RWYKCYX", "2222F222RRCNCCWPXPKVGR2RM222222XUBECZJFQFT", "LUA2I22C22HMAVCXKERQSF2CYH22TBAIMXTESZAHRR", "W22NN2L22222CPLLSCEDJLRNAFHCGATZWLBPEBRYWI", "RIWXZX2222CUBIWGQFUDUYUGLW22YDEKYXKHMFUFKR", "ZFY222TF2Q2CZDXVIDMIXRYZ222QGWWM2ZZBTCWWDG", "KOXHH222S222JYLFWXTBHCP22IVC2LKNEFGLF22PLX", "GUTZ22222M222WTWSJUGACRD22IT22GAZLLV2222EY", "UZRNG2AMDJE22MY22MKPU2XI2XGE2VMHFSQMA222S2", "BUVDMWA2LVQRCSCF2DE2222EOMS2CBQRRQDNJPUJFX", "IIBOTURILRUF2222FDSB222JC2QLRJLANJDPDZBIFZ", "TQYHE22FQUE22222W22222EINLRLQEZQSPUZDNCPJ2", "KOYH222KGZNA2T2OGDXAGBWKBNNROWLPAJDSV2VL22", "KZF222222VI22CS22D222SVZRUJQEELBGUCW22Y222", "22AGA22XQVZKTZ222U2222JVIG2B2F22RFX22TB222", "2VSNLD22PDRUE2NXYN2G2YSEGH222CU2UKFLRGQ22D", "XJ2SCWSHDSRY22RBRZ2222HLYVV222N22YDARCAC2P", "HBRLIDHSIT22222LWG2DWTMHBBSDML22222KTADD2P", "M2BIIHRT22X222GDDFKABCNYRHHQUOFU2CZ22JJIVW", "CTAN2OPM2IUX2IFALUTGE22ESOP22HUDWGW2FTQUUW", "AWZK222DBOKJ2WGVIUOCETUGDIE22ZDKETC222T2UU", "HKMPK22GADUHJARCAN22YV2GCB2222UWT222GC22JP", "ZREZ222KAEEOOTSCJTM22VRC222H2PVLWK2KWHI2DX", "FNHHSXDWXTQWAPYHKCM2TU2JILJX2HCYZETRMIGQHD", "KTHNBPDWJICAD2HGFNIMTI22Y22NVRTBJDL2P2VURV", "HJE2ZSXBEKCRNAUBVTL2DW2QJ2XHHXV222KMGHNUKX", "ISL222NFLDGNGUK2C2TRYXRX222IYPNZBOFGMDTYIK", "NCD22KNJJBC22JQYT2AAOBJ222QHLZPH222MSK22Q2", "WDU2222PNO222YVPY2IMKETOWBZOGAHUS222NN2222", "JFTQ22NIVLB222VC22222VTPKIXIQWVNE22222X2CO", "22JQWGCD2PDE2ZSUNR2TYCPKDMOBELX22R2CJPSZCU", "KIILALENAGSUIMW2AM2E22222HYBFCJ2BJ22ERLAXS", "HDWQBYQEITENUSL22XDGUW2MBHWGDQX2WCULHITLXW", "NBWFSJLOJTYAIQS22NIE222KBCZOKPSGCANXOIDDVM", "SFZIVYYSPLPGYVXALELRL2BYBMCIRHJEHNOCSOZIEO"};
    int k = 2;
    int threshold = 27;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5 4", "5 11", "10 65", "11 52", "12 24", "12 37", "14 14", "17 4", "18 18", "22 24", "24 68", "25 4", "25 46", "27 34", "37 68", "40 30", "40 41", "45 76", "50 62", "51 23", "54 53", "56 11", "56 41", "59 5", "65 43", "70 69", "71 51", "76 25", "80 67", "81 39"};
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    vector<string> photo = {"GJDNYINJEFD111D11111Y111BRDVFLETX", "111KAICRNG111N111IQHK11EOMYVG11PL", "VV1LBLJXKQ11F111R1RM11E1VAFJHI11N", "FYBQLZPASVUPW11Y11K1XQ11111AJ11Z1", "1KMNWGXSV1111A1W11S11V1111YT11111", "1AMVYVMCQG111Z1G111OY1111LFZ11111", "111UQZVTVD1111OMEY1RAMA11LRSSAZYB", "111G111E1111BA1HNDWCDWNQF11NHV11V", "N1MS1111VD1B1111UOSX11ID1111A11I1", "1Y11111MR11C111WFUXKP11G111UC1111", "1I11111ONJ1GICU1SOLOJ11C1T1YTGB11", "11I1M1OKGFD111K11CRLP1CM1TP1111Q1", "1ZKW1FZT11Z11MJP1BUN111AJ11U1UL11", "M11111LF1DF1111VFKNJA1F111Z111GT1", "O111DCX11N1O11IFPUTWGJ1E11U1GUN1I", "1111E1YK111G1SFAHCCAB111111J1Y11Y", "11N1CN11111QU11UC11VZHHB1XBH11111", "RQDSPFTVV1I111LKAO1ULHAJVBW1111A1", "X1FQY1R11Q1111ASP111AXJZRGIS11DJU", "S111N1P1TE111DSLVA1BLIEY1EAFE1FYR", "SJBG1111V1VGH1VSKBRENRY11MGVCYJON", "WYVMU1B1L1T11111BWKVVPQV11Y111111", "ASYO1111C1F111T1XLQFZIJA11PRNB111", "ZDZG11GJ1SC111HWNJFJLQNU1AMUJX11N", "KBXWOY11111A1IEGP1FPITXX11TMRSDL1", "HKR1FQY11111NKB111111EHVJHHGQ1111", "1DE1RLFOURHIACCMI111G1YDOOWPR111K", "1111MCV1111111WD1V1WD11BLNIJXUE1M", "Z1111CIUAY11DHK11111VOJ11YIVR111I", "J111HTQJD11GVZGYYB11YX1111111XC1G"};
    int k = 1;
    int threshold = 43;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5 55", "6 29", "10 19", "13 42", "17 30", "18 49", "21 57", "22 15", "25 36", "26 27", "27 45", "33 6", "36 54", "43 22", "48 9", "48 29", "52 19", "60 34", "60 45", "61 7", "62 21", "62 54"};
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    vector<string> photo = {"SPOGWM9999999NIOHMET9999G99999BKAERQ", "DERZN9999J99THBZJU99999Y99999IULTSIA", "JYOZGRX9999TRIKYMMS99XH99999XXZIP9FF", "FPFSTBRUB999QGKWMRO99GP9D9M9VEQKH99V", "NLNDUGENB9KYMRKMURKIAISDLHAVXBX99999", "METOIBUU9B999TBQFSPKIIYIV9FRUGRE99LJ", "RFCHGLQM9U99IBKOEXLVUGER99YLSGLG999J", "ZSUTZCX999999VRZQ9UXTVF9999JONFK99DP", "VOMVLAQZB9999UION99NXO99X9LXSDLQSS99", "CPGSVKPYUV9D9HI9C99H999999MZLRN9R999", "GSKTQUNNHQ999Z99999UO9999UUEAZ999999", "NUARAVSBVPPZK9H9999IP9YYTVNTF9999999", "BGY9DTPKZVJ9999MU9S99O99999QUAA9L99U", "A9X9DGURMLN999999WN999999KXA99UZWK9U", "K999CCJVLQ9999OAI9999999I99999IHUFN9", "9999C9TDC999J9XQKRWM99EP9O999GFUF999", "99BHV9999V99ZINEYQJMON999U999P9HM999", "999V99999B9TIACHGZLNK99999YEKM9T99EA", "999KK99999JUR9BDMRCMNXDW999K9O999RGP", "9P9Q9G9999B99999OEZPVSTOVRU99QUAX999", "M99A9G99NA999999ESAMKZTZNUN999XF999D", "OJL999B99MHQ999TYWGWOPWYXQ999PK99YRL", "999999WNGDY999DZSKVJJTWA99999Y9D9999", "99S99999XNNO9KWMZVEOCLFGQF99C999E9S9", "BWE99999PXDZWUTMEZCEZVFGJEXJ99999SEA", "TVX99V9MLTPGJNOXUFMWPRTEL99999U9N999", "ENRVHAWPENRGGVKUNVRLHVGMKOD9MF9RW999", "JROJLWJAVOWXYDEPPQKTROBJLJSEFR9X9P99", "IWKEMPBXPASBZLJDOWUSRILDPHITI9999999", "HHPSHXZAXCLNZRZNRXYTKTGIMMFIL9OV999R", "EELYBFRBFXNLUMGPQGIBLUAHESHRE9PURJ99", "JVJRUJHXSPHRETZ999BMRQYGIREJCJPD99IY", "GTDUJWZNWWBNTQ9999BTGSUJFQKPBUAJY999", "ONFA9BNZAFXUMV999AEDPYKASNVNIB99J999", "DZ9999ZCYCJZGJB99XGGLYUCJQY999999999", "WB999O9W9XBLLD99XBXAONDTDDZLDJ9999MP", "OMC99X999999U9VM9RREZRNVABKJXO999O99", "QYO99R99TQRP99U99RIBVNNABGZISW9RZ999", "SWNFIVV9Y9999WX9999999KUQCF999Z99Q99", "AGFSOOE9RR99U9N999999DUUN9R9999999D9", "QXZXA9BJ99J9B999X9GJ99P999HO999FSOA9", "ZGIF999999F99DQ9KU99R9V99999U999999P", "HF999999JS9999C9C9999KW9Z999I999U9BF", "GYRX999Q99M999F9B999999N9FJ9B9NASZCQ", "KOXX999999B9999I9999999999QMF99MZYGA"};
    int k = 9;
    int threshold = 80;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"4 33", "8 45", "12 85", "14 37", "18 5", "20 16", "24 81", "26 29", "35 80", "42 86", "44 28", "47 17", "62 83", "63 69", "65 22", "65 56"};
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    vector<string> photo = {"99999A999999M9999999L9YRVKX99999IL", "9P99JQTSYWCX99D999QVG9Q9RGD9999999", "O9FQWJRTI999P9FT9999P99999T9B9999I", "J9999XQ99PC99FT9L99J9A9999E99S99TB", "V9A9V999999S9H99Q99N99C9999EO9VU9T", "99999P999999D9999SLX999F99Y999999Z", "9C999QVO9E99RSN99999L9V9PJ9LW9R99X", "9DFCZA999CDZ9UWJSO9S9Q999R999D9BB9", "M9LB99T9N99999W999W99T999E9B999EU9", "ZW99HR9O9LN99O9IX9999T9999I9FLO999", "9PX99999F9999NL9SATF9K999S99999R99", "9U9QXH99Y9W99J999J9Z9I99RPY9999Z99", "99G999J99F9D9JZ9R999AN9L9D999X9B9Q", "9H9Q9C999XP9F9999T9I9NN999UK9ODDCA", "9SW99HI9HVH9Y99999ZZ99B99999L9K9IA", "O9C9999EL9999B99FGUC9N99999YY9999O", "J9XTZ9O99EQ99V9999AQ99BQ99T9999999", "9X999Z9XTYK99B99DQA99LV9Z9F9N999OZ", "99999R9999BPGBAEVG9QNL999F9G9S9999", "GZ999D9999GO9F99A9O9P9999GR9W9GBCD", "9H999B99FWP99QZ9E99SPSN9I99999IKK9", "9RDINUDPI999999UW999C99K9L9999EG99", "B9999WWZ9SS9FKAXHY999TZ9M99VX9U99A", "999999IB9H9D999Q9999F9999ZC9L99M99", "9W9999A999999WSQ999Q9OR999999VN999", "J99999EEXF9999QDHLRQC9999HX9X99999", "POW9Y9JIXMF999LDNWY99CR99U9U9BWF99", "99JC9G99999Q99JT999999Q9Z9999C99VK", "9WW999YF999L9T99Z9999JTHA9999KE999", "999Y999E9999LC99KSGS9UQ99E99F99999", "9999D9V999R9I9SG99BHV9M99X99VW99I9", "999L99Q9S9VDX99H9QM9999999JH999V9S", "9999C99EF9VFC99999N999FOIM9W9999L9", "99QQ99999I99999999RM99999P99VGZO99"};
    int k = 9;
    int threshold = 55;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"4 61", "5 10", "5 38", "6 49", "11 24", "12 61", "17 12", "18 60", "22 51", "23 20", "28 64", "31 28", "32 5", "37 44", "45 63", "48 6", "48 19", "50 30", "50 50", "54 57", "56 43", "57 23", "61 4", "61 33", "62 60", "63 47"};
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    vector<string> photo = {"GKTOCFRFJELIEVBENABX000YMQERVYQZYABVR", "YXTSV00BVXOMXLUTZMDFL00DEGJLXCKSVPBXN", "WVKXRC0CRKAJWGXHAUBXX000IHHHXOWPAZUXI", "KESIKY00Z0000NNWIJEYCFW0PEUTQEAZWXAHU", "RWJNRF000X00JUNHBTCZHUO0AYDZEUZZBGKYL", "00OFGBOPDJ0XZQLFSMZGEJQWPBBCII0UGJUVI", "0UAYEATJVN00ZFQHUCXEE000ZKJC000000KAM", "FKCJGZDJVWHZD0OAKWKOFR0I00XZAE0Q0BYAZ", "UEYSEEWUZVNLV000JSFDUO0Y0UMYLIZDPOQQU", "ZOPK0I0NWBNM0000HCCZKDEAYUPZSHAMMGJIF", "OR00000HFFZLDXDSUULLFIIXERVJZOTTYAWWP", "FF00L0WXG0000AVYBFDTPMQGMYPUPWMKXJHME", "QQX0VYL0000K0EPKUHMLTHGEWSDI0ZGHCSJVC", "WQRAFB0PSWEGXCKUNWP0KLZLVEF0KDEGAACVC", "BLNSD0000NSBTAPIYWE00HATG000TH0MCCFAH", "FZZM0FTONORHIDJIWW00RBTUVM00RZ00QPIXR", "JQMC0SYCGNNUXHOXZT00ASRS000OTO00YBSLE", "BG000KTFNIGBLPGKUQ00FAJWGEDP0K00KLOKX", "R00D0HOTIBPZNUAJ00000KNBBLFQ00MFVLVER", "AQ000TSNLBUQSLTQLQ0ENUWBDITV00IIGPFEK", "BEQNAHRXMLUNDCOYTQCPDPPTAIJEE0V00HYLH", "JVMMPCBGMGGNN0RXUGOONKTMQKDO0V000AGZG", "00PVEIVMGCDQJ0UJKPMB000KYXEV00B000CEA", "00TOKABMKYJRV0YZYDOESG00RDN00F000N0DS", "00CYUOIGFNGW00X00FZMLABKBYXF0D000V00X", "00XSDAHVECNKH0M00NSFGTEZHZ000G00A0000", "0NKMWNEOXPTZ00000MK00QLKOAXQI0BMR0Y00", "YTVL0IJWGB0CYB0PCXXAYHAKMTVRT0EZIQO0N", "JAS00000BJXZLZXPYLGTIHHOFXTK00RRFON0S", "LXZN000KGOHHELT0OFRDBFLQHD0W00TPPOMRQ", "MZK000JINYTFXC000ETAJPPPFE0C00K0UGFCM", "IGZI00YADZ0TLY000SUWXHJS000D0C000ACHU", "IP00EDQEI00JEXF000KKVWZ0000EA00000JDD", "BH0VBMLWM00000KU0BOYFPZIS0SWFASG000MH", "VG0NTZWXOM00TFV000KPICN00Q00KAFO0JEWW", "RGVXEYCMUMJSDOTB0HXXJMG0000DEOJBIWHBP", "ZANW0DNMBPWCPHENWJOFBH00000OXGXNINNPO", "CVJHFEIGMTCNNFOMYLDQQBBHXEQPHLAYJLNUO", "MOYKCNYTAP00ZVDTPIAVWGLSKHEFWCUVGKFIZ", "RZWSFEAFZAGLYLSJQKIIXQUXLLTSTJGRP000A", "TBBUSLZD0EAQS000LJUTRTUXXEJXSXSX0000I", "EIE00FHD00OT0000XDXRFVZGQXILRUEUYAGUT", "G000EGYDVYEJ000PICFNGAUBGXHBUMWAMKONA"};
    int k = 0;
    int threshold = 32;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"2 49", "6 35", "9 22", "11 59", "14 6", "20 24", "22 10", "23 66", "28 17", "28 83", "29 49", "32 65", "37 33", "44 5", "50 63", "50 71", "52 30", "56 47", "58 58", "62 13", "64 46", "64 65", "70 52"};
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    vector<string> photo = {"555BJYTJGFJFSLTCMK555Y555LOLUN", "5555BPHJGHAYKU5LU55A5G55TXXRHV", "D555HJTNVKZFR555KNKB5X5555HWOV", "D55FRHIUCCS55EE5555Y5U555FODPL", "O55VRSETUCTU555555FCRD5SMMMLWJ", "YCBLYNORIDLQ555555JFV5DJ5TSFWP", "MLSUVLLKOQTAAKN5NQHVO5555YSOYD", "RGAILPIIUYVMGUL5EDO5555FQTONZO", "VYXIAHQOQYAOBZOJWSEE5555IKWLYE", "YHBWCMNGNNJHMJPCSHE5555Y55555Z", "F5MZZPXGPHAOAFONXNOH55ZQ5R5J55", "55555MZVVWECTZUMOIKLZIHNFI5555", "55555EUGPPKNILCPCTBOSURB55555A", "555HDNGULROTNQVPDJVBGKD5555Q5L", "HKRALIVENIACAXGJOPOHCEKSOKSRGC", "VQZXYIOHHZDWINJJUYONQJGLENSHUG", "YEJSPPXKZJFHABUBOBETNBLNYZTCMZ", "OKSGUQYXFNUIORYGCNHZJKEGKLDGTW", "TBYEJMSGHHWCHULCKFLJYZPW55RVME", "EMECKBKJTKWEZWXGJXYHBIZ555ZITW", "DTJYWBXNRLZUJJHDYJVVL5555UUTWB", "WFLRUPXFRQWUNBKQDYRBYUC5555NOX", "ESSDPNGMWRZIFLUIIIVE555HVG5NPJ", "IGWDYBSIIGUKYJUMCYT55K5RBHECDL", "OZIJBUSQOLVAXVLKOSRT555LCIYYGJ", "VGTAXITUBJWSAIPINOUESROPAF5VBE", "OVXBKPEMFBHEHMBHXLJBREPCCN555A", "NACIFPLDTPGOUNYGWRQARMW5A55T5L", "XFZQWIQYSXOHFYMIYVHASJX55555BJ", "KRONIYQLWIISBJKITDJVESF555YNZJ", "ZQNBLQOHBPIEOHZLVHJKKNEBJIHNLV", "JMTXUEAPP5ENIDUMZPCHZUKOOQZUIX", "SUCZC55555IEODPOQOVCUEQNRHOHIB", "ZCTHB5555555YATNHWYOICBTLJ555A", "LLHKG5QO5T555RYZFZUAXEYCRJ555N", "FPSJAYFT5N55GDYLATDMNYEEMY5FUG", "CJXDWOVB55ZURMDYXWNDR55ZHR5FEM", "JFHMOYJWLNYKAZPOVJZTK55WTFIEBW", "LQFZETXEMVYEGYNKZFKRL55JKYGPEN", "WSKAJLBXDUMLUVFQMFSVXR555WHMFE", "LIOIJIIWLGDDDYRUHNTEFZ55555KUS", "WCAVZTNPDNPXCGPCMPYCFF5V5OKNQA", "HALMTDDPYFXELKYYLWBEOX55Y555TG", "WTFMKFEOYULMFTRMCPDYOPQ5G555BG", "GGTZFBAMAYPLOKCWPUDXV5IFW55VDW", "EDVKZKLEUDBMKGMZGABFM555O55MHM", "TGHMGQHUGODQPSTSBZKWNO5KUO5WIF", "GUVQJUTSFWNVTCGBHAXH555555MNYJ"};
    int k = 5;
    int threshold = 62;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"18 68", "30 9", "44 16", "48 80", "52 55", "53 23"};
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    vector<string> photo = {"G999P99999999T9FU9P999W999MUF999QPG99N9P99X99O9", "99OKAPS999I9S999999C999999999H9X9999999T9H99999", "9999M9A999G9Y9999999A99999O9ZG9H9E99999G9N99999", "9999L99GPJ9W9PQO99999Z9999PPG9RW999Y999O9T99999", "99XU99LX999Y9999K9E99O9WTE9N9999NXZZ999S9H99SB9", "9A999X9999Z9F99R999LEWI99D99999999JQ99Y9JQOI9D9", "9EJZLF9A99K99LWHZPZ99R99O99999AFG9DVKE9Z9V999D9", "YJ99999999C9999I999999V99W9999T9GC99X99V9K999H9", "99NHAX99OJ999AJ999T9EZ9M9J99GSM99999I9Q999V9V9S", "9T99FR99N999999X99LPXZ99HTFOMWC999999W99B9JD9W9", "99P999OBA99DF999DDYZR999T9999IIMJ9999YKT999K99F", "9T99L9999KU99K9L9N9ZE9999WS99U99Y999TEPZT999M99", "Q99999999K9999DFNV99P99QC9Y999999A9L9A9BK9HS999", "XWM99999Y99999FI9999K9S9M999O99IC9K9999R9NMY999", "NJU9JV9N999V9999PJ999O9C9CT999SWU99X9999I9YH999", "ZS9U99E99Y9S99999V99S99BV99SUKYQW99K9999T9UDFBX", "Q999999UG9FO9DAYQ99N999O9M9RV9DYM99D999K9999L99", "9AE99F99999P9GRFUKH9999Y9999I9F99999FMJIY999D99", "999EW9V99999EY99S99999V9999B999A99999UPG9999R99", "9999L99FD9Z9UL99IGC999H9B9L9999YP999Z99JN99DG99", "999H999E9I9SD999999AH9JI9XGZXL99VWYAW999CCBO9U9", "99K999999IHRV99Y99QV9I999VV99D9PD999999TRZS99FX", "9S9P99L9E99E9LA9ZIQN99999U999E9Q9S9P99C999999F9", "J999BG9D99GCGRD999E9PL999J999HK99F9D9D9NF9C9999", "RJ999W9QJ9ZC99999PV999T99I9999D99W9KGHG99WDE999", "X99999Z9L999Y9Y999U99DUB9X99MFQ999BB9L9I9N9V999", "999OTY999B99A9PJ9Y999999B9TCM99X99Q9999BGF99UI9", "9999L9999I999XMJN9999GBD999I9999FX9999O99999K99", "99XV999XL99999B9999999CO9999JI999W9999I99999W99", "99V9999X9L9999NDMYM99Y9H999999P99WXG999LF9999K9", "W9R9999D9E999A9999D9DP99Z999BE999999J99I999999M", "9Q99999A9O999G999P9M99WP9X9R999999ZL9Q9RF999TBQ", "9E999CY999GYR99FD9PM99R99D99X99H99O999FXS9JDD9L", "9D9GV99999J999K9999HK99999S9NDN9Y9H999PXEXHF9B9", "9GO9J99999H999L99V9IQEUY9OC9Q9S9DG999S999WC99P9", "S9999LCIM9H99X99GQ99X9YU9U9K99U999DG9LO999FK999", "KS99999VQMZ9QCD9999Y9999M999MK999V99V9M9999O999", "999999999ZR99TBAI9W9DI999999I9IA9999Q9999K9T999", "99999999QRI9SLURGR9999Y99999W99U999JT99999G9999"};
    int k = 9;
    int threshold = 80;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"6 53", "9 73", "10 24", "11 59", "13 13", "13 35", "22 54", "24 29", "25 17", "29 69", "34 6", "39 54", "48 5", "48 74", "54 61", "58 25", "59 12", "64 60", "68 20", "68 33", "71 6", "73 57", "80 73", "85 58", "86 50", "89 8"};
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    vector<string> photo = {"WFAVY9C99BIE99999UYFWZTWLDJKCVSJ", "ZXM999999CZD99999JZHGFPBPYTZKUJT", "QCSH9U999DGL9ROWCVCOQHQMZWZXVBXG", "TJIISA999ILZFVEIDYIHKCVZILTPLSVE", "QMGH9999IOIM9HWQDOELU9E99GKTRURQ", "UDJOUCU99C999XDCTMVO99999YZRFGMV", "WXPKQTUYUUE9999HEHAE9PUTWW9TLEHU", "IQVMVOZKRQV99LCLCHEMEVQFGE99FFPM", "GSGUQTFJVFN9X999YY9ZPAT99K999XEK", "FNJQWHNFQQQ9H9999I999C999Q999SVJ", "JWCQXLQXLGKL99N9O999QCD999Q9S99N", "SWODUUYC99TQ99J99EFV9MGSGO9FE9GU", "W9BYTVBN999XUXOBK999999SJD9999ZG", "99C9MH9F999SHGHBXXCCA99RQVT999VQ", "99999Y999H9GJOXIXIWZR9JUH99999ON", "99999YR9JMVQTFHWWZWUMH9I9T9U999A", "99JKGQU9CLXJNUZYKHYZCP9999XGF9XR", "9E999DGQEDBXW99999X9B99AA9GBZ9CC", "9T99EXPDAQ999DRY9999J9WTVR99QJWQ", "9HA999VRKNAZ99YBSMCNJT99999O9UIW", "DVF99NXJGJK9999USTXAQVHKB9999DXA", "DPI9KIHQCDLF999XMXSUI9J9VZJZ9LBE", "XKXUNDAAECLK9999VQJEM999999KMRFT", "CRDQL9YBFJR9Y9L999AT99IP9OCVUPAN", "AWXAA999ZJV9HEUP9EUBI9VG99L9TEKF", "9ZO9Z999WB999999XUD9I9DLSEV9KNNW", "9Z99I9999I99T9EMYRI9RLKVE99999ZB", "99999Z9999L9NLHFR999999PYC99WLKC", "9RKDJ99SLG999Q999S99K99YH9EZLGZP", "999ZCS9X9B99G999HHBFX9PST9M9RJZH", "9W9DU9Q999UY99LGUMOGRLNH9999HXHM", "QMYGQ99999JI9LFD9B99XXK999JOMUTI", "9T9ZGE999A999CT99FZ9DPI9M99IGWOD", "9999MEAE99B9T9999C999SQWPH9RRLYU", "9A9MNK99W99I9999XE99QZ9BCIS99FSS", "BRLTWZW9Y9WYUQ9999QA99999KK99NSK", "SKPWY999O999RQYQAFY9999AVHM999GZ", "NEM99SCPWQ9RHJPBSSGBS99HN9WEDWBF", "QGU999DYLCYCAGPFE9EVUR9KN99UXMPJ", "9W99999LXGWCPRC999PPMLM9999IBHBZ", "9999MLROS999YWY999T99JII99CA9999", "99FTWDBHM9999ZKT9999V99999PLWP9D", "RL9H999PFA9ELZNC99S9BDS9J9DJR99T", "9999999PT999NOHG9WRWMYDCUBAGMPKT", "VY99999IP99CNRWUQJSCHXSOAUCPCIDX"};
    int k = 9;
    int threshold = 56;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5 32", "5 56", "7 79", "7 87", "12 6", "15 53", "17 28", "17 67", "26 53", "28 43", "29 20", "30 67", "36 82", "47 47", "48 80", "51 62", "56 28"};
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    vector<string> photo = {"11111", "1AAA1", "1A1A1", "1AAA1", "11111"};
    int k = 1;
    int threshold = 3;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5 5", "5 5"};
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    vector<string> photo = {};
    int k = 0;
    int threshold = 1;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {};
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    vector<string> photo = {};
    int k = 0;
    int threshold = 1;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"50 50"};
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    vector<string> photo = {"0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0", "0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X", "X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0X0"};
    int k = 0;
    int threshold = 1;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1 1", "1 5", "1 9", "1 13", "1 17", "1 21", "1 25", "1 29", "1 33", "1 37", "1 41", "1 45", "1 49", "1 53", "1 57", "1 61", "1 65", "1 69", "1 73", "1 77", "1 81", "1 85", "1 89", "1 93", "1 97", "3 3", "3 7", "3 11", "3 15", "3 19", "3 23", "3 27", "3 31", "3 35", "3 39", "3 43", "3 47", "3 51", "3 55", "3 59", "3 63", "3 67", "3 71", "3 75", "3 79", "3 83", "3 87", "3 91", "3 95", "3 99", "5 1", "5 5", "5 9", "5 13", "5 17", "5 21", "5 25", "5 29", "5 33", "5 37", "5 41", "5 45", "5 49", "5 53", "5 57", "5 61", "5 65", "5 69", "5 73", "5 77", "5 81", "5 85", "5 89", "5 93", "5 97", "7 3", "7 7", "7 11", "7 15", "7 19", "7 23", "7 27", "7 31", "7 35", "7 39", "7 43", "7 47", "7 51", "7 55", "7 59", "7 63", "7 67", "7 71", "7 75", "7 79", "7 83", "7 87", "7 91", "7 95", "7 99", "9 1", "9 5", "9 9", "9 13", "9 17", "9 21", "9 25", "9 29", "9 33", "9 37", "9 41", "9 45", "9 49", "9 53", "9 57", "9 61", "9 65", "9 69", "9 73", "9 77", "9 81", "9 85", "9 89", "9 93", "9 97", "11 3", "11 7", "11 11", "11 15", "11 19", "11 23", "11 27", "11 31", "11 35", "11 39", "11 43", "11 47", "11 51", "11 55", "11 59", "11 63", "11 67", "11 71", "11 75", "11 79", "11 83", "11 87", "11 91", "11 95", "11 99", "13 1", "13 5", "13 9", "13 13", "13 17", "13 21", "13 25", "13 29", "13 33", "13 37", "13 41", "13 45", "13 49", "13 53", "13 57", "13 61", "13 65", "13 69", "13 73", "13 77", "13 81", "13 85", "13 89", "13 93", "13 97", "15 3", "15 7", "15 11", "15 15", "15 19", "15 23", "15 27", "15 31", "15 35", "15 39", "15 43", "15 47", "15 51", "15 55", "15 59", "15 63", "15 67", "15 71", "15 75", "15 79", "15 83", "15 87", "15 91", "15 95", "15 99", "17 1", "17 5", "17 9", "17 13", "17 17", "17 21", "17 25", "17 29", "17 33", "17 37", "17 41", "17 45", "17 49", "17 53", "17 57", "17 61", "17 65", "17 69", "17 73", "17 77", "17 81", "17 85", "17 89", "17 93", "17 97", "19 3", "19 7", "19 11", "19 15", "19 19", "19 23", "19 27", "19 31", "19 35", "19 39", "19 43", "19 47", "19 51", "19 55", "19 59", "19 63", "19 67", "19 71", "19 75", "19 79", "19 83", "19 87", "19 91", "19 95", "19 99", "21 1", "21 5", "21 9", "21 13", "21 17", "21 21", "21 25", "21 29", "21 33", "21 37", "21 41", "21 45", "21 49", "21 53", "21 57", "21 61", "21 65", "21 69", "21 73", "21 77", "21 81", "21 85", "21 89", "21 93", "21 97", "23 3", "23 7", "23 11", "23 15", "23 19", "23 23", "23 27", "23 31", "23 35", "23 39", "23 43", "23 47", "23 51", "23 55", "23 59", "23 63", "23 67", "23 71", "23 75", "23 79", "23 83", "23 87", "23 91", "23 95", "23 99", "25 1", "25 5", "25 9", "25 13", "25 17", "25 21", "25 25", "25 29", "25 33", "25 37", "25 41", "25 45", "25 49", "25 53", "25 57", "25 61", "25 65", "25 69", "25 73", "25 77", "25 81", "25 85", "25 89", "25 93", "25 97", "27 3", "27 7", "27 11", "27 15", "27 19", "27 23", "27 27", "27 31", "27 35", "27 39", "27 43", "27 47", "27 51", "27 55", "27 59", "27 63", "27 67", "27 71", "27 75", "27 79", "27 83", "27 87", "27 91", "27 95", "27 99", "29 1", "29 5", "29 9", "29 13", "29 17", "29 21", "29 25", "29 29", "29 33", "29 37", "29 41", "29 45", "29 49", "29 53", "29 57", "29 61", "29 65", "29 69", "29 73", "29 77", "29 81", "29 85", "29 89", "29 93", "29 97", "31 3", "31 7", "31 11", "31 15", "31 19", "31 23", "31 27", "31 31", "31 35", "31 39", "31 43", "31 47", "31 51", "31 55", "31 59", "31 63", "31 67", "31 71", "31 75", "31 79", "31 83", "31 87", "31 91", "31 95", "31 99", "33 1", "33 5", "33 9", "33 13", "33 17", "33 21", "33 25", "33 29", "33 33", "33 37", "33 41", "33 45", "33 49", "33 53", "33 57", "33 61", "33 65", "33 69", "33 73", "33 77", "33 81", "33 85", "33 89", "33 93", "33 97", "35 3", "35 7", "35 11", "35 15", "35 19", "35 23", "35 27", "35 31", "35 35", "35 39", "35 43", "35 47", "35 51", "35 55", "35 59", "35 63", "35 67", "35 71", "35 75", "35 79", "35 83", "35 87", "35 91", "35 95", "35 99", "37 1", "37 5", "37 9", "37 13", "37 17", "37 21", "37 25", "37 29", "37 33", "37 37", "37 41", "37 45", "37 49", "37 53", "37 57", "37 61", "37 65", "37 69", "37 73", "37 77", "37 81", "37 85", "37 89", "37 93", "37 97", "39 3", "39 7", "39 11", "39 15", "39 19", "39 23", "39 27", "39 31", "39 35", "39 39", "39 43", "39 47", "39 51", "39 55", "39 59", "39 63", "39 67", "39 71", "39 75", "39 79", "39 83", "39 87", "39 91", "39 95", "39 99", "41 1", "41 5", "41 9", "41 13", "41 17", "41 21", "41 25", "41 29", "41 33", "41 37", "41 41", "41 45", "41 49", "41 53", "41 57", "41 61", "41 65", "41 69", "41 73", "41 77", "41 81", "41 85", "41 89", "41 93", "41 97", "43 3", "43 7", "43 11", "43 15", "43 19", "43 23", "43 27", "43 31", "43 35", "43 39", "43 43", "43 47", "43 51", "43 55", "43 59", "43 63", "43 67", "43 71", "43 75", "43 79", "43 83", "43 87", "43 91", "43 95", "43 99", "45 1", "45 5", "45 9", "45 13", "45 17", "45 21", "45 25", "45 29", "45 33", "45 37", "45 41", "45 45", "45 49", "45 53", "45 57", "45 61", "45 65", "45 69", "45 73", "45 77", "45 81", "45 85", "45 89", "45 93", "45 97", "47 3", "47 7", "47 11", "47 15", "47 19", "47 23", "47 27", "47 31", "47 35", "47 39", "47 43", "47 47", "47 51", "47 55", "47 59", "47 63", "47 67", "47 71", "47 75", "47 79", "47 83", "47 87", "47 91", "47 95", "47 99", "49 1", "49 5", "49 9", "49 13", "49 17", "49 21", "49 25", "49 29", "49 33", "49 37", "49 41", "49 45", "49 49", "49 53", "49 57", "49 61", "49 65", "49 69", "49 73", "49 77", "49 81", "49 85", "49 89", "49 93", "49 97", "51 3", "51 7", "51 11", "51 15", "51 19", "51 23", "51 27", "51 31", "51 35", "51 39", "51 43", "51 47", "51 51", "51 55", "51 59", "51 63", "51 67", "51 71", "51 75", "51 79", "51 83", "51 87", "51 91", "51 95", "51 99", "53 1", "53 5", "53 9", "53 13", "53 17", "53 21", "53 25", "53 29", "53 33", "53 37", "53 41", "53 45", "53 49", "53 53", "53 57", "53 61", "53 65", "53 69", "53 73", "53 77", "53 81", "53 85", "53 89", "53 93", "53 97", "55 3", "55 7", "55 11", "55 15", "55 19", "55 23", "55 27", "55 31", "55 35", "55 39", "55 43", "55 47", "55 51", "55 55", "55 59", "55 63", "55 67", "55 71", "55 75", "55 79", "55 83", "55 87", "55 91", "55 95", "55 99", "57 1", "57 5", "57 9", "57 13", "57 17", "57 21", "57 25", "57 29", "57 33", "57 37", "57 41", "57 45", "57 49", "57 53", "57 57", "57 61", "57 65", "57 69", "57 73", "57 77", "57 81", "57 85", "57 89", "57 93", "57 97", "59 3", "59 7", "59 11", "59 15", "59 19", "59 23", "59 27", "59 31", "59 35", "59 39", "59 43", "59 47", "59 51", "59 55", "59 59", "59 63", "59 67", "59 71", "59 75", "59 79", "59 83", "59 87", "59 91", "59 95", "59 99", "61 1", "61 5", "61 9", "61 13", "61 17", "61 21", "61 25", "61 29", "61 33", "61 37", "61 41", "61 45", "61 49", "61 53", "61 57", "61 61", "61 65", "61 69", "61 73", "61 77", "61 81", "61 85", "61 89", "61 93", "61 97", "63 3", "63 7", "63 11", "63 15", "63 19", "63 23", "63 27", "63 31", "63 35", "63 39", "63 43", "63 47", "63 51", "63 55", "63 59", "63 63", "63 67", "63 71", "63 75", "63 79", "63 83", "63 87", "63 91", "63 95", "63 99", "65 1", "65 5", "65 9", "65 13", "65 17", "65 21", "65 25", "65 29", "65 33", "65 37", "65 41", "65 45", "65 49", "65 53", "65 57", "65 61", "65 65", "65 69", "65 73", "65 77", "65 81", "65 85", "65 89", "65 93", "65 97", "67 3", "67 7", "67 11", "67 15", "67 19", "67 23", "67 27", "67 31", "67 35", "67 39", "67 43", "67 47", "67 51", "67 55", "67 59", "67 63", "67 67", "67 71", "67 75", "67 79", "67 83", "67 87", "67 91", "67 95", "67 99", "69 1", "69 5", "69 9", "69 13", "69 17", "69 21", "69 25", "69 29", "69 33", "69 37", "69 41", "69 45", "69 49", "69 53", "69 57", "69 61", "69 65", "69 69", "69 73", "69 77", "69 81", "69 85", "69 89", "69 93", "69 97", "71 3", "71 7", "71 11", "71 15", "71 19", "71 23", "71 27", "71 31", "71 35", "71 39", "71 43", "71 47", "71 51", "71 55", "71 59", "71 63", "71 67", "71 71", "71 75", "71 79", "71 83", "71 87", "71 91", "71 95", "71 99", "73 1", "73 5", "73 9", "73 13", "73 17", "73 21", "73 25", "73 29", "73 33", "73 37", "73 41", "73 45", "73 49", "73 53", "73 57", "73 61", "73 65", "73 69", "73 73", "73 77", "73 81", "73 85", "73 89", "73 93", "73 97", "75 3", "75 7", "75 11", "75 15", "75 19", "75 23", "75 27", "75 31", "75 35", "75 39", "75 43", "75 47", "75 51", "75 55", "75 59", "75 63", "75 67", "75 71", "75 75", "75 79", "75 83", "75 87", "75 91", "75 95", "75 99", "77 1", "77 5", "77 9", "77 13", "77 17", "77 21", "77 25", "77 29", "77 33", "77 37", "77 41", "77 45", "77 49", "77 53", "77 57", "77 61", "77 65", "77 69", "77 73", "77 77", "77 81", "77 85", "77 89", "77 93", "77 97", "79 3", "79 7", "79 11", "79 15", "79 19", "79 23", "79 27", "79 31", "79 35", "79 39", "79 43", "79 47", "79 51", "79 55", "79 59", "79 63", "79 67", "79 71", "79 75", "79 79", "79 83", "79 87", "79 91", "79 95", "79 99", "81 1", "81 5", "81 9", "81 13", "81 17", "81 21", "81 25", "81 29", "81 33", "81 37", "81 41", "81 45", "81 49", "81 53", "81 57", "81 61", "81 65", "81 69", "81 73", "81 77", "81 81", "81 85", "81 89", "81 93", "81 97", "83 3", "83 7", "83 11", "83 15", "83 19", "83 23", "83 27", "83 31", "83 35", "83 39", "83 43", "83 47", "83 51", "83 55", "83 59", "83 63", "83 67", "83 71", "83 75", "83 79", "83 83", "83 87", "83 91", "83 95", "83 99", "85 1", "85 5", "85 9", "85 13", "85 17", "85 21", "85 25", "85 29", "85 33", "85 37", "85 41", "85 45", "85 49", "85 53", "85 57", "85 61", "85 65", "85 69", "85 73", "85 77", "85 81", "85 85", "85 89", "85 93", "85 97", "87 3", "87 7", "87 11", "87 15", "87 19", "87 23", "87 27", "87 31", "87 35", "87 39", "87 43", "87 47", "87 51", "87 55", "87 59", "87 63", "87 67", "87 71", "87 75", "87 79", "87 83", "87 87", "87 91", "87 95", "87 99", "89 1", "89 5", "89 9", "89 13", "89 17", "89 21", "89 25", "89 29", "89 33", "89 37", "89 41", "89 45", "89 49", "89 53", "89 57", "89 61", "89 65", "89 69", "89 73", "89 77", "89 81", "89 85", "89 89", "89 93", "89 97", "91 3", "91 7", "91 11", "91 15", "91 19", "91 23", "91 27", "91 31", "91 35", "91 39", "91 43", "91 47", "91 51", "91 55", "91 59", "91 63", "91 67", "91 71", "91 75", "91 79", "91 83", "91 87", "91 91", "91 95", "91 99", "93 1", "93 5", "93 9", "93 13", "93 17", "93 21", "93 25", "93 29", "93 33", "93 37", "93 41", "93 45", "93 49", "93 53", "93 57", "93 61", "93 65", "93 69", "93 73", "93 77", "93 81", "93 85", "93 89", "93 93", "93 97", "95 3", "95 7", "95 11", "95 15", "95 19", "95 23", "95 27", "95 31", "95 35", "95 39", "95 43", "95 47", "95 51", "95 55", "95 59", "95 63", "95 67", "95 71", "95 75", "95 79", "95 83", "95 87", "95 91", "95 95", "95 99", "97 1", "97 5", "97 9", "97 13", "97 17", "97 21", "97 25", "97 29", "97 33", "97 37", "97 41", "97 45", "97 49", "97 53", "97 57", "97 61", "97 65", "97 69", "97 73", "97 77", "97 81", "97 85", "97 89", "97 93", "97 97", "99 3", "99 7", "99 11", "99 15", "99 19", "99 23", "99 27", "99 31", "99 35", "99 39", "99 43", "99 47", "99 51", "99 55", "99 59", "99 63", "99 67", "99 71", "99 75", "99 79", "99 83", "99 87", "99 91", "99 95", "99 99"};
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    vector<string> photo = {"X11111111111111111X", "X1XXXXXXXXXXXXXXX1X", "X1X1111111111111X1X", "X1X1XXXXXXXXXXX1X1X", "X1X1X111111111X1X1X", "X1X1XXXXXXXXXXX1X1X", "X1X1111111111111X1X", "X1XXXXXXXXXXXXXXX1X", "X11111111111111111X"};
    int k = 1;
    int threshold = 1;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"19 9", "19 9", "19 9"};
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    vector<string> photo = {"X11111111111111111X", "X1XXXXXXX1XXXXXXX1X", "X1X11111X1X11111X1X", "X1XX11X11X11X11XX1X", "X111X111X1X111X111X", "X1XX11X11X11X11XX1X", "X1X1111111111111X1X", "X1XXXXXXXXXXXXXXX1X", "X11111111111111111X"};
    int k = 1;
    int threshold = 1;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"19 9", "19 9", "19 9"};
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    vector<string> photo = {"11111XX1111111XXXXX", "SXXX1X11XXXX111XXXX", "SX1X1X1XXXXX111XXXX", "SXXX1X1XXX1XXX1XXXX", "11111X111XXXXX1XXXX", "XXXXXXX11111111XXXX", "XXXXXXXXX11111XXXXX"};
    int k = 1;
    int threshold = 1;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"5 5", "5 5", "21 7", "21 7"};
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    vector<string> photo = {"8D88888J8L8E888", "88NKMG8N8E8JI88", "888NS8EU88HN8EO", "LUQ888A8TH8OIH8", "888QJ88R8SG88TY", "88ZQV88B88OUZ8O", "FQ88WF8Q8GG88B8", "8S888HGSB8FT8S8", "8MX88D88888T8K8", "8S8A88MGVDG8XK8", "M88S8B8I8M88J8N", "8W88X88ZT8KA8I8", "88SQGB8I8J88W88", "U88H8NI8CZB88B8", "8PK8H8T8888TQR8"};
    int k = 8;
    int threshold = 9;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1 17", "3 3", "3 10", "3 25", "5 21", "8 17", "9 2", "10 9", "12 23", "17 16", "18 3", "18 11", "18 28", "22 20", "23 26", "24 15", "27 2", "28 26", "29 16"};
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    vector<string> photo = {"33JUBU33", "3U3O4433", "O33P44NB", "PO3NSDP3", "VNDSD333", "OIVNFD33"};
    int k = 3;
    int threshold = 17;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"13 9"};
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    vector<string> photo = {};
    int k = 1;
    int threshold = 1;
    PlayerExtraction* pObj = new PlayerExtraction();
    clock_t start = clock();
    vector<string> result = pObj->extractPlayers(photo, k, threshold);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1 1", "1 5", "1 9", "1 13", "1 17", "1 21", "1 25", "1 29", "1 33", "1 37", "1 41", "1 45", "1 49", "1 53", "1 57", "1 61", "1 65", "1 69", "1 73", "1 77", "1 81", "1 85", "1 89", "1 93", "1 97", "3 3", "3 7", "3 11", "3 15", "3 19", "3 23", "3 27", "3 31", "3 35", "3 39", "3 43", "3 47", "3 51", "3 55", "3 59", "3 63", "3 67", "3 71", "3 75", "3 79", "3 83", "3 87", "3 91", "3 95", "3 99", "5 1", "5 5", "5 9", "5 13", "5 17", "5 21", "5 25", "5 29", "5 33", "5 37", "5 41", "5 45", "5 49", "5 53", "5 57", "5 61", "5 65", "5 69", "5 73", "5 77", "5 81", "5 85", "5 89", "5 93", "5 97", "7 3", "7 7", "7 11", "7 15", "7 19", "7 23", "7 27", "7 31", "7 35", "7 39", "7 43", "7 47", "7 51", "7 55", "7 59", "7 63", "7 67", "7 71", "7 75", "7 79", "7 83", "7 87", "7 91", "7 95", "7 99", "9 1", "9 5", "9 9", "9 13", "9 17", "9 21", "9 25", "9 29", "9 33", "9 37", "9 41", "9 45", "9 49", "9 53", "9 57", "9 61", "9 65", "9 69", "9 73", "9 77", "9 81", "9 85", "9 89", "9 93", "9 97", "11 3", "11 7", "11 11", "11 15", "11 19", "11 23", "11 27", "11 31", "11 35", "11 39", "11 43", "11 47", "11 51", "11 55", "11 59", "11 63", "11 67", "11 71", "11 75", "11 79", "11 83", "11 87", "11 91", "11 95", "11 99", "13 1", "13 5", "13 9", "13 13", "13 17", "13 21", "13 25", "13 29", "13 33", "13 37", "13 41", "13 45", "13 49", "13 53", "13 57", "13 61", "13 65", "13 69", "13 73", "13 77", "13 81", "13 85", "13 89", "13 93", "13 97", "15 3", "15 7", "15 11", "15 15", "15 19", "15 23", "15 27", "15 31", "15 35", "15 39", "15 43", "15 47", "15 51", "15 55", "15 59", "15 63", "15 67", "15 71", "15 75", "15 79", "15 83", "15 87", "15 91", "15 95", "15 99", "17 1", "17 5", "17 9", "17 13", "17 17", "17 21", "17 25", "17 29", "17 33", "17 37", "17 41", "17 45", "17 49", "17 53", "17 57", "17 61", "17 65", "17 69", "17 73", "17 77", "17 81", "17 85", "17 89", "17 93", "17 97", "19 3", "19 7", "19 11", "19 15", "19 19", "19 23", "19 27", "19 31", "19 35", "19 39", "19 43", "19 47", "19 51", "19 55", "19 59", "19 63", "19 67", "19 71", "19 75", "19 79", "19 83", "19 87", "19 91", "19 95", "19 99", "21 1", "21 5", "21 9", "21 13", "21 17", "21 21", "21 25", "21 29", "21 33", "21 37", "21 41", "21 45", "21 49", "21 53", "21 57", "21 61", "21 65", "21 69", "21 73", "21 77", "21 81", "21 85", "21 89", "21 93", "21 97", "23 3", "23 7", "23 11", "23 15", "23 19", "23 23", "23 27", "23 31", "23 35", "23 39", "23 43", "23 47", "23 51", "23 55", "23 59", "23 63", "23 67", "23 71", "23 75", "23 79", "23 83", "23 87", "23 91", "23 95", "23 99", "25 1", "25 5", "25 9", "25 13", "25 17", "25 21", "25 25", "25 29", "25 33", "25 37", "25 41", "25 45", "25 49", "25 53", "25 57", "25 61", "25 65", "25 69", "25 73", "25 77", "25 81", "25 85", "25 89", "25 93", "25 97", "27 3", "27 7", "27 11", "27 15", "27 19", "27 23", "27 27", "27 31", "27 35", "27 39", "27 43", "27 47", "27 51", "27 55", "27 59", "27 63", "27 67", "27 71", "27 75", "27 79", "27 83", "27 87", "27 91", "27 95", "27 99", "29 1", "29 5", "29 9", "29 13", "29 17", "29 21", "29 25", "29 29", "29 33", "29 37", "29 41", "29 45", "29 49", "29 53", "29 57", "29 61", "29 65", "29 69", "29 73", "29 77", "29 81", "29 85", "29 89", "29 93", "29 97", "31 3", "31 7", "31 11", "31 15", "31 19", "31 23", "31 27", "31 31", "31 35", "31 39", "31 43", "31 47", "31 51", "31 55", "31 59", "31 63", "31 67", "31 71", "31 75", "31 79", "31 83", "31 87", "31 91", "31 95", "31 99", "33 1", "33 5", "33 9", "33 13", "33 17", "33 21", "33 25", "33 29", "33 33", "33 37", "33 41", "33 45", "33 49", "33 53", "33 57", "33 61", "33 65", "33 69", "33 73", "33 77", "33 81", "33 85", "33 89", "33 93", "33 97", "35 3", "35 7", "35 11", "35 15", "35 19", "35 23", "35 27", "35 31", "35 35", "35 39", "35 43", "35 47", "35 51", "35 55", "35 59", "35 63", "35 67", "35 71", "35 75", "35 79", "35 83", "35 87", "35 91", "35 95", "35 99", "37 1", "37 5", "37 9", "37 13", "37 17", "37 21", "37 25", "37 29", "37 33", "37 37", "37 41", "37 45", "37 49", "37 53", "37 57", "37 61", "37 65", "37 69", "37 73", "37 77", "37 81", "37 85", "37 89", "37 93", "37 97", "39 3", "39 7", "39 11", "39 15", "39 19", "39 23", "39 27", "39 31", "39 35", "39 39", "39 43", "39 47", "39 51", "39 55", "39 59", "39 63", "39 67", "39 71", "39 75", "39 79", "39 83", "39 87", "39 91", "39 95", "39 99", "41 1", "41 5", "41 9", "41 13", "41 17", "41 21", "41 25", "41 29", "41 33", "41 37", "41 41", "41 45", "41 49", "41 53", "41 57", "41 61", "41 65", "41 69", "41 73", "41 77", "41 81", "41 85", "41 89", "41 93", "41 97", "43 3", "43 7", "43 11", "43 15", "43 19", "43 23", "43 27", "43 31", "43 35", "43 39", "43 43", "43 47", "43 51", "43 55", "43 59", "43 63", "43 67", "43 71", "43 75", "43 79", "43 83", "43 87", "43 91", "43 95", "43 99", "45 1", "45 5", "45 9", "45 13", "45 17", "45 21", "45 25", "45 29", "45 33", "45 37", "45 41", "45 45", "45 49", "45 53", "45 57", "45 61", "45 65", "45 69", "45 73", "45 77", "45 81", "45 85", "45 89", "45 93", "45 97", "47 3", "47 7", "47 11", "47 15", "47 19", "47 23", "47 27", "47 31", "47 35", "47 39", "47 43", "47 47", "47 51", "47 55", "47 59", "47 63", "47 67", "47 71", "47 75", "47 79", "47 83", "47 87", "47 91", "47 95", "47 99", "49 1", "49 5", "49 9", "49 13", "49 17", "49 21", "49 25", "49 29", "49 33", "49 37", "49 41", "49 45", "49 49", "49 53", "49 57", "49 61", "49 65", "49 69", "49 73", "49 77", "49 81", "49 85", "49 89", "49 93", "49 97", "51 3", "51 7", "51 11", "51 15", "51 19", "51 23", "51 27", "51 31", "51 35", "51 39", "51 43", "51 47", "51 51", "51 55", "51 59", "51 63", "51 67", "51 71", "51 75", "51 79", "51 83", "51 87", "51 91", "51 95", "51 99", "53 1", "53 5", "53 9", "53 13", "53 17", "53 21", "53 25", "53 29", "53 33", "53 37", "53 41", "53 45", "53 49", "53 53", "53 57", "53 61", "53 65", "53 69", "53 73", "53 77", "53 81", "53 85", "53 89", "53 93", "53 97", "55 3", "55 7", "55 11", "55 15", "55 19", "55 23", "55 27", "55 31", "55 35", "55 39", "55 43", "55 47", "55 51", "55 55", "55 59", "55 63", "55 67", "55 71", "55 75", "55 79", "55 83", "55 87", "55 91", "55 95", "55 99", "57 1", "57 5", "57 9", "57 13", "57 17", "57 21", "57 25", "57 29", "57 33", "57 37", "57 41", "57 45", "57 49", "57 53", "57 57", "57 61", "57 65", "57 69", "57 73", "57 77", "57 81", "57 85", "57 89", "57 93", "57 97", "59 3", "59 7", "59 11", "59 15", "59 19", "59 23", "59 27", "59 31", "59 35", "59 39", "59 43", "59 47", "59 51", "59 55", "59 59", "59 63", "59 67", "59 71", "59 75", "59 79", "59 83", "59 87", "59 91", "59 95", "59 99", "61 1", "61 5", "61 9", "61 13", "61 17", "61 21", "61 25", "61 29", "61 33", "61 37", "61 41", "61 45", "61 49", "61 53", "61 57", "61 61", "61 65", "61 69", "61 73", "61 77", "61 81", "61 85", "61 89", "61 93", "61 97", "63 3", "63 7", "63 11", "63 15", "63 19", "63 23", "63 27", "63 31", "63 35", "63 39", "63 43", "63 47", "63 51", "63 55", "63 59", "63 63", "63 67", "63 71", "63 75", "63 79", "63 83", "63 87", "63 91", "63 95", "63 99", "65 1", "65 5", "65 9", "65 13", "65 17", "65 21", "65 25", "65 29", "65 33", "65 37", "65 41", "65 45", "65 49", "65 53", "65 57", "65 61", "65 65", "65 69", "65 73", "65 77", "65 81", "65 85", "65 89", "65 93", "65 97", "67 3", "67 7", "67 11", "67 15", "67 19", "67 23", "67 27", "67 31", "67 35", "67 39", "67 43", "67 47", "67 51", "67 55", "67 59", "67 63", "67 67", "67 71", "67 75", "67 79", "67 83", "67 87", "67 91", "67 95", "67 99", "69 1", "69 5", "69 9", "69 13", "69 17", "69 21", "69 25", "69 29", "69 33", "69 37", "69 41", "69 45", "69 49", "69 53", "69 57", "69 61", "69 65", "69 69", "69 73", "69 77", "69 81", "69 85", "69 89", "69 93", "69 97", "71 3", "71 7", "71 11", "71 15", "71 19", "71 23", "71 27", "71 31", "71 35", "71 39", "71 43", "71 47", "71 51", "71 55", "71 59", "71 63", "71 67", "71 71", "71 75", "71 79", "71 83", "71 87", "71 91", "71 95", "71 99", "73 1", "73 5", "73 9", "73 13", "73 17", "73 21", "73 25", "73 29", "73 33", "73 37", "73 41", "73 45", "73 49", "73 53", "73 57", "73 61", "73 65", "73 69", "73 73", "73 77", "73 81", "73 85", "73 89", "73 93", "73 97", "75 3", "75 7", "75 11", "75 15", "75 19", "75 23", "75 27", "75 31", "75 35", "75 39", "75 43", "75 47", "75 51", "75 55", "75 59", "75 63", "75 67", "75 71", "75 75", "75 79", "75 83", "75 87", "75 91", "75 95", "75 99", "77 1", "77 5", "77 9", "77 13", "77 17", "77 21", "77 25", "77 29", "77 33", "77 37", "77 41", "77 45", "77 49", "77 53", "77 57", "77 61", "77 65", "77 69", "77 73", "77 77", "77 81", "77 85", "77 89", "77 93", "77 97", "79 3", "79 7", "79 11", "79 15", "79 19", "79 23", "79 27", "79 31", "79 35", "79 39", "79 43", "79 47", "79 51", "79 55", "79 59", "79 63", "79 67", "79 71", "79 75", "79 79", "79 83", "79 87", "79 91", "79 95", "79 99", "81 1", "81 5", "81 9", "81 13", "81 17", "81 21", "81 25", "81 29", "81 33", "81 37", "81 41", "81 45", "81 49", "81 53", "81 57", "81 61", "81 65", "81 69", "81 73", "81 77", "81 81", "81 85", "81 89", "81 93", "81 97", "83 3", "83 7", "83 11", "83 15", "83 19", "83 23", "83 27", "83 31", "83 35", "83 39", "83 43", "83 47", "83 51", "83 55", "83 59", "83 63", "83 67", "83 71", "83 75", "83 79", "83 83", "83 87", "83 91", "83 95", "83 99", "85 1", "85 5", "85 9", "85 13", "85 17", "85 21", "85 25", "85 29", "85 33", "85 37", "85 41", "85 45", "85 49", "85 53", "85 57", "85 61", "85 65", "85 69", "85 73", "85 77", "85 81", "85 85", "85 89", "85 93", "85 97", "87 3", "87 7", "87 11", "87 15", "87 19", "87 23", "87 27", "87 31", "87 35", "87 39", "87 43", "87 47", "87 51", "87 55", "87 59", "87 63", "87 67", "87 71", "87 75", "87 79", "87 83", "87 87", "87 91", "87 95", "87 99", "89 1", "89 5", "89 9", "89 13", "89 17", "89 21", "89 25", "89 29", "89 33", "89 37", "89 41", "89 45", "89 49", "89 53", "89 57", "89 61", "89 65", "89 69", "89 73", "89 77", "89 81", "89 85", "89 89", "89 93", "89 97", "91 3", "91 7", "91 11", "91 15", "91 19", "91 23", "91 27", "91 31", "91 35", "91 39", "91 43", "91 47", "91 51", "91 55", "91 59", "91 63", "91 67", "91 71", "91 75", "91 79", "91 83", "91 87", "91 91", "91 95", "91 99", "93 1", "93 5", "93 9", "93 13", "93 17", "93 21", "93 25", "93 29", "93 33", "93 37", "93 41", "93 45", "93 49", "93 53", "93 57", "93 61", "93 65", "93 69", "93 73", "93 77", "93 81", "93 85", "93 89", "93 93", "93 97", "95 3", "95 7", "95 11", "95 15", "95 19", "95 23", "95 27", "95 31", "95 35", "95 39", "95 43", "95 47", "95 51", "95 55", "95 59", "95 63", "95 67", "95 71", "95 75", "95 79", "95 83", "95 87", "95 91", "95 95", "95 99", "97 1", "97 5", "97 9", "97 13", "97 17", "97 21", "97 25", "97 29", "97 33", "97 37", "97 41", "97 45", "97 49", "97 53", "97 57", "97 61", "97 65", "97 69", "97 73", "97 77", "97 81", "97 85", "97 89", "97 93", "97 97", "99 3", "99 7", "99 11", "99 15", "99 19", "99 23", "99 27", "99 31", "99 35", "99 39", "99 43", "99 47", "99 51", "99 55", "99 59", "99 63", "99 67", "99 71", "99 75", "99 79", "99 83", "99 87", "99 91", "99 95", "99 99"};
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=251074&rd=10793&pm=8225
********************************************************************************
#include <string>
#include <vector>
#include <map>
#include <cstdlib>
#include <cstring>
#include <cassert>
#include <set>
#include <iostream>
#include <sstream>
#include <cstddef>
#include <algorithm>
#include <utility>
#include <iterator>
#include <numeric>
#include <list>
#include <complex>
 
using namespace std;
 
typedef vector<int> vi;
typedef vector<string> vs;
typedef long long ll;
typedef complex<double> pnt;
typedef pair<int, int> pii;
 
#define RA(x) (x).begin(), (x).end()
#define FE(i, x) for (typeof((x).begin()) i = (x).begin(); i != (x).end(); i++)
#define SZ(x) ((int) (x).size())
 
 
class PlayerExtraction
{
public:
    vector <string> extractPlayers(vector <string> photo, int k, int threshold);
};
 
static int R, C;
static vs photo;
 
static const int dr[4] = {0, 1, 0, -1};
static const int dc[4] = {1, 0, -1, 0};
 
struct bbox
{
    int r1, c1, r2, c2;
 
    bbox() : r1(INT_MAX), c1(INT_MAX), r2(INT_MIN), c2(INT_MIN) {}
};
 
static char &get(int r, int c)
{
    static char out = 'X';
    if (r < 0 || r >= R || c < 0 || c >= C)
        return out;
    else
        return photo[r][c];
}
 
static int recurse(int r, int c, char k, bbox &b)
{
    if (get(r, c) == k)
    {
        int ans = 1;
        get(r, c) = ' ';
        b.r1 <?= r;
        b.r2 >?= r;
        b.c1 <?= c;
        b.c2 >?= c;
        for (int d = 0; d < 4; d++)
            ans += recurse(r + dr[d], c + dc[d], k, b);
        return ans;
    }
    else
        return 0;
}
 
vector <string> PlayerExtraction::extractPlayers(vector <string> photo, int k, int threshold)
{
    vector<pii> ans;
    vs out;
 
    ::photo = photo;
    R = photo.size();
    C = photo[0].size();
    for (int i = 0; i < R; i++)
        for (int j = 0; j < C; j++)
        {
            bbox b;
            if (recurse(i, j, k + '0', b) * 4 >= threshold)
                ans.push_back(pii((b.c1 + b.c2 + 1), (b.r1 + b.r2 + 1)));
        }
    sort(RA(ans));
    for (int i = 0; i < SZ(ans); i++)
    {
        ostringstream s;
        s << ans[i].first << " " << ans[i].second;
        out.push_back(s.str());
    }
    return out;
}
 
 
// Powered by FileEdit

********************************************************************************
*******************************************************************************/