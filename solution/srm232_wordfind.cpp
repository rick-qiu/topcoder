/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=3972
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class WordFind {
public:
    vector<string> findWords(vector<string> grid, vector<string> wordList);
};

vector<string> WordFind::findWords(vector<string> grid, vector<string> wordList) {
    vector<string> ret;
    return ret;
}


int test0() {
    vector<string> grid = {"TEST", "GOAT", "BOAT"};
    vector<string> wordList = {"GOAT", "BOAT", "TEST"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1 0", "2 0", "0 0"};
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<string> grid = {};
    vector<string> wordList = {"Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y", "Y"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""};
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<string> grid = {"SXXX", "XQXM", "XXLA", "XXXR"};
    vector<string> wordList = {"SQL", "RAM"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0 0", ""};
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<string> grid = {"PIYSRJFWOZ", "XMVFJYHKCX", "DYQCDELPKT", "BYYEPEDMLJ", "PJGXDHCZKC", "WCAWDYVSYP", "PFDATYSKMC", "OLCOLBOHEF", "ISCFLMSSVO", "UZALICRRGS", "ZQYWTPJGFV", "AJQHRMMJUG", "VUUATXYAIJ", "BIRTBMFMYR", "HJBGBXMHKB", "UJKJXYYEMO", "KCDPUWHACH", "CRYMRRFNMU", "GABUHJBCUT", "HNNWHSLPZG", "DZSNHRGITE", "NJGWCHCUDS", "LEUPKSMBVK", "QAXRSNOMGB", "IYPHOBFSMS", "ACBZJRQQPV", "CWPACIZXVL", "BQQVMTHEWU", "DDQNUSMMYS", "OJJNHCJALY", "HBBWIWFDQS"};
    vector<string> wordList = {"SNHRGIT", "XPCR", "E", "MGVD", "ZUIOPWPBDX", "K", "RJFW", "MM", "I", "VSY", "AC", "BSHW", "KPU", "Q", "QJ", "N", "Z", "YZDEJ", "CDPU", "WCYAEJZNARCJJIUJQZSLFC", "D", "Z", "DY"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"20 2", "", "2 5", "", "", "1 7", "0 4", "11 5", "0 1", "5 6", "16 7", "", "", "2 2", "10 1", "17 7", "0 9", "", "16 1", "", "2 0", "0 9", "2 0"};
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<string> grid = {"HWKJMQJYLBROBVMVKNPIPHSDBHQUEBCEXHNCXNGOSTXW", "IOYPXYSVWHLXCKSDLICXQQAAAPWFCKNEWOVHSONIIXNU", "YFCUBURDZIQTWTNCCLJBUTKDLTXNAAGYGAPJBKCCMWEA", "LWLIHEFHDAZFPXOAZQYOLIYPLBQXQNKLVXYCECULWHVT", "SMHNHOWTDMZCHRPSBUDRASINHPYEALGXHVYQXTGSUXLN", "PCHRFBCJBGVUDBKESKMTXJFBWBLOZZDNJIXZQTDEZJTB", "HXACWCWNBNXLGMRMGEUTREVTXGYUUAJLGNMPPJPJHRVK", "AWGQBVHXOQGEMYKUOCZDPIQHXFBKDGTRHCMEAKIPBONJ", "ZGGYIMWHUTGXULLUCRLVBDPFQGSNDWWNWPGUCDHALEDA", "IABTTISOIVXZKVFHWLPURJFBWXOOAZZJOWGJQPHNDDRO", "XNQOIFAIYZWKSSXABQRNLVFUFXAKNYFEQSTBLDJGGWBM", "RMRNDMXFCWGGCRQVOETXEWJIJAXTBJOXTDCHSZNBMVRW", "THYKFSPZZIEDAVZZYYCJANMLKNHSSSSTTERXOLBNQNBC", "NLWCLANMLPBERMZVSISDPTSWPIKRRWTVVVUGBXOZDGFP", "CIJCPQXDVJSAKFWQPTBAAUCQHCALBJCWDKGEJNPXAMOA", "YBUNYQSJDIAITZRPGXCDLDKRBYBPQMZMITLNGVNLEIVO", "YYIBTSMQKYPGSSPJGTUBNECTCVHYEQWLJKTMQTMKRFQP", "IVLKJTTLOHAKXZUOEFJDOURNXWJSSJGJYCXVNVQHNYMP", "ITUXFZQVCLYVOAMQCUHFQNHVHLGGKBVNUMBQHUYRLVIB"};
    vector<string> wordList = {"XBHHFW", "NAPJ", "VIELNVG", "J", "NBTHFBUILWQRT", "GXFFVE", "XG", "AWR", "ZGGYIMWHUTGXULLUCRLVBDPFQGSNDWWNWPGUCDHA", "PM", "PGXCDLDKRBYBPQMZMIT", "R", "NAB", "FBQFYOAN", "EAIGK", "WLPURJFBW", "PLRSTKO", "JPC", "FBPI", "CZBSGOCWBOYSPGG", "C", "DU", "MZMQPBYBRKDLDCXGPRZTIAIDJSQYN", "JGTUBNECTCVHYEQWLJKTMQTMKRF", "BG", "R", "VIBUREYVW", "BITIDFLPY", "AOXP", "EBHLYGUZAZ", "CCXZMCWJFJSRAYCN", "DNSG", "J", "NPACT"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1 4", "", "", "0 3", "4 23", "", "6 1", "", "8 0", "12 6", "15 15", "0 10", "2 14", "", "13 11", "9 16", "", "", "", "2 16", "0 30", "", "", "16 15", "5 8", "0 10", "", "7 4", "", "", "", "", "0 3", ""};
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<string> grid = {"EASYTOFINDEAGSRVHOTCJYG", "FLVENKDHCESOXXXXFAGJKEO", "YHEDYNAIRQGIZECGXQLKDBI", "DEIJFKABAQSIHSNDLOMYJIN", "CKXINIMMNGRNSNRGIWQLWOG", "VOFQDROQGCWDKOUYRAFUCDO", "PFLXWTYKOITSURQJGEGSPGG"};
    vector<string> wordList = {"EASYTOFIND", "DIAG", "GOING", "THISISTOOLONGTOFITINTHISPUZZLE"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0 0", "1 6", "0 22", ""};
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<string> grid = {"DOIXPNKQPG", "GFPDECLONK", "UEBGEHEQWU", "WBKDLVXMXI", "FJFVSIFETC", "LCHSJOPAVG", "MPTTLQCKJG", "DXKZTUVPGL", "RBIEZVEQYH", "ALSSVBXBEA", "DJPEUFVLFM", "SSWMBWCBWG", "VERKTTNTMM", "PWJJQXCAIC", "YNATZKPLSY", "WGYRTMSDGP", "UXFHEURVXM", "EYEFNJRVVG", "AAOJXWCYUN", "KKNJAMUDDV", "YPGIDCRIPV", "QMFVJKJSQC", "DIKYHWVVHZ", "KPUKMNXTXJ", "KJYMJVSCBG", "HEWERZUMQO", "XVXYEZUURQ", "OITORNRQZH", "OOYLFNOIRG", "GZTFBRSHAL", "PJBZHKSWIT", "OTNRNGGYNS", "ODRIZRFNBK", "DSVKVCSXZU", "LSXFROXWEZ", "YZEGTXTTVI", "XIAYNHGLQC", "JPEAJNPHAN", "EDGWCPKZFY", "HUWDPJVOTV", "TBTORFKKAX"};
    vector<string> wordList = {"ZXNBF", "OPGLI", "HQPDUVXGSIMWFEYGJVTXWN", "CTVSIDYVVDLATBLBQP", "AEXVRNBTYTXWYUKFGNOEFYAJRWPS", "XHK", "JVT", "R", "Z", "S", "HLTWXNYWHIQUM", "O", "QHK", "QMEAKPQBLBTA", "O", "OOPGOOXHKKDQYKAEUWYPVSDAR", "GXR", "KGVHNSMR", "K", "FD", "LON", "BTV", "P", "DJHMJRERFBHNZVRTNJ", "RE", "ZQTBUVZTLJSLEE", "W", "LTTP", "DX", "GANXXX", "R", "T", "C", "V", "O", "JYM", "JTK", "B"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"", "0 1", "", "", "", "", "", "8 0", "7 3", "4 4", "", "0 1", "", "2 7", "0 1", "", "", "19 1", "0 6", "", "1 6", "", "0 4", "20 4", "15 3", "", "2 8", "", "7 0", "", "8 0", "4 8", "1 5", "3 5", "0 1", "24 1", "", "2 2"};
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<string> grid = {"KBDWDSSRKCJPAGESSOIDQACLGD", "LQBQIAEXAUQHTIHWPIUITMSIQK", "ITWLDOXHBQGKOEYUFWCGPTSPAG", "CGCEXACJDJRHQKBYPUCGTMYHAQ", "UEMDUWMCKOYSAVCGKTKOBKQKHN", "EOUNWQKNSPBEEGEVLBCBCJVIAL", "DZPJTKZQWLVJZFEPXZNUXKHUJX", "KUMMHSHOVVXHAKDZHACRQVJHTY", "ESENWIHSXOXBOAPXJQZMQZLTFG", "XXLYDULEYXRFBHQATCYIEVPUTP", "LLPTXKTNEVYOHDJPSLYREFNMNI", "WTFEAIOFBCSNYIQXNJGBFHDZHB", "CPBWIZXTRGPJZFCZDAGZUCDKWI", "GPWRINXODYJDPBNIHIUIZOSHMD", "SFAUPJGEALJGDMMIRTGVHXWYAM", "ZAYSLLKGMRBOBSPFRLHUYSHRCD", "OHCVRPKLLTWOXCUGTHKWPXNFZX", "HSFWLGUZTQUONBRUODHQGQEACG", "CJFSQFGBNGPGOJQBKHQAEGGWOU", "DBXDXOCOADWDRIFQUIKUORORZL", "NMVISLSOMAPLQJGPEBHEJAIPVT", "FFHQWMFYZGUNHKJCYOTSDHCLXI", "YHMGJOMHOBOITBMHWYCREUTOMM", "ZIEPIJAIOLNRBPMXJDSDFBYPMP", "JMVBWOBXXAHAPBVJXNUTBZOAPS", "WFCJSGNOXUXXRDWBOWTKOCZMKL", "IHKEZCGLGFAWDMTIQKCGNDZQMF"};
    vector<string> wordList = {"QKVK"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {""};
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<string> grid = {"SFTISDKOASNUPFKC", "YPIMRHYVLNSJINZA", "CGXGAISZRCLZJBQI", "LLPFBHLVZIXUBOEN", "LUUFIPBNBKSFEASJ", "VZDHSTUMTTPAOQNV", "PCNTDSCHEZOBKXFF", "ZKDFAMRWQAXPDNQZ", "LMILVLLHVBDBMMWY", "UBTNKFSZOMZDIAGA", "ZFIUUPVOZYOSVOIN", "FFEUHTOWKIABLWYY", "APRILZWCNWZOVXFB", "CDNMBXXODYEYXXLV", "NXOOEIFYJEPDXIFN", "KCYECKKCONNIEWIQ"};
    vector<string> wordList = {"HYVL", "RHOY", "DTSP", "J", "SVOWXF", "Z", "BLS", "THRL", "DAVKU", "C", "N", "HAFUZ", "PUUI", "ZTN", "VDDAEMB", "JZUFABPBDS", "FFTLASUNZCS", "U"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"1 5", "7 6", "", "1 11", "9 6", "1 14", "", "", "6 4", "0 15", "0 10", "", "", "", "", "1 11", "", "0 11"};
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<string> grid = {"O", "O", "Q", "I"};
    vector<string> wordList = {"OO", "Q", "O", "O", "Q", "O", "O", "OO", "O", "Q", "O", "Q", "Q", "O", "Q", "O", "O", "Q", "O", "OO", "O", "Q", "O", "O", "Q", "Q", "QO", "O", "O", "Q", "O", "O", "O", "QO", "OO", "O", "Q", "O", "O", "O", "OQ", "O", "O", "O", "Q", "O", "O"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0 0", "2 0", "0 0", "0 0", "2 0", "0 0", "0 0", "0 0", "0 0", "2 0", "0 0", "2 0", "2 0", "0 0", "2 0", "0 0", "0 0", "2 0", "0 0", "0 0", "0 0", "2 0", "0 0", "0 0", "2 0", "2 0", "", "0 0", "0 0", "2 0", "0 0", "0 0", "0 0", "", "0 0", "0 0", "2 0", "0 0", "0 0", "0 0", "1 0", "0 0", "0 0", "0 0", "2 0", "0 0", "0 0"};
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<string> grid = {"WQQSN", "IVMJL", "YGBSD", "VBSHW", "POVOB", "ULWPV", "PYYIT", "RKCDR", "IASHO", "GKEJY", "MTJUI", "FDFJR", "LLFMJ", "IGVDS", "GVRTG", "LADYB", "HLAYO", "DWHKH", "LGIFU", "KSQAJ", "UQMSA", "SJZQW", "DGNIU", "RGBSL", "MDQUK", "PROSH", "ZQPMI"};
    vector<string> wordList = {"R", "QVGBOLYKAKTDLG", "R", "VWYCSEJFFVRD", "LDHLGILFMGIR", "HOPIDHJUJMDTYYKF"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"7 0", "0 1", "7 0", "4 2", "", "3 3"};
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<string> grid = {"AXQTDVJJEGVCBSNEPA"};
    vector<string> wordList = {"P", "XQTDVJJEGVCBSN", "JV", "S", "P", "QX", "CVGEJJV", "D", "A", "D", "N", "BCV", "C", "D", "T", "SNE", "S", "D", "X", "Q", "J", "BSNEP", "D", "S", "N", "T", "V", "X", "C", "V", "J", "J", "BSN", "A", "P", "E", "A", "N", "XQTDVJJEGVCB", "EJJVD", "EP", "S", "V", "GVCBS", "P", "V", "N"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0 16", "0 1", "", "0 13", "0 16", "", "", "0 4", "0 0", "0 4", "0 14", "", "0 11", "0 4", "0 3", "0 13", "0 13", "0 4", "0 1", "0 2", "0 6", "0 12", "0 4", "0 13", "0 14", "0 3", "0 5", "0 1", "0 11", "0 5", "0 6", "0 6", "0 12", "0 0", "0 16", "0 8", "0 0", "0 14", "0 1", "", "0 15", "0 13", "0 5", "0 9", "0 16", "0 5", "0 14"};
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<string> grid = {"ZEAVNINOPHFEWGFWCYCLDAWIXLJUCNOHNUNH", "BOHFYGFMBLMFLWWSLPQOQXATKWODKNYGOEBA", "DZEFFWLVGLVQBKYKWFJVQTFFAMWAUVXWLQOT", "FDCOXVOPVCVSUNZLOUPJNWTAOFWQCJANTXMJ", "QGNANJIMUZJZYSTOHWFRPZYHMJZXRVQDTVIH", "WUNNBTBVPBRQOOSKSUESTTAJTOOTMRKVRCIU", "YAOLHPJNPDUPRGPVHQRFSUIEDAKATYWESXLE", "UYYESTARGBGMJHLYKDZGAZTHVXDPQOGMWSKK", "EOXAHXEQFTWXPHMXKRABSSFZZEMSIQSFGTZA", "MJJFDGNOBWXCOJUSFABEBWRIZHAMHKTDSDXB", "KYWGOOHQTCNQBLTDDUISOKGBMTUTRXTCIYNK"};
    vector<string> wordList = {"LXSEWYTAKA", "Y", "A", "IGWVJTPTX", "P", "S", "W", "S", "NCUJLXIWADLCY", "C", "HPK", "CG", "ZFTZT", "ESTARGBGMJHLYKDZGAZTHVXDPQOGMWSK", "S", "ST", "ZW", "U", "G", "ADEIUSFRQHVPGRPUDP", "N", "HRQJCGM", "ZDKYLHJMGBGRAT", "JQ", "USFABEBWRIZHAMH", "XJ", "J", "PDUPRGPVHQRFSUIEDAKATYWE", "PBRQOOSKSUESTTAJTOOTMRKVR", "EQXVCXS", "O", "Y", "SVK", "TY", "VAO", "PMH", "EWGFWCY", "MV", "NJIMUZJZYSTOH", "WWLFML", "FPRTUTZ", "LPUBUM", "OMO", "ERN", "PATX"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"", "0 17", "0 2", "0 5", "0 8", "1 15", "0 12", "1 15", "", "0 16", "", "", "", "7 3", "1 15", "4 13", "", "0 27", "0 13", "", "0 4", "", "", "3 29", "9 14", "3 4", "0 26", "6 8", "5 8", "1 33", "0 7", "0 17", "5 14", "3 22", "", "", "0 11", "1 7", "4 4", "", "2 17", "2 6", "", "", ""};
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<string> grid = {"YSRWCMUNKTKJZEJHBNSLJQLBEKOQCBBJQMOQRHZBIPMQXK", "OXOCSYJFYXTJULXSQYVEXEDNCFRFKPXPDRUQEIWNNTPRJQ", "XBHPBVRTSTMRFQBOFHMKMEZYBCOJLHCLGSKBCLTRNNOINZ", "JUWAZVGRAABKNMXHZECDKDNCAFTITXHEGPDHCTTFGVABUY", "QSVDOXSQAULRNSMFDIPFCREZRUOSDOUNHPQOVNRHGNWHAF", "CAUKIZYQRGQMVXOLXZOYGTAMTXWKFJJIBBVNIEVTYKHHZR", "KFOCBUQZJKJGMKKETRSFYPNAXPLEIGYJWLDRMDQNZTWCVP", "IAIROEVTVWIPNIJKOFBQAMLCESZCRHNYXEGXXTBACYGJRR", "CTVMFISHQQETPXFNFOBXQYFSJJHOVKFAEJOMKBNXSVOZYU", "WQOLQMRGWXJWIZFGPCFGTMVIWBHREREGBKGPPGNKHASOAM", "OLFSYLFURSFPBEZCLUFPWCVKJXXXCLKJBMMRYZYRATXHSL", "WNYZRZEYGHHHBIDOHYVYUSXXUKBXKWVLTGUIYISETENDFA", "MZPKBIOPMFRGZTBDCGMODKIMGVGIDXTVVRGCWEEEIZMNXV", "IXEWBSFRHEIYQAKECMVSEIKACFCEEMZRPYSIHABSGFSNVO", "JLQVCCGHXJRLMXQKKUGZKRETXAOIZPTGGGTOIXKILUIRCD", "SPHSSXWXOEYERJVGHHEEXOECMSEVMRPYKIVZKKTCJPFRZB", "XMIAIRMNHUMSIYOHQIOWDCSGSHMGZBWGWHVSWIWGHZGQZS", "XFXJCNKRAIMLVMJWUQITQQXRMOXQRTIRYGAAXOTDUIPRJN", "MPCBAXRCQFTETXSHOICGRJYGJCKBUYXSOVFHOSXJEMBYMS", "GQTGUXNLBXLBGHSIKGRBOBPHESTAUPTEFZCYKAEGEUAOTU", "ZVUMBVOGUPJKLIKYFGMQUYJKIWFEJDIKINXQVROOVTMUMA", "HTNAYWYTBVQGCIPHIWIJSBDDAUIRIBYNVVJMOASYWCSNRO", "WOGZRLCYESISYMWOBLLXJRFHHBGXHQXDJMKMAUZRBYWDJE", "AOXHNUFRUAUPPDZQRJEQHEZLGMYKCVFUQISONGOLFLJBHM", "KPXMMMGWHJUQAOKPEIRDQWUCZBJXFBUUHNLVMORIPROKLZ", "DDWXZHTQTCGOFPMBLVGLGPILAIMIKDIFUIALNBHMVBYXPX", "HQRJZKGECQRQRKHBWTSYFBESKXKRUFLAVHWFBKHTBRBBUY", "CLFDIRDSWOFLXVJMRGGOMCFMIRHCOJMYTPMYBKKMMWXQTG", "JTFXSZXVBSGFYKOILLDVXQGVTKXXPZISLAXGIBNEHCYPFE", "NTHNDJOTJVUNCZMAABFISOIJTYORJEGXVKSDRMRWVCEUYJ", "SIGZLTMCVLAXMLJEFDWBIISNINZLOIIIKJLIRGFFZTSWTL", "WXGKBNWEBTTEHQPCEDUTAVPYSCYXFOZTUQMFVOXRSKBKDN", "ZEKDZXIIXUYCWJZTXJARDDNYDWNUKTXUIPXNCLUOFVULYS", "JHCINGHRQMEUKFYSAHHIPQJXWHFCFMGMUYGQCSEKMXTLHX", "WWXTOMITXTWJNRALBDSLAJTHXUOAMXBEISYZTBCDWOHNVO", "FPLHMQBOIHQKEQAEPILUNUOCTBKWNOTTQHOKNGBEUZOUVN", "ZIWPJPCXQOFVSEYFZHFTPBGBPHZQUKWLDITIHSBEPPJSXB", "YIDGWGSTAXKYVOMWSEAGDSJQUHDDDZEZZQYQMCBBINCEHA", "VRUNJCYCTYTCXHLYQOLZZMYPTMMSJZEHZJMHUYCTOCGJOA", "FWMGSBYVFZZNZGVKMRBMEEYULYASUWTKHAWPFSNREOXUEX", "DMBLGMIAOQZZFGTJCLPSXEJSHCSPRTMMZGVWRZIPEPNDIG", "NSIEBEUMNVYBUKLYHTATSFOMOROQBQOGMPCROTRBEVERGG", "KXAMWZPVZNLBHVLVZVCWZXBSRLRNPXAJQFDMFZKXDQJNAD", "OZVLTHRYKHADKRWWZCJIYMSUAVFIUVMRJJFSVPWUNUVSVC", "QMCSSUXIALKUHDBUHKUGIBUQFNINGRINPWGLVEKUUZJCPP", "QDBLQYGCZEIDSTLOHTJAIRXAXPQLXAFHWSNSXSGIVZWQPS"};
    vector<string> wordList = {"ABTXXGEXYNHRCZSECLMAQBFOKJ", "NET", "NXPIUXTKUNW", "HMSB", "RKLVY", "PKSSJOVQK", "FJQLZKVKPODMIIHXM", "BCGPQMGXNTJZRKHMULWVXXNRXCSIZLM", "X", "QR", "Q", "EQ", "LUJTXYFJYSCOX", "BHHHGYEZRZY", "ALYTPVGCKVYVELPBYFMZJF", "IXCBI", "AVLYZORXEM", "COZZ", "FDIPFCREZRUOSDOU", "QAUFEQKTKH", "ITWZ", "KECORXXIEIVGQBAERXKXIRCXRLXUCAWQDS", "GRGCTAMXKISCAM", "PWCX", "TCXNZYCSGKGIYUEIBGCIBMVFDETYREVKYFAU", "YSKYIWITIWRXPJRGMZLECXIWDXS", "VIPAPHMLBWT", "UOQCVYGPPE", "TFHZFYESVFOQXCPJPW", "QHCFGPLSWXBIE", "WE", "JHOVKFAEJOM", "RIMLHCETIXS", "IRDQWUCZBJXFBUUHNLVMORI", "CQOIK", "YQAKECM", "DKAWHZGMXXSJI", "HUQJSDGAESWMOVYKXATSGW", "QLNZXLPMF", "YQRGQMVXOLXZOYGTAMTXWKFJJI", "M", "WYYPKXMIVC", "F", "Q", "UT", "QPB", "IUJIX", "KPFRVAZZWOMCNCIJGCFLRJBHK"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"", "", "", "", "9 29", "", "", "", "0 44", "0 32", "0 21", "5 37", "", "", "", "21 26", "7 1", "", "4 15", "", "", "5 27", "", "12 2", "", "", "21 9", "", "", "1 16", "5 26", "8 25", "", "24 17", "", "13 11", "", "", "9 1", "5 6", "0 5", "", "1 7", "0 21", "19 41", "23 15", "25 27", ""};
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<string> grid = {"RDFHXVKDMDKUYTVWVBKWXRCKSHRRXROENDRNSAUWLOEGBVDEC", "JCWLKAETARDFWQTEXDVMPKGVZEKJRKWPFKLOPYGDCXGVKZWLA", "SDNQTQKCJDCMEHCHGMOIIBPEIWZLBYDFKICJJLYOUKOIZWKGT", "VTUUZXXAZBDLJACFJLXUCFANCAJIAHTYMJEVLWZAMGQROWJGC", "YKOZBCNCUVUCNKUITPYWGAIFWCGYLQLMTAFNENXICVXPXYJFD", "GSPVRAEFRTWOOXJGYFCKWQRHODVFYSCVFQCKQBEOOQUYUQSSH", "EDNVUCPCBHECVWBSHUTNOEDVMCMBRKJGPAIBJLHQFHQCULEXD", "ARAMCHSVEVXAINYAFNGKQSJDIJNOSLYTFWUXUHIEMWCTKLOZB", "YZYPCLITDCGPDXQVFLVGKVCKIFWOLGZZKZAFTYIZTLVZNBJEL", "RHHXKBHZYLRTDOKQXQKYDRKYFIUWNLTJDIVCFRQRYLRSKGSKI", "WBYCXMNCVYMKKXTMZVGJKUCWYLPFPIOZSDBZNPHSIIRXUCIJH", "EQBUECJYXQSDQVNFMNZCDZTWWRECRYLGTOKKFLBNZEBKBZOKA", "RGDMKVMKUJXBJJXMGQTHXRRNLKWAWTHQUYECIQFYHRSRJUHGB", "VJUHWLNTXDXEVYHCETJPUAIMECXTKLZFEUEIFWUJTSDUJJVYE", "JSXAAMPCNFGUKPAVNUVLYHOADBKBPFOBPMBXFHYONXSSEZUYD", "CPETXQYXEVORIGYYEVDQSVSRMVSUASRDMJBHOWQOVWNPBHBZC", "BJHPMTNIMNIREFBIZUPDOHRKHOLJYNESMGGWGUNUJTTVKQLCD", "ZSPYATKWKGCNMCLWLNLIZHJHCDJREUDSJQTIAIDKRZEHDHRAQ", "EFCOHJCFNFGZRWKMLPAKXBQATMOPGUSKECTPCHMSXGMDPSBCE", "AGJBNJDNZOANFTMOZQGFMGIILPXCBKUUXIBHAKQJOQPQIWMLV", "ZTEJFQVQXISIGGJDNPDXMEHCZMCPWCTMCENIDILTRRYYJDYRD", "EDPKKIOYUNJOYPWGSUVUBFSEAJGNDOJKZUMZANTUSJCRRZWTN", "NFZMCKRNNSOVFFRCRZYRYRVJEEAZXLVTFXLGFUNKWTEXYAETI", "MDZNEHZMZKNLMVOLJZAPRXTARGAUSFAFLGQJFMQVYOXPWZDRX", "KLEBFTLALWUGBDYFDHNRRNSLHVLNPOMAMFCUQPSCQBYNAFZGP", "OYKDVSYJYZIYBKBYYIUMJIIOGIKIKXXIETKEQIUPXFGITZLQI", "XZBGVDADYUHXGPESXNCDDLTJFDZVRPIYXGPLUYUIWQFVMUWWL", "RDNPGOZZXFKCWUOHNLBRDRNBVJIFVGILUOXHQXKPMHQTTUTDS", "VGBCJIOGZPXDBRXTSLTBMHBUNSDPCFMRAELHTLLWKUDCCQWLV", "IMWCHKREUVVOOHJJAJBONTNWALEDVIVFRAMOCQBOAJVWMRQCX", "KWPFLDRMHSZXJUCQXHPIVXXNFAXRQMNAACQDQRCIHEJOAFVLQ", "TAQZBMMZVJSFSXNVDKAHYLSYXCKGARDVGQSELQBDPBGKINNGK", "TLMXZUTJZDEDXZYDEEJZQKGVUAHDQFXHMDFMZSHYTJUKUBNXM", "SQOSRVWHRWDPSHGHRNOSQBAFUCUPOCXGZACEALCKUEEPGYRZU", "LANRQADADFQQFOIPNMIQPZWBGEZXKXKCAUPCMJITZNFLJGMGE", "QLPUXMECAAXELGGHVHYELOQQRODDLNOALUDPGATURAIVPJYGY", "VLGRPIDNYWAMEGCWQJOLGMIZEKWWMUYCOSFMGMMASUPVFYLTG", "LEXZZUXWFVQLLKFSXPFGTTBCBIVMGBBZOZAZXDHHZFGZPSDOF", "ZHLUYOLWUYTXZQBWNFBYLCUWQEWXUVLUVEOGCKYINNTNHKUMI", "WYTSEQYNUYZUEPTRFKUGMXPAAHTYHLPXKKZANBLMNXNQCHGDW", "TCLTQWVVEHAFHIUFHGJYKNATQELMVNQMJUSBKGMIDSOAPWOTJ", "GUJYHRXVPFGNQUMBNBJNYNZZTNSSJSJKQHTYXZKHLYHPVBHPY", "NOFCLENBACWZUMDBYZRPLPVISNJEAITUDNUVVGNGBDIWHMKEU", "YKLQYEZNVCWFYIPYFNIESSARSKETVZQVOLPAVEAKDCBDPCDYM", "SSAXYZWTJBTXQCCSCHFROCLJPYIRVZFGQFXGYVSDMRUCEGPJP", "QRWDWPKYPIPIUTMOYIDNFFUCFKVISLIGTZVRAYEJGRTJHQZTA"};
    vector<string> wordList = {"ZAEZBCJV", "SDE", "TNE", "SFLTYILGLK", "D", "MBRKJGPAIBJLHQFHQCUL", "CKGARDVGQSELQBDPBGK", "QX", "BKEHSJP", "UCUFABQSONRH", "CH", "PVRAEFRTW", "AAFEQ", "NBVJIFVGILUOX", "TCY", "SLYTFWUX", "MVOLJZAPRXTARGAUSFAFLGQJFMQVYOXPWZD", "HOQVTGFTODAETUAKA", "WPYOJNUYOIKKPD", "VMLEQ", "HGJYKNATQE", "DS", "EMGFPU", "TN", "KYFIUWNLTJD", "HKXV", "F", "E", "GQDDIIPCWLODMQTHDNN", "F", "QGZTWXSREILLWHQ", "YFHAQOKDXDNX", "MFYVEQZJDVJV", "BLQLKFLTJCBPJOMAIR", "B", "KIKXXIETKEQI", "XQVFLVGKVCKIF", "S", "BPHNW", "YLHQEYZPXQRZBLHJGVVFECKFNH", "GXLTLJFL", "EYZPXQRZBLHJGVVFECKFNHAMXAWKEXK", "ZWKSNIOF", "AYLWNBLHYRPLQWHWUIHKINUMPIYXLQRQSLJAMDKBGZG", "HGJYKNATQELMVN", "VFPDRGDPXDW", "RYZRCRFFVOSNNRKCMZF", "WVEATZPS", "EBDKTPACOCL", "T"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"", "", "11 22", "", "0 1", "6 26", "31 25", "2 5", "24 12", "", "2 14", "5 2", "", "27 22", "", "7 28", "23 12", "", "", "", "40 16", "9 32", "20 33", "6 18", "9 22", "26 10", "0 2", "0 31", "4 20", "0 2", "", "", "", "", "0 17", "25 26", "8 13", "0 24", "", "", "36 2", "", "", "0 37", "40 16", "26 27", "", "", "", "0 13"};
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<string> grid = {"YASPLXABCWTNBDPDXXSXQYGPASKVFPSOOIHORZRLSTWVCH", "HOEJKOLJLMROGDUGNRKFJECQUVPBWTNPWOAKPZARHULKKT", "VUYFDRWUXMSZKXROMNTXBBEOOJDGYFUWMSKAKVSQFYWRUG", "EOCQIJZKAMFALQWCIVXQGWWPUZFQRSKDFAPLATKKBCDDOU", "WAYWFAXMECBDBBMXXQUGBNGVADFQLGYKOBMIQKURAHIKXT", "UYZSUNSJKJMPKLIXZJPFWMHIHGZHPAXGXSFLCCRNWDKWLS", "ZQCJSOAOJIVZUBSHFBIXIWPGCMCZMXJUMYQFMBWWYYVPBR", "PMYTJJYAFHEVLPJVZXAJBSQVHRGRRYMDEXIVNWTWXMACJW", "SPGKULUQTVEHLBTURMJUMVDEJNNCUUGMEHANWTETNCMZPR", "NXITALPHRBLYYLRLMGKXHOMTRWPSBBZZIABYBETSMHSFEU", "UOMZBMWUTZQSRQWTQPPAOEKGERZSTJAKITQKVBSNWANCJZ", "TJVZUPLJZXZROBFKLPLLKJHQTZYJSVISRFQRGPLQRMJGSC", "VJIQGGEPEIVMEOPRFXNNGFJTDYKGMYTQEGPUYRIWCBWHRD", "QJROEOVDQWFKALLGCMYEDIRGGATYVSQQETLSPRNZJTIZNK", "KUFIVCWOPNKUTZOAENRPBLQDMHACDSSJPZLBKCSUWZEYUF", "ZMMKNQGRFEVOAUHRPRCLFKJDNGQFZIMQAKSVBSROGDUJSO", "MVANCQYDKIGGBREROHOBAFUOZBRGMENEHHXGTDACDQVBIZ", "FTOGNROFCAUFIVCOXLLAEDEMWZFDBYNPNKGNUQMHIUUBEC", "SBFDOBRLPEWPHWZFWCLIGDHDYZYSQQCLOFWAIMKLDULTBU", "KDNAKJEDYMCWJOZZZATMGXJHEMZUAGEAGAOVWHTNPZDKYC", "MCUFMMVOJNZTFTYUFOLCFDDWOIFWDECDVAJHWSZTYFQPBF", "SFYKXRQKSXIPSLISHKPURLCRBHUJDGQSQHYPNAZFZDRKYA", "VNWTMMPBHZOYNAIBCSFVXFFLJCHJGSVWVDGXEAZJQBVMWF", "DGQVTOMGVFYOCKSPHFLCVQHOVRHMHRKAMCKNTHITJPYCVA", "TBGKWYBUMBAFKVJJVKGXNJOUBTRXMIVYZDORGEHCLOKIDO", "KGULJZEXPVKGQKRTOACWEJSJZIVBZGPGXEYDSPMQGFYIFJ", "SWJZSHZRLAMIGROHALEXZOFZRCZTKZIBUFTRNLXZPRGVJJ", "CTNPSFMRTLVVDEKGUUZIAUEIVMHWRPXFNVGIWXEPHHDJEG", "PDPVNUQFHZQMTDDMLERXJDASRHRUTFLVQSQLNBZQPLHHBZ", "CERJNEANQLQUVFVYKQFATZDSMWRURDLYXOGUYZKADXTEQV", "NBKMYBYQOGNSFZSJAOZIULWPQFVVQLBZACYDNVBTXFNYWB", "GFYKUHAKEGXQFAYPZWKOIJOLAOJDXIHCGZJYQFOQTHITRH", "KTHVXBAZTWSJBOAQDBPYLSZYBGOZCCPJPWXCQAKSSECMEA", "IRBBFJJHGEEGMOIHKBEZTZUCXKEJADVBFFTCZOHEVTPRKJ", "FTMDWDRUMSXVSNKQGDCBVEVUIXDLYNGQXCHKGKQUXLVSAP", "FHNWKYYIQIQANAWVXROVDQATOFEUBXSRGIUSMRUQJMKBMG", "BRIUHMNPVGHKMIADNTMAHGTBZBVNUNIXDAJFIOVBJXTPZP", "DFBXVSDARVFSASYYOVUYZGTPLVFTXCUBVXZDERMNOUDOVI", "ZWNTQMADUETSBVOFDIKZYLKDMHXTJQDSCVPLJQLGOUFKPF", "SDCWJGQYLKHWCLPAVBMIHTQMCUFZFULWFGWGCNQPGUCUNR", "MSWTFYXKCZYBXHEPGVAUPZZMRMQNZPOFQSDZMFXEKFWJVE", "LOSDZAMQMAKPOYEURWUDNBMPSWEFUYCHMOLWAHPRXVLZYH", "VXGJNXYGHRRGDAPCXBRIDABUERTTLRQVBMROODIWDZFDXP", "FDJBLPKPZWIEJNDRPXABKENWOFDBUGCBMHQVEGYRTTGSFY", "BBSTYDUABBONMKSLLJKWXXIZKGFTATQVZVXQXHFWVUFBHO", "MLPPVEIUFQKJHEXXCXMBBWBBENMBKDTBMBDURLBAIYRCWG"};
    vector<string> wordList = {"LYOWC", "FW", "H", "KWL", "QGWWPUZFQRSKDFAPLATKK", "C", "A", "VWB", "RVRZBVJBOEYWZNMGDTERJHCHAUO", "XFMZDSQFOPZNQMRMZZPUAVGPEHX", "AUHEH", "UMVDE", "XJM", "GG", "HLRUHCZUHFRCTC", "KFBORZ", "WZZRH", "WDJDRVLKOHKD", "L", "VCVSDLIYE", "V", "SAVGBPOUZAIRIRMGGCA", "NYRJAAYAQMZ", "C", "RBY", "YH", "I", "XIBFHSBUZVIJOAOSJCQ", "AQEWEVNIYFVVUIK", "MY", "F", "TDDMLERXJDASRHRUT", "ZAKLU", "ZFQRSKDFAPLATKK", "QVEROY", "ZPTXJBVOIFJADXINUNVBZBTGHAMTNDAIMKHGVPNMHUI", "DYVCB", "U", "WQSNIMESQ", "ZWIGVNQPLMAKYQ", "R", "OXLBJPEJSRNUSIEBYBYWVD", "UCMQ", "SFJHIBATAEO", "PSFMRTLVVDEKGUUZIA", "LAFSIKKG", "RRHZVRHHUFZYFRQATK", "LLJONA", "YXOG", "NKIOQZZTKT"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"", "0 28", "0 34", "5 42", "3 19", "0 8", "0 1", "40 17", "", "", "7 18", "8 19", "5 30", "12 4", "", "", "24 4", "", "0 4", "", "0 27", "", "", "0 8", "", "0 0", "0 33", "", "29 6", "6 28", "0 28", "28 12", "", "3 25", "", "", "", "1 14", "", "", "0 36", "3 44", "", "", "27 3", "", "", "", "29 31", ""};
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<string> grid = {"AIUWBBOCBIHJAIRNXSNUUNDGTTJDUTHYAMBXDDCYDGBMDLXWVH", "FTQMTZSCKOSPAUYDBCZHUMJZPRIOLLIFYYEPDSBSBNEBFRDBKN", "MSWGDINYNYNSVJIIIDKYCHXCBKZACCTDNSKVVCLIQVHHUMBZZL", "UFIRQIIXMLEZTBAPQRXBCWONVRPJTXBTJACQWEWWWLTNCGXQQI", "TZDPEIIKPTDDLIIYWYHTPOHNIMKUACPJTQDNLMZZHMUSCMWMZK", "PAJHYFFRIQJGSHIVVRFIXYAHKQVMBEWTJBDHYCWVOXTKCQWIWC", "LCHWEZQZQPDOYVHXUWMRRTSPEVWYVXWVABGGFIDTJDFEPJANGI", "RMBFMTLVHTOJNXWOZQNDPAYKLNGEGAKXRBKANJOQKOMLLIVUPN", "NDPTHPAEIAOKFXSXDYLMJPLXBZIDWDHMPDWAICBQFSRRMPWPQT", "YDVXNJPTVKWUFAEYAWXCTKHZFXEHIQIGRKUYVKOMPCTCMRPITH", "YYFCZQWDFGGOQEHGEXNPJAHILHIZJAQIKWQESMGINTTWYJLTWD", "SLKCNAURVLVWLADEEFXGBOXCBDROTXWWPNBNAHTNERKQTKBEYR", "XTXWJNGXFOYUZKIITBKEECOCMBGNCCDEEUMHUJORYDQJDAAJYM", "IQBTBINZOJCGXFCCKVBWCZICNTGAXGYQLTFRXVWEJZBXKHBMKN", "CIAJTEEXGRBLFFLOPFFFZJILVIUZMSBKVAMIQEIWAFSMEBYBCQ", "DYFJCSIWFUUPBNCFRLIXQSMAZYEXPHREWOZZHWMSVGJWBXWFSF", "ICRKNHZIRPCHDENQTZQXDFVXQJSOBHTFYPFBBIYDBVBCMXGQVD", "TXGQHHZVRONSZXQCVRZLAYTMETOQGESGHWSGLXWBPWEUOWUMEF", "FWHHDGCGHQRSUBXULILIPVDOYUPPVLZVRXZQPYLROEQUKJGUIE", "KBRYZSTZHREUVLFWGPPKYAIPJZAZAVHAMQLDTGLRUPEIKDUZFR", "NIEHMCXUBQVYGGWOJGCHACGXIVJZIOBJTNVPXBNSWDIFBARKUZ", "SVHPUDYBIXRXXGSTOXNRIJXHFPRSDSDEGXFKQVMVAAUGYWVWAG", "FGMFOWDFZOIZVQIORVWMIWBJNXIRMPWRXCDUFPSAWVKTHBPUPE", "SQXZCXVDFGBSTGNLKQHIQBHWPNXIURWQHVPZVSOGTDAZJYYQOI", "FUNKDWAXBDMEKPTPVQVVSNBWTGIUCXQIJUCBHEUIEHJKDGGMAS", "VGCEJYQHHXWOWFECYAQBDLRPBJXYYZOZMBRPUXCVYFDWJMANTJ", "EUERYUHBRYAQVFKGIZMHNRXUXCHRIVEDSQBPKSROJNQAGGGVAQ", "PQJPVSZOVINTXIFYYTLDWWVYXPHVSXOVHMZKLYHNCAZENZOXAQ", "MUNAZMZZGTLKYWTIUWINUGIECUTERVKVYMHBUMCPQTBMZBDSFT", "DNIBOLHKFVLBHUFZVABEICTRGBRPNERVPYWEBGZUOCTUUDRDVX", "UVVXCGRFXWEGNYHUGYXFOTLYPIBJTQXTVTVPAHZZOBDMFVYEKQ", "IULCOKUAHZWITQDGKSZPVKNMRKCGDBHMKOBNONHBQOLYZONOUU", "IXWMTLWMRAOMTVIBTWBHYTGOVIHNAYBIMZTGDFXIGXXNSXGUZY", "TVTKGPMEHPLTLWXRDTOBYLHSTDBZIHDLGBOHWETISUSGAZXSRA", "YHDJEEVLTKTCQFGDGREUCPCETRADYXBCFEQPIDTKQLQTWAKZUV", "JAYRFSMIOXLAXZFYPREIFBRIDUFQJRABQJQKRNUNVVUVWTYZEE", "BNVLSJKSDWUFXRBJPOCOOMYJKDQJGMNOLOGQSVQBALIRJXWOGX", "FWTNBDRSWYATULSEEPNAYJGFPCFAEMZFPNFYJQZJELFBEHHDGK", "CFNEGXILLJDRFHZMWZZJUVFXSSUROGCCJSNZLIDVYEYPJXZWRZ", "CXLWSKKZUBXIKRETBJFGSFPTSWUWHQLDWULIGZFEJBUCVELPIV", "ZLRRHIQZYXMWEULMCZNPBNREPKZQCQMYDSRFZGVLGWHOTFYPVP", "EIVIVXSYPBAAQECVJWOUMWBMJTARPPCXWELXZVOOGNDDACGOLS", "YETRUNINYMMBGTGFUMJLOZRBIETFASOSATTMWVVVKXUNTXZLUJ", "BICBMRONYCVBIYRURUSCOSIESLYDSXJVGYONIJRIVGBKLKVNRD", "SFEGQQILHGCQJDCWKEWGPANFCLODLGXAGWILEOWADZVRTQTQAU", "THGTENJBHFIHNATWQIXFLRZENAKOJTUERNNWZRIZJPMXRQQAVY", "SWGZDNWSGECTDBGAIRAGHAJJTJNKHCMIMVJLBXMVEUCELGETOJ", "OSTXZOBYGWDWHMEKBPCAAICROODNBVEHQRBLXEHYYOOCYLQUJZ", "TREHXCPLQRPFZTNQQLSGKQVZZQAHVIOCJSPTNJJIJMLZZYHCXR", "DUHIBSVEGZPHSOJVXSWTBTRTFDBFCQFXUXUGTGLOGPXYAUDVUF"};
    vector<string> wordList = {"OVIGAVS", "TIPRMCTCPMOKVYUKRGIQIHEXFZHKTCXWAYE", "IURIBGW", "CEGG", "T", "CTG", "VKVRETUCEIGUN", "YADZXVU", "R", "NGHPKQYZIFXMNL", "MWMCSUMHZZMLNDQTJPCAUKMINHOPTHYWYIILDDTPKIIEPDZ", "PVBRQHVRQDNBRDJGVSPOMRW", "Z", "RAJUO", "UHRDOAPOJZLICBPXYZXIIT", "BTNAGCNJFJZHWRZI", "XRXXGSTOXNRIJXHFPRSDSDEGXFK", "GCLEZSBFGXID", "PWWXTORDBCXOBGXFEEDALWVLVRUA", "LXBZMTEWQQWEW", "V", "GGY", "OJX", "VZDQ", "YHN", "MOGHZVYWETQ", "QNBCKWETXUTFRLVUUWFHI", "VAPGH", "BPGQX", "CHDM", "BPXYZXII", "ZTPEGYWB", "EWBWORNVFZCBSVKETGHDTIYJUG", "SWKTELLAJOQ", "IMGXEXQRNMBJF", "ILUXBUSR", "MSUYWXWDCSGHHSEINAQJ", "W", "M", "WLVINJECNXMHERHGRFABXKFVPBHJDIW", "UGGRIEIGW", "KBDRFB", "ZJO", "PKATTWAWHIDMC", "QIUGSFAKS", "I", "OWGGYV", "PHYHQKJJT", "SUBXULILIPVDOYUPPVLZVRXZQPYLR", "MCTRYEIWBGZQTEWRCYHPCRLKYBERPEZREAMCHB"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"", "", "41 3", "43 2", "0 24", "44 14", "", "", "0 14", "31 35", "", "", "1 5", "43 38", "", "", "21 9", "", "", "", "0 48", "", "42 30", "", "27 37", "", "27 1", "", "", "44 10", "", "22 11", "", "38 25", "", "", "", "0 3", "0 33", "", "", "", "15 24", "", "", "0 1", "", "", "18 11", ""};
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<string> grid = {"INWNADFAFOBJSWFAPWFFSPCOWVQSRZLJNKVQQNKMRRFOLYCBRH", "HEKXEOJXLZSHIMXXHOZYTTZOFIQXQHKXXTNCSJRYSCLVSILGJW", "MDXWZOHFSMNSSBFLNAKAQEPQFKHWAUFCNZNVQWOTBLKKMAKUTL", "WOEXHCMTRFNSASOEGSVVEMCRZKRBPIQCTBGKWZQSNJVKXIXNTN", "LRHYFVVSDLZQPVTMRYOWCBNIYBBKBVRILTCQVTQJVLREAKNWLV", "NHFOIERAPNKVRCRGSDIGCKQKWMIORHKIVTMYPXZNSFHJKXCOHY", "EBVVLOSDYDYTMTTTGCYOUXOZEEOUOXAOSYMSEEIQFWXHOIIXXS", "BFYJHJMATTAOBPKTSCSPXNPPGXPJVSYQQUJGAWOTRVIUNNPFFY", "AAPIMAQRMDIRRPGLZVYCVCYBMYPXSCQJYUPPHZSQCYAINJPDSJ", "GNTWGMHFLGEGPIKEZVKFDUIBAFYUIWLEARRUFCSYECKKUXJLYO", "GOOEETOWIQDTBMMCASNZQLAYTIVCQXQIFTRVLHSWAQPUMQTJFK", "VDZXBKRVKYFUGRSPBTBARQNPLZQVZYQPTQRRMXOSENYKXDEWMA", "ZDQUEHIKLLIKSDALOZMCVSUUTBTFYIMQCZRVKOWBTSZGVTFQOE", "DKWQXVOAZLNUUQGVAIPCSZMXBAKGBFQMRKCGEQFNSKFABBLYUT", "ESOFPHSHWKDFQFFQXJGHSXDPMUXYNPDQOGATYFDNOZESNQXPSS", "UTXKJNTXAHKCFOEKURLXMHYUTSDAYWYDMDSIPTJDAEZSFAJZNZ", "AQXCKQPFKSLYYJXKAZYUUGPPETGPOUWTOTNMJGJHHXPIFEUQTP", "QEJBLPXLNTEPLYYMNAFKQYPXNQBKUVUMTMPHDECCEBQEZQDCBF", "JYEGIAKIYUNACYMEUUJKOZIAHIBWAXHOGONEINJZGCQGNEZUKH", "UIIKEFPUKQMEIQFDLVNRQCKEVOAOKYVPBYFQWDZJPZMFKYSJME", "VUHFVTSYLIXBMMVGDXNIUWJYVHQADCKGDCNVWQAMTTQSUSUJBP", "JHLBINNQEKWBUDJYMOZOIEVDUMCDOGVXMQJSDVLPFQJCIUKOIV", "PJIBOTMVWLUZJECUYPMVMLWFAXRIEGFHAUQEWWWHMLDOPQHJQN", "ZOOLHSEIMSPHHJTQZORUCLIZHAKPHVTGIBOWQQIDKANZSQERZF", "WUJUWTXKSHFUUODJKACNVCCGXORQRSGEIEVWLPPTKCGSDFCMAE", "VXDZFLRJHWRMNMAEPENGBBKFMEEBVNGPYIOPLQRQSXPVLEVCWH", "LNYKQXDQHVAKCPQHPSJVVQDGUMPHQFTTREWTZOJSYIIFJKAIQD", "SDBSRLTFSVJVMAPANFIJHXMHKAAJIABPCNHBNZUWKWYFDSQVOT", "QQCTJOXUZTQVGXFZJBVLJEJKGQXHDJQLTQXSAWLPCUDIRWRQGX", "SJWYFMEJYIPKKIPRXLTATLIUAATFEMVYJGSYPCRTKJIUNJDZGJ", "BULJOBJMUUINAKYQIYGIQZLWUFRRFXCBHYEKSWJFHHVVSPPABS", "TFXKFLKNLGTSOBXIQPQMFTPOIKUULAJCUSMHWPOLOCQQWXHQKZ", "IEAQDJMHFHSCQUZYFWPVQVQGUZDCUSFNPGYJJNXNWINUHRBWBM", "NSBKJUEBMEXHRJKZDNPSICRGZQSLPPVKVTFYJSPDDSAEMLRRUP", "IVICMHIEIXIBOXQMOHIBAMGEMEHVHOBCXPQOGTSYNWVJAGCLME", "WWJJXCTASODYBQTUWLWXFLSBVNFTKEJJRDNCIBFOKQDCYRGFQW", "GABGIIYOARSEPSJXJYQPHMCDFIYUWQSUHKKWSKVMIHDARYRGVE", "AEJQJAGXDMYVQHXIJVICEJCWWFXVEDUCPJWUXKECSHYPDJZBCQ", "ODPFETBGSEORFZOSFSJGWFUTFSVBMXVXVKTCLDWTOTMUZCATTF", "KQGMPKFZKKFDQBOOIZXJLEVJPQZTFYZBROGGGTIDMLEARSCMYY", "KSYCWTPDDEFXFZWBSTWJYZTFGVEJWXIAVLNAETBKISFDXVOFPH", "RTMHWSIXFOIQAFDWIMCCSKMQIELJLZVDUKJWLZHLZUVKUOFFOA", "BPEFNEUNGJFKGOJYAMECCURQUBFDZVHDLACWIQSSSPNOUXPVUX", "SAQFJPQIAXHYTKRDEIUIGIHWYMJJPPCYSVUZHFSBUYCVCJETAS", "WNOWHYFDWGNVJIVNMKNANYFGHVKMIQHALLVVFPZPFXOAAXSEQS", "HOKVZWUDYIOOSHJMDULQWXINVRKKBUDFTJULRWMDULGIVMQUSH", "IVOCCKNJAPLKXFZXCQAFHACJVSKTDTSVJYSDKWUQEIPAVZFURD", "QZCDCPRMBASPFYWUZDFFTYIJDSVTPNZTEFWSWRGKKKIQMDIDZC", "KQQXWKSNUWGQLGIXLBPDXIDWWDPACSKAVMNAFIALQOJQKKSCTM", "LNBYXMGJTBPKYZMZPVUXRMHDCCHAAVRFNJDDJGKQBUGXEZFMAV"};
    vector<string> wordList = {"FVTEUU", "PPJJMYWHIGIUIED", "EVQSF", "HWRMNMA", "GARUU", "LRMOIYE", "S", "EJ", "A", "BB", "M", "YXSKFQG", "HKIVTMYPX", "ETMBTLTAM", "PAGULTQ", "RQROXGCCVNCAKJDOU", "EAPRTTQQPYPBIVYVLCNNSNZPKOCXXSOGTP", "RGKIAJXVCYSXKGADOM", "UTMGCVMHSQ", "NPPGXPJVSYQQUJGAWOTRVIUN", "XSQRQLPOIYPGNVBEEMFKBBGNEPEAMNMRWHJRL", "YJFFNLKW", "DDONAFBH", "WTRXRKMLWBIY", "BJSWFAPWFFSPCOWVQSRZLJNKVQQNKMRRFOLY", "GIVMQUS", "AZRQIYZMUXISOBWYD", "KQIHWSBRKKOAGWINITBSQSLVWZPJVUJQAUED", "AJMXASPOEQDXYXZ", "BQXELZTVCML", "IJV", "YOFFIFH", "UCDAKQ", "BYIGTRKZKKYLYFGMPRNBQM", "XX", "WASXQTLQJDHXQGKJEJLVBJZFXGVQT", "XHOZYTTZOFIQXQHKXXTNCSJRYS", "HRVK", "NPNFNJQOVOWHXSEMYFQNKWTGNJCUVUS", "UEDZVGGAB", "MTTTGCYOUXOZEEOUOXAOSYMSEEIQFWXH", "XYIUKZEFJMLMCVTZLEXQBCLLEWCZYGHXZ", "R", "SXPYMBYCVCYVZ", "IHOM", "EKCQRNVLDFQIEMQKUP", "KZQTRUUYTTBZ", "P", "VDQPDLVPTCMFBPWQQPXMKRHMVNT", "O"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"41 47", "", "", "25 8", "28 24", "", "0 12", "4 43", "0 4", "3 27", "0 39", "36 6", "5 29", "", "", "", "", "", "", "7 21", "", "", "", "", "0 10", "45 42", "27 15", "", "27 29", "25 21", "27 28", "37 10", "", "6 1", "1 14", "", "1 15", "", "16 34", "", "6 12", "", "0 28", "", "", "", "", "0 16", "", "0 9"};
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<string> grid = {"UMOPKBXHEJFBESOIRNNDCRUJMRXHOIHFUUSSCNUUEUVHWGYVAW", "GSFBQFEAJDCNLNJPRSPWIOSUCAMJYVECQPPXEAEVULMKUOYRCN", "UISBFCPEWIRVNYHVCORJVVUGPGMXYTRFPFCWCNZXZKIJMGXMRG", "FTOWAPKIPBSSZUYVPMUVZDRWAALTDOGHZTTRENUZKOSGUJRKKM", "RVEYYAXGVGQCRZDVXBWZQLZXIDQWTFRIDHGJPDEQBNACWOUPHU", "TCWAMSZGGKBPNPPZXLQMZRMJAQTIENLQNWJZCKCHHZNVEVMRSE", "WIMYOOFTGOJERKUICPZPABJPADTNEFJPHAUYRWIKGNPBLVGNXD", "HUEIDIMWKFCHOUTUCFGBZSQOYSCTOLTYENZXIEUGHMQTWSEXPG", "RYVQIWQRDYIDMFTHWNNFWPOUGIALLRJRJHOGGUUMXDHQBHGRFA", "KKQDJSGWRZNJPXTWUPIOORUEAZILUELEQWYGXUDCKJGHLOEMEQ", "KNDTGUFFGYNIYSWOTCHNGUYRORCCCXKMKXQGQUNISBPRDLTNZB", "SLBUYXKWQDWYCCHAGSKYPJPCETKEXVMKHBXVBBPCHDZIYOXCCR", "ZBCKWJLCERCMEIFZGRXFDRFRTWOXEMJRRWSLKBNEVSWNZFPRLD", "DJWWMGRIRDALFFZFBMBOOPVBXYVHRSYAMOSYIKBNWHIFTVHVUP", "VBTWNNXVPWMODBNVPEXQKFVKZDECYMOUOWGNIWNEEEHVKBYFKX", "JOBDFNYLQMLABCDIEBRXIAMOFZFVLTBJVQLERQCLHODEXPOQSB", "YJCLLGKPXBPKLWLKYAVUIKHVLSUGQCZAOBKKYPZFXQCILQLKAM", "KBPQUWTMJDIAFMXTXYXUEHRGQLBAXFBJBLTKYENFGGORMYLGHD", "FDCLNTUVCGBHKLJYSYXHCRDQEIZANHFZUZXEYXHNNQZFOLBQJP", "VTYSRJCGXEOSIOONTZHMUNFLWMVFTORQXBKAMKHTIYYHHVJCVL", "ZGXWBZXQSNDSNIGUXLHWODMWDTSVFZGBKAHQANEFODVCUYBLWT", "SRXQLMNYIQXKFJAOQUZHXTUVMVKULOSSJYFNLIMPTHKSVXEQOK", "VQFUVJUWHDPQVCZRIDPXLNQTQEGFIBTNMVHVBPKHHGQHQTEXFS", "CUUMQCLASUWPWDVCGKXGZCKLTZMJPRUOBMZGKJUPHFEANHVUGC", "TCDILYCGVUYZXXRNJQQPNDEZRCLAIEMJAYOAKCUQCTVXNCBLJK", "YUQZMQURFJGNBUDPYFCEBRQBXKNKKTKIZZYILSWLNINCFWLUWX", "NKZXXNWPUCWAWGMFKNESKGAZAEAEKHAEMCTVHXJMGKOSEWZMXV", "UFSWKISCQFLYBAZONAEYABVSRLSZFXJNNRHBGKKBHNWNRMXBMY", "ZMNKKFJSYKVKRWMSLQHGCKBQETMOCWTFDGMMXFUBFXMCUEVVRI", "DXQKEBTLDJOGLHABPKGACYYGVZNSSOIYMJYJSIAKHVCNVUBROE", "HXLANFMBWUHKWGXRYMXAIJQBSYYDQXYVYDZSKQELSQUXPCEWND", "WQCDUBFUAYENLJEZWPZFMBXPGQAEWAPNTRUNLWPJFRCHSVVTHF", "QVDAKWXBNHQCCZSSUGGMSYQYTZLGWSJBUDSIDUXTMGEDWUXHLD", "VZNVLFPKFSDEGSVAYAYRJGIVDFWEOXFYWJVGWABITEOJDREGLD", "USMBLVDIZMSCNMZSRMZYMNRRBPDMGOXROGKSHZXNCZPKTNXZVX", "ZMHVRHOELRMTYSDOGTEBAVEYJIGVFGIRAEXYIBXIFTEPFFMXGS", "PXEGBPDLNFQNZEFOSSKYCJOGWYKHLPMCYGBWSICGYKTWSPUDEW", "MAYORTWMDXYWEMPYGRZIKIXFHHMHWLQFGHJFSTPADDXBKKYRMR", "VYFDULWVDNPANNIVJOVUMJYZGKKILHJZDKRGAWDNPODLFPKRSY", "DJYHINVFHVMNOPVAXFBGTJUSQEEFDUKQWBJOWSPTFLMFSNTBDN", "FJKLPFHUUDEGIWCKEZHQLHJRUBNUXVMSZASTYJFULEDCKYBWTH", "EIGDWCWYPLCOBJSZIISMOTOCTIMEWAMIFVZOWECOQNIODYWAZF", "WUNDNQQAOUSKVVBCMVONXTHBKDTZTXFKFPGNTQLELDRNEPKGSG", "BPSHEBIODBWMUZTFWLRWVUCLZYXKVHNCPZWXZPYBKSPMHZJWNK", "RCLZKZUEMBBFWQFEULIREZTKISKJXWLZEDZSHCFTGHTCQEETYQ", "YIYPHTMXUFJMSROSBAQAKFQXMYSYPERHKPDDFFMXCOPANZFQIZ", "KAOBBSZUBHPAKEKMRYQIRLYLMSBNQRMOLLVVXLXRNMJVOCQALH", "URNIBWZXKSDQEWRNJCPXWQATCCNURHJKTTKIBWAWTFDHAWZNHJ", "NXOSNKWKSCGHIQSCTFPMKVGLCKSPITVEDEQWVTXFNTZBGFUFYU", "ITDCCZKUWDPMBBTNSGYAIDJONPBLFRKWYSCZJJKFFLRAEMWSMU"};
    vector<string> wordList = {"HMYZUSVKXBJRJS", "MAYSRHVYXBVPOOBMBFZFFLADRIRGMWWJ", "F", "SCTOLTYEN", "IE", "LIPIKKFCSQWWOGFLWL", "BP", "OKGMJXHVTCMEAHKEAEAZAGK", "NWXQCAHQ", "NBULSYG", "OVJMNRXLXVVLLOMRQNBSMLYLRIQYRMKEK", "GAIVBMJSNIGSYWFGOTON", "LHABPKGACYYGVZNSSOIYMJYJSIAKH", "ZZGCIFZBM", "UNOICPKIA", "WTBV", "VHHPUSHBMJYNJXGVK", "UWB", "WASSIHWDLKSXGHLK", "AXPUAZSZWPVUYQBKP", "ESFWUPUVLRGH", "UVHNAEFHPUJKGZMBOURPJMZTLKCZGX", "THJSCNKIEKLUQGOIJLKASBYIFGAROFMN", "KWB", "LGK", "ONPOGMYMMJYQRE", "QLMNYIQXKFJAOQUZHXTUVMV", "QS", "EAPPYAMU", "FJKLPFHUUDEGIWCKEZHQLHJRUB", "SEGLKLCFGLJLWY", "FLV", "OWXHTERBO", "POPVPKO", "HKGMCICENELFFNTFPHPQLMBBKL", "OINGXHEWVHSKXH", "ZNPZUNJEKVEHEZLGD", "KHN", "Q", "KMVDIMYJRIYMAGQ", "YJGIQXTSXYEPBGGTUWCC", "RU", "NN", "GYZEKZ", "RNULFNMWYGJIDOMYAFQ", "MH", "QNIFBFBWFVHP", "KADAVBVGODHLDDHZP", "PM", "YUJO"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"27 34", "", "0 10", "7 25", "0 29", "21 28", "5 10", "", "", "", "", "23 35", "29 12", "", "", "", "", "", "", "", "", "", "", "", "16 4", "", "21 3", "15 47", "", "40 0", "", "", "", "", "5 39", "", "", "21 42", "1 4", "", "", "0 21", "0 17", "32 18", "", "7 41", "25 5", "29 3", "3 16", "38 22"};
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<string> grid = {"AAAAA", "AAAAA"};
    vector<string> wordList = {"A"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0 0"};
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<string> grid = {"EASYTOFINDEAGSRVHOTCJYG", "FLVENKDHCESOXXXXFAGJKEO", "YHEDYNAIRQGIZECGXQLKDBI", "DEIJFKABAQSIHSNDLOMYJIN", "CKXINIMMNGRNSNRGIWQLWOG", "VOFQDROQGCWDKOUYRAFUCDO", "PFLXWTYKOITSURQJGEGSPGG"};
    vector<string> wordList = {"EASYTOFIND", "DIAG", "GOING", "THISISTOOLONGTOFITINTHISPUZZLE"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0 0", "1 6", "0 22", ""};
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<string> grid = {"AAA", "CBB", "CAA"};
    vector<string> wordList = {"AAAA", "B", "C"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"", "1 1", "1 0"};
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<string> grid = {"XGXX", "GOOG", "XOXX", "XGXX"};
    vector<string> wordList = {"GOOG"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0 1"};
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<string> grid = {"ACASA", "BCDSE"};
    vector<string> wordList = {"CASA"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0 1"};
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<string> grid = {"ABC", "DEF", "GHI"};
    vector<string> wordList = {"ABE"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {""};
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<string> grid = {"MOO", "MOO", "MOO"};
    vector<string> wordList = {"MOO", "MOO", "MOO"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0 0", "0 0", "0 0"};
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<string> grid = {"SSQL", "XQQM", "XXLL", "XXXR"};
    vector<string> wordList = {"SQL", "RAM"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0 0", ""};
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<string> grid = {"ABC", "ABC", "ABC"};
    vector<string> wordList = {"ABC", "BC"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0 0", "0 1"};
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<string> grid = {"AABC", "BDDD", "ABCD", "CDAB"};
    vector<string> wordList = {"ABC"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0 1"};
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<string> grid = {"TEST", "REST", "SSSS", "RRRR"};
    vector<string> wordList = {"TRST"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {""};
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<string> grid = {"BB", "BB", "BB", "AB", "BC", "BB", "BB", "BB", "BB", "AB", "DB", "AC", "GD"};
    vector<string> wordList = {"A", "B", "BA", "AA", "AB", "AC"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"3 0", "0 0", "2 0", "", "3 0", "3 0"};
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<string> grid = {"QQQQQQ", "QQBQQQ", "QBQERQ", "BAERAQ", "QAKEQR", "QRQQRQ"};
    vector<string> wordList = {"QQQQQ", "BEER"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0 0", "2 1"};
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    vector<string> grid = {"FSDFS"};
    vector<string> wordList = {"FDSF", "FDSFS", "FDSF", "FDSFS"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"", "", "", ""};
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    vector<string> grid = {"TTAG", "AAAA", "TTGG"};
    vector<string> wordList = {"TAG"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0 0"};
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    vector<string> grid = {"DA", "AB", "BC", "CD"};
    vector<string> wordList = {"ABC"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0 1"};
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    vector<string> grid = {"AX", "XB"};
    vector<string> wordList = {"AB"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0 0"};
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    vector<string> grid = {"PKK", "EKK", "KRK"};
    vector<string> wordList = {"PER"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {""};
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    vector<string> grid = {"AAAAAA", "AAAAAA", "AAAAAA", "AAAAAA", "AAAAAA"};
    vector<string> wordList = {"AA", "BB", "A", "AAA", "AAAA", "AAAAA", "AAAAAA", "AAAAAAAAAA", "AAAAAAA"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0 0", "", "0 0", "0 0", "0 0", "0 0", "0 0", "", ""};
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    vector<string> grid = {"AB"};
    vector<string> wordList = {"B"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0 1"};
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    vector<string> grid = {"SSXX", "XSXM", "XXLA", "XXXR"};
    vector<string> wordList = {"SS", "RAM"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0 0", ""};
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    vector<string> grid = {"XRX", "XXO", "ROX"};
    vector<string> wordList = {"RO"};
    WordFind* pObj = new WordFind();
    clock_t start = clock();
    vector<string> result = pObj->findWords(grid, wordList);
    clock_t end = clock();
    delete pObj;
    vector<string> expected = {"0 1"};
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=272072&rd=6521&pm=3972
********************************************************************************
#include <iostream> 
#include <string> 
#include <vector> 
#include <algorithm> 
#include <functional> 
#include <numeric> 
#include <cstdio> 
#include <cstdlib> 
#include <cmath> 
#include <queue> 
using namespace std; 
typedef vector<int> VI;  typedef vector<vector<int> > VVI; 
typedef vector<string> VS;  typedef vector<vector<string> > VVS; 
typedef signed long long i64;  typedef unsigned long long u64; 
 
char buf[1000]; 
char g[200][200]; 
 
class WordFind { 
public: 
vector <string> findWords(vector <string> a, vector <string> b) { 
  int i, j, k, x, y, z, n; 
  vector <string> ret(b.size()); 
 
  for( i = 0; i < a.size(); i++ ) 
  for( j = 0; j < a[i].size(); j++ ) 
    g[i][j] = a[i][j]; 
  for( i = 0; i < b.size(); i++ ) { 
    for( y = 0; y < a.size(); y++ ) 
    for( x = 0; x < a[y].size(); x++ ) { 
      if( ret[i].size() ) continue; 
      z = 0; 
      for( j = 0; j < b[i].size(); j++ ) 
        if( g[y][x+j] != b[i][j] ) break; 
      if( j == b[i].size() ) z = 1; 
      for( j = 0; j < b[i].size(); j++ ) 
        if( g[y+j][x+j] != b[i][j] ) break; 
      if( j == b[i].size() ) z = 1; 
      for( j = 0; j < b[i].size(); j++ ) 
        if( g[y+j][x] != b[i][j] ) break; 
      if( j == b[i].size() ) z = 1; 
      if( z ) { 
        sprintf(buf, "%d %d", y, x); 
        ret[i] = buf; 
      } 
    } 
  } 
  return ret; 
} 
}; 
 
 
// Powered by FileEdit

********************************************************************************
*******************************************************************************/