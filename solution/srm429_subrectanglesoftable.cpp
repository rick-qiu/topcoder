/*******************************************************************************
*    Automatically generated code for TopCode SRM Problem
*    Problem URL: http://community.topcoder.com/stat?c=problem_statement&pm=10246
*******************************************************************************/
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class SubrectanglesOfTable {
public:
    vector<long> getQuantity(vector<string> table);
};

vector<long> SubrectanglesOfTable::getQuantity(vector<string> table) {
    vector<long> ret;
    return ret;
}


int test0() {
    vector<string> table = {"OK"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 0: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 0: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test1() {
    vector<string> table = {"TOPCODER"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {0, 0, 448, 432, 400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 848, 432, 0, 352, 0, 352, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 1: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 1: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test2() {
    vector<string> table = {"GOOD", "LUCK"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {0, 0, 320, 280, 0, 0, 280, 0, 0, 0, 280, 280, 0, 0, 640, 0, 0, 0, 0, 0, 320, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 2: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 2: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test3() {
    vector<string> table = {"TANYA", "HAPPY", "BIRTH", "DAYYY"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {5168, 1280, 0, 1120, 0, 0, 0, 2560, 1472, 0, 0, 0, 0, 1344, 0, 3008, 0, 1536, 0, 2592, 0, 0, 0, 0, 6320, 0};
    if(result == expected) {
        cout << "Test Case 3: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 3: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test4() {
    vector<string> table = {"Z"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16};
    if(result == expected) {
        cout << "Test Case 4: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 4: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test5() {
    vector<string> table = {"A"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 5: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 5: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test6() {
    vector<string> table = {"HELLO", "WORLD"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {0, 0, 0, 400, 460, 0, 0, 400, 0, 0, 0, 1400, 0, 0, 860, 0, 0, 480, 0, 0, 0, 0, 400, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 6: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 6: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test7() {
    vector<string> table = {"SATOR", "AREPO", "TENET", "OPERA", "ROTAS"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {7360, 0, 0, 0, 8832, 0, 0, 0, 0, 0, 0, 0, 0, 2304, 7360, 4232, 0, 7432, 3200, 7680, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 7: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 7: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test8() {
    vector<string> table = {"HEART", "EMBER", "ABUSE", "RESIN", "TREND"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {3840, 4416, 0, 1600, 11752, 0, 0, 1600, 2116, 0, 0, 0, 2116, 3680, 0, 0, 0, 7360, 4416, 3200, 2304, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 8: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 8: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test9() {
    vector<string> table = {"FRACTURE", "OUTLINED", "BLOOMING", "SEPTETTE"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {3024, 2816, 3136, 2816, 14064, 2464, 2816, 0, 7040, 0, 0, 6784, 3584, 6656, 9856, 3024, 0, 5600, 2464, 15552, 6224, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 9: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 9: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test10() {
    vector<string> table = {"GLASSES", "RELAPSE", "IMITATE", "SMEARED", "TANNERY"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {18864, 0, 0, 3220, 24536, 0, 2800, 0, 7488, 0, 0, 7156, 7520, 6960, 0, 3956, 0, 10376, 16660, 10864, 0, 0, 0, 0, 2800, 0};
    if(result == expected) {
        cout << "Test Case 10: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 10: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test11() {
    vector<string> table = {"ADMITS", "DEADEN", "SERENE", "OPIATE", "RENTER", "BREEDS"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {11364, 2916, 0, 14136, 38080, 0, 0, 0, 7920, 0, 0, 0, 3564, 11532, 3564, 4092, 0, 14400, 9396, 11532, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 11: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 11: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test12() {
    vector<string> table = {"ISICHADAMION", "SERRAREPINTO", "IRAASIMELEIS", "CRATIBARINSI", "HASINASUOTIR", "ARIBATINTIRA", "DEMASICOANOC", "APERUNOIBEMI", "MILIOTABULEL", "INENTINELELA", "OTISIROMELIR", "NOSIRACILARI"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {907232, 217056, 226080, 86400, 571072, 0, 0, 84960, 1289200, 0, 0, 365472, 280160, 522352, 460896, 94400, 0, 634176, 456192, 400976, 163376, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 12: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 12: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test13() {
    vector<string> table = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {3016, 3208, 3384, 3544, 3688, 3816, 3928, 4024, 4104, 4168, 4216, 4248, 4264, 4264, 4248, 4216, 4168, 4104, 4024, 3928, 3816, 3688, 3544, 3384, 3208, 3016};
    if(result == expected) {
        cout << "Test Case 13: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 13: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test14() {
    vector<string> table = {"ABCDEFGHIJKLMNOPQRSTUVWXYZ"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {3016, 3208, 3384, 3544, 3688, 3816, 3928, 4024, 4104, 4168, 4216, 4248, 4264, 4264, 4248, 4216, 4168, 4104, 4024, 3928, 3816, 3688, 3544, 3384, 3208, 3016};
    if(result == expected) {
        cout << "Test Case 14: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 14: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test15() {
    vector<string> table = {"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {686800, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 15: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 15: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test16() {
    vector<string> table = {"Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 686800};
    if(result == expected) {
        cout << "Test Case 16: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 16: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test17() {
    vector<string> table = {"AAHS", "AALS", "ABAC", "ABAS", "ABBA", "ABBE", "ABBS", "ABED", "ABET", "ABID", "ABLE", "ABLY", "ABOS", "ABRI", "ABUT", "ABYE", "ABYS", "ACAI", "ACCA", "ACED", "ACER", "ACES", "ACHE", "ACHY", "ACID", "ACME", "ACNE", "ACRE", "ACTA", "ACTS", "ACYL", "ADAW", "ADDS"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {1787488, 890880, 787408, 295064, 564944, 0, 0, 141376, 196208, 0, 0, 181520, 49216, 48000, 53376, 0, 0, 147184, 360304, 180160, 54144, 0, 35000, 0, 241648, 0};
    if(result == expected) {
        cout << "Test Case 17: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 17: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test18() {
    vector<string> table = {"ZACKZAGSZANYZAPSZARFZATIZEALZEASZEBUZEDS", "ZEESZEINZEKSZELSZEPSZERKZEROZESTZETAZEZE", "ZHOSZIFFZIGSZILAZILLZIMBZINCZINEZINGZINS", "ZIPSZITEZITIZITSZIZZZOBOZOBUZOEAZOICZOLS", "ZONAZONEZONKZOOMZOONZOOSZOOTZORIZOUKZULU"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {1112976, 424032, 280384, 71840, 1929344, 304832, 291040, 86208, 1968984, 0, 469656, 714544, 216064, 950864, 2027928, 296624, 0, 413184, 1534824, 704592, 414848, 0, 0, 0, 93440, 5176992};
    if(result == expected) {
        cout << "Test Case 18: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 18: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test19() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {0, 0, 981244800, 979473600, 0, 0, 979473600, 0, 0, 0, 979473600, 979473600, 0, 0, 1962489600, 0, 0, 0, 0, 0, 981244800, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 19: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 19: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test20() {
    vector<string> table = {"GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG", "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {0, 0, 0, 0, 0, 0, 29480890000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 20: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 20: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test21() {
    vector<string> table = {"AZZZAAZZAZAZAZZAAAAZZAAAZAZZZAZZZAZZZAZZZAZAAAZAAA", "ZAAZAAZZAAAZAAZZAAZZZZZZAAAZAZZAAAAZAZAZZZZZAAAZAA", "AAZAAAZZAAAAZZAZAAZAZAZZAZAAAAZAAZAZAZAZAZZAZZAAZZ", "AZAAZZZAAZZZAZAAZZAZAAZZZZZAZZAAAZZAAAZZAZAZAAAZAA", "AZAZAAAZZZZZAZZAZAAAZZZZAAAZAZZAZAZAZAZAZAAAAAAZZZ", "AZZZAZZAZZAZZAAAAAZAZZAZZZAZAAZAAAAZAAZZAAAZZAAZAZ", "AZZZZAZZZAAAAAAAAZZAZZAAZZAAZZAZZZAAZAZZAZZZZAZAZA", "ZZZZAZZZZAZZZAZZZZZAZAAAAZAZZAAZZZZZZAAAZZZAAZZAAA", "ZAZZZAZAZAZZAAAZAAZAZAZAZAZZZAZAAZAZAZAZAZZAZZZAZA", "AZAZAAAAZZAZZAZAAZZAZZAAAAAZAAAAZAAZAZZAAAZZAZAAAZ", "AAAZZAZZAZAZAZZAAZZAZAZAAAAAAZZAZAAZAZZAAAZZAZZAAA", "ZZZZZAZZZZAAAAZAAAAAZAAAAAAZAZZZAAAZZZZAAAAZAAZZZZ", "AAAZZAAAZAZAAAAAAAZAZZZZZZAAZAAAAAAZZAAZZAAZAAZZAA", "AZZAZZAZZZAZZZZZZAZAAZZZZAZZAAZAZAZAZAAAAAAAZZZZAZ", "ZAZZAZZZZAAAAZZAAZZZAZAZAZZAAZAAZAZZZZZZZZZZZAAZAA", "AAAAAZZZAAZZZZZZAAAZZAZAAAZAAZZZAAAAAAAAAZZAAZAAZZ", "AAAZAZZAAZAZZZAZZAAZAAZZAAZZZZAZAZZAZZAZAZAZAZAAZA", "AAAAZAAAAAZZZZZZZZAZAAZZZZZAZZZZZAAAAAZZAAZAZAAZZA", "ZZAZAAZAAAZZZZZZZAAZAZZAAAZZZZZZZAAAZZZZAZAAZAZAAA", "AZZZAAAAZAZAAAAAAZAAZAZZAAAAAZZZAAZAAAZAAZAAZZAZAZ", "ZZZAZZZZAZZZAZZAZZAZAAAAAAAAAAZZAAZAZAZAZZZZZAZZZA", "AAZAAAZAZAZZAZZAZZAZZAAAAZAAAAZAAZAAAAZAAZAZZAAAAA", "ZZZZAZZZAZAAAZZAZZZZZAZAZZZAZZAZAZZAZZZZAAAZAZAAAZ", "ZZZZZZAZZZAAAAAZZAAAAZZAAAZAZAAZAZZAAZAZAAZAZZAZZZ", "AZZAZAAAAAZZZAAZAAAAAZZZAAAAAAAZZAZZAAAZAZZZZZAAZZ", "ZZAZAAZZZZZAZAZZAZZAAZZZZZAAZAZAZAZAAZZZZAAZZAAZZA", "AAAZZAAAAAAZAZZAAAZAZAAZAZZZAAAZZAAAAZZZAAZZZZZZZZ", "AAZZZZAZAAZAZAZAAAAZZZZZAAZAZZAZAAAZAAZAZAAAAZZZZZ", "ZAAAAAZAAZZAAZAZZZAZZZZZAZZZAZAAAZZZZAAAZZAAAAZZZA", "ZZAAAZZAZZAAAZAZZZZAZAZZAAAAAAAZZZAAAAZZAAZAZAAZZA", "AZAAZAAAAAZZZZAAZAZAZAZAZAZZZZAZAAAAZAZZAZZZAZAAAZ", "ZZZZZAAAZAZAAAZAAZAAZAAAZAAAZAAZAZZAAAZAZAAAAAZAZA", "ZAZAZZZAZAZZZAZZAAZZZZAAAAZAZAAAAAAAZAAAZZAZAZAAZZ", "AZZZZAZZAZAAAZAZZZAAZAZZAAAAZAZZAZZZAZAAAAZAAZZAAA", "AZAZZZZAAAAZAAAAZAZAZZAZAAZAAZAZAAZAZAAZAAZZAZZAZA", "AAAAAAAZAAAAZAAZAZAAAAAZAZZAAAAZAAAZZZZZZZAZZZAAZZ", "ZAAAAZAZAZZAAAZAAZZZAZZAAZAZZAZAZZAAZAZZAZAZAZZZAZ", "ZZAZAAZZZAAAZZZZZAAAAZZAZAAZAZAAAZAAAAAZZZAZAZAAAA", "ZZAAZAZAZZZAZZAAZZZZZZAAZAAAZAAAZAZZAZZZAAAAZZZZZZ", "ZAAZAAZAAAAAAAZZAAAZZAZAAAAZAAAAZAZZAZAZZAZAAZZAAA", "AZAZAAAZZZAZZAAZAZAAZZZAAZAAAZAZAAAAZZZZAAZZAAZAAZ", "AAZAZZAZZAZAZZZAZZZAZZZAZAZAZZZZZAZZAAAZZZZZAZAAZZ", "ZZZAZZAAZZZAAZAAZZAAZAAZZZAZZAZZAAZZAZZAZZZAAAAAZZ", "ZZAAAAAZAAZAZZAAZZZAAAZZZAZAAZAZAAAAZAZAAAZZZZAZAZ", "AZZAAZZZZAAAAZZZZZAAAZZAZZZZZAZAZZZZAAAAZAAZAZZAZZ", "ZAAZAZZZAZZZZAAAZZZAZAZAAZZAAZZAZZZAZZZZAZAAZZAAZA", "ZAAZZAZZZZAAZAZAAZAAAZAZZZAAAAAZAAAZZZAZZZAZZAZAZZ", "ZAAZZZAAAZZAAZZZAAZZZAZAZZZZAAZZAAZZZAAAAAZZZAZZZA", "AZZAZZZZAZZZZZZAZZAZZAZZAAAZZZZZZZZZAZZZAAAAAZZAAA", "AZZAAZAZAAZAAAAZAZZZZZZZAAAZAAAZZZZAZZZAAZAAZZZAAA"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {14806542460, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14674347540};
    if(result == expected) {
        cout << "Test Case 21: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 21: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test22() {
    vector<string> table = {"EGHFEIRAPNIRXHHCUUZQVAWIALSJLSLOWGRSWQICSVWZFAYNCY", "KZQTSMJFGAQZJJVRMCQZIXADCUMEYXZVHXNQCTMUQJFXEXGPUN", "CVCJNVUXRGDDSRUNNXNDORTFANPGOGLWVKNMIWIKGZODEQVMAR", "TUWBQJECDKFBDEYOAMBFOCBDZEXHUQNHFRVKHZKCZVVWAOZHYW", "KILMBSLRLKXGEPZZCFDQKGSLUNQHYZVGAVJWDPAUJFCBZAYKDB", "LPRBRADLDDBYRDEANLHMUISHHOYBATPFXTKAIZVOWJOSPBKEDP", "FXCENKDYGQAKYRIBXISAKEOWNXXSQZKGUIIGNIIXRYVMOBCAYN", "THSFDPHRTTFLGPVRAKZAJYPGOPIDPMGBCFXSSFOKWIPPFNEECV", "DMSBMYWWBGIIYJVTABXRDVSGQDXOGXIGGIOUJJIMRUZLUWNHQG", "PIZNGCHFRYYUZTIRTBNSNXYTTXRBAUPIUUGCPZVVHDYHLJPVUQ", "AXDJJIWSPTEAMRFMRFUSAAAYHNMIXUSGRTXVYTGZKKQPZEAPSW", "FHIPKSPXVVDOZVBHDZBRPYKVWISBHLRWWVALIRIZVAEIAWYIEP", "HGZODHWRCYIJAIKUESQFUYXWEVMIJVSFJAXYFWRPHDXDTXUGHK", "NIBATIDGPOPYORTHPEOWGLUMQBARKVLVFXXWMKAPFQQVOVLTER", "GULYOMVHNRWPMAWHNPLWYNNRAPJZWBMZFMYVEROVGQXDBKEOAS", "DXVLQXLDNASVLOGUGMRMNAJWEXVUKYEVQPZXMGUSNUHEYJFUBC", "SHQGVGGHGCOLHXGMTBHEHJMTSQBRBGHTUAEUSTDVWMLMEJIMBB", "JMOYXPIDBKZYJDCUJNXEWXAWPISRZJDNRWLTXGVQDDRQTIBNYK", "DVRSQWVNAIGJGKLIPRJRFNFVXWQVZZRQUQXWWPPPKNOGNTWZAK", "WOJQIREKOEDWXTSYONTIDZOUSTEEMYRETPBXJQBUMISFOCQJFZ", "OAPDLKXIFOUVWNBCWEOXKMKQBOJWDLSANPDAIYHLLMAGMULYAA", "XMKHHLLLLMRCLZQTLBLIORQPCMUKWRRECIEFOYZBKPRLLQIINC", "VZRDPXOTOOSUSSXGQOQNUGURYVHRBJJOQKQDSGAJXMIWOUCLOZ", "SHPKXZEPCWDHVVXAWYZIILFRURJQLWFVNULWDWZZRLJPMLNNZW", "HWCJRUUHZMXHUKGIKIKDAGIOKHBSQIUPARGGBZVFJBWXPNODPE", "IJGDZRGNQMSAFCHWEEHNNJJSXTRTIWKNRXPIZDJTOQKBPVZJAQ", "LLKLSUSITVIXBDBDISZAIUVIRGDCUBKLWDXLMDGRDUXEJKDKLY", "MGDKIXDEIDITIXKUTFTLDPXENXVWGDWGMYDJVUZLTGLFNBTXJB", "OUISMHDWPUSLRZOCJITINQDDCTZETYGCMDNRNEPCBGOFFGQEJP", "YSGKFOUXPTHCHWBHXFWQCRSUADDCLIHWWSJJUYZVGTOCBRXXWS", "OICBCBBSQHLGHFPRCSNHXUCPZRDGXXYGOXRWHXRXTZPKSRVQHQ", "KLAOKAKJKQBBTYYLMWOADPWKEEMTSCRDDERSHWFICNLPLSMROB", "UTVBARPTJMWEVGHVZOBKLQUOCFCBPTKBNYVERQNBXCXUBUOCQK", "IFTGSRXMWOEWTDPBFMMFRKMFBFGYGNZXULUWXSWDCHZBALMRDC", "QRQKGXEWDATCWPTZYWVJNMIBCAEHXQPJLTRZXZNUKBADHGTLBR", "TZGVREUJHELYZROATKAWAOLSXRFUWPGEEKWEJOOMNNWJDLNPHT", "QRCWFTWRYXMWZAFQUPWSAZFKJASVUOKIUCRTBDCDDSJRJUBRMV", "VXZGQKESEJZXUVDTGITUMMQYQUNIBLTCIFEPBJJYAOUNWQSKBO", "OLHZRBTUHBELLCGBBYKYPIGPLVYEVTNYDNSSPTBQCJTZACOSZZ", "WZAMSEDABTDNNSABAOZCCJOLLXRKWLOQTLBGJVDZXHYFJXHACO", "ZKLWGILJCAEDQXXHAZXWPMZUYQLLJWJOVECQBCIVCVYDFMTRXQ", "JKFMYEYGHQPUOQIQVRVAJVREWHPRJJZCQCTIHOETZUFXLYCSOU", "ANJNHKYCOQBUDLAWVGZUJLPNLHLGILJBFGQEHRCXZBYPPTLEHP", "PIGLLYYAYJMVFYTHRACKMFXLZOLETIQUCCXGPFFTNNAVUPEVQT", "GLARQIVWQMOBJLZSEJDPDIWGDNSWJVIUXBDPGOTUUQQOEHDABU", "SVUVUOOPTPEJVLWQISVGBIDARHJFFVPXZISCUUNKIXKGEBXILL", "THPLWEWCSNANHYCEYOPEKVBBIRGIRSVTYEYHKFWMNISWFOYKLQ", "RTMLGHSOMIICSLLFSVLEJLAJYOFFDCATIINJDJRYZRKUQOBBXC", "BPGMQAWNLZBEFDNWXAMGFYSYWQKIYLSDJLICDQTMURRUADZCZF", "WSUCKNMZKMMJNALHNHQSDDJRDVESTYYMBYDFQJZFJZVCJMZOYA"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {1165676820, 1181285952, 1015315936, 1294410380, 1051731004, 908714336, 1175938644, 1000005552, 1310939448, 1145042260, 1025908936, 1311669648, 971463868, 1035421552, 1101463360, 1132292048, 1092281032, 1339899396, 1066043092, 1082832632, 1220425360, 1148961304, 1298151196, 1275822780, 1018673376, 1110520088};
    if(result == expected) {
        cout << "Test Case 22: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 22: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test23() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 29473867500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7022500, 0};
    if(result == expected) {
        cout << "Test Case 23: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 23: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test24() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {0, 0, 0, 0, 0, 0, 0, 0, 7022500, 7022500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 29466845000, 0};
    if(result == expected) {
        cout << "Test Case 24: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 24: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test25() {
    vector<string> table = {"OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOUOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOIYOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOEOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOTOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO", "OOOOROOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOW", "OQOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {0, 0, 0, 0, 10892244, 0, 0, 0, 14822500, 0, 0, 0, 0, 0, 29388437856, 0, 7276900, 8265460, 0, 14273140, 14822500, 0, 7276900, 0, 14822500, 0};
    if(result == expected) {
        cout << "Test Case 25: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 25: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test26() {
    vector<string> table = {"ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZHZZZZZZZZZZUZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZNZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZCZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZF", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZQZZZZZZZZZZJZZP", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZBZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZAZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZMZZZZZZZZZZZZZZZZZZYZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZDZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZRZZZZZZZZZZZZZZZZZZZZZLZZ", "ZZZZZZZZZZZZZZZZZZZVZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZIZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZWZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "TZZZZZZZZZZZZZZZZZZZZXZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZSZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZOZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "KZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZEZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZGZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {10176676, 13379268, 11619220, 12151108, 12113116, 8389900, 10462260, 11407900, 14223628, 9860620, 8580700, 10926300, 12388588, 10932420, 11559100, 8930500, 12233100, 14822500, 11106340, 9502900, 11407900, 14576340, 10843756, 13720036, 14714796, 29190861028};
    if(result == expected) {
        cout << "Test Case 26: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 26: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test27() {
    vector<string> table = {"ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZVZZZZZZZZZZZZZZWZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZFZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZLZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZTZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZKZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZHZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZNZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZBZZZZZZZZMZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZCZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZIZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZAZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZRDZZZZZZZZZZZZZZZZZZUZZZZZ", "ZZZZZJZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZX", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZSZEZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZYZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZPZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZOZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZQZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZGZZZZZZZZZZZZZZ", "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {12043304, 11759608, 11252332, 11995400, 10419500, 9216088, 8197000, 10927000, 9967832, 9607028, 11362652, 10782100, 10778572, 10341500, 9222904, 10392952, 7061908, 11988916, 10778572, 10242824, 9654676, 7224628, 8898568, 8219848, 10375132, 21422203956};
    if(result == expected) {
        cout << "Test Case 27: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 27: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test28() {
    vector<string> table = {"ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWX", "BCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXY", "CDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ", "DEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZA", "EFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZAB", "FGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABC", "GHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCD", "HIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDE", "IJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEF", "JKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFG", "KLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGH", "LMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHI", "MNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJ", "NOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJK", "OPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKL", "PQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLM", "QRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMN", "RSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNO", "STUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOP", "TUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQ", "UVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQR", "VWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRS", "WXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRST", "XYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTU", "YZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUV", "ZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVW", "ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWX", "BCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXY", "CDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ", "DEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZA", "EFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZAB", "FGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABC", "GHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCD", "HIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDE", "IJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEF", "JKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFG", "KLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGH", "LMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHI", "MNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJ", "NOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJK", "OPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKL", "PQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLM", "QRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMN", "RSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNO", "STUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOP", "TUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQ", "UVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQR", "VWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRS", "WXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRST", "XYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTU"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {1135398208, 1134417504, 1133497600, 1132652640, 1131895104, 1131235808, 1130683904, 1130246880, 1129930560, 1129739104, 1129675008, 1129739104, 1129930560, 1130246880, 1130683904, 1131235808, 1131895104, 1132652640, 1133497600, 1134417504, 1135398208, 1136423904, 1143979620, 1151013320, 1143979620, 1136423904};
    if(result == expected) {
        cout << "Test Case 28: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 28: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test29() {
    vector<string> table = {"DARNLEY", "CREATED", "TESTSET"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {3200, 0, 1400, 2660, 7640, 0, 0, 0, 0, 0, 0, 1548, 0, 1584, 0, 0, 0, 3148, 3096, 5824, 0, 0, 0, 0, 1260, 0};
    if(result == expected) {
        cout << "Test Case 29: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 29: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test30() {
    vector<string> table = {"TESTSDEDICATEDTO", "TANYAKRIVOSHEEVA"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {14320, 0, 4120, 11760, 18520, 0, 0, 3920, 8320, 0, 4040, 0, 0, 3560, 7160, 0, 0, 4120, 11520, 17080, 0, 7480, 0, 0, 3760, 0};
    if(result == expected) {
        cout << "Test Case 30: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 30: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test31() {
    vector<string> table = {"ILOVE", "TANYA"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {860, 0, 0, 0, 400, 0, 0, 0, 400, 0, 0, 460, 0, 480, 480, 0, 0, 0, 0, 400, 0, 460, 0, 0, 460, 0};
    if(result == expected) {
        cout << "Test Case 31: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 31: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test32() {
    vector<string> table = {"TANYA", "HAPPY", "BIRTH", "DAYYY"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {5168, 1280, 0, 1120, 0, 0, 0, 2560, 1472, 0, 0, 0, 0, 1344, 0, 3008, 0, 1536, 0, 2592, 0, 0, 0, 0, 6320, 0};
    if(result == expected) {
        cout << "Test Case 32: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 32: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test33() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {1115363200, 1130472800, 1144208800, 1156571200, 1167560000, 1177175200, 1185416800, 1192284800, 1197779200, 1201900000, 1204647200, 1206020800, 1206020800, 1204647200, 1201900000, 1197779200, 1192284800, 1185416800, 1177175200, 1167560000, 1156571200, 1144208800, 1130472800, 1115363200, 661045000, 661045000};
    if(result == expected) {
        cout << "Test Case 33: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 33: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test34() {
    vector<string> table = {"OK"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 34: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 34: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test35() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {407347200, 20575232096, 91685664, 94616256, 220910816, 223143648, 225097376, 226772000, 228167520, 229283936, 230121248, 230679456, 230958560, 230958560, 230679456, 230121248, 229283936, 228167520, 226772000, 225097376, 223143648, 220910816, 218398880, 215607840, 212537696, 209188448};
    if(result == expected) {
        cout << "Test Case 35: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 35: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test36() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {1116050000, 1131846400, 1146269200, 1159318400, 1170994000, 1181296000, 1190224400, 1197779200, 1203960400, 1208768000, 1212202000, 1214262400, 1214949200, 1214262400, 1212202000, 1208768000, 1203960400, 1197779200, 1190224400, 1181296000, 1170994000, 1159318400, 1146269200, 1131846400, 0, 1116050000};
    if(result == expected) {
        cout << "Test Case 36: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 36: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test37() {
    vector<string> table = {"IZTMUCCPEJKZTXBFBMJJEUEABOEUDTQXBBBJDTLSJAJNLJRRMC", "VDMCURWFQRRCUTJNFGJXRZEAGGIGTQTZCKSNDUTUERWILHHXOO", "UAKJNKBUSYDDIKKTNBXRPUHWSJLCEISONXQPHSJPBKCSJCZANS", "DAKAJTPXSLEZPJUMSOJYTXKXJPCRROCKKSDEDVLJWJMGFBBRWH", "WGAXVGGOJZGUVXCEODLLVWHHZXTDPJCOBLZPFWPHDDZLZRPVYY", "CBFLBVJWNBTNEWREYBPOUQUOGZTGYVJZXDDFCPLGWKQBHEVBVV", "MREFUJKJLKCDSCAKOEJXENWIAWSVOAVUJVVVGBLFLTAGGTLAHM", "VSWCYTCRETKXIHEJWJAEOEFXBFMUBMALHYDBMUVWMRDLECWGZR", "XFHVFXHRENVDTPLDFGNUTTMEUZIGMDZOJQVSNZEIPFHOQLWEQD", "ZGHRCBGSGMNESGSFTPIEBHVIRZBNBZOJVQQWHKYOMXLVRFTPDN", "XDDSQDWWAOZDZEQNEBMBQREVBZHZWPZVEMGHOZDSGOVWDVGYOM", "BLEICUEHMPKMWKXRUVSDADRIBZDIUXBMFMKNYZBAPYTRRJXFSC", "OQVWVDNOCGJBXHAMOIWEPRMJVIVZHURDNAQKTSAFIECXXUGZLR", "TVGYJJYDSHNEEUNKOZUVBJKGTSBFQRBVBKTTDFNQVLHGTHLTXD", "FVGITNLDUGVNQFKKOQQRIKMUKLSDKLGGMUFDBHLPFNMNVDNXUU", "WIDVKXEJPVDPFCSFGIJPXLGYOMGJGWAGBHHLWHWGJUFZRFNJPJ", "SXKHATMGYZQHOYYFJLSJDWZCZGXADANANQWUJRPOTEHWFHKKSV", "VDZYYTFFWDNDFRQIMNIIWLHSSDSQRONABEGXXUQRVBTPBQEIBV", "UJZDHZOHVTDTIXYBSAGIQTHBJMKHZJNPDCWSYNBAOFZXIERMZP", "JCWFBPMDPXJMQHCXQTYUVIBNNLKMKKKOHKMNQLTRXIHGWXJCDY", "QMSUGAJURYUOPGJKKLDZXNLNPOVTKLHFKZPCQQJLJJPVMEELCB", "FZQDLIDVYUHTBLENXUHJBAGLVRODRZGDPNGDBBXQZWHZUROSAJ", "FWTXPRKWPAQDHGRYABOVOBBJNKJFIJLVUUBRSIVQCGQODTVNYW", "KZWEAHYOFROADKEMTOSDJUQGDXDPOONCWVCOLQBRAFDWMBSXHY", "YWOTSQOIJKXDWCSRTQJGGIQIGASSJBSIEMCCUXVPUIAWUDEYRR", "XOBZGHETOZAPZUYEWPJIHJIRMDGJWDHHYNOUTUAHZWZTWGSDGR", "WBKSCQWVAWEDNDNZTNTNVYQXRDRJIMOFYCRPPKWOCRMJWIMGCA", "BJPSZUMWFAVMTQWAYWVWNCHUPEGRTGWGQIWCYTQCBFLPBLWMWX", "VRLLLJPVWPWJTQTADVCRKEVNGSSXCEEERDRGMVWROCTIHCECRW", "OALTXVQWMNEXRKXOPLJVUALSMFNYXEFLVGOKHTWGLSAZRYHTQN", "RGTKGFUJGFFJEPFPFQWBWZGAUYYBPTCGETRUSGTUJLDQPJHTIF", "DQYSKMIRWTBCTQIONRJEJVNUJHIQWNBLRPHVQODRUMZPZEHPLZ", "MXSDOFDMRUEZMTQURLTEHWBRBJLSTCKWLGZJQVIIMIOURAZEMT", "GOZQKYZKNQWIENFUQFCECRSAHPVOLPRGMMNLPZTKIWEIWALRWI", "YUFATKAEWJDNNTTNLDWELEDFCRSNJDKAWWYBFBQOUMQRKJWOZE", "KZRQQSTHZROHFOIVBCJVGXBKJEQXDIGJUKCISOUJINPNWVUAWH", "BBQQZVFNLVYULWFYONQMYFYPMBIXNABGEJGOLUBSCTUEFSQNGL", "RSRBRBATQYOIZMBHAHFJFMDFWIUNYXANEZJGAHGPDMYEHTMXEQ", "JMRWXIADSBRYSNAVFLJFNCHMKASJYTYXOMVHSZSBVVTEYBLUAI", "XHXZXMBAVVOXXRURDAWHELSMNJVPUOVGMJQLNJSCBRSYNYUBMK", "UCVMQIUOGHKJXHCCVPPNVLWWVMRBGRQVTCPBBNWNKLJUJPLFXU", "MDIUSYXARHWCUVQOPXMOQDNQHUCGNRQQBCYOVQXDTJXONFIGWI", "LOOPBHDHLRCTDGJFFSIFOVZHYEBRHTYEXNABQABBGIEITHTPBG", "FZVZGIYGHZYPJPNKLUBULRWHSQUKBKHXCZIAPXDNLMYBHMJNDW", "IAANVORLZRYOPUQUDQYXLAADXBEWPHNXRPHPXJPXLOETKHTCGT", "HLZCEENARXJIOOAGRMDPPTVKACOXUORVUUFNOOGKUQMFBWTSEV", "PGOZIUTHIUZMYAUUHJFNRJWZCCWNBZVFHVKCNNFIQXKTTEKOMG", "UMFKQJAYKMAFETYYJQEBIDSYCJLXPBOGDQQCSSFIHUNGZPQVXE", "ZLBAFMQHGHNWODGZGAPHCTAPMGDURLDAITSDJTLPTTLIMWVQUA", "XHEEWYTWTNFLAFOBKGKWUMWCUGGCKBFTUJHDLKVSSIMTVAKMSK"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {1034685708, 1316351212, 956151256, 1282390976, 1125483400, 1029033672, 1283465080, 1185170940, 990699940, 1383666064, 1007636336, 1089317572, 1080926764, 1222359328, 1157296860, 1049642456, 1159384864, 1247877964, 965884056, 1234466236, 1226780356, 1247257296, 1286426820, 1028959748, 875985312, 1013589784};
    if(result == expected) {
        cout << "Test Case 37: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 37: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test38() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {29480890000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 38: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 38: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test39() {
    vector<string> table = {"AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB", "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {14740445000, 14740445000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 39: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 39: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test40() {
    vector<string> table = {"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 29480890000, 0, 0};
    if(result == expected) {
        cout << "Test Case 40: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 40: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test41() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {24252898400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2963542000, 0, 0, 0, 0, 2245836000, 0, 0, 0, 0, 9375700, 9237900};
    if(result == expected) {
        cout << "Test Case 41: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 41: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test42() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {63369600, 64333920, 65206400, 65987040, 66675840, 67272800, 67777920, 68191200, 68512640, 68742240, 68880000, 68925920, 68880000, 68742240, 68512640, 68191200, 67777920, 67272800, 66675840, 65987040, 65206400, 64333920, 63369600, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 42: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 42: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test43() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {2927485000, 2941221000, 0, 2958391000, 2958391000, 2961825000, 0, 0, 0, 0, 2893384800, 0, 0, 0, 0, 0, 0, 2951523000, 2951523000, 2941221000, 0, 0, 2961825000, 0, 0, 34100200};
    if(result == expected) {
        cout << "Test Case 43: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 43: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test44() {
    vector<string> table = {"AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF", "AHMADHAMMADZAKIALSHARIFAHMADHAMMADZAKIALSHARIF"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {7013601600, 0, 0, 2027433600, 0, 947784000, 0, 2965602400, 1986912400, 0, 1028139600, 1013716800, 3019859600, 0, 0, 0, 0, 975256000, 1006162000, 0, 0, 0, 0, 0, 0, 1030886800};
    if(result == expected) {
        cout << "Test Case 44: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 44: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test45() {
    vector<string> table = {"ABABACBADFGKASDFLKJWERDFGMVCBNASDLFKJAFLKASJWEPRO", "ZXCVVBMNSDLFKJASDFQPWEORITYUSDLFKGJZASXZCVNVNBCWQ", "ABABACBADFGKASDFLKJWERDFGMVCBNASDLFKJAFLKASJWEPRO", "ZXCVVBMNSDLFKJASDFQPWEORITYUSDLFKGJZASXZCVNVNBCWQ", "ABABACBADFGKASDFLKJWERDFGMVCBNASDLFKJAFLKASJWEPRO", "ZXCVVBMNSDLFKJASDFQPWEORITYUSDLFKGJZASXZCVNVNBCWQ", "WEOIURYTSDKHFQPWERPDZSLKZXCMNVBSDJHGFWUEIYREORTWE", "ASDFJKHZXLKJCHVQWEYRUIPYWEROITYUDSKLFJHGKALSJDHFD", "ASDLKFJHLKJWEHRQIWUEYTPOIQUWEOPIRUEQPOIRYTSDAHFKL", "ZXCKVJHLASKJDHFWQPUEYROIWEURTYPOIASDKLJFHKLJSHCVZ", "ABABACBADFGKASDFLKJWERDFGMVCBNASDLFKJAFLKASJWEPRO", "ZXCVVBMNSDLFKJASDFQPWEORITYUSDLFKGJZASXZCVNVNBCWQ", "ABABACBADFGKASDFLKJWERDFGMVCBNASDLFKJAFLKASJWEPRO", "ZXCVVBMNSDLFKJASDFQPWEORITYUSDLFKGJZASXZCVNVNBCWQ", "ABABACBADFGKASDFLKJWERDFGMVCBNASDLFKJAFLKASJWEPRO", "ZXCVVBMNSDLFKJASDFQPWEORITYUSDLFKGJZASXZCVNVNBCWQ", "WEOIURYTSDKHFQPWERPDZSLKZXCMNVBSDJHGFWUEIYREORTWE", "ASDFJKHZXLKJCHVQWEYRUIPYWEROITYUDSKLFJHGKALSJDHFD", "ASDLKFJHLKJWEHRQIWUEYTPOIQUWEOPIRUEQPOIRYTSDAHFKL", "ZXCKVJHLASKJDHFWQPUEYROIWEURTYPOIASDKLJFHKLJSHCVZ", "ABABACBADFGKASDFLKJWERDFGMVCBNASDLFKJAFLKASJWEPRO", "ZXCVVBMNSDLFKJASDFQPWEORITYUSDLFKGJZASXZCVNVNBCWQ", "ABABACBADFGKASDFLKJWERDFGMVCBNASDLFKJAFLKASJWEPRO", "ZXCVVBMNSDLFKJASDFQPWEORITYUSDLFKGJZASXZCVNVNBCWQ", "ABABACBADFGKASDFLKJWERDFGMVCBNASDLFKJAFLKASJWEPRO", "ZXCVVBMNSDLFKJASDFQPWEORITYUSDLFKGJZASXZCVNVNBCWQ", "WEOIURYTSDKHFQPWERPDZSLKZXCMNVBSDJHGFWUEIYREORTWE", "ASDFJKHZXLKJCHVQWEYRUIPYWEROITYUDSKLFJHGKALSJDHFD", "ASDLKFJHLKJWEHRQIWUEYTPOIQUWEOPIRUEQPOIRYTSDAHFKL", "ZXCKVJHLASKJDHFWQPUEYROIWEURTYPOIASDKLJFHKLJSHCVZ", "ABABACBADFGKASDFLKJWERDFGMVCBNASDLFKJAFLKASJWEPRO", "ZXCVVBMNSDLFKJASDFQPWEORITYUSDLFKGJZASXZCVNVNBCWQ", "ABABACBADFGKASDFLKJWERDFGMVCBNASDLFKJAFLKASJWEPRO", "ZXCVVBMNSDLFKJASDFQPWEORITYUSDLFKGJZASXZCVNVNBCWQ", "ABABACBADFGKASDFLKJWERDFGMVCBNASDLFKJAFLKASJWEPRO", "ZXCVVBMNSDLFKJASDFQPWEORITYUSDLFKGJZASXZCVNVNBCWQ", "WEOIURYTSDKHFQPWERPDZSLKZXCMNVBSDJHGFWUEIYREORTWE", "ASDFJKHZXLKJCHVQWEYRUIPYWEROITYUDSKLFJHGKALSJDHFD", "ASDLKFJHLKJWEHRQIWUEYTPOIQUWEOPIRUEQPOIRYTSDAHFKL", "ZXCKVJHLASKJDHFWQPUEYROIWEURTYPOIASDKLJFHKLJSHCVZ", "ABABACBADFGKASDFLKJWERDFGMVCBNASDLFKJAFLKASJWEPRO", "ZXCVVBMNSDLFKJASDFQPWEORITYUSDLFKGJZASXZCVNVNBCWQ", "ABABACBADFGKASDFLKJWERDFGMVCBNASDLFKJAFLKASJWEPRO", "ZXCVVBMNSDLFKJASDFQPWEORITYUSDLFKGJZASXZCVNVNBCWQ", "ABABACBADFGKASDFLKJWERDFGMVCBNASDLFKJAFLKASJWEPRO", "ZXCVVBMNSDLFKJASDFQPWEORITYUSDLFKGJZASXZCVNVNBCWQ", "WEOIURYTSDKHFQPWERPDZSLKZXCMNVBSDJHGFWUEIYREORTWE", "ASDFJKHZXLKJCHVQWEYRUIPYWEROITYUDSKLFJHGKALSJDHFD", "ASDLKFJHLKJWEHRQIWUEYTPOIQUWEOPIRUEQPOIRYTSDAHFKL", "ZXCKVJHLASKJDHFWQPUEYROIWEURTYPOIASDKLJFHKLJSHCVZ"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {1940488900, 988790200, 1004879760, 1854834060, 1276800160, 1918766320, 658886940, 708352300, 787678040, 1475396600, 1771419540, 1431909740, 411364600, 719447280, 789898580, 822438760, 683233740, 1159571080, 1830543340, 533553620, 732766700, 1017573660, 1302008860, 470643860, 727436580, 745206780};
    if(result == expected) {
        cout << "Test Case 45: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 45: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test46() {
    vector<string> table = {"REMAUNYMPSRUJUNNXKDQ", "VLSRWVAEWFVGJUNIJUSY", "LCPOISYIXXZQVSRGTHDK", "JTAKIRWOEYSSJMTCDYPB", "HQBKCENHUCTSEIQYREBK", "OGANIVNLUAHGZAEGNYGU", "KKCWGDBENDEMEYXPLTJU", "RTVSPIHTTUEWBYYSEWGJ", "HPLNNIUUDWOQITRKTBLT", "BUVZVLBQQVCKXLAWSSOP", "EBOWDVHGYNXPDMBGVJFE", "QVOEMGPAMDCGOEMZFGCA", "FVTEMIDFCLGLXHFRCHYR", "NCFJIFPMFVDUMMVALLGL", "DPYQTIAPIQJQMHDMHKGK", "SGEXWRDBUHQWELQPCUYO", "KYSMSKCFLPDODAGWDNQQ", "AMMZGKJPMIPRYXPTNSRK", "MXHPAFUHZQVSBYGKPSCD", "STTHRGPTKNXPOQFOCGSA", "TKUOJYALYFXXTCLVIMBU", "OFFPFMTLPWHOHMVNUNGC", "BHKDAZIPAXAYGCXAWPEB", "HNAQQIJMOJMFHWHUYMOW", "FWCHDEQSUOCZTLYOOTEU", "DRKTDJPVDDEMCCOYVSAQ", "YBYOEEMSKDYCYNWRQUFF", "DSDTRBTSJNKQRILOKOXH", "MVXFUXVFAFGVHUQKPTRY", "BMVPBRCTJCVLZEGBJYJM", "QNGPINPTZAOVBOVOMWMN", "WCWJQAAQMOFPHXWXOYFC", "ISGSRAVWPBKOIBWNHUCT", "VQESHWLXALWVUEQKSXJM", "XRKRRZJPUUIPNESSLHLW", "KYAUHJAVXYGQSXZDKXLU", "BAQLUQOGSDXKCHQARGEF", "ENVGETUDLTYZYCXVSZSD", "DZQIOVTVHQWDKHFHFLES", "VDEGQSYXJEMJOXZNKGRO", "CYPZQQGHRUAVIBFXUXCP", "VEHVERNOTHJHTEMSZDTO", "WRWOXJGPXVVAVXDMCZLX", "PDGLFMPPCXUKAYHTUAFU", "GSPHRDCUSXYMVUOGVHVE", "RZOXIKHTFOMEJNPGORSF", "KULLAFUENSXCBQIXNJPW", "CUQQQKKNZGJVLSADEBJH", "OJYTNVFPHCOHPZJJBYZH", "GANAAKPDUBPCUFIXUTYI"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {81570032, 55375328, 77282840, 79558488, 80876920, 71768176, 81448568, 89523032, 55581968, 65865920, 72504568, 67420592, 82197560, 66872088, 86556152, 94465224, 84586448, 60669856, 82750160, 76989160, 89963976, 93843744, 61830240, 85566640, 80309568, 45738752};
    if(result == expected) {
        cout << "Test Case 46: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 46: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test47() {
    vector<string> table = {"BCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXA", "CDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXAB", "DEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXABC", "EFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXABCD", "FGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXABCDE", "GHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXABCDEF", "HIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXABCDEFG", "IJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXABCDEFGH", "JKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXABCDEFGHI", "KLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXABCDEFGHIJ", "LMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXABCDEFGHIJK", "MNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXABCDEFGHIJKL", "NOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXABCDEFGHIJKLM", "OPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXABCDEFGHIJKLMN", "PQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXABCDEFGHIJKLMNO", "QRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXABCDEFGHIJKLMNOP", "RSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXABCDEFGHIJKLMNOPQ", "STUVWXYZABCDEFGHIJKLMNOPQRSTUVWXABCDEFGHIJKLMNOPQR", "TUVWXYZABCDEFGHIJKLMNOPQRSTUVWXABCDEFGHIJKLMNOPQRS", "UVWXYZABCDEFGHIJKLMNOPQRSTUVWXABCDEFGHIJKLMNOPQRST", "VWXYZABCDEFGHIJKLMNOPQRSTUVWXABCDEFGHIJKLMNOPQRSTU", "WXYZABCDEFGHIJKLMNOPQRSTUVWXABCDEFGHIJKLMNOPQRSTUV", "XYZABCDEFGHIJKLMNOPQRSTUVWXABCDEFGHIJKLMNOPQRSTUVW", "YZABCDEFGHIJKLMNOPQRSTUVWXABCDEFGHIJKLMNOPQRSTUVWX", "ZABCDEFGHIJKLMNOPQRSTUVWXABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXABCDEFGHIJKLMNOPQRSTUVWXYZ", "BCDEFGHIJKLMNOPQRSTUVWXABCDEFGHIJKLMNOPQRSTUVWXYZA", "CDEFGHIJKLMNOPQRSTUVWXABCDEFGHIJKLMNOPQRSTUVWXYZAB", "DEFGHIJKLMNOPQRSTUVWXABCDEFGHIJKLMNOPQRSTUVWXYZABC", "EFGHIJKLMNOPQRSTUVWXABCDEFGHIJKLMNOPQKSTUVWPYZPBPD", "FGHIJKLMNOPQRSTUVWXABCDEFGHIJKLMNOPQRSTUVWXYZABCDE", "GHIJKLMNOPQRSTUVWXABCDEFGHIJKLMNOPQRSTUVWXYZABCDEF", "HIJKLMNOPQRSTUVWXABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFG", "IJKLMNOPQRSTUVWXABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGH", "JKLMNOPQRSTUVWXABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHI", "KLMNOPQRSTUVWXABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJ", "LMNOPQRSTUVWXABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJK", "MNOPQRSTUVWXABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKL", "NOPQRSTUVWXABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLM", "OPQRSTUVWXABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMN", "PQRSTUVWXABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNO", "QRSTUVWXABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOP", "RSTUVWXABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQ", "STUVWXABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQR", "TUVWXABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRS", "UVWXABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRST", "VWXABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTU"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {974404152, 983583688, 973853992, 982472568, 981970248, 981518888, 981128088, 980805848, 980558568, 980391048, 992109256, 980306488, 980391048, 980558568, 980805848, 1010611656, 981518888, 970167480, 982472568, 983014648, 983583688, 984165288, 984517848, 973846192, 481814784, 481924664};
    if(result == expected) {
        cout << "Test Case 47: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 47: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test48() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {437491600, 1087547800, 1101283800, 1113646200, 1124635000, 1632180200, 3816891000, 1149359800, 2120495000, 1143865400, 1161722200, 1061106000, 585840400, 593738600, 600950000, 607474600, 613312400, 618463400, 1230402200, 626705000, 2165480400, 632199400, 633916400, 634946600, 635290000, 634946600};
    if(result == expected) {
        cout << "Test Case 48: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 48: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test49() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {12437948000, 609878400, 607818000, 590648000, 451227600, 585153600, 578972400, 572104400, 516473600, 564549600, 556308000, 547379600, 609191600, 609878400, 527462400, 537764400, 420321600, 465650400, 595455600, 479386400, 504798000, 609191600, 436118000, 605757600, 492435600, 603010400};
    if(result == expected) {
        cout << "Test Case 49: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 49: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test50() {
    vector<string> table = {"NWLRBBMQBHCDARZOWKKYHIDDQSCDXRJMOWFRXSJYBLDBEFSARC", "BYNECDYGGXXPKLORELLNMPAPQFWKHOPKMCOQHNWNKUEWHSQMGB", "BUQCLJJIVSWMDKQTBXIXMVTRRBLJPTNSNFWZQFJMAFADRRWSOF", "SBCNUVQHFFBSAQXWPQCACEHCHZVFRKMLNOZJKPQPXRJXKITZYX", "ACBHHKICQCOENDTOMFGDWDWFCGPXIQVKUYTDLCGDEWHTACIOHO", "RDTQKVWCSGSPQOQMSBOAGUWNNYQXNZLGDGWPBTRWBLNSADEUGU", "UMOQCDRUBETOKYXHOACHWDVMXXRDRYXLMNDQTUKWAGMLEJUUKW", "CIBXUBUMENMEYATDRMYDIAJXLOGHIQFMZHLVIHJOUVSUYOYPAY", "ULYEIMUOTEHZRIICFSKPGGKBBIPZZRZUCXAMLUDFYKGRUOWZGI", "OOOBPPLEQLWPHAPJNADQHDCNVWDTXJBMYPPPHAUXNSPUSGDHII", "XQMBFJXJCVUDJSUYIBYEBMWSIQYOYGYXYMZEVYPZVJEGEBEOCF", "UFTSXDIXTIGSIEEHKCHZDFLILRJQFNXZTQRSVBSPKYHSENBPPK", "QTPDDBUOTBBQCWIVRFXJUJJDDNTGEIQVDGAIJVWCYAUBWEWPJV", "YGEHLJXEPBPIWUQZDZUBDUBZVAFSPQPQWUZIFWOVYDDWYVVBUR", "CZMGYJGFDXVTNUNNESLSPLWUIUPFXLZBKNHKWPPANLTCFIRJCD", "DSOZOYVEGURFWCSFMOXEQMRJOWRGHWLKOBMEAHKGCCNAEHHSVE", "YMQPXHLRNUNYFDZRHBASJEUYGAFOUBUTPNIMUWFJQSJXVKQDOR", "XXVRWCTDSNEOGVBPKXLPGDIRBFCRIQIFPGYNKRREFXSNVUCFTP", "WCTGTWMXNUPYCFGCUQUNUBLMOIITNCKLEFSZBEXRAMPETVHQND", "DJEQVUYGPNKAZQFRPJVOAXDPCWMJOBMSKSKFOJNEWXGXNNOFWL", "TWJWNNVBWJCKDMEOUUZHYVHGVWUJBQXXPITCVOGRAIDDVHRRDS", "YCQHKLEEWHXTEMBAQWQWPQHSUEBNVFGVJWDVJJAFQZZXLCXDZN", "CQGJLAPOPKVXFGVICETCMKBLJOPGTQVVHBGSDVIVHESNKQXMWR", "QIDRVMHLUBBRYKTHEYENTMROBDEYQCRGLUAIIHVEIXWJJRQOPU", "BJGUXHXDIPFZWSWYBGFYLQVJZHARVRLYAUUZDRCNJKPHCLFFRK", "EECBPDIPUFHIDJCXJHRNXCXMJCXOHQANXDRMGZEBHNLMWPMHWD", "VTHSFQUEEEXGRUJIGSKMVRZGFWVRFTWAPDTUTPBZTYGNSRXAJJ", "NGCOMIKJZSDWSSZNOVDRUYPCNJULKFUZMXNAFAMESPCKJCAZXD", "RTDGYRQSCCZYBNVQQCQCJITLVCNVBMASIDZGWRAATZZWPWMFBF", "JKNCVKELHHZJCHPDNLUNMPPNLGJZNKEWWUYSGEFONEXPMMSBAO", "PMDGZQMKQZXUVTQVNXBSLQZKGLZAMZPDNSJOLVYBWXXTTQOGNR", "BAIAKQLLSZKHFZCONNMOQKLPEEFSNSMOUWQHODSGCFOHESYSHM", "GXWTOAYUVNOJDJFTQTWKBAPRIUJIMQWSPSLGVLCSAQBDBGWTBS", "EETTWDNFNBYJVPDJXYUZQXSTATBZPCTTHOOFREMGFKRBCVKZVG", "BOFTHGOJHDNAYWPNBITORAAIBEDNEZWFPDAWLOHSSVTQTKFVSY", "LJZLUCQXSWYQDNTDMFRTZLQSEKEJHZKSKLFEPXCHVCZYSVDGCX", "BBISWMEAYLZIFKTMOIKSSFXTGPOJXQIYSRSQFWQDJQNQCGDQRN", "LLUIEAZVMWNUUFNNXVLOYVGMLIUQANDLYAVFAUAOSNLNVACSVP", "IUMOIAWCQXSWKQWGXYAZNTNAIKAMEYBNUQBCQAGGXACHRYNQXQ", "QMLFOTPQHVOKIIAMMQMVXJVBSOAIFZYXNJCBERRNMIXXSYJHOV", "ENGBPYQRIXQGWDRYGXRXKFHICAINHWILKQMBPESZDIGZNZXTZQ", "SJWATYCBMJAWWMNINEPFDUPLUCLTXMKPVGRRGTUSEURAGELTKC", "APWPBQROMQAWIXEZQKVLFBHWCOCPJMRMBPBEGVSULUQTUUVKES", "VJTDHVTJMEXFQBVUFDPAXCWNWQJTBPLYZEDICWSODPWTQRPYUE", "ARHWGFNPAQELOFRSOTQIKTXIPQZEQVLQMUOUBBJBRPMIXFCLBS", "TNOSVDKUJCPWSDQHXRKIUEZIOWOQJPIECWXXBJTNMKJGNCPMVA", "UQGTAUSOKBFUGJTFIUQBJCLVLAZAMUCIMICNEWDOXJLFUEMDAD", "GKHUFSUEVJAXRNIVCORHFRQQWNUJQUOYEVSLQPRLYSKRHUNLJG", "SOXLEUYYFQUTOZQHMGYETYYEPFAESJLKZIVDEVDLLYGAZXJNDJ", "RXHRDYYDDQNQDOAYSHWXSHXZJYWUMBFFAMXDNXJQOYIRMIRERN"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {1098596164, 1168250424, 1144196136, 1232543196, 1204098924, 1100616544, 1062985464, 970802596, 1092088620, 1133380480, 936901388, 1042287696, 1112935768, 1318476864, 1078157172, 1215434444, 1428633240, 1108650264, 1182156284, 1002761580, 1272729556, 1157442904, 1216038660, 1243557344, 994507568, 962660720};
    if(result == expected) {
        cout << "Test Case 50: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 50: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test51() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {64180480, 65049920, 65840320, 66551680, 67184000, 67737280, 68211520, 68606720, 68922880, 69160000, 69318080, 69397120, 69397120, 69318080, 69160000, 68922880, 68606720, 68211520, 67737280, 67184000, 66551680, 65840320, 65049920, 64180480, 38038000, 38038000};
    if(result == expected) {
        cout << "Test Case 51: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 51: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test52() {
    vector<string> table = {"ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO", "ADFADSFADFAFDSFHHHHHHHEWRQEWEEEEEEEEERRRRRRRROOOOO"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {2102294800, 0, 0, 2163420000, 7075070200, 2831333000, 0, 4516740200, 0, 0, 0, 0, 0, 0, 2432989000, 0, 661045000, 5232385800, 1146269200, 0, 0, 0, 1319342800, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 52: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 52: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test53() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {0, 0, 0, 0, 0, 0, 0, 0, 0, 11253396, 29469636604, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 53: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 53: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test54() {
    vector<string> table = {"PHQGHUMEAYLNLFDXFIRCVSCXGGBWKFNQDUXWFNFOZVSRTKJPRE", "PGGXRPNRVYSTMWCYSYYCQPEVIKEFFMZNIMKKASVWSRENZKYCXF", "XTLSGYPSFADPOOEFXZBCOEJUVPVABOYGPOEYLFPBNPLJVRVIPY", "AMYEHWQNQRQPMXUJJLOOVAOWUXWHMSNCBXCOKSFZKVATXDKNLY", "JYHFIXJSWNKKUFNUXXZRZBMNMGQOOKETLYHNKOAUGZQRCDDIUT", "EIOJWAYYZPVSCMPSAJLFVGUBFAAOVLZYLNTRKDCPWSRTESJWHD", "IZCOBZCNFWLQIJTVDWVXHRCBLDVGYLWGBUSBMBORXTLHCSMPXO", "HGMGNKEUFDXOTOGBGXPEYANFETCUKEPZSHKLJUGGGEKJDQZJEN", "PEVQGXIEPJSRDZJAZUJLLCHHBFQMKIMWZOBIWYBXDUUNFSKSRS", "RTEKMQDCYZJEEUHMSRQCOZIJIPFIONEEDDPSZRNAVYMMTATBDZ", "QSOEMUVNPPPSUACBAZUXMHECTHLEGRPUNKDMBPPWEQTGJOPARM", "OWZDQYOXYTJBBHAWDYDCPRJBXPHOOHPKWQYUHRQZHNBNFUVQNQ", "QLRZJPXIOGVLIEXDZUZOSRKRUSVOJBRZMWZPOWKJILEFRAAMDI", "GPNPUUHGXPQNJWJMWAXXMNSNHHLQQRZUDLTFZOTCJTNZXUGLSD", "SMZCNOCKVFAJFRMXOTHOWKBJZWUCWLJFRIMPMYHCHZRIWKBARX", "BGFCBCEYHJUGIXWTBVTREHBBCPXIFBXVFBCGKCFQCKCOTZGKUB", "MJRMBSZTSSHFROEFWSJRXJHGUZYUPZWWEIQURPIXIQFLDUUVEO", "OWQCUDHNEFNJHAIMUCZFSKUIDUBURISWTBRECUYKABFCVKDZEZ", "TOIDUKUHJZEFCZZZBFKQDPQZIKFOBUCDHTHXDJGKJELRLPAXAM", "CEROSWITDPTPCCLIFKELJYTIHRCQAYBNEFXNXVGZEDYYHNGYCD", "RUDMPHMECKOTRWOSPOFGHFOZQVLQFXWWKMFXDYYGMDCASZSGOV", "SODKJGHCWMBMXRMHUYFYQGAJQKCKLZNAYXQKQOYZWMYUBZAZCP", "KHKTKYDZIVCUYPURFMBISGEKYRGZVXDHPOAMVAFYRARXSVKHTQ", "DIHERSIGBHZJZUJXMMYSPNARAEWKEGJCCVHHRJVBJTSQDJOOTG", "PKNFPFYCGFIEOWQRWWWPZSQMETOGEPSPXNVJIUPALYYNMKMNUV", "KLHSECDWRACGFMZKGIPDFODKJMJQWIQPUOQHIMVFVUZWYVIJGF", "ULLKJDUHSJAFBTLKMFQRMYJFJNHHSSQCTYDTEAMDCJBPRHTNEG", "YIWXGCJWLGRSMEAEARWTVJSJBAOIOJLWHYPNVRUIHOSWKIFYGT", "YDHACWYHSGEWZMTGONZLTJHGAUHNIHREQGJFWKJSMTPJHAEFQZ", "AAULDRCHJCCDYRFVVRIVUYEEGFIVDRCYGURQDREDAKUBNFGUPR", "OQYLOBCWQXKZMAUSJGMHCMHGDNMPHNQKAMHURKTRFFACLVGRZK", "KLDACLLTEOJOMONXRQYJZGINRNNZWACXXAEDRWUDXZRFUSEWJT", "BOXVYNFHKSTCENAUMNDDXFDMVZCAUTDCCKXAAYDZSXTTOBBGQN", "GVVPJGOJOGLMKXGBFCPYPCKQCHBDDZWRXBZMQRLXVOBTWHXGIN", "FGFRCCLMZNMJUGWWBSQFCIHUBSJOLLMSQSGHMCPHELSOTFLBGS", "FNPCUZSRUPCHYNVZHCPQUGRIWNIQXDFJPWPXFBLKPNPEELFJMT", "KUQPZOMWNLMBUPMKTLPTNDMPDSYDSGVFPENEMWBORIFSUQHCES", "KMKHSSMVNONWAFXWHGBIBABVQOPQFOVIUSSQFQWEHTXDZUJTLN", "TXMRJXXWTLGGKYTBIOLYDNILQADOJSKKVFXAHHJMBOCLJARINT", "DWCLDVDXROPBYJZWYYOJUOTHWMLVRGLFZDZDBTUBXUOFFVNCRS", "WSAZNMOIJOIVVGOBQPNCKWVNHKEBMTDHVYGKJISUXHATMUUDQB", "HMKNHFXAXQXKJLZZQTSJFAEEDFUUJKOLXJOQKDVFEPVLHVHRWT", "FDUKXFFJPSSWYXLIJJHEVRYXOZBAFPFMOWGRGONUATDQLAHYGG", "YLJDDJHMLTEDZLODSRKEUTGTNKNTARJKPXINOVGZDTHUNWOOXV", "JJMPSVKNHKWJOPMMLEBKSUCVZQLYQNWCMBVBHRMLOWPJBWYVWT", "GTOQNMICXAPZARKNNXTUUFARZROSDQWSMTCJGHECQUDOSRTJXY", "AAYKQRXYCRXUWJXNPQJNBKCPDMOKALXAPEMVBQLZSVXZKUTAPP", "WGZPDPYZKZCVBNTCVFXSXPJAOXTFHVXXYTGOKRCXAETAUQGNDM", "PHWZYIAYABJRQGEPPXYJSTTYZUVLDVYBSUXKBMFZVRTNOVIDZN", "PGHOZVAFMSNSNQIVMVUBCWTFSRQTMKNEPBHOWEJAZHKWCMMTPI"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {1053690344, 1060398088, 1198685216, 1156610920, 1054613956, 1249254440, 1108587604, 1231508576, 869373896, 1280416964, 1193869040, 938230056, 1255746528, 1127955576, 1278743956, 1219125608, 1030739376, 1214160888, 1125471276, 1062127364, 1242222576, 1028514940, 1111200660, 1151870836, 1047473432, 1190297884};
    if(result == expected) {
        cout << "Test Case 54: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 54: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test55() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {2927485000, 2941221000, 2951523000, 2958391000, 2961825000, 2961825000, 2958391000, 2951523000, 2941221000, 2927485000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 55: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 55: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test56() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {1204647200, 1115363200, 1144208800, 1206020800, 1144208800, 1204647200, 1201900000, 1197779200, 1192284800, 1192284800, 1185416800, 1177175200, 661045000, 661045000, 1197779200, 1201900000, 1115363200, 1156571200, 1206020800, 1167560000, 1185416800, 1130472800, 1130472800, 1156571200, 1177175200, 1167560000};
    if(result == expected) {
        cout << "Test Case 56: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 56: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test57() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {4759524000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 57: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 57: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test58() {
    vector<string> table = {"ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID", "ABALCKLJAIOIDJDJJDOIEHOIZLCOIELJDLJELJEYUEYAOID"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {1792891400, 418948000, 1043249200, 2634564800, 2672338800, 0, 0, 583780000, 3213880600, 3804185200, 473892000, 3163744200, 0, 0, 2701871200, 0, 0, 0, 0, 0, 485911000, 0, 0, 0, 958429400, 584810200};
    if(result == expected) {
        cout << "Test Case 58: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 58: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test59() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {29312357348, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 106735300, 0, 61797352};
    if(result == expected) {
        cout << "Test Case 59: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 59: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test60() {
    vector<string> table = {"TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO", "TANYAGEGJBIEPIOIEGNBIOENBEIOPNEBONBIONOBEO"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {713585200, 2544594000, 0, 0, 3002346200, 0, 1257187400, 0, 2662723600, 415170600, 0, 0, 0, 2519182400, 2875288200, 893526800, 0, 0, 0, 324513000, 0, 0, 0, 0, 363660600, 0};
    if(result == expected) {
        cout << "Test Case 60: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 60: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test61() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 29480890000};
    if(result == expected) {
        cout << "Test Case 61: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 61: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test62() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {5199076000, 0, 0, 0, 1294618000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 62: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 62: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test63() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {21562086000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 63: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 63: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test64() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {0, 0, 0, 0, 0, 0, 29480890000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 64: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 64: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test65() {
    vector<string> table = {"MOROIHADFGEEIEEIGBDEEBCJDJFHIEFAHJDEGHDHHIGFCAGEDH", "JEGFCADBCHFAIBFDGCHHGHGAIIHDEABJBIHAFCAEIHFIHACJHI", "CJCAJBDJDFCDJJGIAEJBCGGDAHGDBEGBDBEECGFAEJFBFEIGEF", "HICEFICCCCEIHIAFCHDHBCBDGFHFEBDJGEDEIJJHHFAFDFIEGI", "EDFBDACGJIHBIJEJGBHGCBEGEFFCFHJDHDDBBFIFFDJFBGEHDJ", "ICFDEFEGCCHHCHAAFAIBHFIEHHAJHCDIEDFIGCBIIICCEGCEEH", "JDAEEBFJAJBFDFJGCFAJJIIJAFHIBIBIDEDCAEIDFAFEIIIFAH", "JCDDGADJBCFCCHDIHCJBHJIBHBJGJBBECAGJAGCHIJEFIIGFDH", "IGFFFBCCCJHHFCGIHGDFJGBCHCCEBFIBJGCDFJHJCHFBGFGBGF", "AIIDGIAGBBFDEBGBEIAAJBCDEDIEGGIJBEEEJEFFGAEEFGGCIB", "CBJGIDBGGAGFABIJDADDHJCECFABFCIBHGFDAEACGBDHCDDGHG", "HHDHEGGEGBAADCEJJJAIAAEADIIIEEDBGIIFHCAHAFABBIJCFB", "DHJAIDHJDFBIBAEBJHABDGAIBIJCIACBHDDCAIGGJEDBEEFJDC", "GIFCEDCJFCJACJHEDCADDAHJBCHJDDIHCJEFEDJAJCCIGBECDJ", "IDEBFDBGAIFGIIHJGDFHGADGIJHCCDBECBCEJCGEIDFHEDACCD", "HGFIJGCAIJDBIAJBBAHFCFJBFJGEBIIHHDDCHIDEAAHCJJEGDA", "HBEAIJAAFDFACEGIBFGGDIFHDFJHJBFDGCIDABJEIFHDGIIBBE", "BCEEIIGGAGHABGHFDGDEDAHFHFFDBJABDHGJIFAJGJCDACFGEF", "CHGECFJICJJICCJDFFADDDEFDIGCJGEDHBGFFBFFFABDFAEDIB", "GJAJAFHEBFJIAJGFADDAIHJFGFIJFHFHABICAAIFJECDJHDACJ", "BCFFBGHCFBJAHEEAEJAFDCDJGEAIHJBIFHDDAFFIFEFGICGABD", "GBJGGEAFEGJABDGJHCGBCGEBAJIEEJDAAFDDCDDGFGBEFEADJI", "IIBDHFJIBABIJBGGFJDGIFIACBBJIDGFAAAAGGEFCFHJHECABD", "DHBDAGIJFDACAGFBAFHCFGAJDBIJHIAHBGDJDEFCAIHGBJGFHB", "CADFDBAIEIBDGBDEFIIFIJAAEAFGFHFGDCHEDBGFEBAAIFFHFD", "FACGEEJFABGJDGAIEIEBJBCEEEIAACCIHAJAFEDBGHDBCAFGJC", "HDJFCDBHBHCAJEDEEBACAICHFEIEIAIACBAGIHAGEEEFCICEJI", "ECEDJFDDFIIJAADJJBIHBBAEGJBDABBGEFIAHJGCJEBDFCAGDB", "ABADBEHAADEGCIICIIBFEIBHIAJBBGHDFFFIFDEBDHHHDGEEAC", "IEAADFEDGIADDCFHJCFJDEDADIGIFFFJHCFCFFIBECECCIJAGB", "FCHBADGFIIFDCDHFBGCDCAEGADAEBEDDBCIFFEFCECDFDGEHHD", "IBDGBIHEJGHAABJBDGCJGDFBHBEIBDFDBIGICBEIHFHBEEFHDG", "CHGBCDHAFAGIFEHDGAFFJHCGEABJJIFCECAJEGIEEEHHEBCDCB", "FFHJDEEDHCEIHEHEGAFFBFDAJAFFGGBDCBBHBCBEIEBHBEGCAD", "DEAJCAIEGIJADDEGIIBCEIADDJAAIEIDAGJDBFIEIAIIBCFBGI", "HBGBJIJFGFDDAFDIEFCCGEAFCBDDGDIJDGJFHBJGICHBCCBBDB", "FGJGHDCJCEBACADDCFGHCFCIGCFIECGAIEAADIHCHHGHFJCAFI", "FFCBJJDCHEAGHICIJJJHFBIBDDACJIDHCFFEFBCBDJBGBIHEAD", "JCEEBIAFGCDABAHCBEHDDGBGEHCEEHJIFDCJHBABGJGBGBDHBB", "DBEEBJGCBHHACEFAJIDFJEHECFHIBHIIJDHGDIHBDJEIHDDFJI", "HHHCJBAFBFICJHFBEECFHCIICEEHEAGHCJEAEJFCIFCIIJBEEG", "BJJGDFJCHHBAGDIJEEFIECBEADFAEAICJFBCJJICDBBIEIACEE", "DDFDAAJJGAGEBAEBBHHCICCHGFJDEHAHDJAADCEFEEFAADBJCH", "CADHFEAGAEBEBFACDJEHIJCEEIAFBDIJBIFGBBJHGCJCIBICCB", "GHCCHGIDDFHACBDDBFGEGAGBBBCBDCEJGJCBJHBDDHEEFHDDJJ", "DAGFCEBCDJBIFFGCGFEGGCHICEJCIFJEEHEAFHAFICIEHFECBA", "CAHAIACCFDDCBHCGJGFHDJCJJCBHBHGAFDEDABEEFFCEBIIBDE", "DFBGGDEEFGDFBHACABEACFADEHIHEBJFAIICFDFJJDFEGHIDEI", "AHFIFCCGBEHIAJJGBIHBCACHBFGFHFGFHCGEBHIDDDBAAIJJFH", "GAJDDJIJEFIGACBFCJJGAFEFBHFIHHAICIEIJHDBADBCHHBEED"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {2961924664, 3085195124, 2946031484, 3221906172, 3046105144, 3257225188, 2626957916, 2656265404, 2971590320, 2678114584, 0, 0, 7022500, 0, 15030800, 0, 0, 7520700, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 65: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 65: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test66() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {23133193216, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 66: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 66: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test67() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {9951060, 10912060, 14776300, 0, 0, 0, 0, 14376348, 0, 0, 0, 0, 0, 0, 29418162652, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12711580};
    if(result == expected) {
        cout << "Test Case 67: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 67: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test68() {
    vector<string> table = {"AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF", "AASDHASDASFSFHGGJDFDAAFFSDFDSGSDFFSDF"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {1884922600, 0, 0, 2601598400, 0, 2962168400, 1045996400, 654863800, 0, 364004000, 0, 0, 0, 0, 0, 0, 0, 0, 2556956400, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 68: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 68: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test69() {
    vector<string> table = {"ANNFLVKMHSCETPYWHUUHZJULASWWFTQKGYLKNEYOAMMEQOBDYA", "MWEYHUIPPQCVCLBQOOGUEZIZJJKDQPIWASDULNJBPTQCHDVXTX", "MADDFSWULEHLNPUNODYJHXKSIMKPOUDWLDTKOFFVVGQVGQXNTC", "FBNSMHXQKJVDGUSCQLQOVAPQJSVGYRDGRBIOTIZPLGSLLHHIZG", "DFDJXOUTWOTOASFMQYOZYIQMTNHEQDNETNHSVIESBWTAZXEABY", "OUFDHQVGXDQWNKWYGJMZEONNNOEEUBESPVOEHWPTJHBOGSUCLA", "KFRJVORCVSTXXQISFBVIAQHUDSMCOLGXSXJPJEUWVFQEUFUKBW", "TQQEMSZPNYXGIPOTMKRWRWGOQIIFFHKUQMDZLHUQAALQEQOTBV", "DDGWGDZHBFGWMJSLRZLUXSAJGMMZBDBEISIOWYYZNDLGUMOTQJ", "KFMVVDDZWPRZICIXDJIKCDRKFJXBPDDAMONIERGDBMAYJYLREJ", "AWVXRRJJRUXPSABQQDOZZGAOFPVAUHMRPOGBKBBLMWBILPBZFI", "LYJRWEAHSUQCLEGSQXCLCYKOKUQUGPHUPCNISELQFATJKYNLXN", "VYNINWMOUBPISKTFEQWJVZNWTNDLMNLBCRIEQUOIZZDIYSOSQE", "OJPVIANDZSFFHFXQASKXFBXMBFBWBHDHZPRPVOVWDIGWAOYSBI", "FRZFPCRXOHJVFIWBZEHRXTINBDJMGTIOJZFTMKEFCVILGPTLVM", "KRNGGOYRXJQNYKHQRPELILPFYNQLFRNKEGOQPRAPSNBXXCJDGQ", "DHONBVKIZWJXHQCKLIFICKUAXOYWLTDVYSRLIPDPDFPGJSVPHX", "WBDKAKIGPLKFGTRHXTVAZZUKQMJFSTXOCMLUDBAVLHWMANUILL", "IVJLVONARLUCQYWLZELHFCHLRCTFDYPDJMCNJAWVJCRSJADGZW", "FGMLMOCACMLQIZHFEMVPTXYWBGDISVNBYNRVOIUHQGZRLOYLCU", "JGVYXGNWFPZXSMAYAHHJAUOUXOAEXCTXTBXFQEQEJNOUEZOEBM", "JKZSSSRIQWFHZNMHCTVZYSFQSYJQEKBRMCESULZOWXBBZGRNFI", "BFWMWVEJHOLLBLALAFBQOUETPZSWPKKFCHBWTHJFHDUGODAQSC", "CFZTBUJEALZZHYUMZCZIBMGOBJXHXVZMCVWGINTHLXEZDBDPOR", "OCGQKKDDXEEUNBNADKPNJRICHLRYIFHJSCKSNMZCNMHJSAITIA", "UARSYHDKXHOWDNDCBQBPBBGHDMEWUSGLUJLNUMFXMSZTJTZJRX", "VGRCFJIHQARKPUSCWBSTXQBXTGUACCSNBADEUIHSLPVSXPBHPL", "EWLCAIMKMKKOEJNFGVDHLOZZHLVPEOIWULXAUXFLLESQVXUESU", "JHEJYVOCFATLVFMPGVQFJOMWVJLULLFFAFXCADNVKFQQPTIHWW", "MYSWYPJMGMOKEREZCYWCYRCQCFYKQVBMGMIKKPURIYPWMUYGGH", "TGBOZYWBGROIYONJLLSLFFOSXYVTUDITEISOYUMIYEOCSHUVSF", "KTQCNZYUPYZTURUXPPPGLFIFJNDJGLZRYBRIJBKQBDJDXISSSF", "JZOHQXAHBPKASOGNHEAWBJPWEWYGLMPICFNVPHCMZXAKKFOZSH", "QKSJPTJTHSCNGWKJKKLBZAHRAYXDFAMZOFWRPNACWWYOZLURCQ", "RFYMVMHEQNEXIUAIJAGWGWMAVLRZMQHOJMJWBXUEACOKCPOGBD", "UJZKZGVLVBSXJTNEUZWOBEOPBMBKXTQRQYVDBEIGSBDQENCOJG", "FQDKEXYLDWMWTZDQBMKUJOAVWHBDGYXHSBBSYENLAKZPHOYNPM", "XCDLXXWFLRPIWGHRVRKHFUXXPKQOLDJQIHGCYTXQSJYHOFIHOX", "TTZEOMLZIYEGHDGNQNCPNXGXSOAGWXJJMHHDSKNQXURXMCSLRK", "ANGHLZVRDSVRAQCQCKDKTXNOMOBXBUKQYESDZOPARULBJEPTEB", "HCKVHBBASJXGOZGGAWEWQQBOXWZPITSPJRPAUOAOXJUNEWUXKB", "EUCBMTCIZBVOVHHTLRKPPSWCSPHQKBWBTVWMWBCEWYCTXTVLFR", "BSSUQLZQIBYAMBRTVOJYPOVJEIFVCTHSCWCWCZVFKFCGZBOWVG", "IQYJKAPBIRUXHIXZCCUPFASNQZRMAKQTMIDABLVXWVRHGYQUJH", "APOPDRWFULXLMUWEQMZBATEYGODZYWRCQCTKDWNGNLMKCNTXXC", "TQJFMGBGAXTSINTDUNAJQFZFUCZZZNHPTEXTDZTQCLALTFNNIM", "OIGGAWKBFSWFHGGFEGQXIFIVNSFKCTTRARHHQLECYKBHZRFOQM", "ZYOLMNEGLWLEPUFILGQPWXSSXTVRUHNAPUSWZFWPVHYXWJRFTD", "GFTCKBEKLFKIOIZZKGKNZEVXUYXPAHOYYXGLYMPVSYKAGUHLSN", "ZBJPXMOWSEEGZRUOZRKWNACXMFDAZILUXHBQJRVPBIKZGBBJFW"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {1122711068, 1307646064, 1117817076, 1042528884, 1070778420, 1209447556, 1150322496, 1222893244, 1116626960, 1135144792, 1093618100, 1303242608, 1093422856, 1034328056, 1279730164, 1124576104, 1218453200, 961839100, 1176426768, 972478744, 1121066932, 1002530800, 1199240072, 1235875128, 976926268, 1191218540};
    if(result == expected) {
        cout << "Test Case 69: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 69: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test70() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {1115363200, 1130472800, 1144208800, 1156571200, 1167560000, 1177175200, 1185416800, 1192284800, 1197779200, 1201900000, 1204647200, 1206020800, 1206020800, 1204647200, 1201900000, 1197779200, 1192284800, 1185416800, 1177175200, 1167560000, 1156571200, 1144208800, 1130472800, 1115363200, 1322090000, 0};
    if(result == expected) {
        cout << "Test Case 70: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 70: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test71() {
    vector<string> table = {"SAVXFOITWHHQURXQPTMFPSRPJKUXAITXNDBDYHWSXNFLBWQBWU", "UDFEYYHFOUTKTNMJCRPTRHVSGCMFOMTSAENPSJDCVSSCYNTQYQ", "UYKCDMHLXWMBPBBBJOAVPRNNXXOSTRHUGWRTHXBAIGLFPTDQBX", "EEQCACKWEEXNQFOQURJGSKNANJGIXDUWRVMDEEVOIKSVBTPFPX", "YKHTESQPNQVCXAJBVUSLLPUUWHRQYTSARYEJOWQSLOPFRGMSLY", "WUMDMIOMWWBYQTXUJXVYLYDYAWAPCQUYFYVXNOMVUCATRLXVHW", "VNVLNXQMDOIXKFCBTQWYHULYEIXJGNYDIFTGCSLWHAKWMWRTQP", "RGYHOACWHEYGFOPEOFLUYAFYRHJNMHQESQUREBPTDFLGWATVHI", "HMIUPRAYPHPOKAMUNOSWANOQQTNXCQMNGDYDVWADQFLIDOULSC", "LFCJHSXQDVDCWXUCIGAJXQNOFUCGNCXCEYFGKVUFFFSDAOHMNB", "GOKJDUQNDMQQCBWAWWRNQLKUDSXJOQMORMUJRTUKPWSINOCQGY", "QKTAJTDPGKVGXLACXPFMHDCHWTSCGOQGDOYCTRDAFCNKNIXGHL", "PLKSRNHMCPBBJRSPDJLXHFMFGFORTNULTTYEUJWLTHPMYDSVQW", "FOTJEJYFLLXPRNTOHOROTSLADAPYFDMSAVIFRJPOFOXKMEOBSJ", "VDDCDMDTFDSYYIYFOVFNWWYDIETAMYLOGVGIPXSVCXELVFOOLH", "PSVELXDASXRCGGRESDBPOPDILYSMGDOEOEISRCKIEPFTEAQWTQ", "LLNUSYOMSLFPSOIMMBXYLQRSKYKIEKHVSOQCQSLIDEIXCOVPLQ", "MPYTEUTTKSOGHHDJWDXFUTOOVHHTPVCUWMWRVXJVIVISTVVBTS", "QRRFUSAJXWMYENPTJUKKMXTBVYKVTYKGYVEJCRQDRMALJJRUCY", "MBQIGSXPIVIDOYMGYHIGQQDGSAWHRMHPTULIPQOLLMIUUOWBYC", "JJLVIUXKPGUQXVORITMEQIRWTEIHKDCVIOCWDXLPJEBIPUNMFC", "FCNTLBQNBEMQYLDXHISQOKIVULHJHYPUCHXAINCBGPVHDSFOEQ", "METNNTTQYATGGBNQOQMDPTFQKYNASBGRFPMKBNTDGQOCHYITSL", "ENBBBSXCDOGSWWTBBQOCPAWJVXEDIKPSGHWRPDNTMXJEWNSQIG", "XQFQUDPREDNUTRXMLPYBKWCUPRPRLIENTCMYNPLTBXYKGQERGJ", "CDQGUBNJADMWFVXYAQFYXUEFYMXROXNXLBGBVMHLKDPIHDRCLG", "QMLGLGYLHICVUBPNLEPWDMJTNUFUXUUUFIHAMEPYBJFXININRS", "RNLOCDDQRPBDNLNGQMSOBGNQUSHKLYLQCECGJQFEVUMYWXUSKB", "WVTDQLYUSIVSFREJAJIGWYGOSGTNSWXNYJCPWYMQHNWVIDOTUM", "WLJEDWOFKKQLCUKHTUPNMBVRYJCKGOQYRFALDTGEAQOBYUKCKA", "ITDGAVPRFTUEYUTRSWUYEYOLNVLTRDXAYFGVVLFDULOLIVRTHH", "CNGLVJEQSEKVABUUFSOWUHQQDRJCDRDRMJAJSMJVRERBSYLNQM", "PYFJLUWOIDACNBARJPAKBSJRFQOPXDGVLPBELCWFMDEFVPQQAA", "PUMFKWOMDUFGQEVDPWYVGGRUXWNDVPYXPWNLJGEEOYYCAGMYIR", "YSQETJDRHMIKQMVGPTQKTJRTGGHPTQKNTEQGGLCEHQYQUEILFS", "PRIXWPBVXMBNWPCTPLVOYEQMCCJAYCXVJBBRFVGAFKMOCTTIOB", "NVOQSKBVUTFAWVNFDVOJOTFUJORBJIIBLWNCGSHPQIBMUEMQBV", "PXTELSQSGDSYLLLEOAHLXKNXSGSRAFCAAMRJGGLULMMDWQVOAQ", "PMJOXFJVLFAXSBBSYYTBWHNMYLXKABJERJOPPKOMAJTFTNTLBE", "RWTXSIXWOMGXUKVVFJLKCNJGBNNIRLQMIVILJSQGRRUCFBNJJX", "HKYPBENNWFUPFDUTOYBJLMSFSJRGBYYDXTEGMRUEXVVLLCMRHL", "LOIALURSWQLGMWFQQLYNGWEVKPQGTQVAYONJUXHJOTUDSRJXFT", "KBSSEOKMPUDKYFTLGWJVVRDOYMBACSGRBYFUGGKXXIILFETPIH", "KLOIXRWDSRNJJVOKIYYYEALKXMJQJURKRUHTDSBNWDNSKNXLWT", "UUPIDKADKKIGTXYCRONTHOXLBBMSAJOXTOYWUIQWTAIPEQIOSI", "VJWDMFVEHCXGDAVKMEXCHIWQYGGIGKRWARNEAPBSAPBOYNWHTT", "EEQPAMLGDFXNWVKBFLMQJVCEBQGHRLJYOMFNFJQASTMUTMSFEX", "HKUCJIBLOJFEOQVYXKPVUVTLXPJHJNXBDSEXELCWLSUGTNFUYU", "OHOHCLQIETYTCALEBUMWTMISJBBMQJKNHNYPMUQSHVHHXRQTUP", "MJHCBCYUWAJDQTJKLNBUQFETOXEATRKHRBVAFEMWQQWPIEEMXN"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {991275600, 1077697688, 1025872164, 1210317172, 1123752164, 1146940808, 1211730104, 938159024, 1034250696, 1167498944, 946049920, 1383007136, 1253639932, 1182239376, 1283341296, 1197090908, 1417727888, 1196630156, 1209239696, 1366254800, 1251695532, 1190911848, 1093073968, 1216195328, 1366297852, 0};
    if(result == expected) {
        cout << "Test Case 71: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 71: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test72() {
    vector<string> table = {"ABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDE", "BCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEF", "CDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFG", "DEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGH", "EFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHI", "FGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIA", "GHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIAB", "HIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABC", "IABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCD", "ABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDE", "BCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEF", "CDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFG", "DEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGH", "EFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHI", "FGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIA", "GHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIAB", "HIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABC", "IABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCD", "ABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDE", "BCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEF", "CDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFG", "DEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGH", "EFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHI", "FGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIA", "GHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIAB", "HIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABC", "IABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCD", "ABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDE", "BCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEF", "CDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFG", "DEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGH", "EFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHI", "FGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIA", "GHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIAB", "HIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABC", "IABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCD", "ABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDE", "BCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEF", "CDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFG", "DEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGH", "EFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHI", "FGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIA", "GHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIAB", "HIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABC", "IABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCD", "ABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDE", "BCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEF", "CDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFG", "DEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGH", "EFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHIABCDEFGHI"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {3263289360, 3270287460, 3277245576, 3284143756, 3290957696, 3284143756, 3277245576, 3270287460, 3263289360, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 72: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 72: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test73() {
    vector<string> table = {"AABBAAC", "AABBAAA"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {7020, 3480, 700, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 73: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 73: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test74() {
    vector<string> table = {"ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY", "ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {1116050000, 1131846400, 1146269200, 1159318400, 1170994000, 1181296000, 1190224400, 1197779200, 1203960400, 1208768000, 1212202000, 1214262400, 1214949200, 1214262400, 1212202000, 1208768000, 1203960400, 1197779200, 1190224400, 1181296000, 1170994000, 1159318400, 1146269200, 1131846400, 1116050000, 0};
    if(result == expected) {
        cout << "Test Case 74: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 74: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test75() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {27763890000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 75: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 75: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test76() {
    vector<string> table = {"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {151280, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 76: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 76: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test77() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {27763890000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 77: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 77: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test78() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {5348748, 5422860, 10451448, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6472470944};
    if(result == expected) {
        cout << "Test Case 78: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 78: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test79() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {10538946000, 6813056000, 1696052600, 4185015800, 2491710400, 0, 2502699200, 1253410000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 79: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 79: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test80() {
    vector<string> table = {"WFAZYZAZOHSNGHCXSFUBSNSNWFUJELGTKDCPCRGJOXSDUHEHGL", "IBEZGRYZMPOLWNEPKPEBABGZGNQFYHOFKRITMFUDMZMZIRGRQD", "QTWBQFYXYNOJIJOXUVMNOPCBYLCVWFIZGLELUVKVITQXCREBSP", "KFEZCLCRSDAPSXKXUBQXYHWRWZMFIRQJOLOPGHWHAPUTSHWBSN", "CVOLYBCTATWTONQHQDUZKFCHIHYRYXCHERYXSTOXIRGPYRITKB", "WHOHCXOJWFGNMVQDMPQVOFUXUVUJWNOHGFMRODMVMZABMJIPKV", "OHQDWBINOJIHCLMLUHEHAVSXYVYVCTMDWHUFCHOVANILSPSNSP", "UVCLYTEDYDUHKPODUPWHYRQRMLERWTURQVOFOZGNWDCBKNWDAH", "KJOVGXUJGZSNEBYHKFMHILCHSVMLSVYHGNGVEFIFQJQRIDKBIF", "IRUNOBIVMNGPEHMHMHCXKTALQLGRSVCNQPUPARQXUXGFQZORQH", "IDSVALQHMDWBOZKRUNWHILQLALKTSLOHOLYVGXABANEFKFOZQB", "KXWPUBEXWXAZCXYDEHIJGZENALIHQZUJEFWVAFWTONUBQJEVQF", "UPEPWDAVAVWLCLEZYNQNUVGRCHGXIFSVCFMTMNEHCFILARINMJ", "QDYHWDCPUNYBCBUFQRWTMNEHULGDAHYTULWJSPYVYDGFSNGJUZ", "GBGBUNMDELQLWVQDSHELODYHONQXAZSRMTCLMZUTMXAZQZKHWN", "WFALUTYBGPKXAVQJSXUJMTKDATOPYLKLSZKFETWBYZUPADQJAP", "GVCXSXUNCHYHQTSVONSRIPQBOFSPMLKJEJAJKXQTKPUZOZGRKX", "KLQBGVYLUNWDADAHGTGZIVYHOZMZUDYTGDQVADELUJWLSNGTQT", "IFODUDADIPCVATUJSNGRODSHCFEBEHMRELINIDUNITCHMLIXQN", "SVIZOPQHOZCDCBWBYDQBYRGNYPATABSREBOZYXYZENIFKRWBWP", "YJQJMZEXOLOJQTUNKVCFYJKTCVWVCXSPGXKZOJGHSPMPSPSFCR", "EZGTCLSBADEBMNWDSVUBAJGBWDMFQZQLUTQLCLGJUJUXGRQHQX", "SLQVYFUNEPCRANOROXQDYDAXOFIHSBAJQBGFIBURKXGRIVODUV", "ABYBGHCNIFCTMTYLKVADGVGNCPODUVUTYJINOLYTYJSHEBWJWT", "QTIRGRCNQPWVGJEFELARSTILMDGNUPKBUNSBMVWPMXCPORSNON", "GRSNMXKJIPUZINYXYJIPEVYNQXGLWZKVQJSFABGRUJKNYZOXGH", "ULCXANETSVCHUDGZWVMHALWBKHSXEZQRIFYLKHGRMXAXOTWJWT", "ULILIHILQPEHSZWTCBYDENUVQDSTAJUJCNCDWZYHQLYPWVSVIX", "KVUHEZCDCNCJGBOFAPUNSFWJYFGHQPMFOPUPUTQVOHWBIJUDWP", "ANINYJKDSPCBUXCNMDCPYDYTENQBOTIFKZEVKDSVUPSJOZQDED", "EDSRAHIDATUFYJIHWVGJCJQHWXKZWNMDKBYZORMPCHQRMLABUF", "OLUNKBEBALILAZWDYLGNOZSPQDKPIJMTQTARSRUFMXUFCXYFCH", "WXARIVGJMHWNEJCFANYFKZAJOTOJMHAPCNELWXKZAXCHMFQBWT", "GBEZCBIPGHWJSDKPYJOBCNQDWTKFGXSHQBQZIVMXMXWREVODGZ", "ITSHUJEHSPENQZMFWXSLOFKVWJSBCNIXMFQLYTIPETWJSXEDIP", "ELYZYXQVYLOVKLQZOZKROVMZWVYBSLCDEHABOLINODKTKZCPOT", "SNYJOVEDIXWLORGHCXQBSZOJCPWJOVSPAXABUVSHULANQJEPQP", "CRWTCXEBERGJKXWJCZEPYDIJKPUNUBUTSPMPQVATGNQDEDIRKR", "YZGLWVYTWRMRYTWLSHUNYPWTABWNSPQVAVMTEVCPEFMXGJWFCT", "KPKHOLUDMBIDKPSBMPEPKXORQJYBMHQZMLSBKFCPIVGBUPWROB", "QHSXEXOLGXIFWDKFARMZKPUNSVYPOVAHILYFYROFGPSDWHOVUN", "GXQPQRWFMTSVMJYJKRWTUTCFSHYRUHCRCNIVSXSXSRIXUXIVMP", "WDUXUTCLCVAFGTEVIZCJIXWDENYRCDALWZINKLIPSDIDIXEBCN", "GFWZULIFIBWJQFOHGZCNOFQDEPMZOTKHQLEJYBKNIJGBSDCNWV", "QLSXENETWFQXOBCZIDQZKDSXWLKXYVMFEJMXEXARMTIVKROJER", "WJYXKNIHILETQJMHENUJWHKBGBEBGFSBIXYTMDCXEZEVIBMLWN", "WPWJSHWROLSVUZMNYNKLQHAHCPKFCVIBOTOPGHCXWZKLGVKJWJ", "QBMZYFEXIJEBCNOXQLAHYLOVIBWHCFCNCFAFQFKNKZKHKTAJAB", "YJUJYLOROZAZKDUFQPIVEHKLQHEVMHUTYZAXQFKXWZOXIPUDSN", "IHGHGXQJAJCFILUHMTOTKJQVSTOJUXQXITYPCHYPKBINGZKXYB"};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {1015340448, 1120012864, 1187575696, 1117724812, 1076851248, 1057135192, 1037984996, 1308598288, 1150422892, 1126108156, 1061463124, 1190979064, 1003954220, 1256913504, 1185372612, 1159605368, 1262290172, 916068388, 1160380828, 1063611236, 1207518592, 1197909048, 1211753692, 1183210068, 1179536480, 1042569012};
    if(result == expected) {
        cout << "Test Case 80: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 80: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test81() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {26114883200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    if(result == expected) {
        cout << "Test Case 81: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 81: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}

int test82() {
    vector<string> table = {};
    SubrectanglesOfTable* pObj = new SubrectanglesOfTable();
    clock_t start = clock();
    vector<long> result = pObj->getQuantity(table);
    clock_t end = clock();
    delete pObj;
    vector<long> expected = {1100709940, 1130472800, 1144208800, 1145481660, 1157152660, 1166833764, 1185416800, 1192284800, 1208120636, 1201900000, 1204647200, 1206020800, 1206020800, 1204647200, 1201900000, 1197779200, 1192284800, 1196506340, 1177175200, 1182213260, 1166978540, 1144208800, 1130472800, 1115363200, 661045000, 661045000};
    if(result == expected) {
        cout << "Test Case 82: Passed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 0;
    } else {
        cout << "Test Case 82: Failed! Time: " << static_cast<double>(end-start)/CLOCKS_PER_SEC << " seconds" << endl;
        return 1;
    }
}



int main(int argc, char* argv[]) {
    int passed = 0;
    int failed = 0;
    test0() == 0 ? ++passed : ++failed;
    test1() == 0 ? ++passed : ++failed;
    test2() == 0 ? ++passed : ++failed;
    test3() == 0 ? ++passed : ++failed;
    test4() == 0 ? ++passed : ++failed;
    test5() == 0 ? ++passed : ++failed;
    test6() == 0 ? ++passed : ++failed;
    test7() == 0 ? ++passed : ++failed;
    test8() == 0 ? ++passed : ++failed;
    test9() == 0 ? ++passed : ++failed;
    test10() == 0 ? ++passed : ++failed;
    test11() == 0 ? ++passed : ++failed;
    test12() == 0 ? ++passed : ++failed;
    test13() == 0 ? ++passed : ++failed;
    test14() == 0 ? ++passed : ++failed;
    test15() == 0 ? ++passed : ++failed;
    test16() == 0 ? ++passed : ++failed;
    test17() == 0 ? ++passed : ++failed;
    test18() == 0 ? ++passed : ++failed;
    test19() == 0 ? ++passed : ++failed;
    test20() == 0 ? ++passed : ++failed;
    test21() == 0 ? ++passed : ++failed;
    test22() == 0 ? ++passed : ++failed;
    test23() == 0 ? ++passed : ++failed;
    test24() == 0 ? ++passed : ++failed;
    test25() == 0 ? ++passed : ++failed;
    test26() == 0 ? ++passed : ++failed;
    test27() == 0 ? ++passed : ++failed;
    test28() == 0 ? ++passed : ++failed;
    test29() == 0 ? ++passed : ++failed;
    test30() == 0 ? ++passed : ++failed;
    test31() == 0 ? ++passed : ++failed;
    test32() == 0 ? ++passed : ++failed;
    test33() == 0 ? ++passed : ++failed;
    test34() == 0 ? ++passed : ++failed;
    test35() == 0 ? ++passed : ++failed;
    test36() == 0 ? ++passed : ++failed;
    test37() == 0 ? ++passed : ++failed;
    test38() == 0 ? ++passed : ++failed;
    test39() == 0 ? ++passed : ++failed;
    test40() == 0 ? ++passed : ++failed;
    test41() == 0 ? ++passed : ++failed;
    test42() == 0 ? ++passed : ++failed;
    test43() == 0 ? ++passed : ++failed;
    test44() == 0 ? ++passed : ++failed;
    test45() == 0 ? ++passed : ++failed;
    test46() == 0 ? ++passed : ++failed;
    test47() == 0 ? ++passed : ++failed;
    test48() == 0 ? ++passed : ++failed;
    test49() == 0 ? ++passed : ++failed;
    test50() == 0 ? ++passed : ++failed;
    test51() == 0 ? ++passed : ++failed;
    test52() == 0 ? ++passed : ++failed;
    test53() == 0 ? ++passed : ++failed;
    test54() == 0 ? ++passed : ++failed;
    test55() == 0 ? ++passed : ++failed;
    test56() == 0 ? ++passed : ++failed;
    test57() == 0 ? ++passed : ++failed;
    test58() == 0 ? ++passed : ++failed;
    test59() == 0 ? ++passed : ++failed;
    test60() == 0 ? ++passed : ++failed;
    test61() == 0 ? ++passed : ++failed;
    test62() == 0 ? ++passed : ++failed;
    test63() == 0 ? ++passed : ++failed;
    test64() == 0 ? ++passed : ++failed;
    test65() == 0 ? ++passed : ++failed;
    test66() == 0 ? ++passed : ++failed;
    test67() == 0 ? ++passed : ++failed;
    test68() == 0 ? ++passed : ++failed;
    test69() == 0 ? ++passed : ++failed;
    test70() == 0 ? ++passed : ++failed;
    test71() == 0 ? ++passed : ++failed;
    test72() == 0 ? ++passed : ++failed;
    test73() == 0 ? ++passed : ++failed;
    test74() == 0 ? ++passed : ++failed;
    test75() == 0 ? ++passed : ++failed;
    test76() == 0 ? ++passed : ++failed;
    test77() == 0 ? ++passed : ++failed;
    test78() == 0 ? ++passed : ++failed;
    test79() == 0 ? ++passed : ++failed;
    test80() == 0 ? ++passed : ++failed;
    test81() == 0 ? ++passed : ++failed;
    test82() == 0 ? ++passed : ++failed;
    cout << "Total Test Case: " << passed + failed << "; Passed: " << passed << "; Failed: " << failed << endl;
    return failed == 0 ? 0 : 1;
}

/*******************************************************************************
*    Top Submission URL: 
*    http://community.topcoder.com/stat?c=problem_solution&cr=263396&rd=13520&pm=10246
********************************************************************************
#include <sstream>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <string.h>
#include <ctype.h>
#include <math.h>
using namespace std;
#define foreach(i,c)for(__typeof((c).end())i=(c).begin();i!=(c).end();++i)
 
class SubrectanglesOfTable {
  public:
  vector<long long> getQuantity(vector <string> table) {
    int m = table.size();
    int n = table[0].size();
    vector< long long > ans( 26, 0 );
    for( int i = 0; i < m + m; i++ ) for( int j = 0; j < n + n; j++ )
      ans[table[i % m][j % n] - 'A'] += ( i + 1 ) * ( j + 1 ) * ( m + m - i ) * ( n + n - j );
    return ans;
  }
};
 
// Powered by PopsEdit

********************************************************************************
*******************************************************************************/